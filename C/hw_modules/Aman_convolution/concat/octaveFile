pkg load image;
dims = zeros(1,3);
dims_k = zeros(1,4);
pad = input("");
pool = input("");
shift_val = input("");
scale_val = input("");
CT = input("");
for i = 1:3
  dims(4-i) = input("");
  dims_k(4 - mod(i,3)) = input("");
end
dims_k(1) = dims(1);
T = zeros(dims);
K = zeros(dims_k);

input_size = prod(dims);
for i = 1:input_size
  T(i) = input("");
end

T1 = reshape(T(1:input_size/2),[dims(1)/2,dims(2),dims(3)]);
T2 = reshape(T((input_size/2)+1:input_size),[dims(1)/2,dims(2),dims(3)]);
T = [T1;T2];

input_size = prod(dims_k);
for i = 1:input_size
  K(i) = input("");
end
%T = reshape(T,dims);

if (CT==1)
tmp_val = zeros(dims(1),(pad+1)*dims(2)+pad,(pad+1)*dims(3)+pad);
tmp_val(:,pad+1:pad:(pad+1)*dims(2),pad+1:pad:(pad+1)*dims(3)) = T;
T = tmp_val;
dims = size(dims);
else
T = padarray(T,[0,pad,pad]);
end
K = reshape(K,dims_k);
out_dims = [dims_k(4),dims(2)+2*pad-dims_k(2)+1,dims(3)+2*pad-dims_k(3)+1];

printf("Size of output is ");
if (pool == 0)
for i = 1:3
  printf("%d ",out_dims(4-i));
end
printf("\n");
endif;
count = 1;
relu = 1;
for row = 1:out_dims(3)
  for col = 1:out_dims(2)
    for chl = 1:out_dims(1)
      val = mod(sum(floor((T(:,col:col+dims_k(2)-1,row:row+dims_k(3)-1).*K(:,:,:,chl))/256)(:)),2**16);
      if (val > 2**15 - 1)
	if (relu == 1)
	val = 0;
	endif
      endif
      val = floor(val*scale_val/(2**shift_val));
      val = mod(val,2**8);
      if (val > 2**7 - 1)
	val = val - 2**8; 
      endif
      if (pool == 0) printf("%d %d\n",count,val);endif
      count = count + 1;
	B(chl,col,row) = val;
    end
  end
end

if (pool == 1)
out_dims(3) /= 2;
out_dims(2) /= 2;

for i = 1:3
  printf("%d ",out_dims(4-i));
end
printf("\n");

count = 1;
for row = 1:(out_dims(3))
  for col = 1:(out_dims(2))
	for chl = 1:out_dims(1)
	  val = max(max(B(chl,2*col-1:2*col,2*row-1:2*row)));
	  printf("%d %d\n",count,val);
	  count = count + 1;
	end
  end
end
endif;
