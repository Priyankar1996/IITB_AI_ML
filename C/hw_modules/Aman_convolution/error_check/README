Sample testcase of the system showing errors during accumulation

{} - Denotes regex
<> - Denotes variable use, iterate over it for all possible values

Flow of data: There are 384 PEs - resulting in mul_val_<i>_<k>_<j>

Accumulation occurs over mul_val_<i>_{1-8}_<j> to get t_acc_val_<i>_<j>
t_acc_val_<i>_{1-3} is accumulated to form acc_val<i>_1, which is then sent to acc_pipe1_<i>
t_acc_val_<i>_{4-6} is accumulated ro form acc_val<i>_2, which is then sent to acc_pipe2_<i>


Testcase

It involves convolution of 4*6*2 input to get a 2*4*1 output

Based on the above
i belongs to {1}
k belongs to {1,2}
j will span the whole range, i.e. {1,2,3,4,5,6}

Also, t_acc_val_1_<j> can be probed using pipe my_pipe1_<j>
