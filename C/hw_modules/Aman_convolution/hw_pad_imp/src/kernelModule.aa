// Load the kernel channel into the kernel pipes

$module [loadKernel]
$in (chl_in chl_out rk ck : $uint<16> index : $uint<8>)
$out ()
$is
{
	row_size := (chl_in*ck)
	chl_size := (row_size * rk)
	mode_3 := (rk == 3)
	$parallelblock[k_block]
	{
		$call kernelDataFetcher1 (0 row_size chl_size chl_out) ()
		$call kernelDataFetcher2 (($bitcast ($uint<32>) row_size) row_size chl_size chl_out) ()
		$guard (mode_3) $call kernelDataFetcher3 (($bitcast ($uint<32>) (row_size<<1)) row_size chl_size chl_out) ()
		$call loadKernel_in1 (chl_in chl_out rk ck index) ()
		$call loadKernel_in2 (chl_in chl_out rk ck index) ()
		$guard (mode_3) $call loadKernel_in3 (chl_in chl_out rk ck index) ()
	}
}

#define num 1
#include kernelInner.aa
#define num 2
#include kernelInner.aa
#define num 3
#include kernelInner.aa
