// Aa code produced by llvm2aa (version 1.0)
$record [structx_x__SizedTensorDescriptor] < structx_x__TensorDescriptor > < $uint<32> > 
$record [structx_x__SizedTensor_16K] < structx_x__SizedTensorDescriptor > < $array [16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor] < $uint<32> > < $uint<8> > < $uint<32> > < $array [64] $of $uint<32> > 
$pipe elapsed_time_pipe : $uint<64> $depth 1
$pipe zeropad_input_pipe : $uint<16> $depth 2
$pipe zeropad_output_pipe : $uint<16> $depth 2
$storage R:structx_x__SizedTensor_16K
$storage T:structx_x__SizedTensor_16K
$storage pad:$uint<16>
$module [progx_xoptx_xo_storage_initializer_] $in () $out () $is 
{
  $null
  $attribute initializer
}
$module [sendOutputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp3 := ->(arrayidx) 
    conv := ($cast ($uint<16>) tmp3)
    zeropad_output_pipe := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sendOutputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody9_forx_xcond
    $phi indvar23 :=  ( $cast ($uint<64>) indvarx_xnext24) $on forx_xbody9_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    tmp2 := (indvar23 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep3 := iNsTr_2[tmp2]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep3)
    iNsTr_3 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316 := ->(iNsTr_3) 
    // compare instruction
    cmp17 := (tmp316 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17 $then  $place [forx_xcond_forx_xbody9] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp316 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xop := (tmp316 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_8 := ($cast ($uint<64>) tmp3x_xop)
    xx_xop := (iNsTr_8 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x018 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp5 := ->(arrayidx) 
    mul := (tmp5 * num_elemsx_x018)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp22 )
    $if exitcond1 $then  $place [forx_xbody_forx_xend] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xend 
    $endmerge
    // compare instruction
    phitmp := (mulx_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmp $then  $place [forx_xend_forx_xend15] $else $place [forx_xend_forx_xbody9] $endif 
    //begin: basic-block forx_xbody9
    $merge forx_xcond_forx_xbody9 forx_xend_forx_xbody9
    $endmerge
    // load 
    tmp11 := ->(addx_xptr) 
    zeropad_output_pipe := tmp11
    indvarx_xnext24 := (indvar23 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody9_forx_xcond]
    //begin: basic-block forx_xend15
    $merge forx_xend_forx_xend15
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    call := zeropad_input_pipe
    conv := ($cast ($uint<32>) call)
    ->(arrayidx) := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody13_forx_xcond
    $phi indvar26 :=  ( $cast ($uint<64>) indvarx_xnext27) $on forx_xbody13_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    ix_x0 := ($cast ($uint<32>) indvar26)
    tmp3 := (indvar26 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep4 := iNsTr_2[tmp3]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep4)
    iNsTr_3 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619 := ->(iNsTr_3) 
    // compare instruction
    cmp20 := (tmp619 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20 $then  $place [forx_xcond_forx_xend] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp619 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xop := (tmp619 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := ($cast ($uint<64>) tmp6x_xop)
    xx_xop := (iNsTr_6 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x021 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp8 := ->(arrayidx) 
    mul := (tmp8 * num_elemsx_x021)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp25 )
    $if exitcond1 $then  $place [forx_xbody_forx_xendx_xloopexit] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge forx_xcond_forx_xend forx_xendx_xloopexit_forx_xend
    $phi num_elemsx_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcond_forx_xend ( $cast ($uint<32>) mulx_xlcssa) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    // compare instruction
    cmp12 := ( ($bitcast ( $int<32>) ix_x0) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssa ) )
    $if cmp12 $then  $place [forx_xend_forx_xbody13] $else $place [forx_xend_forx_xend18] $endif 
    //begin: basic-block forx_xbody13
    $merge forx_xend_forx_xbody13
    $endmerge
    call := zeropad_input_pipe
    ->(addx_xptr) := call
    indvarx_xnext27 := (indvar26 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody13_forx_xcond]
    //begin: basic-block forx_xend18
    $merge forx_xend_forx_xend18
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getpad] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := zeropad_input_pipe
    pad := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $storage dest2_alloc : structx_x__SizedTensor_16K
    dest2 := @(dest2_alloc)
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [entry_forx_xbodyx_xi]
    //begin: basic-block forx_xbodyx_xi
    $merge entry_forx_xbodyx_xi forx_xbodyx_xi_forx_xbodyx_xi
    $phi indvarx_xi :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xbodyx_xi ( $cast ($uint<64>) tmp596) $on forx_xbodyx_xi_forx_xbodyx_xi 
    $endmerge
    arrayidxx_xi := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi])
    tmp211 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi := ($cast ($uint<32>) tmp211)
    tmp596 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    callx_xi := zeropad_input_pipe
    convx_xi := ($cast ($uint<32>) callx_xi)
    ->(arrayidxx_xi) := convx_xi
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi := ->(iNsTr_9) 
    // compare instruction
    cmpx_xi := (incx_xi < tmp1x_xi )
    $if cmpx_xi $then  $place [forx_xbodyx_xi_forx_xbodyx_xi] $else $place [forx_xbodyx_xi_forx_xcondx_xix_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xix_xpreheader
    $merge forx_xbodyx_xi_forx_xcondx_xix_xpreheader
    $phi tmp1x_xix_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi) $on forx_xbodyx_xi_forx_xcondx_xix_xpreheader 
    $endmerge
    $place [forx_xcondx_xix_xpreheader_forx_xcondx_xi]
    //begin: basic-block forx_xcondx_xi
    $merge forx_xbody13x_xi_forx_xcondx_xi forx_xcondx_xix_xpreheader_forx_xcondx_xi
    $phi tmp619x_xi :=  ( $cast ($uint<32>) tmp619x_xix_xpr) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<32>) tmp1x_xix_xlcssa) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $phi indvar26x_xi :=  ( $cast ($uint<64>) indvarx_xnext27x_xi) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $endmerge
    tmp208 := (indvar26x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_12 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_13 := ($bitcast ($pointer< $uint<8> >) iNsTr_12)
    uglygep := iNsTr_13[tmp208]
    addx_xptrx_xi := ($bitcast ($pointer< $uint<16> >) uglygep)
    ix_x0x_xi := ($cast ($uint<32>) indvar26x_xi)
    // compare instruction
    cmp20x_xi := (tmp619x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20x_xi $then  $place [forx_xcondx_xi_forx_xendx_xi] $else $place [forx_xcondx_xi_bbx_xnphx_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge forx_xcondx_xi_bbx_xnphx_xi
    $endmerge
    // compare instruction
    tmpx_xi328 := (tmp619x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xopx_xi := (tmp619x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_17 := ($cast ($uint<64>) tmp6x_xopx_xi)
    xx_xopx_xi := (iNsTr_17 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25x_xi := ( $mux tmpx_xi328 xx_xopx_xi ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi_forx_xbodyx_xi331]
    //begin: basic-block forx_xbodyx_xi331
    $merge bbx_xnphx_xi_forx_xbodyx_xi331 forx_xbodyx_xi331_forx_xbodyx_xi331
    $phi indvarx_xi329 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi331 ( $cast ($uint<64>) indvarx_xnextx_xi) $on forx_xbodyx_xi331_forx_xbodyx_xi331 
    $phi num_elemsx_x021x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi331 ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi331_forx_xbodyx_xi331 
    $endmerge
    arrayidxx_xi330 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi329])
    // load 
    tmp8x_xi := ->(arrayidxx_xi330) 
    mulx_xi := (tmp8x_xi * num_elemsx_x021x_xi)
    indvarx_xnextx_xi := (indvarx_xi329 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond207 := (indvarx_xnextx_xi == tmp25x_xi )
    $if exitcond207 $then  $place [forx_xbodyx_xi331_forx_xendx_xix_xloopexit] $else $place [forx_xbodyx_xi331_forx_xbodyx_xi331] $endif 
    //begin: basic-block forx_xendx_xix_xloopexit
    $merge forx_xbodyx_xi331_forx_xendx_xix_xloopexit
    $phi mulx_xix_xlcssa :=  ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi331_forx_xendx_xix_xloopexit 
    $endmerge
    $place [forx_xendx_xix_xloopexit_forx_xendx_xi]
    //begin: basic-block forx_xendx_xi
    $merge forx_xcondx_xi_forx_xendx_xi forx_xendx_xix_xloopexit_forx_xendx_xi
    $phi num_elemsx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcondx_xi_forx_xendx_xi ( $cast ($uint<32>) mulx_xix_xlcssa) $on forx_xendx_xix_xloopexit_forx_xendx_xi 
    $endmerge
    // compare instruction
    cmp12x_xi := ( ($bitcast ( $int<32>) ix_x0x_xi) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssax_xi ) )
    callx_xi332 := zeropad_input_pipe
    $if cmp12x_xi $then  $place [forx_xendx_xi_forx_xbody13x_xi] $else $place [forx_xendx_xi_getInputDatax_xexit] $endif 
    //begin: basic-block forx_xbody13x_xi
    $merge forx_xendx_xi_forx_xbody13x_xi
    $endmerge
    ->(addx_xptrx_xi) := callx_xi332
    indvarx_xnext27x_xi := (indvar26x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_20 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619x_xix_xpr := ->(iNsTr_20) 
    $place [forx_xbody13x_xi_forx_xcondx_xi]
    //begin: basic-block getInputDatax_xexit
    $merge forx_xendx_xi_getInputDatax_xexit
    $phi callx_xi332x_xlcssa :=  ( $cast ($uint<16>) callx_xi332) $on forx_xendx_xi_getInputDatax_xexit 
    $endmerge
    pad := callx_xi332x_xlcssa
    $call timer ()  (call)
    conv :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call) )
    iNsTr_23 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp := ->(iNsTr_23) 
    iNsTr_24 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp2 := ->(iNsTr_24) 
    iNsTr_25 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp4 := ->(iNsTr_25) 
    tmp8 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(tmp8) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    tmp11 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(tmp11) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    iNsTr_28 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp12 := ->(iNsTr_28) 
    arrayidx := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    ->(arrayidx) := tmp12
    iNsTr_30 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp16 := ->(iNsTr_30) 
    arrayidx20 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    ->(arrayidx20) := tmp16
    iNsTr_32 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp21 := ->(iNsTr_32) 
    arrayidx25 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    ->(arrayidx25) := tmp21
    tmp28 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(tmp28) := ( $bitcast ($uint<8> ) _b00000001 ) 
    mul := (tmp16 * tmp12)
    mul32 := (mul * tmp21)
    tmp34 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(tmp34) := mul32
    // compare instruction
    cmp388 := ( ($bitcast ( $int<32>) tmp) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if cmp388 $then  $place [getInputDatax_xexit_bbx_xnph390] $else $place [getInputDatax_xexit_getInputDatax_xexitx_xforx_xend171_crit_edge] $endif 
    //begin: basic-block getInputDatax_xexitx_xforx_xend171_crit_edge
    $merge getInputDatax_xexit_getInputDatax_xexitx_xforx_xend171_crit_edge
    $endmerge
    // load 
    tmp175x_xpre := pad
    $place [getInputDatax_xexitx_xforx_xend171_crit_edge_forx_xend171]
    //begin: basic-block bbx_xnph390
    $merge getInputDatax_xexit_bbx_xnph390
    $endmerge
    // compare instruction
    cmp57385 := ( ($bitcast ( $int<32>) tmp2) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    cmp63382 := ( ($bitcast ( $int<32>) tmp4) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // load 
    tmp96 := pad
    tmp172 := (tmp2 * tmp4)
    tmp178 := (tmp4 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp180 := (tmp2 * tmp4)
    tmp181 := (tmp180 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp185 := ($cast ($uint<32>) tmp96)
    tmp186 := (tmp185 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp187 := (tmp + tmp186)
    tmp188 := (tmp2 + tmp186)
    tmp189 := (tmp187 * tmp188)
    tmp190 := (tmp189 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp192 := (tmp187 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp195 := (tmp185 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp196 := (tmp + tmp195)
    tmp197 := (tmp196 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp201 := (tmp187 * tmp188)
    $place [bbx_xnph390_forx_xcond54x_xpreheader]
    //begin: basic-block forx_xcond54x_xpreheader
    $merge bbx_xnph390_forx_xcond54x_xpreheader forx_xinc168_forx_xcond54x_xpreheader
    $phi ix_x0389 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph390_forx_xcond54x_xpreheader ( $cast ($uint<32>) inc170) $on forx_xinc168_forx_xcond54x_xpreheader 
    $endmerge
    tmp173 := (tmp172 * ix_x0389)
    tmp182 := (tmp181 * ix_x0389)
    tmp194 := (ix_x0389 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp198 := (tmp197 + tmp194)
    tmp204 := (tmp196 + ix_x0389)
    cmp57385x_xnot := (cmp57385 ^ ( $bitcast ($uint<1> ) _b1 ) )
    cmp63382x_xnot := (cmp63382 ^ ( $bitcast ($uint<1> ) _b1 ) )
    brmerge := (cmp57385x_xnot | cmp63382x_xnot)
    $if brmerge $then  $place [forx_xcond54x_xpreheader_forx_xinc168] $else $place [forx_xcond54x_xpreheader_bbx_xnph384x_xusx_xpreheader] $endif 
    //begin: basic-block bbx_xnph384x_xusx_xpreheader
    $merge forx_xcond54x_xpreheader_bbx_xnph384x_xusx_xpreheader
    $endmerge
    $place [bbx_xnph384x_xusx_xpreheader_bbx_xnph384x_xus]
    //begin: basic-block forx_xinc164x_xus
    $merge forx_xbody65x_xus_forx_xinc164x_xus
    $endmerge
    inc166x_xus := (jx_x0386x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond134 := (inc166x_xus == tmp2 )
    $if exitcond134 $then  $place [forx_xinc164x_xus_forx_xinc168x_xloopexit] $else $place [forx_xinc164x_xus_bbx_xnph384x_xus] $endif 
    //begin: basic-block forx_xbody65x_xus
    $merge bbx_xnph384x_xus_forx_xbody65x_xus forx_xbody65x_xus_forx_xbody65x_xus
    $phi kx_x0383x_xus :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph384x_xus_forx_xbody65x_xus ( $cast ($uint<32>) inc163x_xus) $on forx_xbody65x_xus_forx_xbody65x_xus 
    $endmerge
    add75x_xus := (tmp174 + kx_x0383x_xus)
    tmp177 := (kx_x0383x_xus * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    subx_xus := (tmp183 + tmp177)
    tmp191 := (tmp190 * kx_x0383x_xus)
    sub132x_xus := (tmp199 + tmp191)
    tmp202 := (tmp201 * kx_x0383x_xus)
    add126x_xus := (tmp205 + tmp202)
    shrx_xus :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add75x_xus) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxpromx_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shrx_xus) )
    arrayidx78x_xus := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxpromx_xus])
    // load 
    tmp79x_xus := ->(arrayidx78x_xus) 
    mul91x_xus := (subx_xus & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_promx_xus := ($cast ($uint<64>) mul91x_xus)
    shr92x_xus := (tmp79x_xus >> sh_promx_xus)
    shr135x_xus :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add126x_xus) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom136x_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr135x_xus) )
    arrayidx138x_xus := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom136x_xus]
    // load 
    tmp139x_xus := ->(arrayidx138x_xus) 
    sext327x_xus := (shr92x_xus << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv141x_xus :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sext327x_xus) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 )  )))
    mul144x_xus := (sub132x_xus & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom145x_xus := ($cast ($uint<64>) mul144x_xus)
    shlx_xus := (conv141x_xus << sh_prom145x_xus)
    orx_xus := (shlx_xus | tmp139x_xus)
    ->(arrayidx138x_xus) := orx_xus
    inc163x_xus := (kx_x0383x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond98 := (inc163x_xus == tmp4 )
    $if exitcond98 $then  $place [forx_xbody65x_xus_forx_xinc164x_xus] $else $place [forx_xbody65x_xus_forx_xbody65x_xus] $endif 
    //begin: basic-block bbx_xnph384x_xus
    $merge bbx_xnph384x_xusx_xpreheader_bbx_xnph384x_xus forx_xinc164x_xus_bbx_xnph384x_xus
    $phi jx_x0386x_xus :=  ( $cast ($uint<32>) inc166x_xus) $on forx_xinc164x_xus_bbx_xnph384x_xus ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph384x_xusx_xpreheader_bbx_xnph384x_xus 
    $endmerge
    tmp171 := (tmp4 * jx_x0386x_xus)
    tmp174 := (tmp173 + tmp171)
    tmp179 := (tmp178 * jx_x0386x_xus)
    tmp183 := (tmp182 + tmp179)
    tmp193 := (tmp192 * jx_x0386x_xus)
    tmp199 := (tmp198 + tmp193)
    tmp203 := (tmp187 * jx_x0386x_xus)
    tmp205 := (tmp204 + tmp203)
    $place [bbx_xnph384x_xus_forx_xbody65x_xus]
    //begin: basic-block forx_xinc168x_xloopexit
    $merge forx_xinc164x_xus_forx_xinc168x_xloopexit
    $endmerge
    $place [forx_xinc168x_xloopexit_forx_xinc168]
    //begin: basic-block forx_xinc168
    $merge forx_xcond54x_xpreheader_forx_xinc168 forx_xinc168x_xloopexit_forx_xinc168
    $endmerge
    inc170 := (ix_x0389 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond170 := (inc170 == tmp )
    $if exitcond170 $then  $place [forx_xinc168_forx_xend171x_xloopexit] $else $place [forx_xinc168_forx_xcond54x_xpreheader] $endif 
    //begin: basic-block forx_xend171x_xloopexit
    $merge forx_xinc168_forx_xend171x_xloopexit
    $endmerge
    $place [forx_xend171x_xloopexit_forx_xend171]
    //begin: basic-block forx_xend171
    $merge forx_xend171x_xloopexit_forx_xend171 getInputDatax_xexitx_xforx_xend171_crit_edge_forx_xend171
    $phi tmp175 :=  ( $cast ($uint<16>) tmp175x_xpre) $on getInputDatax_xexitx_xforx_xend171_crit_edge_forx_xend171 ( $cast ($uint<16>) tmp96) $on forx_xend171x_xloopexit_forx_xend171 
    $endmerge
    conv201373 := ($cast ($uint<32>) tmp175)
    mul202374 := (conv201373 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add203375 := (mul202374 + tmp)
    // compare instruction
    cmp204376 := ( ($bitcast ( $int<32>) add203375) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if cmp204376 $then  $place [forx_xend171_bbx_xnph381] $else $place [forx_xend171_forx_xend314] $endif 
    //begin: basic-block bbx_xnph381
    $merge forx_xend171_bbx_xnph381
    $endmerge
    add215366 := (mul202374 + tmp2)
    // compare instruction
    cmp216367 := ( ($bitcast ( $int<32>) add215366) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    cmp222360 := ( ($bitcast ( $int<32>) tmp4) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    tmp9 := ($cast ($uint<32>) tmp175)
    tmp10 := (tmp9 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp13 := (tmp2 + tmp10)
    // compare instruction
    tmp14 := ( ($bitcast ( $int<32>) tmp13) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax15 := ( $mux tmp14 tmp13 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp47 := ($cast ($uint<32>) tmp175)
    tmp48 := (tmp47 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp49 := (tmp2 + tmp48)
    // compare instruction
    tmp50 := ( ($bitcast ( $int<32>) tmp49) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax51 := ( $mux tmp50 tmp49 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp52 := (tmp4 * smax51)
    tmp73 := (tmp4 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp78 := ($cast ($uint<32>) tmp175)
    tmp79 := (tmp78 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp80 := (tmp + tmp79)
    // compare instruction
    tmp81 := ( ($bitcast ( $int<32>) tmp80) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax := ( $mux tmp81 tmp80 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp83 := (tmp2 + tmp79)
    tmp84 := (tmp80 * tmp83)
    tmp89 := (tmp80 * tmp83)
    tmp90 := (tmp89 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    tmp92 := (tmp80 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnph381_forx_xcond209x_xpreheader]
    //begin: basic-block forx_xcond209x_xpreheader
    $merge bbx_xnph381_forx_xcond209x_xpreheader forx_xinc311_forx_xcond209x_xpreheader
    $phi indexx_x2380 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph381_forx_xcond209x_xpreheader ( $cast ($uint<32>) indexx_x1x_xlcssa) $on forx_xinc311_forx_xcond209x_xpreheader 
    $phi ix_x1377 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph381_forx_xcond209x_xpreheader ( $cast ($uint<32>) inc313) $on forx_xinc311_forx_xcond209x_xpreheader 
    $endmerge
    tmp94 := (ix_x1377 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $if cmp216367 $then  $place [forx_xcond209x_xpreheader_bbx_xnph370] $else $place [forx_xcond209x_xpreheader_forx_xinc311] $endif 
    //begin: basic-block bbx_xnph370
    $merge forx_xcond209x_xpreheader_bbx_xnph370
    $endmerge
    $if cmp222360 $then  $place [bbx_xnph370_bbx_xnphx_xusx_xpreheader] $else $place [bbx_xnph370_forx_xinc307x_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xusx_xpreheader
    $merge bbx_xnph370_bbx_xnphx_xusx_xpreheader
    $endmerge
    tmp75 := (indexx_x2380 * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    $place [bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus]
    //begin: basic-block forx_xinc307x_xpreheader
    $merge bbx_xnph370_forx_xinc307x_xpreheader
    $endmerge
    $place [forx_xinc307x_xpreheader_forx_xinc307]
    //begin: basic-block forx_xinc307x_xus
    $merge forx_xbody224x_xus_forx_xinc307x_xus
    $endmerge
    inc309x_xus := (jx_x1368x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond54 := (inc309x_xus == smax51 )
    $if exitcond54 $then  $place [forx_xinc307x_xus_forx_xinc311x_xloopexit46] $else $place [forx_xinc307x_xus_bbx_xnphx_xus] $endif 
    //begin: basic-block forx_xbody224x_xus
    $merge bbx_xnphx_xus_forx_xbody224x_xus forx_xbody224x_xus_forx_xbody224x_xus
    $phi kx_x1361x_xus :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xus_forx_xbody224x_xus ( $cast ($uint<32>) inc305x_xus) $on forx_xbody224x_xus_forx_xbody224x_xus 
    $endmerge
    tmp85 := (tmp84 * kx_x1361x_xus)
    add237x_xus := (tmp87 + tmp85)
    tmp91 := (tmp90 * kx_x1361x_xus)
    sub252x_xus := (tmp95 + tmp91)
    indexx_x0362x_xus := (tmp70 + kx_x1361x_xus)
    tmp72 := (kx_x1361x_xus * ( $bitcast ($uint<32> ) _b00000000000000000000000000010000 ) )
    sub273x_xus := (tmp76 + tmp72)
    shr241x_xus :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add237x_xus) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom242x_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr241x_xus) )
    arrayidx244x_xus := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom242x_xus]
    // load 
    tmp245x_xus := ->(arrayidx244x_xus) 
    mul261x_xus := (sub252x_xus & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom262x_xus := ($cast ($uint<64>) mul261x_xus)
    shr263x_xus := (tmp245x_xus >> sh_prom262x_xus)
    shr276x_xus :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) indexx_x0362x_xus) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom277x_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr276x_xus) )
    arrayidx278x_xus := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom277x_xus])
    // load 
    tmp279x_xus := ->(arrayidx278x_xus) 
    sextx_xus := (shr263x_xus << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv281x_xus :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sextx_xus) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 )  )))
    mul284x_xus := (sub273x_xus & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom285x_xus := ($cast ($uint<64>) mul284x_xus)
    shl286x_xus := (conv281x_xus << sh_prom285x_xus)
    or287x_xus := (shl286x_xus | tmp279x_xus)
    ->(arrayidx278x_xus) := or287x_xus
    inc305x_xus := (kx_x1361x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond16 := (inc305x_xus == tmp4 )
    $if exitcond16 $then  $place [forx_xbody224x_xus_forx_xinc307x_xus] $else $place [forx_xbody224x_xus_forx_xbody224x_xus] $endif 
    //begin: basic-block bbx_xnphx_xus
    $merge bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus forx_xinc307x_xus_bbx_xnphx_xus
    $phi jx_x1368x_xus :=  ( $cast ($uint<32>) inc309x_xus) $on forx_xinc307x_xus_bbx_xnphx_xus ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus 
    $endmerge
    tmp86 := (tmp80 * jx_x1368x_xus)
    tmp87 := (ix_x1377 + tmp86)
    tmp93 := (tmp92 * jx_x1368x_xus)
    tmp95 := (tmp94 + tmp93)
    tmp69 := (tmp4 * jx_x1368x_xus)
    tmp70 := (indexx_x2380 + tmp69)
    tmp74 := (tmp73 * jx_x1368x_xus)
    tmp76 := (tmp75 + tmp74)
    $place [bbx_xnphx_xus_forx_xbody224x_xus]
    //begin: basic-block forx_xinc307
    $merge forx_xinc307_forx_xinc307 forx_xinc307x_xpreheader_forx_xinc307
    $phi jx_x1368 :=  ( $cast ($uint<32>) inc309) $on forx_xinc307_forx_xinc307 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xinc307x_xpreheader_forx_xinc307 
    $endmerge
    inc309 := (jx_x1368 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (inc309 == smax15 )
    $if exitcond $then  $place [forx_xinc307_forx_xinc311x_xloopexit] $else $place [forx_xinc307_forx_xinc307] $endif 
    //begin: basic-block forx_xinc311x_xloopexit
    $merge forx_xinc307_forx_xinc311x_xloopexit
    $endmerge
    $place [forx_xinc311x_xloopexit_forx_xinc311]
    //begin: basic-block forx_xinc311x_xloopexit46
    $merge forx_xinc307x_xus_forx_xinc311x_xloopexit46
    $endmerge
    tmp53 := (tmp52 + indexx_x2380)
    $place [forx_xinc311x_xloopexit46_forx_xinc311]
    //begin: basic-block forx_xinc311
    $merge forx_xcond209x_xpreheader_forx_xinc311 forx_xinc311x_xloopexit_forx_xinc311 forx_xinc311x_xloopexit46_forx_xinc311
    $phi indexx_x1x_xlcssa :=  ( $cast ($uint<32>) indexx_x2380) $on forx_xcond209x_xpreheader_forx_xinc311 ( $cast ($uint<32>) indexx_x2380) $on forx_xinc311x_xloopexit_forx_xinc311 ( $cast ($uint<32>) tmp53) $on forx_xinc311x_xloopexit46_forx_xinc311 
    $endmerge
    inc313 := (ix_x1377 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond82 := (inc313 == smax )
    $if exitcond82 $then  $place [forx_xinc311_forx_xend314x_xloopexit] $else $place [forx_xinc311_forx_xcond209x_xpreheader] $endif 
    //begin: basic-block forx_xend314x_xloopexit
    $merge forx_xinc311_forx_xend314x_xloopexit
    $endmerge
    $place [forx_xend314x_xloopexit_forx_xend314]
    //begin: basic-block forx_xend314
    $merge forx_xend171_forx_xend314 forx_xend314x_xloopexit_forx_xend314
    $endmerge
    $call timer ()  (call316)
    conv317 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call316) )
    sub321 := (conv317 - conv)
    elapsed_time_pipe := sub321
    iNsTr_48 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_48) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_50 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_50) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_52 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_52) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [forx_xend314_forx_xbodyx_xi342]
    //begin: basic-block forx_xbodyx_xi342
    $merge forx_xbodyx_xi342_forx_xbodyx_xi342 forx_xend314_forx_xbodyx_xi342
    $phi indvarx_xi335 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xend314_forx_xbodyx_xi342 ( $cast ($uint<64>) tmp393) $on forx_xbodyx_xi342_forx_xbodyx_xi342 
    $endmerge
    arrayidxx_xi336 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi335])
    tmp6 := (indvarx_xi335 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi339 := ($cast ($uint<32>) tmp6)
    tmp393 := (indvarx_xi335 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // load 
    tmp3x_xi := ->(arrayidxx_xi336) 
    convx_xi337 := ($cast ($uint<16>) tmp3x_xi)
    zeropad_output_pipe := convx_xi337
    iNsTr_60 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi340 := ->(iNsTr_60) 
    // compare instruction
    cmpx_xi341 := (incx_xi339 < tmp1x_xi340 )
    $if cmpx_xi341 $then  $place [forx_xbodyx_xi342_forx_xbodyx_xi342] $else $place [forx_xbodyx_xi342_forx_xcondx_xi347x_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xi347x_xpreheader
    $merge forx_xbodyx_xi342_forx_xcondx_xi347x_xpreheader
    $phi tmp1x_xi340x_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi340) $on forx_xbodyx_xi342_forx_xcondx_xi347x_xpreheader 
    $endmerge
    $place [forx_xcondx_xi347x_xpreheader_forx_xcondx_xi347]
    //begin: basic-block forx_xcondx_xi347
    $merge forx_xbody9x_xi_forx_xcondx_xi347 forx_xcondx_xi347x_xpreheader_forx_xcondx_xi347
    $phi tmp316x_xi :=  ( $cast ($uint<32>) tmp316x_xix_xpr) $on forx_xbody9x_xi_forx_xcondx_xi347 ( $cast ($uint<32>) tmp1x_xi340x_xlcssa) $on forx_xcondx_xi347x_xpreheader_forx_xcondx_xi347 
    $phi indvar23x_xi :=  ( $cast ($uint<64>) indvarx_xnext24x_xi) $on forx_xbody9x_xi_forx_xcondx_xi347 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xi347x_xpreheader_forx_xcondx_xi347 
    $endmerge
    tmp3 := (indvar23x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_71 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_72 := ($bitcast ($pointer< $uint<8> >) iNsTr_71)
    uglygep4 := iNsTr_72[tmp3]
    addx_xptrx_xi346 := ($bitcast ($pointer< $uint<16> >) uglygep4)
    // compare instruction
    cmp17x_xi := (tmp316x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17x_xi $then  $place [forx_xcondx_xi347_forx_xbody9x_xi] $else $place [forx_xcondx_xi347_bbx_xnphx_xi350] $endif 
    //begin: basic-block bbx_xnphx_xi350
    $merge forx_xcondx_xi347_bbx_xnphx_xi350
    $endmerge
    // compare instruction
    tmpx_xi348 := (tmp316x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xopx_xi := (tmp316x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_81 := ($cast ($uint<64>) tmp3x_xopx_xi)
    xx_xopx_xi349 := (iNsTr_81 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22x_xi := ( $mux tmpx_xi348 xx_xopx_xi349 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi350_forx_xbodyx_xi356]
    //begin: basic-block forx_xbodyx_xi356
    $merge bbx_xnphx_xi350_forx_xbodyx_xi356 forx_xbodyx_xi356_forx_xbodyx_xi356
    $phi indvarx_xi351 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi350_forx_xbodyx_xi356 ( $cast ($uint<64>) indvarx_xnextx_xi354) $on forx_xbodyx_xi356_forx_xbodyx_xi356 
    $phi num_elemsx_x018x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi350_forx_xbodyx_xi356 ( $cast ($uint<32>) mulx_xi353) $on forx_xbodyx_xi356_forx_xbodyx_xi356 
    $endmerge
    arrayidxx_xi352 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi351])
    // load 
    tmp5x_xi := ->(arrayidxx_xi352) 
    mulx_xi353 := (tmp5x_xi * num_elemsx_x018x_xi)
    indvarx_xnextx_xi354 := (indvarx_xi351 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi354 == tmp22x_xi )
    $if exitcond1 $then  $place [forx_xbodyx_xi356_forx_xendx_xi357] $else $place [forx_xbodyx_xi356_forx_xbodyx_xi356] $endif 
    //begin: basic-block forx_xendx_xi357
    $merge forx_xbodyx_xi356_forx_xendx_xi357
    $phi mulx_xi353x_xlcssa :=  ( $cast ($uint<32>) mulx_xi353) $on forx_xbodyx_xi356_forx_xendx_xi357 
    $endmerge
    // compare instruction
    phitmpx_xi := (mulx_xi353x_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmpx_xi $then  $place [forx_xendx_xi357_sendOutputDatax_xexit] $else $place [forx_xendx_xi357_forx_xbody9x_xi] $endif 
    //begin: basic-block forx_xbody9x_xi
    $merge forx_xcondx_xi347_forx_xbody9x_xi forx_xendx_xi357_forx_xbody9x_xi
    $endmerge
    // load 
    tmp11x_xi := ->(addx_xptrx_xi346) 
    zeropad_output_pipe := tmp11x_xi
    indvarx_xnext24x_xi := (indvar23x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_79 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316x_xix_xpr := ->(iNsTr_79) 
    $place [forx_xbody9x_xi_forx_xcondx_xi347]
    //begin: basic-block sendOutputDatax_xexit
    $merge forx_xendx_xi357_sendOutputDatax_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
