// Aa code produced by llvm2aa (version 1.0)
$record [structx_x__SizedTensorDescriptor] < structx_x__TensorDescriptor > < $uint<32> > 
$record [structx_x__SizedTensor_16K] < structx_x__SizedTensorDescriptor > < $array [16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor] < $uint<32> > < $uint<8> > < $uint<32> > < $array [64] $of $uint<32> > 
$pipe elapsed_time_pipe : $uint<64> $depth 1
$pipe zeropad_input_pipe : $uint<16> $depth 2
$pipe zeropad_output_pipe : $uint<16> $depth 2
$storage R:structx_x__SizedTensor_16K
$storage T:structx_x__SizedTensor_16K
$storage pad:$uint<16>
$module [progx_xoptx_xo_storage_initializer_] $in () $out () $is 
{
  $null
  $attribute initializer
}
$module [sendOutputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp3 := ->(arrayidx) 
    conv := ($cast ($uint<16>) tmp3)
    zeropad_output_pipe := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sendOutputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody9_forx_xcond
    $phi indvar23 :=  ( $cast ($uint<64>) indvarx_xnext24) $on forx_xbody9_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    tmp2 := (indvar23 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep3 := iNsTr_2[tmp2]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep3)
    iNsTr_3 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316 := ->(iNsTr_3) 
    // compare instruction
    cmp17 := (tmp316 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17 $then  $place [forx_xcond_forx_xbody9] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp316 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xop := (tmp316 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_8 := ($cast ($uint<64>) tmp3x_xop)
    xx_xop := (iNsTr_8 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x018 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp5 := ->(arrayidx) 
    mul := (tmp5 * num_elemsx_x018)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp22 )
    $if exitcond1 $then  $place [forx_xbody_forx_xend] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xend 
    $endmerge
    // compare instruction
    phitmp := (mulx_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmp $then  $place [forx_xend_forx_xend15] $else $place [forx_xend_forx_xbody9] $endif 
    //begin: basic-block forx_xbody9
    $merge forx_xcond_forx_xbody9 forx_xend_forx_xbody9
    $endmerge
    // load 
    tmp11 := ->(addx_xptr) 
    zeropad_output_pipe := tmp11
    indvarx_xnext24 := (indvar23 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody9_forx_xcond]
    //begin: basic-block forx_xend15
    $merge forx_xend_forx_xend15
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    call := zeropad_input_pipe
    conv := ($cast ($uint<32>) call)
    ->(arrayidx) := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody13_forx_xcond
    $phi indvar26 :=  ( $cast ($uint<64>) indvarx_xnext27) $on forx_xbody13_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    ix_x0 := ($cast ($uint<32>) indvar26)
    tmp3 := (indvar26 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep4 := iNsTr_2[tmp3]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep4)
    iNsTr_3 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619 := ->(iNsTr_3) 
    // compare instruction
    cmp20 := (tmp619 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20 $then  $place [forx_xcond_forx_xend] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp619 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xop := (tmp619 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := ($cast ($uint<64>) tmp6x_xop)
    xx_xop := (iNsTr_6 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x021 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp8 := ->(arrayidx) 
    mul := (tmp8 * num_elemsx_x021)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp25 )
    $if exitcond1 $then  $place [forx_xbody_forx_xendx_xloopexit] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge forx_xcond_forx_xend forx_xendx_xloopexit_forx_xend
    $phi num_elemsx_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcond_forx_xend ( $cast ($uint<32>) mulx_xlcssa) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    // compare instruction
    cmp12 := ( ($bitcast ( $int<32>) ix_x0) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssa ) )
    $if cmp12 $then  $place [forx_xend_forx_xbody13] $else $place [forx_xend_forx_xend18] $endif 
    //begin: basic-block forx_xbody13
    $merge forx_xend_forx_xbody13
    $endmerge
    call := zeropad_input_pipe
    ->(addx_xptr) := call
    indvarx_xnext27 := (indvar26 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody13_forx_xcond]
    //begin: basic-block forx_xend18
    $merge forx_xend_forx_xend18
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getpad] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := zeropad_input_pipe
    pad := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $storage img_index_alloc : $array [3] $of $uint<32>
    $storage dest_index_alloc : $array [3] $of $uint<32>
    $storage img_index1_alloc : $array [3] $of $uint<32>
    $storage dest_index1_alloc : $array [3] $of $uint<32>
    $storage img_index2_alloc : $array [3] $of $uint<32>
    $storage dest_index2_alloc : $array [3] $of $uint<32>
    img_index := @(img_index_alloc)
    dest_index := @(dest_index_alloc)
    img_index1 := @(img_index1_alloc)
    dest_index1 := @(dest_index1_alloc)
    img_index2 := @(img_index2_alloc)
    dest_index2 := @(dest_index2_alloc)
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [entry_forx_xbodyx_xi]
    //begin: basic-block forx_xbodyx_xi
    $merge entry_forx_xbodyx_xi forx_xbodyx_xi_forx_xbodyx_xi
    $phi indvarx_xi :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xbodyx_xi ( $cast ($uint<64>) tmp861) $on forx_xbodyx_xi_forx_xbodyx_xi 
    $endmerge
    arrayidxx_xi := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi])
    tmp79 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi := ($cast ($uint<32>) tmp79)
    tmp861 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    callx_xi := zeropad_input_pipe
    convx_xi := ($cast ($uint<32>) callx_xi)
    ->(arrayidxx_xi) := convx_xi
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi := ->(iNsTr_9) 
    // compare instruction
    cmpx_xi := (incx_xi < tmp1x_xi )
    $if cmpx_xi $then  $place [forx_xbodyx_xi_forx_xbodyx_xi] $else $place [forx_xbodyx_xi_forx_xcondx_xix_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xix_xpreheader
    $merge forx_xbodyx_xi_forx_xcondx_xix_xpreheader
    $phi tmp1x_xix_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi) $on forx_xbodyx_xi_forx_xcondx_xix_xpreheader 
    $endmerge
    $place [forx_xcondx_xix_xpreheader_forx_xcondx_xi]
    //begin: basic-block forx_xcondx_xi
    $merge forx_xbody13x_xi_forx_xcondx_xi forx_xcondx_xix_xpreheader_forx_xcondx_xi
    $phi tmp619x_xi :=  ( $cast ($uint<32>) tmp619x_xix_xpr) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<32>) tmp1x_xix_xlcssa) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $phi indvar26x_xi :=  ( $cast ($uint<64>) indvarx_xnext27x_xi) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $endmerge
    tmp75 := (indvar26x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_12 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_13 := ($bitcast ($pointer< $uint<8> >) iNsTr_12)
    uglygep := iNsTr_13[tmp75]
    addx_xptrx_xi := ($bitcast ($pointer< $uint<16> >) uglygep)
    ix_x0x_xi := ($cast ($uint<32>) indvar26x_xi)
    // compare instruction
    cmp20x_xi := (tmp619x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20x_xi $then  $place [forx_xcondx_xi_forx_xendx_xi] $else $place [forx_xcondx_xi_bbx_xnphx_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge forx_xcondx_xi_bbx_xnphx_xi
    $endmerge
    // compare instruction
    tmpx_xi665 := (tmp619x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xopx_xi := (tmp619x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_17 := ($cast ($uint<64>) tmp6x_xopx_xi)
    xx_xopx_xi := (iNsTr_17 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25x_xi := ( $mux tmpx_xi665 xx_xopx_xi ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi_forx_xbodyx_xi668]
    //begin: basic-block forx_xbodyx_xi668
    $merge bbx_xnphx_xi_forx_xbodyx_xi668 forx_xbodyx_xi668_forx_xbodyx_xi668
    $phi indvarx_xi666 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi668 ( $cast ($uint<64>) indvarx_xnextx_xi) $on forx_xbodyx_xi668_forx_xbodyx_xi668 
    $phi num_elemsx_x021x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi668 ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi668_forx_xbodyx_xi668 
    $endmerge
    arrayidxx_xi667 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi666])
    // load 
    tmp8x_xi := ->(arrayidxx_xi667) 
    mulx_xi := (tmp8x_xi * num_elemsx_x021x_xi)
    indvarx_xnextx_xi := (indvarx_xi666 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond74 := (indvarx_xnextx_xi == tmp25x_xi )
    $if exitcond74 $then  $place [forx_xbodyx_xi668_forx_xendx_xix_xloopexit] $else $place [forx_xbodyx_xi668_forx_xbodyx_xi668] $endif 
    //begin: basic-block forx_xendx_xix_xloopexit
    $merge forx_xbodyx_xi668_forx_xendx_xix_xloopexit
    $phi mulx_xix_xlcssa :=  ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi668_forx_xendx_xix_xloopexit 
    $endmerge
    $place [forx_xendx_xix_xloopexit_forx_xendx_xi]
    //begin: basic-block forx_xendx_xi
    $merge forx_xcondx_xi_forx_xendx_xi forx_xendx_xix_xloopexit_forx_xendx_xi
    $phi num_elemsx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcondx_xi_forx_xendx_xi ( $cast ($uint<32>) mulx_xix_xlcssa) $on forx_xendx_xix_xloopexit_forx_xendx_xi 
    $endmerge
    // compare instruction
    cmp12x_xi := ( ($bitcast ( $int<32>) ix_x0x_xi) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssax_xi ) )
    callx_xi669 := zeropad_input_pipe
    $if cmp12x_xi $then  $place [forx_xendx_xi_forx_xbody13x_xi] $else $place [forx_xendx_xi_getInputDatax_xexit] $endif 
    //begin: basic-block forx_xbody13x_xi
    $merge forx_xendx_xi_forx_xbody13x_xi
    $endmerge
    ->(addx_xptrx_xi) := callx_xi669
    indvarx_xnext27x_xi := (indvar26x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_20 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619x_xix_xpr := ->(iNsTr_20) 
    $place [forx_xbody13x_xi_forx_xcondx_xi]
    //begin: basic-block getInputDatax_xexit
    $merge forx_xendx_xi_getInputDatax_xexit
    $phi callx_xi669x_xlcssa :=  ( $cast ($uint<16>) callx_xi669) $on forx_xendx_xi_getInputDatax_xexit 
    $endmerge
    pad := callx_xi669x_xlcssa
    $call timer ()  (call)
    conv :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call) )
    iNsTr_23 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp := ->(iNsTr_23) 
    iNsTr_24 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp2 := ->(iNsTr_24) 
    iNsTr_25 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp4 := ->(iNsTr_25) 
    // compare instruction
    cmp759 := ( ($bitcast ( $int<32>) tmp) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if cmp759 $then  $place [getInputDatax_xexit_bbx_xnph761] $else $place [getInputDatax_xexit_forx_xend648] $endif 
    //begin: basic-block bbx_xnph761
    $merge getInputDatax_xexit_bbx_xnph761
    $endmerge
    // compare instruction
    cmp14756 := ( ($bitcast ( $int<32>) tmp2) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    cmp20753 := ( ($bitcast ( $int<32>) tmp4) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    xx_xarray := img_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray25 := img_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray27 := img_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    xx_xarray30 := dest_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray34 := dest_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray39 := dest_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    xx_xarray211 := img_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray213 := img_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray215 := img_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    xx_xarray219 := dest_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray224 := dest_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray229 := dest_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    xx_xarray425 := img_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray427 := img_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray429 := img_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    xx_xarray433 := dest_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    xx_xarray438 := dest_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    xx_xarray443 := dest_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    $place [bbx_xnph761_forx_xcond11x_xpreheader]
    //begin: basic-block forx_xcond11x_xpreheader
    $merge bbx_xnph761_forx_xcond11x_xpreheader forx_xinc645_forx_xcond11x_xpreheader
    $phi iNsTr_39 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph761_forx_xcond11x_xpreheader ( $cast ($uint<32>) inc647) $on forx_xinc645_forx_xcond11x_xpreheader 
    $endmerge
    $if cmp14756 $then  $place [forx_xcond11x_xpreheader_forx_xcond17x_xpreheaderx_xpreheader] $else $place [forx_xcond11x_xpreheader_forx_xinc645] $endif 
    //begin: basic-block forx_xcond17x_xpreheaderx_xpreheader
    $merge forx_xcond11x_xpreheader_forx_xcond17x_xpreheaderx_xpreheader
    $endmerge
    $place [forx_xcond17x_xpreheaderx_xpreheader_forx_xcond17x_xpreheader]
    //begin: basic-block forx_xcond17x_xpreheader
    $merge forx_xcond17x_xpreheaderx_xpreheader_forx_xcond17x_xpreheader forx_xend641_forx_xcond17x_xpreheader
    $phi iNsTr_48 :=  ( $cast ($uint<32>) inc) $on forx_xend641_forx_xcond17x_xpreheader ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xcond17x_xpreheaderx_xpreheader_forx_xcond17x_xpreheader 
    $endmerge
    $if cmp20753 $then  $place [forx_xcond17x_xpreheader_bbx_xnph755] $else $place [forx_xcond17x_xpreheader_forx_xend641] $endif 
    //begin: basic-block bbx_xnph755
    $merge forx_xcond17x_xpreheader_bbx_xnph755
    $endmerge
    // load 
    tmp32 := pad
    iNsTr_54 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    // load 
    tmp46 := ->(iNsTr_54) 
    // compare instruction
    tobool := (tmp46 == ( $bitcast ($uint<8> ) _b00000000 )  )
    // compare instruction
    tobool62 := ( ($bitcast ( $int<8>) tmp46) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000000 )  ) )
    cond66 := ( $mux tobool62 ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp17 := ($cast ($uint<64>) cond66)
    tmp22 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond66) )
    tmp36 := ($cast ($uint<64>) cond66)
    tmp41 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond66) )
    tmp56 := ($cast ($uint<64>) cond66)
    tmp61 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond66) )
    tmp69 := ($cast ($uint<32>) tmp32)
    add38 := (iNsTr_48 + tmp69)
    tmp72 := ($cast ($uint<32>) tmp32)
    add := (iNsTr_39 + tmp72)
    $place [bbx_xnph755_forx_xbody22]
    //begin: basic-block forx_xbody22
    $merge bbx_xnph755_forx_xbody22 forx_xend578_forx_xbody22
    $phi indvar836 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph755_forx_xbody22 ( $cast ($uint<32>) indvarx_xnext837) $on forx_xend578_forx_xbody22 
    $endmerge
    kx_x0754 := (indvar836 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    add640 := (kx_x0754 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    add445 := (kx_x0754 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    add231 := (kx_x0754 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    ->(xx_xarray) := iNsTr_39
    ->(xx_xarray25) := iNsTr_48
    ->(xx_xarray27) := kx_x0754
    ->(xx_xarray30) := add
    ->(xx_xarray34) := add38
    ->(xx_xarray39) := kx_x0754
    iNsTr_70 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp55 := ->(iNsTr_70) 
    sub56 := (tmp55 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub56 := ( $mux tobool ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub56)
    sub56x_x := ( $mux tobool sub56 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    add72713 := (cond66 + sub56x_x)
    // compare instruction
    cmp73714 := (xx_xsub56 == add72713 )
    $if cmp73714 $then  $place [forx_xbody22_forx_xend] $else $place [forx_xbody22_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xbody22_bbx_xnph
    $endmerge
    tmp772 := (cond66 + xx_xsub56)
    tmp58 := ($cast ($uint<64>) tmp772)
    tmp63 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub56) )
    $place [bbx_xnph_forx_xbody75]
    //begin: basic-block forx_xbody75
    $merge bbx_xnph_forx_xbody75 forx_xbody75_forx_xbody75
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody75 ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody75_forx_xbody75 
    $phi ret_valuex_x0717 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody75 ( $cast ($uint<32>) add80) $on forx_xbody75_forx_xbody75 
    $phi SCALE_FACTORx_x0715 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody75 ( $cast ($uint<32>) mul86) $on forx_xbody75_forx_xbody75 
    $endmerge
    tmp57 := (tmp56 * indvar)
    tmp59 := (tmp58 + tmp57)
    add89 := ($cast ($uint<32>) tmp59)
    tmp62 := (tmp61 * indvar)
    tmp64 := (tmp63 + tmp62)
    arrayidx83 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp64])
    arrayidx := img_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp64]
    // load 
    tmp78 := ->(arrayidx) 
    mul := (tmp78 * SCALE_FACTORx_x0715)
    add80 := (mul + ret_valuex_x0717)
    // load 
    tmp84 := ->(arrayidx83) 
    mul86 := (tmp84 * SCALE_FACTORx_x0715)
    // compare instruction
    cmp73 := (add89 == add72713 )
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp73 $then  $place [forx_xbody75_forx_xendx_xloopexit] $else $place [forx_xbody75_forx_xbody75] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody75_forx_xendx_xloopexit
    $phi add80x_xlcssa :=  ( $cast ($uint<32>) add80) $on forx_xbody75_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge forx_xbody22_forx_xend forx_xendx_xloopexit_forx_xend
    $phi ret_valuex_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xbody22_forx_xend ( $cast ($uint<32>) add80x_xlcssa) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    iNsTr_74 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    // load 
    tmp100 := ->(iNsTr_74) 
    // compare instruction
    tobool102 := (tmp100 == ( $bitcast ($uint<8> ) _b00000000 )  )
    iNsTr_75 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp116x_xpre := ->(iNsTr_75) 
    sub117 := (tmp116x_xpre + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub117 := ( $mux tobool102 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub117)
    sub117x_x := ( $mux tobool102 sub117 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    // compare instruction
    tobool124 := ( ($bitcast ( $int<8>) tmp100) !=   ($bitcast ( $int<8>) ( $bitcast ($uint<8> ) _b00000000 )  ) )
    cond128 := ( $mux tobool124 ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add134718 := (cond128 + sub117x_x)
    // compare instruction
    cmp135719 := (xx_xsub117 == add134718 )
    $if cmp135719 $then  $place [forx_xend_forx_xend156] $else $place [forx_xend_bbx_xnph723] $endif 
    //begin: basic-block bbx_xnph723
    $merge forx_xend_bbx_xnph723
    $endmerge
    tmp784 := (cond128 + xx_xsub117)
    tmp45 := ($cast ($uint<64>) cond128)
    tmp48 := ($cast ($uint<64>) tmp784)
    tmp51 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond128) )
    tmp53 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub117) )
    $place [bbx_xnph723_forx_xbody137]
    //begin: basic-block forx_xbody137
    $merge bbx_xnph723_forx_xbody137 forx_xbody137_forx_xbody137
    $phi indvar776 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph723_forx_xbody137 ( $cast ($uint<64>) indvarx_xnext777) $on forx_xbody137_forx_xbody137 
    $phi ret_value93x_x0722 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph723_forx_xbody137 ( $cast ($uint<32>) add145) $on forx_xbody137_forx_xbody137 
    $phi SCALE_FACTOR97x_x0720 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph723_forx_xbody137 ( $cast ($uint<32>) mul151) $on forx_xbody137_forx_xbody137 
    $endmerge
    tmp47 := (tmp45 * indvar776)
    tmp49 := (tmp48 + tmp47)
    add155 := ($cast ($uint<32>) tmp49)
    tmp52 := (tmp51 * indvar776)
    tmp54 := (tmp53 + tmp52)
    arrayidx148 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp54])
    arrayidx141 := dest_index[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp54]
    // load 
    tmp142 := ->(arrayidx141) 
    mul143 := (tmp142 * SCALE_FACTOR97x_x0720)
    add145 := (mul143 + ret_value93x_x0722)
    // load 
    tmp149 := ->(arrayidx148) 
    mul151 := (tmp149 * SCALE_FACTOR97x_x0720)
    // compare instruction
    cmp135 := (add155 == add134718 )
    indvarx_xnext777 := (indvar776 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp135 $then  $place [forx_xbody137_forx_xend156x_xloopexit] $else $place [forx_xbody137_forx_xbody137] $endif 
    //begin: basic-block forx_xend156x_xloopexit
    $merge forx_xbody137_forx_xend156x_xloopexit
    $phi add145x_xlcssa :=  ( $cast ($uint<32>) add145) $on forx_xbody137_forx_xend156x_xloopexit 
    $endmerge
    $place [forx_xend156x_xloopexit_forx_xend156]
    //begin: basic-block forx_xend156
    $merge forx_xend_forx_xend156 forx_xend156x_xloopexit_forx_xend156
    $phi ret_value93x_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xend_forx_xend156 ( $cast ($uint<32>) add145x_xlcssa) $on forx_xend156x_xloopexit_forx_xend156 
    $endmerge
    shr :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_valuex_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom160 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr) )
    arrayidx161 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom160])
    // load 
    tmp162 := ->(arrayidx161) 
    sub168 := (ret_valuex_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul175 := (sub168 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom := ($cast ($uint<64>) mul175)
    shr176 := (tmp162 >> sh_prom)
    shr187 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_value93x_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom188 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr187) )
    arrayidx189 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom188])
    // load 
    tmp190 := ->(arrayidx189) 
    sext := (shr176 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv192 :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sext) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 )  )))
    sub184 := (ret_value93x_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul195 := (sub184 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom196 := ($cast ($uint<64>) mul195)
    shl := (conv192 << sh_prom196)
    or := (shl | tmp190)
    ->(arrayidx189) := or
    ->(xx_xarray211) := iNsTr_39
    ->(xx_xarray213) := iNsTr_48
    ->(xx_xarray215) := add231
    ->(xx_xarray219) := add
    ->(xx_xarray224) := add38
    ->(xx_xarray229) := add231
    sub258 := (tmp55 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub258 := ( $mux tobool ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub258)
    sub258x_x := ( $mux tobool sub258 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    add275725 := (cond66 + sub258x_x)
    // compare instruction
    cmp276726 := (xx_xsub258 == add275725 )
    $if cmp276726 $then  $place [forx_xend156_forx_xend297] $else $place [forx_xend156_bbx_xnph730] $endif 
    //begin: basic-block bbx_xnph730
    $merge forx_xend156_bbx_xnph730
    $endmerge
    tmp796 := (cond66 + xx_xsub258)
    tmp38 := ($cast ($uint<64>) tmp796)
    tmp43 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub258) )
    $place [bbx_xnph730_forx_xbody278]
    //begin: basic-block forx_xbody278
    $merge bbx_xnph730_forx_xbody278 forx_xbody278_forx_xbody278
    $phi indvar788 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph730_forx_xbody278 ( $cast ($uint<64>) indvarx_xnext789) $on forx_xbody278_forx_xbody278 
    $phi SCALE_FACTOR238x_x0729 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph730_forx_xbody278 ( $cast ($uint<32>) mul292) $on forx_xbody278_forx_xbody278 
    $phi ret_value234x_x0727 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph730_forx_xbody278 ( $cast ($uint<32>) add286) $on forx_xbody278_forx_xbody278 
    $endmerge
    tmp37 := (tmp36 * indvar788)
    tmp39 := (tmp38 + tmp37)
    add296 := ($cast ($uint<32>) tmp39)
    tmp42 := (tmp41 * indvar788)
    tmp44 := (tmp43 + tmp42)
    arrayidx289 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp44])
    arrayidx282 := img_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp44]
    // load 
    tmp283 := ->(arrayidx282) 
    mul284 := (tmp283 * SCALE_FACTOR238x_x0729)
    add286 := (mul284 + ret_value234x_x0727)
    // load 
    tmp290 := ->(arrayidx289) 
    mul292 := (tmp290 * SCALE_FACTOR238x_x0729)
    // compare instruction
    cmp276 := (add296 == add275725 )
    indvarx_xnext789 := (indvar788 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp276 $then  $place [forx_xbody278_forx_xend297x_xloopexit] $else $place [forx_xbody278_forx_xbody278] $endif 
    //begin: basic-block forx_xend297x_xloopexit
    $merge forx_xbody278_forx_xend297x_xloopexit
    $phi add286x_xlcssa :=  ( $cast ($uint<32>) add286) $on forx_xbody278_forx_xend297x_xloopexit 
    $endmerge
    $place [forx_xend297x_xloopexit_forx_xend297]
    //begin: basic-block forx_xend297
    $merge forx_xend156_forx_xend297 forx_xend297x_xloopexit_forx_xend297
    $phi ret_value234x_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xend156_forx_xend297 ( $cast ($uint<32>) add286x_xlcssa) $on forx_xend297x_xloopexit_forx_xend297 
    $endmerge
    iNsTr_90 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp324x_xpre := ->(iNsTr_90) 
    sub325 := (tmp324x_xpre + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub325 := ( $mux tobool102 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub325)
    sub325x_x := ( $mux tobool102 sub325 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    add342732 := (cond128 + sub325x_x)
    // compare instruction
    cmp343733 := (xx_xsub325 == add342732 )
    $if cmp343733 $then  $place [forx_xend297_forx_xend364] $else $place [forx_xend297_bbx_xnph737] $endif 
    //begin: basic-block bbx_xnph737
    $merge forx_xend297_bbx_xnph737
    $endmerge
    tmp808 := (cond128 + xx_xsub325)
    tmp26 := ($cast ($uint<64>) cond128)
    tmp28 := ($cast ($uint<64>) tmp808)
    tmp31 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond128) )
    tmp34 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub325) )
    $place [bbx_xnph737_forx_xbody345]
    //begin: basic-block forx_xbody345
    $merge bbx_xnph737_forx_xbody345 forx_xbody345_forx_xbody345
    $phi indvar800 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph737_forx_xbody345 ( $cast ($uint<64>) indvarx_xnext801) $on forx_xbody345_forx_xbody345 
    $phi SCALE_FACTOR305x_x0736 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph737_forx_xbody345 ( $cast ($uint<32>) mul359) $on forx_xbody345_forx_xbody345 
    $phi ret_value301x_x0734 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph737_forx_xbody345 ( $cast ($uint<32>) add353) $on forx_xbody345_forx_xbody345 
    $endmerge
    tmp27 := (tmp26 * indvar800)
    tmp29 := (tmp28 + tmp27)
    add363 := ($cast ($uint<32>) tmp29)
    tmp33 := (tmp31 * indvar800)
    tmp35 := (tmp34 + tmp33)
    arrayidx356 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp35])
    arrayidx349 := dest_index1[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp35]
    // load 
    tmp350 := ->(arrayidx349) 
    mul351 := (tmp350 * SCALE_FACTOR305x_x0736)
    add353 := (mul351 + ret_value301x_x0734)
    // load 
    tmp357 := ->(arrayidx356) 
    mul359 := (tmp357 * SCALE_FACTOR305x_x0736)
    // compare instruction
    cmp343 := (add363 == add342732 )
    indvarx_xnext801 := (indvar800 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp343 $then  $place [forx_xbody345_forx_xend364x_xloopexit] $else $place [forx_xbody345_forx_xbody345] $endif 
    //begin: basic-block forx_xend364x_xloopexit
    $merge forx_xbody345_forx_xend364x_xloopexit
    $phi add353x_xlcssa :=  ( $cast ($uint<32>) add353) $on forx_xbody345_forx_xend364x_xloopexit 
    $endmerge
    $place [forx_xend364x_xloopexit_forx_xend364]
    //begin: basic-block forx_xend364
    $merge forx_xend297_forx_xend364 forx_xend364x_xloopexit_forx_xend364
    $phi ret_value301x_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xend297_forx_xend364 ( $cast ($uint<32>) add353x_xlcssa) $on forx_xend364x_xloopexit_forx_xend364 
    $endmerge
    shr368 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_value234x_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom369 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr368) )
    arrayidx370 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom369])
    // load 
    tmp371 := ->(arrayidx370) 
    sub377 := (ret_value234x_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul385 := (sub377 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom386 := ($cast ($uint<64>) mul385)
    shr387 := (tmp371 >> sh_prom386)
    shr399 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_value301x_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom400 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr399) )
    arrayidx401 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom400])
    // load 
    tmp402 := ->(arrayidx401) 
    sext661 := (shr387 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv404 :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sext661) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 )  )))
    sub396 := (ret_value301x_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul407 := (sub396 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom408 := ($cast ($uint<64>) mul407)
    shl409 := (conv404 << sh_prom408)
    or410 := (shl409 | tmp402)
    ->(arrayidx401) := or410
    ->(xx_xarray425) := iNsTr_39
    ->(xx_xarray427) := iNsTr_48
    ->(xx_xarray429) := add445
    ->(xx_xarray433) := add
    ->(xx_xarray438) := add38
    ->(xx_xarray443) := add445
    sub472 := (tmp55 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub472 := ( $mux tobool ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub472)
    sub472x_x := ( $mux tobool sub472 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    add489739 := (cond66 + sub472x_x)
    // compare instruction
    cmp490740 := (xx_xsub472 == add489739 )
    $if cmp490740 $then  $place [forx_xend364_forx_xend511] $else $place [forx_xend364_bbx_xnph744] $endif 
    //begin: basic-block bbx_xnph744
    $merge forx_xend364_bbx_xnph744
    $endmerge
    tmp820 := (cond66 + xx_xsub472)
    tmp19 := ($cast ($uint<64>) tmp820)
    tmp24 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub472) )
    $place [bbx_xnph744_forx_xbody492]
    //begin: basic-block forx_xbody492
    $merge bbx_xnph744_forx_xbody492 forx_xbody492_forx_xbody492
    $phi indvar812 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph744_forx_xbody492 ( $cast ($uint<64>) indvarx_xnext813) $on forx_xbody492_forx_xbody492 
    $phi SCALE_FACTOR452x_x0743 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph744_forx_xbody492 ( $cast ($uint<32>) mul506) $on forx_xbody492_forx_xbody492 
    $phi ret_value448x_x0741 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph744_forx_xbody492 ( $cast ($uint<32>) add500) $on forx_xbody492_forx_xbody492 
    $endmerge
    tmp18 := (tmp17 * indvar812)
    tmp20 := (tmp19 + tmp18)
    add510 := ($cast ($uint<32>) tmp20)
    tmp23 := (tmp22 * indvar812)
    tmp25 := (tmp24 + tmp23)
    arrayidx503 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp25])
    arrayidx496 := img_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp25]
    // load 
    tmp497 := ->(arrayidx496) 
    mul498 := (tmp497 * SCALE_FACTOR452x_x0743)
    add500 := (mul498 + ret_value448x_x0741)
    // load 
    tmp504 := ->(arrayidx503) 
    mul506 := (tmp504 * SCALE_FACTOR452x_x0743)
    // compare instruction
    cmp490 := (add510 == add489739 )
    indvarx_xnext813 := (indvar812 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp490 $then  $place [forx_xbody492_forx_xend511x_xloopexit] $else $place [forx_xbody492_forx_xbody492] $endif 
    //begin: basic-block forx_xend511x_xloopexit
    $merge forx_xbody492_forx_xend511x_xloopexit
    $phi add500x_xlcssa :=  ( $cast ($uint<32>) add500) $on forx_xbody492_forx_xend511x_xloopexit 
    $endmerge
    $place [forx_xend511x_xloopexit_forx_xend511]
    //begin: basic-block forx_xend511
    $merge forx_xend364_forx_xend511 forx_xend511x_xloopexit_forx_xend511
    $phi ret_value448x_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xend364_forx_xend511 ( $cast ($uint<32>) add500x_xlcssa) $on forx_xend511x_xloopexit_forx_xend511 
    $endmerge
    iNsTr_106 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp538x_xpre := ->(iNsTr_106) 
    sub539 := (tmp538x_xpre + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    xx_xsub539 := ( $mux tobool102 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  sub539)
    sub539x_x := ( $mux tobool102 sub539 ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) )
    add556746 := (cond128 + sub539x_x)
    // compare instruction
    cmp557747 := (xx_xsub539 == add556746 )
    $if cmp557747 $then  $place [forx_xend511_forx_xend578] $else $place [forx_xend511_bbx_xnph751] $endif 
    //begin: basic-block bbx_xnph751
    $merge forx_xend511_bbx_xnph751
    $endmerge
    tmp832 := (cond128 + xx_xsub539)
    tmp8 := ($cast ($uint<64>) cond128)
    tmp10 := ($cast ($uint<64>) tmp832)
    tmp13 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) cond128) )
    tmp15 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_xsub539) )
    $place [bbx_xnph751_forx_xbody559]
    //begin: basic-block forx_xbody559
    $merge bbx_xnph751_forx_xbody559 forx_xbody559_forx_xbody559
    $phi indvar824 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph751_forx_xbody559 ( $cast ($uint<64>) indvarx_xnext825) $on forx_xbody559_forx_xbody559 
    $phi SCALE_FACTOR519x_x0750 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph751_forx_xbody559 ( $cast ($uint<32>) mul573) $on forx_xbody559_forx_xbody559 
    $phi ret_value515x_x0748 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph751_forx_xbody559 ( $cast ($uint<32>) add567) $on forx_xbody559_forx_xbody559 
    $endmerge
    tmp9 := (tmp8 * indvar824)
    tmp11 := (tmp10 + tmp9)
    add577 := ($cast ($uint<32>) tmp11)
    tmp14 := (tmp13 * indvar824)
    tmp16 := (tmp15 + tmp14)
    arrayidx570 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][tmp16])
    arrayidx563 := dest_index2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp16]
    // load 
    tmp564 := ->(arrayidx563) 
    mul565 := (tmp564 * SCALE_FACTOR519x_x0750)
    add567 := (mul565 + ret_value515x_x0748)
    // load 
    tmp571 := ->(arrayidx570) 
    mul573 := (tmp571 * SCALE_FACTOR519x_x0750)
    // compare instruction
    cmp557 := (add577 == add556746 )
    indvarx_xnext825 := (indvar824 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $if cmp557 $then  $place [forx_xbody559_forx_xend578x_xloopexit] $else $place [forx_xbody559_forx_xbody559] $endif 
    //begin: basic-block forx_xend578x_xloopexit
    $merge forx_xbody559_forx_xend578x_xloopexit
    $phi add567x_xlcssa :=  ( $cast ($uint<32>) add567) $on forx_xbody559_forx_xend578x_xloopexit 
    $endmerge
    $place [forx_xend578x_xloopexit_forx_xend578]
    //begin: basic-block forx_xend578
    $merge forx_xend511_forx_xend578 forx_xend578x_xloopexit_forx_xend578
    $phi ret_value515x_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xend511_forx_xend578 ( $cast ($uint<32>) add567x_xlcssa) $on forx_xend578x_xloopexit_forx_xend578 
    $endmerge
    shr582 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_value448x_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom583 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr582) )
    arrayidx584 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom583])
    // load 
    tmp585 := ->(arrayidx584) 
    sub591 := (ret_value448x_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul599 := (sub591 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom600 := ($cast ($uint<64>) mul599)
    shr601 := (tmp585 >> sh_prom600)
    shr613 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) ret_value515x_x0x_xlcssa) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom614 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr613) )
    arrayidx615 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][idxprom614])
    // load 
    tmp616 := ->(arrayidx615) 
    sext664 := (shr601 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv618 :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sext664) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 )  )))
    sub610 := (ret_value515x_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    mul621 := (sub610 & ( $bitcast ($uint<32> ) _b00000000000000000000000000110000 ) )
    sh_prom622 := ($cast ($uint<64>) mul621)
    shl623 := (conv618 << sh_prom622)
    or624 := (shl623 | tmp616)
    ->(arrayidx615) := or624
    // compare instruction
    cmp20 := ( ($bitcast ( $int<32>) add640) <   ($bitcast ( $int<32>) tmp4 ) )
    indvarx_xnext837 := (indvar836 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp20 $then  $place [forx_xend578_forx_xbody22] $else $place [forx_xend578_forx_xend641x_xloopexit] $endif 
    //begin: basic-block forx_xend641x_xloopexit
    $merge forx_xend578_forx_xend641x_xloopexit
    $endmerge
    $place [forx_xend641x_xloopexit_forx_xend641]
    //begin: basic-block forx_xend641
    $merge forx_xcond17x_xpreheader_forx_xend641 forx_xend641x_xloopexit_forx_xend641
    $endmerge
    inc := (iNsTr_48 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (inc == tmp2 )
    $if exitcond $then  $place [forx_xend641_forx_xinc645x_xloopexit] $else $place [forx_xend641_forx_xcond17x_xpreheader] $endif 
    //begin: basic-block forx_xinc645x_xloopexit
    $merge forx_xend641_forx_xinc645x_xloopexit
    $endmerge
    $place [forx_xinc645x_xloopexit_forx_xinc645]
    //begin: basic-block forx_xinc645
    $merge forx_xcond11x_xpreheader_forx_xinc645 forx_xinc645x_xloopexit_forx_xinc645
    $endmerge
    inc647 := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond71 := (inc647 == tmp )
    $if exitcond71 $then  $place [forx_xinc645_forx_xend648x_xloopexit] $else $place [forx_xinc645_forx_xcond11x_xpreheader] $endif 
    //begin: basic-block forx_xend648x_xloopexit
    $merge forx_xinc645_forx_xend648x_xloopexit
    $endmerge
    $place [forx_xend648x_xloopexit_forx_xend648]
    //begin: basic-block forx_xend648
    $merge forx_xend648x_xloopexit_forx_xend648 getInputDatax_xexit_forx_xend648
    $endmerge
    $call timer ()  (call650)
    conv651 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call650) )
    sub655 := (conv651 - conv)
    elapsed_time_pipe := sub655
    iNsTr_31 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_31) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_33 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_33) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_35 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_35) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [forx_xend648_forx_xbodyx_xi679]
    //begin: basic-block forx_xbodyx_xi679
    $merge forx_xbodyx_xi679_forx_xbodyx_xi679 forx_xend648_forx_xbodyx_xi679
    $phi indvarx_xi672 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xend648_forx_xbodyx_xi679 ( $cast ($uint<64>) tmp764) $on forx_xbodyx_xi679_forx_xbodyx_xi679 
    $endmerge
    arrayidxx_xi673 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi672])
    tmp6 := (indvarx_xi672 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi676 := ($cast ($uint<32>) tmp6)
    tmp764 := (indvarx_xi672 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // load 
    tmp3x_xi := ->(arrayidxx_xi673) 
    convx_xi674 := ($cast ($uint<16>) tmp3x_xi)
    zeropad_output_pipe := convx_xi674
    iNsTr_43 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi677 := ->(iNsTr_43) 
    // compare instruction
    cmpx_xi678 := (incx_xi676 < tmp1x_xi677 )
    $if cmpx_xi678 $then  $place [forx_xbodyx_xi679_forx_xbodyx_xi679] $else $place [forx_xbodyx_xi679_forx_xcondx_xi684x_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xi684x_xpreheader
    $merge forx_xbodyx_xi679_forx_xcondx_xi684x_xpreheader
    $phi tmp1x_xi677x_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi677) $on forx_xbodyx_xi679_forx_xcondx_xi684x_xpreheader 
    $endmerge
    $place [forx_xcondx_xi684x_xpreheader_forx_xcondx_xi684]
    //begin: basic-block forx_xcondx_xi684
    $merge forx_xbody9x_xi_forx_xcondx_xi684 forx_xcondx_xi684x_xpreheader_forx_xcondx_xi684
    $phi tmp316x_xi :=  ( $cast ($uint<32>) tmp316x_xix_xpr) $on forx_xbody9x_xi_forx_xcondx_xi684 ( $cast ($uint<32>) tmp1x_xi677x_xlcssa) $on forx_xcondx_xi684x_xpreheader_forx_xcondx_xi684 
    $phi indvar23x_xi :=  ( $cast ($uint<64>) indvarx_xnext24x_xi) $on forx_xbody9x_xi_forx_xcondx_xi684 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xi684x_xpreheader_forx_xcondx_xi684 
    $endmerge
    tmp3 := (indvar23x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_51 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_52 := ($bitcast ($pointer< $uint<8> >) iNsTr_51)
    uglygep4 := iNsTr_52[tmp3]
    addx_xptrx_xi683 := ($bitcast ($pointer< $uint<16> >) uglygep4)
    // compare instruction
    cmp17x_xi := (tmp316x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17x_xi $then  $place [forx_xcondx_xi684_forx_xbody9x_xi] $else $place [forx_xcondx_xi684_bbx_xnphx_xi687] $endif 
    //begin: basic-block bbx_xnphx_xi687
    $merge forx_xcondx_xi684_bbx_xnphx_xi687
    $endmerge
    // compare instruction
    tmpx_xi685 := (tmp316x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xopx_xi := (tmp316x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_62 := ($cast ($uint<64>) tmp3x_xopx_xi)
    xx_xopx_xi686 := (iNsTr_62 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22x_xi := ( $mux tmpx_xi685 xx_xopx_xi686 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi687_forx_xbodyx_xi693]
    //begin: basic-block forx_xbodyx_xi693
    $merge bbx_xnphx_xi687_forx_xbodyx_xi693 forx_xbodyx_xi693_forx_xbodyx_xi693
    $phi indvarx_xi688 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi687_forx_xbodyx_xi693 ( $cast ($uint<64>) indvarx_xnextx_xi691) $on forx_xbodyx_xi693_forx_xbodyx_xi693 
    $phi num_elemsx_x018x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi687_forx_xbodyx_xi693 ( $cast ($uint<32>) mulx_xi690) $on forx_xbodyx_xi693_forx_xbodyx_xi693 
    $endmerge
    arrayidxx_xi689 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi688])
    // load 
    tmp5x_xi := ->(arrayidxx_xi689) 
    mulx_xi690 := (tmp5x_xi * num_elemsx_x018x_xi)
    indvarx_xnextx_xi691 := (indvarx_xi688 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi691 == tmp22x_xi )
    $if exitcond1 $then  $place [forx_xbodyx_xi693_forx_xendx_xi694] $else $place [forx_xbodyx_xi693_forx_xbodyx_xi693] $endif 
    //begin: basic-block forx_xendx_xi694
    $merge forx_xbodyx_xi693_forx_xendx_xi694
    $phi mulx_xi690x_xlcssa :=  ( $cast ($uint<32>) mulx_xi690) $on forx_xbodyx_xi693_forx_xendx_xi694 
    $endmerge
    // compare instruction
    phitmpx_xi := (mulx_xi690x_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmpx_xi $then  $place [forx_xendx_xi694_sendOutputDatax_xexit] $else $place [forx_xendx_xi694_forx_xbody9x_xi] $endif 
    //begin: basic-block forx_xbody9x_xi
    $merge forx_xcondx_xi684_forx_xbody9x_xi forx_xendx_xi694_forx_xbody9x_xi
    $endmerge
    // load 
    tmp11x_xi := ->(addx_xptrx_xi683) 
    zeropad_output_pipe := tmp11x_xi
    indvarx_xnext24x_xi := (indvar23x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_60 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316x_xix_xpr := ->(iNsTr_60) 
    $place [forx_xbody9x_xi_forx_xcondx_xi684]
    //begin: basic-block sendOutputDatax_xexit
    $merge forx_xendx_xi694_sendOutputDatax_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
