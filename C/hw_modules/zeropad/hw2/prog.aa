// Aa code produced by llvm2aa (version 1.0)
$record [structx_x__SizedTensorDescriptor] < structx_x__TensorDescriptor > < $uint<32> > 
$record [structx_x__SizedTensor_16K] < structx_x__SizedTensorDescriptor > < $array [16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor] < $uint<32> > < $uint<8> > < $uint<32> > < $array [64] $of $uint<32> > 
$pipe elapsed_time_pipe : $uint<64> $depth 1
$pipe zeropad_input_pipe : $uint<16> $depth 2
$pipe zeropad_output_pipe : $uint<16> $depth 2
$storage R:structx_x__SizedTensor_16K
$storage T:structx_x__SizedTensor_16K
$storage pad:$uint<16>
$module [progx_xoptx_xo_storage_initializer_] $in () $out () $is 
{
  $null
  $attribute initializer
}
$module [sendOutputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp3 := ->(arrayidx) 
    conv := ($cast ($uint<16>) tmp3)
    zeropad_output_pipe := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sendOutputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody9_forx_xcond
    $phi indvar23 :=  ( $cast ($uint<64>) indvarx_xnext24) $on forx_xbody9_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    tmp2 := (indvar23 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep3 := iNsTr_2[tmp2]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep3)
    iNsTr_3 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316 := ->(iNsTr_3) 
    // compare instruction
    cmp17 := (tmp316 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17 $then  $place [forx_xcond_forx_xbody9] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp316 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xop := (tmp316 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_8 := ($cast ($uint<64>) tmp3x_xop)
    xx_xop := (iNsTr_8 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x018 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp5 := ->(arrayidx) 
    mul := (tmp5 * num_elemsx_x018)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp22 )
    $if exitcond1 $then  $place [forx_xbody_forx_xend] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xend 
    $endmerge
    // compare instruction
    phitmp := (mulx_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmp $then  $place [forx_xend_forx_xend15] $else $place [forx_xend_forx_xbody9] $endif 
    //begin: basic-block forx_xbody9
    $merge forx_xcond_forx_xbody9 forx_xend_forx_xbody9
    $endmerge
    // load 
    tmp11 := ->(addx_xptr) 
    zeropad_output_pipe := tmp11
    indvarx_xnext24 := (indvar23 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody9_forx_xcond]
    //begin: basic-block forx_xend15
    $merge forx_xend_forx_xend15
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputDim] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bbx_xnph
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) tmp) $on forx_xbody_forx_xbody 
    $endmerge
    tmp2 := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp2)
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    call := zeropad_input_pipe
    conv := ($cast ($uint<32>) call)
    ->(arrayidx) := conv
    tmp := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1 := ->(iNsTr_9) 
    // compare instruction
    cmp := (inc < tmp1 )
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xend] $endif 
    //begin: basic-block forx_xend
    $merge forx_xbody_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getInputData] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $place [entry_forx_xcond]
    //begin: basic-block forx_xcond
    $merge entry_forx_xcond forx_xbody13_forx_xcond
    $phi indvar26 :=  ( $cast ($uint<64>) indvarx_xnext27) $on forx_xbody13_forx_xcond ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xcond 
    $endmerge
    ix_x0 := ($cast ($uint<32>) indvar26)
    tmp3 := (indvar26 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_1 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1)
    uglygep4 := iNsTr_2[tmp3]
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep4)
    iNsTr_3 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619 := ->(iNsTr_3) 
    // compare instruction
    cmp20 := (tmp619 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20 $then  $place [forx_xcond_forx_xend] $else $place [forx_xcond_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xcond_bbx_xnph
    $endmerge
    // compare instruction
    tmp := (tmp619 > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xop := (tmp619 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_6 := ($cast ($uint<64>) tmp6x_xop)
    xx_xop := (iNsTr_6 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25 := ( $mux tmp xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody_forx_xbody 
    $phi num_elemsx_x021 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph_forx_xbody ( $cast ($uint<32>) mul) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar])
    // load 
    tmp8 := ->(arrayidx) 
    mul := (tmp8 * num_elemsx_x021)
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnext == tmp25 )
    $if exitcond1 $then  $place [forx_xbody_forx_xendx_xloopexit] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $phi mulx_xlcssa :=  ( $cast ($uint<32>) mul) $on forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge forx_xcond_forx_xend forx_xendx_xloopexit_forx_xend
    $phi num_elemsx_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcond_forx_xend ( $cast ($uint<32>) mulx_xlcssa) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    // compare instruction
    cmp12 := ( ($bitcast ( $int<32>) ix_x0) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssa ) )
    $if cmp12 $then  $place [forx_xend_forx_xbody13] $else $place [forx_xend_forx_xend18] $endif 
    //begin: basic-block forx_xbody13
    $merge forx_xend_forx_xbody13
    $endmerge
    call := zeropad_input_pipe
    ->(addx_xptr) := call
    indvarx_xnext27 := (indvar26 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbody13_forx_xcond]
    //begin: basic-block forx_xend18
    $merge forx_xend_forx_xend18
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [getpad] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := zeropad_input_pipe
    pad := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $storage dest2_alloc : structx_x__SizedTensor_16K
    dest2 := @(dest2_alloc)
    iNsTr_0 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_2 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_2) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_4 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_4) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [entry_forx_xbodyx_xi]
    //begin: basic-block forx_xbodyx_xi
    $merge entry_forx_xbodyx_xi forx_xbodyx_xi_forx_xbodyx_xi
    $phi indvarx_xi :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xbodyx_xi ( $cast ($uint<64>) tmp428) $on forx_xbodyx_xi_forx_xbodyx_xi 
    $endmerge
    arrayidxx_xi := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi])
    tmp152 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi := ($cast ($uint<32>) tmp152)
    tmp428 := (indvarx_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    callx_xi := zeropad_input_pipe
    convx_xi := ($cast ($uint<32>) callx_xi)
    ->(arrayidxx_xi) := convx_xi
    iNsTr_9 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi := ->(iNsTr_9) 
    // compare instruction
    cmpx_xi := (incx_xi < tmp1x_xi )
    $if cmpx_xi $then  $place [forx_xbodyx_xi_forx_xbodyx_xi] $else $place [forx_xbodyx_xi_forx_xcondx_xix_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xix_xpreheader
    $merge forx_xbodyx_xi_forx_xcondx_xix_xpreheader
    $phi tmp1x_xix_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi) $on forx_xbodyx_xi_forx_xcondx_xix_xpreheader 
    $endmerge
    $place [forx_xcondx_xix_xpreheader_forx_xcondx_xi]
    //begin: basic-block forx_xcondx_xi
    $merge forx_xbody13x_xi_forx_xcondx_xi forx_xcondx_xix_xpreheader_forx_xcondx_xi
    $phi tmp619x_xi :=  ( $cast ($uint<32>) tmp619x_xix_xpr) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<32>) tmp1x_xix_xlcssa) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $phi indvar26x_xi :=  ( $cast ($uint<64>) indvarx_xnext27x_xi) $on forx_xbody13x_xi_forx_xcondx_xi ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $endmerge
    tmp148 := (indvar26x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_12 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_13 := ($bitcast ($pointer< $uint<8> >) iNsTr_12)
    uglygep149 := iNsTr_13[tmp148]
    addx_xptrx_xi := ($bitcast ($pointer< $uint<16> >) uglygep149)
    ix_x0x_xi := ($cast ($uint<32>) indvar26x_xi)
    // compare instruction
    cmp20x_xi := (tmp619x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp20x_xi $then  $place [forx_xcondx_xi_forx_xendx_xi] $else $place [forx_xcondx_xi_bbx_xnphx_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge forx_xcondx_xi_bbx_xnphx_xi
    $endmerge
    // compare instruction
    tmpx_xi214 := (tmp619x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp6x_xopx_xi := (tmp619x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_17 := ($cast ($uint<64>) tmp6x_xopx_xi)
    xx_xopx_xi := (iNsTr_17 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp25x_xi := ( $mux tmpx_xi214 xx_xopx_xi ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi_forx_xbodyx_xi217]
    //begin: basic-block forx_xbodyx_xi217
    $merge bbx_xnphx_xi_forx_xbodyx_xi217 forx_xbodyx_xi217_forx_xbodyx_xi217
    $phi indvarx_xi215 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi217 ( $cast ($uint<64>) indvarx_xnextx_xi) $on forx_xbodyx_xi217_forx_xbodyx_xi217 
    $phi num_elemsx_x021x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi_forx_xbodyx_xi217 ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi217_forx_xbodyx_xi217 
    $endmerge
    arrayidxx_xi216 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi215])
    // load 
    tmp8x_xi := ->(arrayidxx_xi216) 
    mulx_xi := (tmp8x_xi * num_elemsx_x021x_xi)
    indvarx_xnextx_xi := (indvarx_xi215 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond147 := (indvarx_xnextx_xi == tmp25x_xi )
    $if exitcond147 $then  $place [forx_xbodyx_xi217_forx_xendx_xix_xloopexit] $else $place [forx_xbodyx_xi217_forx_xbodyx_xi217] $endif 
    //begin: basic-block forx_xendx_xix_xloopexit
    $merge forx_xbodyx_xi217_forx_xendx_xix_xloopexit
    $phi mulx_xix_xlcssa :=  ( $cast ($uint<32>) mulx_xi) $on forx_xbodyx_xi217_forx_xendx_xix_xloopexit 
    $endmerge
    $place [forx_xendx_xix_xloopexit_forx_xendx_xi]
    //begin: basic-block forx_xendx_xi
    $merge forx_xcondx_xi_forx_xendx_xi forx_xendx_xix_xloopexit_forx_xendx_xi
    $phi num_elemsx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on forx_xcondx_xi_forx_xendx_xi ( $cast ($uint<32>) mulx_xix_xlcssa) $on forx_xendx_xix_xloopexit_forx_xendx_xi 
    $endmerge
    // compare instruction
    cmp12x_xi := ( ($bitcast ( $int<32>) ix_x0x_xi) <   ($bitcast ( $int<32>) num_elemsx_x0x_xlcssax_xi ) )
    callx_xi218 := zeropad_input_pipe
    $if cmp12x_xi $then  $place [forx_xendx_xi_forx_xbody13x_xi] $else $place [forx_xendx_xi_getInputDatax_xexit] $endif 
    //begin: basic-block forx_xbody13x_xi
    $merge forx_xendx_xi_forx_xbody13x_xi
    $endmerge
    ->(addx_xptrx_xi) := callx_xi218
    indvarx_xnext27x_xi := (indvar26x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_20 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp619x_xix_xpr := ->(iNsTr_20) 
    $place [forx_xbody13x_xi_forx_xcondx_xi]
    //begin: basic-block getInputDatax_xexit
    $merge forx_xendx_xi_getInputDatax_xexit
    $phi callx_xi218x_xlcssa :=  ( $cast ($uint<16>) callx_xi218) $on forx_xendx_xi_getInputDatax_xexit 
    $endmerge
    pad := callx_xi218x_xlcssa
    $call timer ()  (call)
    conv :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call) )
    iNsTr_23 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp := ->(iNsTr_23) 
    iNsTr_24 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp2 := ->(iNsTr_24) 
    iNsTr_25 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp4 := ->(iNsTr_25) 
    tmp8 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ]
    ->(tmp8) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    tmp11 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ]
    ->(tmp11) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    iNsTr_28 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp12 := ->(iNsTr_28) 
    arrayidx := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    ->(arrayidx) := tmp12
    iNsTr_30 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp16 := ->(iNsTr_30) 
    arrayidx20 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    ->(arrayidx20) := tmp16
    iNsTr_32 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp21 := ->(iNsTr_32) 
    arrayidx25 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    ->(arrayidx25) := tmp21
    tmp28 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(tmp28) := ( $bitcast ($uint<8> ) _b00000001 ) 
    mul := (tmp16 * tmp12)
    mul32 := (mul * tmp21)
    tmp34 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ]
    ->(tmp34) := mul32
    // compare instruction
    cmp274 := ( ($bitcast ( $int<32>) tmp) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if cmp274 $then  $place [getInputDatax_xexit_bbx_xnph276] $else $place [getInputDatax_xexit_getInputDatax_xexitx_xforx_xend119_crit_edge] $endif 
    //begin: basic-block getInputDatax_xexitx_xforx_xend119_crit_edge
    $merge getInputDatax_xexit_getInputDatax_xexitx_xforx_xend119_crit_edge
    $endmerge
    // load 
    tmp123x_xpre := pad
    $place [getInputDatax_xexitx_xforx_xend119_crit_edge_forx_xend119]
    //begin: basic-block bbx_xnph276
    $merge getInputDatax_xexit_bbx_xnph276
    $endmerge
    // compare instruction
    cmp54271 := ( ($bitcast ( $int<32>) tmp2) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    cmp60268 := ( ($bitcast ( $int<32>) tmp4) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // load 
    tmp64 := pad
    arraydecay := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    iNsTr_38 := ($bitcast ($pointer< $uint<16> >) arraydecay)
    tmp130 := ($cast ($uint<32>) tmp64)
    tmp131 := (tmp130 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp132 := (tmp + tmp131)
    tmp133 := (tmp2 + tmp131)
    tmp134 := (tmp132 * tmp133)
    tmp137 := (tmp130 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp138 := (tmp + tmp137)
    tmp143 := (tmp2 * tmp4)
    $place [bbx_xnph276_forx_xcond51x_xpreheader]
    //begin: basic-block forx_xcond51x_xpreheader
    $merge bbx_xnph276_forx_xcond51x_xpreheader forx_xinc116_forx_xcond51x_xpreheader
    $phi ix_x0275 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph276_forx_xcond51x_xpreheader ( $cast ($uint<32>) inc118) $on forx_xinc116_forx_xcond51x_xpreheader 
    $endmerge
    tmp139 := (tmp138 + ix_x0275)
    tmp144 := (tmp143 * ix_x0275)
    cmp54271x_xnot := (cmp54271 ^ ( $bitcast ($uint<1> ) _b1 ) )
    cmp60268x_xnot := (cmp60268 ^ ( $bitcast ($uint<1> ) _b1 ) )
    brmerge := (cmp54271x_xnot | cmp60268x_xnot)
    $if brmerge $then  $place [forx_xcond51x_xpreheader_forx_xinc116] $else $place [forx_xcond51x_xpreheader_bbx_xnph270x_xusx_xpreheader] $endif 
    //begin: basic-block bbx_xnph270x_xusx_xpreheader
    $merge forx_xcond51x_xpreheader_bbx_xnph270x_xusx_xpreheader
    $endmerge
    $place [bbx_xnph270x_xusx_xpreheader_bbx_xnph270x_xus]
    //begin: basic-block forx_xinc112x_xus
    $merge forx_xbody62x_xus_forx_xinc112x_xus
    $endmerge
    inc114x_xus := (jx_x0272x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond110 := (inc114x_xus == tmp2 )
    $if exitcond110 $then  $place [forx_xinc112x_xus_forx_xinc116x_xloopexit] $else $place [forx_xinc112x_xus_bbx_xnph270x_xus] $endif 
    //begin: basic-block forx_xbody62x_xus
    $merge bbx_xnph270x_xus_forx_xbody62x_xus forx_xbody62x_xus_forx_xbody62x_xus
    $phi kx_x0269x_xus :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph270x_xus_forx_xbody62x_xus ( $cast ($uint<32>) incx_xus) $on forx_xbody62x_xus_forx_xbody62x_xus 
    $endmerge
    tmp135 := (tmp134 * kx_x0269x_xus)
    add93x_xus := (tmp140 + tmp135)
    add104x_xus := (tmp145 + kx_x0269x_xus)
    idxx_xextx_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) add104x_xus) )
    iNsTr_64 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_65 := ($bitcast ($pointer< $uint<16> >) iNsTr_64)
    addx_xptrx_xus := iNsTr_65[idxx_xextx_xus]
    // load 
    tmp106x_xus := ->(addx_xptrx_xus) 
    idxx_xext109x_xus :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) add93x_xus) )
    addx_xptr110x_xus := iNsTr_38[idxx_xext109x_xus]
    ->(addx_xptr110x_xus) := tmp106x_xus
    incx_xus := (kx_x0269x_xus + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond92 := (incx_xus == tmp4 )
    $if exitcond92 $then  $place [forx_xbody62x_xus_forx_xinc112x_xus] $else $place [forx_xbody62x_xus_forx_xbody62x_xus] $endif 
    //begin: basic-block bbx_xnph270x_xus
    $merge bbx_xnph270x_xusx_xpreheader_bbx_xnph270x_xus forx_xinc112x_xus_bbx_xnph270x_xus
    $phi jx_x0272x_xus :=  ( $cast ($uint<32>) inc114x_xus) $on forx_xinc112x_xus_bbx_xnph270x_xus ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph270x_xusx_xpreheader_bbx_xnph270x_xus 
    $endmerge
    tmp136 := (tmp132 * jx_x0272x_xus)
    tmp140 := (tmp139 + tmp136)
    tmp142 := (tmp4 * jx_x0272x_xus)
    tmp145 := (tmp144 + tmp142)
    $place [bbx_xnph270x_xus_forx_xbody62x_xus]
    //begin: basic-block forx_xinc116x_xloopexit
    $merge forx_xinc112x_xus_forx_xinc116x_xloopexit
    $endmerge
    $place [forx_xinc116x_xloopexit_forx_xinc116]
    //begin: basic-block forx_xinc116
    $merge forx_xcond51x_xpreheader_forx_xinc116 forx_xinc116x_xloopexit_forx_xinc116
    $endmerge
    inc118 := (ix_x0275 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond129 := (inc118 == tmp )
    $if exitcond129 $then  $place [forx_xinc116_forx_xend119x_xloopexit] $else $place [forx_xinc116_forx_xcond51x_xpreheader] $endif 
    //begin: basic-block forx_xend119x_xloopexit
    $merge forx_xinc116_forx_xend119x_xloopexit
    $endmerge
    $place [forx_xend119x_xloopexit_forx_xend119]
    //begin: basic-block forx_xend119
    $merge forx_xend119x_xloopexit_forx_xend119 getInputDatax_xexitx_xforx_xend119_crit_edge_forx_xend119
    $phi tmp123 :=  ( $cast ($uint<16>) tmp123x_xpre) $on getInputDatax_xexitx_xforx_xend119_crit_edge_forx_xend119 ( $cast ($uint<16>) tmp64) $on forx_xend119x_xloopexit_forx_xend119 
    $endmerge
    conv149259 := ($cast ($uint<32>) tmp123)
    mul150260 := (conv149259 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add151261 := (mul150260 + tmp)
    // compare instruction
    cmp152262 := ( ($bitcast ( $int<32>) add151261) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    $if cmp152262 $then  $place [forx_xend119_bbx_xnph267] $else $place [forx_xend119_forx_xend206] $endif 
    //begin: basic-block bbx_xnph267
    $merge forx_xend119_bbx_xnph267
    $endmerge
    add161252 := (mul150260 + tmp2)
    // compare instruction
    cmp162253 := ( ($bitcast ( $int<32>) add161252) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    // compare instruction
    cmp168246 := ( ($bitcast ( $int<32>) tmp4) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    arraydecay185 := dest2[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    iNsTr_46 := ($bitcast ($pointer< $uint<16> >) arraydecay185)
    tmp9 := ($cast ($uint<32>) tmp123)
    tmp10 := (tmp9 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp13 := (tmp2 + tmp10)
    // compare instruction
    tmp14 := ( ($bitcast ( $int<32>) tmp13) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax15 := ( $mux tmp14 tmp13 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp17 := ($cast ($uint<64>) tmp4)
    tmp45 := ($cast ($uint<32>) tmp123)
    tmp46 := (tmp45 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp47 := (tmp2 + tmp46)
    // compare instruction
    tmp48 := ( ($bitcast ( $int<32>) tmp47) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax49 := ( $mux tmp48 tmp47 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp50 := (tmp4 * smax49)
    tmp52 := (smax49 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp53 := ($cast ($uint<64>) tmp52)
    tmp54 := (tmp53 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp68 := ($cast ($uint<64>) tmp4)
    tmp73 := ($cast ($uint<32>) tmp123)
    tmp74 := (tmp73 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp75 := (tmp + tmp74)
    // compare instruction
    tmp76 := ( ($bitcast ( $int<32>) tmp75) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  ) )
    smax := ( $mux tmp76 tmp75 ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp77 := (smax + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    tmp78 := ($cast ($uint<64>) tmp77)
    tmp79 := (tmp78 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp81 := (tmp2 + tmp74)
    tmp82 := (tmp75 * tmp81)
    tmp83 := ($cast ($uint<64>) tmp82)
    tmp84 := (tmp83 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000100000000000000000000000000000000 ) )
    tmp86 := ($cast ($uint<64>) tmp75)
    tmp87 := (tmp86 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000100000000000000000000000000000000 ) )
    $place [bbx_xnph267_forx_xcond155x_xpreheader]
    //begin: basic-block forx_xcond155x_xpreheader
    $merge bbx_xnph267_forx_xcond155x_xpreheader forx_xinc203_forx_xcond155x_xpreheader
    $phi indvar355 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph267_forx_xcond155x_xpreheader ( $cast ($uint<64>) indvarx_xnext356) $on forx_xinc203_forx_xcond155x_xpreheader 
    $phi indexx_x2266 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph267_forx_xcond155x_xpreheader ( $cast ($uint<32>) indexx_x1x_xlcssa) $on forx_xinc203_forx_xcond155x_xpreheader 
    $endmerge
    tmp89 := (indvar355 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000100000000000000000000000000000000 ) )
    $if cmp162253 $then  $place [forx_xcond155x_xpreheader_bbx_xnph256] $else $place [forx_xcond155x_xpreheader_forx_xinc203] $endif 
    //begin: basic-block bbx_xnph256
    $merge forx_xcond155x_xpreheader_bbx_xnph256
    $endmerge
    $if cmp168246 $then  $place [bbx_xnph256_bbx_xnphx_xusx_xpreheader] $else $place [bbx_xnph256_forx_xinc199x_xpreheader] $endif 
    //begin: basic-block bbx_xnphx_xusx_xpreheader
    $merge bbx_xnph256_bbx_xnphx_xusx_xpreheader
    $endmerge
    tmp70 := ($cast ($uint<64>) indexx_x2266)
    $place [bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus]
    //begin: basic-block forx_xinc199x_xpreheader
    $merge bbx_xnph256_forx_xinc199x_xpreheader
    $endmerge
    $place [forx_xinc199x_xpreheader_forx_xinc199]
    //begin: basic-block forx_xinc199x_xus
    $merge forx_xbody170x_xus_forx_xinc199x_xus
    $endmerge
    indvarx_xnext322 := (indvar321 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond55 := (indvarx_xnext322 == tmp54 )
    $if exitcond55 $then  $place [forx_xinc199x_xus_forx_xinc203x_xloopexit44] $else $place [forx_xinc199x_xus_bbx_xnphx_xus] $endif 
    //begin: basic-block forx_xbody170x_xus
    $merge bbx_xnphx_xus_forx_xbody170x_xus forx_xbody170x_xus_forx_xbody170x_xus
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xus_forx_xbody170x_xus ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody170x_xus_forx_xbody170x_xus 
    $endmerge
    tmp85 := (tmp84 * indvar)
    sext := (tmp90 + tmp85)
    tmp19 := (indvar * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    tmp27 := (tmp26 + tmp19)
    iNsTr_87 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_88 := ($bitcast ($pointer< $uint<8> >) iNsTr_87)
    uglygep := iNsTr_88[tmp27]
    addx_xptr192x_xus := ($bitcast ($pointer< $uint<16> >) uglygep)
    idxx_xext187x_xus :=  ($bitcast ($uint<64>) ( ($bitcast ( $int<64>) sext) >>  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000100000 )  )))
    addx_xptr188x_xus := iNsTr_46[idxx_xext187x_xus]
    // load 
    tmp189x_xus := ->(addx_xptr188x_xus) 
    ->(addx_xptr192x_xus) := tmp189x_xus
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond18 := (indvarx_xnext == tmp17 )
    $if exitcond18 $then  $place [forx_xbody170x_xus_forx_xinc199x_xus] $else $place [forx_xbody170x_xus_forx_xbody170x_xus] $endif 
    //begin: basic-block bbx_xnphx_xus
    $merge bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus forx_xinc199x_xus_bbx_xnphx_xus
    $phi indvar321 :=  ( $cast ($uint<64>) indvarx_xnext322) $on forx_xinc199x_xus_bbx_xnphx_xus ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus 
    $endmerge
    tmp88 := (tmp87 * indvar321)
    tmp90 := (tmp89 + tmp88)
    tmp69 := (tmp68 * indvar321)
    tmp71 := (tmp70 + tmp69)
    tmp24 := ($cast ($uint<32>) tmp71)
    tmp25 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) tmp24) )
    tmp26 := (tmp25 * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    $place [bbx_xnphx_xus_forx_xbody170x_xus]
    //begin: basic-block forx_xinc199
    $merge forx_xinc199_forx_xinc199 forx_xinc199x_xpreheader_forx_xinc199
    $phi jx_x1254 :=  ( $cast ($uint<32>) inc201) $on forx_xinc199_forx_xinc199 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on forx_xinc199x_xpreheader_forx_xinc199 
    $endmerge
    inc201 := (jx_x1254 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    exitcond := (inc201 == smax15 )
    $if exitcond $then  $place [forx_xinc199_forx_xinc203x_xloopexit] $else $place [forx_xinc199_forx_xinc199] $endif 
    //begin: basic-block forx_xinc203x_xloopexit
    $merge forx_xinc199_forx_xinc203x_xloopexit
    $endmerge
    $place [forx_xinc203x_xloopexit_forx_xinc203]
    //begin: basic-block forx_xinc203x_xloopexit44
    $merge forx_xinc199x_xus_forx_xinc203x_xloopexit44
    $endmerge
    tmp51 := (tmp50 + indexx_x2266)
    $place [forx_xinc203x_xloopexit44_forx_xinc203]
    //begin: basic-block forx_xinc203
    $merge forx_xcond155x_xpreheader_forx_xinc203 forx_xinc203x_xloopexit_forx_xinc203 forx_xinc203x_xloopexit44_forx_xinc203
    $phi indexx_x1x_xlcssa :=  ( $cast ($uint<32>) indexx_x2266) $on forx_xcond155x_xpreheader_forx_xinc203 ( $cast ($uint<32>) indexx_x2266) $on forx_xinc203x_xloopexit_forx_xinc203 ( $cast ($uint<32>) tmp51) $on forx_xinc203x_xloopexit44_forx_xinc203 
    $endmerge
    indvarx_xnext356 := (indvar355 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond80 := (indvarx_xnext356 == tmp79 )
    $if exitcond80 $then  $place [forx_xinc203_forx_xend206x_xloopexit] $else $place [forx_xinc203_forx_xcond155x_xpreheader] $endif 
    //begin: basic-block forx_xend206x_xloopexit
    $merge forx_xinc203_forx_xend206x_xloopexit
    $endmerge
    $place [forx_xend206x_xloopexit_forx_xend206]
    //begin: basic-block forx_xend206
    $merge forx_xend119_forx_xend206 forx_xend206x_xloopexit_forx_xend206
    $endmerge
    $call timer ()  (call208)
    conv209 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call208) )
    sub := (conv209 - conv)
    elapsed_time_pipe := sub
    iNsTr_50 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_50) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    iNsTr_52 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_52) := ( $bitcast ($uint<8> ) _b00000001 ) 
    iNsTr_54 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_54) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) 
    $place [forx_xend206_forx_xbodyx_xi228]
    //begin: basic-block forx_xbodyx_xi228
    $merge forx_xbodyx_xi228_forx_xbodyx_xi228 forx_xend206_forx_xbodyx_xi228
    $phi indvarx_xi221 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xend206_forx_xbodyx_xi228 ( $cast ($uint<64>) tmp279) $on forx_xbodyx_xi228_forx_xbodyx_xi228 
    $endmerge
    arrayidxx_xi222 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi221])
    tmp6 := (indvarx_xi221 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    incx_xi225 := ($cast ($uint<32>) tmp6)
    tmp279 := (indvarx_xi221 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // load 
    tmp3x_xi := ->(arrayidxx_xi222) 
    convx_xi223 := ($cast ($uint<16>) tmp3x_xi)
    zeropad_output_pipe := convx_xi223
    iNsTr_62 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp1x_xi226 := ->(iNsTr_62) 
    // compare instruction
    cmpx_xi227 := (incx_xi225 < tmp1x_xi226 )
    $if cmpx_xi227 $then  $place [forx_xbodyx_xi228_forx_xbodyx_xi228] $else $place [forx_xbodyx_xi228_forx_xcondx_xi233x_xpreheader] $endif 
    //begin: basic-block forx_xcondx_xi233x_xpreheader
    $merge forx_xbodyx_xi228_forx_xcondx_xi233x_xpreheader
    $phi tmp1x_xi226x_xlcssa :=  ( $cast ($uint<32>) tmp1x_xi226) $on forx_xbodyx_xi228_forx_xcondx_xi233x_xpreheader 
    $endmerge
    $place [forx_xcondx_xi233x_xpreheader_forx_xcondx_xi233]
    //begin: basic-block forx_xcondx_xi233
    $merge forx_xbody9x_xi_forx_xcondx_xi233 forx_xcondx_xi233x_xpreheader_forx_xcondx_xi233
    $phi tmp316x_xi :=  ( $cast ($uint<32>) tmp316x_xix_xpr) $on forx_xbody9x_xi_forx_xcondx_xi233 ( $cast ($uint<32>) tmp1x_xi226x_xlcssa) $on forx_xcondx_xi233x_xpreheader_forx_xcondx_xi233 
    $phi indvar23x_xi :=  ( $cast ($uint<64>) indvarx_xnext24x_xi) $on forx_xbody9x_xi_forx_xcondx_xi233 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xcondx_xi233x_xpreheader_forx_xcondx_xi233 
    $endmerge
    tmp3 := (indvar23x_xi * ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    iNsTr_75 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    iNsTr_76 := ($bitcast ($pointer< $uint<8> >) iNsTr_75)
    uglygep4 := iNsTr_76[tmp3]
    addx_xptrx_xi232 := ($bitcast ($pointer< $uint<16> >) uglygep4)
    // compare instruction
    cmp17x_xi := (tmp316x_xi == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if cmp17x_xi $then  $place [forx_xcondx_xi233_forx_xbody9x_xi] $else $place [forx_xcondx_xi233_bbx_xnphx_xi236] $endif 
    //begin: basic-block bbx_xnphx_xi236
    $merge forx_xcondx_xi233_bbx_xnphx_xi236
    $endmerge
    // compare instruction
    tmpx_xi234 := (tmp316x_xi > ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
    tmp3x_xopx_xi := (tmp316x_xi + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    iNsTr_85 := ($cast ($uint<64>) tmp3x_xopx_xi)
    xx_xopx_xi235 := (iNsTr_85 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp22x_xi := ( $mux tmpx_xi234 xx_xopx_xi235 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnphx_xi236_forx_xbodyx_xi242]
    //begin: basic-block forx_xbodyx_xi242
    $merge bbx_xnphx_xi236_forx_xbodyx_xi242 forx_xbodyx_xi242_forx_xbodyx_xi242
    $phi indvarx_xi237 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnphx_xi236_forx_xbodyx_xi242 ( $cast ($uint<64>) indvarx_xnextx_xi240) $on forx_xbodyx_xi242_forx_xbodyx_xi242 
    $phi num_elemsx_x018x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xi236_forx_xbodyx_xi242 ( $cast ($uint<32>) mulx_xi239) $on forx_xbodyx_xi242_forx_xbodyx_xi242 
    $endmerge
    arrayidxx_xi238 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvarx_xi237])
    // load 
    tmp5x_xi := ->(arrayidxx_xi238) 
    mulx_xi239 := (tmp5x_xi * num_elemsx_x018x_xi)
    indvarx_xnextx_xi240 := (indvarx_xi237 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond1 := (indvarx_xnextx_xi240 == tmp22x_xi )
    $if exitcond1 $then  $place [forx_xbodyx_xi242_forx_xendx_xi243] $else $place [forx_xbodyx_xi242_forx_xbodyx_xi242] $endif 
    //begin: basic-block forx_xendx_xi243
    $merge forx_xbodyx_xi242_forx_xendx_xi243
    $phi mulx_xi239x_xlcssa :=  ( $cast ($uint<32>) mulx_xi239) $on forx_xbodyx_xi242_forx_xendx_xi243 
    $endmerge
    // compare instruction
    phitmpx_xi := (mulx_xi239x_xlcssa == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    $if phitmpx_xi $then  $place [forx_xendx_xi243_sendOutputDatax_xexit] $else $place [forx_xendx_xi243_forx_xbody9x_xi] $endif 
    //begin: basic-block forx_xbody9x_xi
    $merge forx_xcondx_xi233_forx_xbody9x_xi forx_xendx_xi243_forx_xbody9x_xi
    $endmerge
    // load 
    tmp11x_xi := ->(addx_xptrx_xi232) 
    zeropad_output_pipe := tmp11x_xi
    indvarx_xnext24x_xi := (indvar23x_xi + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_83 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp316x_xix_xpr := ->(iNsTr_83) 
    $place [forx_xbody9x_xi_forx_xcondx_xi233]
    //begin: basic-block sendOutputDatax_xexit
    $merge forx_xendx_xi243_sendOutputDatax_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
