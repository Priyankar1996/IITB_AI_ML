# Necessary variables and definitions. Do not change
CC=gcc
AR=ar
CFLAGS = -Wall -std=c99 -lm
ARFLAGS = -cq	# add v if need verbose output

BIN=bin_maxpool
LIB=lib_maxpool
SRC=src
INCLUDE=include

MEMPOOL=../mempool
TENSOR=../primitives
CREATETENSOR=./


PRIMITIVES = $(BIN)/mempool.o $(BIN)/tensor.o $(BIN)/createtensor.o
PRIMFILES = $(patsubst $(BIN)/%.o,%.o,$(PRIMITIVES))
OBJ = _maxPoolOfTensors

# Testbench
TESTFILE=util/Test_maxpool.c

compile: createDir $(PRIMITIVES) $(OBJ)
	$(CC) $(CFLAGS) -o $(BIN)/Testfile.o -c $(TESTFILE) -I $(MEMPOOL)/include -I $(TENSOR)/include -I $(CREATETENSOR)/include -L$(LIB)
	cd $(BIN); $(CC) -o Test Testfile.o $(OBJ) $(PRIMFILES) $(CFLAGS)

createDir:
	mkdir -p $(BIN);
	mkdir -p $(LIB);

$(BIN)/mempool.o: $(MEMPOOL)/src/mempool.c $(MEMPOOL)/include/mempool.h
	$(CC) $(CFLAGS) -o $@ -c $< -I $(MEMPOOL)/include
	
$(BIN)/tensor.o: $(TENSOR)/src/tensor.c $(TENSOR)/include/tensor.h
	$(CC) $(CFLAGS) -o $@ -c $< -I $(TENSOR)/include
	
$(BIN)/createtensor.o: $(CREATETENSOR)/src/createTensor.c $(CREATETENSOR)/include/createTensor.h
	$(CC) $(CFLAGS) -o $@ -c $< -I $(MEMPOOL)/include -I $(TENSOR)/include -I $(CREATETENSOR)/include

_%: $(SRC)/%.c $(PRIMITIVES)
	$(CC) $(CFLAGS) -o $(BIN)/$@ -c $< -I $(MEMPOOL)/include -I $(TENSOR)/include -I $(INCLUDE) $(ENDFLAGS)
	$(AR) $(ARFLAGS) $(LIB)/lib$*.a $(BIN)/$@ $(PRIMITIVES)

.PHONY : clean
clean:
	rm $(BIN) -rf
	rm $(LIB) -rf