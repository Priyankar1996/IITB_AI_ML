clang -m32 -O3 -std=gnu89   -I/home/madhav/AHIR/gitHub/ahir/release/include -emit-llvm -c prog.c
opt --indvars --loopsimplify prog.o -o prog.opt.o
llvm-dis prog.opt.o
llvm2aa -extract_do_while=true --storageinit=true -pipedepths=pipedepths.txt  prog.opt.o | vcFormat >  prog.aa
Warning: no modules specified.. will translate all functions
Info: pipe in_data_pipe max-depth set to 2
Info: pipe result_pipe max-depth set to 2
Info: pipe lower_start max-depth set to 1
Info: pipe lower_done max-depth set to 1
Info: pipe upper_start max-depth set to 1
Info: pipe upper_done max-depth set to 1
Info: -storageinit=true: storage initializers will be generated
Info: -extract_do_while=true: storage initializers will be generated
Info: locating portname in constant GEP [12 x i8] c"result_pipe\00"

Info: added pipe result_pipe with type $uint<32>
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: added pipe in_data_pipe with type $uint<32>
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: locating portname in constant GEP [12 x i8] c"lower_start\00"

Info: added pipe lower_start with type $uint<8>
Info: locating portname in constant GEP [11 x i8] c"lower_done\00"

Info: added pipe lower_done with type $uint<8>
Info: locating portname in constant GEP [12 x i8] c"upper_start\00"

Info: added pipe upper_start with type $uint<8>
Info: locating portname in constant GEP [11 x i8] c"upper_done\00"

Info: added pipe upper_done with type $uint<8>
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: locating portname in constant GEP [12 x i8] c"lower_start\00"

Info: locating portname in constant GEP [12 x i8] c"upper_start\00"

Info: locating portname in constant GEP [11 x i8] c"lower_done\00"

Info: locating portname in constant GEP [11 x i8] c"upper_done\00"

Info: locating portname in constant GEP [18 x i8] c"elapsed_time_pipe\00"

Info: added pipe elapsed_time_pipe with type $uint<64>
Info: locating portname in constant GEP [12 x i8] c"result_pipe\00"

Info: generating storage initialization module which calls all initializers in parallel
Info: visiting function send_output
Info: traversal: visited block bb.nph3
Info: traversal: visited block bb.nph
Info: traversal: visited block bb_2
Info: traversal: visited block ._crit_edge
Info: traversal: visited block ._crit_edge4
Info: starting new BB-chain-dag with header bb.nph3
Info: starting new BB-chain-dag with header bb.nph
Info: starting new BB-chain-dag with header bb_2
Info: starting new BB-chain-dag with header ._crit_edge
Info: starting new BB-chain-dag with header ._crit_edge4
Basic Block Chain DAGS.
Basic-block-chain-DAG with header = bbx_xnph3
 bbx_xnph3
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph3
Basic-block-chain-DAG with header = bbx_xnph
 bbx_xnph
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph
Basic-block-chain-DAG with header = bb_2
 bb_2
   -> 
   <- 
loop-backs 
  bb_2
exit-points 
  bb_2
Basic-block-chain-DAG with header = xx_x_crit_edge
 xx_x_crit_edge
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge
Basic-block-chain-DAG with header = xx_x_crit_edge4
 xx_x_crit_edge4
   -> 
   <- 
loop-backs 
exit-points 
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"result_pipe\00"

Info: visiting function write_uint32
Info: ignoring external function write_uint32
Info: visiting function get_input
Info: traversal: visited block bb.nph12
Info: traversal: visited block bb.nph9
Info: traversal: visited block bb_2
Info: traversal: visited block ._crit_edge10
Info: traversal: visited block bb.nph.preheader
Info: traversal: visited block bb.nph
Info: traversal: visited block bb_6
Info: traversal: visited block ._crit_edge
Info: traversal: visited block ._crit_edge6
Info: starting new BB-chain-dag with header bb.nph12
Info: starting new BB-chain-dag with header bb.nph9
Info: starting new BB-chain-dag with header bb_2
Info: starting new BB-chain-dag with header ._crit_edge10
Info: starting new BB-chain-dag with header bb.nph.preheader
Info: starting new BB-chain-dag with header bb.nph
Info: starting new BB-chain-dag with header bb_6
Info: starting new BB-chain-dag with header ._crit_edge
Info: starting new BB-chain-dag with header ._crit_edge6
Basic Block Chain DAGS.
Basic-block-chain-DAG with header = bbx_xnph12
 bbx_xnph12
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph12
Basic-block-chain-DAG with header = bbx_xnph9
 bbx_xnph9
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph9
Basic-block-chain-DAG with header = bb_2
 bb_2
   -> 
   <- 
loop-backs 
  bb_2
exit-points 
  bb_2
Basic-block-chain-DAG with header = xx_x_crit_edge10
 xx_x_crit_edge10
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge10
Basic-block-chain-DAG with header = bbx_xnphx_xpreheader
 bbx_xnphx_xpreheader
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnphx_xpreheader
Basic-block-chain-DAG with header = bbx_xnph
 bbx_xnph
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph
Basic-block-chain-DAG with header = bb_6
 bb_6
   -> 
   <- 
loop-backs 
  bb_6
exit-points 
  bb_6
Basic-block-chain-DAG with header = xx_x_crit_edge
 xx_x_crit_edge
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge
Basic-block-chain-DAG with header = xx_x_crit_edge6
 xx_x_crit_edge6
   -> 
   <- 
loop-backs 
exit-points 
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr1 since it is not (really) used in any function..
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr1 since it is not (really) used in any function..
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: visiting function read_uint32
Info: ignoring external function read_uint32
Info: visiting function mmultiplyLower
Info: traversal: visited block bb.nph8
Info: traversal: visited block bb.nph5
Info: traversal: visited block bb.nph
Info: traversal: visited block bb_3
Info: traversal: visited block ._crit_edge
Info: traversal: visited block ._crit_edge6
Info: traversal: visited block ._crit_edge9
Info: starting new BB-chain-dag with header bb.nph8
Info: starting new BB-chain-dag with header bb.nph5
Info: starting new BB-chain-dag with header bb.nph
Info: starting new BB-chain-dag with header bb_3
Info: starting new BB-chain-dag with header ._crit_edge
Info: starting new BB-chain-dag with header ._crit_edge6
Info: starting new BB-chain-dag with header ._crit_edge9
Basic Block Chain DAGS.
Basic-block-chain-DAG with header = bbx_xnph8
 bbx_xnph8
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph8
Basic-block-chain-DAG with header = bbx_xnph5
 bbx_xnph5
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph5
Basic-block-chain-DAG with header = bbx_xnph
 bbx_xnph
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph
Basic-block-chain-DAG with header = bb_3
 bb_3
   -> 
   <- 
loop-backs 
  bb_3
exit-points 
  bb_3
Basic-block-chain-DAG with header = xx_x_crit_edge
 xx_x_crit_edge
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge
Basic-block-chain-DAG with header = xx_x_crit_edge6
 xx_x_crit_edge6
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge6
Basic-block-chain-DAG with header = xx_x_crit_edge9
 xx_x_crit_edge9
   -> 
   <- 
loop-backs 
exit-points 
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr2 since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"lower_start\00"

Info: found pipelined-loop: Basic-block-chain-DAG with header = bb_3
Info: ignoring call to special function __loop_pipelining_on__.
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr3 since it is not (really) used in any function..
Info: locating portname in constant GEP [11 x i8] c"lower_done\00"

Info: visiting function read_uint8
Info: ignoring external function read_uint8
Info: visiting function __loop_pipelining_on__
Info: ignoring external function __loop_pipelining_on__
Info: visiting function write_uint8
Info: ignoring external function write_uint8
Info: visiting function mmultiplyUpper
Info: traversal: visited block bb.nph8
Info: traversal: visited block bb.nph5
Info: traversal: visited block bb.nph
Info: traversal: visited block bb_3
Info: traversal: visited block ._crit_edge
Info: traversal: visited block ._crit_edge6
Info: traversal: visited block ._crit_edge9
Info: starting new BB-chain-dag with header bb.nph8
Info: starting new BB-chain-dag with header bb.nph5
Info: starting new BB-chain-dag with header bb.nph
Info: starting new BB-chain-dag with header bb_3
Info: starting new BB-chain-dag with header ._crit_edge
Info: starting new BB-chain-dag with header ._crit_edge6
Info: starting new BB-chain-dag with header ._crit_edge9
Basic Block Chain DAGS.
Basic-block-chain-DAG with header = bbx_xnph8
 bbx_xnph8
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph8
Basic-block-chain-DAG with header = bbx_xnph5
 bbx_xnph5
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph5
Basic-block-chain-DAG with header = bbx_xnph
 bbx_xnph
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph
Basic-block-chain-DAG with header = bb_3
 bb_3
   -> 
   <- 
loop-backs 
  bb_3
exit-points 
  bb_3
Basic-block-chain-DAG with header = xx_x_crit_edge
 xx_x_crit_edge
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge
Basic-block-chain-DAG with header = xx_x_crit_edge6
 xx_x_crit_edge6
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge6
Basic-block-chain-DAG with header = xx_x_crit_edge9
 xx_x_crit_edge9
   -> 
   <- 
loop-backs 
exit-points 
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr4 since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"upper_start\00"

Info: found pipelined-loop: Basic-block-chain-DAG with header = bb_3
Info: ignoring call to special function __loop_pipelining_on__.
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr5 since it is not (really) used in any function..
Info: locating portname in constant GEP [11 x i8] c"upper_done\00"

Info: visiting function mmultiply
Info: traversal: visited block bb_0
Info: traversal: visited block bb.nph9.i
Info: traversal: visited block bb_2
Info: traversal: visited block ._crit_edge10.i
Info: traversal: visited block bb.nph.i.preheader
Info: traversal: visited block bb.nph.i
Info: traversal: visited block bb_6
Info: traversal: visited block ._crit_edge.i
Info: traversal: visited block get_input.exit
Info: traversal: visited block bb.nph.i1
Info: traversal: visited block bb_10
Info: traversal: visited block ._crit_edge.i4
Info: traversal: visited block send_output.exit
Info: starting new BB-chain-dag with header bb_0
Info: starting new BB-chain-dag with header bb.nph9.i
Info: starting new BB-chain-dag with header bb_2
Info: starting new BB-chain-dag with header ._crit_edge10.i
Info: starting new BB-chain-dag with header bb.nph.i.preheader
Info: starting new BB-chain-dag with header bb.nph.i
Info: starting new BB-chain-dag with header bb_6
Info: starting new BB-chain-dag with header ._crit_edge.i
Info: starting new BB-chain-dag with header get_input.exit
Info: starting new BB-chain-dag with header bb.nph.i1
Info: starting new BB-chain-dag with header bb_10
Info: starting new BB-chain-dag with header ._crit_edge.i4
Info: starting new BB-chain-dag with header send_output.exit
Basic Block Chain DAGS.
Basic-block-chain-DAG with header = bb_0
 bb_0
   -> 
   <- 
loop-backs 
exit-points 
  bb_0
Basic-block-chain-DAG with header = bbx_xnph9x_xi
 bbx_xnph9x_xi
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnph9x_xi
Basic-block-chain-DAG with header = bb_2
 bb_2
   -> 
   <- 
loop-backs 
  bb_2
exit-points 
  bb_2
Basic-block-chain-DAG with header = xx_x_crit_edge10x_xi
 xx_x_crit_edge10x_xi
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edge10x_xi
Basic-block-chain-DAG with header = bbx_xnphx_xix_xpreheader
 bbx_xnphx_xix_xpreheader
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnphx_xix_xpreheader
Basic-block-chain-DAG with header = bbx_xnphx_xi
 bbx_xnphx_xi
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnphx_xi
Basic-block-chain-DAG with header = bb_6
 bb_6
   -> 
   <- 
loop-backs 
  bb_6
exit-points 
  bb_6
Basic-block-chain-DAG with header = xx_x_crit_edgex_xi
 xx_x_crit_edgex_xi
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edgex_xi
Basic-block-chain-DAG with header = get_inputx_xexit
 get_inputx_xexit
   -> 
   <- 
loop-backs 
exit-points 
  get_inputx_xexit
Basic-block-chain-DAG with header = bbx_xnphx_xi1
 bbx_xnphx_xi1
   -> 
   <- 
loop-backs 
exit-points 
  bbx_xnphx_xi1
Basic-block-chain-DAG with header = bb_10
 bb_10
   -> 
   <- 
loop-backs 
  bb_10
exit-points 
  bb_10
Basic-block-chain-DAG with header = xx_x_crit_edgex_xi4
 xx_x_crit_edgex_xi4
   -> 
   <- 
loop-backs 
exit-points 
  xx_x_crit_edgex_xi4
Basic-block-chain-DAG with header = send_outputx_xexit
 send_outputx_xexit
   -> 
   <- 
loop-backs 
exit-points 
Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr1 since it is not (really) used in any function..
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr1 since it is not (really) used in any function..
Info: locating portname in constant GEP [13 x i8] c"in_data_pipe\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr2 since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"lower_start\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr4 since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"upper_start\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr3 since it is not (really) used in any function..
Info: locating portname in constant GEP [11 x i8] c"lower_done\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr5 since it is not (really) used in any function..
Info: locating portname in constant GEP [11 x i8] c"upper_done\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr6 since it is not (really) used in any function..
Info: locating portname in constant GEP [18 x i8] c"elapsed_time_pipe\00"

Info: ignoring get-element-ptr to progx_xoptx_xo_iNtErNal_xx_xstr since it is not (really) used in any function..
Info: locating portname in constant GEP [12 x i8] c"result_pipe\00"

Info: visiting function timer
Info: ignoring external function timer
Info: visiting function write_uint64
Info: ignoring external function write_uint64
AaLinkExtMem prog.aa timer.Aa | vcFormat > prog.linked.aa
Info:  AaLinkExtMem built on AHIR commit 9bab90d2fbfa70d45ed410df32fc7e6e35726f14
Info:     Date: Mon Feb 1 17:21:43 2021 +0530
Info: parsed and added pipe elapsed_time_pipe width = 64 depth = 1
Info: parsed and added pipe in_data_pipe width = 32 depth = 2
Info: parsed and added pipe lower_done width = 8 depth = 1
Info: parsed and added pipe lower_start width = 8 depth = 1
Info: parsed and added pipe result_pipe width = 32 depth = 2
Info: parsed and added pipe upper_done width = 8 depth = 1
Info: parsed and added pipe upper_start width = 8 depth = 1
Info: Added module progx_xoptx_xo_storage_initializer_
Info: Added module send_output
Info: Added module get_input
Info: Added module mmultiplyLower
Info: Added module mmultiplyUpper
Info: Added module mmultiply
Info: finished parsing file prog.aa
Info: parsed and added pipe timer_req width = 1 depth = 1
Info: parsed and added pipe timer_resp width = 64 depth = 1
Info: Added module timerDaemon
Info: Added module timer
Info: finished parsing file timer.Aa
Info: Added module global_storage_initializer_
Info: elaborating the program .... initializing the call-graph
Info: mapping target object references..
Info: mapping source object references..
Info: checking for cycles in the call-graph ... 
Info: module order:
	get_input
	progx_xoptx_xo_storage_initializer_
	global_storage_initializer_
	timer
	mmultiply
	mmultiplyLower
	mmultiplyUpper
	send_output
	timerDaemon
Info: marking modules reachable from root-modules ... 
Info: module get_input is reachable from a specified root module.
Info: module global_storage_initializer_ is reachable from a specified root module.
Info: module progx_xoptx_xo_storage_initializer_ is reachable from a specified root module.
Info: module mmultiply is reachable from a specified root module.
Info: module timer is reachable from a specified root module.
Info: module mmultiplyLower is reachable from a specified root module.
Info: module mmultiplyUpper is reachable from a specified root module.
Info: module send_output is reachable from a specified root module.
Info: module timerDaemon is reachable from a specified root module.
Info: propagating types in the program ... 
Info: coalescing storage into distinct memory spaces ... 
Info: Marking foreign pointers in modules which are not called from the program
Info: Coalescing storage from native objects..
Info: Finished coalescing storage.. identified 3 disjoint memory space(s)
Info: Memory space 0: c_matrix 
Info: Memory space 1: a_matrix 
Info: Memory space 2: b_matrix 
Info: propagating constants in the program ... 
AaOpt -C prog.linked.aa | vcFormat > prog.linked.C.opt.aa
Info:  AaOpt built on AHIR commit 9bab90d2fbfa70d45ed410df32fc7e6e35726f14
Info:     Date: Mon Feb 1 17:21:43 2021 +0530
Info: parsed and added pipe elapsed_time_pipe width = 64 depth = 1
Info: parsed and added pipe in_data_pipe width = 32 depth = 2
Info: parsed and added pipe lower_done width = 8 depth = 1
Info: parsed and added pipe lower_start width = 8 depth = 1
Info: parsed and added pipe result_pipe width = 32 depth = 2
Info: parsed and added pipe timer_req width = 1 depth = 1
Info: parsed and added pipe timer_resp width = 64 depth = 1
Info: parsed and added pipe upper_done width = 8 depth = 1
Info: parsed and added pipe upper_start width = 8 depth = 1
Info: Added module get_input
Info: Added module progx_xoptx_xo_storage_initializer_
Info: Added module global_storage_initializer_
Info: Added module timer
Info: Added module mmultiply
Info: Added module mmultiplyLower
Info: Added module mmultiplyUpper
Info: Added module send_output
Info: Added module timerDaemon
Info: elaborating the program .... initializing the call-graph
Info: mapping target object references..
Info: mapping source object references..
Info: checking for cycles in the call-graph ... 
Info: module order:
	get_input
	progx_xoptx_xo_storage_initializer_
	global_storage_initializer_
	timer
	mmultiply
	mmultiplyLower
	mmultiplyUpper
	send_output
	timerDaemon
Info: marking modules reachable from root-modules ... 
Info: module get_input is reachable from a specified root module.
Info: module global_storage_initializer_ is reachable from a specified root module.
Info: module progx_xoptx_xo_storage_initializer_ is reachable from a specified root module.
Info: module mmultiply is reachable from a specified root module.
Info: module timer is reachable from a specified root module.
Info: module mmultiplyLower is reachable from a specified root module.
Info: module mmultiplyUpper is reachable from a specified root module.
Info: module send_output is reachable from a specified root module.
Info: module timerDaemon is reachable from a specified root module.
Info: propagating types in the program ... 
Info: coalescing storage into distinct memory spaces ... 
Info: Marking foreign pointers in modules which are not called from the program
Info: Coalescing storage from native objects..
Info: Finished coalescing storage.. identified 3 disjoint memory space(s)
Info: Memory space 0: a_matrix 
Info: Memory space 1: b_matrix 
Info: Memory space 2: c_matrix 
Info: propagating constants in the program ... 
Info: added 0 bits of buffering during path balancing.
AaOpt -B prog.linked.C.opt.aa | vcFormat > prog.linked.opt.aa
Info:  AaOpt built on AHIR commit 9bab90d2fbfa70d45ed410df32fc7e6e35726f14
Info:     Date: Mon Feb 1 17:21:43 2021 +0530
Info: parsed and added pipe elapsed_time_pipe width = 64 depth = 1
Info: parsed and added pipe in_data_pipe width = 32 depth = 2
Info: parsed and added pipe lower_done width = 8 depth = 1
Info: parsed and added pipe lower_start width = 8 depth = 1
Info: parsed and added pipe result_pipe width = 32 depth = 2
Info: parsed and added pipe timer_req width = 1 depth = 1
Info: parsed and added pipe timer_resp width = 64 depth = 1
Info: parsed and added pipe upper_done width = 8 depth = 1
Info: parsed and added pipe upper_start width = 8 depth = 1
Info: Added module get_input
Info: Added module progx_xoptx_xo_storage_initializer_
Info: Added module global_storage_initializer_
Info: Added module timer
Info: Added module mmultiply
Info: Added module mmultiplyLower
Info: Added module mmultiplyUpper
Info: Added module send_output
Info: Added module timerDaemon
Info: elaborating the program .... initializing the call-graph
Info: mapping target object references..
Info: mapping source object references..
Info: checking for cycles in the call-graph ... 
Info: module order:
	get_input
	progx_xoptx_xo_storage_initializer_
	global_storage_initializer_
	timer
	mmultiply
	mmultiplyLower
	mmultiplyUpper
	send_output
	timerDaemon
Info: marking modules reachable from root-modules ... 
Info: module get_input is reachable from a specified root module.
Info: module global_storage_initializer_ is reachable from a specified root module.
Info: module progx_xoptx_xo_storage_initializer_ is reachable from a specified root module.
Info: module mmultiply is reachable from a specified root module.
Info: module timer is reachable from a specified root module.
Info: module mmultiplyLower is reachable from a specified root module.
Info: module mmultiplyUpper is reachable from a specified root module.
Info: module send_output is reachable from a specified root module.
Info: module timerDaemon is reachable from a specified root module.
Info: propagating types in the program ... 
Info: coalescing storage into distinct memory spaces ... 
Info: Marking foreign pointers in modules which are not called from the program
Info: Coalescing storage from native objects..
Info: Finished coalescing storage.. identified 3 disjoint memory space(s)
Info: Memory space 0: a_matrix 
Info: Memory space 1: b_matrix 
Info: Memory space 2: c_matrix 
Info: propagating constants in the program ... 
Info:  started equalizing paths for do-while statement do_while_stmt_484 in module mmultiplyLower
Info: Longest path in do_while_stmt_484 is 14
Info: added 416 buffering bits during path balancing
Info:  started equalizing paths for do-while statement do_while_stmt_654 in module mmultiplyUpper
Info: Longest path in do_while_stmt_654 is 14
Info: added 416 buffering bits during path balancing
Info:  started equalizing paths for do-while statement do_while_stmt_853 in module timerDaemon
Info: Longest path in do_while_stmt_853 is 1
Info: added 832 bits of buffering during path balancing.
Aa2VC -O -C prog.linked.opt.aa | vcFormat > prog.vc
Info:  Aa2VC built on AHIR commit 9bab90d2fbfa70d45ed410df32fc7e6e35726f14
Info:     Date: Mon Feb 1 17:21:43 2021 +0530
Info: -O option selected, will parallelize straight-line sequences
Info: -C option selected, will generate C-stubs for mixed C-VHDL simulation
Info: parsed and added pipe elapsed_time_pipe width = 64 depth = 1
Info: parsed and added pipe in_data_pipe width = 32 depth = 2
Info: parsed and added pipe lower_done width = 8 depth = 1
Info: parsed and added pipe lower_start width = 8 depth = 1
Info: parsed and added pipe result_pipe width = 32 depth = 2
Info: parsed and added pipe timer_req width = 1 depth = 1
Info: parsed and added pipe timer_resp width = 64 depth = 1
Info: parsed and added pipe upper_done width = 8 depth = 1
Info: parsed and added pipe upper_start width = 8 depth = 1
Info: Added module get_input
Info: Added module progx_xoptx_xo_storage_initializer_
Info: Added module global_storage_initializer_
Info: Added module timer
Info: Added module mmultiply
Info: Added module mmultiplyLower
Info: Added module mmultiplyUpper
Info: Added module send_output
Info: Added module timerDaemon
Info: elaborating the program .... initializing the call-graph
Info: mapping target object references..
Info: mapping source object references..
Info: checking for cycles in the call-graph ... 
Info: module order:
	get_input
	progx_xoptx_xo_storage_initializer_
	global_storage_initializer_
	timer
	mmultiply
	mmultiplyLower
	mmultiplyUpper
	send_output
	timerDaemon
Info: marking modules reachable from root-modules ... 
Info: module get_input is reachable from a specified root module.
Info: module global_storage_initializer_ is reachable from a specified root module.
Info: module progx_xoptx_xo_storage_initializer_ is reachable from a specified root module.
Info: module mmultiply is reachable from a specified root module.
Info: module timer is reachable from a specified root module.
Info: module mmultiplyLower is reachable from a specified root module.
Info: module mmultiplyUpper is reachable from a specified root module.
Info: module send_output is reachable from a specified root module.
Info: module timerDaemon is reachable from a specified root module.
Info: propagating types in the program ... 
Info: coalescing storage into distinct memory spaces ... 
Info: Marking foreign pointers in modules which are not called from the program
Info: Coalescing storage from native objects..
Info: Finished coalescing storage.. identified 3 disjoint memory space(s)
Info: Memory space 0: a_matrix 
Info: Memory space 1: b_matrix 
Info: Memory space 2: c_matrix 
Info: propagating constants in the program ... 
Info: Writing optimized VC model.. 
Info: Writing gated clocks.. 
Info: Done writing optimized VC model.. 
vc2vhdl -D -S 4 -O -I 8 -v -a -C -e ahir_system -w -s ghdl -T mmultiply -T mmultiplyUpper -T mmultiplyLower -T timerDaemon  -f prog.vc 
Info: -D option selected: VHDL will have debug assertions..
Info: -S option selected: bypass stride will be set to 4.
Info: -O option selected, will try to compress control-path..
Info: -I will treat errors as warnings.
Info: -v option selected: lots of info will be printed (to stderr, and also dot-files of control-paths if -O option is selected).
Info: -a option selected: will try for minimum overall circuit area.
Info: -C option selected: will generate testbench which connects to foreign link.
Info: -e ahir_system top-level VHDL entity will have name ahir_system.unformatted_vhdl
Info: -w ahir_system will write separate system and testbench VHDL files.
Info: -s ghdl option selected: will generate testbench with VHPI link.
Info: module mmultiply set as one of the ever-running top modules. 
   NOTE: mmultiply cannot have any input/output arguments.
Info: module mmultiplyUpper set as one of the ever-running top modules. 
   NOTE: mmultiplyUpper cannot have any input/output arguments.
Info: module mmultiplyLower set as one of the ever-running top modules. 
   NOTE: mmultiplyLower cannot have any input/output arguments.
Info: module timerDaemon set as one of the ever-running top modules. 
   NOTE: timerDaemon cannot have any input/output arguments.
Warning: in equivalence operator array_obj_ref_43_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_43_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_50_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_114_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_114_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_121_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: control-path links to flow-through DPE array_obj_ref_43_index_0_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_43_index_1_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_43_index_1_rename ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_43_index_offset ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_43_root_address_inst ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_50_base_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_50_root_address_inst ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_50_addr_0 ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_50_gather_scatter ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_114_index_0_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_114_index_1_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_114_index_1_rename ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_114_index_offset ignored,  in module get_input
Warning: control-path links to flow-through DPE array_obj_ref_114_root_address_inst ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_121_base_resize ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_121_root_address_inst ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_121_addr_0 ignored,  in module get_input
Warning: control-path links to flow-through DPE ptr_deref_121_gather_scatter ignored,  in module get_input
Warning: in equivalence operator array_obj_ref_209_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_209_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_216_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_280_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_280_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_287_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_388_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_388_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_393_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: control-path links to flow-through DPE array_obj_ref_209_index_0_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_209_index_1_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_209_index_1_rename ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_209_index_offset ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_209_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_216_base_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_216_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_216_addr_0 ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_216_gather_scatter ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_280_index_0_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_280_index_1_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_280_index_1_rename ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_280_index_offset ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_280_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_287_base_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_287_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_287_addr_0 ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_287_gather_scatter ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_388_index_0_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_388_index_1_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_388_index_1_rename ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_388_index_offset ignored,  in module mmultiply
Warning: control-path links to flow-through DPE array_obj_ref_388_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_393_base_resize ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_393_root_address_inst ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_393_addr_0 ignored,  in module mmultiply
Warning: control-path links to flow-through DPE ptr_deref_393_gather_scatter ignored,  in module mmultiply
Warning: in equivalence operator array_obj_ref_468_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_468_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_500_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_500_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_506_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_506_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_511_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_515_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_559_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: control-path links to flow-through DPE array_obj_ref_468_index_0_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_468_index_1_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_468_index_1_rename ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_468_index_offset ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_468_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_500_index_0_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_500_index_1_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_500_index_1_rename ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_500_index_offset ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_500_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_506_index_0_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_506_index_1_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_506_index_1_rename ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_506_index_offset ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE array_obj_ref_506_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_511_base_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_511_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_511_addr_0 ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_511_gather_scatter ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_515_base_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_515_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_515_addr_0 ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_515_gather_scatter ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_559_base_resize ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_559_root_address_inst ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_559_addr_0 ignored,  in module mmultiplyLower
Warning: control-path links to flow-through DPE ptr_deref_559_gather_scatter ignored,  in module mmultiplyLower
Warning: in equivalence operator array_obj_ref_641_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_641_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_673_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_673_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_679_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_679_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_684_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_688_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_732_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: control-path links to flow-through DPE array_obj_ref_641_index_0_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_641_index_1_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_641_index_1_rename ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_641_index_offset ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_641_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_673_index_0_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_673_index_1_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_673_index_1_rename ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_673_index_offset ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_673_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_679_index_0_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_679_index_1_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_679_index_1_rename ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_679_index_offset ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE array_obj_ref_679_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_684_base_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_684_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_684_addr_0 ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_684_gather_scatter ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_688_base_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_688_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_688_addr_0 ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_688_gather_scatter ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_732_base_resize ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_732_root_address_inst ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_732_addr_0 ignored,  in module mmultiplyUpper
Warning: control-path links to flow-through DPE ptr_deref_732_gather_scatter ignored,  in module mmultiplyUpper
Warning: in equivalence operator array_obj_ref_805_index_0_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator array_obj_ref_805_index_1_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: in equivalence operator ptr_deref_810_base_resize, total input width is not equal to total output width.. output will truncate the input..
Warning: control-path links to flow-through DPE array_obj_ref_805_index_0_resize ignored,  in module send_output
Warning: control-path links to flow-through DPE array_obj_ref_805_index_1_resize ignored,  in module send_output
Warning: control-path links to flow-through DPE array_obj_ref_805_index_1_rename ignored,  in module send_output
Warning: control-path links to flow-through DPE array_obj_ref_805_index_offset ignored,  in module send_output
Warning: control-path links to flow-through DPE array_obj_ref_805_root_address_inst ignored,  in module send_output
Warning: control-path links to flow-through DPE ptr_deref_810_base_resize ignored,  in module send_output
Warning: control-path links to flow-through DPE ptr_deref_810_root_address_inst ignored,  in module send_output
Warning: control-path links to flow-through DPE ptr_deref_810_addr_0 ignored,  in module send_output
Warning: control-path links to flow-through DPE ptr_deref_810_gather_scatter ignored,  in module send_output
Warning: module get_input is not reachable from a top-level module, ignored
Warning: module global_storage_initializer_ is not reachable from a top-level module, ignored
Warning: module progx_xoptx_xo_storage_initializer_ is not reachable from a top-level module, ignored
Warning: module send_output is not reachable from a top-level module, ignored
Warning: exit not reachable from every element in region branch_block_stmt_185/assign_stmt_211_to_assign_stmt_230
	 un-visited elements
	addr_of_210_sample_start_
	addr_of_210_sample_completed_
	addr_of_210_update_start_
	addr_of_210_update_completed_
	array_obj_ref_209_root_address_calculated
	array_obj_ref_209_offset_calculated
	array_obj_ref_209_partial_sum_1_update_start
	array_obj_ref_209_partial_sum_1_update_complete
	array_obj_ref_209_partial_sum_1_Update
	array_obj_ref_209_final_index_sum_regn
	array_obj_ref_209_base_plus_offset
	addr_of_210_request
	addr_of_210_complete
	RPIPE_in_data_pipe_213_sample_start_
	RPIPE_in_data_pipe_213_sample_completed_
	RPIPE_in_data_pipe_213_update_start_
	RPIPE_in_data_pipe_213_update_completed_
	RPIPE_in_data_pipe_213_Sample
	RPIPE_in_data_pipe_213_Update
	ptr_deref_216_sample_start_
	ptr_deref_216_sample_completed_
	ptr_deref_216_base_address_calculated
	ptr_deref_216_word_address_calculated
	ptr_deref_216_root_address_calculated
	ptr_deref_216_base_address_resized
	ptr_deref_216_base_addr_resize
	ptr_deref_216_base_plus_offset
	ptr_deref_216_word_addrgen
	ptr_deref_216_Sample
Info: removed redundant fork point [ptr_deref_216_base_address_calculated] &-> [ptr_deref_216_sample_start_]
Info: removed redundant join point [ptr_deref_216_sample_start_] <-& [ptr_deref_216_base_address_calculated]
Info: removed redundant join point [array_obj_ref_209_offset_calculated] <-& [array_obj_ref_209_partial_sum_1_update_complete]
Info: removed redundant fork point [array_obj_ref_209_partial_sum_1_update_complete] &-> [array_obj_ref_209_offset_calculated]
Info: Detect and try to fix combinational loops by increasing interlock-buffering (two passes)
Info: Started Fix_Combinational_Loops (pass 1)
Info: Started will double buffer interlock-buffers if needed
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_block_stmt_185__entry__
FCL (pass 1): added vertex branch_block_stmt_185__exit__
FCL (pass 1): added vertex bb_0_bbx_xnph9x_xi
FCL (pass 1): added vertex merge_stmt_187__exit__
FCL (pass 1): added vertex bbx_xnph9x_xi_bb_2
FCL (pass 1): added vertex merge_stmt_197__exit__
FCL (pass 1): added vertex assign_stmt_211_to_assign_stmt_230__entry__
FCL (pass 1): added vertex assign_stmt_211_to_assign_stmt_230__exit__
FCL (pass 1): added vertex if_stmt_231__entry__
FCL (pass 1): added vertex if_stmt_231__exit__
FCL (pass 1): added vertex merge_stmt_237__entry__
FCL (pass 1): added vertex merge_stmt_237__exit__
FCL (pass 1): added vertex assign_stmt_243_to_assign_stmt_249__entry__
FCL (pass 1): added vertex assign_stmt_243_to_assign_stmt_249__exit__
FCL (pass 1): added vertex if_stmt_250__entry__
FCL (pass 1): added vertex if_stmt_250__exit__
FCL (pass 1): added vertex merge_stmt_256__entry__
FCL (pass 1): added vertex merge_stmt_256__exit__
FCL (pass 1): added vertex bbx_xnphx_xix_xpreheader_bbx_xnphx_xi
FCL (pass 1): added vertex merge_stmt_258__exit__
FCL (pass 1): added vertex bbx_xnphx_xi_bb_6
FCL (pass 1): added vertex merge_stmt_268__exit__
FCL (pass 1): added vertex assign_stmt_282_to_assign_stmt_301__entry__
FCL (pass 1): added vertex assign_stmt_282_to_assign_stmt_301__exit__
FCL (pass 1): added vertex if_stmt_302__entry__
FCL (pass 1): added vertex if_stmt_302__exit__
FCL (pass 1): added vertex merge_stmt_308__entry__
FCL (pass 1): added vertex merge_stmt_308__exit__
FCL (pass 1): added vertex assign_stmt_314_to_assign_stmt_320__entry__
FCL (pass 1): added vertex assign_stmt_314_to_assign_stmt_320__exit__
FCL (pass 1): added vertex if_stmt_321__entry__
FCL (pass 1): added vertex if_stmt_321__exit__
FCL (pass 1): added vertex merge_stmt_327__entry__
FCL (pass 1): added vertex merge_stmt_327__exit__
FCL (pass 1): added vertex call_stmt_329_to_assign_stmt_364__entry__
FCL (pass 1): added vertex call_stmt_329_to_assign_stmt_364__exit__
FCL (pass 1): added vertex get_inputx_xexit_bbx_xnphx_xi1
FCL (pass 1): added vertex merge_stmt_366__exit__
FCL (pass 1): added vertex bbx_xnphx_xi1_bb_10
FCL (pass 1): added vertex merge_stmt_376__exit__
FCL (pass 1): added vertex assign_stmt_390_to_assign_stmt_409__entry__
FCL (pass 1): added vertex assign_stmt_390_to_assign_stmt_409__exit__
FCL (pass 1): added vertex if_stmt_410__entry__
FCL (pass 1): added vertex if_stmt_410__exit__
FCL (pass 1): added vertex merge_stmt_416__entry__
FCL (pass 1): added vertex merge_stmt_416__exit__
FCL (pass 1): added vertex assign_stmt_422_to_assign_stmt_428__entry__
FCL (pass 1): added vertex assign_stmt_422_to_assign_stmt_428__exit__
FCL (pass 1): added vertex if_stmt_429__entry__
FCL (pass 1): added vertex if_stmt_429__exit__
FCL (pass 1): added vertex merge_stmt_435__entry__
FCL (pass 1): added vertex merge_stmt_435__exit__
FCL (pass 1): added vertex return__
FCL (pass 1): added vertex merge_stmt_437__exit__
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex addr_of_210_sample_start_
FCL (pass 1): added vertex addr_of_210_sample_completed_
FCL (pass 1): added vertex addr_of_210_update_start_
FCL (pass 1): added vertex addr_of_210_update_completed_
FCL (pass 1): added vertex array_obj_ref_209_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_209_offset_calculated
FCL (pass 1): added vertex array_obj_ref_209_index_resized_0
FCL (pass 1): added vertex array_obj_ref_209_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_209_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_209_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_209_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_209_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_209_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_209_index_resized_1
FCL (pass 1): added vertex array_obj_ref_209_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_209_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_209_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_209_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_209_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_209_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex RPIPE_in_data_pipe_213_sample_start_
FCL (pass 1): added vertex RPIPE_in_data_pipe_213_sample_completed_
FCL (pass 1): added vertex RPIPE_in_data_pipe_213_update_start_
FCL (pass 1): added vertex RPIPE_in_data_pipe_213_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_216_sample_start_
FCL (pass 1): added vertex ptr_deref_216_sample_completed_
FCL (pass 1): added vertex ptr_deref_216_update_start_
FCL (pass 1): added vertex ptr_deref_216_update_completed_
FCL (pass 1): added vertex ptr_deref_216_base_address_calculated
FCL (pass 1): added vertex ptr_deref_216_word_address_calculated
FCL (pass 1): added vertex ptr_deref_216_root_address_calculated
FCL (pass 1): added vertex ptr_deref_216_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex split_req
FCL (pass 1): added vertex split_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond4_232_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex bb_2_xx_x_crit_edge10x_xi
FCL (pass 1): added vertex bb_2_bb_2
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond5_251_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edge10x_xi_bbx_xnphx_xix_xpreheader
FCL (pass 1): added vertex xx_x_crit_edge10x_xi_bbx_xnph9x_xi
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex addr_of_281_sample_start_
FCL (pass 1): added vertex addr_of_281_sample_completed_
FCL (pass 1): added vertex addr_of_281_update_start_
FCL (pass 1): added vertex addr_of_281_update_completed_
FCL (pass 1): added vertex array_obj_ref_280_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_280_offset_calculated
FCL (pass 1): added vertex array_obj_ref_280_index_resized_0
FCL (pass 1): added vertex array_obj_ref_280_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_280_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_280_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_280_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_280_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_280_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_280_index_resized_1
FCL (pass 1): added vertex array_obj_ref_280_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_280_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_280_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_280_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_280_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_280_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex RPIPE_in_data_pipe_284_sample_start_
FCL (pass 1): added vertex RPIPE_in_data_pipe_284_sample_completed_
FCL (pass 1): added vertex RPIPE_in_data_pipe_284_update_start_
FCL (pass 1): added vertex RPIPE_in_data_pipe_284_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_287_sample_start_
FCL (pass 1): added vertex ptr_deref_287_sample_completed_
FCL (pass 1): added vertex ptr_deref_287_update_start_
FCL (pass 1): added vertex ptr_deref_287_update_completed_
FCL (pass 1): added vertex ptr_deref_287_base_address_calculated
FCL (pass 1): added vertex ptr_deref_287_word_address_calculated
FCL (pass 1): added vertex ptr_deref_287_root_address_calculated
FCL (pass 1): added vertex ptr_deref_287_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex split_req
FCL (pass 1): added vertex split_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond2_303_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex bb_6_xx_x_crit_edgex_xi
FCL (pass 1): added vertex bb_6_bb_6
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond3_322_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edgex_xi_get_inputx_xexit
FCL (pass 1): added vertex xx_x_crit_edgex_xi_bbx_xnphx_xi
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex call_stmt_329_sample_start_
FCL (pass 1): added vertex call_stmt_329_sample_completed_
FCL (pass 1): added vertex call_stmt_329_update_start_
FCL (pass 1): added vertex call_stmt_329_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex crr
FCL (pass 1): added vertex cra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ccr
FCL (pass 1): added vertex cca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex type_cast_334_sample_start_
FCL (pass 1): added vertex type_cast_334_sample_completed_
FCL (pass 1): added vertex type_cast_334_update_start_
FCL (pass 1): added vertex type_cast_334_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex WPIPE_lower_start_336_sample_start_
FCL (pass 1): added vertex WPIPE_lower_start_336_sample_completed_
FCL (pass 1): added vertex WPIPE_lower_start_336_update_start_
FCL (pass 1): added vertex WPIPE_lower_start_336_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex WPIPE_upper_start_340_sample_start_
FCL (pass 1): added vertex WPIPE_upper_start_340_sample_completed_
FCL (pass 1): added vertex WPIPE_upper_start_340_update_start_
FCL (pass 1): added vertex WPIPE_upper_start_340_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex RPIPE_lower_done_345_sample_start_
FCL (pass 1): added vertex RPIPE_lower_done_345_sample_completed_
FCL (pass 1): added vertex RPIPE_lower_done_345_update_start_
FCL (pass 1): added vertex RPIPE_lower_done_345_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex RPIPE_upper_done_348_sample_start_
FCL (pass 1): added vertex RPIPE_upper_done_348_sample_completed_
FCL (pass 1): added vertex RPIPE_upper_done_348_update_start_
FCL (pass 1): added vertex RPIPE_upper_done_348_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex call_stmt_351_sample_start_
FCL (pass 1): added vertex call_stmt_351_sample_completed_
FCL (pass 1): added vertex call_stmt_351_update_start_
FCL (pass 1): added vertex call_stmt_351_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex crr
FCL (pass 1): added vertex cra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ccr
FCL (pass 1): added vertex cca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex type_cast_355_sample_start_
FCL (pass 1): added vertex type_cast_355_sample_completed_
FCL (pass 1): added vertex type_cast_355_update_start_
FCL (pass 1): added vertex type_cast_355_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex WPIPE_elapsed_time_pipe_362_sample_start_
FCL (pass 1): added vertex WPIPE_elapsed_time_pipe_362_sample_completed_
FCL (pass 1): added vertex WPIPE_elapsed_time_pipe_362_update_start_
FCL (pass 1): added vertex WPIPE_elapsed_time_pipe_362_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex addr_of_389_sample_start_
FCL (pass 1): added vertex addr_of_389_sample_completed_
FCL (pass 1): added vertex addr_of_389_update_start_
FCL (pass 1): added vertex addr_of_389_update_completed_
FCL (pass 1): added vertex array_obj_ref_388_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_388_offset_calculated
FCL (pass 1): added vertex array_obj_ref_388_index_resized_0
FCL (pass 1): added vertex array_obj_ref_388_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_388_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_388_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_388_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_388_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_388_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_388_index_resized_1
FCL (pass 1): added vertex array_obj_ref_388_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_388_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_388_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_388_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_388_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_388_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_393_sample_start_
FCL (pass 1): added vertex ptr_deref_393_sample_completed_
FCL (pass 1): added vertex ptr_deref_393_update_start_
FCL (pass 1): added vertex ptr_deref_393_update_completed_
FCL (pass 1): added vertex ptr_deref_393_base_address_calculated
FCL (pass 1): added vertex ptr_deref_393_word_address_calculated
FCL (pass 1): added vertex ptr_deref_393_root_address_calculated
FCL (pass 1): added vertex ptr_deref_393_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex merge_req
FCL (pass 1): added vertex merge_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex WPIPE_result_pipe_395_sample_start_
FCL (pass 1): added vertex WPIPE_result_pipe_395_sample_completed_
FCL (pass 1): added vertex WPIPE_result_pipe_395_update_start_
FCL (pass 1): added vertex WPIPE_result_pipe_395_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond1_411_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex bb_10_xx_x_crit_edgex_xi4
FCL (pass 1): added vertex bb_10_bb_10
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond_430_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edgex_xi4_send_outputx_xexit
FCL (pass 1): added vertex xx_x_crit_edgex_xi4_bbx_xnphx_xi1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_192_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_188_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_188_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_187_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_188_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_198_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_202_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_198_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_197_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_198_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_237_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_256_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_265_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_259_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_259_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_258_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_259_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_269_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_273_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_269_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_268_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_269_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_308_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_327_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_371_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_367_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_367_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_366_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_367_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_377_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_381_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_377_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_376_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_377_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_416_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_435_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_437_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> branch_block_stmt_185__entry__
FCL (pass 1): added control edge branch_block_stmt_185__entry__ -> bb_0_bbx_xnph9x_xi
FCL (pass 1): added control edge branch_block_stmt_185__exit__ -> $exit
FCL (pass 1): added control edge bb_0_bbx_xnph9x_xi -> $entry
FCL (pass 1): added control edge merge_stmt_187__exit__ -> bbx_xnph9x_xi_bb_2
FCL (pass 1): added control edge bbx_xnph9x_xi_bb_2 -> $entry
FCL (pass 1): added control edge merge_stmt_197__exit__ -> assign_stmt_211_to_assign_stmt_230__entry__
FCL (pass 1): added control edge assign_stmt_211_to_assign_stmt_230__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_211_to_assign_stmt_230__exit__ -> if_stmt_231__entry__
FCL (pass 1): added control edge if_stmt_231__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_231__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_231__exit__ -> merge_stmt_237__entry__
FCL (pass 1): added control edge merge_stmt_237__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_237__exit__ -> assign_stmt_243_to_assign_stmt_249__entry__
FCL (pass 1): added control edge assign_stmt_243_to_assign_stmt_249__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_243_to_assign_stmt_249__exit__ -> if_stmt_250__entry__
FCL (pass 1): added control edge if_stmt_250__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_250__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_250__exit__ -> merge_stmt_256__entry__
FCL (pass 1): added control edge merge_stmt_256__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_256__exit__ -> bbx_xnphx_xix_xpreheader_bbx_xnphx_xi
FCL (pass 1): added control edge bbx_xnphx_xix_xpreheader_bbx_xnphx_xi -> $entry
FCL (pass 1): added control edge merge_stmt_258__exit__ -> bbx_xnphx_xi_bb_6
FCL (pass 1): added control edge bbx_xnphx_xi_bb_6 -> $entry
FCL (pass 1): added control edge merge_stmt_268__exit__ -> assign_stmt_282_to_assign_stmt_301__entry__
FCL (pass 1): added control edge assign_stmt_282_to_assign_stmt_301__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_282_to_assign_stmt_301__exit__ -> if_stmt_302__entry__
FCL (pass 1): added control edge if_stmt_302__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_302__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_302__exit__ -> merge_stmt_308__entry__
FCL (pass 1): added control edge merge_stmt_308__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_308__exit__ -> assign_stmt_314_to_assign_stmt_320__entry__
FCL (pass 1): added control edge assign_stmt_314_to_assign_stmt_320__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_314_to_assign_stmt_320__exit__ -> if_stmt_321__entry__
FCL (pass 1): added control edge if_stmt_321__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_321__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_321__exit__ -> merge_stmt_327__entry__
FCL (pass 1): added control edge merge_stmt_327__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_327__exit__ -> call_stmt_329_to_assign_stmt_364__entry__
FCL (pass 1): added control edge call_stmt_329_to_assign_stmt_364__entry__ -> $entry
FCL (pass 1): added control edge call_stmt_329_to_assign_stmt_364__exit__ -> get_inputx_xexit_bbx_xnphx_xi1
FCL (pass 1): added control edge get_inputx_xexit_bbx_xnphx_xi1 -> $entry
FCL (pass 1): added control edge merge_stmt_366__exit__ -> bbx_xnphx_xi1_bb_10
FCL (pass 1): added control edge bbx_xnphx_xi1_bb_10 -> $entry
FCL (pass 1): added control edge merge_stmt_376__exit__ -> assign_stmt_390_to_assign_stmt_409__entry__
FCL (pass 1): added control edge assign_stmt_390_to_assign_stmt_409__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_390_to_assign_stmt_409__exit__ -> if_stmt_410__entry__
FCL (pass 1): added control edge if_stmt_410__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_410__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_410__exit__ -> merge_stmt_416__entry__
FCL (pass 1): added control edge merge_stmt_416__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_416__exit__ -> assign_stmt_422_to_assign_stmt_428__entry__
FCL (pass 1): added control edge assign_stmt_422_to_assign_stmt_428__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_422_to_assign_stmt_428__exit__ -> if_stmt_429__entry__
FCL (pass 1): added control edge if_stmt_429__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_429__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_429__exit__ -> merge_stmt_435__entry__
FCL (pass 1): added control edge merge_stmt_435__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_435__exit__ -> return__
FCL (pass 1): added control edge return__ -> $entry
FCL (pass 1): added control edge merge_stmt_437__exit__ -> branch_block_stmt_185__exit__
FCL (pass 1): added control edge $entry -> array_obj_ref_209_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_209_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> ptr_deref_216_update_start_
FCL (pass 1): added control edge $entry -> addr_of_210_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_209_index_computed_0
FCL (pass 1): added control edge $entry -> RPIPE_in_data_pipe_213_sample_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_209_index_computed_1
FCL (pass 1): added control edge addr_of_210_sample_start_ -> $entry
FCL (pass 1): added control edge addr_of_210_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_210_update_completed_ -> ptr_deref_216_base_address_calculated
FCL (pass 1): added control edge array_obj_ref_209_root_address_calculated -> addr_of_210_sample_start_
FCL (pass 1): added control edge array_obj_ref_209_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_209_index_resized_0 -> array_obj_ref_209_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_209_index_scaled_0 -> array_obj_ref_209_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_209_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_index_resized_0
FCL (pass 1): added control edge array_obj_ref_209_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_209_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_209_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_209_index_scale_0_update_complete -> array_obj_ref_209_index_scaled_0
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_209_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_209_index_scaled_1 -> array_obj_ref_209_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_209_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_209_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_209_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_209_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_209_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_209_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_210_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_210_update_completed_
FCL (pass 1): added control edge RPIPE_in_data_pipe_213_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_in_data_pipe_213_sample_completed_ -> RPIPE_in_data_pipe_213_update_start_
FCL (pass 1): added control edge RPIPE_in_data_pipe_213_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_in_data_pipe_213_update_completed_ -> ptr_deref_216_sample_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_in_data_pipe_213_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_in_data_pipe_213_update_completed_
FCL (pass 1): added control edge ptr_deref_216_sample_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_216_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_216_update_completed_ -> $exit
FCL (pass 1): added control edge ptr_deref_216_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_216_word_address_calculated -> ptr_deref_216_sample_start_
FCL (pass 1): added control edge ptr_deref_216_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_216_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_216_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_216_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_216_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> split_req
FCL (pass 1): added control edge split_req -> split_ack
FCL (pass 1): added control edge split_ack -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_216_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_216_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_211_to_assign_stmt_230__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_231__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond4_232_place
FCL (pass 1): added control edge R_exitcond4_232_place -> $entry
FCL (pass 1): added control edge R_exitcond4_232_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_2_xx_x_crit_edge10x_xi
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_2_bb_2
FCL (pass 1): added control edge bb_2_xx_x_crit_edge10x_xi -> $entry
FCL (pass 1): added control edge bb_2_bb_2 -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_243_to_assign_stmt_249__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_250__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond5_251_place
FCL (pass 1): added control edge R_exitcond5_251_place -> $entry
FCL (pass 1): added control edge R_exitcond5_251_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge10x_xi_bbx_xnphx_xix_xpreheader
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge10x_xi_bbx_xnph9x_xi
FCL (pass 1): added control edge xx_x_crit_edge10x_xi_bbx_xnphx_xix_xpreheader -> $entry
FCL (pass 1): added control edge xx_x_crit_edge10x_xi_bbx_xnph9x_xi -> $entry
FCL (pass 1): added control edge $entry -> array_obj_ref_280_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> RPIPE_in_data_pipe_284_sample_start_
FCL (pass 1): added control edge $entry -> ptr_deref_287_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_280_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_280_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_280_index_computed_1
FCL (pass 1): added control edge $entry -> addr_of_281_update_start_
FCL (pass 1): added control edge addr_of_281_sample_start_ -> $entry
FCL (pass 1): added control edge addr_of_281_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_281_update_completed_ -> ptr_deref_287_base_address_calculated
FCL (pass 1): added control edge array_obj_ref_280_root_address_calculated -> addr_of_281_sample_start_
FCL (pass 1): added control edge array_obj_ref_280_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_280_index_resized_0 -> array_obj_ref_280_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_280_index_scaled_0 -> array_obj_ref_280_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_280_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_index_resized_0
FCL (pass 1): added control edge array_obj_ref_280_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_280_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_280_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_280_index_scale_0_update_complete -> array_obj_ref_280_index_scaled_0
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_280_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_280_index_scaled_1 -> array_obj_ref_280_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_280_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_280_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_280_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_280_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_280_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge array_obj_ref_280_partial_sum_1_update_complete -> array_obj_ref_280_offset_calculated
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_280_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_281_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_281_update_completed_
FCL (pass 1): added control edge RPIPE_in_data_pipe_284_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_in_data_pipe_284_sample_completed_ -> RPIPE_in_data_pipe_284_update_start_
FCL (pass 1): added control edge RPIPE_in_data_pipe_284_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_in_data_pipe_284_update_completed_ -> ptr_deref_287_sample_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_in_data_pipe_284_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_in_data_pipe_284_update_completed_
FCL (pass 1): added control edge ptr_deref_287_sample_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_287_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_287_update_completed_ -> $exit
FCL (pass 1): added control edge ptr_deref_287_base_address_calculated -> ptr_deref_287_sample_start_
FCL (pass 1): added control edge ptr_deref_287_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_287_word_address_calculated -> ptr_deref_287_sample_start_
FCL (pass 1): added control edge ptr_deref_287_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_287_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_287_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_287_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_287_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> split_req
FCL (pass 1): added control edge split_req -> split_ack
FCL (pass 1): added control edge split_ack -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_287_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_287_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_282_to_assign_stmt_301__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_302__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond2_303_place
FCL (pass 1): added control edge R_exitcond2_303_place -> $entry
FCL (pass 1): added control edge R_exitcond2_303_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_6_xx_x_crit_edgex_xi
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_6_bb_6
FCL (pass 1): added control edge bb_6_xx_x_crit_edgex_xi -> $entry
FCL (pass 1): added control edge bb_6_bb_6 -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_314_to_assign_stmt_320__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_321__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond3_322_place
FCL (pass 1): added control edge R_exitcond3_322_place -> $entry
FCL (pass 1): added control edge R_exitcond3_322_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edgex_xi_get_inputx_xexit
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edgex_xi_bbx_xnphx_xi
FCL (pass 1): added control edge xx_x_crit_edgex_xi_get_inputx_xexit -> $entry
FCL (pass 1): added control edge xx_x_crit_edgex_xi_bbx_xnphx_xi -> $entry
FCL (pass 1): added control edge $entry -> call_stmt_329_sample_start_
FCL (pass 1): added control edge $entry -> call_stmt_329_update_start_
FCL (pass 1): added control edge $entry -> type_cast_334_update_start_
FCL (pass 1): added control edge $entry -> WPIPE_lower_start_336_sample_start_
FCL (pass 1): added control edge $entry -> WPIPE_upper_start_340_sample_start_
FCL (pass 1): added control edge $entry -> RPIPE_lower_done_345_sample_start_
FCL (pass 1): added control edge $entry -> RPIPE_upper_done_348_sample_start_
FCL (pass 1): added control edge $entry -> call_stmt_351_update_start_
FCL (pass 1): added control edge $entry -> type_cast_355_update_start_
FCL (pass 1): added control edge call_stmt_329_sample_start_ -> $entry
FCL (pass 1): added control edge call_stmt_329_update_start_ -> $entry
FCL (pass 1): added control edge call_stmt_329_update_completed_ -> type_cast_334_sample_start_
FCL (pass 1): added control edge call_stmt_329_update_completed_ -> call_stmt_351_sample_start_
FCL (pass 1): added control edge $entry -> crr
FCL (pass 1): added control edge cra -> $exit
FCL (pass 1): added control edge $exit -> call_stmt_329_sample_completed_
FCL (pass 1): added control edge $entry -> ccr
FCL (pass 1): added control edge cca -> $exit
FCL (pass 1): added control edge $exit -> call_stmt_329_update_completed_
FCL (pass 1): added control edge type_cast_334_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_334_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_334_update_completed_ -> WPIPE_elapsed_time_pipe_362_sample_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_334_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_334_update_completed_
FCL (pass 1): added control edge WPIPE_lower_start_336_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_lower_start_336_sample_completed_ -> WPIPE_lower_start_336_update_start_
FCL (pass 1): added control edge WPIPE_lower_start_336_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_lower_start_336_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_lower_start_336_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_lower_start_336_update_completed_
FCL (pass 1): added control edge WPIPE_upper_start_340_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_upper_start_340_sample_completed_ -> WPIPE_upper_start_340_update_start_
FCL (pass 1): added control edge WPIPE_upper_start_340_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_upper_start_340_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_upper_start_340_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_upper_start_340_update_completed_
FCL (pass 1): added control edge RPIPE_lower_done_345_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_lower_done_345_sample_completed_ -> RPIPE_lower_done_345_update_start_
FCL (pass 1): added control edge RPIPE_lower_done_345_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_lower_done_345_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_lower_done_345_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_lower_done_345_update_completed_
FCL (pass 1): added control edge RPIPE_upper_done_348_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_upper_done_348_sample_completed_ -> RPIPE_upper_done_348_update_start_
FCL (pass 1): added control edge RPIPE_upper_done_348_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_upper_done_348_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_upper_done_348_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_upper_done_348_update_completed_
FCL (pass 1): added control edge call_stmt_351_sample_start_ -> $entry
FCL (pass 1): added control edge call_stmt_351_update_start_ -> $entry
FCL (pass 1): added control edge call_stmt_351_update_completed_ -> type_cast_355_sample_start_
FCL (pass 1): added control edge $entry -> crr
FCL (pass 1): added control edge cra -> $exit
FCL (pass 1): added control edge $exit -> call_stmt_351_sample_completed_
FCL (pass 1): added control edge $entry -> ccr
FCL (pass 1): added control edge cca -> $exit
FCL (pass 1): added control edge $exit -> call_stmt_351_update_completed_
FCL (pass 1): added control edge type_cast_355_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_355_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_355_update_completed_ -> WPIPE_elapsed_time_pipe_362_sample_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_355_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_355_update_completed_
FCL (pass 1): added control edge WPIPE_elapsed_time_pipe_362_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_elapsed_time_pipe_362_sample_completed_ -> WPIPE_elapsed_time_pipe_362_update_start_
FCL (pass 1): added control edge WPIPE_elapsed_time_pipe_362_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_elapsed_time_pipe_362_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_elapsed_time_pipe_362_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_elapsed_time_pipe_362_update_completed_
FCL (pass 1): added control edge $exit -> call_stmt_329_to_assign_stmt_364__exit__
FCL (pass 1): added control edge $entry -> addr_of_389_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_388_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_388_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_388_index_computed_1
FCL (pass 1): added control edge $entry -> array_obj_ref_388_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> ptr_deref_393_update_start_
FCL (pass 1): added control edge addr_of_389_sample_start_ -> $entry
FCL (pass 1): added control edge addr_of_389_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_389_update_completed_ -> ptr_deref_393_base_address_calculated
FCL (pass 1): added control edge array_obj_ref_388_root_address_calculated -> addr_of_389_sample_start_
FCL (pass 1): added control edge array_obj_ref_388_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_388_index_resized_0 -> array_obj_ref_388_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_388_index_scaled_0 -> array_obj_ref_388_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_388_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_index_resized_0
FCL (pass 1): added control edge array_obj_ref_388_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_388_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_388_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_388_index_scale_0_update_complete -> array_obj_ref_388_index_scaled_0
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_388_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_388_index_scaled_1 -> array_obj_ref_388_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_388_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_388_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_388_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_388_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_388_partial_sum_1_update_complete -> array_obj_ref_388_offset_calculated
FCL (pass 1): added control edge array_obj_ref_388_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_388_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_389_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_389_update_completed_
FCL (pass 1): added control edge ptr_deref_393_sample_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_393_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_393_update_completed_ -> WPIPE_result_pipe_395_sample_start_
FCL (pass 1): added control edge ptr_deref_393_base_address_calculated -> ptr_deref_393_sample_start_
FCL (pass 1): added control edge ptr_deref_393_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_393_word_address_calculated -> ptr_deref_393_sample_start_
FCL (pass 1): added control edge ptr_deref_393_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_393_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_393_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_393_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_393_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_393_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> merge_req
FCL (pass 1): added control edge merge_req -> merge_ack
FCL (pass 1): added control edge merge_ack -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_393_update_completed_
FCL (pass 1): added control edge WPIPE_result_pipe_395_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_result_pipe_395_sample_completed_ -> WPIPE_result_pipe_395_update_start_
FCL (pass 1): added control edge WPIPE_result_pipe_395_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_result_pipe_395_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_result_pipe_395_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_result_pipe_395_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_390_to_assign_stmt_409__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_410__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond1_411_place
FCL (pass 1): added control edge R_exitcond1_411_place -> $entry
FCL (pass 1): added control edge R_exitcond1_411_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_10_xx_x_crit_edgex_xi4
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_10_bb_10
FCL (pass 1): added control edge bb_10_xx_x_crit_edgex_xi4 -> $entry
FCL (pass 1): added control edge bb_10_bb_10 -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_422_to_assign_stmt_428__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_429__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond_430_place
FCL (pass 1): added control edge R_exitcond_430_place -> $entry
FCL (pass 1): added control edge R_exitcond_430_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edgex_xi4_send_outputx_xexit
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edgex_xi4_bbx_xnphx_xi1
FCL (pass 1): added control edge xx_x_crit_edgex_xi4_send_outputx_xexit -> $entry
FCL (pass 1): added control edge xx_x_crit_edgex_xi4_bbx_xnphx_xi1 -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_192_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_188_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_187_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_188_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_187_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_187_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_188_ack
FCL (pass 1): added control edge phi_stmt_188_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_187__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_198_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_197_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_202_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_198_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_197_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_197_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_198_ack
FCL (pass 1): added control edge phi_stmt_198_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_197__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_237__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_237_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_237_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_237__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_256__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_256_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_256_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_256__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_265_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_259_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_258_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_259_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_258_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_258_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_259_ack
FCL (pass 1): added control edge phi_stmt_259_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_258__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_269_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_268_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_273_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_269_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_268_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_268_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_269_ack
FCL (pass 1): added control edge phi_stmt_269_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_268__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_308__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_308_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_308_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_308__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_327__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_327_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_327_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_327__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_371_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_367_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_366_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_367_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_366_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_366_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_367_ack
FCL (pass 1): added control edge phi_stmt_367_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_366__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_377_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_376_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_381_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_377_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_376_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_376_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_377_ack
FCL (pass 1): added control edge phi_stmt_377_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_376__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_416__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_416_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_416_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_416__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_435__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_435_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_435_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_435__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_437_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_437_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_437__exit__
FCL (pass 1): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 864
Info:  Fix_Combi pass OK
Info: reducing Control-path 
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element if_stmt_231__exit__ maybe it was dead?
Info: removed CP-element if_stmt_321__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_327__entry__ maybe it was dead?
Info: removed CP-element merge_stmt_237__entry__ maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element merge_stmt_308__entry__ maybe it was dead?
Info: removed CP-element if_stmt_302__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_435__entry__ maybe it was dead?
Info: removed CP-element if_stmt_429__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_416__entry__ maybe it was dead?
Info: removed CP-element if_stmt_410__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_256__entry__ maybe it was dead?
Info: removed CP-element if_stmt_250__exit__ maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: finding nucleii 
Info:  Total number of strongly-connected-components is 48
Info: SCC 0
	e_35
Info: SCC 1
	e_37
Info: SCC 2
	e_47
Info: SCC 3
	e_36
Info: SCC 4
	e_69
Info: SCC 5
	e_60
Info: SCC 6
	e_59
Info: SCC 7
	e_62
Info: SCC 8
	e_61
Info: SCC 9
	e_55
	e_56
	e_57
	e_58
	e_63
	e_64
	e_65
	e_66
	e_67
	e_68
	e_70
	e_96
	e_97
	e_98
	e_99
	e_100
	e_101
	e_102
	e_103
	e_104
	e_105
	e_106
Info: SCC 10
	e_95
Info: SCC 11
	e_54
Info: SCC 12
	e_53
Info: SCC 13
	e_52
Info: SCC 14
	e_51
Info: SCC 15
	e_38
Info: SCC 16
	e_40
Info: SCC 17
	e_39
Info: SCC 18
	e_42
Info: SCC 19
	e_41
Info: SCC 20
	e_44
Info: SCC 21
	e_43
Info: SCC 22
	e_46
Info: SCC 23
	e_45
Info: SCC 24
	e_49
Info: SCC 25
	e_48
Info: SCC 26
	e_50
Info: SCC 27
	e_33
Info: SCC 28
	e_23
Info: SCC 29
	e_22
Info: SCC 30
	e_28
Info: SCC 31
	e_27
Info: SCC 32
	e_24
Info: SCC 33
	e_26
Info: SCC 34
	e_25
Info: SCC 35
	e_20
	e_21
	e_29
	e_30
	e_31
	e_32
	e_34
	e_18
	e_19
	e_84
	e_85
	e_86
	e_87
	e_88
	e_89
	e_90
	e_91
	e_92
	e_93
	e_94
Info: SCC 36
	e_83
Info: SCC 37
	e_16
Info: SCC 38
	e_11
Info: SCC 39
	e_10
Info: SCC 40
	e_7
Info: SCC 41
	e_6
Info: SCC 42
	e_5
Info: SCC 43
	e_9
Info: SCC 44
	e_8
Info: SCC 45
	e_3
	e_12
	e_2
	e_4
	e_13
	e_17
	e_1
	e_14
	e_15
	e_72
	e_73
	e_74
	e_75
	e_76
	e_77
	e_78
	e_79
	e_80
	e_81
	e_82
Info: SCC 46
	e_71
Info: SCC 47
	e_0
Info: Info: transition [phi_stmt_486_merged_reqs] is isolated, removed.
Info: Info: transition [phi_stmt_491_merged_reqs] is isolated, removed.
Warning: exit not reachable from every element in region branch_block_stmt_441/assign_stmt_470
	 un-visited elements
	addr_of_469_sample_start_
	addr_of_469_sample_completed_
	array_obj_ref_468_root_address_calculated
	array_obj_ref_468_offset_calculated
	array_obj_ref_468_partial_sum_1_update_start
	array_obj_ref_468_partial_sum_1_update_complete
	array_obj_ref_468_partial_sum_1_Update
	array_obj_ref_468_final_index_sum_regn
	array_obj_ref_468_base_plus_offset
	addr_of_469_request
Info: removed redundant join point [array_obj_ref_468_offset_calculated] <-& [array_obj_ref_468_partial_sum_1_update_complete]
Info: removed redundant fork point [array_obj_ref_468_partial_sum_1_update_complete] &-> [array_obj_ref_468_offset_calculated]
Info: Detect and try to fix combinational loops by increasing interlock-buffering (two passes)
Info: Started Fix_Combinational_Loops (pass 1)
Info: Started will double buffer interlock-buffers if needed
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_block_stmt_441__entry__
FCL (pass 1): added vertex branch_block_stmt_441__exit__
FCL (pass 1): added vertex assign_stmt_444__entry__
FCL (pass 1): added vertex assign_stmt_444__exit__
FCL (pass 1): added vertex bbx_xnph8_bbx_xnph5
FCL (pass 1): added vertex merge_stmt_446__exit__
FCL (pass 1): added vertex bbx_xnph5_bbx_xnph
FCL (pass 1): added vertex merge_stmt_456__exit__
FCL (pass 1): added vertex assign_stmt_470__entry__
FCL (pass 1): added vertex assign_stmt_470__exit__
FCL (pass 1): added vertex bbx_xnph_bb_3
FCL (pass 1): added vertex merge_stmt_472__exit__
FCL (pass 1): added vertex do_while_stmt_484__entry__
FCL (pass 1): added vertex do_while_stmt_484__exit__
FCL (pass 1): added vertex if_stmt_548__entry__
FCL (pass 1): added vertex if_stmt_548__exit__
FCL (pass 1): added vertex merge_stmt_552__entry__
FCL (pass 1): added vertex merge_stmt_552__exit__
FCL (pass 1): added vertex assign_stmt_561_to_assign_stmt_573__entry__
FCL (pass 1): added vertex assign_stmt_561_to_assign_stmt_573__exit__
FCL (pass 1): added vertex if_stmt_574__entry__
FCL (pass 1): added vertex if_stmt_574__exit__
FCL (pass 1): added vertex merge_stmt_580__entry__
FCL (pass 1): added vertex merge_stmt_580__exit__
FCL (pass 1): added vertex assign_stmt_586_to_assign_stmt_592__entry__
FCL (pass 1): added vertex assign_stmt_586_to_assign_stmt_592__exit__
FCL (pass 1): added vertex if_stmt_593__entry__
FCL (pass 1): added vertex if_stmt_593__exit__
FCL (pass 1): added vertex merge_stmt_599__entry__
FCL (pass 1): added vertex merge_stmt_599__exit__
FCL (pass 1): added vertex assign_stmt_602__entry__
FCL (pass 1): added vertex assign_stmt_602__exit__
FCL (pass 1): added vertex return__
FCL (pass 1): added vertex merge_stmt_604__exit__
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex RPIPE_lower_start_443_sample_start_
FCL (pass 1): added vertex RPIPE_lower_start_443_sample_completed_
FCL (pass 1): added vertex RPIPE_lower_start_443_update_start_
FCL (pass 1): added vertex RPIPE_lower_start_443_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex addr_of_469_sample_start_
FCL (pass 1): added vertex addr_of_469_sample_completed_
FCL (pass 1): added vertex addr_of_469_update_start_
FCL (pass 1): added vertex addr_of_469_update_completed_
FCL (pass 1): added vertex array_obj_ref_468_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_468_offset_calculated
FCL (pass 1): added vertex array_obj_ref_468_index_resized_0
FCL (pass 1): added vertex array_obj_ref_468_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_468_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_468_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_468_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_468_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_468_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_468_index_resized_1
FCL (pass 1): added vertex array_obj_ref_468_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_468_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_468_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_468_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_468_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex do_while_stmt_484__entry__
FCL (pass 1): added vertex do_while_stmt_484__exit__
FCL (pass 1): added vertex loop_back
FCL (pass 1): added vertex condition_done
FCL (pass 1): added vertex loop_body_done
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex back_edge_to_loop_body
FCL (pass 1): added vertex first_time_through_loop_body
FCL (pass 1): added vertex loop_body_start
FCL (pass 1): added vertex condition_evaluated
FCL (pass 1): added vertex aggregated_phi_sample_req
FCL (pass 1): added vertex aggregated_phi_sample_ack
FCL (pass 1): added vertex aggregated_phi_update_req
FCL (pass 1): added vertex aggregated_phi_update_ack
FCL (pass 1): added vertex phi_stmt_486_sample_start_
FCL (pass 1): added vertex phi_stmt_486_sample_completed_
FCL (pass 1): added vertex phi_stmt_486_update_start_
FCL (pass 1): added vertex phi_stmt_486_update_completed_
FCL (pass 1): added vertex phi_stmt_486_sample_start__ps
FCL (pass 1): added vertex phi_stmt_486_sample_completed__ps
FCL (pass 1): added vertex phi_stmt_486_update_start__ps
FCL (pass 1): added vertex phi_stmt_486_update_completed__ps
FCL (pass 1): added vertex phi_stmt_486_loopback_trigger
FCL (pass 1): added vertex phi_stmt_486_loopback_sample_req
FCL (pass 1): added vertex phi_stmt_486_loopback_sample_req_ps
FCL (pass 1): added vertex phi_stmt_486_entry_trigger
FCL (pass 1): added vertex phi_stmt_486_entry_sample_req
FCL (pass 1): added vertex phi_stmt_486_entry_sample_req_ps
FCL (pass 1): added vertex phi_stmt_486_phi_mux_ack
FCL (pass 1): added vertex phi_stmt_486_phi_mux_ack_ps
FCL (pass 1): added vertex type_cast_489_sample_start__ps
FCL (pass 1): added vertex type_cast_489_sample_completed__ps
FCL (pass 1): added vertex type_cast_489_update_start__ps
FCL (pass 1): added vertex type_cast_489_update_completed__ps
FCL (pass 1): added vertex type_cast_489_sample_start_
FCL (pass 1): added vertex type_cast_489_sample_completed_
FCL (pass 1): added vertex type_cast_489_update_start_
FCL (pass 1): added vertex type_cast_489_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_490_sample_completed__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_490_update_start__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_490_update_completed__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_490_sample_start_
FCL (pass 1): added vertex R_vx_x02_at_entry_490_sample_completed_
FCL (pass 1): added vertex R_vx_x02_at_entry_490_update_start_
FCL (pass 1): added vertex R_vx_x02_at_entry_490_update_completed_
FCL (pass 1): added vertex phi_stmt_491_sample_start_
FCL (pass 1): added vertex phi_stmt_491_sample_completed_
FCL (pass 1): added vertex phi_stmt_491_update_start_
FCL (pass 1): added vertex phi_stmt_491_update_completed_
FCL (pass 1): added vertex phi_stmt_491_sample_start__ps
FCL (pass 1): added vertex phi_stmt_491_sample_completed__ps
FCL (pass 1): added vertex phi_stmt_491_update_start__ps
FCL (pass 1): added vertex phi_stmt_491_update_completed__ps
FCL (pass 1): added vertex phi_stmt_491_loopback_trigger
FCL (pass 1): added vertex phi_stmt_491_loopback_sample_req
FCL (pass 1): added vertex phi_stmt_491_loopback_sample_req_ps
FCL (pass 1): added vertex phi_stmt_491_entry_trigger
FCL (pass 1): added vertex phi_stmt_491_entry_sample_req
FCL (pass 1): added vertex phi_stmt_491_entry_sample_req_ps
FCL (pass 1): added vertex phi_stmt_491_phi_mux_ack
FCL (pass 1): added vertex phi_stmt_491_phi_mux_ack_ps
FCL (pass 1): added vertex type_cast_494_sample_start__ps
FCL (pass 1): added vertex type_cast_494_sample_completed__ps
FCL (pass 1): added vertex type_cast_494_update_start__ps
FCL (pass 1): added vertex type_cast_494_update_completed__ps
FCL (pass 1): added vertex type_cast_494_sample_start_
FCL (pass 1): added vertex type_cast_494_sample_completed_
FCL (pass 1): added vertex type_cast_494_update_start_
FCL (pass 1): added vertex type_cast_494_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_495_sample_completed__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_495_update_start__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_495_update_completed__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_495_sample_start_
FCL (pass 1): added vertex R_kx_x01_at_entry_495_sample_completed_
FCL (pass 1): added vertex R_kx_x01_at_entry_495_update_start_
FCL (pass 1): added vertex R_kx_x01_at_entry_495_update_completed_
FCL (pass 1): added vertex addr_of_501_sample_start_
FCL (pass 1): added vertex addr_of_501_sample_completed_
FCL (pass 1): added vertex addr_of_501_update_start_
FCL (pass 1): added vertex addr_of_501_update_completed_
FCL (pass 1): added vertex array_obj_ref_500_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_500_offset_calculated
FCL (pass 1): added vertex array_obj_ref_500_index_resized_0
FCL (pass 1): added vertex array_obj_ref_500_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_500_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_500_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_500_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_500_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_500_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_500_index_resized_1
FCL (pass 1): added vertex array_obj_ref_500_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_500_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_500_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_500_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_500_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex addr_of_507_sample_start_
FCL (pass 1): added vertex addr_of_507_sample_completed_
FCL (pass 1): added vertex addr_of_507_update_start_
FCL (pass 1): added vertex addr_of_507_update_completed_
FCL (pass 1): added vertex array_obj_ref_506_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_506_offset_calculated
FCL (pass 1): added vertex array_obj_ref_506_index_resized_0
FCL (pass 1): added vertex array_obj_ref_506_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_506_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_506_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_506_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_506_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_506_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_506_index_resized_1
FCL (pass 1): added vertex array_obj_ref_506_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_506_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_506_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_506_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_506_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_511_sample_start_
FCL (pass 1): added vertex ptr_deref_511_sample_completed_
FCL (pass 1): added vertex ptr_deref_511_update_start_
FCL (pass 1): added vertex ptr_deref_511_update_completed_
FCL (pass 1): added vertex ptr_deref_511_base_address_calculated
FCL (pass 1): added vertex ptr_deref_511_word_address_calculated
FCL (pass 1): added vertex ptr_deref_511_root_address_calculated
FCL (pass 1): added vertex ptr_deref_511_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex merge_req
FCL (pass 1): added vertex merge_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_515_sample_start_
FCL (pass 1): added vertex ptr_deref_515_sample_completed_
FCL (pass 1): added vertex ptr_deref_515_update_start_
FCL (pass 1): added vertex ptr_deref_515_update_completed_
FCL (pass 1): added vertex ptr_deref_515_base_address_calculated
FCL (pass 1): added vertex ptr_deref_515_word_address_calculated
FCL (pass 1): added vertex ptr_deref_515_root_address_calculated
FCL (pass 1): added vertex ptr_deref_515_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex merge_req
FCL (pass 1): added vertex merge_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex assign_stmt_524_sample_start_
FCL (pass 1): added vertex assign_stmt_524_sample_completed_
FCL (pass 1): added vertex assign_stmt_524_update_start_
FCL (pass 1): added vertex assign_stmt_524_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex loop_body_delay_to_condition_start
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_bb_3_xx_x_crit_edge_taken_549_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex bb_3_xx_x_crit_edge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ptr_deref_559_sample_start_
FCL (pass 1): added vertex ptr_deref_559_sample_completed_
FCL (pass 1): added vertex ptr_deref_559_update_start_
FCL (pass 1): added vertex ptr_deref_559_update_completed_
FCL (pass 1): added vertex ptr_deref_559_base_address_calculated
FCL (pass 1): added vertex ptr_deref_559_word_address_calculated
FCL (pass 1): added vertex ptr_deref_559_root_address_calculated
FCL (pass 1): added vertex ptr_deref_559_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex split_req
FCL (pass 1): added vertex split_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond_575_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 1): added vertex xx_x_crit_edge_bbx_xnph
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond6_594_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 1): added vertex xx_x_crit_edge6_bbx_xnph5
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex WPIPE_lower_done_600_sample_start_
FCL (pass 1): added vertex WPIPE_lower_done_600_sample_completed_
FCL (pass 1): added vertex WPIPE_lower_done_600_update_start_
FCL (pass 1): added vertex WPIPE_lower_done_600_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_451_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_447_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_447_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_446_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_447_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_461_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_457_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_457_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_456_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_457_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_472_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_553_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_552_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_553_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_580_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_599_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_604_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> branch_block_stmt_441__entry__
FCL (pass 1): added control edge branch_block_stmt_441__entry__ -> assign_stmt_444__entry__
FCL (pass 1): added control edge branch_block_stmt_441__exit__ -> $exit
FCL (pass 1): added control edge assign_stmt_444__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_444__exit__ -> bbx_xnph8_bbx_xnph5
FCL (pass 1): added control edge bbx_xnph8_bbx_xnph5 -> $entry
FCL (pass 1): added control edge merge_stmt_446__exit__ -> bbx_xnph5_bbx_xnph
FCL (pass 1): added control edge bbx_xnph5_bbx_xnph -> $entry
FCL (pass 1): added control edge merge_stmt_456__exit__ -> assign_stmt_470__entry__
FCL (pass 1): added control edge assign_stmt_470__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_470__exit__ -> bbx_xnph_bb_3
FCL (pass 1): added control edge bbx_xnph_bb_3 -> $entry
FCL (pass 1): added control edge merge_stmt_472__exit__ -> do_while_stmt_484__entry__
FCL (pass 1): added control edge do_while_stmt_484__entry__ -> $entry
FCL (pass 1): added control edge do_while_stmt_484__exit__ -> if_stmt_548__entry__
FCL (pass 1): added control edge if_stmt_548__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_548__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_548__exit__ -> merge_stmt_552__entry__
FCL (pass 1): added control edge merge_stmt_552__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_552__exit__ -> assign_stmt_561_to_assign_stmt_573__entry__
FCL (pass 1): added control edge assign_stmt_561_to_assign_stmt_573__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_561_to_assign_stmt_573__exit__ -> if_stmt_574__entry__
FCL (pass 1): added control edge if_stmt_574__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_574__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_574__exit__ -> merge_stmt_580__entry__
FCL (pass 1): added control edge merge_stmt_580__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_580__exit__ -> assign_stmt_586_to_assign_stmt_592__entry__
FCL (pass 1): added control edge assign_stmt_586_to_assign_stmt_592__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_586_to_assign_stmt_592__exit__ -> if_stmt_593__entry__
FCL (pass 1): added control edge if_stmt_593__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_593__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_593__exit__ -> merge_stmt_599__entry__
FCL (pass 1): added control edge merge_stmt_599__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_599__exit__ -> assign_stmt_602__entry__
FCL (pass 1): added control edge assign_stmt_602__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_602__exit__ -> return__
FCL (pass 1): added control edge return__ -> $entry
FCL (pass 1): added control edge merge_stmt_604__exit__ -> branch_block_stmt_441__exit__
FCL (pass 1): added control edge $entry -> RPIPE_lower_start_443_sample_start_
FCL (pass 1): added control edge RPIPE_lower_start_443_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_lower_start_443_sample_completed_ -> RPIPE_lower_start_443_update_start_
FCL (pass 1): added control edge RPIPE_lower_start_443_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_lower_start_443_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_lower_start_443_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_lower_start_443_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_444__exit__
FCL (pass 1): added control edge $entry -> addr_of_469_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_468_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_468_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_468_index_computed_1
FCL (pass 1): added control edge $entry -> array_obj_ref_468_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_469_sample_start_ -> $entry
FCL (pass 1): added control edge addr_of_469_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_469_update_completed_ -> $exit
FCL (pass 1): added control edge array_obj_ref_468_root_address_calculated -> addr_of_469_sample_start_
FCL (pass 1): added control edge array_obj_ref_468_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_468_index_resized_0 -> array_obj_ref_468_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_468_index_scaled_0 -> array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_468_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_index_resized_0
FCL (pass 1): added control edge array_obj_ref_468_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_468_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_468_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_468_index_scale_0_update_complete -> array_obj_ref_468_index_scaled_0
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_468_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_468_index_scaled_1 -> array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_468_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_468_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_468_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_468_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_468_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_468_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_469_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_469_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_470__exit__
FCL (pass 1): added control edge $entry -> do_while_stmt_484__entry__
FCL (pass 1): added control edge do_while_stmt_484__entry__ -> first_time_through_loop_body
FCL (pass 1): added control edge do_while_stmt_484__exit__ -> $exit
FCL (pass 1): added control edge loop_back -> back_edge_to_loop_body
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge $entry -> array_obj_ref_500_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> phi_stmt_486_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_486_update_start_
FCL (pass 1): added control edge $entry -> phi_stmt_491_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_491_update_start_
FCL (pass 1): added control edge $entry -> addr_of_501_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_500_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> addr_of_507_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_506_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_506_index_computed_1
FCL (pass 1): added control edge $entry -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 1): added (cpf) control edge back_edge_to_loop_body -> loop_body_start
FCL (pass 1): added (cpf) control edge first_time_through_loop_body -> loop_body_start
FCL (pass 1): added control edge loop_body_start -> $entry
FCL (pass 1): added control edge loop_body_start -> loop_body_delay_to_condition_start
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added control edge aggregated_phi_sample_req -> phi_stmt_486_sample_start__ps
FCL (pass 1): added control edge aggregated_phi_sample_req -> phi_stmt_491_sample_start__ps
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_486_sample_completed_
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_491_sample_completed_
FCL (pass 1): added control edge aggregated_phi_update_req -> phi_stmt_486_update_start__ps
FCL (pass 1): added control edge aggregated_phi_update_req -> phi_stmt_491_update_start__ps
FCL (pass 1): added control edge aggregated_phi_update_ack -> condition_evaluated
FCL (pass 1): added (marked) control edge aggregated_phi_update_ack -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_486_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_486_sample_completed_ -> ptr_deref_511_update_start_
FCL (pass 1): added control edge phi_stmt_486_sample_completed_ -> ptr_deref_515_update_start_
FCL (pass 1): added control edge phi_stmt_486_sample_completed_ -> assign_stmt_524_update_start_
FCL (pass 1): added control edge phi_stmt_486_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_486_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_486_update_completed_ -> assign_stmt_524_sample_start_
FCL (pass 1): added (marked) control edge phi_stmt_486_update_completed_ -> phi_stmt_486_update_start_
FCL (pass 1): added (cpf) control edge phi_stmt_486_sample_start__ps -> type_cast_489_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_486_sample_start__ps -> R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 1): added control edge phi_stmt_486_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 1): added (cpf) control edge phi_stmt_486_update_start__ps -> type_cast_489_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_486_update_start__ps -> R_vx_x02_at_entry_490_update_start__ps
FCL (pass 1): added control edge phi_stmt_486_update_completed__ps -> phi_stmt_486_update_completed_
FCL (pass 1): added (cpf) control edge phi_stmt_486_loopback_trigger -> type_cast_489_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_486_loopback_trigger -> type_cast_489_sample_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_486_loopback_sample_req -> phi_stmt_486_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_486_loopback_sample_req_ps -> phi_stmt_486_loopback_sample_req
FCL (pass 1): added (cpf) control edge phi_stmt_486_entry_trigger -> R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_486_entry_trigger -> R_vx_x02_at_entry_490_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_486_entry_sample_req -> phi_stmt_486_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_486_entry_sample_req_ps -> phi_stmt_486_entry_sample_req
FCL (pass 1): added control edge phi_stmt_486_phi_mux_ack -> phi_stmt_486_phi_mux_ack_ps
FCL (pass 1): added (cpf) control edge phi_stmt_486_phi_mux_ack_ps -> phi_stmt_486_update_completed__ps
FCL (pass 1): added control edge type_cast_489_sample_start__ps -> type_cast_489_sample_start_
FCL (pass 1): added (cpf) control edge type_cast_489_sample_completed__ps -> phi_stmt_486_sample_completed__ps
FCL (pass 1): added control edge type_cast_489_update_start__ps -> type_cast_489_update_start_
FCL (pass 1): added (cpf) control edge type_cast_489_update_completed__ps -> phi_stmt_486_loopback_sample_req_ps
FCL (pass 1): added control edge type_cast_489_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_489_sample_completed_ -> type_cast_489_sample_completed__ps
FCL (pass 1): added control edge type_cast_489_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_489_update_completed_ -> type_cast_489_update_completed__ps
FCL (pass 1): added (marked) control edge type_cast_489_update_completed_ -> type_cast_489_update_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_489_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_489_update_completed_
FCL (pass 1): added control edge R_vx_x02_at_entry_490_sample_start__ps -> R_vx_x02_at_entry_490_sample_start_
FCL (pass 1): added (cpf) control edge R_vx_x02_at_entry_490_sample_completed__ps -> phi_stmt_486_sample_completed__ps
FCL (pass 1): added control edge R_vx_x02_at_entry_490_update_start__ps -> R_vx_x02_at_entry_490_update_start_
FCL (pass 1): added (cpf) control edge R_vx_x02_at_entry_490_update_completed__ps -> phi_stmt_486_entry_sample_req_ps
FCL (pass 1): added control edge R_vx_x02_at_entry_490_sample_start_ -> R_vx_x02_at_entry_490_sample_completed_
FCL (pass 1): added control edge R_vx_x02_at_entry_490_sample_completed_ -> R_vx_x02_at_entry_490_sample_completed__ps
FCL (pass 1): added control edge R_vx_x02_at_entry_490_update_start_ -> R_vx_x02_at_entry_490_update_completed_
FCL (pass 1): added control edge phi_stmt_491_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_491_sample_completed_ -> $exit
FCL (pass 1): added control edge phi_stmt_491_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_491_update_completed_ -> condition_evaluated
FCL (pass 1): added control edge phi_stmt_491_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_491_update_completed_ -> array_obj_ref_500_index_computed_1
FCL (pass 1): added control edge phi_stmt_491_update_completed_ -> array_obj_ref_506_index_computed_0
FCL (pass 1): added (marked) control edge phi_stmt_491_update_completed_ -> phi_stmt_491_update_start_
FCL (pass 1): added (cpf) control edge phi_stmt_491_sample_start__ps -> type_cast_494_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_491_sample_start__ps -> R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 1): added control edge phi_stmt_491_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 1): added (cpf) control edge phi_stmt_491_update_start__ps -> type_cast_494_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_491_update_start__ps -> R_kx_x01_at_entry_495_update_start__ps
FCL (pass 1): added control edge phi_stmt_491_update_completed__ps -> phi_stmt_491_update_completed_
FCL (pass 1): added (cpf) control edge phi_stmt_491_loopback_trigger -> type_cast_494_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_491_loopback_trigger -> type_cast_494_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_491_loopback_sample_req -> phi_stmt_491_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_491_loopback_sample_req_ps -> phi_stmt_491_loopback_sample_req
FCL (pass 1): added (cpf) control edge phi_stmt_491_entry_trigger -> R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_491_entry_trigger -> R_kx_x01_at_entry_495_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_491_entry_sample_req -> phi_stmt_491_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_491_entry_sample_req_ps -> phi_stmt_491_entry_sample_req
FCL (pass 1): added control edge phi_stmt_491_phi_mux_ack -> phi_stmt_491_phi_mux_ack_ps
FCL (pass 1): added (cpf) control edge phi_stmt_491_phi_mux_ack_ps -> phi_stmt_491_update_completed__ps
FCL (pass 1): added control edge type_cast_494_sample_start__ps -> type_cast_494_sample_start_
FCL (pass 1): added (cpf) control edge type_cast_494_sample_completed__ps -> phi_stmt_491_sample_completed__ps
FCL (pass 1): added control edge type_cast_494_update_start__ps -> type_cast_494_update_start_
FCL (pass 1): added (cpf) control edge type_cast_494_update_completed__ps -> phi_stmt_491_loopback_sample_req_ps
FCL (pass 1): added control edge type_cast_494_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_494_sample_completed_ -> type_cast_494_sample_completed__ps
FCL (pass 1): added control edge type_cast_494_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_494_update_completed_ -> type_cast_494_update_completed__ps
FCL (pass 1): added (marked) control edge type_cast_494_update_completed_ -> type_cast_494_update_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_494_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_494_update_completed_
FCL (pass 1): added control edge R_kx_x01_at_entry_495_sample_start__ps -> R_kx_x01_at_entry_495_sample_start_
FCL (pass 1): added (cpf) control edge R_kx_x01_at_entry_495_sample_completed__ps -> phi_stmt_491_sample_completed__ps
FCL (pass 1): added control edge R_kx_x01_at_entry_495_update_start__ps -> R_kx_x01_at_entry_495_update_start_
FCL (pass 1): added (cpf) control edge R_kx_x01_at_entry_495_update_completed__ps -> phi_stmt_491_entry_sample_req_ps
FCL (pass 1): added control edge R_kx_x01_at_entry_495_sample_start_ -> R_kx_x01_at_entry_495_sample_completed_
FCL (pass 1): added control edge R_kx_x01_at_entry_495_sample_completed_ -> R_kx_x01_at_entry_495_sample_completed__ps
FCL (pass 1): added control edge R_kx_x01_at_entry_495_update_start_ -> R_kx_x01_at_entry_495_update_completed_
FCL (pass 1): added control edge addr_of_501_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge addr_of_501_sample_completed_ -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_501_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_501_update_completed_ -> ptr_deref_511_base_address_calculated
FCL (pass 1): added (marked) control edge addr_of_501_update_completed_ -> addr_of_501_update_start_
FCL (pass 1): added control edge array_obj_ref_500_root_address_calculated -> addr_of_501_sample_start_
FCL (pass 1): added control edge array_obj_ref_500_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_500_index_resized_0 -> array_obj_ref_500_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_500_index_scaled_0 -> array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_500_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_index_resized_0
FCL (pass 1): added control edge array_obj_ref_500_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_500_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_500_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_500_index_scale_0_update_complete -> array_obj_ref_500_index_scaled_0
FCL (pass 1): added (marked) control edge array_obj_ref_500_index_scale_0_update_complete -> array_obj_ref_500_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_500_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_500_index_scaled_1 -> array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_500_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_500_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_500_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_500_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_500_partial_sum_1_update_complete -> array_obj_ref_500_offset_calculated
FCL (pass 1): added control edge array_obj_ref_500_partial_sum_1_update_complete -> $entry
FCL (pass 1): added (marked) control edge array_obj_ref_500_partial_sum_1_update_complete -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_500_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_501_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_501_update_completed_
FCL (pass 1): added control edge addr_of_507_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge addr_of_507_sample_completed_ -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_507_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_507_update_completed_ -> ptr_deref_515_base_address_calculated
FCL (pass 1): added (marked) control edge addr_of_507_update_completed_ -> addr_of_507_update_start_
FCL (pass 1): added control edge array_obj_ref_506_root_address_calculated -> addr_of_507_sample_start_
FCL (pass 1): added control edge array_obj_ref_506_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_506_index_resized_0 -> array_obj_ref_506_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_506_index_scaled_0 -> array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 1): added (marked) control edge array_obj_ref_506_index_scaled_0 -> phi_stmt_491_update_start_
FCL (pass 1): added control edge array_obj_ref_506_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_index_resized_0
FCL (pass 1): added control edge array_obj_ref_506_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_506_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_506_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_506_index_scale_0_update_complete -> array_obj_ref_506_index_scaled_0
FCL (pass 1): added (marked) control edge array_obj_ref_506_index_scale_0_update_complete -> array_obj_ref_506_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_506_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_506_index_scaled_1 -> array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_506_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_506_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_506_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_506_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_506_partial_sum_1_update_complete -> array_obj_ref_506_offset_calculated
FCL (pass 1): added control edge array_obj_ref_506_partial_sum_1_update_complete -> $entry
FCL (pass 1): added (marked) control edge array_obj_ref_506_partial_sum_1_update_complete -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_506_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_507_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_507_update_completed_
FCL (pass 1): added control edge ptr_deref_511_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge ptr_deref_511_sample_completed_ -> addr_of_501_update_start_
FCL (pass 1): added control edge ptr_deref_511_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_511_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge ptr_deref_511_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 1): added (marked) control edge ptr_deref_511_update_completed_ -> ptr_deref_511_update_start_
FCL (pass 1): added control edge ptr_deref_511_base_address_calculated -> ptr_deref_511_sample_start_
FCL (pass 1): added control edge ptr_deref_511_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_511_word_address_calculated -> ptr_deref_511_sample_start_
FCL (pass 1): added control edge ptr_deref_511_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_511_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_511_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_511_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_511_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_511_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> merge_req
FCL (pass 1): added control edge merge_req -> merge_ack
FCL (pass 1): added control edge merge_ack -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_511_update_completed_
FCL (pass 1): added control edge ptr_deref_515_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge ptr_deref_515_sample_completed_ -> addr_of_507_update_start_
FCL (pass 1): added control edge ptr_deref_515_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_515_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge ptr_deref_515_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 1): added (marked) control edge ptr_deref_515_update_completed_ -> ptr_deref_515_update_start_
FCL (pass 1): added control edge ptr_deref_515_base_address_calculated -> ptr_deref_515_sample_start_
FCL (pass 1): added control edge ptr_deref_515_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_515_word_address_calculated -> ptr_deref_515_sample_start_
FCL (pass 1): added control edge ptr_deref_515_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_515_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_515_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_515_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_515_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_515_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> merge_req
FCL (pass 1): added control edge merge_req -> merge_ack
FCL (pass 1): added control edge merge_ack -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_515_update_completed_
FCL (pass 1): added control edge assign_stmt_524_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge assign_stmt_524_sample_completed_ -> phi_stmt_486_update_start_
FCL (pass 1): added control edge assign_stmt_524_update_start_ -> $entry
FCL (pass 1): added control edge assign_stmt_524_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge assign_stmt_524_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 1): added (marked) control edge assign_stmt_524_update_completed_ -> assign_stmt_524_update_start_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_524_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_524_update_completed_
FCL (pass 1): added control edge $exit -> loop_body_done
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> do_while_stmt_484__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_548__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_bb_3_xx_x_crit_edge_taken_549_place
FCL (pass 1): added control edge R_bb_3_xx_x_crit_edge_taken_549_place -> $entry
FCL (pass 1): added control edge R_bb_3_xx_x_crit_edge_taken_549_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_3_xx_x_crit_edge
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> if_stmt_548__exit__
FCL (pass 1): added control edge bb_3_xx_x_crit_edge -> $entry
FCL (pass 1): added control edge $entry -> ptr_deref_559_update_start_
FCL (pass 1): added control edge $entry -> ptr_deref_559_base_address_calculated
FCL (pass 1): added control edge ptr_deref_559_sample_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_559_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_559_update_completed_ -> $exit
FCL (pass 1): added control edge ptr_deref_559_base_address_calculated -> ptr_deref_559_sample_start_
FCL (pass 1): added control edge ptr_deref_559_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_559_word_address_calculated -> ptr_deref_559_sample_start_
FCL (pass 1): added control edge ptr_deref_559_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_559_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_559_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_559_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_559_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> split_req
FCL (pass 1): added control edge split_req -> split_ack
FCL (pass 1): added control edge split_ack -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_559_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_559_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_561_to_assign_stmt_573__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_574__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond_575_place
FCL (pass 1): added control edge R_exitcond_575_place -> $entry
FCL (pass 1): added control edge R_exitcond_575_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge_bbx_xnph
FCL (pass 1): added control edge xx_x_crit_edge_xx_x_crit_edge6 -> $entry
FCL (pass 1): added control edge xx_x_crit_edge_bbx_xnph -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_586_to_assign_stmt_592__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_593__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond6_594_place
FCL (pass 1): added control edge R_exitcond6_594_place -> $entry
FCL (pass 1): added control edge R_exitcond6_594_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge6_bbx_xnph5
FCL (pass 1): added control edge xx_x_crit_edge6_xx_x_crit_edge9 -> $entry
FCL (pass 1): added control edge xx_x_crit_edge6_bbx_xnph5 -> $entry
FCL (pass 1): added control edge $entry -> WPIPE_lower_done_600_sample_start_
FCL (pass 1): added control edge WPIPE_lower_done_600_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_lower_done_600_sample_completed_ -> WPIPE_lower_done_600_update_start_
FCL (pass 1): added control edge WPIPE_lower_done_600_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_lower_done_600_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_lower_done_600_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_lower_done_600_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_602__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_451_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_447_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_446_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_447_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_446_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_446_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_447_ack
FCL (pass 1): added control edge phi_stmt_447_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_446__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_461_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_457_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_456_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_457_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_456_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_456_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_457_ack
FCL (pass 1): added control edge phi_stmt_457_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_456__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_472_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_472_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_472__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_552__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_553_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_552_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_552_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_553_ack
FCL (pass 1): added control edge phi_stmt_553_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_552__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_580__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_580_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_580_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_580__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_599__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_599_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_599_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_599__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_604_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_604_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_604__exit__
FCL (pass 1): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 632
Warning: Fix_Combinational (pass 1): found a combinational cycle (strongly-connected-component) in module [mmultiplyLower]
Combination cycle control elements  
   type_cast_494_sample_completed__ps
   type_cast_489_update_start__ps
   type_cast_489_update_start_
   type_cast_489_sample_completed_
   type_cast_494_update_start__ps
   type_cast_489_sample_completed__ps
   phi_stmt_491_update_start__ps
   aggregated_phi_sample_ack
   $exit
   aggregated_phi_update_req
   type_cast_494_sample_completed_
   type_cast_494_update_start_
   ra
   $exit
   $entry
   phi_stmt_486_sample_completed_
   ra
   phi_stmt_486_update_start_
   $entry
   cr
   phi_stmt_486_sample_completed__ps
   phi_stmt_486_update_start__ps
   cr
   phi_stmt_491_sample_completed__ps
   assign_stmt_524_sample_completed_
   assign_stmt_524_update_start_
   $exit
   ack
   $entry
   req
The following DPE's are involved in combinational cycles
 type_cast_489_inst
  Setting buffering on ILB type_cast_489_inst to 2
  Setting cut_through = false on ILB type_cast_489_inst
 type_cast_494_inst
  Setting buffering on ILB type_cast_494_inst to 2
  Setting cut_through = false on ILB type_cast_494_inst
 W_vx_x02_524_delayed_13_0_522_inst
  Setting cut_through = false on ILB W_vx_x02_524_delayed_13_0_522_inst
Info: Started Fix_Combinational_Loops (pass 2)
Info: Started will double buffer split-protocol operartors if needed
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_block_stmt_441__entry__
FCL (pass 2): added vertex branch_block_stmt_441__exit__
FCL (pass 2): added vertex assign_stmt_444__entry__
FCL (pass 2): added vertex assign_stmt_444__exit__
FCL (pass 2): added vertex bbx_xnph8_bbx_xnph5
FCL (pass 2): added vertex merge_stmt_446__exit__
FCL (pass 2): added vertex bbx_xnph5_bbx_xnph
FCL (pass 2): added vertex merge_stmt_456__exit__
FCL (pass 2): added vertex assign_stmt_470__entry__
FCL (pass 2): added vertex assign_stmt_470__exit__
FCL (pass 2): added vertex bbx_xnph_bb_3
FCL (pass 2): added vertex merge_stmt_472__exit__
FCL (pass 2): added vertex do_while_stmt_484__entry__
FCL (pass 2): added vertex do_while_stmt_484__exit__
FCL (pass 2): added vertex if_stmt_548__entry__
FCL (pass 2): added vertex if_stmt_548__exit__
FCL (pass 2): added vertex merge_stmt_552__entry__
FCL (pass 2): added vertex merge_stmt_552__exit__
FCL (pass 2): added vertex assign_stmt_561_to_assign_stmt_573__entry__
FCL (pass 2): added vertex assign_stmt_561_to_assign_stmt_573__exit__
FCL (pass 2): added vertex if_stmt_574__entry__
FCL (pass 2): added vertex if_stmt_574__exit__
FCL (pass 2): added vertex merge_stmt_580__entry__
FCL (pass 2): added vertex merge_stmt_580__exit__
FCL (pass 2): added vertex assign_stmt_586_to_assign_stmt_592__entry__
FCL (pass 2): added vertex assign_stmt_586_to_assign_stmt_592__exit__
FCL (pass 2): added vertex if_stmt_593__entry__
FCL (pass 2): added vertex if_stmt_593__exit__
FCL (pass 2): added vertex merge_stmt_599__entry__
FCL (pass 2): added vertex merge_stmt_599__exit__
FCL (pass 2): added vertex assign_stmt_602__entry__
FCL (pass 2): added vertex assign_stmt_602__exit__
FCL (pass 2): added vertex return__
FCL (pass 2): added vertex merge_stmt_604__exit__
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex RPIPE_lower_start_443_sample_start_
FCL (pass 2): added vertex RPIPE_lower_start_443_sample_completed_
FCL (pass 2): added vertex RPIPE_lower_start_443_update_start_
FCL (pass 2): added vertex RPIPE_lower_start_443_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex addr_of_469_sample_start_
FCL (pass 2): added vertex addr_of_469_sample_completed_
FCL (pass 2): added vertex addr_of_469_update_start_
FCL (pass 2): added vertex addr_of_469_update_completed_
FCL (pass 2): added vertex array_obj_ref_468_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_468_offset_calculated
FCL (pass 2): added vertex array_obj_ref_468_index_resized_0
FCL (pass 2): added vertex array_obj_ref_468_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_468_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_468_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_468_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_468_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_468_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_468_index_resized_1
FCL (pass 2): added vertex array_obj_ref_468_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_468_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_468_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_468_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_468_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex do_while_stmt_484__entry__
FCL (pass 2): added vertex do_while_stmt_484__exit__
FCL (pass 2): added vertex loop_back
FCL (pass 2): added vertex condition_done
FCL (pass 2): added vertex loop_body_done
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex back_edge_to_loop_body
FCL (pass 2): added vertex first_time_through_loop_body
FCL (pass 2): added vertex loop_body_start
FCL (pass 2): added vertex condition_evaluated
FCL (pass 2): added vertex aggregated_phi_sample_req
FCL (pass 2): added vertex aggregated_phi_sample_ack
FCL (pass 2): added vertex aggregated_phi_update_req
FCL (pass 2): added vertex aggregated_phi_update_ack
FCL (pass 2): added vertex phi_stmt_486_sample_start_
FCL (pass 2): added vertex phi_stmt_486_sample_completed_
FCL (pass 2): added vertex phi_stmt_486_update_start_
FCL (pass 2): added vertex phi_stmt_486_update_completed_
FCL (pass 2): added vertex phi_stmt_486_sample_start__ps
FCL (pass 2): added vertex phi_stmt_486_sample_completed__ps
FCL (pass 2): added vertex phi_stmt_486_update_start__ps
FCL (pass 2): added vertex phi_stmt_486_update_completed__ps
FCL (pass 2): added vertex phi_stmt_486_loopback_trigger
FCL (pass 2): added vertex phi_stmt_486_loopback_sample_req
FCL (pass 2): added vertex phi_stmt_486_loopback_sample_req_ps
FCL (pass 2): added vertex phi_stmt_486_entry_trigger
FCL (pass 2): added vertex phi_stmt_486_entry_sample_req
FCL (pass 2): added vertex phi_stmt_486_entry_sample_req_ps
FCL (pass 2): added vertex phi_stmt_486_phi_mux_ack
FCL (pass 2): added vertex phi_stmt_486_phi_mux_ack_ps
FCL (pass 2): added vertex type_cast_489_sample_start__ps
FCL (pass 2): added vertex type_cast_489_sample_completed__ps
FCL (pass 2): added vertex type_cast_489_update_start__ps
FCL (pass 2): added vertex type_cast_489_update_completed__ps
FCL (pass 2): added vertex type_cast_489_sample_start_
FCL (pass 2): added vertex type_cast_489_sample_completed_
FCL (pass 2): added vertex type_cast_489_update_start_
FCL (pass 2): added vertex type_cast_489_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_490_sample_completed__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_490_update_start__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_490_update_completed__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_490_sample_start_
FCL (pass 2): added vertex R_vx_x02_at_entry_490_sample_completed_
FCL (pass 2): added vertex R_vx_x02_at_entry_490_update_start_
FCL (pass 2): added vertex R_vx_x02_at_entry_490_update_completed_
FCL (pass 2): added vertex phi_stmt_491_sample_start_
FCL (pass 2): added vertex phi_stmt_491_sample_completed_
FCL (pass 2): added vertex phi_stmt_491_update_start_
FCL (pass 2): added vertex phi_stmt_491_update_completed_
FCL (pass 2): added vertex phi_stmt_491_sample_start__ps
FCL (pass 2): added vertex phi_stmt_491_sample_completed__ps
FCL (pass 2): added vertex phi_stmt_491_update_start__ps
FCL (pass 2): added vertex phi_stmt_491_update_completed__ps
FCL (pass 2): added vertex phi_stmt_491_loopback_trigger
FCL (pass 2): added vertex phi_stmt_491_loopback_sample_req
FCL (pass 2): added vertex phi_stmt_491_loopback_sample_req_ps
FCL (pass 2): added vertex phi_stmt_491_entry_trigger
FCL (pass 2): added vertex phi_stmt_491_entry_sample_req
FCL (pass 2): added vertex phi_stmt_491_entry_sample_req_ps
FCL (pass 2): added vertex phi_stmt_491_phi_mux_ack
FCL (pass 2): added vertex phi_stmt_491_phi_mux_ack_ps
FCL (pass 2): added vertex type_cast_494_sample_start__ps
FCL (pass 2): added vertex type_cast_494_sample_completed__ps
FCL (pass 2): added vertex type_cast_494_update_start__ps
FCL (pass 2): added vertex type_cast_494_update_completed__ps
FCL (pass 2): added vertex type_cast_494_sample_start_
FCL (pass 2): added vertex type_cast_494_sample_completed_
FCL (pass 2): added vertex type_cast_494_update_start_
FCL (pass 2): added vertex type_cast_494_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_495_sample_completed__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_495_update_start__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_495_update_completed__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_495_sample_start_
FCL (pass 2): added vertex R_kx_x01_at_entry_495_sample_completed_
FCL (pass 2): added vertex R_kx_x01_at_entry_495_update_start_
FCL (pass 2): added vertex R_kx_x01_at_entry_495_update_completed_
FCL (pass 2): added vertex addr_of_501_sample_start_
FCL (pass 2): added vertex addr_of_501_sample_completed_
FCL (pass 2): added vertex addr_of_501_update_start_
FCL (pass 2): added vertex addr_of_501_update_completed_
FCL (pass 2): added vertex array_obj_ref_500_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_500_offset_calculated
FCL (pass 2): added vertex array_obj_ref_500_index_resized_0
FCL (pass 2): added vertex array_obj_ref_500_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_500_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_500_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_500_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_500_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_500_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_500_index_resized_1
FCL (pass 2): added vertex array_obj_ref_500_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_500_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_500_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_500_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_500_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex addr_of_507_sample_start_
FCL (pass 2): added vertex addr_of_507_sample_completed_
FCL (pass 2): added vertex addr_of_507_update_start_
FCL (pass 2): added vertex addr_of_507_update_completed_
FCL (pass 2): added vertex array_obj_ref_506_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_506_offset_calculated
FCL (pass 2): added vertex array_obj_ref_506_index_resized_0
FCL (pass 2): added vertex array_obj_ref_506_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_506_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_506_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_506_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_506_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_506_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_506_index_resized_1
FCL (pass 2): added vertex array_obj_ref_506_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_506_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_506_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_506_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_506_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex ptr_deref_511_sample_start_
FCL (pass 2): added vertex ptr_deref_511_sample_completed_
FCL (pass 2): added vertex ptr_deref_511_update_start_
FCL (pass 2): added vertex ptr_deref_511_update_completed_
FCL (pass 2): added vertex ptr_deref_511_base_address_calculated
FCL (pass 2): added vertex ptr_deref_511_word_address_calculated
FCL (pass 2): added vertex ptr_deref_511_root_address_calculated
FCL (pass 2): added vertex ptr_deref_511_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex merge_req
FCL (pass 2): added vertex merge_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex ptr_deref_515_sample_start_
FCL (pass 2): added vertex ptr_deref_515_sample_completed_
FCL (pass 2): added vertex ptr_deref_515_update_start_
FCL (pass 2): added vertex ptr_deref_515_update_completed_
FCL (pass 2): added vertex ptr_deref_515_base_address_calculated
FCL (pass 2): added vertex ptr_deref_515_word_address_calculated
FCL (pass 2): added vertex ptr_deref_515_root_address_calculated
FCL (pass 2): added vertex ptr_deref_515_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex merge_req
FCL (pass 2): added vertex merge_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex assign_stmt_524_sample_start_
FCL (pass 2): added vertex assign_stmt_524_sample_completed_
FCL (pass 2): added vertex assign_stmt_524_update_start_
FCL (pass 2): added vertex assign_stmt_524_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex loop_body_delay_to_condition_start
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_bb_3_xx_x_crit_edge_taken_549_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex bb_3_xx_x_crit_edge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ptr_deref_559_sample_start_
FCL (pass 2): added vertex ptr_deref_559_sample_completed_
FCL (pass 2): added vertex ptr_deref_559_update_start_
FCL (pass 2): added vertex ptr_deref_559_update_completed_
FCL (pass 2): added vertex ptr_deref_559_base_address_calculated
FCL (pass 2): added vertex ptr_deref_559_word_address_calculated
FCL (pass 2): added vertex ptr_deref_559_root_address_calculated
FCL (pass 2): added vertex ptr_deref_559_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex split_req
FCL (pass 2): added vertex split_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_exitcond_575_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 2): added vertex xx_x_crit_edge_bbx_xnph
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_exitcond6_594_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 2): added vertex xx_x_crit_edge6_bbx_xnph5
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex WPIPE_lower_done_600_sample_start_
FCL (pass 2): added vertex WPIPE_lower_done_600_sample_completed_
FCL (pass 2): added vertex WPIPE_lower_done_600_update_start_
FCL (pass 2): added vertex WPIPE_lower_done_600_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex type_cast_451_konst_delay_trans
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_447_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_447_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_446_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_447_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex type_cast_461_konst_delay_trans
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_457_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_457_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_456_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_457_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_472_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_553_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_552_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_553_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_580_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_599_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_604_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> branch_block_stmt_441__entry__
FCL (pass 2): added control edge branch_block_stmt_441__entry__ -> assign_stmt_444__entry__
FCL (pass 2): added control edge branch_block_stmt_441__exit__ -> $exit
FCL (pass 2): added control edge assign_stmt_444__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_444__exit__ -> bbx_xnph8_bbx_xnph5
FCL (pass 2): added control edge bbx_xnph8_bbx_xnph5 -> $entry
FCL (pass 2): added control edge merge_stmt_446__exit__ -> bbx_xnph5_bbx_xnph
FCL (pass 2): added control edge bbx_xnph5_bbx_xnph -> $entry
FCL (pass 2): added control edge merge_stmt_456__exit__ -> assign_stmt_470__entry__
FCL (pass 2): added control edge assign_stmt_470__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_470__exit__ -> bbx_xnph_bb_3
FCL (pass 2): added control edge bbx_xnph_bb_3 -> $entry
FCL (pass 2): added control edge merge_stmt_472__exit__ -> do_while_stmt_484__entry__
FCL (pass 2): added control edge do_while_stmt_484__entry__ -> $entry
FCL (pass 2): added control edge do_while_stmt_484__exit__ -> if_stmt_548__entry__
FCL (pass 2): added control edge if_stmt_548__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_548__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_548__exit__ -> merge_stmt_552__entry__
FCL (pass 2): added control edge merge_stmt_552__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_552__exit__ -> assign_stmt_561_to_assign_stmt_573__entry__
FCL (pass 2): added control edge assign_stmt_561_to_assign_stmt_573__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_561_to_assign_stmt_573__exit__ -> if_stmt_574__entry__
FCL (pass 2): added control edge if_stmt_574__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_574__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_574__exit__ -> merge_stmt_580__entry__
FCL (pass 2): added control edge merge_stmt_580__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_580__exit__ -> assign_stmt_586_to_assign_stmt_592__entry__
FCL (pass 2): added control edge assign_stmt_586_to_assign_stmt_592__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_586_to_assign_stmt_592__exit__ -> if_stmt_593__entry__
FCL (pass 2): added control edge if_stmt_593__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_593__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_593__exit__ -> merge_stmt_599__entry__
FCL (pass 2): added control edge merge_stmt_599__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_599__exit__ -> assign_stmt_602__entry__
FCL (pass 2): added control edge assign_stmt_602__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_602__exit__ -> return__
FCL (pass 2): added control edge return__ -> $entry
FCL (pass 2): added control edge merge_stmt_604__exit__ -> branch_block_stmt_441__exit__
FCL (pass 2): added control edge $entry -> RPIPE_lower_start_443_sample_start_
FCL (pass 2): added control edge RPIPE_lower_start_443_sample_start_ -> $entry
FCL (pass 2): added control edge RPIPE_lower_start_443_sample_completed_ -> RPIPE_lower_start_443_update_start_
FCL (pass 2): added control edge RPIPE_lower_start_443_update_start_ -> $entry
FCL (pass 2): added control edge RPIPE_lower_start_443_update_completed_ -> $exit
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> RPIPE_lower_start_443_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> RPIPE_lower_start_443_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_444__exit__
FCL (pass 2): added control edge $entry -> addr_of_469_update_start_
FCL (pass 2): added control edge $entry -> array_obj_ref_468_index_computed_0
FCL (pass 2): added control edge $entry -> array_obj_ref_468_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> array_obj_ref_468_index_computed_1
FCL (pass 2): added control edge $entry -> array_obj_ref_468_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_469_sample_start_ -> $entry
FCL (pass 2): added control edge addr_of_469_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_469_update_completed_ -> $exit
FCL (pass 2): added control edge array_obj_ref_468_root_address_calculated -> addr_of_469_sample_start_
FCL (pass 2): added control edge array_obj_ref_468_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_468_index_resized_0 -> array_obj_ref_468_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_468_index_scaled_0 -> array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_468_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_index_resized_0
FCL (pass 2): added control edge array_obj_ref_468_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_468_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_468_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_468_index_scale_0_update_complete -> array_obj_ref_468_index_scaled_0
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_468_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_468_index_scaled_1 -> array_obj_ref_468_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_468_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_468_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_468_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_468_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_468_partial_sum_1_update_complete -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_468_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_469_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_469_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_470__exit__
FCL (pass 2): added control edge $entry -> do_while_stmt_484__entry__
FCL (pass 2): added control edge do_while_stmt_484__entry__ -> first_time_through_loop_body
FCL (pass 2): added control edge do_while_stmt_484__exit__ -> $exit
FCL (pass 2): added control edge loop_back -> back_edge_to_loop_body
FCL (pass 2): added control edge condition_done -> $entry
FCL (pass 2): added control edge condition_done -> $entry
FCL (pass 2): added control edge $entry -> array_obj_ref_500_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> phi_stmt_486_sample_start_
FCL (pass 2): added control edge $entry -> phi_stmt_486_update_start_
FCL (pass 2): added control edge $entry -> phi_stmt_491_sample_start_
FCL (pass 2): added control edge $entry -> phi_stmt_491_update_start_
FCL (pass 2): added control edge $entry -> addr_of_501_update_start_
FCL (pass 2): added control edge $entry -> array_obj_ref_500_index_computed_0
FCL (pass 2): added control edge $entry -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> addr_of_507_update_start_
FCL (pass 2): added control edge $entry -> array_obj_ref_506_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> array_obj_ref_506_index_computed_1
FCL (pass 2): added control edge $entry -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 2): added (cpf) control edge back_edge_to_loop_body -> loop_body_start
FCL (pass 2): added (cpf) control edge first_time_through_loop_body -> loop_body_start
FCL (pass 2): added control edge loop_body_start -> $entry
FCL (pass 2): added control edge loop_body_start -> loop_body_delay_to_condition_start
FCL (pass 2): added (dpe) control edge condition_evaluated -> ack
FCL (pass 2): added (dpe) control edge condition_evaluated -> ack
FCL (pass 2): added control edge aggregated_phi_sample_req -> phi_stmt_486_sample_start__ps
FCL (pass 2): added control edge aggregated_phi_sample_req -> phi_stmt_491_sample_start__ps
FCL (pass 2): added control edge aggregated_phi_sample_ack -> phi_stmt_486_sample_completed_
FCL (pass 2): added control edge aggregated_phi_sample_ack -> phi_stmt_491_sample_completed_
FCL (pass 2): added control edge aggregated_phi_update_req -> phi_stmt_486_update_start__ps
FCL (pass 2): added control edge aggregated_phi_update_req -> phi_stmt_491_update_start__ps
FCL (pass 2): added control edge aggregated_phi_update_ack -> condition_evaluated
FCL (pass 2): added (marked) control edge aggregated_phi_update_ack -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_486_sample_start_ -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_486_sample_completed_ -> ptr_deref_511_update_start_
FCL (pass 2): added control edge phi_stmt_486_sample_completed_ -> ptr_deref_515_update_start_
FCL (pass 2): added control edge phi_stmt_486_sample_completed_ -> assign_stmt_524_update_start_
FCL (pass 2): added control edge phi_stmt_486_update_start_ -> aggregated_phi_update_req
FCL (pass 2): added control edge phi_stmt_486_update_completed_ -> aggregated_phi_update_ack
FCL (pass 2): added control edge phi_stmt_486_update_completed_ -> assign_stmt_524_sample_start_
FCL (pass 2): added (marked) control edge phi_stmt_486_update_completed_ -> phi_stmt_486_update_start_
FCL (pass 2): added (cpf) control edge phi_stmt_486_sample_start__ps -> type_cast_489_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_486_sample_start__ps -> R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 2): added control edge phi_stmt_486_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 2): added (cpf) control edge phi_stmt_486_update_start__ps -> type_cast_489_update_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_486_update_start__ps -> R_vx_x02_at_entry_490_update_start__ps
FCL (pass 2): added control edge phi_stmt_486_update_completed__ps -> phi_stmt_486_update_completed_
FCL (pass 2): added (cpf) control edge phi_stmt_486_loopback_trigger -> type_cast_489_update_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_486_loopback_trigger -> type_cast_489_sample_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_486_loopback_sample_req -> phi_stmt_486_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_486_loopback_sample_req_ps -> phi_stmt_486_loopback_sample_req
FCL (pass 2): added (cpf) control edge phi_stmt_486_entry_trigger -> R_vx_x02_at_entry_490_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_486_entry_trigger -> R_vx_x02_at_entry_490_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_486_entry_sample_req -> phi_stmt_486_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_486_entry_sample_req_ps -> phi_stmt_486_entry_sample_req
FCL (pass 2): added control edge phi_stmt_486_phi_mux_ack -> phi_stmt_486_phi_mux_ack_ps
FCL (pass 2): added (cpf) control edge phi_stmt_486_phi_mux_ack_ps -> phi_stmt_486_update_completed__ps
FCL (pass 2): added control edge type_cast_489_sample_start__ps -> type_cast_489_sample_start_
FCL (pass 2): added (cpf) control edge type_cast_489_sample_completed__ps -> phi_stmt_486_sample_completed__ps
FCL (pass 2): added control edge type_cast_489_update_start__ps -> type_cast_489_update_start_
FCL (pass 2): added (cpf) control edge type_cast_489_update_completed__ps -> phi_stmt_486_loopback_sample_req_ps
FCL (pass 2): added control edge type_cast_489_sample_start_ -> $entry
FCL (pass 2): added control edge type_cast_489_sample_completed_ -> type_cast_489_sample_completed__ps
FCL (pass 2): added control edge type_cast_489_update_start_ -> $entry
FCL (pass 2): added control edge type_cast_489_update_completed_ -> type_cast_489_update_completed__ps
FCL (pass 2): added (marked) control edge type_cast_489_update_completed_ -> type_cast_489_update_start_
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> type_cast_489_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> type_cast_489_update_completed_
FCL (pass 2): added control edge R_vx_x02_at_entry_490_sample_start__ps -> R_vx_x02_at_entry_490_sample_start_
FCL (pass 2): added (cpf) control edge R_vx_x02_at_entry_490_sample_completed__ps -> phi_stmt_486_sample_completed__ps
FCL (pass 2): added control edge R_vx_x02_at_entry_490_update_start__ps -> R_vx_x02_at_entry_490_update_start_
FCL (pass 2): added (cpf) control edge R_vx_x02_at_entry_490_update_completed__ps -> phi_stmt_486_entry_sample_req_ps
FCL (pass 2): added control edge R_vx_x02_at_entry_490_sample_start_ -> R_vx_x02_at_entry_490_sample_completed_
FCL (pass 2): added control edge R_vx_x02_at_entry_490_sample_completed_ -> R_vx_x02_at_entry_490_sample_completed__ps
FCL (pass 2): added control edge R_vx_x02_at_entry_490_update_start_ -> R_vx_x02_at_entry_490_update_completed_
FCL (pass 2): added control edge phi_stmt_491_sample_start_ -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_491_sample_completed_ -> $exit
FCL (pass 2): added control edge phi_stmt_491_update_start_ -> aggregated_phi_update_req
FCL (pass 2): added control edge phi_stmt_491_update_completed_ -> condition_evaluated
FCL (pass 2): added control edge phi_stmt_491_update_completed_ -> aggregated_phi_update_ack
FCL (pass 2): added control edge phi_stmt_491_update_completed_ -> array_obj_ref_500_index_computed_1
FCL (pass 2): added control edge phi_stmt_491_update_completed_ -> array_obj_ref_506_index_computed_0
FCL (pass 2): added (marked) control edge phi_stmt_491_update_completed_ -> phi_stmt_491_update_start_
FCL (pass 2): added (cpf) control edge phi_stmt_491_sample_start__ps -> type_cast_494_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_491_sample_start__ps -> R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 2): added control edge phi_stmt_491_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 2): added (cpf) control edge phi_stmt_491_update_start__ps -> type_cast_494_update_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_491_update_start__ps -> R_kx_x01_at_entry_495_update_start__ps
FCL (pass 2): added control edge phi_stmt_491_update_completed__ps -> phi_stmt_491_update_completed_
FCL (pass 2): added (cpf) control edge phi_stmt_491_loopback_trigger -> type_cast_494_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_491_loopback_trigger -> type_cast_494_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_491_loopback_sample_req -> phi_stmt_491_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_491_loopback_sample_req_ps -> phi_stmt_491_loopback_sample_req
FCL (pass 2): added (cpf) control edge phi_stmt_491_entry_trigger -> R_kx_x01_at_entry_495_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_491_entry_trigger -> R_kx_x01_at_entry_495_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_491_entry_sample_req -> phi_stmt_491_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_491_entry_sample_req_ps -> phi_stmt_491_entry_sample_req
FCL (pass 2): added control edge phi_stmt_491_phi_mux_ack -> phi_stmt_491_phi_mux_ack_ps
FCL (pass 2): added (cpf) control edge phi_stmt_491_phi_mux_ack_ps -> phi_stmt_491_update_completed__ps
FCL (pass 2): added control edge type_cast_494_sample_start__ps -> type_cast_494_sample_start_
FCL (pass 2): added (cpf) control edge type_cast_494_sample_completed__ps -> phi_stmt_491_sample_completed__ps
FCL (pass 2): added control edge type_cast_494_update_start__ps -> type_cast_494_update_start_
FCL (pass 2): added (cpf) control edge type_cast_494_update_completed__ps -> phi_stmt_491_loopback_sample_req_ps
FCL (pass 2): added control edge type_cast_494_sample_start_ -> $entry
FCL (pass 2): added control edge type_cast_494_sample_completed_ -> type_cast_494_sample_completed__ps
FCL (pass 2): added control edge type_cast_494_update_start_ -> $entry
FCL (pass 2): added control edge type_cast_494_update_completed_ -> type_cast_494_update_completed__ps
FCL (pass 2): added (marked) control edge type_cast_494_update_completed_ -> type_cast_494_update_start_
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> type_cast_494_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> type_cast_494_update_completed_
FCL (pass 2): added control edge R_kx_x01_at_entry_495_sample_start__ps -> R_kx_x01_at_entry_495_sample_start_
FCL (pass 2): added (cpf) control edge R_kx_x01_at_entry_495_sample_completed__ps -> phi_stmt_491_sample_completed__ps
FCL (pass 2): added control edge R_kx_x01_at_entry_495_update_start__ps -> R_kx_x01_at_entry_495_update_start_
FCL (pass 2): added (cpf) control edge R_kx_x01_at_entry_495_update_completed__ps -> phi_stmt_491_entry_sample_req_ps
FCL (pass 2): added control edge R_kx_x01_at_entry_495_sample_start_ -> R_kx_x01_at_entry_495_sample_completed_
FCL (pass 2): added control edge R_kx_x01_at_entry_495_sample_completed_ -> R_kx_x01_at_entry_495_sample_completed__ps
FCL (pass 2): added control edge R_kx_x01_at_entry_495_update_start_ -> R_kx_x01_at_entry_495_update_completed_
FCL (pass 2): added control edge addr_of_501_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge addr_of_501_sample_completed_ -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_501_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_501_update_completed_ -> ptr_deref_511_base_address_calculated
FCL (pass 2): added (marked) control edge addr_of_501_update_completed_ -> addr_of_501_update_start_
FCL (pass 2): added control edge array_obj_ref_500_root_address_calculated -> addr_of_501_sample_start_
FCL (pass 2): added control edge array_obj_ref_500_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_500_index_resized_0 -> array_obj_ref_500_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_500_index_scaled_0 -> array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_500_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_index_resized_0
FCL (pass 2): added control edge array_obj_ref_500_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_500_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_500_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_500_index_scale_0_update_complete -> array_obj_ref_500_index_scaled_0
FCL (pass 2): added (marked) control edge array_obj_ref_500_index_scale_0_update_complete -> array_obj_ref_500_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_500_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_500_index_scaled_1 -> array_obj_ref_500_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_500_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_500_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_500_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_500_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_500_partial_sum_1_update_complete -> array_obj_ref_500_offset_calculated
FCL (pass 2): added control edge array_obj_ref_500_partial_sum_1_update_complete -> $entry
FCL (pass 2): added (marked) control edge array_obj_ref_500_partial_sum_1_update_complete -> array_obj_ref_500_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_500_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_501_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_501_update_completed_
FCL (pass 2): added control edge addr_of_507_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge addr_of_507_sample_completed_ -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_507_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_507_update_completed_ -> ptr_deref_515_base_address_calculated
FCL (pass 2): added (marked) control edge addr_of_507_update_completed_ -> addr_of_507_update_start_
FCL (pass 2): added control edge array_obj_ref_506_root_address_calculated -> addr_of_507_sample_start_
FCL (pass 2): added control edge array_obj_ref_506_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_506_index_resized_0 -> array_obj_ref_506_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_506_index_scaled_0 -> array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 2): added (marked) control edge array_obj_ref_506_index_scaled_0 -> phi_stmt_491_update_start_
FCL (pass 2): added control edge array_obj_ref_506_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_index_resized_0
FCL (pass 2): added control edge array_obj_ref_506_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_506_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_506_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_506_index_scale_0_update_complete -> array_obj_ref_506_index_scaled_0
FCL (pass 2): added (marked) control edge array_obj_ref_506_index_scale_0_update_complete -> array_obj_ref_506_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_506_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_506_index_scaled_1 -> array_obj_ref_506_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_506_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_506_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_506_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_506_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_506_partial_sum_1_update_complete -> array_obj_ref_506_offset_calculated
FCL (pass 2): added control edge array_obj_ref_506_partial_sum_1_update_complete -> $entry
FCL (pass 2): added (marked) control edge array_obj_ref_506_partial_sum_1_update_complete -> array_obj_ref_506_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_506_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_507_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_507_update_completed_
FCL (pass 2): added control edge ptr_deref_511_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge ptr_deref_511_sample_completed_ -> addr_of_501_update_start_
FCL (pass 2): added control edge ptr_deref_511_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_511_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge ptr_deref_511_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 2): added (marked) control edge ptr_deref_511_update_completed_ -> ptr_deref_511_update_start_
FCL (pass 2): added control edge ptr_deref_511_base_address_calculated -> ptr_deref_511_sample_start_
FCL (pass 2): added control edge ptr_deref_511_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_511_word_address_calculated -> ptr_deref_511_sample_start_
FCL (pass 2): added control edge ptr_deref_511_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_511_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_511_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_511_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_511_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_511_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> merge_req
FCL (pass 2): added control edge merge_req -> merge_ack
FCL (pass 2): added control edge merge_ack -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_511_update_completed_
FCL (pass 2): added control edge ptr_deref_515_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge ptr_deref_515_sample_completed_ -> addr_of_507_update_start_
FCL (pass 2): added control edge ptr_deref_515_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_515_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge ptr_deref_515_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 2): added (marked) control edge ptr_deref_515_update_completed_ -> ptr_deref_515_update_start_
FCL (pass 2): added control edge ptr_deref_515_base_address_calculated -> ptr_deref_515_sample_start_
FCL (pass 2): added control edge ptr_deref_515_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_515_word_address_calculated -> ptr_deref_515_sample_start_
FCL (pass 2): added control edge ptr_deref_515_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_515_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_515_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_515_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_515_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_515_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> merge_req
FCL (pass 2): added control edge merge_req -> merge_ack
FCL (pass 2): added control edge merge_ack -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_515_update_completed_
FCL (pass 2): added control edge assign_stmt_524_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge assign_stmt_524_sample_completed_ -> phi_stmt_486_update_start_
FCL (pass 2): added control edge assign_stmt_524_update_start_ -> $entry
FCL (pass 2): added control edge assign_stmt_524_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge assign_stmt_524_update_completed_ -> phi_stmt_486_sample_start_
FCL (pass 2): added (marked) control edge assign_stmt_524_update_completed_ -> assign_stmt_524_update_start_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_524_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_524_update_completed_
FCL (pass 2): added control edge $exit -> loop_body_done
FCL (pass 2): added control edge $entry -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $entry -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> do_while_stmt_484__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_548__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_bb_3_xx_x_crit_edge_taken_549_place
FCL (pass 2): added control edge R_bb_3_xx_x_crit_edge_taken_549_place -> $entry
FCL (pass 2): added control edge R_bb_3_xx_x_crit_edge_taken_549_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> bb_3_xx_x_crit_edge
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> if_stmt_548__exit__
FCL (pass 2): added control edge bb_3_xx_x_crit_edge -> $entry
FCL (pass 2): added control edge $entry -> ptr_deref_559_update_start_
FCL (pass 2): added control edge $entry -> ptr_deref_559_base_address_calculated
FCL (pass 2): added control edge ptr_deref_559_sample_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_559_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_559_update_completed_ -> $exit
FCL (pass 2): added control edge ptr_deref_559_base_address_calculated -> ptr_deref_559_sample_start_
FCL (pass 2): added control edge ptr_deref_559_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_559_word_address_calculated -> ptr_deref_559_sample_start_
FCL (pass 2): added control edge ptr_deref_559_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_559_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_559_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_559_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_559_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> split_req
FCL (pass 2): added control edge split_req -> split_ack
FCL (pass 2): added control edge split_ack -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_559_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_559_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_561_to_assign_stmt_573__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_574__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_exitcond_575_place
FCL (pass 2): added control edge R_exitcond_575_place -> $entry
FCL (pass 2): added control edge R_exitcond_575_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge_bbx_xnph
FCL (pass 2): added control edge xx_x_crit_edge_xx_x_crit_edge6 -> $entry
FCL (pass 2): added control edge xx_x_crit_edge_bbx_xnph -> $entry
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_586_to_assign_stmt_592__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_593__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_exitcond6_594_place
FCL (pass 2): added control edge R_exitcond6_594_place -> $entry
FCL (pass 2): added control edge R_exitcond6_594_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge6_bbx_xnph5
FCL (pass 2): added control edge xx_x_crit_edge6_xx_x_crit_edge9 -> $entry
FCL (pass 2): added control edge xx_x_crit_edge6_bbx_xnph5 -> $entry
FCL (pass 2): added control edge $entry -> WPIPE_lower_done_600_sample_start_
FCL (pass 2): added control edge WPIPE_lower_done_600_sample_start_ -> $entry
FCL (pass 2): added control edge WPIPE_lower_done_600_sample_completed_ -> WPIPE_lower_done_600_update_start_
FCL (pass 2): added control edge WPIPE_lower_done_600_update_start_ -> $entry
FCL (pass 2): added control edge WPIPE_lower_done_600_update_completed_ -> $exit
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> WPIPE_lower_done_600_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> WPIPE_lower_done_600_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_602__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> type_cast_451_konst_delay_trans
FCL (pass 2): added control edge $exit -> phi_stmt_447_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_446_PhiReqMerge
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_447_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_446_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_446_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_447_ack
FCL (pass 2): added control edge phi_stmt_447_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_446__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> type_cast_461_konst_delay_trans
FCL (pass 2): added control edge $exit -> phi_stmt_457_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_456_PhiReqMerge
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_457_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_456_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_456_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_457_ack
FCL (pass 2): added control edge phi_stmt_457_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_456__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_472_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_472_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_472__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_552__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_553_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_552_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_552_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_553_ack
FCL (pass 2): added control edge phi_stmt_553_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_552__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_580__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_580_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_580_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_580__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_599__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_599_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_599_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_599__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_604_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_604_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_604__exit__
FCL (pass 2): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 661
Info:  Fix_Combi pass OK
Info: reducing Control-path 
Info: removed CP-element if_stmt_574__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_580__entry__ maybe it was dead?
Info: removed CP-element if_stmt_593__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_599__entry__ maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: finding nucleii 
Info:  Total number of strongly-connected-components is 107
Info: SCC 0
	e_11
Info: SCC 1
	e_4
Info: SCC 2
	e_7
Info: SCC 3
	e_6
Info: SCC 4
	e_5
Info: SCC 5
	e_9
Info: SCC 6
	e_8
Info: SCC 7
	e_10
Info: SCC 8
	e_130
Info: SCC 9
	e_129
Info: SCC 10
	e_125
Info: SCC 11
	e_124
Info: SCC 12
	e_123
Info: SCC 13
	e_119
Info: SCC 14
	e_3
Info: SCC 15
	e_2
Info: SCC 16
	e_0
Info: SCC 17
	e_111
Info: SCC 18
	e_118
Info: SCC 19
	e_117
Info: SCC 20
	e_115
Info: SCC 21
	e_122
Info: SCC 22
	e_120
Info: SCC 23
	e_121
Info: SCC 24
	e_116
Info: SCC 25
	e_113
Info: SCC 26
	e_128
Info: SCC 27
	e_126
Info: SCC 28
	e_127
Info: SCC 29
	e_114
Info: SCC 30
	e_112
Info: SCC 31
	e_110
Info: SCC 32
	e_134
Info: SCC 33
	e_133
Info: SCC 34
	e_131
Info: SCC 35
	e_132
Info: SCC 36
	e_108
Info: SCC 37
	e_109
Info: SCC 38
	e_1
Info: SCC 39
	e_12
Info: SCC 40
	e_107
Info: SCC 41
	e_13
Info: SCC 42
	e_14
Info: SCC 43
	e_105
Info: SCC 44
	e_106
Info: SCC 45
	e_15
Info: SCC 46
	e_16
Info: SCC 47
	e_29
Info: SCC 48
	e_50
Info: SCC 49
	e_17
Info: SCC 50
	e_31
Info: SCC 51
	e_52
Info: SCC 52
	e_18
Info: SCC 53
	e_104
Info: SCC 54
	e_68
	e_70
Info: SCC 55
	e_48
Info: SCC 56
	e_23
Info: SCC 57
	e_45
Info: SCC 58
	e_67
	e_72
	e_74
Info: SCC 59
	e_69
	e_71
Info: SCC 60
	e_46
Info: SCC 61
	e_21
Info: SCC 62
	e_25
Info: SCC 63
	e_26
Info: SCC 64
	e_44
Info: SCC 65
	e_66
	e_77
	e_91
	e_93
Info: SCC 66
	e_65
	e_73
	e_75
	e_76
Info: SCC 67
	e_79
	e_90
	e_95
	e_97
Info: SCC 68
	e_80
	e_85
	e_87
Info: SCC 69
	e_82
	e_84
Info: SCC 70
	e_78
	e_86
	e_88
	e_89
Info: SCC 71
	e_20
Info: SCC 72
	e_103
Info: SCC 73
	e_19
Info: SCC 74
	e_92
	e_94
Info: SCC 75
	e_96
	e_98
Info: SCC 76
	e_100
	e_102
Info: SCC 77
	e_22
Info: SCC 78
	e_24
Info: SCC 79
	e_27
Info: SCC 80
	e_99
	e_101
Info: SCC 81
	e_28
Info: SCC 82
	e_30
Info: SCC 83
	e_32
Info: SCC 84
	e_33
Info: SCC 85
	e_36
	e_38
Info: SCC 86
	e_34
Info: SCC 87
	e_37
	e_39
Info: SCC 88
	e_35
Info: SCC 89
	e_40
Info: SCC 90
	e_42
Info: SCC 91
	e_43
Info: SCC 92
	e_41
Info: SCC 93
	e_47
Info: SCC 94
	e_81
	e_83
Info: SCC 95
	e_49
Info: SCC 96
	e_51
Info: SCC 97
	e_53
Info: SCC 98
	e_54
Info: SCC 99
	e_57
	e_59
Info: SCC 100
	e_55
Info: SCC 101
	e_58
	e_60
Info: SCC 102
	e_56
Info: SCC 103
	e_61
Info: SCC 104
	e_63
Info: SCC 105
	e_64
Info: SCC 106
	e_62
Info: Info: transition [phi_stmt_659_merged_reqs] is isolated, removed.
Info: Info: transition [phi_stmt_664_merged_reqs] is isolated, removed.
Warning: exit not reachable from every element in region branch_block_stmt_608/assign_stmt_643
	 un-visited elements
	addr_of_642_sample_start_
	addr_of_642_sample_completed_
	array_obj_ref_641_root_address_calculated
	array_obj_ref_641_offset_calculated
	array_obj_ref_641_partial_sum_1_update_start
	array_obj_ref_641_partial_sum_1_update_complete
	array_obj_ref_641_partial_sum_1_Update
	array_obj_ref_641_final_index_sum_regn
	array_obj_ref_641_base_plus_offset
	addr_of_642_request
Info: removed redundant join point [array_obj_ref_641_offset_calculated] <-& [array_obj_ref_641_partial_sum_1_update_complete]
Info: removed redundant fork point [array_obj_ref_641_partial_sum_1_update_complete] &-> [array_obj_ref_641_offset_calculated]
Info: Detect and try to fix combinational loops by increasing interlock-buffering (two passes)
Info: Started Fix_Combinational_Loops (pass 1)
Info: Started will double buffer interlock-buffers if needed
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_block_stmt_608__entry__
FCL (pass 1): added vertex branch_block_stmt_608__exit__
FCL (pass 1): added vertex assign_stmt_611__entry__
FCL (pass 1): added vertex assign_stmt_611__exit__
FCL (pass 1): added vertex bbx_xnph8_bbx_xnph5
FCL (pass 1): added vertex merge_stmt_613__exit__
FCL (pass 1): added vertex assign_stmt_627__entry__
FCL (pass 1): added vertex assign_stmt_627__exit__
FCL (pass 1): added vertex bbx_xnph5_bbx_xnph
FCL (pass 1): added vertex merge_stmt_629__exit__
FCL (pass 1): added vertex assign_stmt_643__entry__
FCL (pass 1): added vertex assign_stmt_643__exit__
FCL (pass 1): added vertex bbx_xnph_bb_3
FCL (pass 1): added vertex merge_stmt_645__exit__
FCL (pass 1): added vertex do_while_stmt_657__entry__
FCL (pass 1): added vertex do_while_stmt_657__exit__
FCL (pass 1): added vertex if_stmt_721__entry__
FCL (pass 1): added vertex if_stmt_721__exit__
FCL (pass 1): added vertex merge_stmt_725__entry__
FCL (pass 1): added vertex merge_stmt_725__exit__
FCL (pass 1): added vertex assign_stmt_734_to_assign_stmt_746__entry__
FCL (pass 1): added vertex assign_stmt_734_to_assign_stmt_746__exit__
FCL (pass 1): added vertex if_stmt_747__entry__
FCL (pass 1): added vertex if_stmt_747__exit__
FCL (pass 1): added vertex merge_stmt_753__entry__
FCL (pass 1): added vertex merge_stmt_753__exit__
FCL (pass 1): added vertex assign_stmt_759_to_assign_stmt_765__entry__
FCL (pass 1): added vertex assign_stmt_759_to_assign_stmt_765__exit__
FCL (pass 1): added vertex if_stmt_766__entry__
FCL (pass 1): added vertex if_stmt_766__exit__
FCL (pass 1): added vertex merge_stmt_772__entry__
FCL (pass 1): added vertex merge_stmt_772__exit__
FCL (pass 1): added vertex assign_stmt_775__entry__
FCL (pass 1): added vertex assign_stmt_775__exit__
FCL (pass 1): added vertex return__
FCL (pass 1): added vertex merge_stmt_777__exit__
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex RPIPE_upper_start_610_sample_start_
FCL (pass 1): added vertex RPIPE_upper_start_610_sample_completed_
FCL (pass 1): added vertex RPIPE_upper_start_610_update_start_
FCL (pass 1): added vertex RPIPE_upper_start_610_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex addr_of_642_sample_start_
FCL (pass 1): added vertex addr_of_642_sample_completed_
FCL (pass 1): added vertex addr_of_642_update_start_
FCL (pass 1): added vertex addr_of_642_update_completed_
FCL (pass 1): added vertex array_obj_ref_641_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_641_offset_calculated
FCL (pass 1): added vertex array_obj_ref_641_index_resized_0
FCL (pass 1): added vertex array_obj_ref_641_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_641_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_641_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_641_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_641_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_641_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_641_index_resized_1
FCL (pass 1): added vertex array_obj_ref_641_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_641_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_641_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_641_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_641_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex do_while_stmt_657__entry__
FCL (pass 1): added vertex do_while_stmt_657__exit__
FCL (pass 1): added vertex loop_back
FCL (pass 1): added vertex condition_done
FCL (pass 1): added vertex loop_body_done
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex back_edge_to_loop_body
FCL (pass 1): added vertex first_time_through_loop_body
FCL (pass 1): added vertex loop_body_start
FCL (pass 1): added vertex condition_evaluated
FCL (pass 1): added vertex aggregated_phi_sample_req
FCL (pass 1): added vertex aggregated_phi_sample_ack
FCL (pass 1): added vertex aggregated_phi_update_req
FCL (pass 1): added vertex aggregated_phi_update_ack
FCL (pass 1): added vertex phi_stmt_659_sample_start_
FCL (pass 1): added vertex phi_stmt_659_sample_completed_
FCL (pass 1): added vertex phi_stmt_659_update_start_
FCL (pass 1): added vertex phi_stmt_659_update_completed_
FCL (pass 1): added vertex phi_stmt_659_sample_start__ps
FCL (pass 1): added vertex phi_stmt_659_sample_completed__ps
FCL (pass 1): added vertex phi_stmt_659_update_start__ps
FCL (pass 1): added vertex phi_stmt_659_update_completed__ps
FCL (pass 1): added vertex phi_stmt_659_loopback_trigger
FCL (pass 1): added vertex phi_stmt_659_loopback_sample_req
FCL (pass 1): added vertex phi_stmt_659_loopback_sample_req_ps
FCL (pass 1): added vertex phi_stmt_659_entry_trigger
FCL (pass 1): added vertex phi_stmt_659_entry_sample_req
FCL (pass 1): added vertex phi_stmt_659_entry_sample_req_ps
FCL (pass 1): added vertex phi_stmt_659_phi_mux_ack
FCL (pass 1): added vertex phi_stmt_659_phi_mux_ack_ps
FCL (pass 1): added vertex type_cast_662_sample_start__ps
FCL (pass 1): added vertex type_cast_662_sample_completed__ps
FCL (pass 1): added vertex type_cast_662_update_start__ps
FCL (pass 1): added vertex type_cast_662_update_completed__ps
FCL (pass 1): added vertex type_cast_662_sample_start_
FCL (pass 1): added vertex type_cast_662_sample_completed_
FCL (pass 1): added vertex type_cast_662_update_start_
FCL (pass 1): added vertex type_cast_662_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_663_sample_completed__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_663_update_start__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_663_update_completed__ps
FCL (pass 1): added vertex R_vx_x02_at_entry_663_sample_start_
FCL (pass 1): added vertex R_vx_x02_at_entry_663_sample_completed_
FCL (pass 1): added vertex R_vx_x02_at_entry_663_update_start_
FCL (pass 1): added vertex R_vx_x02_at_entry_663_update_completed_
FCL (pass 1): added vertex phi_stmt_664_sample_start_
FCL (pass 1): added vertex phi_stmt_664_sample_completed_
FCL (pass 1): added vertex phi_stmt_664_update_start_
FCL (pass 1): added vertex phi_stmt_664_update_completed_
FCL (pass 1): added vertex phi_stmt_664_sample_start__ps
FCL (pass 1): added vertex phi_stmt_664_sample_completed__ps
FCL (pass 1): added vertex phi_stmt_664_update_start__ps
FCL (pass 1): added vertex phi_stmt_664_update_completed__ps
FCL (pass 1): added vertex phi_stmt_664_loopback_trigger
FCL (pass 1): added vertex phi_stmt_664_loopback_sample_req
FCL (pass 1): added vertex phi_stmt_664_loopback_sample_req_ps
FCL (pass 1): added vertex phi_stmt_664_entry_trigger
FCL (pass 1): added vertex phi_stmt_664_entry_sample_req
FCL (pass 1): added vertex phi_stmt_664_entry_sample_req_ps
FCL (pass 1): added vertex phi_stmt_664_phi_mux_ack
FCL (pass 1): added vertex phi_stmt_664_phi_mux_ack_ps
FCL (pass 1): added vertex type_cast_667_sample_start__ps
FCL (pass 1): added vertex type_cast_667_sample_completed__ps
FCL (pass 1): added vertex type_cast_667_update_start__ps
FCL (pass 1): added vertex type_cast_667_update_completed__ps
FCL (pass 1): added vertex type_cast_667_sample_start_
FCL (pass 1): added vertex type_cast_667_sample_completed_
FCL (pass 1): added vertex type_cast_667_update_start_
FCL (pass 1): added vertex type_cast_667_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_668_sample_completed__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_668_update_start__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_668_update_completed__ps
FCL (pass 1): added vertex R_kx_x01_at_entry_668_sample_start_
FCL (pass 1): added vertex R_kx_x01_at_entry_668_sample_completed_
FCL (pass 1): added vertex R_kx_x01_at_entry_668_update_start_
FCL (pass 1): added vertex R_kx_x01_at_entry_668_update_completed_
FCL (pass 1): added vertex addr_of_674_sample_start_
FCL (pass 1): added vertex addr_of_674_sample_completed_
FCL (pass 1): added vertex addr_of_674_update_start_
FCL (pass 1): added vertex addr_of_674_update_completed_
FCL (pass 1): added vertex array_obj_ref_673_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_673_offset_calculated
FCL (pass 1): added vertex array_obj_ref_673_index_resized_0
FCL (pass 1): added vertex array_obj_ref_673_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_673_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_673_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_673_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_673_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_673_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_673_index_resized_1
FCL (pass 1): added vertex array_obj_ref_673_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_673_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_673_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_673_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_673_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex addr_of_680_sample_start_
FCL (pass 1): added vertex addr_of_680_sample_completed_
FCL (pass 1): added vertex addr_of_680_update_start_
FCL (pass 1): added vertex addr_of_680_update_completed_
FCL (pass 1): added vertex array_obj_ref_679_root_address_calculated
FCL (pass 1): added vertex array_obj_ref_679_offset_calculated
FCL (pass 1): added vertex array_obj_ref_679_index_resized_0
FCL (pass 1): added vertex array_obj_ref_679_index_scaled_0
FCL (pass 1): added vertex array_obj_ref_679_index_computed_0
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_679_index_scale_0_sample_start
FCL (pass 1): added vertex array_obj_ref_679_index_scale_0_sample_complete
FCL (pass 1): added vertex array_obj_ref_679_index_scale_0_update_start
FCL (pass 1): added vertex array_obj_ref_679_index_scale_0_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_679_index_resized_1
FCL (pass 1): added vertex array_obj_ref_679_index_scaled_1
FCL (pass 1): added vertex array_obj_ref_679_index_computed_1
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex index_resize_req
FCL (pass 1): added vertex index_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex scale_rename_req
FCL (pass 1): added vertex scale_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 1): added vertex array_obj_ref_679_partial_sum_1_sample_complete
FCL (pass 1): added vertex array_obj_ref_679_partial_sum_1_update_start
FCL (pass 1): added vertex array_obj_ref_679_partial_sum_1_update_complete
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_684_sample_start_
FCL (pass 1): added vertex ptr_deref_684_sample_completed_
FCL (pass 1): added vertex ptr_deref_684_update_start_
FCL (pass 1): added vertex ptr_deref_684_update_completed_
FCL (pass 1): added vertex ptr_deref_684_base_address_calculated
FCL (pass 1): added vertex ptr_deref_684_word_address_calculated
FCL (pass 1): added vertex ptr_deref_684_root_address_calculated
FCL (pass 1): added vertex ptr_deref_684_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex merge_req
FCL (pass 1): added vertex merge_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex ptr_deref_688_sample_start_
FCL (pass 1): added vertex ptr_deref_688_sample_completed_
FCL (pass 1): added vertex ptr_deref_688_update_start_
FCL (pass 1): added vertex ptr_deref_688_update_completed_
FCL (pass 1): added vertex ptr_deref_688_base_address_calculated
FCL (pass 1): added vertex ptr_deref_688_word_address_calculated
FCL (pass 1): added vertex ptr_deref_688_root_address_calculated
FCL (pass 1): added vertex ptr_deref_688_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex merge_req
FCL (pass 1): added vertex merge_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex assign_stmt_697_sample_start_
FCL (pass 1): added vertex assign_stmt_697_sample_completed_
FCL (pass 1): added vertex assign_stmt_697_update_start_
FCL (pass 1): added vertex assign_stmt_697_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex loop_body_delay_to_condition_start
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_bb_3_xx_x_crit_edge_taken_722_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex bb_3_xx_x_crit_edge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ptr_deref_732_sample_start_
FCL (pass 1): added vertex ptr_deref_732_sample_completed_
FCL (pass 1): added vertex ptr_deref_732_update_start_
FCL (pass 1): added vertex ptr_deref_732_update_completed_
FCL (pass 1): added vertex ptr_deref_732_base_address_calculated
FCL (pass 1): added vertex ptr_deref_732_word_address_calculated
FCL (pass 1): added vertex ptr_deref_732_root_address_calculated
FCL (pass 1): added vertex ptr_deref_732_base_address_resized
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex base_resize_req
FCL (pass 1): added vertex base_resize_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex sum_rename_req
FCL (pass 1): added vertex sum_rename_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex root_register_req
FCL (pass 1): added vertex root_register_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex split_req
FCL (pass 1): added vertex split_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond_748_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 1): added vertex xx_x_crit_edge_bbx_xnph
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex R_exitcond7_767_place
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex if_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex else_choice_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 1): added vertex xx_x_crit_edge6_bbx_xnph5
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex WPIPE_upper_done_773_sample_start_
FCL (pass 1): added vertex WPIPE_upper_done_773_sample_completed_
FCL (pass 1): added vertex WPIPE_upper_done_773_update_start_
FCL (pass 1): added vertex WPIPE_upper_done_773_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_620_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_614_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_614_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_613_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_614_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex type_cast_634_konst_delay_trans
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_630_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_630_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_629_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_630_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_645_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_726_req
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_725_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex phi_stmt_726_ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_753_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dead_transition
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_772_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex merge_stmt_777_PhiReqMerge
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex dummy
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> branch_block_stmt_608__entry__
FCL (pass 1): added control edge branch_block_stmt_608__entry__ -> assign_stmt_611__entry__
FCL (pass 1): added control edge branch_block_stmt_608__exit__ -> $exit
FCL (pass 1): added control edge assign_stmt_611__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_611__exit__ -> bbx_xnph8_bbx_xnph5
FCL (pass 1): added control edge bbx_xnph8_bbx_xnph5 -> $entry
FCL (pass 1): added control edge merge_stmt_613__exit__ -> assign_stmt_627__entry__
FCL (pass 1): added control edge assign_stmt_627__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_627__exit__ -> bbx_xnph5_bbx_xnph
FCL (pass 1): added control edge bbx_xnph5_bbx_xnph -> $entry
FCL (pass 1): added control edge merge_stmt_629__exit__ -> assign_stmt_643__entry__
FCL (pass 1): added control edge assign_stmt_643__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_643__exit__ -> bbx_xnph_bb_3
FCL (pass 1): added control edge bbx_xnph_bb_3 -> $entry
FCL (pass 1): added control edge merge_stmt_645__exit__ -> do_while_stmt_657__entry__
FCL (pass 1): added control edge do_while_stmt_657__entry__ -> $entry
FCL (pass 1): added control edge do_while_stmt_657__exit__ -> if_stmt_721__entry__
FCL (pass 1): added control edge if_stmt_721__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_721__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_721__exit__ -> merge_stmt_725__entry__
FCL (pass 1): added control edge merge_stmt_725__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_725__exit__ -> assign_stmt_734_to_assign_stmt_746__entry__
FCL (pass 1): added control edge assign_stmt_734_to_assign_stmt_746__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_734_to_assign_stmt_746__exit__ -> if_stmt_747__entry__
FCL (pass 1): added control edge if_stmt_747__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_747__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_747__exit__ -> merge_stmt_753__entry__
FCL (pass 1): added control edge merge_stmt_753__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_753__exit__ -> assign_stmt_759_to_assign_stmt_765__entry__
FCL (pass 1): added control edge assign_stmt_759_to_assign_stmt_765__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_759_to_assign_stmt_765__exit__ -> if_stmt_766__entry__
FCL (pass 1): added control edge if_stmt_766__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_766__entry__ -> $entry
FCL (pass 1): added control edge if_stmt_766__exit__ -> merge_stmt_772__entry__
FCL (pass 1): added control edge merge_stmt_772__entry__ -> $entry
FCL (pass 1): added control edge merge_stmt_772__exit__ -> assign_stmt_775__entry__
FCL (pass 1): added control edge assign_stmt_775__entry__ -> $entry
FCL (pass 1): added control edge assign_stmt_775__exit__ -> return__
FCL (pass 1): added control edge return__ -> $entry
FCL (pass 1): added control edge merge_stmt_777__exit__ -> branch_block_stmt_608__exit__
FCL (pass 1): added control edge $entry -> RPIPE_upper_start_610_sample_start_
FCL (pass 1): added control edge RPIPE_upper_start_610_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_upper_start_610_sample_completed_ -> RPIPE_upper_start_610_update_start_
FCL (pass 1): added control edge RPIPE_upper_start_610_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_upper_start_610_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_upper_start_610_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_upper_start_610_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_611__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_627__exit__
FCL (pass 1): added control edge $entry -> addr_of_642_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_641_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_641_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_641_index_computed_1
FCL (pass 1): added control edge $entry -> array_obj_ref_641_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_642_sample_start_ -> $entry
FCL (pass 1): added control edge addr_of_642_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_642_update_completed_ -> $exit
FCL (pass 1): added control edge array_obj_ref_641_root_address_calculated -> addr_of_642_sample_start_
FCL (pass 1): added control edge array_obj_ref_641_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_641_index_resized_0 -> array_obj_ref_641_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_641_index_scaled_0 -> array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_641_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_index_resized_0
FCL (pass 1): added control edge array_obj_ref_641_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_641_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_641_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_641_index_scale_0_update_complete -> array_obj_ref_641_index_scaled_0
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_641_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_641_index_scaled_1 -> array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_641_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_641_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_641_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_641_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_641_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_641_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_642_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_642_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_643__exit__
FCL (pass 1): added control edge $entry -> do_while_stmt_657__entry__
FCL (pass 1): added control edge do_while_stmt_657__entry__ -> first_time_through_loop_body
FCL (pass 1): added control edge do_while_stmt_657__exit__ -> $exit
FCL (pass 1): added control edge loop_back -> back_edge_to_loop_body
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge $entry -> array_obj_ref_679_index_computed_1
FCL (pass 1): added control edge $entry -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_679_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> phi_stmt_659_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_659_update_start_
FCL (pass 1): added control edge $entry -> phi_stmt_664_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_664_update_start_
FCL (pass 1): added control edge $entry -> addr_of_674_update_start_
FCL (pass 1): added control edge $entry -> array_obj_ref_673_index_computed_0
FCL (pass 1): added control edge $entry -> array_obj_ref_673_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> addr_of_680_update_start_
FCL (pass 1): added (cpf) control edge back_edge_to_loop_body -> loop_body_start
FCL (pass 1): added (cpf) control edge first_time_through_loop_body -> loop_body_start
FCL (pass 1): added control edge loop_body_start -> $entry
FCL (pass 1): added control edge loop_body_start -> loop_body_delay_to_condition_start
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added control edge aggregated_phi_sample_req -> phi_stmt_659_sample_start__ps
FCL (pass 1): added control edge aggregated_phi_sample_req -> phi_stmt_664_sample_start__ps
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_659_sample_completed_
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_664_sample_completed_
FCL (pass 1): added control edge aggregated_phi_update_req -> phi_stmt_659_update_start__ps
FCL (pass 1): added control edge aggregated_phi_update_req -> phi_stmt_664_update_start__ps
FCL (pass 1): added control edge aggregated_phi_update_ack -> condition_evaluated
FCL (pass 1): added (marked) control edge aggregated_phi_update_ack -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_659_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_659_sample_completed_ -> ptr_deref_684_update_start_
FCL (pass 1): added control edge phi_stmt_659_sample_completed_ -> ptr_deref_688_update_start_
FCL (pass 1): added control edge phi_stmt_659_sample_completed_ -> assign_stmt_697_update_start_
FCL (pass 1): added control edge phi_stmt_659_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_659_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_659_update_completed_ -> assign_stmt_697_sample_start_
FCL (pass 1): added (marked) control edge phi_stmt_659_update_completed_ -> phi_stmt_659_update_start_
FCL (pass 1): added (cpf) control edge phi_stmt_659_sample_start__ps -> type_cast_662_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_659_sample_start__ps -> R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 1): added control edge phi_stmt_659_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 1): added (cpf) control edge phi_stmt_659_update_start__ps -> type_cast_662_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_659_update_start__ps -> R_vx_x02_at_entry_663_update_start__ps
FCL (pass 1): added control edge phi_stmt_659_update_completed__ps -> phi_stmt_659_update_completed_
FCL (pass 1): added (cpf) control edge phi_stmt_659_loopback_trigger -> type_cast_662_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_659_loopback_trigger -> type_cast_662_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_659_loopback_sample_req -> phi_stmt_659_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_659_loopback_sample_req_ps -> phi_stmt_659_loopback_sample_req
FCL (pass 1): added (cpf) control edge phi_stmt_659_entry_trigger -> R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_659_entry_trigger -> R_vx_x02_at_entry_663_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_659_entry_sample_req -> phi_stmt_659_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_659_entry_sample_req_ps -> phi_stmt_659_entry_sample_req
FCL (pass 1): added control edge phi_stmt_659_phi_mux_ack -> phi_stmt_659_phi_mux_ack_ps
FCL (pass 1): added (cpf) control edge phi_stmt_659_phi_mux_ack_ps -> phi_stmt_659_update_completed__ps
FCL (pass 1): added control edge type_cast_662_sample_start__ps -> type_cast_662_sample_start_
FCL (pass 1): added (cpf) control edge type_cast_662_sample_completed__ps -> phi_stmt_659_sample_completed__ps
FCL (pass 1): added control edge type_cast_662_update_start__ps -> type_cast_662_update_start_
FCL (pass 1): added (cpf) control edge type_cast_662_update_completed__ps -> phi_stmt_659_loopback_sample_req_ps
FCL (pass 1): added control edge type_cast_662_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_662_sample_completed_ -> type_cast_662_sample_completed__ps
FCL (pass 1): added control edge type_cast_662_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_662_update_completed_ -> type_cast_662_update_completed__ps
FCL (pass 1): added (marked) control edge type_cast_662_update_completed_ -> type_cast_662_update_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_662_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_662_update_completed_
FCL (pass 1): added control edge R_vx_x02_at_entry_663_sample_start__ps -> R_vx_x02_at_entry_663_sample_start_
FCL (pass 1): added (cpf) control edge R_vx_x02_at_entry_663_sample_completed__ps -> phi_stmt_659_sample_completed__ps
FCL (pass 1): added control edge R_vx_x02_at_entry_663_update_start__ps -> R_vx_x02_at_entry_663_update_start_
FCL (pass 1): added (cpf) control edge R_vx_x02_at_entry_663_update_completed__ps -> phi_stmt_659_entry_sample_req_ps
FCL (pass 1): added control edge R_vx_x02_at_entry_663_sample_start_ -> R_vx_x02_at_entry_663_sample_completed_
FCL (pass 1): added control edge R_vx_x02_at_entry_663_sample_completed_ -> R_vx_x02_at_entry_663_sample_completed__ps
FCL (pass 1): added control edge R_vx_x02_at_entry_663_update_start_ -> R_vx_x02_at_entry_663_update_completed_
FCL (pass 1): added control edge phi_stmt_664_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_664_sample_completed_ -> $exit
FCL (pass 1): added control edge phi_stmt_664_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_664_update_completed_ -> array_obj_ref_679_index_computed_0
FCL (pass 1): added control edge phi_stmt_664_update_completed_ -> condition_evaluated
FCL (pass 1): added control edge phi_stmt_664_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_664_update_completed_ -> array_obj_ref_673_index_computed_1
FCL (pass 1): added (marked) control edge phi_stmt_664_update_completed_ -> phi_stmt_664_update_start_
FCL (pass 1): added (cpf) control edge phi_stmt_664_sample_start__ps -> type_cast_667_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_664_sample_start__ps -> R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 1): added control edge phi_stmt_664_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 1): added (cpf) control edge phi_stmt_664_update_start__ps -> type_cast_667_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_664_update_start__ps -> R_kx_x01_at_entry_668_update_start__ps
FCL (pass 1): added control edge phi_stmt_664_update_completed__ps -> phi_stmt_664_update_completed_
FCL (pass 1): added (cpf) control edge phi_stmt_664_loopback_trigger -> type_cast_667_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_664_loopback_trigger -> type_cast_667_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_664_loopback_sample_req -> phi_stmt_664_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_664_loopback_sample_req_ps -> phi_stmt_664_loopback_sample_req
FCL (pass 1): added (cpf) control edge phi_stmt_664_entry_trigger -> R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_664_entry_trigger -> R_kx_x01_at_entry_668_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_664_entry_sample_req -> phi_stmt_664_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_664_entry_sample_req_ps -> phi_stmt_664_entry_sample_req
FCL (pass 1): added control edge phi_stmt_664_phi_mux_ack -> phi_stmt_664_phi_mux_ack_ps
FCL (pass 1): added (cpf) control edge phi_stmt_664_phi_mux_ack_ps -> phi_stmt_664_update_completed__ps
FCL (pass 1): added control edge type_cast_667_sample_start__ps -> type_cast_667_sample_start_
FCL (pass 1): added (cpf) control edge type_cast_667_sample_completed__ps -> phi_stmt_664_sample_completed__ps
FCL (pass 1): added control edge type_cast_667_update_start__ps -> type_cast_667_update_start_
FCL (pass 1): added (cpf) control edge type_cast_667_update_completed__ps -> phi_stmt_664_loopback_sample_req_ps
FCL (pass 1): added control edge type_cast_667_sample_start_ -> $entry
FCL (pass 1): added control edge type_cast_667_sample_completed_ -> type_cast_667_sample_completed__ps
FCL (pass 1): added control edge type_cast_667_update_start_ -> $entry
FCL (pass 1): added control edge type_cast_667_update_completed_ -> type_cast_667_update_completed__ps
FCL (pass 1): added (marked) control edge type_cast_667_update_completed_ -> type_cast_667_update_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> type_cast_667_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> type_cast_667_update_completed_
FCL (pass 1): added control edge R_kx_x01_at_entry_668_sample_start__ps -> R_kx_x01_at_entry_668_sample_start_
FCL (pass 1): added (cpf) control edge R_kx_x01_at_entry_668_sample_completed__ps -> phi_stmt_664_sample_completed__ps
FCL (pass 1): added control edge R_kx_x01_at_entry_668_update_start__ps -> R_kx_x01_at_entry_668_update_start_
FCL (pass 1): added (cpf) control edge R_kx_x01_at_entry_668_update_completed__ps -> phi_stmt_664_entry_sample_req_ps
FCL (pass 1): added control edge R_kx_x01_at_entry_668_sample_start_ -> R_kx_x01_at_entry_668_sample_completed_
FCL (pass 1): added control edge R_kx_x01_at_entry_668_sample_completed_ -> R_kx_x01_at_entry_668_sample_completed__ps
FCL (pass 1): added control edge R_kx_x01_at_entry_668_update_start_ -> R_kx_x01_at_entry_668_update_completed_
FCL (pass 1): added control edge addr_of_674_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge addr_of_674_sample_completed_ -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_674_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_674_update_completed_ -> ptr_deref_684_base_address_calculated
FCL (pass 1): added (marked) control edge addr_of_674_update_completed_ -> addr_of_674_update_start_
FCL (pass 1): added control edge array_obj_ref_673_root_address_calculated -> addr_of_674_sample_start_
FCL (pass 1): added control edge array_obj_ref_673_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_673_index_resized_0 -> array_obj_ref_673_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_673_index_scaled_0 -> array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_673_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_index_resized_0
FCL (pass 1): added control edge array_obj_ref_673_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_673_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_673_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_673_index_scale_0_update_complete -> array_obj_ref_673_index_scaled_0
FCL (pass 1): added (marked) control edge array_obj_ref_673_index_scale_0_update_complete -> array_obj_ref_673_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_673_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_673_index_scaled_1 -> array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_673_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_673_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_673_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_673_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_673_partial_sum_1_update_complete -> array_obj_ref_673_offset_calculated
FCL (pass 1): added control edge array_obj_ref_673_partial_sum_1_update_complete -> $entry
FCL (pass 1): added (marked) control edge array_obj_ref_673_partial_sum_1_update_complete -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_673_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_674_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_674_update_completed_
FCL (pass 1): added control edge addr_of_680_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge addr_of_680_sample_completed_ -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 1): added control edge addr_of_680_update_start_ -> $entry
FCL (pass 1): added control edge addr_of_680_update_completed_ -> ptr_deref_688_base_address_calculated
FCL (pass 1): added (marked) control edge addr_of_680_update_completed_ -> addr_of_680_update_start_
FCL (pass 1): added control edge array_obj_ref_679_root_address_calculated -> addr_of_680_sample_start_
FCL (pass 1): added control edge array_obj_ref_679_offset_calculated -> $entry
FCL (pass 1): added control edge array_obj_ref_679_index_resized_0 -> array_obj_ref_679_index_scale_0_sample_start
FCL (pass 1): added control edge array_obj_ref_679_index_scaled_0 -> array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 1): added (marked) control edge array_obj_ref_679_index_scaled_0 -> phi_stmt_664_update_start_
FCL (pass 1): added control edge array_obj_ref_679_index_computed_0 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_index_resized_0
FCL (pass 1): added control edge array_obj_ref_679_index_scale_0_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_679_index_scale_0_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_679_index_scale_0_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_679_index_scale_0_update_complete -> array_obj_ref_679_index_scaled_0
FCL (pass 1): added (marked) control edge array_obj_ref_679_index_scale_0_update_complete -> array_obj_ref_679_index_scale_0_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_index_scale_0_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_index_scale_0_update_complete
FCL (pass 1): added control edge array_obj_ref_679_index_resized_1 -> $entry
FCL (pass 1): added control edge array_obj_ref_679_index_scaled_1 -> array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 1): added control edge array_obj_ref_679_index_computed_1 -> $entry
FCL (pass 1): added control edge $entry -> index_resize_req
FCL (pass 1): added control edge index_resize_req -> index_resize_ack
FCL (pass 1): added control edge index_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_index_resized_1
FCL (pass 1): added control edge $entry -> scale_rename_req
FCL (pass 1): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 1): added control edge scale_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_index_scaled_1
FCL (pass 1): added control edge array_obj_ref_679_partial_sum_1_sample_start -> $entry
FCL (pass 1): added control edge array_obj_ref_679_partial_sum_1_sample_complete -> $exit
FCL (pass 1): added control edge array_obj_ref_679_partial_sum_1_update_start -> $entry
FCL (pass 1): added control edge array_obj_ref_679_partial_sum_1_update_complete -> $entry
FCL (pass 1): added control edge array_obj_ref_679_partial_sum_1_update_complete -> array_obj_ref_679_offset_calculated
FCL (pass 1): added (marked) control edge array_obj_ref_679_partial_sum_1_update_complete -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_partial_sum_1_sample_complete
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_partial_sum_1_update_complete
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_offset_calculated
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> array_obj_ref_679_root_address_calculated
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_680_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> addr_of_680_update_completed_
FCL (pass 1): added control edge ptr_deref_684_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge ptr_deref_684_sample_completed_ -> addr_of_674_update_start_
FCL (pass 1): added control edge ptr_deref_684_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_684_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge ptr_deref_684_update_completed_ -> ptr_deref_684_update_start_
FCL (pass 1): added (marked) control edge ptr_deref_684_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 1): added control edge ptr_deref_684_base_address_calculated -> ptr_deref_684_sample_start_
FCL (pass 1): added control edge ptr_deref_684_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_684_word_address_calculated -> ptr_deref_684_sample_start_
FCL (pass 1): added control edge ptr_deref_684_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_684_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_684_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_684_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_684_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_684_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> merge_req
FCL (pass 1): added control edge merge_req -> merge_ack
FCL (pass 1): added control edge merge_ack -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_684_update_completed_
FCL (pass 1): added control edge ptr_deref_688_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge ptr_deref_688_sample_completed_ -> addr_of_680_update_start_
FCL (pass 1): added control edge ptr_deref_688_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_688_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge ptr_deref_688_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 1): added (marked) control edge ptr_deref_688_update_completed_ -> ptr_deref_688_update_start_
FCL (pass 1): added control edge ptr_deref_688_base_address_calculated -> ptr_deref_688_sample_start_
FCL (pass 1): added control edge ptr_deref_688_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_688_word_address_calculated -> ptr_deref_688_sample_start_
FCL (pass 1): added control edge ptr_deref_688_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_688_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_688_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_688_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_688_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_688_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> merge_req
FCL (pass 1): added control edge merge_req -> merge_ack
FCL (pass 1): added control edge merge_ack -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_688_update_completed_
FCL (pass 1): added control edge assign_stmt_697_sample_start_ -> $entry
FCL (pass 1): added (marked) control edge assign_stmt_697_sample_completed_ -> phi_stmt_659_update_start_
FCL (pass 1): added control edge assign_stmt_697_update_start_ -> $entry
FCL (pass 1): added control edge assign_stmt_697_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge assign_stmt_697_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 1): added (marked) control edge assign_stmt_697_update_completed_ -> assign_stmt_697_update_start_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_697_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_697_update_completed_
FCL (pass 1): added control edge $exit -> loop_body_done
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> do_while_stmt_657__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_721__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_bb_3_xx_x_crit_edge_taken_722_place
FCL (pass 1): added control edge R_bb_3_xx_x_crit_edge_taken_722_place -> $entry
FCL (pass 1): added control edge R_bb_3_xx_x_crit_edge_taken_722_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> bb_3_xx_x_crit_edge
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> if_stmt_721__exit__
FCL (pass 1): added control edge bb_3_xx_x_crit_edge -> $entry
FCL (pass 1): added control edge $entry -> ptr_deref_732_update_start_
FCL (pass 1): added control edge $entry -> ptr_deref_732_base_address_calculated
FCL (pass 1): added control edge ptr_deref_732_sample_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_732_update_start_ -> $entry
FCL (pass 1): added control edge ptr_deref_732_update_completed_ -> $exit
FCL (pass 1): added control edge ptr_deref_732_base_address_calculated -> ptr_deref_732_sample_start_
FCL (pass 1): added control edge ptr_deref_732_base_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_732_word_address_calculated -> ptr_deref_732_sample_start_
FCL (pass 1): added control edge ptr_deref_732_root_address_calculated -> $entry
FCL (pass 1): added control edge ptr_deref_732_base_address_resized -> $entry
FCL (pass 1): added control edge $entry -> base_resize_req
FCL (pass 1): added control edge base_resize_req -> base_resize_ack
FCL (pass 1): added control edge base_resize_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_732_base_address_resized
FCL (pass 1): added control edge $entry -> sum_rename_req
FCL (pass 1): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 1): added control edge sum_rename_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_732_root_address_calculated
FCL (pass 1): added control edge $entry -> root_register_req
FCL (pass 1): added control edge root_register_req -> root_register_ack
FCL (pass 1): added control edge root_register_ack -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_732_word_address_calculated
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> split_req
FCL (pass 1): added control edge split_req -> split_ack
FCL (pass 1): added control edge split_ack -> $exit
FCL (pass 1): added control edge $exit -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_732_sample_completed_
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> ptr_deref_732_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_734_to_assign_stmt_746__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_747__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond_748_place
FCL (pass 1): added control edge R_exitcond_748_place -> $entry
FCL (pass 1): added control edge R_exitcond_748_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge_bbx_xnph
FCL (pass 1): added control edge xx_x_crit_edge_xx_x_crit_edge6 -> $entry
FCL (pass 1): added control edge xx_x_crit_edge_bbx_xnph -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> assign_stmt_759_to_assign_stmt_765__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> if_stmt_766__exit__
FCL (pass 1): added control edge $entry -> branch_req
FCL (pass 1): added control edge $exit -> R_exitcond7_767_place
FCL (pass 1): added control edge R_exitcond7_767_place -> $entry
FCL (pass 1): added control edge R_exitcond7_767_place -> $entry
FCL (pass 1): added control edge $entry -> if_choice_transition
FCL (pass 1): added control edge if_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 1): added control edge $entry -> else_choice_transition
FCL (pass 1): added control edge else_choice_transition -> $exit
FCL (pass 1): added control edge $exit -> xx_x_crit_edge6_bbx_xnph5
FCL (pass 1): added control edge xx_x_crit_edge6_xx_x_crit_edge9 -> $entry
FCL (pass 1): added control edge xx_x_crit_edge6_bbx_xnph5 -> $entry
FCL (pass 1): added control edge $entry -> WPIPE_upper_done_773_sample_start_
FCL (pass 1): added control edge WPIPE_upper_done_773_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_upper_done_773_sample_completed_ -> WPIPE_upper_done_773_update_start_
FCL (pass 1): added control edge WPIPE_upper_done_773_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_upper_done_773_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_upper_done_773_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_upper_done_773_update_completed_
FCL (pass 1): added control edge $exit -> assign_stmt_775__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_620_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_614_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_613_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_614_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_613_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_613_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_614_ack
FCL (pass 1): added control edge phi_stmt_614_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_613__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> type_cast_634_konst_delay_trans
FCL (pass 1): added control edge $exit -> phi_stmt_630_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_629_PhiReqMerge
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_630_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_629_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_629_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_630_ack
FCL (pass 1): added control edge phi_stmt_630_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_629__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_645_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_645_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_645__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_725__exit__
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added (dpe) control edge cr -> ra
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> phi_stmt_726_req
FCL (pass 1): added control edge $exit -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_725_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_725_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_726_ack
FCL (pass 1): added control edge phi_stmt_726_ack -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_725__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_753__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_753_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_753_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_753__exit__
FCL (pass 1): added control edge $entry -> dead_transition
FCL (pass 1): added control edge $exit -> merge_stmt_772__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_772_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_772_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_772__exit__
FCL (pass 1): added control edge $entry -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_777_PhiReqMerge
FCL (pass 1): added control edge merge_stmt_777_PhiReqMerge -> $entry
FCL (pass 1): added control edge $entry -> dummy
FCL (pass 1): added control edge dummy -> $exit
FCL (pass 1): added control edge $exit -> merge_stmt_777__exit__
FCL (pass 1): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 636
Warning: Fix_Combinational (pass 1): found a combinational cycle (strongly-connected-component) in module [mmultiplyUpper]
Combination cycle control elements  
   aggregated_phi_update_req
   aggregated_phi_sample_ack
   phi_stmt_659_sample_completed_
   phi_stmt_659_update_start_
   phi_stmt_659_sample_completed__ps
   phi_stmt_659_update_start__ps
   type_cast_662_sample_completed__ps
   type_cast_662_update_start__ps
   type_cast_662_sample_completed_
   type_cast_662_update_start_
   $exit
   ra
   $entry
   cr
   phi_stmt_664_sample_completed__ps
   phi_stmt_664_update_start__ps
   type_cast_667_sample_completed__ps
   type_cast_667_update_start__ps
   type_cast_667_sample_completed_
   type_cast_667_update_start_
   $exit
   ra
   $entry
   cr
   assign_stmt_697_sample_completed_
   assign_stmt_697_update_start_
   $exit
   ack
   $entry
   req
The following DPE's are involved in combinational cycles
 type_cast_662_inst
  Setting buffering on ILB type_cast_662_inst to 2
  Setting cut_through = false on ILB type_cast_662_inst
 type_cast_667_inst
  Setting buffering on ILB type_cast_667_inst to 2
  Setting cut_through = false on ILB type_cast_667_inst
 W_vx_x02_694_delayed_13_0_695_inst
  Setting cut_through = false on ILB W_vx_x02_694_delayed_13_0_695_inst
Info: Started Fix_Combinational_Loops (pass 2)
Info: Started will double buffer split-protocol operartors if needed
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_block_stmt_608__entry__
FCL (pass 2): added vertex branch_block_stmt_608__exit__
FCL (pass 2): added vertex assign_stmt_611__entry__
FCL (pass 2): added vertex assign_stmt_611__exit__
FCL (pass 2): added vertex bbx_xnph8_bbx_xnph5
FCL (pass 2): added vertex merge_stmt_613__exit__
FCL (pass 2): added vertex assign_stmt_627__entry__
FCL (pass 2): added vertex assign_stmt_627__exit__
FCL (pass 2): added vertex bbx_xnph5_bbx_xnph
FCL (pass 2): added vertex merge_stmt_629__exit__
FCL (pass 2): added vertex assign_stmt_643__entry__
FCL (pass 2): added vertex assign_stmt_643__exit__
FCL (pass 2): added vertex bbx_xnph_bb_3
FCL (pass 2): added vertex merge_stmt_645__exit__
FCL (pass 2): added vertex do_while_stmt_657__entry__
FCL (pass 2): added vertex do_while_stmt_657__exit__
FCL (pass 2): added vertex if_stmt_721__entry__
FCL (pass 2): added vertex if_stmt_721__exit__
FCL (pass 2): added vertex merge_stmt_725__entry__
FCL (pass 2): added vertex merge_stmt_725__exit__
FCL (pass 2): added vertex assign_stmt_734_to_assign_stmt_746__entry__
FCL (pass 2): added vertex assign_stmt_734_to_assign_stmt_746__exit__
FCL (pass 2): added vertex if_stmt_747__entry__
FCL (pass 2): added vertex if_stmt_747__exit__
FCL (pass 2): added vertex merge_stmt_753__entry__
FCL (pass 2): added vertex merge_stmt_753__exit__
FCL (pass 2): added vertex assign_stmt_759_to_assign_stmt_765__entry__
FCL (pass 2): added vertex assign_stmt_759_to_assign_stmt_765__exit__
FCL (pass 2): added vertex if_stmt_766__entry__
FCL (pass 2): added vertex if_stmt_766__exit__
FCL (pass 2): added vertex merge_stmt_772__entry__
FCL (pass 2): added vertex merge_stmt_772__exit__
FCL (pass 2): added vertex assign_stmt_775__entry__
FCL (pass 2): added vertex assign_stmt_775__exit__
FCL (pass 2): added vertex return__
FCL (pass 2): added vertex merge_stmt_777__exit__
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex RPIPE_upper_start_610_sample_start_
FCL (pass 2): added vertex RPIPE_upper_start_610_sample_completed_
FCL (pass 2): added vertex RPIPE_upper_start_610_update_start_
FCL (pass 2): added vertex RPIPE_upper_start_610_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex addr_of_642_sample_start_
FCL (pass 2): added vertex addr_of_642_sample_completed_
FCL (pass 2): added vertex addr_of_642_update_start_
FCL (pass 2): added vertex addr_of_642_update_completed_
FCL (pass 2): added vertex array_obj_ref_641_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_641_offset_calculated
FCL (pass 2): added vertex array_obj_ref_641_index_resized_0
FCL (pass 2): added vertex array_obj_ref_641_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_641_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_641_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_641_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_641_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_641_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_641_index_resized_1
FCL (pass 2): added vertex array_obj_ref_641_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_641_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_641_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_641_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_641_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex do_while_stmt_657__entry__
FCL (pass 2): added vertex do_while_stmt_657__exit__
FCL (pass 2): added vertex loop_back
FCL (pass 2): added vertex condition_done
FCL (pass 2): added vertex loop_body_done
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex back_edge_to_loop_body
FCL (pass 2): added vertex first_time_through_loop_body
FCL (pass 2): added vertex loop_body_start
FCL (pass 2): added vertex condition_evaluated
FCL (pass 2): added vertex aggregated_phi_sample_req
FCL (pass 2): added vertex aggregated_phi_sample_ack
FCL (pass 2): added vertex aggregated_phi_update_req
FCL (pass 2): added vertex aggregated_phi_update_ack
FCL (pass 2): added vertex phi_stmt_659_sample_start_
FCL (pass 2): added vertex phi_stmt_659_sample_completed_
FCL (pass 2): added vertex phi_stmt_659_update_start_
FCL (pass 2): added vertex phi_stmt_659_update_completed_
FCL (pass 2): added vertex phi_stmt_659_sample_start__ps
FCL (pass 2): added vertex phi_stmt_659_sample_completed__ps
FCL (pass 2): added vertex phi_stmt_659_update_start__ps
FCL (pass 2): added vertex phi_stmt_659_update_completed__ps
FCL (pass 2): added vertex phi_stmt_659_loopback_trigger
FCL (pass 2): added vertex phi_stmt_659_loopback_sample_req
FCL (pass 2): added vertex phi_stmt_659_loopback_sample_req_ps
FCL (pass 2): added vertex phi_stmt_659_entry_trigger
FCL (pass 2): added vertex phi_stmt_659_entry_sample_req
FCL (pass 2): added vertex phi_stmt_659_entry_sample_req_ps
FCL (pass 2): added vertex phi_stmt_659_phi_mux_ack
FCL (pass 2): added vertex phi_stmt_659_phi_mux_ack_ps
FCL (pass 2): added vertex type_cast_662_sample_start__ps
FCL (pass 2): added vertex type_cast_662_sample_completed__ps
FCL (pass 2): added vertex type_cast_662_update_start__ps
FCL (pass 2): added vertex type_cast_662_update_completed__ps
FCL (pass 2): added vertex type_cast_662_sample_start_
FCL (pass 2): added vertex type_cast_662_sample_completed_
FCL (pass 2): added vertex type_cast_662_update_start_
FCL (pass 2): added vertex type_cast_662_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_663_sample_completed__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_663_update_start__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_663_update_completed__ps
FCL (pass 2): added vertex R_vx_x02_at_entry_663_sample_start_
FCL (pass 2): added vertex R_vx_x02_at_entry_663_sample_completed_
FCL (pass 2): added vertex R_vx_x02_at_entry_663_update_start_
FCL (pass 2): added vertex R_vx_x02_at_entry_663_update_completed_
FCL (pass 2): added vertex phi_stmt_664_sample_start_
FCL (pass 2): added vertex phi_stmt_664_sample_completed_
FCL (pass 2): added vertex phi_stmt_664_update_start_
FCL (pass 2): added vertex phi_stmt_664_update_completed_
FCL (pass 2): added vertex phi_stmt_664_sample_start__ps
FCL (pass 2): added vertex phi_stmt_664_sample_completed__ps
FCL (pass 2): added vertex phi_stmt_664_update_start__ps
FCL (pass 2): added vertex phi_stmt_664_update_completed__ps
FCL (pass 2): added vertex phi_stmt_664_loopback_trigger
FCL (pass 2): added vertex phi_stmt_664_loopback_sample_req
FCL (pass 2): added vertex phi_stmt_664_loopback_sample_req_ps
FCL (pass 2): added vertex phi_stmt_664_entry_trigger
FCL (pass 2): added vertex phi_stmt_664_entry_sample_req
FCL (pass 2): added vertex phi_stmt_664_entry_sample_req_ps
FCL (pass 2): added vertex phi_stmt_664_phi_mux_ack
FCL (pass 2): added vertex phi_stmt_664_phi_mux_ack_ps
FCL (pass 2): added vertex type_cast_667_sample_start__ps
FCL (pass 2): added vertex type_cast_667_sample_completed__ps
FCL (pass 2): added vertex type_cast_667_update_start__ps
FCL (pass 2): added vertex type_cast_667_update_completed__ps
FCL (pass 2): added vertex type_cast_667_sample_start_
FCL (pass 2): added vertex type_cast_667_sample_completed_
FCL (pass 2): added vertex type_cast_667_update_start_
FCL (pass 2): added vertex type_cast_667_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_668_sample_completed__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_668_update_start__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_668_update_completed__ps
FCL (pass 2): added vertex R_kx_x01_at_entry_668_sample_start_
FCL (pass 2): added vertex R_kx_x01_at_entry_668_sample_completed_
FCL (pass 2): added vertex R_kx_x01_at_entry_668_update_start_
FCL (pass 2): added vertex R_kx_x01_at_entry_668_update_completed_
FCL (pass 2): added vertex addr_of_674_sample_start_
FCL (pass 2): added vertex addr_of_674_sample_completed_
FCL (pass 2): added vertex addr_of_674_update_start_
FCL (pass 2): added vertex addr_of_674_update_completed_
FCL (pass 2): added vertex array_obj_ref_673_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_673_offset_calculated
FCL (pass 2): added vertex array_obj_ref_673_index_resized_0
FCL (pass 2): added vertex array_obj_ref_673_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_673_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_673_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_673_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_673_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_673_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_673_index_resized_1
FCL (pass 2): added vertex array_obj_ref_673_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_673_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_673_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_673_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_673_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex addr_of_680_sample_start_
FCL (pass 2): added vertex addr_of_680_sample_completed_
FCL (pass 2): added vertex addr_of_680_update_start_
FCL (pass 2): added vertex addr_of_680_update_completed_
FCL (pass 2): added vertex array_obj_ref_679_root_address_calculated
FCL (pass 2): added vertex array_obj_ref_679_offset_calculated
FCL (pass 2): added vertex array_obj_ref_679_index_resized_0
FCL (pass 2): added vertex array_obj_ref_679_index_scaled_0
FCL (pass 2): added vertex array_obj_ref_679_index_computed_0
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_679_index_scale_0_sample_start
FCL (pass 2): added vertex array_obj_ref_679_index_scale_0_sample_complete
FCL (pass 2): added vertex array_obj_ref_679_index_scale_0_update_start
FCL (pass 2): added vertex array_obj_ref_679_index_scale_0_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_679_index_resized_1
FCL (pass 2): added vertex array_obj_ref_679_index_scaled_1
FCL (pass 2): added vertex array_obj_ref_679_index_computed_1
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex index_resize_req
FCL (pass 2): added vertex index_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex scale_rename_req
FCL (pass 2): added vertex scale_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 2): added vertex array_obj_ref_679_partial_sum_1_sample_complete
FCL (pass 2): added vertex array_obj_ref_679_partial_sum_1_update_start
FCL (pass 2): added vertex array_obj_ref_679_partial_sum_1_update_complete
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex ptr_deref_684_sample_start_
FCL (pass 2): added vertex ptr_deref_684_sample_completed_
FCL (pass 2): added vertex ptr_deref_684_update_start_
FCL (pass 2): added vertex ptr_deref_684_update_completed_
FCL (pass 2): added vertex ptr_deref_684_base_address_calculated
FCL (pass 2): added vertex ptr_deref_684_word_address_calculated
FCL (pass 2): added vertex ptr_deref_684_root_address_calculated
FCL (pass 2): added vertex ptr_deref_684_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex merge_req
FCL (pass 2): added vertex merge_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex ptr_deref_688_sample_start_
FCL (pass 2): added vertex ptr_deref_688_sample_completed_
FCL (pass 2): added vertex ptr_deref_688_update_start_
FCL (pass 2): added vertex ptr_deref_688_update_completed_
FCL (pass 2): added vertex ptr_deref_688_base_address_calculated
FCL (pass 2): added vertex ptr_deref_688_word_address_calculated
FCL (pass 2): added vertex ptr_deref_688_root_address_calculated
FCL (pass 2): added vertex ptr_deref_688_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex merge_req
FCL (pass 2): added vertex merge_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex assign_stmt_697_sample_start_
FCL (pass 2): added vertex assign_stmt_697_sample_completed_
FCL (pass 2): added vertex assign_stmt_697_update_start_
FCL (pass 2): added vertex assign_stmt_697_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex loop_body_delay_to_condition_start
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_bb_3_xx_x_crit_edge_taken_722_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex bb_3_xx_x_crit_edge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex ptr_deref_732_sample_start_
FCL (pass 2): added vertex ptr_deref_732_sample_completed_
FCL (pass 2): added vertex ptr_deref_732_update_start_
FCL (pass 2): added vertex ptr_deref_732_update_completed_
FCL (pass 2): added vertex ptr_deref_732_base_address_calculated
FCL (pass 2): added vertex ptr_deref_732_word_address_calculated
FCL (pass 2): added vertex ptr_deref_732_root_address_calculated
FCL (pass 2): added vertex ptr_deref_732_base_address_resized
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex base_resize_req
FCL (pass 2): added vertex base_resize_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex sum_rename_req
FCL (pass 2): added vertex sum_rename_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex root_register_req
FCL (pass 2): added vertex root_register_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex split_req
FCL (pass 2): added vertex split_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_exitcond_748_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 2): added vertex xx_x_crit_edge_bbx_xnph
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex branch_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex R_exitcond7_767_place
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex if_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex else_choice_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 2): added vertex xx_x_crit_edge6_bbx_xnph5
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex WPIPE_upper_done_773_sample_start_
FCL (pass 2): added vertex WPIPE_upper_done_773_sample_completed_
FCL (pass 2): added vertex WPIPE_upper_done_773_update_start_
FCL (pass 2): added vertex WPIPE_upper_done_773_update_completed_
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex req
FCL (pass 2): added vertex ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex type_cast_620_konst_delay_trans
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_614_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_614_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_613_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_614_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex type_cast_634_konst_delay_trans
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_630_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_630_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_629_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_630_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_645_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex rr
FCL (pass 2): added vertex ra
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex cr
FCL (pass 2): added vertex ca
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex phi_stmt_726_req
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_725_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex phi_stmt_726_ack
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_753_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dead_transition
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_772_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex merge_stmt_777_PhiReqMerge
FCL (pass 2): added vertex $entry
FCL (pass 2): added vertex dummy
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added vertex $exit
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> branch_block_stmt_608__entry__
FCL (pass 2): added control edge branch_block_stmt_608__entry__ -> assign_stmt_611__entry__
FCL (pass 2): added control edge branch_block_stmt_608__exit__ -> $exit
FCL (pass 2): added control edge assign_stmt_611__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_611__exit__ -> bbx_xnph8_bbx_xnph5
FCL (pass 2): added control edge bbx_xnph8_bbx_xnph5 -> $entry
FCL (pass 2): added control edge merge_stmt_613__exit__ -> assign_stmt_627__entry__
FCL (pass 2): added control edge assign_stmt_627__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_627__exit__ -> bbx_xnph5_bbx_xnph
FCL (pass 2): added control edge bbx_xnph5_bbx_xnph -> $entry
FCL (pass 2): added control edge merge_stmt_629__exit__ -> assign_stmt_643__entry__
FCL (pass 2): added control edge assign_stmt_643__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_643__exit__ -> bbx_xnph_bb_3
FCL (pass 2): added control edge bbx_xnph_bb_3 -> $entry
FCL (pass 2): added control edge merge_stmt_645__exit__ -> do_while_stmt_657__entry__
FCL (pass 2): added control edge do_while_stmt_657__entry__ -> $entry
FCL (pass 2): added control edge do_while_stmt_657__exit__ -> if_stmt_721__entry__
FCL (pass 2): added control edge if_stmt_721__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_721__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_721__exit__ -> merge_stmt_725__entry__
FCL (pass 2): added control edge merge_stmt_725__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_725__exit__ -> assign_stmt_734_to_assign_stmt_746__entry__
FCL (pass 2): added control edge assign_stmt_734_to_assign_stmt_746__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_734_to_assign_stmt_746__exit__ -> if_stmt_747__entry__
FCL (pass 2): added control edge if_stmt_747__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_747__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_747__exit__ -> merge_stmt_753__entry__
FCL (pass 2): added control edge merge_stmt_753__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_753__exit__ -> assign_stmt_759_to_assign_stmt_765__entry__
FCL (pass 2): added control edge assign_stmt_759_to_assign_stmt_765__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_759_to_assign_stmt_765__exit__ -> if_stmt_766__entry__
FCL (pass 2): added control edge if_stmt_766__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_766__entry__ -> $entry
FCL (pass 2): added control edge if_stmt_766__exit__ -> merge_stmt_772__entry__
FCL (pass 2): added control edge merge_stmt_772__entry__ -> $entry
FCL (pass 2): added control edge merge_stmt_772__exit__ -> assign_stmt_775__entry__
FCL (pass 2): added control edge assign_stmt_775__entry__ -> $entry
FCL (pass 2): added control edge assign_stmt_775__exit__ -> return__
FCL (pass 2): added control edge return__ -> $entry
FCL (pass 2): added control edge merge_stmt_777__exit__ -> branch_block_stmt_608__exit__
FCL (pass 2): added control edge $entry -> RPIPE_upper_start_610_sample_start_
FCL (pass 2): added control edge RPIPE_upper_start_610_sample_start_ -> $entry
FCL (pass 2): added control edge RPIPE_upper_start_610_sample_completed_ -> RPIPE_upper_start_610_update_start_
FCL (pass 2): added control edge RPIPE_upper_start_610_update_start_ -> $entry
FCL (pass 2): added control edge RPIPE_upper_start_610_update_completed_ -> $exit
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> RPIPE_upper_start_610_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> RPIPE_upper_start_610_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_611__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_627__exit__
FCL (pass 2): added control edge $entry -> addr_of_642_update_start_
FCL (pass 2): added control edge $entry -> array_obj_ref_641_index_computed_0
FCL (pass 2): added control edge $entry -> array_obj_ref_641_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> array_obj_ref_641_index_computed_1
FCL (pass 2): added control edge $entry -> array_obj_ref_641_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_642_sample_start_ -> $entry
FCL (pass 2): added control edge addr_of_642_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_642_update_completed_ -> $exit
FCL (pass 2): added control edge array_obj_ref_641_root_address_calculated -> addr_of_642_sample_start_
FCL (pass 2): added control edge array_obj_ref_641_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_641_index_resized_0 -> array_obj_ref_641_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_641_index_scaled_0 -> array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_641_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_index_resized_0
FCL (pass 2): added control edge array_obj_ref_641_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_641_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_641_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_641_index_scale_0_update_complete -> array_obj_ref_641_index_scaled_0
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_641_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_641_index_scaled_1 -> array_obj_ref_641_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_641_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_641_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_641_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_641_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_641_partial_sum_1_update_complete -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_641_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_642_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_642_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_643__exit__
FCL (pass 2): added control edge $entry -> do_while_stmt_657__entry__
FCL (pass 2): added control edge do_while_stmt_657__entry__ -> first_time_through_loop_body
FCL (pass 2): added control edge do_while_stmt_657__exit__ -> $exit
FCL (pass 2): added control edge loop_back -> back_edge_to_loop_body
FCL (pass 2): added control edge condition_done -> $entry
FCL (pass 2): added control edge condition_done -> $entry
FCL (pass 2): added control edge $entry -> array_obj_ref_679_index_computed_1
FCL (pass 2): added control edge $entry -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> array_obj_ref_679_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> phi_stmt_659_sample_start_
FCL (pass 2): added control edge $entry -> phi_stmt_659_update_start_
FCL (pass 2): added control edge $entry -> phi_stmt_664_sample_start_
FCL (pass 2): added control edge $entry -> phi_stmt_664_update_start_
FCL (pass 2): added control edge $entry -> addr_of_674_update_start_
FCL (pass 2): added control edge $entry -> array_obj_ref_673_index_computed_0
FCL (pass 2): added control edge $entry -> array_obj_ref_673_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> addr_of_680_update_start_
FCL (pass 2): added (cpf) control edge back_edge_to_loop_body -> loop_body_start
FCL (pass 2): added (cpf) control edge first_time_through_loop_body -> loop_body_start
FCL (pass 2): added control edge loop_body_start -> $entry
FCL (pass 2): added control edge loop_body_start -> loop_body_delay_to_condition_start
FCL (pass 2): added (dpe) control edge condition_evaluated -> ack
FCL (pass 2): added (dpe) control edge condition_evaluated -> ack
FCL (pass 2): added control edge aggregated_phi_sample_req -> phi_stmt_659_sample_start__ps
FCL (pass 2): added control edge aggregated_phi_sample_req -> phi_stmt_664_sample_start__ps
FCL (pass 2): added control edge aggregated_phi_sample_ack -> phi_stmt_659_sample_completed_
FCL (pass 2): added control edge aggregated_phi_sample_ack -> phi_stmt_664_sample_completed_
FCL (pass 2): added control edge aggregated_phi_update_req -> phi_stmt_659_update_start__ps
FCL (pass 2): added control edge aggregated_phi_update_req -> phi_stmt_664_update_start__ps
FCL (pass 2): added control edge aggregated_phi_update_ack -> condition_evaluated
FCL (pass 2): added (marked) control edge aggregated_phi_update_ack -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_659_sample_start_ -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_659_sample_completed_ -> ptr_deref_684_update_start_
FCL (pass 2): added control edge phi_stmt_659_sample_completed_ -> ptr_deref_688_update_start_
FCL (pass 2): added control edge phi_stmt_659_sample_completed_ -> assign_stmt_697_update_start_
FCL (pass 2): added control edge phi_stmt_659_update_start_ -> aggregated_phi_update_req
FCL (pass 2): added control edge phi_stmt_659_update_completed_ -> aggregated_phi_update_ack
FCL (pass 2): added control edge phi_stmt_659_update_completed_ -> assign_stmt_697_sample_start_
FCL (pass 2): added (marked) control edge phi_stmt_659_update_completed_ -> phi_stmt_659_update_start_
FCL (pass 2): added (cpf) control edge phi_stmt_659_sample_start__ps -> type_cast_662_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_659_sample_start__ps -> R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 2): added control edge phi_stmt_659_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 2): added (cpf) control edge phi_stmt_659_update_start__ps -> type_cast_662_update_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_659_update_start__ps -> R_vx_x02_at_entry_663_update_start__ps
FCL (pass 2): added control edge phi_stmt_659_update_completed__ps -> phi_stmt_659_update_completed_
FCL (pass 2): added (cpf) control edge phi_stmt_659_loopback_trigger -> type_cast_662_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_659_loopback_trigger -> type_cast_662_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_659_loopback_sample_req -> phi_stmt_659_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_659_loopback_sample_req_ps -> phi_stmt_659_loopback_sample_req
FCL (pass 2): added (cpf) control edge phi_stmt_659_entry_trigger -> R_vx_x02_at_entry_663_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_659_entry_trigger -> R_vx_x02_at_entry_663_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_659_entry_sample_req -> phi_stmt_659_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_659_entry_sample_req_ps -> phi_stmt_659_entry_sample_req
FCL (pass 2): added control edge phi_stmt_659_phi_mux_ack -> phi_stmt_659_phi_mux_ack_ps
FCL (pass 2): added (cpf) control edge phi_stmt_659_phi_mux_ack_ps -> phi_stmt_659_update_completed__ps
FCL (pass 2): added control edge type_cast_662_sample_start__ps -> type_cast_662_sample_start_
FCL (pass 2): added (cpf) control edge type_cast_662_sample_completed__ps -> phi_stmt_659_sample_completed__ps
FCL (pass 2): added control edge type_cast_662_update_start__ps -> type_cast_662_update_start_
FCL (pass 2): added (cpf) control edge type_cast_662_update_completed__ps -> phi_stmt_659_loopback_sample_req_ps
FCL (pass 2): added control edge type_cast_662_sample_start_ -> $entry
FCL (pass 2): added control edge type_cast_662_sample_completed_ -> type_cast_662_sample_completed__ps
FCL (pass 2): added control edge type_cast_662_update_start_ -> $entry
FCL (pass 2): added control edge type_cast_662_update_completed_ -> type_cast_662_update_completed__ps
FCL (pass 2): added (marked) control edge type_cast_662_update_completed_ -> type_cast_662_update_start_
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> type_cast_662_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> type_cast_662_update_completed_
FCL (pass 2): added control edge R_vx_x02_at_entry_663_sample_start__ps -> R_vx_x02_at_entry_663_sample_start_
FCL (pass 2): added (cpf) control edge R_vx_x02_at_entry_663_sample_completed__ps -> phi_stmt_659_sample_completed__ps
FCL (pass 2): added control edge R_vx_x02_at_entry_663_update_start__ps -> R_vx_x02_at_entry_663_update_start_
FCL (pass 2): added (cpf) control edge R_vx_x02_at_entry_663_update_completed__ps -> phi_stmt_659_entry_sample_req_ps
FCL (pass 2): added control edge R_vx_x02_at_entry_663_sample_start_ -> R_vx_x02_at_entry_663_sample_completed_
FCL (pass 2): added control edge R_vx_x02_at_entry_663_sample_completed_ -> R_vx_x02_at_entry_663_sample_completed__ps
FCL (pass 2): added control edge R_vx_x02_at_entry_663_update_start_ -> R_vx_x02_at_entry_663_update_completed_
FCL (pass 2): added control edge phi_stmt_664_sample_start_ -> aggregated_phi_sample_req
FCL (pass 2): added control edge phi_stmt_664_sample_completed_ -> $exit
FCL (pass 2): added control edge phi_stmt_664_update_start_ -> aggregated_phi_update_req
FCL (pass 2): added control edge phi_stmt_664_update_completed_ -> array_obj_ref_679_index_computed_0
FCL (pass 2): added control edge phi_stmt_664_update_completed_ -> condition_evaluated
FCL (pass 2): added control edge phi_stmt_664_update_completed_ -> aggregated_phi_update_ack
FCL (pass 2): added control edge phi_stmt_664_update_completed_ -> array_obj_ref_673_index_computed_1
FCL (pass 2): added (marked) control edge phi_stmt_664_update_completed_ -> phi_stmt_664_update_start_
FCL (pass 2): added (cpf) control edge phi_stmt_664_sample_start__ps -> type_cast_667_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_664_sample_start__ps -> R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 2): added control edge phi_stmt_664_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 2): added (cpf) control edge phi_stmt_664_update_start__ps -> type_cast_667_update_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_664_update_start__ps -> R_kx_x01_at_entry_668_update_start__ps
FCL (pass 2): added control edge phi_stmt_664_update_completed__ps -> phi_stmt_664_update_completed_
FCL (pass 2): added (cpf) control edge phi_stmt_664_loopback_trigger -> type_cast_667_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_664_loopback_trigger -> type_cast_667_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_664_loopback_sample_req -> phi_stmt_664_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_664_loopback_sample_req_ps -> phi_stmt_664_loopback_sample_req
FCL (pass 2): added (cpf) control edge phi_stmt_664_entry_trigger -> R_kx_x01_at_entry_668_sample_start__ps
FCL (pass 2): added (cpf) control edge phi_stmt_664_entry_trigger -> R_kx_x01_at_entry_668_update_start__ps
FCL (pass 2): added (dpe) control edge phi_stmt_664_entry_sample_req -> phi_stmt_664_phi_mux_ack
FCL (pass 2): added control edge phi_stmt_664_entry_sample_req_ps -> phi_stmt_664_entry_sample_req
FCL (pass 2): added control edge phi_stmt_664_phi_mux_ack -> phi_stmt_664_phi_mux_ack_ps
FCL (pass 2): added (cpf) control edge phi_stmt_664_phi_mux_ack_ps -> phi_stmt_664_update_completed__ps
FCL (pass 2): added control edge type_cast_667_sample_start__ps -> type_cast_667_sample_start_
FCL (pass 2): added (cpf) control edge type_cast_667_sample_completed__ps -> phi_stmt_664_sample_completed__ps
FCL (pass 2): added control edge type_cast_667_update_start__ps -> type_cast_667_update_start_
FCL (pass 2): added (cpf) control edge type_cast_667_update_completed__ps -> phi_stmt_664_loopback_sample_req_ps
FCL (pass 2): added control edge type_cast_667_sample_start_ -> $entry
FCL (pass 2): added control edge type_cast_667_sample_completed_ -> type_cast_667_sample_completed__ps
FCL (pass 2): added control edge type_cast_667_update_start_ -> $entry
FCL (pass 2): added control edge type_cast_667_update_completed_ -> type_cast_667_update_completed__ps
FCL (pass 2): added (marked) control edge type_cast_667_update_completed_ -> type_cast_667_update_start_
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> type_cast_667_sample_completed_
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> type_cast_667_update_completed_
FCL (pass 2): added control edge R_kx_x01_at_entry_668_sample_start__ps -> R_kx_x01_at_entry_668_sample_start_
FCL (pass 2): added (cpf) control edge R_kx_x01_at_entry_668_sample_completed__ps -> phi_stmt_664_sample_completed__ps
FCL (pass 2): added control edge R_kx_x01_at_entry_668_update_start__ps -> R_kx_x01_at_entry_668_update_start_
FCL (pass 2): added (cpf) control edge R_kx_x01_at_entry_668_update_completed__ps -> phi_stmt_664_entry_sample_req_ps
FCL (pass 2): added control edge R_kx_x01_at_entry_668_sample_start_ -> R_kx_x01_at_entry_668_sample_completed_
FCL (pass 2): added control edge R_kx_x01_at_entry_668_sample_completed_ -> R_kx_x01_at_entry_668_sample_completed__ps
FCL (pass 2): added control edge R_kx_x01_at_entry_668_update_start_ -> R_kx_x01_at_entry_668_update_completed_
FCL (pass 2): added control edge addr_of_674_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge addr_of_674_sample_completed_ -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_674_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_674_update_completed_ -> ptr_deref_684_base_address_calculated
FCL (pass 2): added (marked) control edge addr_of_674_update_completed_ -> addr_of_674_update_start_
FCL (pass 2): added control edge array_obj_ref_673_root_address_calculated -> addr_of_674_sample_start_
FCL (pass 2): added control edge array_obj_ref_673_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_673_index_resized_0 -> array_obj_ref_673_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_673_index_scaled_0 -> array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_673_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_index_resized_0
FCL (pass 2): added control edge array_obj_ref_673_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_673_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_673_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_673_index_scale_0_update_complete -> array_obj_ref_673_index_scaled_0
FCL (pass 2): added (marked) control edge array_obj_ref_673_index_scale_0_update_complete -> array_obj_ref_673_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_673_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_673_index_scaled_1 -> array_obj_ref_673_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_673_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_673_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_673_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_673_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_673_partial_sum_1_update_complete -> array_obj_ref_673_offset_calculated
FCL (pass 2): added control edge array_obj_ref_673_partial_sum_1_update_complete -> $entry
FCL (pass 2): added (marked) control edge array_obj_ref_673_partial_sum_1_update_complete -> array_obj_ref_673_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_673_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_674_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_674_update_completed_
FCL (pass 2): added control edge addr_of_680_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge addr_of_680_sample_completed_ -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 2): added control edge addr_of_680_update_start_ -> $entry
FCL (pass 2): added control edge addr_of_680_update_completed_ -> ptr_deref_688_base_address_calculated
FCL (pass 2): added (marked) control edge addr_of_680_update_completed_ -> addr_of_680_update_start_
FCL (pass 2): added control edge array_obj_ref_679_root_address_calculated -> addr_of_680_sample_start_
FCL (pass 2): added control edge array_obj_ref_679_offset_calculated -> $entry
FCL (pass 2): added control edge array_obj_ref_679_index_resized_0 -> array_obj_ref_679_index_scale_0_sample_start
FCL (pass 2): added control edge array_obj_ref_679_index_scaled_0 -> array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 2): added (marked) control edge array_obj_ref_679_index_scaled_0 -> phi_stmt_664_update_start_
FCL (pass 2): added control edge array_obj_ref_679_index_computed_0 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_index_resized_0
FCL (pass 2): added control edge array_obj_ref_679_index_scale_0_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_679_index_scale_0_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_679_index_scale_0_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_679_index_scale_0_update_complete -> array_obj_ref_679_index_scaled_0
FCL (pass 2): added (marked) control edge array_obj_ref_679_index_scale_0_update_complete -> array_obj_ref_679_index_scale_0_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_index_scale_0_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_index_scale_0_update_complete
FCL (pass 2): added control edge array_obj_ref_679_index_resized_1 -> $entry
FCL (pass 2): added control edge array_obj_ref_679_index_scaled_1 -> array_obj_ref_679_partial_sum_1_sample_start
FCL (pass 2): added control edge array_obj_ref_679_index_computed_1 -> $entry
FCL (pass 2): added control edge $entry -> index_resize_req
FCL (pass 2): added control edge index_resize_req -> index_resize_ack
FCL (pass 2): added control edge index_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_index_resized_1
FCL (pass 2): added control edge $entry -> scale_rename_req
FCL (pass 2): added control edge scale_rename_req -> scale_rename_ack
FCL (pass 2): added control edge scale_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_index_scaled_1
FCL (pass 2): added control edge array_obj_ref_679_partial_sum_1_sample_start -> $entry
FCL (pass 2): added control edge array_obj_ref_679_partial_sum_1_sample_complete -> $exit
FCL (pass 2): added control edge array_obj_ref_679_partial_sum_1_update_start -> $entry
FCL (pass 2): added control edge array_obj_ref_679_partial_sum_1_update_complete -> $entry
FCL (pass 2): added control edge array_obj_ref_679_partial_sum_1_update_complete -> array_obj_ref_679_offset_calculated
FCL (pass 2): added (marked) control edge array_obj_ref_679_partial_sum_1_update_complete -> array_obj_ref_679_partial_sum_1_update_start
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_partial_sum_1_sample_complete
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_partial_sum_1_update_complete
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_offset_calculated
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> array_obj_ref_679_root_address_calculated
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_680_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> addr_of_680_update_completed_
FCL (pass 2): added control edge ptr_deref_684_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge ptr_deref_684_sample_completed_ -> addr_of_674_update_start_
FCL (pass 2): added control edge ptr_deref_684_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_684_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge ptr_deref_684_update_completed_ -> ptr_deref_684_update_start_
FCL (pass 2): added (marked) control edge ptr_deref_684_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 2): added control edge ptr_deref_684_base_address_calculated -> ptr_deref_684_sample_start_
FCL (pass 2): added control edge ptr_deref_684_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_684_word_address_calculated -> ptr_deref_684_sample_start_
FCL (pass 2): added control edge ptr_deref_684_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_684_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_684_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_684_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_684_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_684_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> merge_req
FCL (pass 2): added control edge merge_req -> merge_ack
FCL (pass 2): added control edge merge_ack -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_684_update_completed_
FCL (pass 2): added control edge ptr_deref_688_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge ptr_deref_688_sample_completed_ -> addr_of_680_update_start_
FCL (pass 2): added control edge ptr_deref_688_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_688_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge ptr_deref_688_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 2): added (marked) control edge ptr_deref_688_update_completed_ -> ptr_deref_688_update_start_
FCL (pass 2): added control edge ptr_deref_688_base_address_calculated -> ptr_deref_688_sample_start_
FCL (pass 2): added control edge ptr_deref_688_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_688_word_address_calculated -> ptr_deref_688_sample_start_
FCL (pass 2): added control edge ptr_deref_688_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_688_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_688_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_688_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_688_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_688_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> merge_req
FCL (pass 2): added control edge merge_req -> merge_ack
FCL (pass 2): added control edge merge_ack -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_688_update_completed_
FCL (pass 2): added control edge assign_stmt_697_sample_start_ -> $entry
FCL (pass 2): added (marked) control edge assign_stmt_697_sample_completed_ -> phi_stmt_659_update_start_
FCL (pass 2): added control edge assign_stmt_697_update_start_ -> $entry
FCL (pass 2): added control edge assign_stmt_697_update_completed_ -> $exit
FCL (pass 2): added (marked) control edge assign_stmt_697_update_completed_ -> phi_stmt_659_sample_start_
FCL (pass 2): added (marked) control edge assign_stmt_697_update_completed_ -> assign_stmt_697_update_start_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_697_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_697_update_completed_
FCL (pass 2): added control edge $exit -> loop_body_done
FCL (pass 2): added control edge $entry -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $entry -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> do_while_stmt_657__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_721__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_bb_3_xx_x_crit_edge_taken_722_place
FCL (pass 2): added control edge R_bb_3_xx_x_crit_edge_taken_722_place -> $entry
FCL (pass 2): added control edge R_bb_3_xx_x_crit_edge_taken_722_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> bb_3_xx_x_crit_edge
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> if_stmt_721__exit__
FCL (pass 2): added control edge bb_3_xx_x_crit_edge -> $entry
FCL (pass 2): added control edge $entry -> ptr_deref_732_update_start_
FCL (pass 2): added control edge $entry -> ptr_deref_732_base_address_calculated
FCL (pass 2): added control edge ptr_deref_732_sample_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_732_update_start_ -> $entry
FCL (pass 2): added control edge ptr_deref_732_update_completed_ -> $exit
FCL (pass 2): added control edge ptr_deref_732_base_address_calculated -> ptr_deref_732_sample_start_
FCL (pass 2): added control edge ptr_deref_732_base_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_732_word_address_calculated -> ptr_deref_732_sample_start_
FCL (pass 2): added control edge ptr_deref_732_root_address_calculated -> $entry
FCL (pass 2): added control edge ptr_deref_732_base_address_resized -> $entry
FCL (pass 2): added control edge $entry -> base_resize_req
FCL (pass 2): added control edge base_resize_req -> base_resize_ack
FCL (pass 2): added control edge base_resize_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_732_base_address_resized
FCL (pass 2): added control edge $entry -> sum_rename_req
FCL (pass 2): added control edge sum_rename_req -> sum_rename_ack
FCL (pass 2): added control edge sum_rename_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_732_root_address_calculated
FCL (pass 2): added control edge $entry -> root_register_req
FCL (pass 2): added control edge root_register_req -> root_register_ack
FCL (pass 2): added control edge root_register_ack -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_732_word_address_calculated
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> split_req
FCL (pass 2): added control edge split_req -> split_ack
FCL (pass 2): added control edge split_ack -> $exit
FCL (pass 2): added control edge $exit -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_732_sample_completed_
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> ptr_deref_732_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_734_to_assign_stmt_746__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_747__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_exitcond_748_place
FCL (pass 2): added control edge R_exitcond_748_place -> $entry
FCL (pass 2): added control edge R_exitcond_748_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge_xx_x_crit_edge6
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge_bbx_xnph
FCL (pass 2): added control edge xx_x_crit_edge_xx_x_crit_edge6 -> $entry
FCL (pass 2): added control edge xx_x_crit_edge_bbx_xnph -> $entry
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> assign_stmt_759_to_assign_stmt_765__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> if_stmt_766__exit__
FCL (pass 2): added control edge $entry -> branch_req
FCL (pass 2): added control edge $exit -> R_exitcond7_767_place
FCL (pass 2): added control edge R_exitcond7_767_place -> $entry
FCL (pass 2): added control edge R_exitcond7_767_place -> $entry
FCL (pass 2): added control edge $entry -> if_choice_transition
FCL (pass 2): added control edge if_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge6_xx_x_crit_edge9
FCL (pass 2): added control edge $entry -> else_choice_transition
FCL (pass 2): added control edge else_choice_transition -> $exit
FCL (pass 2): added control edge $exit -> xx_x_crit_edge6_bbx_xnph5
FCL (pass 2): added control edge xx_x_crit_edge6_xx_x_crit_edge9 -> $entry
FCL (pass 2): added control edge xx_x_crit_edge6_bbx_xnph5 -> $entry
FCL (pass 2): added control edge $entry -> WPIPE_upper_done_773_sample_start_
FCL (pass 2): added control edge WPIPE_upper_done_773_sample_start_ -> $entry
FCL (pass 2): added control edge WPIPE_upper_done_773_sample_completed_ -> WPIPE_upper_done_773_update_start_
FCL (pass 2): added control edge WPIPE_upper_done_773_update_start_ -> $entry
FCL (pass 2): added control edge WPIPE_upper_done_773_update_completed_ -> $exit
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added (dpe) control edge req -> ack
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> WPIPE_upper_done_773_sample_completed_
FCL (pass 2): added control edge $entry -> req
FCL (pass 2): added control edge ack -> $exit
FCL (pass 2): added control edge $exit -> WPIPE_upper_done_773_update_completed_
FCL (pass 2): added control edge $exit -> assign_stmt_775__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> type_cast_620_konst_delay_trans
FCL (pass 2): added control edge $exit -> phi_stmt_614_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_613_PhiReqMerge
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_614_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_613_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_613_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_614_ack
FCL (pass 2): added control edge phi_stmt_614_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_613__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> type_cast_634_konst_delay_trans
FCL (pass 2): added control edge $exit -> phi_stmt_630_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_629_PhiReqMerge
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_630_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_629_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_629_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_630_ack
FCL (pass 2): added control edge phi_stmt_630_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_629__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_645_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_645_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_645__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_725__exit__
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> $entry
FCL (pass 2): added control edge $entry -> rr
FCL (pass 2): added (dpe) control edge rr -> ra
FCL (pass 2): added control edge ra -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $entry -> cr
FCL (pass 2): added (dpe) control edge cr -> ra
FCL (pass 2): added control edge ca -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> phi_stmt_726_req
FCL (pass 2): added control edge $exit -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_725_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_725_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> phi_stmt_726_ack
FCL (pass 2): added control edge phi_stmt_726_ack -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_725__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_753__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_753_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_753_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_753__exit__
FCL (pass 2): added control edge $entry -> dead_transition
FCL (pass 2): added control edge $exit -> merge_stmt_772__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_772_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_772_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_772__exit__
FCL (pass 2): added control edge $entry -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_777_PhiReqMerge
FCL (pass 2): added control edge merge_stmt_777_PhiReqMerge -> $entry
FCL (pass 2): added control edge $entry -> dummy
FCL (pass 2): added control edge dummy -> $exit
FCL (pass 2): added control edge $exit -> merge_stmt_777__exit__
FCL (pass 2): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 665
Info:  Fix_Combi pass OK
Info: reducing Control-path 
Info: removed CP-element if_stmt_747__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_753__entry__ maybe it was dead?
Info: removed CP-element if_stmt_766__exit__ maybe it was dead?
Info: removed CP-element merge_stmt_772__entry__ maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: removed CP-element $entry maybe it was dead?
Info: removed CP-element dead_transition maybe it was dead?
Info: removed CP-element $exit maybe it was dead?
Info: finding nucleii 
Info:  Total number of strongly-connected-components is 107
Info: SCC 0
	e_11
Info: SCC 1
	e_4
Info: SCC 2
	e_7
Info: SCC 3
	e_6
Info: SCC 4
	e_5
Info: SCC 5
	e_9
Info: SCC 6
	e_8
Info: SCC 7
	e_10
Info: SCC 8
	e_130
Info: SCC 9
	e_129
Info: SCC 10
	e_125
Info: SCC 11
	e_124
Info: SCC 12
	e_123
Info: SCC 13
	e_119
Info: SCC 14
	e_3
Info: SCC 15
	e_2
Info: SCC 16
	e_0
Info: SCC 17
	e_111
Info: SCC 18
	e_118
Info: SCC 19
	e_117
Info: SCC 20
	e_115
Info: SCC 21
	e_122
Info: SCC 22
	e_120
Info: SCC 23
	e_121
Info: SCC 24
	e_116
Info: SCC 25
	e_113
Info: SCC 26
	e_128
Info: SCC 27
	e_126
Info: SCC 28
	e_127
Info: SCC 29
	e_114
Info: SCC 30
	e_112
Info: SCC 31
	e_110
Info: SCC 32
	e_134
Info: SCC 33
	e_133
Info: SCC 34
	e_131
Info: SCC 35
	e_132
Info: SCC 36
	e_108
Info: SCC 37
	e_109
Info: SCC 38
	e_1
Info: SCC 39
	e_12
Info: SCC 40
	e_107
Info: SCC 41
	e_13
Info: SCC 42
	e_14
Info: SCC 43
	e_105
Info: SCC 44
	e_106
Info: SCC 45
	e_15
Info: SCC 46
	e_16
Info: SCC 47
	e_29
Info: SCC 48
	e_50
Info: SCC 49
	e_17
Info: SCC 50
	e_31
Info: SCC 51
	e_52
Info: SCC 52
	e_18
Info: SCC 53
	e_104
Info: SCC 54
	e_48
Info: SCC 55
	e_23
Info: SCC 56
	e_45
Info: SCC 57
	e_87
	e_85
	e_80
Info: SCC 58
	e_88
	e_89
	e_86
	e_78
Info: SCC 59
	e_84
	e_82
Info: SCC 60
	e_46
Info: SCC 61
	e_21
Info: SCC 62
	e_25
Info: SCC 63
	e_26
Info: SCC 64
	e_44
Info: SCC 65
	e_91
	e_66
	e_77
	e_93
Info: SCC 66
	e_68
	e_70
Info: SCC 67
	e_67
	e_72
	e_74
Info: SCC 68
	e_69
	e_71
Info: SCC 69
	e_65
	e_73
	e_75
	e_76
Info: SCC 70
	e_90
	e_79
	e_95
	e_97
Info: SCC 71
	e_20
Info: SCC 72
	e_103
Info: SCC 73
	e_19
Info: SCC 74
	e_92
	e_94
Info: SCC 75
	e_96
	e_98
Info: SCC 76
	e_100
	e_102
Info: SCC 77
	e_22
Info: SCC 78
	e_24
Info: SCC 79
	e_27
Info: SCC 80
	e_99
	e_101
Info: SCC 81
	e_28
Info: SCC 82
	e_30
Info: SCC 83
	e_32
Info: SCC 84
	e_33
Info: SCC 85
	e_36
	e_38
Info: SCC 86
	e_34
Info: SCC 87
	e_37
	e_39
Info: SCC 88
	e_35
Info: SCC 89
	e_40
Info: SCC 90
	e_42
Info: SCC 91
	e_43
Info: SCC 92
	e_41
Info: SCC 93
	e_47
Info: SCC 94
	e_81
	e_83
Info: SCC 95
	e_49
Info: SCC 96
	e_51
Info: SCC 97
	e_53
Info: SCC 98
	e_54
Info: SCC 99
	e_57
	e_59
Info: SCC 100
	e_55
Info: SCC 101
	e_58
	e_60
Info: SCC 102
	e_56
Info: SCC 103
	e_61
Info: SCC 104
	e_63
Info: SCC 105
	e_64
Info: SCC 106
	e_62
Info: Detect and try to fix combinational loops by increasing interlock-buffering (two passes)
Info: Started Fix_Combinational_Loops (pass 1)
Info: Started will double buffer interlock-buffers if needed
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex WPIPE_timer_req_176_sample_start_
FCL (pass 1): added vertex WPIPE_timer_req_176_sample_completed_
FCL (pass 1): added vertex WPIPE_timer_req_176_update_start_
FCL (pass 1): added vertex WPIPE_timer_req_176_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex RPIPE_timer_resp_181_sample_start_
FCL (pass 1): added vertex RPIPE_timer_resp_181_sample_completed_
FCL (pass 1): added vertex RPIPE_timer_resp_181_update_start_
FCL (pass 1): added vertex RPIPE_timer_resp_181_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> RPIPE_timer_resp_181_sample_start_
FCL (pass 1): added control edge $entry -> WPIPE_timer_req_176_sample_start_
FCL (pass 1): added control edge WPIPE_timer_req_176_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_timer_req_176_sample_completed_ -> WPIPE_timer_req_176_update_start_
FCL (pass 1): added control edge WPIPE_timer_req_176_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_timer_req_176_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_timer_req_176_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_timer_req_176_update_completed_
FCL (pass 1): added control edge RPIPE_timer_resp_181_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_timer_resp_181_sample_completed_ -> RPIPE_timer_resp_181_update_start_
FCL (pass 1): added control edge RPIPE_timer_resp_181_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_timer_resp_181_update_completed_ -> $exit
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_timer_resp_181_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_timer_resp_181_update_completed_
FCL (pass 1): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 28
Info:  Fix_Combi pass OK
Info: reducing Control-path 
Info: finding nucleii 
Info:  Total number of strongly-connected-components is 6
Info: SCC 0
	e_5
Info: SCC 1
	e_4
Info: SCC 2
	e_3
Info: SCC 3
	e_2
Info: SCC 4
	e_1
Info: SCC 5
	e_0
Info: Info: transition [phi_stmt_861_merged_reqs] is isolated, removed.
Warning: exit not reachable from every element in region branch_block_stmt_858/do_while_stmt_859/do_while_stmt_859_loop_body
	 un-visited elements
	condition_evaluated
	aggregated_phi_update_ack
	phi_stmt_861_loopback_sample_req
	phi_stmt_861_entry_sample_req
	loop_body_delay_to_condition_start
Info: removed redundant fork point [type_cast_864_sample_start__ps] &-> [type_cast_864_sample_completed__ps]
Info: removed redundant join point [type_cast_864_sample_completed__ps] <-& [type_cast_864_sample_start__ps]
Info: removed redundant fork point [R_nCOUNTER_865_sample_start__ps] &-> [R_nCOUNTER_865_sample_completed__ps]
Info: removed redundant join point [R_nCOUNTER_865_sample_completed__ps] <-& [R_nCOUNTER_865_sample_start__ps]
Info: removed redundant fork point [type_cast_864_update_start__ps] &-> [type_cast_864_update_completed__ps]
Info: removed redundant join point [type_cast_864_update_completed__ps] <-& [type_cast_864_update_start__ps]
Info: removed redundant fork point [R_nCOUNTER_865_update_start__ps] &-> [R_nCOUNTER_865_update_completed__ps]
Info: removed redundant join point [R_nCOUNTER_865_update_completed__ps] <-& [R_nCOUNTER_865_update_start__ps]
Info: removed redundant marked link: [phi_stmt_861_update_start_] o<-& [phi_stmt_861_update_completed_]
Info: removed redundant join point [type_cast_864_sample_completed__ps] <-& [type_cast_864_sample_start__ps]
Info: removed redundant fork point [type_cast_864_sample_start__ps] &-> [type_cast_864_sample_completed__ps]
Info: removed redundant join point [type_cast_864_update_completed__ps] <-& [type_cast_864_update_start__ps]
Info: removed redundant fork point [type_cast_864_update_start__ps] &-> [type_cast_864_update_completed__ps]
Info: removed redundant join point [R_nCOUNTER_865_sample_completed__ps] <-& [R_nCOUNTER_865_sample_start__ps]
Info: removed redundant fork point [R_nCOUNTER_865_sample_start__ps] &-> [R_nCOUNTER_865_sample_completed__ps]
Info: removed redundant join point [R_nCOUNTER_865_update_completed__ps] <-& [R_nCOUNTER_865_update_start__ps]
Info: removed redundant fork point [R_nCOUNTER_865_update_start__ps] &-> [R_nCOUNTER_865_update_completed__ps]
Info: Detect and try to fix combinational loops by increasing interlock-buffering (two passes)
Info: Started Fix_Combinational_Loops (pass 1)
Info: Started will double buffer interlock-buffers if needed
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex branch_block_stmt_858__entry__
FCL (pass 1): added vertex branch_block_stmt_858__exit__
FCL (pass 1): added vertex do_while_stmt_859__entry__
FCL (pass 1): added vertex do_while_stmt_859__exit__
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex do_while_stmt_859__entry__
FCL (pass 1): added vertex do_while_stmt_859__exit__
FCL (pass 1): added vertex loop_back
FCL (pass 1): added vertex condition_done
FCL (pass 1): added vertex loop_body_done
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex back_edge_to_loop_body
FCL (pass 1): added vertex first_time_through_loop_body
FCL (pass 1): added vertex loop_body_start
FCL (pass 1): added vertex condition_evaluated
FCL (pass 1): added vertex aggregated_phi_sample_req
FCL (pass 1): added vertex aggregated_phi_sample_ack
FCL (pass 1): added vertex aggregated_phi_update_req
FCL (pass 1): added vertex aggregated_phi_update_ack
FCL (pass 1): added vertex phi_stmt_861_sample_start_
FCL (pass 1): added vertex phi_stmt_861_sample_completed_
FCL (pass 1): added vertex phi_stmt_861_update_start_
FCL (pass 1): added vertex phi_stmt_861_update_completed_
FCL (pass 1): added vertex phi_stmt_861_sample_start__ps
FCL (pass 1): added vertex phi_stmt_861_sample_completed__ps
FCL (pass 1): added vertex phi_stmt_861_update_start__ps
FCL (pass 1): added vertex phi_stmt_861_update_completed__ps
FCL (pass 1): added vertex phi_stmt_861_loopback_trigger
FCL (pass 1): added vertex phi_stmt_861_loopback_sample_req
FCL (pass 1): added vertex phi_stmt_861_loopback_sample_req_ps
FCL (pass 1): added vertex phi_stmt_861_entry_trigger
FCL (pass 1): added vertex phi_stmt_861_entry_sample_req
FCL (pass 1): added vertex phi_stmt_861_entry_sample_req_ps
FCL (pass 1): added vertex phi_stmt_861_phi_mux_ack
FCL (pass 1): added vertex phi_stmt_861_phi_mux_ack_ps
FCL (pass 1): added vertex type_cast_864_sample_start__ps
FCL (pass 1): added vertex type_cast_864_sample_completed__ps
FCL (pass 1): added vertex type_cast_864_update_start__ps
FCL (pass 1): added vertex type_cast_864_update_completed__ps
FCL (pass 1): added vertex type_cast_864_sample_start_
FCL (pass 1): added vertex type_cast_864_sample_completed_
FCL (pass 1): added vertex type_cast_864_update_start_
FCL (pass 1): added vertex type_cast_864_update_completed_
FCL (pass 1): added vertex R_nCOUNTER_865_sample_start__ps
FCL (pass 1): added vertex R_nCOUNTER_865_sample_completed__ps
FCL (pass 1): added vertex R_nCOUNTER_865_update_start__ps
FCL (pass 1): added vertex R_nCOUNTER_865_update_completed__ps
FCL (pass 1): added vertex R_nCOUNTER_865_sample_start_
FCL (pass 1): added vertex R_nCOUNTER_865_sample_completed_
FCL (pass 1): added vertex R_nCOUNTER_865_update_start_
FCL (pass 1): added vertex R_nCOUNTER_865_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex phi_stmt_866_sample_start_
FCL (pass 1): added vertex phi_stmt_866_sample_completed_
FCL (pass 1): added vertex phi_stmt_866_update_start_
FCL (pass 1): added vertex phi_stmt_866_update_completed_
FCL (pass 1): added vertex RPIPE_timer_req_868_sample_start_
FCL (pass 1): added vertex RPIPE_timer_req_868_sample_completed_
FCL (pass 1): added vertex RPIPE_timer_req_868_update_start_
FCL (pass 1): added vertex RPIPE_timer_req_868_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex rr
FCL (pass 1): added vertex ra
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex cr
FCL (pass 1): added vertex ca
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex WPIPE_timer_resp_876_sample_start_
FCL (pass 1): added vertex WPIPE_timer_resp_876_sample_completed_
FCL (pass 1): added vertex WPIPE_timer_resp_876_update_start_
FCL (pass 1): added vertex WPIPE_timer_resp_876_update_completed_
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex req
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex loop_body_delay_to_condition_start
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $entry
FCL (pass 1): added vertex ack
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added vertex $exit
FCL (pass 1): added control edge $entry -> $entry
FCL (pass 1): added control edge $entry -> branch_block_stmt_858__entry__
FCL (pass 1): added control edge branch_block_stmt_858__entry__ -> do_while_stmt_859__entry__
FCL (pass 1): added control edge branch_block_stmt_858__exit__ -> $exit
FCL (pass 1): added control edge do_while_stmt_859__entry__ -> $entry
FCL (pass 1): added control edge do_while_stmt_859__exit__ -> branch_block_stmt_858__exit__
FCL (pass 1): added control edge $entry -> do_while_stmt_859__entry__
FCL (pass 1): added control edge do_while_stmt_859__entry__ -> first_time_through_loop_body
FCL (pass 1): added control edge do_while_stmt_859__exit__ -> $exit
FCL (pass 1): added control edge loop_back -> back_edge_to_loop_body
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge condition_done -> $entry
FCL (pass 1): added control edge $entry -> phi_stmt_861_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_861_update_start_
FCL (pass 1): added control edge $entry -> phi_stmt_866_sample_start_
FCL (pass 1): added control edge $entry -> phi_stmt_866_update_start_
FCL (pass 1): added (cpf) control edge back_edge_to_loop_body -> loop_body_start
FCL (pass 1): added (cpf) control edge first_time_through_loop_body -> loop_body_start
FCL (pass 1): added control edge loop_body_start -> $entry
FCL (pass 1): added control edge loop_body_start -> loop_body_delay_to_condition_start
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added (dpe) control edge condition_evaluated -> ack
FCL (pass 1): added control edge aggregated_phi_sample_req -> phi_stmt_861_sample_start__ps
FCL (pass 1): added control edge aggregated_phi_sample_req -> RPIPE_timer_req_868_sample_start_
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_861_sample_completed_
FCL (pass 1): added control edge aggregated_phi_sample_ack -> phi_stmt_866_sample_completed_
FCL (pass 1): added control edge aggregated_phi_update_req -> phi_stmt_861_update_start__ps
FCL (pass 1): added control edge aggregated_phi_update_req -> RPIPE_timer_req_868_update_start_
FCL (pass 1): added control edge aggregated_phi_update_ack -> condition_evaluated
FCL (pass 1): added (marked) control edge aggregated_phi_update_ack -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_861_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_861_sample_completed_ -> $exit
FCL (pass 1): added control edge phi_stmt_861_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_861_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_861_update_completed_ -> WPIPE_timer_resp_876_sample_start_
FCL (pass 1): added (cpf) control edge phi_stmt_861_sample_start__ps -> type_cast_864_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_861_sample_start__ps -> R_nCOUNTER_865_sample_start__ps
FCL (pass 1): added control edge phi_stmt_861_sample_completed__ps -> aggregated_phi_sample_ack
FCL (pass 1): added (cpf) control edge phi_stmt_861_update_start__ps -> type_cast_864_update_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_861_update_start__ps -> R_nCOUNTER_865_update_start__ps
FCL (pass 1): added control edge phi_stmt_861_update_completed__ps -> phi_stmt_861_update_completed_
FCL (pass 1): added (cpf) control edge phi_stmt_861_loopback_trigger -> R_nCOUNTER_865_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_861_loopback_trigger -> R_nCOUNTER_865_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_861_loopback_sample_req -> phi_stmt_861_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_861_loopback_sample_req_ps -> phi_stmt_861_loopback_sample_req
FCL (pass 1): added (cpf) control edge phi_stmt_861_entry_trigger -> type_cast_864_sample_start__ps
FCL (pass 1): added (cpf) control edge phi_stmt_861_entry_trigger -> type_cast_864_update_start__ps
FCL (pass 1): added (dpe) control edge phi_stmt_861_entry_sample_req -> phi_stmt_861_phi_mux_ack
FCL (pass 1): added control edge phi_stmt_861_entry_sample_req_ps -> phi_stmt_861_entry_sample_req
FCL (pass 1): added control edge phi_stmt_861_phi_mux_ack -> phi_stmt_861_phi_mux_ack_ps
FCL (pass 1): added (cpf) control edge phi_stmt_861_phi_mux_ack_ps -> phi_stmt_861_update_completed__ps
FCL (pass 1): added control edge type_cast_864_sample_start__ps -> type_cast_864_sample_start_
FCL (pass 1): added (cpf) control edge type_cast_864_sample_completed__ps -> phi_stmt_861_sample_completed__ps
FCL (pass 1): added control edge type_cast_864_update_start__ps -> type_cast_864_update_start_
FCL (pass 1): added (cpf) control edge type_cast_864_update_completed__ps -> phi_stmt_861_entry_sample_req_ps
FCL (pass 1): added control edge type_cast_864_sample_start_ -> type_cast_864_sample_completed_
FCL (pass 1): added control edge type_cast_864_sample_completed_ -> type_cast_864_sample_completed__ps
FCL (pass 1): added control edge type_cast_864_update_start_ -> type_cast_864_update_completed_
FCL (pass 1): added control edge R_nCOUNTER_865_sample_start__ps -> R_nCOUNTER_865_sample_start_
FCL (pass 1): added (cpf) control edge R_nCOUNTER_865_sample_completed__ps -> phi_stmt_861_sample_completed__ps
FCL (pass 1): added control edge R_nCOUNTER_865_update_start__ps -> R_nCOUNTER_865_update_start_
FCL (pass 1): added (cpf) control edge R_nCOUNTER_865_update_completed__ps -> phi_stmt_861_loopback_sample_req_ps
FCL (pass 1): added control edge R_nCOUNTER_865_sample_start_ -> $entry
FCL (pass 1): added control edge R_nCOUNTER_865_sample_completed_ -> R_nCOUNTER_865_sample_completed__ps
FCL (pass 1): added control edge R_nCOUNTER_865_update_start_ -> $entry
FCL (pass 1): added control edge R_nCOUNTER_865_update_completed_ -> R_nCOUNTER_865_update_completed__ps
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> R_nCOUNTER_865_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> R_nCOUNTER_865_update_completed_
FCL (pass 1): added control edge phi_stmt_866_sample_start_ -> aggregated_phi_sample_req
FCL (pass 1): added control edge phi_stmt_866_sample_completed_ -> $exit
FCL (pass 1): added control edge phi_stmt_866_update_start_ -> aggregated_phi_update_req
FCL (pass 1): added control edge phi_stmt_866_update_completed_ -> aggregated_phi_update_ack
FCL (pass 1): added control edge phi_stmt_866_update_completed_ -> WPIPE_timer_resp_876_sample_start_
FCL (pass 1): added control edge RPIPE_timer_req_868_sample_start_ -> $entry
FCL (pass 1): added control edge RPIPE_timer_req_868_sample_completed_ -> aggregated_phi_sample_ack
FCL (pass 1): added control edge RPIPE_timer_req_868_sample_completed_ -> RPIPE_timer_req_868_update_start_
FCL (pass 1): added control edge RPIPE_timer_req_868_update_start_ -> $entry
FCL (pass 1): added control edge RPIPE_timer_req_868_update_completed_ -> phi_stmt_866_update_completed_
FCL (pass 1): added (marked) control edge RPIPE_timer_req_868_update_completed_ -> RPIPE_timer_req_868_sample_start_
FCL (pass 1): added control edge $entry -> rr
FCL (pass 1): added (dpe) control edge rr -> ra
FCL (pass 1): added control edge ra -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_timer_req_868_sample_completed_
FCL (pass 1): added control edge $entry -> cr
FCL (pass 1): added control edge ca -> $exit
FCL (pass 1): added control edge $exit -> RPIPE_timer_req_868_update_completed_
FCL (pass 1): added control edge WPIPE_timer_resp_876_sample_start_ -> $entry
FCL (pass 1): added control edge WPIPE_timer_resp_876_sample_completed_ -> WPIPE_timer_resp_876_update_start_
FCL (pass 1): added (marked) control edge WPIPE_timer_resp_876_sample_completed_ -> phi_stmt_861_update_start_
FCL (pass 1): added (marked) control edge WPIPE_timer_resp_876_sample_completed_ -> phi_stmt_866_update_start_
FCL (pass 1): added control edge WPIPE_timer_resp_876_update_start_ -> $entry
FCL (pass 1): added control edge WPIPE_timer_resp_876_update_completed_ -> $exit
FCL (pass 1): added (marked) control edge WPIPE_timer_resp_876_update_completed_ -> WPIPE_timer_resp_876_sample_start_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added (dpe) control edge req -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_timer_resp_876_sample_completed_
FCL (pass 1): added control edge $entry -> req
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> WPIPE_timer_resp_876_update_completed_
FCL (pass 1): added control edge $exit -> loop_body_done
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $entry -> ack
FCL (pass 1): added control edge ack -> $exit
FCL (pass 1): added control edge $exit -> do_while_stmt_859__exit__
FCL (pass 1): added control edge $exit -> $exit
Info:  Total number of strongly-connected-components is 100
Info:  Fix_Combi pass OK
Info: reducing Control-path 
Info: finding nucleii 
Info:  Total number of strongly-connected-components is 32
Info: SCC 0
	e_0
Info: SCC 1
	e_1
Info: SCC 2
	e_2
Info: SCC 3
	e_44
Info: SCC 4
	e_3
Info: SCC 5
	e_4
Info: SCC 6
	e_42
Info: SCC 7
	e_43
Info: SCC 8
	e_5
Info: SCC 9
	e_6
Info: SCC 10
	e_19
Info: SCC 11
	e_7
Info: SCC 12
	e_21
Info: SCC 13
	e_8
Info: SCC 14
	e_41
Info: SCC 15
	e_10
Info: SCC 16
	e_11
	e_12
	e_13
	e_14
	e_15
	e_16
	e_32
	e_33
	e_34
	e_35
	e_36
	e_37
	e_38
	e_39
Info: SCC 17
	e_40
Info: SCC 18
	e_9
Info: SCC 19
	e_17
Info: SCC 20
	e_18
Info: SCC 21
	e_20
Info: SCC 22
	e_22
Info: SCC 23
	e_23
Info: SCC 24
	e_24
Info: SCC 25
	e_26
Info: SCC 26
	e_27
Info: SCC 27
	e_25
Info: SCC 28
	e_30
Info: SCC 29
	e_28
Info: SCC 30
	e_31
Info: SCC 31
	e_29
Info: ADD_u32_u32_223_inst included in vcBinarySplitOperator group 0
Info: ADD_u32_u32_242_inst included in vcBinarySplitOperator group 1
Info: ADD_u32_u32_294_inst included in vcBinarySplitOperator group 2
Info: ADD_u32_u32_313_inst included in vcBinarySplitOperator group 3
Info: ADD_u32_u32_402_inst included in vcBinarySplitOperator group 4
Info: ADD_u32_u32_421_inst included in vcBinarySplitOperator group 5
Info: EQ_u32_u1_229_inst included in vcBinarySplitOperator group 6
Info: EQ_u32_u1_248_inst included in vcBinarySplitOperator group 7
Info: EQ_u32_u1_300_inst included in vcBinarySplitOperator group 8
Info: EQ_u32_u1_319_inst included in vcBinarySplitOperator group 9
Info: EQ_u32_u1_408_inst included in vcBinarySplitOperator group 10
Info: EQ_u32_u1_427_inst included in vcBinarySplitOperator group 11
Info: RPIPE_in_data_pipe_213_inst included in vcInport group 0
Info: RPIPE_in_data_pipe_284_inst included in vcInport group 0
Info: RPIPE_lower_done_345_inst included in vcInport group 1
Info: RPIPE_upper_done_348_inst included in vcInport group 2
Info: SUB_u64_u64_360_inst included in vcBinarySplitOperator group 12
Info: WPIPE_elapsed_time_pipe_362_inst included in vcOutport group 0
Info: WPIPE_lower_start_336_inst included in vcOutport group 1
Info: WPIPE_result_pipe_395_inst included in vcOutport group 2
Info: WPIPE_upper_start_340_inst included in vcOutport group 3
Info: array_obj_ref_209_index_0_scale included in vcBinarySplitOperator group 13
Info: array_obj_ref_209_index_sum_1 included in vcBinarySplitOperator group 14
Info: array_obj_ref_280_index_0_scale included in vcBinarySplitOperator group 13
Info: array_obj_ref_280_index_sum_1 included in vcBinarySplitOperator group 15
Info: array_obj_ref_388_index_0_scale included in vcBinarySplitOperator group 13
Info: array_obj_ref_388_index_sum_1 included in vcBinarySplitOperator group 16
Info: call_stmt_329_call included in vcCall group 0
Info: call_stmt_351_call included in vcCall group 0
Info: ptr_deref_216_store_0 included in vcStore group 0
Info: ptr_deref_287_store_0 included in vcStore group 1
Info: ptr_deref_393_load_0 included in vcLoad group 0
Info: type_cast_333_inst included in vcUnarySplitOperator group 17
Info: type_cast_354_inst included in vcUnarySplitOperator group 18
Info: ADD_u32_u32_528_inst included in vcBinarySplitOperator group 0
Info: ADD_u32_u32_534_inst included in vcBinarySplitOperator group 1
Info: ADD_u32_u32_566_inst included in vcBinarySplitOperator group 2
Info: ADD_u32_u32_585_inst included in vcBinarySplitOperator group 3
Info: EQ_u32_u1_540_inst included in vcBinarySplitOperator group 4
Info: EQ_u32_u1_572_inst included in vcBinarySplitOperator group 5
Info: EQ_u32_u1_591_inst included in vcBinarySplitOperator group 6
Info: MUL_u32_u32_520_inst included in vcBinarySplitOperator group 7
Info: NOT_u1_u1_547_inst included in vcUnarySplitOperator group 8
Info: RPIPE_lower_start_443_inst included in vcInport group 0
Info: WPIPE_lower_done_600_inst included in vcOutport group 0
Info: array_obj_ref_468_index_0_scale included in vcBinarySplitOperator group 9
Info: array_obj_ref_468_index_sum_1 included in vcBinarySplitOperator group 10
Info: array_obj_ref_500_index_0_scale included in vcBinarySplitOperator group 11
Info: array_obj_ref_500_index_sum_1 included in vcBinarySplitOperator group 12
Info: array_obj_ref_506_index_0_scale included in vcBinarySplitOperator group 11
Info: array_obj_ref_506_index_sum_1 included in vcBinarySplitOperator group 13
Info: ptr_deref_511_load_0 included in vcLoad group 0
Info: ptr_deref_515_load_0 included in vcLoad group 1
Info: ptr_deref_559_store_0 included in vcStore group 0
Info: ADD_u32_u32_626_inst included in vcBinarySplitOperator group 0
Info: ADD_u32_u32_701_inst included in vcBinarySplitOperator group 1
Info: ADD_u32_u32_707_inst included in vcBinarySplitOperator group 2
Info: ADD_u32_u32_739_inst included in vcBinarySplitOperator group 3
Info: ADD_u32_u32_758_inst included in vcBinarySplitOperator group 4
Info: EQ_u32_u1_713_inst included in vcBinarySplitOperator group 5
Info: EQ_u32_u1_745_inst included in vcBinarySplitOperator group 6
Info: EQ_u32_u1_764_inst included in vcBinarySplitOperator group 7
Info: MUL_u32_u32_693_inst included in vcBinarySplitOperator group 8
Info: NOT_u1_u1_720_inst included in vcUnarySplitOperator group 9
Info: RPIPE_upper_start_610_inst included in vcInport group 0
Info: WPIPE_upper_done_773_inst included in vcOutport group 0
Info: array_obj_ref_641_index_0_scale included in vcBinarySplitOperator group 10
Info: array_obj_ref_641_index_sum_1 included in vcBinarySplitOperator group 11
Info: array_obj_ref_673_index_0_scale included in vcBinarySplitOperator group 12
Info: array_obj_ref_673_index_sum_1 included in vcBinarySplitOperator group 13
Info: array_obj_ref_679_index_0_scale included in vcBinarySplitOperator group 12
Info: array_obj_ref_679_index_sum_1 included in vcBinarySplitOperator group 14
Info: ptr_deref_684_load_0 included in vcLoad group 0
Info: ptr_deref_688_load_0 included in vcLoad group 1
Info: ptr_deref_732_store_0 included in vcStore group 0
Info: RPIPE_timer_resp_181_inst included in vcInport group 0
Info: WPIPE_timer_req_176_inst included in vcOutport group 0
Info: ADD_u64_u64_873_inst included in vcBinarySplitOperator group 0
Info: RPIPE_timer_req_868_inst included in vcInport group 0
Info: WPIPE_timer_resp_876_inst included in vcOutport group 0
Info: printing VHDL global package
Info: printing top-level system VHDL file ahir_system.unformatted_vhdl
Info: printing VHDL model
Info: printing VHDL model for module mmultiply
Info: resources used by CP mmultiply_CP_692: ff-count=38 (saved 0), mux2-count= 38, and2-count= 22
Info: estimated buffering for operator RPIPE_in_data_pipe_213_inst = 32
Info: estimated buffering for operator RPIPE_in_data_pipe_284_inst = 32
Info: estimated buffering for operator RPIPE_lower_done_345_inst = 8
Info: estimated buffering for operator RPIPE_upper_done_348_inst = 8
Info: estimated buffering for operator addr_of_210_final_reg = 32
Info: estimated buffering for operator addr_of_281_final_reg = 32
Info: estimated buffering for operator addr_of_389_final_reg = 32
Info: estimated buffering for operator array_obj_ref_209_index_0_scale = 4
Info: estimated buffering for operator array_obj_ref_209_index_sum_1 = 4
Info: estimated buffering for operator array_obj_ref_280_index_0_scale = 4
Info: estimated buffering for operator array_obj_ref_280_index_sum_1 = 4
Info: estimated buffering for operator array_obj_ref_388_index_0_scale = 4
Info: estimated buffering for operator array_obj_ref_388_index_sum_1 = 4
Info: estimated buffering for operator call_stmt_329_call = 64
Info: estimated buffering for operator call_stmt_329_call (call to timer)  = 64
Info: estimated buffering for operator call_stmt_351_call = 64
Info: estimated buffering for operator call_stmt_351_call (call to timer)  = 64
Info: estimated buffering for operator phi_stmt_188 = 32
Info: estimated buffering for operator phi_stmt_198 = 32
Info: estimated buffering for operator phi_stmt_259 = 32
Info: estimated buffering for operator phi_stmt_269 = 32
Info: estimated buffering for operator phi_stmt_367 = 32
Info: estimated buffering for operator phi_stmt_377 = 32
Info: estimated buffering for operator ptr_deref_393_load_0 = 32
Info: estimated buffering for operator type_cast_194_inst = 32
Info: estimated buffering for operator type_cast_204_inst = 32
Info: estimated buffering for operator type_cast_262_inst = 32
Info: estimated buffering for operator type_cast_275_inst = 32
Info: estimated buffering for operator type_cast_334_inst = 64
Info: estimated buffering for operator type_cast_355_inst = 64
Info: estimated buffering for operator type_cast_373_inst = 32
Info: estimated buffering for operator type_cast_383_inst = 32
Info: estimated buffering in module mmultiply is 872
Info: printing VHDL model for module mmultiplyLower
Info: resources used by CP mmultiplyLower_CP_1762: ff-count=228 (saved 18), mux2-count= 83, and2-count= 21
Info: estimated buffering for operator RPIPE_lower_start_443_inst = 8
Info: estimated buffering for operator W_vx_x02_524_delayed_13_0_522_inst = 416
Info: estimated buffering for operator addr_of_469_final_reg = 32
Info: estimated buffering for operator addr_of_501_final_reg = 32
Info: estimated buffering for operator addr_of_507_final_reg = 32
Info: estimated buffering for operator array_obj_ref_468_index_0_scale = 4
Info: estimated buffering for operator array_obj_ref_468_index_sum_1 = 4
Info: estimated buffering for operator array_obj_ref_500_index_0_scale = 24
Info: estimated buffering for operator array_obj_ref_500_index_sum_1 = 24
Info: estimated buffering for operator array_obj_ref_506_index_0_scale = 24
Info: estimated buffering for operator array_obj_ref_506_index_sum_1 = 24
Info: estimated buffering for operator phi_stmt_447 = 32
Info: estimated buffering for operator phi_stmt_457 = 32
Info: estimated buffering for operator phi_stmt_486 = 32
Info: estimated buffering for operator phi_stmt_491 = 32
Info: estimated buffering for operator phi_stmt_553 = 32
Info: estimated buffering for operator ptr_deref_511_load_0 = 72
Info: estimated buffering for operator ptr_deref_515_load_0 = 72
Info: estimated buffering for operator type_cast_453_inst = 32
Info: estimated buffering for operator type_cast_463_inst = 32
Info: estimated buffering for operator type_cast_489_inst = 64
Info: estimated buffering for operator type_cast_494_inst = 64
Info: estimated buffering for operator type_cast_556_inst = 32
Info: estimated buffering in module mmultiplyLower is 1152
Info: printing VHDL model for module mmultiplyUpper
Info: resources used by CP mmultiplyUpper_CP_2566: ff-count=228 (saved 18), mux2-count= 83, and2-count= 21
Info: estimated buffering for operator RPIPE_upper_start_610_inst = 8
Info: estimated buffering for operator W_vx_x02_694_delayed_13_0_695_inst = 416
Info: estimated buffering for operator addr_of_642_final_reg = 32
Info: estimated buffering for operator addr_of_674_final_reg = 32
Info: estimated buffering for operator addr_of_680_final_reg = 32
Info: estimated buffering for operator array_obj_ref_641_index_0_scale = 4
Info: estimated buffering for operator array_obj_ref_641_index_sum_1 = 4
Info: estimated buffering for operator array_obj_ref_673_index_0_scale = 24
Info: estimated buffering for operator array_obj_ref_673_index_sum_1 = 24
Info: estimated buffering for operator array_obj_ref_679_index_0_scale = 24
Info: estimated buffering for operator array_obj_ref_679_index_sum_1 = 24
Info: estimated buffering for operator phi_stmt_614 = 32
Info: estimated buffering for operator phi_stmt_630 = 32
Info: estimated buffering for operator phi_stmt_659 = 32
Info: estimated buffering for operator phi_stmt_664 = 32
Info: estimated buffering for operator phi_stmt_726 = 32
Info: estimated buffering for operator ptr_deref_684_load_0 = 72
Info: estimated buffering for operator ptr_deref_688_load_0 = 72
Info: estimated buffering for operator type_cast_617_inst = 32
Info: estimated buffering for operator type_cast_636_inst = 32
Info: estimated buffering for operator type_cast_662_inst = 64
Info: estimated buffering for operator type_cast_667_inst = 64
Info: estimated buffering for operator type_cast_729_inst = 32
Info: estimated buffering in module mmultiplyUpper is 1152
Info: printing VHDL model for module timer
Info: resources used by CP timer_CP_658: ff-count=2 (saved 0), mux2-count= 2, and2-count= 1
Info: estimated buffering for operator RPIPE_timer_resp_181_inst = 64
Info: estimated buffering in module timer is 64
Info: printing VHDL model for module timerDaemon
Info: resources used by CP timerDaemon_CP_3700: ff-count=48 (saved 18), mux2-count= 25, and2-count= 8
Info: estimated buffering for operator RPIPE_timer_req_868_inst = 1
Info: estimated buffering for operator nCOUNTER_874_865_buf = 64
Info: estimated buffering for operator phi_stmt_861 = 64
Info: estimated buffering in module timerDaemon is 129
Info: total estimated buffering in system ahir_system is 3369
Info: finished printing VHDL model
Info: number of register bits used in FIFO's = 289
Info: printing Dot-file of CP for module mmultiply
Info: printing Dot-file of CP for module mmultiplyLower
Info: printing Dot-file of CP for module mmultiplyUpper
Info: printing Dot-file of CP for module timer
Info: printing Dot-file of CP for module timerDaemon
Info: printing Dot-file of DP for module mmultiply
Info: printing Dot-file of DP for module mmultiplyLower
Info: printing Dot-file of DP for module mmultiplyUpper
Info: printing Dot-file of DP for module timer
Info: printing Dot-file of DP for module timerDaemon
vhdlFormat < ahir_system_global_package.unformatted_vhdl > ahir_system_global_package.vhdl
vhdlFormat < ahir_system.unformatted_vhdl > ahir_system.vhdl
vhdlFormat < ahir_system_test_bench.unformatted_vhdl > ahir_system_test_bench.vhdl
