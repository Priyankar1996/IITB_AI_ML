
$module [convolution3D_3] $in (rb cb chl_out_in chl_in_in rk ck: $uint<16> index_in index_k index_out : $uint<8> ct shift_val: $uint<16> activation : $uint<8>) $out() $is
{
	chl_out := (chl_out_in >> 3)
	chl_in := (chl_in_in >> 3)
    op_size := (($bitcast ($uint<32>) rb) * (($bitcast ($uint<32>)  (cb * chl_out)) >> 1))
    $parallelblock [topBlocks]
    {
	    $call convolveCore (rb cb chl_in chl_out rk ck) ()
	    $call sendModule (rb cb chl_out shift_val activation index_out) ()
	    $call loadKernel (chl_in chl_out rk ck index_k) ()
	    $call access_T (rb ct chl_in chl_out rk index_in) ()
	    $call accumulator (chl_in ck op_size) ()
    }        
}

