// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  Concat_input_pipe : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Concat_input_pipe] 8 $depth 1 
// $pipe  Concat_output_pipe : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Concat_output_pipe] 8 $depth 1 
// $noblock $pipe  timer_req : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$noblock $pipe [timer_req] 1 $depth 1 
// $pipe  timer_resp : $uint<64>  $depth 1 
// can point into 
// in scope  top-level
$pipe [timer_resp] 64 $depth 1 
// load store constants for object input_1
$constant $W[input_1_base_address] : $int<14> := _b00000000000000
// load store constants for object input_2
$constant $W[input_2_base_address] : $int<14> := _b00000000000000
// load store constants for object output
$constant $W[output_base_address] : $int<14> := _b00000000000000
// Declared gated clocks.
$memoryspace [memory_space_0] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  input_1 :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [input_1] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_1] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  input_2 :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [input_2] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_2] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  output :  structx_x__SizedTensor_16K  // memory space index = 2  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [output] : $record  < $array[16384] $of $int<64> > 
}
$module [timer] 
{
  $out T:$int<64>
  // can point into 
  // pipe-declarations for block %timer
  //  file prog.linked.opt.aa, line 16
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_17_to_assign_stmt_20] 
    {
      // start:  	timer_req := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      //  file prog.linked.opt.aa, line 21
      // Target expression
      // (as target) timer_req
      $T[WPIPE_timer_req_14_sample_start_] 
      $T[WPIPE_timer_req_14_sample_completed_] 
      $T[WPIPE_timer_req_14_update_start_] 
      $T[WPIPE_timer_req_14_update_completed_] 
      ;;[WPIPE_timer_req_14_Sample] 
      {
        // pipe write sample-start timer_req
        $T [req] $T [ack] 
      }
      ;;[WPIPE_timer_req_14_Update] 
      {
        // pipe write update (complete) timer_req
        $T [req] $T [ack] 
      }
      WPIPE_timer_req_14_sample_start_ &-> (WPIPE_timer_req_14_Sample)
      WPIPE_timer_req_14_sample_completed_ <-& (WPIPE_timer_req_14_Sample)
      WPIPE_timer_req_14_update_start_ <-& (WPIPE_timer_req_14_sample_completed_)
      WPIPE_timer_req_14_update_start_ &-> (WPIPE_timer_req_14_Update)
      WPIPE_timer_req_14_update_completed_ <-& (WPIPE_timer_req_14_Update)
      // end:  	timer_req := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      // start:  	T := timer_resp $buffering 1// bits of buffering = 64. 
      //  file prog.linked.opt.aa, line 22
      // Source expression
      // timer_resp
      $T[RPIPE_timer_resp_19_sample_start_] 
      $T[RPIPE_timer_resp_19_sample_completed_] 
      $T[RPIPE_timer_resp_19_update_start_] 
      $T[RPIPE_timer_resp_19_update_completed_] 
      ;;[RPIPE_timer_resp_19_Sample] 
      {
        // pipe read sample
        $T [rr] $T [ra] 
      }
      ;;[RPIPE_timer_resp_19_Update] 
      {
        // pipe read update
        $T [cr] $T [ca] 
      }
      RPIPE_timer_resp_19_sample_start_ &-> (RPIPE_timer_resp_19_Sample)
      RPIPE_timer_resp_19_sample_completed_ <-& (RPIPE_timer_resp_19_Sample)
      RPIPE_timer_resp_19_update_start_ <-& (RPIPE_timer_resp_19_sample_completed_)
      RPIPE_timer_resp_19_update_start_ &-> (RPIPE_timer_resp_19_Update)
      RPIPE_timer_resp_19_update_completed_ <-& (RPIPE_timer_resp_19_Update)
      // Target expression
      // (as target) T
      // T
      // write to interface object
      // start: WAR dependencies for T
      // done: WAR dependencies for T
      // T
      // write to interface object
      // end:  	T := timer_resp $buffering 1// bits of buffering = 64. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe timer_resp
      // read-dependencies for pipe timer_resp
      // write-dependencies for pipe timer_resp
      // signal write dependencies for timer_resp
      // pipe read/write dependencies for pipe timer_req
      // read-dependencies for pipe timer_req
      // write-dependencies for pipe timer_req
      // signal write dependencies for timer_req
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %timer
    //  file prog.linked.opt.aa, line 16
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_16_wire_constant] : $int<1> := _b1// 1
    // 	timer_req := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 21
    // timer_req
    // 	T := timer_resp $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 22
    // T
    // 	timer_req := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 21
    // timer_req
    $ioport $out [WPIPE_timer_req_14_inst]  (type_cast_16_wire_constant) (timer_req) 
    // 	T := timer_resp $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 22
    // timer_resp
    $ioport $in [RPIPE_timer_resp_19_inst] (timer_resp) (T) 
    $buffering $out RPIPE_timer_resp_19_inst T 1
  }
  // end data-path
  // 	timer_req := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 21
  // timer_req
  WPIPE_timer_req_14_inst <=> (assign_stmt_17_to_assign_stmt_20/WPIPE_timer_req_14_Sample/req assign_stmt_17_to_assign_stmt_20/WPIPE_timer_req_14_Update/req) (assign_stmt_17_to_assign_stmt_20/WPIPE_timer_req_14_Sample/ack assign_stmt_17_to_assign_stmt_20/WPIPE_timer_req_14_Update/ack)
  // 	T := timer_resp $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 22
  // timer_resp
  RPIPE_timer_resp_19_inst <=> (assign_stmt_17_to_assign_stmt_20/RPIPE_timer_resp_19_Sample/rr assign_stmt_17_to_assign_stmt_20/RPIPE_timer_resp_19_Update/cr) (assign_stmt_17_to_assign_stmt_20/RPIPE_timer_resp_19_Sample/ra assign_stmt_17_to_assign_stmt_20/RPIPE_timer_resp_19_Update/ca)
}
$module [concat] 
{
  // pipe-declarations for block %concat
  //  file prog.linked.opt.aa, line 24
  // pipe-declarations for block %concat%body
  //  file prog.linked.opt.aa, line 29
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 101
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 104
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 112
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 123
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 166
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 177
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 220
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 223
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 232
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 364
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 401
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 409
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 445
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 448
  // pipe-declarations for block %concat%body%
  //  file prog.linked.opt.aa, line 451
  // memory-space 2 is written into.
  // memory-space 1 is written into.
  // memory-space 0 is written into.
  // memory-space 2 is read from.
  // memory-space 1 is read from.
  // memory-space 0 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_23] // Branch Block  file prog.linked.opt.aa, line 29
    {
      $P [branch_block_stmt_23__entry__]
      branch_block_stmt_23__entry__ <-| ($entry)
      $P [branch_block_stmt_23__exit__]
      branch_block_stmt_23__exit__ |-> ($exit)
      $P [assign_stmt_26_to_assign_stmt_307__entry__] 
      $P [assign_stmt_26_to_assign_stmt_307__exit__] 
      $P [if_stmt_308__entry__] 
      $P [if_stmt_308__exit__] 
      $P [merge_stmt_314__entry__] 
      $P [merge_stmt_314__exit__] 
      $P [forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader]
      $P [merge_stmt_316__exit__] 
      $P [assign_stmt_322__entry__] 
      $P [assign_stmt_322__exit__] 
      $P [if_stmt_323__entry__] 
      $P [if_stmt_323__exit__] 
      $P [merge_stmt_329__entry__] 
      $P [merge_stmt_329__exit__] 
      $P [assign_stmt_334_to_assign_stmt_374__entry__] 
      $P [assign_stmt_334_to_assign_stmt_374__exit__] 
      $P [bbx_xnph469_forx_xbody]
      $P [merge_stmt_376__exit__] 
      $P [assign_stmt_391_to_assign_stmt_539__entry__] 
      $P [assign_stmt_391_to_assign_stmt_539__exit__] 
      $P [if_stmt_540__entry__] 
      $P [if_stmt_540__exit__] 
      $P [merge_stmt_546__entry__] 
      $P [merge_stmt_546__exit__] 
      $P [assign_stmt_551_to_assign_stmt_591__entry__] 
      $P [assign_stmt_551_to_assign_stmt_591__exit__] 
      $P [bbx_xnph465_forx_xbody177]
      $P [merge_stmt_593__exit__] 
      $P [assign_stmt_608_to_assign_stmt_756__entry__] 
      $P [assign_stmt_608_to_assign_stmt_756__exit__] 
      $P [if_stmt_757__entry__] 
      $P [if_stmt_757__exit__] 
      $P [merge_stmt_763__entry__] 
      $P [merge_stmt_763__exit__] 
      $P [forx_xend231x_xloopexit_forx_xend231]
      $P [merge_stmt_765__exit__] 
      $P [call_stmt_768__entry__] 
      $P [call_stmt_768__exit__] 
      $P [assign_stmt_775_to_assign_stmt_787__entry__] 
      $P [assign_stmt_775_to_assign_stmt_787__exit__] 
      $P [forx_xend231_whilex_xbody]
      $P [merge_stmt_789__exit__] 
      $P [do_while_stmt_817__entry__] 
      $P [do_while_stmt_817__exit__] 
      $P [if_stmt_1359__entry__] 
      $P [if_stmt_1359__exit__] 
      $P [merge_stmt_1363__entry__] 
      $P [merge_stmt_1363__exit__] 
      $P [assign_stmt_1369__entry__] 
      $P [assign_stmt_1369__exit__] 
      $P [call_stmt_1372_to_assign_stmt_1480__entry__] 
      $P [call_stmt_1372_to_assign_stmt_1480__exit__] 
      $P [assign_stmt_1487__entry__] 
      $P [assign_stmt_1487__exit__] 
      $P [if_stmt_1488__entry__] 
      $P [if_stmt_1488__exit__] 
      $P [merge_stmt_1494__entry__] 
      $P [merge_stmt_1494__exit__] 
      $P [assign_stmt_1500_to_assign_stmt_1523__entry__] 
      $P [assign_stmt_1500_to_assign_stmt_1523__exit__] 
      $P [bbx_xnph_forx_xbody383]
      $P [merge_stmt_1525__exit__] 
      $P [assign_stmt_1540_to_assign_stmt_1653__entry__] 
      $P [assign_stmt_1540_to_assign_stmt_1653__exit__] 
      $P [if_stmt_1654__entry__] 
      $P [if_stmt_1654__exit__] 
      $P [merge_stmt_1660__entry__] 
      $P [merge_stmt_1660__exit__] 
      $P [forx_xend456x_xloopexit_forx_xend456]
      $P [merge_stmt_1662__exit__] 
      $P [return__]
      $P [merge_stmt_1664__exit__] 
      ::[assign_stmt_26_to_assign_stmt_307] 
      {
        // start:  		call := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 31
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_25_sample_start_] 
        $T[RPIPE_Concat_input_pipe_25_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_25_update_start_] 
        $T[RPIPE_Concat_input_pipe_25_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_25_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_25_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_25_sample_start_ &-> (RPIPE_Concat_input_pipe_25_Sample)
        RPIPE_Concat_input_pipe_25_sample_completed_ <-& (RPIPE_Concat_input_pipe_25_Sample)
        RPIPE_Concat_input_pipe_25_update_start_ <-& (RPIPE_Concat_input_pipe_25_sample_completed_)
        RPIPE_Concat_input_pipe_25_update_start_ &-> (RPIPE_Concat_input_pipe_25_Update)
        RPIPE_Concat_input_pipe_25_update_completed_ <-& (RPIPE_Concat_input_pipe_25_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 32
        // Source expression
        // ($cast ($uint<32>) call )
        $T[type_cast_30_sample_start_] 
        $T[type_cast_30_sample_completed_] 
        $T[type_cast_30_update_start_] 
        $T[type_cast_30_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_30_sample_start_
        type_cast_30_sample_start_ <-& (RPIPE_Concat_input_pipe_25_update_completed_)
        // done: Forward dependencies from call to transition type_cast_30_sample_start_
        ;;[type_cast_30_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_30_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_30_sample_start_ &-> (type_cast_30_Sample)
        type_cast_30_sample_completed_ <-& (type_cast_30_Sample)
        type_cast_30_sample_completed_ &-> ($null)
        type_cast_30_update_start_ &-> (type_cast_30_Update)
        type_cast_30_update_completed_ <-& (type_cast_30_Update)
        // Target expression
        // (as target) conv1
        // start: WAR dependencies for conv1
        // done: WAR dependencies for conv1
        // end:  		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 33
        // volatile! 
        // Source expression
        // (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv1
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call2 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 34
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_39_sample_start_] 
        $T[RPIPE_Concat_input_pipe_39_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_39_update_start_] 
        $T[RPIPE_Concat_input_pipe_39_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_39_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_39_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_39_sample_start_ &-> (RPIPE_Concat_input_pipe_39_Sample)
        RPIPE_Concat_input_pipe_39_sample_completed_ <-& (RPIPE_Concat_input_pipe_39_Sample)
        RPIPE_Concat_input_pipe_39_update_start_ <-& (RPIPE_Concat_input_pipe_39_sample_completed_)
        RPIPE_Concat_input_pipe_39_update_start_ &-> (RPIPE_Concat_input_pipe_39_Update)
        RPIPE_Concat_input_pipe_39_update_completed_ <-& (RPIPE_Concat_input_pipe_39_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 35
        // Source expression
        // ($cast ($uint<32>) call2 )
        $T[type_cast_43_sample_start_] 
        $T[type_cast_43_sample_completed_] 
        $T[type_cast_43_update_start_] 
        $T[type_cast_43_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_43_sample_start_
        type_cast_43_sample_start_ <-& (RPIPE_Concat_input_pipe_39_update_completed_)
        // done: Forward dependencies from call2 to transition type_cast_43_sample_start_
        ;;[type_cast_43_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_43_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_43_sample_start_ &-> (type_cast_43_Sample)
        type_cast_43_sample_completed_ <-& (type_cast_43_Sample)
        type_cast_43_sample_completed_ &-> ($null)
        type_cast_43_update_start_ &-> (type_cast_43_Update)
        type_cast_43_update_completed_ <-& (type_cast_43_Update)
        // Target expression
        // (as target) conv3
        // start: WAR dependencies for conv3
        // done: WAR dependencies for conv3
        // end:  		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // start:  		$volatile add := (shl | conv3) $buffering 1
        //  file prog.linked.opt.aa, line 36
        // volatile! 
        // Source expression
        // (shl | conv3)
        // shl
        // conv3
        // Target expression
        // (as target) add
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // end:  		$volatile add := (shl | conv3) $buffering 1
        // start:  		call5 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 37
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_51_sample_start_] 
        $T[RPIPE_Concat_input_pipe_51_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_51_update_start_] 
        $T[RPIPE_Concat_input_pipe_51_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_51_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_51_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_51_sample_start_ &-> (RPIPE_Concat_input_pipe_51_Sample)
        RPIPE_Concat_input_pipe_51_sample_completed_ <-& (RPIPE_Concat_input_pipe_51_Sample)
        RPIPE_Concat_input_pipe_51_update_start_ <-& (RPIPE_Concat_input_pipe_51_sample_completed_)
        RPIPE_Concat_input_pipe_51_update_start_ &-> (RPIPE_Concat_input_pipe_51_Update)
        RPIPE_Concat_input_pipe_51_update_completed_ <-& (RPIPE_Concat_input_pipe_51_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 38
        // Source expression
        // ($cast ($uint<32>) call5 )
        $T[type_cast_55_sample_start_] 
        $T[type_cast_55_sample_completed_] 
        $T[type_cast_55_update_start_] 
        $T[type_cast_55_update_completed_] 
        // call5
        // start: Forward dependencies from call5 to transition type_cast_55_sample_start_
        type_cast_55_sample_start_ <-& (RPIPE_Concat_input_pipe_51_update_completed_)
        // done: Forward dependencies from call5 to transition type_cast_55_sample_start_
        ;;[type_cast_55_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_55_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_55_sample_start_ &-> (type_cast_55_Sample)
        type_cast_55_sample_completed_ <-& (type_cast_55_Sample)
        type_cast_55_sample_completed_ &-> ($null)
        type_cast_55_update_start_ &-> (type_cast_55_Update)
        type_cast_55_update_completed_ <-& (type_cast_55_Update)
        // Target expression
        // (as target) conv8
        // start: WAR dependencies for conv8
        // done: WAR dependencies for conv8
        // end:  		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl9
        // done: WAR dependencies for shl9
        // start:  		$volatile shl9 := (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 39
        // volatile! 
        // Source expression
        // (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv8
        // Target expression
        // (as target) shl9
        // start: WAR dependencies for shl9
        // done: WAR dependencies for shl9
        // end:  		$volatile shl9 := (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call10 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 40
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_64_sample_start_] 
        $T[RPIPE_Concat_input_pipe_64_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_64_update_start_] 
        $T[RPIPE_Concat_input_pipe_64_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_64_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_64_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_64_sample_start_ &-> (RPIPE_Concat_input_pipe_64_Sample)
        RPIPE_Concat_input_pipe_64_sample_completed_ <-& (RPIPE_Concat_input_pipe_64_Sample)
        RPIPE_Concat_input_pipe_64_update_start_ <-& (RPIPE_Concat_input_pipe_64_sample_completed_)
        RPIPE_Concat_input_pipe_64_update_start_ &-> (RPIPE_Concat_input_pipe_64_Update)
        RPIPE_Concat_input_pipe_64_update_completed_ <-& (RPIPE_Concat_input_pipe_64_Update)
        // Target expression
        // (as target) call10
        // start: WAR dependencies for call10
        // done: WAR dependencies for call10
        // end:  		call10 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 41
        // Source expression
        // ($cast ($uint<32>) call10 )
        $T[type_cast_68_sample_start_] 
        $T[type_cast_68_sample_completed_] 
        $T[type_cast_68_update_start_] 
        $T[type_cast_68_update_completed_] 
        // call10
        // start: Forward dependencies from call10 to transition type_cast_68_sample_start_
        type_cast_68_sample_start_ <-& (RPIPE_Concat_input_pipe_64_update_completed_)
        // done: Forward dependencies from call10 to transition type_cast_68_sample_start_
        ;;[type_cast_68_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_68_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_68_sample_start_ &-> (type_cast_68_Sample)
        type_cast_68_sample_completed_ <-& (type_cast_68_Sample)
        type_cast_68_sample_completed_ &-> ($null)
        type_cast_68_update_start_ &-> (type_cast_68_Update)
        type_cast_68_update_completed_ <-& (type_cast_68_Update)
        // Target expression
        // (as target) conv11
        // start: WAR dependencies for conv11
        // done: WAR dependencies for conv11
        // end:  		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add12
        // done: WAR dependencies for add12
        // start:  		$volatile add12 := (shl9 | conv11) $buffering 1
        //  file prog.linked.opt.aa, line 42
        // volatile! 
        // Source expression
        // (shl9 | conv11)
        // shl9
        // conv11
        // Target expression
        // (as target) add12
        // start: WAR dependencies for add12
        // done: WAR dependencies for add12
        // end:  		$volatile add12 := (shl9 | conv11) $buffering 1
        // start:  		call14 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 43
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_76_sample_start_] 
        $T[RPIPE_Concat_input_pipe_76_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_76_update_start_] 
        $T[RPIPE_Concat_input_pipe_76_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_76_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_76_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_76_sample_start_ &-> (RPIPE_Concat_input_pipe_76_Sample)
        RPIPE_Concat_input_pipe_76_sample_completed_ <-& (RPIPE_Concat_input_pipe_76_Sample)
        RPIPE_Concat_input_pipe_76_update_start_ <-& (RPIPE_Concat_input_pipe_76_sample_completed_)
        RPIPE_Concat_input_pipe_76_update_start_ &-> (RPIPE_Concat_input_pipe_76_Update)
        RPIPE_Concat_input_pipe_76_update_completed_ <-& (RPIPE_Concat_input_pipe_76_Update)
        // Target expression
        // (as target) call14
        // start: WAR dependencies for call14
        // done: WAR dependencies for call14
        // end:  		call14 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 44
        // Source expression
        // ($cast ($uint<32>) call14 )
        $T[type_cast_80_sample_start_] 
        $T[type_cast_80_sample_completed_] 
        $T[type_cast_80_update_start_] 
        $T[type_cast_80_update_completed_] 
        // call14
        // start: Forward dependencies from call14 to transition type_cast_80_sample_start_
        type_cast_80_sample_start_ <-& (RPIPE_Concat_input_pipe_76_update_completed_)
        // done: Forward dependencies from call14 to transition type_cast_80_sample_start_
        ;;[type_cast_80_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_80_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_80_sample_start_ &-> (type_cast_80_Sample)
        type_cast_80_sample_completed_ <-& (type_cast_80_Sample)
        type_cast_80_sample_completed_ &-> ($null)
        type_cast_80_update_start_ &-> (type_cast_80_Update)
        type_cast_80_update_completed_ <-& (type_cast_80_Update)
        // Target expression
        // (as target) conv17
        // start: WAR dependencies for conv17
        // done: WAR dependencies for conv17
        // end:  		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl18
        // done: WAR dependencies for shl18
        // start:  		$volatile shl18 := (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 45
        // volatile! 
        // Source expression
        // (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv17
        // Target expression
        // (as target) shl18
        // start: WAR dependencies for shl18
        // done: WAR dependencies for shl18
        // end:  		$volatile shl18 := (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call19 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 46
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_89_sample_start_] 
        $T[RPIPE_Concat_input_pipe_89_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_89_update_start_] 
        $T[RPIPE_Concat_input_pipe_89_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_89_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_89_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_89_sample_start_ &-> (RPIPE_Concat_input_pipe_89_Sample)
        RPIPE_Concat_input_pipe_89_sample_completed_ <-& (RPIPE_Concat_input_pipe_89_Sample)
        RPIPE_Concat_input_pipe_89_update_start_ <-& (RPIPE_Concat_input_pipe_89_sample_completed_)
        RPIPE_Concat_input_pipe_89_update_start_ &-> (RPIPE_Concat_input_pipe_89_Update)
        RPIPE_Concat_input_pipe_89_update_completed_ <-& (RPIPE_Concat_input_pipe_89_Update)
        // Target expression
        // (as target) call19
        // start: WAR dependencies for call19
        // done: WAR dependencies for call19
        // end:  		call19 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 47
        // Source expression
        // ($cast ($uint<32>) call19 )
        $T[type_cast_93_sample_start_] 
        $T[type_cast_93_sample_completed_] 
        $T[type_cast_93_update_start_] 
        $T[type_cast_93_update_completed_] 
        // call19
        // start: Forward dependencies from call19 to transition type_cast_93_sample_start_
        type_cast_93_sample_start_ <-& (RPIPE_Concat_input_pipe_89_update_completed_)
        // done: Forward dependencies from call19 to transition type_cast_93_sample_start_
        ;;[type_cast_93_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_93_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_93_sample_start_ &-> (type_cast_93_Sample)
        type_cast_93_sample_completed_ <-& (type_cast_93_Sample)
        type_cast_93_sample_completed_ &-> ($null)
        type_cast_93_update_start_ &-> (type_cast_93_Update)
        type_cast_93_update_completed_ <-& (type_cast_93_Update)
        // Target expression
        // (as target) conv20
        // start: WAR dependencies for conv20
        // done: WAR dependencies for conv20
        // end:  		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add21
        // done: WAR dependencies for add21
        // start:  		$volatile add21 := (shl18 | conv20) $buffering 1
        //  file prog.linked.opt.aa, line 48
        // volatile! 
        // Source expression
        // (shl18 | conv20)
        // shl18
        // conv20
        // Target expression
        // (as target) add21
        // start: WAR dependencies for add21
        // done: WAR dependencies for add21
        // end:  		$volatile add21 := (shl18 | conv20) $buffering 1
        // start:  		call23 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 49
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_101_sample_start_] 
        $T[RPIPE_Concat_input_pipe_101_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_101_update_start_] 
        $T[RPIPE_Concat_input_pipe_101_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_101_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_101_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_101_sample_start_ &-> (RPIPE_Concat_input_pipe_101_Sample)
        RPIPE_Concat_input_pipe_101_sample_completed_ <-& (RPIPE_Concat_input_pipe_101_Sample)
        RPIPE_Concat_input_pipe_101_update_start_ <-& (RPIPE_Concat_input_pipe_101_sample_completed_)
        RPIPE_Concat_input_pipe_101_update_start_ &-> (RPIPE_Concat_input_pipe_101_Update)
        RPIPE_Concat_input_pipe_101_update_completed_ <-& (RPIPE_Concat_input_pipe_101_Update)
        // Target expression
        // (as target) call23
        // start: WAR dependencies for call23
        // done: WAR dependencies for call23
        // end:  		call23 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 50
        // Source expression
        // ($cast ($uint<32>) call23 )
        $T[type_cast_105_sample_start_] 
        $T[type_cast_105_sample_completed_] 
        $T[type_cast_105_update_start_] 
        $T[type_cast_105_update_completed_] 
        // call23
        // start: Forward dependencies from call23 to transition type_cast_105_sample_start_
        type_cast_105_sample_start_ <-& (RPIPE_Concat_input_pipe_101_update_completed_)
        // done: Forward dependencies from call23 to transition type_cast_105_sample_start_
        ;;[type_cast_105_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_105_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_105_sample_start_ &-> (type_cast_105_Sample)
        type_cast_105_sample_completed_ <-& (type_cast_105_Sample)
        type_cast_105_sample_completed_ &-> ($null)
        type_cast_105_update_start_ &-> (type_cast_105_Update)
        type_cast_105_update_completed_ <-& (type_cast_105_Update)
        // Target expression
        // (as target) conv26
        // start: WAR dependencies for conv26
        // done: WAR dependencies for conv26
        // end:  		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl27
        // done: WAR dependencies for shl27
        // start:  		$volatile shl27 := (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 51
        // volatile! 
        // Source expression
        // (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv26
        // Target expression
        // (as target) shl27
        // start: WAR dependencies for shl27
        // done: WAR dependencies for shl27
        // end:  		$volatile shl27 := (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call28 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 52
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_114_sample_start_] 
        $T[RPIPE_Concat_input_pipe_114_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_114_update_start_] 
        $T[RPIPE_Concat_input_pipe_114_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_114_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_114_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_114_sample_start_ &-> (RPIPE_Concat_input_pipe_114_Sample)
        RPIPE_Concat_input_pipe_114_sample_completed_ <-& (RPIPE_Concat_input_pipe_114_Sample)
        RPIPE_Concat_input_pipe_114_update_start_ <-& (RPIPE_Concat_input_pipe_114_sample_completed_)
        RPIPE_Concat_input_pipe_114_update_start_ &-> (RPIPE_Concat_input_pipe_114_Update)
        RPIPE_Concat_input_pipe_114_update_completed_ <-& (RPIPE_Concat_input_pipe_114_Update)
        // Target expression
        // (as target) call28
        // start: WAR dependencies for call28
        // done: WAR dependencies for call28
        // end:  		call28 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 53
        // Source expression
        // ($cast ($uint<32>) call28 )
        $T[type_cast_118_sample_start_] 
        $T[type_cast_118_sample_completed_] 
        $T[type_cast_118_update_start_] 
        $T[type_cast_118_update_completed_] 
        // call28
        // start: Forward dependencies from call28 to transition type_cast_118_sample_start_
        type_cast_118_sample_start_ <-& (RPIPE_Concat_input_pipe_114_update_completed_)
        // done: Forward dependencies from call28 to transition type_cast_118_sample_start_
        ;;[type_cast_118_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_118_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_118_sample_start_ &-> (type_cast_118_Sample)
        type_cast_118_sample_completed_ <-& (type_cast_118_Sample)
        type_cast_118_sample_completed_ &-> ($null)
        type_cast_118_update_start_ &-> (type_cast_118_Update)
        type_cast_118_update_completed_ <-& (type_cast_118_Update)
        // Target expression
        // (as target) conv29
        // start: WAR dependencies for conv29
        // done: WAR dependencies for conv29
        // end:  		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add30
        // done: WAR dependencies for add30
        // start:  		$volatile add30 := (shl27 | conv29) $buffering 1
        //  file prog.linked.opt.aa, line 54
        // volatile! 
        // Source expression
        // (shl27 | conv29)
        // shl27
        // conv29
        // Target expression
        // (as target) add30
        // start: WAR dependencies for add30
        // done: WAR dependencies for add30
        // end:  		$volatile add30 := (shl27 | conv29) $buffering 1
        // start:  		call32 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 55
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_126_sample_start_] 
        $T[RPIPE_Concat_input_pipe_126_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_126_update_start_] 
        $T[RPIPE_Concat_input_pipe_126_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_126_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_126_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_126_sample_start_ &-> (RPIPE_Concat_input_pipe_126_Sample)
        RPIPE_Concat_input_pipe_126_sample_completed_ <-& (RPIPE_Concat_input_pipe_126_Sample)
        RPIPE_Concat_input_pipe_126_update_start_ <-& (RPIPE_Concat_input_pipe_126_sample_completed_)
        RPIPE_Concat_input_pipe_126_update_start_ &-> (RPIPE_Concat_input_pipe_126_Update)
        RPIPE_Concat_input_pipe_126_update_completed_ <-& (RPIPE_Concat_input_pipe_126_Update)
        // Target expression
        // (as target) call32
        // start: WAR dependencies for call32
        // done: WAR dependencies for call32
        // end:  		call32 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 56
        // Source expression
        // ($cast ($uint<32>) call32 )
        $T[type_cast_130_sample_start_] 
        $T[type_cast_130_sample_completed_] 
        $T[type_cast_130_update_start_] 
        $T[type_cast_130_update_completed_] 
        // call32
        // start: Forward dependencies from call32 to transition type_cast_130_sample_start_
        type_cast_130_sample_start_ <-& (RPIPE_Concat_input_pipe_126_update_completed_)
        // done: Forward dependencies from call32 to transition type_cast_130_sample_start_
        ;;[type_cast_130_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_130_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_130_sample_start_ &-> (type_cast_130_Sample)
        type_cast_130_sample_completed_ <-& (type_cast_130_Sample)
        type_cast_130_sample_completed_ &-> ($null)
        type_cast_130_update_start_ &-> (type_cast_130_Update)
        type_cast_130_update_completed_ <-& (type_cast_130_Update)
        // Target expression
        // (as target) conv35
        // start: WAR dependencies for conv35
        // done: WAR dependencies for conv35
        // end:  		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl36
        // done: WAR dependencies for shl36
        // start:  		$volatile shl36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 57
        // volatile! 
        // Source expression
        // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv35
        // Target expression
        // (as target) shl36
        // start: WAR dependencies for shl36
        // done: WAR dependencies for shl36
        // end:  		$volatile shl36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call37 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 58
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_139_sample_start_] 
        $T[RPIPE_Concat_input_pipe_139_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_139_update_start_] 
        $T[RPIPE_Concat_input_pipe_139_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_139_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_139_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_139_sample_start_ &-> (RPIPE_Concat_input_pipe_139_Sample)
        RPIPE_Concat_input_pipe_139_sample_completed_ <-& (RPIPE_Concat_input_pipe_139_Sample)
        RPIPE_Concat_input_pipe_139_update_start_ <-& (RPIPE_Concat_input_pipe_139_sample_completed_)
        RPIPE_Concat_input_pipe_139_update_start_ &-> (RPIPE_Concat_input_pipe_139_Update)
        RPIPE_Concat_input_pipe_139_update_completed_ <-& (RPIPE_Concat_input_pipe_139_Update)
        // Target expression
        // (as target) call37
        // start: WAR dependencies for call37
        // done: WAR dependencies for call37
        // end:  		call37 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 59
        // Source expression
        // ($cast ($uint<32>) call37 )
        $T[type_cast_143_sample_start_] 
        $T[type_cast_143_sample_completed_] 
        $T[type_cast_143_update_start_] 
        $T[type_cast_143_update_completed_] 
        // call37
        // start: Forward dependencies from call37 to transition type_cast_143_sample_start_
        type_cast_143_sample_start_ <-& (RPIPE_Concat_input_pipe_139_update_completed_)
        // done: Forward dependencies from call37 to transition type_cast_143_sample_start_
        ;;[type_cast_143_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_143_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_143_sample_start_ &-> (type_cast_143_Sample)
        type_cast_143_sample_completed_ <-& (type_cast_143_Sample)
        type_cast_143_sample_completed_ &-> ($null)
        type_cast_143_update_start_ &-> (type_cast_143_Update)
        type_cast_143_update_completed_ <-& (type_cast_143_Update)
        // Target expression
        // (as target) conv38
        // start: WAR dependencies for conv38
        // done: WAR dependencies for conv38
        // end:  		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add39
        // done: WAR dependencies for add39
        // start:  		$volatile add39 := (shl36 | conv38) $buffering 1
        //  file prog.linked.opt.aa, line 60
        // volatile! 
        // Source expression
        // (shl36 | conv38)
        // shl36
        // conv38
        // Target expression
        // (as target) add39
        // start: WAR dependencies for add39
        // done: WAR dependencies for add39
        // end:  		$volatile add39 := (shl36 | conv38) $buffering 1
        // start:  		call41 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 61
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_151_sample_start_] 
        $T[RPIPE_Concat_input_pipe_151_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_151_update_start_] 
        $T[RPIPE_Concat_input_pipe_151_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_151_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_151_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_151_sample_start_ &-> (RPIPE_Concat_input_pipe_151_Sample)
        RPIPE_Concat_input_pipe_151_sample_completed_ <-& (RPIPE_Concat_input_pipe_151_Sample)
        RPIPE_Concat_input_pipe_151_update_start_ <-& (RPIPE_Concat_input_pipe_151_sample_completed_)
        RPIPE_Concat_input_pipe_151_update_start_ &-> (RPIPE_Concat_input_pipe_151_Update)
        RPIPE_Concat_input_pipe_151_update_completed_ <-& (RPIPE_Concat_input_pipe_151_Update)
        // Target expression
        // (as target) call41
        // start: WAR dependencies for call41
        // done: WAR dependencies for call41
        // end:  		call41 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 62
        // Source expression
        // ($cast ($uint<32>) call41 )
        $T[type_cast_155_sample_start_] 
        $T[type_cast_155_sample_completed_] 
        $T[type_cast_155_update_start_] 
        $T[type_cast_155_update_completed_] 
        // call41
        // start: Forward dependencies from call41 to transition type_cast_155_sample_start_
        type_cast_155_sample_start_ <-& (RPIPE_Concat_input_pipe_151_update_completed_)
        // done: Forward dependencies from call41 to transition type_cast_155_sample_start_
        ;;[type_cast_155_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_155_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_155_sample_start_ &-> (type_cast_155_Sample)
        type_cast_155_sample_completed_ <-& (type_cast_155_Sample)
        type_cast_155_sample_completed_ &-> ($null)
        type_cast_155_update_start_ &-> (type_cast_155_Update)
        type_cast_155_update_completed_ <-& (type_cast_155_Update)
        // Target expression
        // (as target) conv44
        // start: WAR dependencies for conv44
        // done: WAR dependencies for conv44
        // end:  		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl45
        // done: WAR dependencies for shl45
        // start:  		$volatile shl45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 63
        // volatile! 
        // Source expression
        // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv44
        // Target expression
        // (as target) shl45
        // start: WAR dependencies for shl45
        // done: WAR dependencies for shl45
        // end:  		$volatile shl45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call46 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 64
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_164_sample_start_] 
        $T[RPIPE_Concat_input_pipe_164_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_164_update_start_] 
        $T[RPIPE_Concat_input_pipe_164_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_164_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_164_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_164_sample_start_ &-> (RPIPE_Concat_input_pipe_164_Sample)
        RPIPE_Concat_input_pipe_164_sample_completed_ <-& (RPIPE_Concat_input_pipe_164_Sample)
        RPIPE_Concat_input_pipe_164_update_start_ <-& (RPIPE_Concat_input_pipe_164_sample_completed_)
        RPIPE_Concat_input_pipe_164_update_start_ &-> (RPIPE_Concat_input_pipe_164_Update)
        RPIPE_Concat_input_pipe_164_update_completed_ <-& (RPIPE_Concat_input_pipe_164_Update)
        // Target expression
        // (as target) call46
        // start: WAR dependencies for call46
        // done: WAR dependencies for call46
        // end:  		call46 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 65
        // Source expression
        // ($cast ($uint<32>) call46 )
        $T[type_cast_168_sample_start_] 
        $T[type_cast_168_sample_completed_] 
        $T[type_cast_168_update_start_] 
        $T[type_cast_168_update_completed_] 
        // call46
        // start: Forward dependencies from call46 to transition type_cast_168_sample_start_
        type_cast_168_sample_start_ <-& (RPIPE_Concat_input_pipe_164_update_completed_)
        // done: Forward dependencies from call46 to transition type_cast_168_sample_start_
        ;;[type_cast_168_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_168_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_168_sample_start_ &-> (type_cast_168_Sample)
        type_cast_168_sample_completed_ <-& (type_cast_168_Sample)
        type_cast_168_sample_completed_ &-> ($null)
        type_cast_168_update_start_ &-> (type_cast_168_Update)
        type_cast_168_update_completed_ <-& (type_cast_168_Update)
        // Target expression
        // (as target) conv47
        // start: WAR dependencies for conv47
        // done: WAR dependencies for conv47
        // end:  		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add48
        // done: WAR dependencies for add48
        // start:  		$volatile add48 := (shl45 | conv47) $buffering 1
        //  file prog.linked.opt.aa, line 66
        // volatile! 
        // Source expression
        // (shl45 | conv47)
        // shl45
        // conv47
        // Target expression
        // (as target) add48
        // start: WAR dependencies for add48
        // done: WAR dependencies for add48
        // end:  		$volatile add48 := (shl45 | conv47) $buffering 1
        // start:  		call50 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 67
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_176_sample_start_] 
        $T[RPIPE_Concat_input_pipe_176_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_176_update_start_] 
        $T[RPIPE_Concat_input_pipe_176_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_176_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_176_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_176_sample_start_ &-> (RPIPE_Concat_input_pipe_176_Sample)
        RPIPE_Concat_input_pipe_176_sample_completed_ <-& (RPIPE_Concat_input_pipe_176_Sample)
        RPIPE_Concat_input_pipe_176_update_start_ <-& (RPIPE_Concat_input_pipe_176_sample_completed_)
        RPIPE_Concat_input_pipe_176_update_start_ &-> (RPIPE_Concat_input_pipe_176_Update)
        RPIPE_Concat_input_pipe_176_update_completed_ <-& (RPIPE_Concat_input_pipe_176_Update)
        // Target expression
        // (as target) call50
        // start: WAR dependencies for call50
        // done: WAR dependencies for call50
        // end:  		call50 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 68
        // Source expression
        // ($cast ($uint<32>) call50 )
        $T[type_cast_180_sample_start_] 
        $T[type_cast_180_sample_completed_] 
        $T[type_cast_180_update_start_] 
        $T[type_cast_180_update_completed_] 
        // call50
        // start: Forward dependencies from call50 to transition type_cast_180_sample_start_
        type_cast_180_sample_start_ <-& (RPIPE_Concat_input_pipe_176_update_completed_)
        // done: Forward dependencies from call50 to transition type_cast_180_sample_start_
        ;;[type_cast_180_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_180_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_180_sample_start_ &-> (type_cast_180_Sample)
        type_cast_180_sample_completed_ <-& (type_cast_180_Sample)
        type_cast_180_sample_completed_ &-> ($null)
        type_cast_180_update_start_ &-> (type_cast_180_Update)
        type_cast_180_update_completed_ <-& (type_cast_180_Update)
        // Target expression
        // (as target) conv53
        // start: WAR dependencies for conv53
        // done: WAR dependencies for conv53
        // end:  		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl54
        // done: WAR dependencies for shl54
        // start:  		$volatile shl54 := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 69
        // volatile! 
        // Source expression
        // (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv53
        // Target expression
        // (as target) shl54
        // start: WAR dependencies for shl54
        // done: WAR dependencies for shl54
        // end:  		$volatile shl54 := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call55 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 70
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_189_sample_start_] 
        $T[RPIPE_Concat_input_pipe_189_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_189_update_start_] 
        $T[RPIPE_Concat_input_pipe_189_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_189_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_189_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_189_sample_start_ &-> (RPIPE_Concat_input_pipe_189_Sample)
        RPIPE_Concat_input_pipe_189_sample_completed_ <-& (RPIPE_Concat_input_pipe_189_Sample)
        RPIPE_Concat_input_pipe_189_update_start_ <-& (RPIPE_Concat_input_pipe_189_sample_completed_)
        RPIPE_Concat_input_pipe_189_update_start_ &-> (RPIPE_Concat_input_pipe_189_Update)
        RPIPE_Concat_input_pipe_189_update_completed_ <-& (RPIPE_Concat_input_pipe_189_Update)
        // Target expression
        // (as target) call55
        // start: WAR dependencies for call55
        // done: WAR dependencies for call55
        // end:  		call55 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 71
        // Source expression
        // ($cast ($uint<32>) call55 )
        $T[type_cast_193_sample_start_] 
        $T[type_cast_193_sample_completed_] 
        $T[type_cast_193_update_start_] 
        $T[type_cast_193_update_completed_] 
        // call55
        // start: Forward dependencies from call55 to transition type_cast_193_sample_start_
        type_cast_193_sample_start_ <-& (RPIPE_Concat_input_pipe_189_update_completed_)
        // done: Forward dependencies from call55 to transition type_cast_193_sample_start_
        ;;[type_cast_193_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_193_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_193_sample_start_ &-> (type_cast_193_Sample)
        type_cast_193_sample_completed_ <-& (type_cast_193_Sample)
        type_cast_193_sample_completed_ &-> ($null)
        type_cast_193_update_start_ &-> (type_cast_193_Update)
        type_cast_193_update_completed_ <-& (type_cast_193_Update)
        // Target expression
        // (as target) conv56
        // start: WAR dependencies for conv56
        // done: WAR dependencies for conv56
        // end:  		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add57
        // done: WAR dependencies for add57
        // start:  		$volatile add57 := (shl54 | conv56) $buffering 1
        //  file prog.linked.opt.aa, line 72
        // volatile! 
        // Source expression
        // (shl54 | conv56)
        // shl54
        // conv56
        // Target expression
        // (as target) add57
        // start: WAR dependencies for add57
        // done: WAR dependencies for add57
        // end:  		$volatile add57 := (shl54 | conv56) $buffering 1
        // start:  		call59 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 73
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_201_sample_start_] 
        $T[RPIPE_Concat_input_pipe_201_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_201_update_start_] 
        $T[RPIPE_Concat_input_pipe_201_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_201_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_201_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_201_sample_start_ &-> (RPIPE_Concat_input_pipe_201_Sample)
        RPIPE_Concat_input_pipe_201_sample_completed_ <-& (RPIPE_Concat_input_pipe_201_Sample)
        RPIPE_Concat_input_pipe_201_update_start_ <-& (RPIPE_Concat_input_pipe_201_sample_completed_)
        RPIPE_Concat_input_pipe_201_update_start_ &-> (RPIPE_Concat_input_pipe_201_Update)
        RPIPE_Concat_input_pipe_201_update_completed_ <-& (RPIPE_Concat_input_pipe_201_Update)
        // Target expression
        // (as target) call59
        // start: WAR dependencies for call59
        // done: WAR dependencies for call59
        // end:  		call59 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 74
        // Source expression
        // ($cast ($uint<32>) call59 )
        $T[type_cast_205_sample_start_] 
        $T[type_cast_205_sample_completed_] 
        $T[type_cast_205_update_start_] 
        $T[type_cast_205_update_completed_] 
        // call59
        // start: Forward dependencies from call59 to transition type_cast_205_sample_start_
        type_cast_205_sample_start_ <-& (RPIPE_Concat_input_pipe_201_update_completed_)
        // done: Forward dependencies from call59 to transition type_cast_205_sample_start_
        ;;[type_cast_205_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_205_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_205_sample_start_ &-> (type_cast_205_Sample)
        type_cast_205_sample_completed_ <-& (type_cast_205_Sample)
        type_cast_205_sample_completed_ &-> ($null)
        type_cast_205_update_start_ &-> (type_cast_205_Update)
        type_cast_205_update_completed_ <-& (type_cast_205_Update)
        // Target expression
        // (as target) conv62
        // start: WAR dependencies for conv62
        // done: WAR dependencies for conv62
        // end:  		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl63
        // done: WAR dependencies for shl63
        // start:  		$volatile shl63 := (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 75
        // volatile! 
        // Source expression
        // (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv62
        // Target expression
        // (as target) shl63
        // start: WAR dependencies for shl63
        // done: WAR dependencies for shl63
        // end:  		$volatile shl63 := (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call64 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 76
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_214_sample_start_] 
        $T[RPIPE_Concat_input_pipe_214_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_214_update_start_] 
        $T[RPIPE_Concat_input_pipe_214_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_214_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_214_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_214_sample_start_ &-> (RPIPE_Concat_input_pipe_214_Sample)
        RPIPE_Concat_input_pipe_214_sample_completed_ <-& (RPIPE_Concat_input_pipe_214_Sample)
        RPIPE_Concat_input_pipe_214_update_start_ <-& (RPIPE_Concat_input_pipe_214_sample_completed_)
        RPIPE_Concat_input_pipe_214_update_start_ &-> (RPIPE_Concat_input_pipe_214_Update)
        RPIPE_Concat_input_pipe_214_update_completed_ <-& (RPIPE_Concat_input_pipe_214_Update)
        // Target expression
        // (as target) call64
        // start: WAR dependencies for call64
        // done: WAR dependencies for call64
        // end:  		call64 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 77
        // Source expression
        // ($cast ($uint<32>) call64 )
        $T[type_cast_218_sample_start_] 
        $T[type_cast_218_sample_completed_] 
        $T[type_cast_218_update_start_] 
        $T[type_cast_218_update_completed_] 
        // call64
        // start: Forward dependencies from call64 to transition type_cast_218_sample_start_
        type_cast_218_sample_start_ <-& (RPIPE_Concat_input_pipe_214_update_completed_)
        // done: Forward dependencies from call64 to transition type_cast_218_sample_start_
        ;;[type_cast_218_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_218_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_218_sample_start_ &-> (type_cast_218_Sample)
        type_cast_218_sample_completed_ <-& (type_cast_218_Sample)
        type_cast_218_sample_completed_ &-> ($null)
        type_cast_218_update_start_ &-> (type_cast_218_Update)
        type_cast_218_update_completed_ <-& (type_cast_218_Update)
        // Target expression
        // (as target) conv65
        // start: WAR dependencies for conv65
        // done: WAR dependencies for conv65
        // end:  		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add66
        // done: WAR dependencies for add66
        // start:  		$volatile add66 := (shl63 | conv65) $buffering 1
        //  file prog.linked.opt.aa, line 78
        // volatile! 
        // Source expression
        // (shl63 | conv65)
        // shl63
        // conv65
        // Target expression
        // (as target) add66
        // start: WAR dependencies for add66
        // done: WAR dependencies for add66
        // end:  		$volatile add66 := (shl63 | conv65) $buffering 1
        // start:  		call68 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 79
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_226_sample_start_] 
        $T[RPIPE_Concat_input_pipe_226_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_226_update_start_] 
        $T[RPIPE_Concat_input_pipe_226_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_226_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_226_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_226_sample_start_ &-> (RPIPE_Concat_input_pipe_226_Sample)
        RPIPE_Concat_input_pipe_226_sample_completed_ <-& (RPIPE_Concat_input_pipe_226_Sample)
        RPIPE_Concat_input_pipe_226_update_start_ <-& (RPIPE_Concat_input_pipe_226_sample_completed_)
        RPIPE_Concat_input_pipe_226_update_start_ &-> (RPIPE_Concat_input_pipe_226_Update)
        RPIPE_Concat_input_pipe_226_update_completed_ <-& (RPIPE_Concat_input_pipe_226_Update)
        // Target expression
        // (as target) call68
        // start: WAR dependencies for call68
        // done: WAR dependencies for call68
        // end:  		call68 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 80
        // Source expression
        // ($cast ($uint<32>) call68 )
        $T[type_cast_230_sample_start_] 
        $T[type_cast_230_sample_completed_] 
        $T[type_cast_230_update_start_] 
        $T[type_cast_230_update_completed_] 
        // call68
        // start: Forward dependencies from call68 to transition type_cast_230_sample_start_
        type_cast_230_sample_start_ <-& (RPIPE_Concat_input_pipe_226_update_completed_)
        // done: Forward dependencies from call68 to transition type_cast_230_sample_start_
        ;;[type_cast_230_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_230_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_230_sample_start_ &-> (type_cast_230_Sample)
        type_cast_230_sample_completed_ <-& (type_cast_230_Sample)
        type_cast_230_sample_completed_ &-> ($null)
        type_cast_230_update_start_ &-> (type_cast_230_Update)
        type_cast_230_update_completed_ <-& (type_cast_230_Update)
        // Target expression
        // (as target) conv71
        // start: WAR dependencies for conv71
        // done: WAR dependencies for conv71
        // end:  		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for shl72
        // done: WAR dependencies for shl72
        // start:  		$volatile shl72 := (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 81
        // volatile! 
        // Source expression
        // (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
        // conv71
        // Target expression
        // (as target) shl72
        // start: WAR dependencies for shl72
        // done: WAR dependencies for shl72
        // end:  		$volatile shl72 := (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
        // start:  		call73 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 82
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_239_sample_start_] 
        $T[RPIPE_Concat_input_pipe_239_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_239_update_start_] 
        $T[RPIPE_Concat_input_pipe_239_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_239_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_239_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_239_sample_start_ &-> (RPIPE_Concat_input_pipe_239_Sample)
        RPIPE_Concat_input_pipe_239_sample_completed_ <-& (RPIPE_Concat_input_pipe_239_Sample)
        RPIPE_Concat_input_pipe_239_update_start_ <-& (RPIPE_Concat_input_pipe_239_sample_completed_)
        RPIPE_Concat_input_pipe_239_update_start_ &-> (RPIPE_Concat_input_pipe_239_Update)
        RPIPE_Concat_input_pipe_239_update_completed_ <-& (RPIPE_Concat_input_pipe_239_Update)
        // Target expression
        // (as target) call73
        // start: WAR dependencies for call73
        // done: WAR dependencies for call73
        // end:  		call73 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 83
        // Source expression
        // ($cast ($uint<32>) call73 )
        $T[type_cast_243_sample_start_] 
        $T[type_cast_243_sample_completed_] 
        $T[type_cast_243_update_start_] 
        $T[type_cast_243_update_completed_] 
        // call73
        // start: Forward dependencies from call73 to transition type_cast_243_sample_start_
        type_cast_243_sample_start_ <-& (RPIPE_Concat_input_pipe_239_update_completed_)
        // done: Forward dependencies from call73 to transition type_cast_243_sample_start_
        ;;[type_cast_243_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_243_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_243_sample_start_ &-> (type_cast_243_Sample)
        type_cast_243_sample_completed_ <-& (type_cast_243_Sample)
        type_cast_243_sample_completed_ &-> ($null)
        type_cast_243_update_start_ &-> (type_cast_243_Update)
        type_cast_243_update_completed_ <-& (type_cast_243_Update)
        // Target expression
        // (as target) conv74
        // start: WAR dependencies for conv74
        // done: WAR dependencies for conv74
        // end:  		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add75
        // done: WAR dependencies for add75
        // start:  		$volatile add75 := (shl72 | conv74) $buffering 1
        //  file prog.linked.opt.aa, line 84
        // volatile! 
        // Source expression
        // (shl72 | conv74)
        // shl72
        // conv74
        // Target expression
        // (as target) add75
        // start: WAR dependencies for add75
        // done: WAR dependencies for add75
        // end:  		$volatile add75 := (shl72 | conv74) $buffering 1
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (add12 * add) $buffering 1
        //  file prog.linked.opt.aa, line 85
        // volatile! 
        // Source expression
        // (add12 * add)
        // add12
        // add
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (add12 * add) $buffering 1
        // start: WAR dependencies for mul85
        // done: WAR dependencies for mul85
        // start:  		$volatile mul85 := (mul * add21) $buffering 1
        //  file prog.linked.opt.aa, line 86
        // volatile! 
        // Source expression
        // (mul * add21)
        // mul
        // add21
        // Target expression
        // (as target) mul85
        // start: WAR dependencies for mul85
        // done: WAR dependencies for mul85
        // end:  		$volatile mul85 := (mul * add21) $buffering 1
        // start: WAR dependencies for mul91
        // done: WAR dependencies for mul91
        // start:  		$volatile mul91 := (add39 * add30) $buffering 1
        //  file prog.linked.opt.aa, line 87
        // volatile! 
        // Source expression
        // (add39 * add30)
        // add39
        // add30
        // Target expression
        // (as target) mul91
        // start: WAR dependencies for mul91
        // done: WAR dependencies for mul91
        // end:  		$volatile mul91 := (add39 * add30) $buffering 1
        // start: WAR dependencies for mul94
        // done: WAR dependencies for mul94
        // start:  		$volatile mul94 := (mul91 * add48) $buffering 1
        //  file prog.linked.opt.aa, line 88
        // volatile! 
        // Source expression
        // (mul91 * add48)
        // mul91
        // add48
        // Target expression
        // (as target) mul94
        // start: WAR dependencies for mul94
        // done: WAR dependencies for mul94
        // end:  		$volatile mul94 := (mul91 * add48) $buffering 1
        // start: WAR dependencies for mul100
        // done: WAR dependencies for mul100
        // start:  		$volatile mul100 := (add66 * add57) $buffering 1
        //  file prog.linked.opt.aa, line 89
        // volatile! 
        // Source expression
        // (add66 * add57)
        // add66
        // add57
        // Target expression
        // (as target) mul100
        // start: WAR dependencies for mul100
        // done: WAR dependencies for mul100
        // end:  		$volatile mul100 := (add66 * add57) $buffering 1
        // start: WAR dependencies for mul103
        // done: WAR dependencies for mul103
        // start:  		$volatile mul103 := (mul100 * add75) $buffering 1
        //  file prog.linked.opt.aa, line 90
        // volatile! 
        // Source expression
        // (mul100 * add75)
        // mul100
        // add75
        // Target expression
        // (as target) mul103
        // start: WAR dependencies for mul103
        // done: WAR dependencies for mul103
        // end:  		$volatile mul103 := (mul100 * add75) $buffering 1
        // start: WAR dependencies for mul109
        // done: WAR dependencies for mul109
        // start:  		$volatile mul109 := (add21 * add12) $buffering 1
        //  file prog.linked.opt.aa, line 91
        // volatile! 
        // Source expression
        // (add21 * add12)
        // add21
        // add12
        // Target expression
        // (as target) mul109
        // start: WAR dependencies for mul109
        // done: WAR dependencies for mul109
        // end:  		$volatile mul109 := (add21 * add12) $buffering 1
        // start: WAR dependencies for shr457
        // done: WAR dependencies for shr457
        // start:  		$volatile shr457 := (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        //  file prog.linked.opt.aa, line 92
        // volatile! 
        // Source expression
        // (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
        // mul109
        // Target expression
        // (as target) shr457
        // start: WAR dependencies for shr457
        // done: WAR dependencies for shr457
        // end:  		$volatile shr457 := (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        // start: WAR dependencies for mul116
        // done: WAR dependencies for mul116
        // start:  		$volatile mul116 := (add48 * add39) $buffering 1
        //  file prog.linked.opt.aa, line 93
        // volatile! 
        // Source expression
        // (add48 * add39)
        // add48
        // add39
        // Target expression
        // (as target) mul116
        // start: WAR dependencies for mul116
        // done: WAR dependencies for mul116
        // end:  		$volatile mul116 := (add48 * add39) $buffering 1
        // start: WAR dependencies for shr117458
        // done: WAR dependencies for shr117458
        // start:  		$volatile shr117458 := (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        //  file prog.linked.opt.aa, line 94
        // volatile! 
        // Source expression
        // (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
        // mul116
        // Target expression
        // (as target) shr117458
        // start: WAR dependencies for shr117458
        // done: WAR dependencies for shr117458
        // end:  		$volatile shr117458 := (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        // start: WAR dependencies for cmp467
        // done: WAR dependencies for cmp467
        // start:  		$volatile cmp467 := (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        //  file prog.linked.opt.aa, line 95
        // volatile! 
        // Source expression
        // (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        // mul85
        // Target expression
        // (as target) cmp467
        // start: WAR dependencies for cmp467
        // done: WAR dependencies for cmp467
        // end:  		$volatile cmp467 := (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe Concat_input_pipe
        // read-dependencies for pipe Concat_input_pipe
        RPIPE_Concat_input_pipe_39_sample_start_ <-& (RPIPE_Concat_input_pipe_25_update_completed_)
        RPIPE_Concat_input_pipe_51_sample_start_ <-& (RPIPE_Concat_input_pipe_39_update_completed_)
        RPIPE_Concat_input_pipe_64_sample_start_ <-& (RPIPE_Concat_input_pipe_51_update_completed_)
        RPIPE_Concat_input_pipe_76_sample_start_ <-& (RPIPE_Concat_input_pipe_64_update_completed_)
        RPIPE_Concat_input_pipe_89_sample_start_ <-& (RPIPE_Concat_input_pipe_76_update_completed_)
        RPIPE_Concat_input_pipe_101_sample_start_ <-& (RPIPE_Concat_input_pipe_89_update_completed_)
        RPIPE_Concat_input_pipe_114_sample_start_ <-& (RPIPE_Concat_input_pipe_101_update_completed_)
        RPIPE_Concat_input_pipe_126_sample_start_ <-& (RPIPE_Concat_input_pipe_114_update_completed_)
        RPIPE_Concat_input_pipe_139_sample_start_ <-& (RPIPE_Concat_input_pipe_126_update_completed_)
        RPIPE_Concat_input_pipe_151_sample_start_ <-& (RPIPE_Concat_input_pipe_139_update_completed_)
        RPIPE_Concat_input_pipe_164_sample_start_ <-& (RPIPE_Concat_input_pipe_151_update_completed_)
        RPIPE_Concat_input_pipe_176_sample_start_ <-& (RPIPE_Concat_input_pipe_164_update_completed_)
        RPIPE_Concat_input_pipe_189_sample_start_ <-& (RPIPE_Concat_input_pipe_176_update_completed_)
        RPIPE_Concat_input_pipe_201_sample_start_ <-& (RPIPE_Concat_input_pipe_189_update_completed_)
        RPIPE_Concat_input_pipe_214_sample_start_ <-& (RPIPE_Concat_input_pipe_201_update_completed_)
        RPIPE_Concat_input_pipe_226_sample_start_ <-& (RPIPE_Concat_input_pipe_214_update_completed_)
        RPIPE_Concat_input_pipe_239_sample_start_ <-& (RPIPE_Concat_input_pipe_226_update_completed_)
        // write-dependencies for pipe Concat_input_pipe
        // signal write dependencies for Concat_input_pipe
      }
      assign_stmt_26_to_assign_stmt_307__entry__ |-> (assign_stmt_26_to_assign_stmt_307)
      assign_stmt_26_to_assign_stmt_307__exit__ <-| (assign_stmt_26_to_assign_stmt_307)
      // if-statement  
      //  file prog.linked.opt.aa, line 96
      ;;[if_stmt_308_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_308__entry__ |-> (if_stmt_308_dead_link)
      if_stmt_308__exit__ <-| (if_stmt_308_dead_link)
      ;;[if_stmt_308_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_308__entry__ |-> (if_stmt_308_eval_test)
      $P [R_cmp467_309_place]
      R_cmp467_309_place <-| (if_stmt_308_eval_test)
      ;;[if_stmt_308_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_308_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp467_309_place |-> (if_stmt_308_if_link if_stmt_308_else_link)
      $P [entry_bbx_xnph469]
      entry_bbx_xnph469 <-| (if_stmt_308_if_link)
      $P [entry_forx_xcond171x_xpreheader]
      entry_forx_xcond171x_xpreheader <-| (if_stmt_308_else_link)
      ::[assign_stmt_322] 
      {
        // start: WAR dependencies for cmp175463
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for cmp175463
        // start:  		$volatile cmp175463 := (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        //  file prog.linked.opt.aa, line 106
        // volatile! 
        // Source expression
        // (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        // mul94
        // Target expression
        // (as target) cmp175463
        // start: WAR dependencies for cmp175463
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for cmp175463
        // end:  		$volatile cmp175463 := (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_322__entry__ |-> (assign_stmt_322)
      assign_stmt_322__exit__ <-| (assign_stmt_322)
      // if-statement  
      //  file prog.linked.opt.aa, line 107
      ;;[if_stmt_323_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_323__entry__ |-> (if_stmt_323_dead_link)
      if_stmt_323__exit__ <-| (if_stmt_323_dead_link)
      ;;[if_stmt_323_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_323__entry__ |-> (if_stmt_323_eval_test)
      $P [R_cmp175463_324_place]
      R_cmp175463_324_place <-| (if_stmt_323_eval_test)
      ;;[if_stmt_323_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_323_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp175463_324_place |-> (if_stmt_323_if_link if_stmt_323_else_link)
      $P [forx_xcond171x_xpreheader_bbx_xnph465]
      forx_xcond171x_xpreheader_bbx_xnph465 <-| (if_stmt_323_if_link)
      $P [forx_xcond171x_xpreheader_forx_xend231]
      forx_xcond171x_xpreheader_forx_xend231 <-| (if_stmt_323_else_link)
      ::[assign_stmt_334_to_assign_stmt_374] 
      {
        // start: WAR dependencies for tmp492
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp492
        // start:  		$volatile tmp492 := (add * add12) $buffering 1
        //  file prog.linked.opt.aa, line 114
        // volatile! 
        // Source expression
        // (add * add12)
        // add
        // add12
        // Target expression
        // (as target) tmp492
        // start: WAR dependencies for tmp492
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp492
        // end:  		$volatile tmp492 := (add * add12) $buffering 1
        // start: WAR dependencies for tmp494
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp494
        // start:  		$volatile tmp494 := (tmp492 * add21) $buffering 1
        //  file prog.linked.opt.aa, line 115
        // volatile! 
        // Source expression
        // (tmp492 * add21)
        // tmp492
        // add21
        // Target expression
        // (as target) tmp494
        // start: WAR dependencies for tmp494
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp494
        // end:  		$volatile tmp494 := (tmp492 * add21) $buffering 1
        // start: WAR dependencies for tmp495
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp495
        // start:  		$volatile tmp495 := (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        //  file prog.linked.opt.aa, line 116
        // volatile! 
        // Source expression
        // (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
        // tmp494
        // Target expression
        // (as target) tmp495
        // start: WAR dependencies for tmp495
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp495
        // end:  		$volatile tmp495 := (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        // start: WAR dependencies for tmp496
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp496
        // start:  		$volatile tmp496 := (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 117
        // volatile! 
        // Source expression
        // (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // tmp495
        // Target expression
        // (as target) tmp496
        // start: WAR dependencies for tmp496
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp496
        // end:  		$volatile tmp496 := (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp495x_xop
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp495x_xop
        // start:  		$volatile tmp495x_xop := (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 118
        // volatile! 
        // Source expression
        // (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // tmp495
        // Target expression
        // (as target) tmp495x_xop
        // start: WAR dependencies for tmp495x_xop
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp495x_xop
        // end:  		$volatile tmp495x_xop := (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        // start:  		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 119
        // Source expression
        // ($cast ($uint<64>) tmp495x_xop )
        $T[type_cast_360_sample_start_] 
        $T[type_cast_360_sample_completed_] 
        $T[type_cast_360_update_start_] 
        $T[type_cast_360_update_completed_] 
        // tmp495x_xop
        // start: Forward dependencies from tmp495x_xop to transition type_cast_360_sample_start_
        // done: Forward dependencies from tmp495x_xop to transition type_cast_360_sample_start_
        ;;[type_cast_360_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_360_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_360_sample_start_ &-> (type_cast_360_Sample)
        type_cast_360_sample_completed_ <-& (type_cast_360_Sample)
        type_cast_360_sample_completed_ &-> ($null)
        type_cast_360_update_start_ &-> (type_cast_360_Update)
        type_cast_360_update_completed_ <-& (type_cast_360_Update)
        // Target expression
        // (as target) iNsTr_19
        // start: WAR dependencies for iNsTr_19
        // done: WAR dependencies for iNsTr_19
        // end:  		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for xx_xop503
        // done: WAR dependencies for xx_xop503
        // start:  		$volatile xx_xop503 := (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 120
        // volatile! 
        // Source expression
        // (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // iNsTr_19
        // Target expression
        // (as target) xx_xop503
        // start: WAR dependencies for xx_xop503
        // done: WAR dependencies for xx_xop503
        // end:  		$volatile xx_xop503 := (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp500
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp500
        // start:  		$volatile tmp500 := ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 121
        // volatile! 
        // Source expression
        // ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp496
        // xx_xop503
        // Target expression
        // (as target) tmp500
        // start: WAR dependencies for tmp500
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp500
        // end:  		$volatile tmp500 := ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_334_to_assign_stmt_374__entry__ |-> (assign_stmt_334_to_assign_stmt_374)
      assign_stmt_334_to_assign_stmt_374__exit__ <-| (assign_stmt_334_to_assign_stmt_374)
      ::[assign_stmt_391_to_assign_stmt_539] 
      {
        // start:  		arrayidx := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 127
        // Source expression
        // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489])
        $T[addr_of_390_sample_start_] 
        $T[addr_of_390_sample_completed_] 
        $T[addr_of_390_update_start_] 
        $T[addr_of_390_update_completed_] 
        $T[array_obj_ref_389_root_address_calculated] 
        $T[array_obj_ref_389_offset_calculated] 
        $T[array_obj_ref_389_index_resized_1] 
        $T[array_obj_ref_389_index_scaled_1] 
        $T[array_obj_ref_389_index_computed_1] 
        // indvar489
        // start: Forward dependencies from indvar489 to transition array_obj_ref_389_index_computed_1
        // done: Forward dependencies from indvar489 to transition array_obj_ref_389_index_computed_1
        ;;[array_obj_ref_389_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_389_index_computed_1 &-> (array_obj_ref_389_index_resize_1)
        array_obj_ref_389_index_resized_1 <-& (array_obj_ref_389_index_resize_1)
        ;;[array_obj_ref_389_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_389_index_resized_1 &-> (array_obj_ref_389_index_scale_1)
        array_obj_ref_389_index_scaled_1 <-& (array_obj_ref_389_index_scale_1)
        $T[array_obj_ref_389_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_389_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_389_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_389_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_389_index_scaled_1 &-> (array_obj_ref_389_final_index_sum_regn_Sample)
        array_obj_ref_389_final_index_sum_regn_sample_complete <-& (array_obj_ref_389_final_index_sum_regn_Sample)
        array_obj_ref_389_final_index_sum_regn_update_start &-> (array_obj_ref_389_final_index_sum_regn_Update)
        array_obj_ref_389_offset_calculated <-& (array_obj_ref_389_final_index_sum_regn_Update)
        ;;[array_obj_ref_389_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_389_offset_calculated &-> (array_obj_ref_389_base_plus_offset)
        array_obj_ref_389_root_address_calculated <-& (array_obj_ref_389_base_plus_offset)
        ;;[addr_of_390_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_390_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_390_sample_start_ <-& (array_obj_ref_389_root_address_calculated)
        addr_of_390_sample_start_ &-> (addr_of_390_request)
        addr_of_390_sample_completed_ <-& (addr_of_390_request)
        addr_of_390_sample_completed_ &-> ($null)
        addr_of_390_update_start_ &-> (addr_of_390_complete)
        addr_of_390_update_completed_ <-& (addr_of_390_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489]) $buffering 1// bits of buffering = 32. 
        // start:  		call124 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 128
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_393_sample_start_] 
        $T[RPIPE_Concat_input_pipe_393_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_393_update_start_] 
        $T[RPIPE_Concat_input_pipe_393_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_393_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_393_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_393_sample_start_ &-> (RPIPE_Concat_input_pipe_393_Sample)
        RPIPE_Concat_input_pipe_393_sample_completed_ <-& (RPIPE_Concat_input_pipe_393_Sample)
        RPIPE_Concat_input_pipe_393_update_start_ <-& (RPIPE_Concat_input_pipe_393_sample_completed_)
        RPIPE_Concat_input_pipe_393_update_start_ &-> (RPIPE_Concat_input_pipe_393_Update)
        RPIPE_Concat_input_pipe_393_update_completed_ <-& (RPIPE_Concat_input_pipe_393_Update)
        // Target expression
        // (as target) call124
        // start: WAR dependencies for call124
        // done: WAR dependencies for call124
        // end:  		call124 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv125 := ($cast ($uint<64>) call124 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 129
        // Source expression
        // ($cast ($uint<64>) call124 )
        $T[type_cast_397_sample_start_] 
        $T[type_cast_397_sample_completed_] 
        $T[type_cast_397_update_start_] 
        $T[type_cast_397_update_completed_] 
        // call124
        // start: Forward dependencies from call124 to transition type_cast_397_sample_start_
        type_cast_397_sample_start_ <-& (RPIPE_Concat_input_pipe_393_update_completed_)
        // done: Forward dependencies from call124 to transition type_cast_397_sample_start_
        ;;[type_cast_397_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_397_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_397_sample_start_ &-> (type_cast_397_Sample)
        type_cast_397_sample_completed_ <-& (type_cast_397_Sample)
        type_cast_397_sample_completed_ &-> ($null)
        type_cast_397_update_start_ &-> (type_cast_397_Update)
        type_cast_397_update_completed_ <-& (type_cast_397_Update)
        // Target expression
        // (as target) conv125
        // start: WAR dependencies for conv125
        // done: WAR dependencies for conv125
        // end:  		conv125 := ($cast ($uint<64>) call124 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shl127
        // done: WAR dependencies for shl127
        // start:  		$volatile shl127 := (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 130
        // volatile! 
        // Source expression
        // (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // conv125
        // Target expression
        // (as target) shl127
        // start: WAR dependencies for shl127
        // done: WAR dependencies for shl127
        // end:  		$volatile shl127 := (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call128 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 131
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_406_sample_start_] 
        $T[RPIPE_Concat_input_pipe_406_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_406_update_start_] 
        $T[RPIPE_Concat_input_pipe_406_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_406_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_406_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_406_sample_start_ &-> (RPIPE_Concat_input_pipe_406_Sample)
        RPIPE_Concat_input_pipe_406_sample_completed_ <-& (RPIPE_Concat_input_pipe_406_Sample)
        RPIPE_Concat_input_pipe_406_update_start_ <-& (RPIPE_Concat_input_pipe_406_sample_completed_)
        RPIPE_Concat_input_pipe_406_update_start_ &-> (RPIPE_Concat_input_pipe_406_Update)
        RPIPE_Concat_input_pipe_406_update_completed_ <-& (RPIPE_Concat_input_pipe_406_Update)
        // Target expression
        // (as target) call128
        // start: WAR dependencies for call128
        // done: WAR dependencies for call128
        // end:  		call128 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv130 := ($cast ($uint<64>) call128 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 132
        // Source expression
        // ($cast ($uint<64>) call128 )
        $T[type_cast_410_sample_start_] 
        $T[type_cast_410_sample_completed_] 
        $T[type_cast_410_update_start_] 
        $T[type_cast_410_update_completed_] 
        // call128
        // start: Forward dependencies from call128 to transition type_cast_410_sample_start_
        type_cast_410_sample_start_ <-& (RPIPE_Concat_input_pipe_406_update_completed_)
        // done: Forward dependencies from call128 to transition type_cast_410_sample_start_
        ;;[type_cast_410_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_410_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_410_sample_start_ &-> (type_cast_410_Sample)
        type_cast_410_sample_completed_ <-& (type_cast_410_Sample)
        type_cast_410_sample_completed_ &-> ($null)
        type_cast_410_update_start_ &-> (type_cast_410_Update)
        type_cast_410_update_completed_ <-& (type_cast_410_Update)
        // Target expression
        // (as target) conv130
        // start: WAR dependencies for conv130
        // done: WAR dependencies for conv130
        // end:  		conv130 := ($cast ($uint<64>) call128 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add131
        // done: WAR dependencies for add131
        // start:  		$volatile add131 := (shl127 | conv130) $buffering 1
        //  file prog.linked.opt.aa, line 133
        // volatile! 
        // Source expression
        // (shl127 | conv130)
        // shl127
        // conv130
        // Target expression
        // (as target) add131
        // start: WAR dependencies for add131
        // done: WAR dependencies for add131
        // end:  		$volatile add131 := (shl127 | conv130) $buffering 1
        // start: WAR dependencies for shl133
        // done: WAR dependencies for shl133
        // start:  		$volatile shl133 := (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 134
        // volatile! 
        // Source expression
        // (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add131
        // Target expression
        // (as target) shl133
        // start: WAR dependencies for shl133
        // done: WAR dependencies for shl133
        // end:  		$volatile shl133 := (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call134 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 135
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_424_sample_start_] 
        $T[RPIPE_Concat_input_pipe_424_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_424_update_start_] 
        $T[RPIPE_Concat_input_pipe_424_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_424_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_424_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_424_sample_start_ &-> (RPIPE_Concat_input_pipe_424_Sample)
        RPIPE_Concat_input_pipe_424_sample_completed_ <-& (RPIPE_Concat_input_pipe_424_Sample)
        RPIPE_Concat_input_pipe_424_update_start_ <-& (RPIPE_Concat_input_pipe_424_sample_completed_)
        RPIPE_Concat_input_pipe_424_update_start_ &-> (RPIPE_Concat_input_pipe_424_Update)
        RPIPE_Concat_input_pipe_424_update_completed_ <-& (RPIPE_Concat_input_pipe_424_Update)
        // Target expression
        // (as target) call134
        // start: WAR dependencies for call134
        // done: WAR dependencies for call134
        // end:  		call134 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv136 := ($cast ($uint<64>) call134 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 136
        // Source expression
        // ($cast ($uint<64>) call134 )
        $T[type_cast_428_sample_start_] 
        $T[type_cast_428_sample_completed_] 
        $T[type_cast_428_update_start_] 
        $T[type_cast_428_update_completed_] 
        // call134
        // start: Forward dependencies from call134 to transition type_cast_428_sample_start_
        type_cast_428_sample_start_ <-& (RPIPE_Concat_input_pipe_424_update_completed_)
        // done: Forward dependencies from call134 to transition type_cast_428_sample_start_
        ;;[type_cast_428_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_428_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_428_sample_start_ &-> (type_cast_428_Sample)
        type_cast_428_sample_completed_ <-& (type_cast_428_Sample)
        type_cast_428_sample_completed_ &-> ($null)
        type_cast_428_update_start_ &-> (type_cast_428_Update)
        type_cast_428_update_completed_ <-& (type_cast_428_Update)
        // Target expression
        // (as target) conv136
        // start: WAR dependencies for conv136
        // done: WAR dependencies for conv136
        // end:  		conv136 := ($cast ($uint<64>) call134 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add137
        // done: WAR dependencies for add137
        // start:  		$volatile add137 := (shl133 | conv136) $buffering 1
        //  file prog.linked.opt.aa, line 137
        // volatile! 
        // Source expression
        // (shl133 | conv136)
        // shl133
        // conv136
        // Target expression
        // (as target) add137
        // start: WAR dependencies for add137
        // done: WAR dependencies for add137
        // end:  		$volatile add137 := (shl133 | conv136) $buffering 1
        // start: WAR dependencies for shl139
        // done: WAR dependencies for shl139
        // start:  		$volatile shl139 := (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 138
        // volatile! 
        // Source expression
        // (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add137
        // Target expression
        // (as target) shl139
        // start: WAR dependencies for shl139
        // done: WAR dependencies for shl139
        // end:  		$volatile shl139 := (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call140 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 139
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_442_sample_start_] 
        $T[RPIPE_Concat_input_pipe_442_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_442_update_start_] 
        $T[RPIPE_Concat_input_pipe_442_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_442_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_442_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_442_sample_start_ &-> (RPIPE_Concat_input_pipe_442_Sample)
        RPIPE_Concat_input_pipe_442_sample_completed_ <-& (RPIPE_Concat_input_pipe_442_Sample)
        RPIPE_Concat_input_pipe_442_update_start_ <-& (RPIPE_Concat_input_pipe_442_sample_completed_)
        RPIPE_Concat_input_pipe_442_update_start_ &-> (RPIPE_Concat_input_pipe_442_Update)
        RPIPE_Concat_input_pipe_442_update_completed_ <-& (RPIPE_Concat_input_pipe_442_Update)
        // Target expression
        // (as target) call140
        // start: WAR dependencies for call140
        // done: WAR dependencies for call140
        // end:  		call140 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv142 := ($cast ($uint<64>) call140 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 140
        // Source expression
        // ($cast ($uint<64>) call140 )
        $T[type_cast_446_sample_start_] 
        $T[type_cast_446_sample_completed_] 
        $T[type_cast_446_update_start_] 
        $T[type_cast_446_update_completed_] 
        // call140
        // start: Forward dependencies from call140 to transition type_cast_446_sample_start_
        type_cast_446_sample_start_ <-& (RPIPE_Concat_input_pipe_442_update_completed_)
        // done: Forward dependencies from call140 to transition type_cast_446_sample_start_
        ;;[type_cast_446_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_446_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_446_sample_start_ &-> (type_cast_446_Sample)
        type_cast_446_sample_completed_ <-& (type_cast_446_Sample)
        type_cast_446_sample_completed_ &-> ($null)
        type_cast_446_update_start_ &-> (type_cast_446_Update)
        type_cast_446_update_completed_ <-& (type_cast_446_Update)
        // Target expression
        // (as target) conv142
        // start: WAR dependencies for conv142
        // done: WAR dependencies for conv142
        // end:  		conv142 := ($cast ($uint<64>) call140 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add143
        // done: WAR dependencies for add143
        // start:  		$volatile add143 := (shl139 | conv142) $buffering 1
        //  file prog.linked.opt.aa, line 141
        // volatile! 
        // Source expression
        // (shl139 | conv142)
        // shl139
        // conv142
        // Target expression
        // (as target) add143
        // start: WAR dependencies for add143
        // done: WAR dependencies for add143
        // end:  		$volatile add143 := (shl139 | conv142) $buffering 1
        // start: WAR dependencies for shl145
        // done: WAR dependencies for shl145
        // start:  		$volatile shl145 := (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 142
        // volatile! 
        // Source expression
        // (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add143
        // Target expression
        // (as target) shl145
        // start: WAR dependencies for shl145
        // done: WAR dependencies for shl145
        // end:  		$volatile shl145 := (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call146 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 143
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_460_sample_start_] 
        $T[RPIPE_Concat_input_pipe_460_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_460_update_start_] 
        $T[RPIPE_Concat_input_pipe_460_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_460_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_460_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_460_sample_start_ &-> (RPIPE_Concat_input_pipe_460_Sample)
        RPIPE_Concat_input_pipe_460_sample_completed_ <-& (RPIPE_Concat_input_pipe_460_Sample)
        RPIPE_Concat_input_pipe_460_update_start_ <-& (RPIPE_Concat_input_pipe_460_sample_completed_)
        RPIPE_Concat_input_pipe_460_update_start_ &-> (RPIPE_Concat_input_pipe_460_Update)
        RPIPE_Concat_input_pipe_460_update_completed_ <-& (RPIPE_Concat_input_pipe_460_Update)
        // Target expression
        // (as target) call146
        // start: WAR dependencies for call146
        // done: WAR dependencies for call146
        // end:  		call146 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv148 := ($cast ($uint<64>) call146 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 144
        // Source expression
        // ($cast ($uint<64>) call146 )
        $T[type_cast_464_sample_start_] 
        $T[type_cast_464_sample_completed_] 
        $T[type_cast_464_update_start_] 
        $T[type_cast_464_update_completed_] 
        // call146
        // start: Forward dependencies from call146 to transition type_cast_464_sample_start_
        type_cast_464_sample_start_ <-& (RPIPE_Concat_input_pipe_460_update_completed_)
        // done: Forward dependencies from call146 to transition type_cast_464_sample_start_
        ;;[type_cast_464_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_464_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_464_sample_start_ &-> (type_cast_464_Sample)
        type_cast_464_sample_completed_ <-& (type_cast_464_Sample)
        type_cast_464_sample_completed_ &-> ($null)
        type_cast_464_update_start_ &-> (type_cast_464_Update)
        type_cast_464_update_completed_ <-& (type_cast_464_Update)
        // Target expression
        // (as target) conv148
        // start: WAR dependencies for conv148
        // done: WAR dependencies for conv148
        // end:  		conv148 := ($cast ($uint<64>) call146 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add149
        // done: WAR dependencies for add149
        // start:  		$volatile add149 := (shl145 | conv148) $buffering 1
        //  file prog.linked.opt.aa, line 145
        // volatile! 
        // Source expression
        // (shl145 | conv148)
        // shl145
        // conv148
        // Target expression
        // (as target) add149
        // start: WAR dependencies for add149
        // done: WAR dependencies for add149
        // end:  		$volatile add149 := (shl145 | conv148) $buffering 1
        // start: WAR dependencies for shl151
        // done: WAR dependencies for shl151
        // start:  		$volatile shl151 := (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 146
        // volatile! 
        // Source expression
        // (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add149
        // Target expression
        // (as target) shl151
        // start: WAR dependencies for shl151
        // done: WAR dependencies for shl151
        // end:  		$volatile shl151 := (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call152 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 147
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_478_sample_start_] 
        $T[RPIPE_Concat_input_pipe_478_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_478_update_start_] 
        $T[RPIPE_Concat_input_pipe_478_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_478_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_478_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_478_sample_start_ &-> (RPIPE_Concat_input_pipe_478_Sample)
        RPIPE_Concat_input_pipe_478_sample_completed_ <-& (RPIPE_Concat_input_pipe_478_Sample)
        RPIPE_Concat_input_pipe_478_update_start_ <-& (RPIPE_Concat_input_pipe_478_sample_completed_)
        RPIPE_Concat_input_pipe_478_update_start_ &-> (RPIPE_Concat_input_pipe_478_Update)
        RPIPE_Concat_input_pipe_478_update_completed_ <-& (RPIPE_Concat_input_pipe_478_Update)
        // Target expression
        // (as target) call152
        // start: WAR dependencies for call152
        // done: WAR dependencies for call152
        // end:  		call152 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv154 := ($cast ($uint<64>) call152 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 148
        // Source expression
        // ($cast ($uint<64>) call152 )
        $T[type_cast_482_sample_start_] 
        $T[type_cast_482_sample_completed_] 
        $T[type_cast_482_update_start_] 
        $T[type_cast_482_update_completed_] 
        // call152
        // start: Forward dependencies from call152 to transition type_cast_482_sample_start_
        type_cast_482_sample_start_ <-& (RPIPE_Concat_input_pipe_478_update_completed_)
        // done: Forward dependencies from call152 to transition type_cast_482_sample_start_
        ;;[type_cast_482_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_482_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_482_sample_start_ &-> (type_cast_482_Sample)
        type_cast_482_sample_completed_ <-& (type_cast_482_Sample)
        type_cast_482_sample_completed_ &-> ($null)
        type_cast_482_update_start_ &-> (type_cast_482_Update)
        type_cast_482_update_completed_ <-& (type_cast_482_Update)
        // Target expression
        // (as target) conv154
        // start: WAR dependencies for conv154
        // done: WAR dependencies for conv154
        // end:  		conv154 := ($cast ($uint<64>) call152 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add155
        // done: WAR dependencies for add155
        // start:  		$volatile add155 := (shl151 | conv154) $buffering 1
        //  file prog.linked.opt.aa, line 149
        // volatile! 
        // Source expression
        // (shl151 | conv154)
        // shl151
        // conv154
        // Target expression
        // (as target) add155
        // start: WAR dependencies for add155
        // done: WAR dependencies for add155
        // end:  		$volatile add155 := (shl151 | conv154) $buffering 1
        // start: WAR dependencies for shl157
        // done: WAR dependencies for shl157
        // start:  		$volatile shl157 := (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 150
        // volatile! 
        // Source expression
        // (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add155
        // Target expression
        // (as target) shl157
        // start: WAR dependencies for shl157
        // done: WAR dependencies for shl157
        // end:  		$volatile shl157 := (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call158 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 151
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_496_sample_start_] 
        $T[RPIPE_Concat_input_pipe_496_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_496_update_start_] 
        $T[RPIPE_Concat_input_pipe_496_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_496_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_496_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_496_sample_start_ &-> (RPIPE_Concat_input_pipe_496_Sample)
        RPIPE_Concat_input_pipe_496_sample_completed_ <-& (RPIPE_Concat_input_pipe_496_Sample)
        RPIPE_Concat_input_pipe_496_update_start_ <-& (RPIPE_Concat_input_pipe_496_sample_completed_)
        RPIPE_Concat_input_pipe_496_update_start_ &-> (RPIPE_Concat_input_pipe_496_Update)
        RPIPE_Concat_input_pipe_496_update_completed_ <-& (RPIPE_Concat_input_pipe_496_Update)
        // Target expression
        // (as target) call158
        // start: WAR dependencies for call158
        // done: WAR dependencies for call158
        // end:  		call158 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv160 := ($cast ($uint<64>) call158 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 152
        // Source expression
        // ($cast ($uint<64>) call158 )
        $T[type_cast_500_sample_start_] 
        $T[type_cast_500_sample_completed_] 
        $T[type_cast_500_update_start_] 
        $T[type_cast_500_update_completed_] 
        // call158
        // start: Forward dependencies from call158 to transition type_cast_500_sample_start_
        type_cast_500_sample_start_ <-& (RPIPE_Concat_input_pipe_496_update_completed_)
        // done: Forward dependencies from call158 to transition type_cast_500_sample_start_
        ;;[type_cast_500_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_500_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_500_sample_start_ &-> (type_cast_500_Sample)
        type_cast_500_sample_completed_ <-& (type_cast_500_Sample)
        type_cast_500_sample_completed_ &-> ($null)
        type_cast_500_update_start_ &-> (type_cast_500_Update)
        type_cast_500_update_completed_ <-& (type_cast_500_Update)
        // Target expression
        // (as target) conv160
        // start: WAR dependencies for conv160
        // done: WAR dependencies for conv160
        // end:  		conv160 := ($cast ($uint<64>) call158 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add161
        // done: WAR dependencies for add161
        // start:  		$volatile add161 := (shl157 | conv160) $buffering 1
        //  file prog.linked.opt.aa, line 153
        // volatile! 
        // Source expression
        // (shl157 | conv160)
        // shl157
        // conv160
        // Target expression
        // (as target) add161
        // start: WAR dependencies for add161
        // done: WAR dependencies for add161
        // end:  		$volatile add161 := (shl157 | conv160) $buffering 1
        // start: WAR dependencies for shl163
        // done: WAR dependencies for shl163
        // start:  		$volatile shl163 := (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 154
        // volatile! 
        // Source expression
        // (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add161
        // Target expression
        // (as target) shl163
        // start: WAR dependencies for shl163
        // done: WAR dependencies for shl163
        // end:  		$volatile shl163 := (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call164 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 155
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_514_sample_start_] 
        $T[RPIPE_Concat_input_pipe_514_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_514_update_start_] 
        $T[RPIPE_Concat_input_pipe_514_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_514_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_514_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_514_sample_start_ &-> (RPIPE_Concat_input_pipe_514_Sample)
        RPIPE_Concat_input_pipe_514_sample_completed_ <-& (RPIPE_Concat_input_pipe_514_Sample)
        RPIPE_Concat_input_pipe_514_update_start_ <-& (RPIPE_Concat_input_pipe_514_sample_completed_)
        RPIPE_Concat_input_pipe_514_update_start_ &-> (RPIPE_Concat_input_pipe_514_Update)
        RPIPE_Concat_input_pipe_514_update_completed_ <-& (RPIPE_Concat_input_pipe_514_Update)
        // Target expression
        // (as target) call164
        // start: WAR dependencies for call164
        // done: WAR dependencies for call164
        // end:  		call164 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv166 := ($cast ($uint<64>) call164 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 156
        // Source expression
        // ($cast ($uint<64>) call164 )
        $T[type_cast_518_sample_start_] 
        $T[type_cast_518_sample_completed_] 
        $T[type_cast_518_update_start_] 
        $T[type_cast_518_update_completed_] 
        // call164
        // start: Forward dependencies from call164 to transition type_cast_518_sample_start_
        type_cast_518_sample_start_ <-& (RPIPE_Concat_input_pipe_514_update_completed_)
        // done: Forward dependencies from call164 to transition type_cast_518_sample_start_
        ;;[type_cast_518_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_518_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_518_sample_start_ &-> (type_cast_518_Sample)
        type_cast_518_sample_completed_ <-& (type_cast_518_Sample)
        type_cast_518_sample_completed_ &-> ($null)
        type_cast_518_update_start_ &-> (type_cast_518_Update)
        type_cast_518_update_completed_ <-& (type_cast_518_Update)
        // Target expression
        // (as target) conv166
        // start: WAR dependencies for conv166
        // done: WAR dependencies for conv166
        // end:  		conv166 := ($cast ($uint<64>) call164 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add167
        // done: WAR dependencies for add167
        // start:  		$volatile add167 := (shl163 | conv166) $buffering 1
        //  file prog.linked.opt.aa, line 157
        // volatile! 
        // Source expression
        // (shl163 | conv166)
        // shl163
        // conv166
        // Target expression
        // (as target) add167
        // start: WAR dependencies for add167
        // done: WAR dependencies for add167
        // end:  		$volatile add167 := (shl163 | conv166) $buffering 1
        // start:  		->(arrayidx) := add167 $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 158
        // Source expression
        // add167
        // Target expression
        // ->(arrayidx)
        $T[ptr_deref_526_sample_start_] 
        $T[ptr_deref_526_sample_completed_] 
        $T[ptr_deref_526_update_start_] 
        $T[ptr_deref_526_update_completed_] 
        $T[ptr_deref_526_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_526_word_address_calculated] 
        $T[ptr_deref_526_root_address_calculated] 
        $T[ptr_deref_526_base_address_resized] 
        ;;[ptr_deref_526_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_526_base_address_calculated &-> (ptr_deref_526_base_addr_resize)
        ptr_deref_526_base_address_resized <-& (ptr_deref_526_base_addr_resize)
        ;;[ptr_deref_526_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_526_base_address_resized &-> (ptr_deref_526_base_plus_offset)
        ptr_deref_526_root_address_calculated <-& (ptr_deref_526_base_plus_offset)
        ;;[ptr_deref_526_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_526_root_address_calculated &-> (ptr_deref_526_word_addrgen)
        ptr_deref_526_word_address_calculated <-& (ptr_deref_526_word_addrgen)
        ;;[ptr_deref_526_Sample] 
        {
          ;;[ptr_deref_526_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_526_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_526_sample_start_ <-& (ptr_deref_526_word_address_calculated)
        ptr_deref_526_sample_start_ &-> (ptr_deref_526_Sample)
        ptr_deref_526_sample_completed_ <-& (ptr_deref_526_Sample)
        ptr_deref_526_sample_completed_ &-> ($null)
        ptr_deref_526_update_start_ &-> (ptr_deref_526_Update)
        ptr_deref_526_update_completed_ <-& (ptr_deref_526_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_526_base_address_calculated
        ptr_deref_526_base_address_calculated <-& (addr_of_390_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_526_base_address_calculated
        ptr_deref_526_sample_start_ <-& (ptr_deref_526_base_address_calculated)
        // start: Forward dependencies from add167 to transition ptr_deref_526_sample_start_
        ptr_deref_526_sample_start_ <-& (type_cast_464_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_397_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_410_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_428_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_446_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_482_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_500_update_completed_)
        ptr_deref_526_sample_start_ <-& (type_cast_518_update_completed_)
        // done: Forward dependencies from add167 to transition ptr_deref_526_sample_start_
        // end:  		->(arrayidx) := add167 $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for indvarx_xnext490
        // ignored out-of-scope w_root 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext490
        // start:  		$volatile indvarx_xnext490 := (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 159
        // volatile! 
        // Source expression
        // (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar489
        // Target expression
        // (as target) indvarx_xnext490
        // start: WAR dependencies for indvarx_xnext490
        // ignored out-of-scope w_root 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext490
        // end:  		$volatile indvarx_xnext490 := (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond2
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond2
        // start:  		$volatile exitcond2 := (indvarx_xnext490 == tmp500) $buffering 1
        //  file prog.linked.opt.aa, line 160
        // volatile! 
        // Source expression
        // (indvarx_xnext490 == tmp500)
        // indvarx_xnext490
        // tmp500
        // Target expression
        // (as target) exitcond2
        // start: WAR dependencies for exitcond2
        // ignored out-of-scope w_root 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond2
        // end:  		$volatile exitcond2 := (indvarx_xnext490 == tmp500) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_0
        //  ptr_deref_526 store
        // pipe read/write dependencies for pipe Concat_input_pipe
        // read-dependencies for pipe Concat_input_pipe
        RPIPE_Concat_input_pipe_406_sample_start_ <-& (RPIPE_Concat_input_pipe_393_update_completed_)
        RPIPE_Concat_input_pipe_424_sample_start_ <-& (RPIPE_Concat_input_pipe_406_update_completed_)
        RPIPE_Concat_input_pipe_442_sample_start_ <-& (RPIPE_Concat_input_pipe_424_update_completed_)
        RPIPE_Concat_input_pipe_460_sample_start_ <-& (RPIPE_Concat_input_pipe_442_update_completed_)
        RPIPE_Concat_input_pipe_478_sample_start_ <-& (RPIPE_Concat_input_pipe_460_update_completed_)
        RPIPE_Concat_input_pipe_496_sample_start_ <-& (RPIPE_Concat_input_pipe_478_update_completed_)
        RPIPE_Concat_input_pipe_514_sample_start_ <-& (RPIPE_Concat_input_pipe_496_update_completed_)
        // write-dependencies for pipe Concat_input_pipe
        // signal write dependencies for Concat_input_pipe
      }
      assign_stmt_391_to_assign_stmt_539__entry__ |-> (assign_stmt_391_to_assign_stmt_539)
      assign_stmt_391_to_assign_stmt_539__exit__ <-| (assign_stmt_391_to_assign_stmt_539)
      // if-statement  
      //  file prog.linked.opt.aa, line 161
      ;;[if_stmt_540_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_540__entry__ |-> (if_stmt_540_dead_link)
      if_stmt_540__exit__ <-| (if_stmt_540_dead_link)
      ;;[if_stmt_540_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_540__entry__ |-> (if_stmt_540_eval_test)
      $P [R_exitcond2_541_place]
      R_exitcond2_541_place <-| (if_stmt_540_eval_test)
      ;;[if_stmt_540_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_540_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond2_541_place |-> (if_stmt_540_if_link if_stmt_540_else_link)
      $P [forx_xbody_forx_xcond171x_xpreheaderx_xloopexit]
      forx_xbody_forx_xcond171x_xpreheaderx_xloopexit <-| (if_stmt_540_if_link)
      $P [forx_xbody_forx_xbody]
      forx_xbody_forx_xbody <-| (if_stmt_540_else_link)
      ::[assign_stmt_551_to_assign_stmt_591] 
      {
        // start: WAR dependencies for tmp479
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp479
        // start:  		$volatile tmp479 := (add30 * add39) $buffering 1
        //  file prog.linked.opt.aa, line 168
        // volatile! 
        // Source expression
        // (add30 * add39)
        // add30
        // add39
        // Target expression
        // (as target) tmp479
        // start: WAR dependencies for tmp479
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp479
        // end:  		$volatile tmp479 := (add30 * add39) $buffering 1
        // start: WAR dependencies for tmp481
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp481
        // start:  		$volatile tmp481 := (tmp479 * add48) $buffering 1
        //  file prog.linked.opt.aa, line 169
        // volatile! 
        // Source expression
        // (tmp479 * add48)
        // tmp479
        // add48
        // Target expression
        // (as target) tmp481
        // start: WAR dependencies for tmp481
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp481
        // end:  		$volatile tmp481 := (tmp479 * add48) $buffering 1
        // start: WAR dependencies for tmp482
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp482
        // start:  		$volatile tmp482 := (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        //  file prog.linked.opt.aa, line 170
        // volatile! 
        // Source expression
        // (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
        // tmp481
        // Target expression
        // (as target) tmp482
        // start: WAR dependencies for tmp482
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp482
        // end:  		$volatile tmp482 := (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        // start: WAR dependencies for tmp483
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp483
        // start:  		$volatile tmp483 := (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 171
        // volatile! 
        // Source expression
        // (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // tmp482
        // Target expression
        // (as target) tmp483
        // start: WAR dependencies for tmp483
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp483
        // end:  		$volatile tmp483 := (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp482x_xop
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp482x_xop
        // start:  		$volatile tmp482x_xop := (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 172
        // volatile! 
        // Source expression
        // (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // tmp482
        // Target expression
        // (as target) tmp482x_xop
        // start: WAR dependencies for tmp482x_xop
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp482x_xop
        // end:  		$volatile tmp482x_xop := (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        // start:  		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 173
        // Source expression
        // ($cast ($uint<64>) tmp482x_xop )
        $T[type_cast_577_sample_start_] 
        $T[type_cast_577_sample_completed_] 
        $T[type_cast_577_update_start_] 
        $T[type_cast_577_update_completed_] 
        // tmp482x_xop
        // start: Forward dependencies from tmp482x_xop to transition type_cast_577_sample_start_
        // done: Forward dependencies from tmp482x_xop to transition type_cast_577_sample_start_
        ;;[type_cast_577_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_577_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_577_sample_start_ &-> (type_cast_577_Sample)
        type_cast_577_sample_completed_ <-& (type_cast_577_Sample)
        type_cast_577_sample_completed_ &-> ($null)
        type_cast_577_update_start_ &-> (type_cast_577_Update)
        type_cast_577_update_completed_ <-& (type_cast_577_Update)
        // Target expression
        // (as target) iNsTr_32
        // start: WAR dependencies for iNsTr_32
        // done: WAR dependencies for iNsTr_32
        // end:  		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for xx_xop502
        // done: WAR dependencies for xx_xop502
        // start:  		$volatile xx_xop502 := (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 174
        // volatile! 
        // Source expression
        // (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // iNsTr_32
        // Target expression
        // (as target) xx_xop502
        // start: WAR dependencies for xx_xop502
        // done: WAR dependencies for xx_xop502
        // end:  		$volatile xx_xop502 := (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp487
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp487
        // start:  		$volatile tmp487 := ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 175
        // volatile! 
        // Source expression
        // ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp483
        // xx_xop502
        // Target expression
        // (as target) tmp487
        // start: WAR dependencies for tmp487
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp487
        // end:  		$volatile tmp487 := ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_551_to_assign_stmt_591__entry__ |-> (assign_stmt_551_to_assign_stmt_591)
      assign_stmt_551_to_assign_stmt_591__exit__ <-| (assign_stmt_551_to_assign_stmt_591)
      ::[assign_stmt_608_to_assign_stmt_756] 
      {
        // start:  		arrayidx227 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 181
        // Source expression
        // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476])
        $T[addr_of_607_sample_start_] 
        $T[addr_of_607_sample_completed_] 
        $T[addr_of_607_update_start_] 
        $T[addr_of_607_update_completed_] 
        $T[array_obj_ref_606_root_address_calculated] 
        $T[array_obj_ref_606_offset_calculated] 
        $T[array_obj_ref_606_index_resized_1] 
        $T[array_obj_ref_606_index_scaled_1] 
        $T[array_obj_ref_606_index_computed_1] 
        // indvar476
        // start: Forward dependencies from indvar476 to transition array_obj_ref_606_index_computed_1
        // done: Forward dependencies from indvar476 to transition array_obj_ref_606_index_computed_1
        ;;[array_obj_ref_606_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_606_index_computed_1 &-> (array_obj_ref_606_index_resize_1)
        array_obj_ref_606_index_resized_1 <-& (array_obj_ref_606_index_resize_1)
        ;;[array_obj_ref_606_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_606_index_resized_1 &-> (array_obj_ref_606_index_scale_1)
        array_obj_ref_606_index_scaled_1 <-& (array_obj_ref_606_index_scale_1)
        $T[array_obj_ref_606_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_606_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_606_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_606_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_606_index_scaled_1 &-> (array_obj_ref_606_final_index_sum_regn_Sample)
        array_obj_ref_606_final_index_sum_regn_sample_complete <-& (array_obj_ref_606_final_index_sum_regn_Sample)
        array_obj_ref_606_final_index_sum_regn_update_start &-> (array_obj_ref_606_final_index_sum_regn_Update)
        array_obj_ref_606_offset_calculated <-& (array_obj_ref_606_final_index_sum_regn_Update)
        ;;[array_obj_ref_606_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_606_offset_calculated &-> (array_obj_ref_606_base_plus_offset)
        array_obj_ref_606_root_address_calculated <-& (array_obj_ref_606_base_plus_offset)
        ;;[addr_of_607_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_607_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_607_sample_start_ <-& (array_obj_ref_606_root_address_calculated)
        addr_of_607_sample_start_ &-> (addr_of_607_request)
        addr_of_607_sample_completed_ <-& (addr_of_607_request)
        addr_of_607_sample_completed_ &-> ($null)
        addr_of_607_update_start_ &-> (addr_of_607_complete)
        addr_of_607_update_completed_ <-& (addr_of_607_complete)
        // Target expression
        // (as target) arrayidx227
        // start: WAR dependencies for arrayidx227
        // done: WAR dependencies for arrayidx227
        // end:  		arrayidx227 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476]) $buffering 1// bits of buffering = 32. 
        // start:  		call180 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 182
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_610_sample_start_] 
        $T[RPIPE_Concat_input_pipe_610_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_610_update_start_] 
        $T[RPIPE_Concat_input_pipe_610_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_610_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_610_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_610_sample_start_ &-> (RPIPE_Concat_input_pipe_610_Sample)
        RPIPE_Concat_input_pipe_610_sample_completed_ <-& (RPIPE_Concat_input_pipe_610_Sample)
        RPIPE_Concat_input_pipe_610_update_start_ <-& (RPIPE_Concat_input_pipe_610_sample_completed_)
        RPIPE_Concat_input_pipe_610_update_start_ &-> (RPIPE_Concat_input_pipe_610_Update)
        RPIPE_Concat_input_pipe_610_update_completed_ <-& (RPIPE_Concat_input_pipe_610_Update)
        // Target expression
        // (as target) call180
        // start: WAR dependencies for call180
        // done: WAR dependencies for call180
        // end:  		call180 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv181 := ($cast ($uint<64>) call180 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 183
        // Source expression
        // ($cast ($uint<64>) call180 )
        $T[type_cast_614_sample_start_] 
        $T[type_cast_614_sample_completed_] 
        $T[type_cast_614_update_start_] 
        $T[type_cast_614_update_completed_] 
        // call180
        // start: Forward dependencies from call180 to transition type_cast_614_sample_start_
        type_cast_614_sample_start_ <-& (RPIPE_Concat_input_pipe_610_update_completed_)
        // done: Forward dependencies from call180 to transition type_cast_614_sample_start_
        ;;[type_cast_614_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_614_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_614_sample_start_ &-> (type_cast_614_Sample)
        type_cast_614_sample_completed_ <-& (type_cast_614_Sample)
        type_cast_614_sample_completed_ &-> ($null)
        type_cast_614_update_start_ &-> (type_cast_614_Update)
        type_cast_614_update_completed_ <-& (type_cast_614_Update)
        // Target expression
        // (as target) conv181
        // start: WAR dependencies for conv181
        // done: WAR dependencies for conv181
        // end:  		conv181 := ($cast ($uint<64>) call180 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shl183
        // done: WAR dependencies for shl183
        // start:  		$volatile shl183 := (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 184
        // volatile! 
        // Source expression
        // (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // conv181
        // Target expression
        // (as target) shl183
        // start: WAR dependencies for shl183
        // done: WAR dependencies for shl183
        // end:  		$volatile shl183 := (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call184 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 185
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_623_sample_start_] 
        $T[RPIPE_Concat_input_pipe_623_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_623_update_start_] 
        $T[RPIPE_Concat_input_pipe_623_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_623_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_623_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_623_sample_start_ &-> (RPIPE_Concat_input_pipe_623_Sample)
        RPIPE_Concat_input_pipe_623_sample_completed_ <-& (RPIPE_Concat_input_pipe_623_Sample)
        RPIPE_Concat_input_pipe_623_update_start_ <-& (RPIPE_Concat_input_pipe_623_sample_completed_)
        RPIPE_Concat_input_pipe_623_update_start_ &-> (RPIPE_Concat_input_pipe_623_Update)
        RPIPE_Concat_input_pipe_623_update_completed_ <-& (RPIPE_Concat_input_pipe_623_Update)
        // Target expression
        // (as target) call184
        // start: WAR dependencies for call184
        // done: WAR dependencies for call184
        // end:  		call184 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv186 := ($cast ($uint<64>) call184 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 186
        // Source expression
        // ($cast ($uint<64>) call184 )
        $T[type_cast_627_sample_start_] 
        $T[type_cast_627_sample_completed_] 
        $T[type_cast_627_update_start_] 
        $T[type_cast_627_update_completed_] 
        // call184
        // start: Forward dependencies from call184 to transition type_cast_627_sample_start_
        type_cast_627_sample_start_ <-& (RPIPE_Concat_input_pipe_623_update_completed_)
        // done: Forward dependencies from call184 to transition type_cast_627_sample_start_
        ;;[type_cast_627_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_627_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_627_sample_start_ &-> (type_cast_627_Sample)
        type_cast_627_sample_completed_ <-& (type_cast_627_Sample)
        type_cast_627_sample_completed_ &-> ($null)
        type_cast_627_update_start_ &-> (type_cast_627_Update)
        type_cast_627_update_completed_ <-& (type_cast_627_Update)
        // Target expression
        // (as target) conv186
        // start: WAR dependencies for conv186
        // done: WAR dependencies for conv186
        // end:  		conv186 := ($cast ($uint<64>) call184 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add187
        // done: WAR dependencies for add187
        // start:  		$volatile add187 := (shl183 | conv186) $buffering 1
        //  file prog.linked.opt.aa, line 187
        // volatile! 
        // Source expression
        // (shl183 | conv186)
        // shl183
        // conv186
        // Target expression
        // (as target) add187
        // start: WAR dependencies for add187
        // done: WAR dependencies for add187
        // end:  		$volatile add187 := (shl183 | conv186) $buffering 1
        // start: WAR dependencies for shl189
        // done: WAR dependencies for shl189
        // start:  		$volatile shl189 := (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 188
        // volatile! 
        // Source expression
        // (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add187
        // Target expression
        // (as target) shl189
        // start: WAR dependencies for shl189
        // done: WAR dependencies for shl189
        // end:  		$volatile shl189 := (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call190 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 189
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_641_sample_start_] 
        $T[RPIPE_Concat_input_pipe_641_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_641_update_start_] 
        $T[RPIPE_Concat_input_pipe_641_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_641_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_641_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_641_sample_start_ &-> (RPIPE_Concat_input_pipe_641_Sample)
        RPIPE_Concat_input_pipe_641_sample_completed_ <-& (RPIPE_Concat_input_pipe_641_Sample)
        RPIPE_Concat_input_pipe_641_update_start_ <-& (RPIPE_Concat_input_pipe_641_sample_completed_)
        RPIPE_Concat_input_pipe_641_update_start_ &-> (RPIPE_Concat_input_pipe_641_Update)
        RPIPE_Concat_input_pipe_641_update_completed_ <-& (RPIPE_Concat_input_pipe_641_Update)
        // Target expression
        // (as target) call190
        // start: WAR dependencies for call190
        // done: WAR dependencies for call190
        // end:  		call190 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv192 := ($cast ($uint<64>) call190 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 190
        // Source expression
        // ($cast ($uint<64>) call190 )
        $T[type_cast_645_sample_start_] 
        $T[type_cast_645_sample_completed_] 
        $T[type_cast_645_update_start_] 
        $T[type_cast_645_update_completed_] 
        // call190
        // start: Forward dependencies from call190 to transition type_cast_645_sample_start_
        type_cast_645_sample_start_ <-& (RPIPE_Concat_input_pipe_641_update_completed_)
        // done: Forward dependencies from call190 to transition type_cast_645_sample_start_
        ;;[type_cast_645_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_645_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_645_sample_start_ &-> (type_cast_645_Sample)
        type_cast_645_sample_completed_ <-& (type_cast_645_Sample)
        type_cast_645_sample_completed_ &-> ($null)
        type_cast_645_update_start_ &-> (type_cast_645_Update)
        type_cast_645_update_completed_ <-& (type_cast_645_Update)
        // Target expression
        // (as target) conv192
        // start: WAR dependencies for conv192
        // done: WAR dependencies for conv192
        // end:  		conv192 := ($cast ($uint<64>) call190 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add193
        // done: WAR dependencies for add193
        // start:  		$volatile add193 := (shl189 | conv192) $buffering 1
        //  file prog.linked.opt.aa, line 191
        // volatile! 
        // Source expression
        // (shl189 | conv192)
        // shl189
        // conv192
        // Target expression
        // (as target) add193
        // start: WAR dependencies for add193
        // done: WAR dependencies for add193
        // end:  		$volatile add193 := (shl189 | conv192) $buffering 1
        // start: WAR dependencies for shl195
        // done: WAR dependencies for shl195
        // start:  		$volatile shl195 := (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 192
        // volatile! 
        // Source expression
        // (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add193
        // Target expression
        // (as target) shl195
        // start: WAR dependencies for shl195
        // done: WAR dependencies for shl195
        // end:  		$volatile shl195 := (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call196 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 193
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_659_sample_start_] 
        $T[RPIPE_Concat_input_pipe_659_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_659_update_start_] 
        $T[RPIPE_Concat_input_pipe_659_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_659_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_659_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_659_sample_start_ &-> (RPIPE_Concat_input_pipe_659_Sample)
        RPIPE_Concat_input_pipe_659_sample_completed_ <-& (RPIPE_Concat_input_pipe_659_Sample)
        RPIPE_Concat_input_pipe_659_update_start_ <-& (RPIPE_Concat_input_pipe_659_sample_completed_)
        RPIPE_Concat_input_pipe_659_update_start_ &-> (RPIPE_Concat_input_pipe_659_Update)
        RPIPE_Concat_input_pipe_659_update_completed_ <-& (RPIPE_Concat_input_pipe_659_Update)
        // Target expression
        // (as target) call196
        // start: WAR dependencies for call196
        // done: WAR dependencies for call196
        // end:  		call196 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv198 := ($cast ($uint<64>) call196 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 194
        // Source expression
        // ($cast ($uint<64>) call196 )
        $T[type_cast_663_sample_start_] 
        $T[type_cast_663_sample_completed_] 
        $T[type_cast_663_update_start_] 
        $T[type_cast_663_update_completed_] 
        // call196
        // start: Forward dependencies from call196 to transition type_cast_663_sample_start_
        type_cast_663_sample_start_ <-& (RPIPE_Concat_input_pipe_659_update_completed_)
        // done: Forward dependencies from call196 to transition type_cast_663_sample_start_
        ;;[type_cast_663_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_663_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_663_sample_start_ &-> (type_cast_663_Sample)
        type_cast_663_sample_completed_ <-& (type_cast_663_Sample)
        type_cast_663_sample_completed_ &-> ($null)
        type_cast_663_update_start_ &-> (type_cast_663_Update)
        type_cast_663_update_completed_ <-& (type_cast_663_Update)
        // Target expression
        // (as target) conv198
        // start: WAR dependencies for conv198
        // done: WAR dependencies for conv198
        // end:  		conv198 := ($cast ($uint<64>) call196 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add199
        // done: WAR dependencies for add199
        // start:  		$volatile add199 := (shl195 | conv198) $buffering 1
        //  file prog.linked.opt.aa, line 195
        // volatile! 
        // Source expression
        // (shl195 | conv198)
        // shl195
        // conv198
        // Target expression
        // (as target) add199
        // start: WAR dependencies for add199
        // done: WAR dependencies for add199
        // end:  		$volatile add199 := (shl195 | conv198) $buffering 1
        // start: WAR dependencies for shl201
        // done: WAR dependencies for shl201
        // start:  		$volatile shl201 := (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 196
        // volatile! 
        // Source expression
        // (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add199
        // Target expression
        // (as target) shl201
        // start: WAR dependencies for shl201
        // done: WAR dependencies for shl201
        // end:  		$volatile shl201 := (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call202 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 197
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_677_sample_start_] 
        $T[RPIPE_Concat_input_pipe_677_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_677_update_start_] 
        $T[RPIPE_Concat_input_pipe_677_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_677_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_677_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_677_sample_start_ &-> (RPIPE_Concat_input_pipe_677_Sample)
        RPIPE_Concat_input_pipe_677_sample_completed_ <-& (RPIPE_Concat_input_pipe_677_Sample)
        RPIPE_Concat_input_pipe_677_update_start_ <-& (RPIPE_Concat_input_pipe_677_sample_completed_)
        RPIPE_Concat_input_pipe_677_update_start_ &-> (RPIPE_Concat_input_pipe_677_Update)
        RPIPE_Concat_input_pipe_677_update_completed_ <-& (RPIPE_Concat_input_pipe_677_Update)
        // Target expression
        // (as target) call202
        // start: WAR dependencies for call202
        // done: WAR dependencies for call202
        // end:  		call202 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv204 := ($cast ($uint<64>) call202 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 198
        // Source expression
        // ($cast ($uint<64>) call202 )
        $T[type_cast_681_sample_start_] 
        $T[type_cast_681_sample_completed_] 
        $T[type_cast_681_update_start_] 
        $T[type_cast_681_update_completed_] 
        // call202
        // start: Forward dependencies from call202 to transition type_cast_681_sample_start_
        type_cast_681_sample_start_ <-& (RPIPE_Concat_input_pipe_677_update_completed_)
        // done: Forward dependencies from call202 to transition type_cast_681_sample_start_
        ;;[type_cast_681_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_681_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_681_sample_start_ &-> (type_cast_681_Sample)
        type_cast_681_sample_completed_ <-& (type_cast_681_Sample)
        type_cast_681_sample_completed_ &-> ($null)
        type_cast_681_update_start_ &-> (type_cast_681_Update)
        type_cast_681_update_completed_ <-& (type_cast_681_Update)
        // Target expression
        // (as target) conv204
        // start: WAR dependencies for conv204
        // done: WAR dependencies for conv204
        // end:  		conv204 := ($cast ($uint<64>) call202 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add205
        // done: WAR dependencies for add205
        // start:  		$volatile add205 := (shl201 | conv204) $buffering 1
        //  file prog.linked.opt.aa, line 199
        // volatile! 
        // Source expression
        // (shl201 | conv204)
        // shl201
        // conv204
        // Target expression
        // (as target) add205
        // start: WAR dependencies for add205
        // done: WAR dependencies for add205
        // end:  		$volatile add205 := (shl201 | conv204) $buffering 1
        // start: WAR dependencies for shl207
        // done: WAR dependencies for shl207
        // start:  		$volatile shl207 := (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 200
        // volatile! 
        // Source expression
        // (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add205
        // Target expression
        // (as target) shl207
        // start: WAR dependencies for shl207
        // done: WAR dependencies for shl207
        // end:  		$volatile shl207 := (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call208 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 201
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_695_sample_start_] 
        $T[RPIPE_Concat_input_pipe_695_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_695_update_start_] 
        $T[RPIPE_Concat_input_pipe_695_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_695_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_695_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_695_sample_start_ &-> (RPIPE_Concat_input_pipe_695_Sample)
        RPIPE_Concat_input_pipe_695_sample_completed_ <-& (RPIPE_Concat_input_pipe_695_Sample)
        RPIPE_Concat_input_pipe_695_update_start_ <-& (RPIPE_Concat_input_pipe_695_sample_completed_)
        RPIPE_Concat_input_pipe_695_update_start_ &-> (RPIPE_Concat_input_pipe_695_Update)
        RPIPE_Concat_input_pipe_695_update_completed_ <-& (RPIPE_Concat_input_pipe_695_Update)
        // Target expression
        // (as target) call208
        // start: WAR dependencies for call208
        // done: WAR dependencies for call208
        // end:  		call208 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv210 := ($cast ($uint<64>) call208 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 202
        // Source expression
        // ($cast ($uint<64>) call208 )
        $T[type_cast_699_sample_start_] 
        $T[type_cast_699_sample_completed_] 
        $T[type_cast_699_update_start_] 
        $T[type_cast_699_update_completed_] 
        // call208
        // start: Forward dependencies from call208 to transition type_cast_699_sample_start_
        type_cast_699_sample_start_ <-& (RPIPE_Concat_input_pipe_695_update_completed_)
        // done: Forward dependencies from call208 to transition type_cast_699_sample_start_
        ;;[type_cast_699_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_699_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_699_sample_start_ &-> (type_cast_699_Sample)
        type_cast_699_sample_completed_ <-& (type_cast_699_Sample)
        type_cast_699_sample_completed_ &-> ($null)
        type_cast_699_update_start_ &-> (type_cast_699_Update)
        type_cast_699_update_completed_ <-& (type_cast_699_Update)
        // Target expression
        // (as target) conv210
        // start: WAR dependencies for conv210
        // done: WAR dependencies for conv210
        // end:  		conv210 := ($cast ($uint<64>) call208 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add211
        // done: WAR dependencies for add211
        // start:  		$volatile add211 := (shl207 | conv210) $buffering 1
        //  file prog.linked.opt.aa, line 203
        // volatile! 
        // Source expression
        // (shl207 | conv210)
        // shl207
        // conv210
        // Target expression
        // (as target) add211
        // start: WAR dependencies for add211
        // done: WAR dependencies for add211
        // end:  		$volatile add211 := (shl207 | conv210) $buffering 1
        // start: WAR dependencies for shl213
        // done: WAR dependencies for shl213
        // start:  		$volatile shl213 := (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 204
        // volatile! 
        // Source expression
        // (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add211
        // Target expression
        // (as target) shl213
        // start: WAR dependencies for shl213
        // done: WAR dependencies for shl213
        // end:  		$volatile shl213 := (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call214 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 205
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_713_sample_start_] 
        $T[RPIPE_Concat_input_pipe_713_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_713_update_start_] 
        $T[RPIPE_Concat_input_pipe_713_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_713_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_713_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_713_sample_start_ &-> (RPIPE_Concat_input_pipe_713_Sample)
        RPIPE_Concat_input_pipe_713_sample_completed_ <-& (RPIPE_Concat_input_pipe_713_Sample)
        RPIPE_Concat_input_pipe_713_update_start_ <-& (RPIPE_Concat_input_pipe_713_sample_completed_)
        RPIPE_Concat_input_pipe_713_update_start_ &-> (RPIPE_Concat_input_pipe_713_Update)
        RPIPE_Concat_input_pipe_713_update_completed_ <-& (RPIPE_Concat_input_pipe_713_Update)
        // Target expression
        // (as target) call214
        // start: WAR dependencies for call214
        // done: WAR dependencies for call214
        // end:  		call214 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv216 := ($cast ($uint<64>) call214 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 206
        // Source expression
        // ($cast ($uint<64>) call214 )
        $T[type_cast_717_sample_start_] 
        $T[type_cast_717_sample_completed_] 
        $T[type_cast_717_update_start_] 
        $T[type_cast_717_update_completed_] 
        // call214
        // start: Forward dependencies from call214 to transition type_cast_717_sample_start_
        type_cast_717_sample_start_ <-& (RPIPE_Concat_input_pipe_713_update_completed_)
        // done: Forward dependencies from call214 to transition type_cast_717_sample_start_
        ;;[type_cast_717_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_717_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_717_sample_start_ &-> (type_cast_717_Sample)
        type_cast_717_sample_completed_ <-& (type_cast_717_Sample)
        type_cast_717_sample_completed_ &-> ($null)
        type_cast_717_update_start_ &-> (type_cast_717_Update)
        type_cast_717_update_completed_ <-& (type_cast_717_Update)
        // Target expression
        // (as target) conv216
        // start: WAR dependencies for conv216
        // done: WAR dependencies for conv216
        // end:  		conv216 := ($cast ($uint<64>) call214 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add217
        // done: WAR dependencies for add217
        // start:  		$volatile add217 := (shl213 | conv216) $buffering 1
        //  file prog.linked.opt.aa, line 207
        // volatile! 
        // Source expression
        // (shl213 | conv216)
        // shl213
        // conv216
        // Target expression
        // (as target) add217
        // start: WAR dependencies for add217
        // done: WAR dependencies for add217
        // end:  		$volatile add217 := (shl213 | conv216) $buffering 1
        // start: WAR dependencies for shl219
        // done: WAR dependencies for shl219
        // start:  		$volatile shl219 := (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 208
        // volatile! 
        // Source expression
        // (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add217
        // Target expression
        // (as target) shl219
        // start: WAR dependencies for shl219
        // done: WAR dependencies for shl219
        // end:  		$volatile shl219 := (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call220 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 209
        // Source expression
        // Concat_input_pipe
        $T[RPIPE_Concat_input_pipe_731_sample_start_] 
        $T[RPIPE_Concat_input_pipe_731_sample_completed_] 
        $T[RPIPE_Concat_input_pipe_731_update_start_] 
        $T[RPIPE_Concat_input_pipe_731_update_completed_] 
        ;;[RPIPE_Concat_input_pipe_731_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Concat_input_pipe_731_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Concat_input_pipe_731_sample_start_ &-> (RPIPE_Concat_input_pipe_731_Sample)
        RPIPE_Concat_input_pipe_731_sample_completed_ <-& (RPIPE_Concat_input_pipe_731_Sample)
        RPIPE_Concat_input_pipe_731_update_start_ <-& (RPIPE_Concat_input_pipe_731_sample_completed_)
        RPIPE_Concat_input_pipe_731_update_start_ &-> (RPIPE_Concat_input_pipe_731_Update)
        RPIPE_Concat_input_pipe_731_update_completed_ <-& (RPIPE_Concat_input_pipe_731_Update)
        // Target expression
        // (as target) call220
        // start: WAR dependencies for call220
        // done: WAR dependencies for call220
        // end:  		call220 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv222 := ($cast ($uint<64>) call220 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 210
        // Source expression
        // ($cast ($uint<64>) call220 )
        $T[type_cast_735_sample_start_] 
        $T[type_cast_735_sample_completed_] 
        $T[type_cast_735_update_start_] 
        $T[type_cast_735_update_completed_] 
        // call220
        // start: Forward dependencies from call220 to transition type_cast_735_sample_start_
        type_cast_735_sample_start_ <-& (RPIPE_Concat_input_pipe_731_update_completed_)
        // done: Forward dependencies from call220 to transition type_cast_735_sample_start_
        ;;[type_cast_735_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_735_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_735_sample_start_ &-> (type_cast_735_Sample)
        type_cast_735_sample_completed_ <-& (type_cast_735_Sample)
        type_cast_735_sample_completed_ &-> ($null)
        type_cast_735_update_start_ &-> (type_cast_735_Update)
        type_cast_735_update_completed_ <-& (type_cast_735_Update)
        // Target expression
        // (as target) conv222
        // start: WAR dependencies for conv222
        // done: WAR dependencies for conv222
        // end:  		conv222 := ($cast ($uint<64>) call220 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add223
        // done: WAR dependencies for add223
        // start:  		$volatile add223 := (shl219 | conv222) $buffering 1
        //  file prog.linked.opt.aa, line 211
        // volatile! 
        // Source expression
        // (shl219 | conv222)
        // shl219
        // conv222
        // Target expression
        // (as target) add223
        // start: WAR dependencies for add223
        // done: WAR dependencies for add223
        // end:  		$volatile add223 := (shl219 | conv222) $buffering 1
        // start:  		->(arrayidx227) := add223 $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 212
        // Source expression
        // add223
        // Target expression
        // ->(arrayidx227)
        $T[ptr_deref_743_sample_start_] 
        $T[ptr_deref_743_sample_completed_] 
        $T[ptr_deref_743_update_start_] 
        $T[ptr_deref_743_update_completed_] 
        $T[ptr_deref_743_base_address_calculated] 
        // arrayidx227
        $T[ptr_deref_743_word_address_calculated] 
        $T[ptr_deref_743_root_address_calculated] 
        $T[ptr_deref_743_base_address_resized] 
        ;;[ptr_deref_743_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_743_base_address_calculated &-> (ptr_deref_743_base_addr_resize)
        ptr_deref_743_base_address_resized <-& (ptr_deref_743_base_addr_resize)
        ;;[ptr_deref_743_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_743_base_address_resized &-> (ptr_deref_743_base_plus_offset)
        ptr_deref_743_root_address_calculated <-& (ptr_deref_743_base_plus_offset)
        ;;[ptr_deref_743_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_743_root_address_calculated &-> (ptr_deref_743_word_addrgen)
        ptr_deref_743_word_address_calculated <-& (ptr_deref_743_word_addrgen)
        ;;[ptr_deref_743_Sample] 
        {
          ;;[ptr_deref_743_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_743_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_743_sample_start_ <-& (ptr_deref_743_word_address_calculated)
        ptr_deref_743_sample_start_ &-> (ptr_deref_743_Sample)
        ptr_deref_743_sample_completed_ <-& (ptr_deref_743_Sample)
        ptr_deref_743_sample_completed_ &-> ($null)
        ptr_deref_743_update_start_ &-> (ptr_deref_743_Update)
        ptr_deref_743_update_completed_ <-& (ptr_deref_743_Update)
        // start: Forward dependencies from arrayidx227 to transition ptr_deref_743_base_address_calculated
        ptr_deref_743_base_address_calculated <-& (addr_of_607_update_completed_)
        // done: Forward dependencies from arrayidx227 to transition ptr_deref_743_base_address_calculated
        ptr_deref_743_sample_start_ <-& (ptr_deref_743_base_address_calculated)
        // start: Forward dependencies from add223 to transition ptr_deref_743_sample_start_
        ptr_deref_743_sample_start_ <-& (type_cast_735_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_614_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_627_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_645_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_663_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_681_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_699_update_completed_)
        ptr_deref_743_sample_start_ <-& (type_cast_717_update_completed_)
        // done: Forward dependencies from add223 to transition ptr_deref_743_sample_start_
        // end:  		->(arrayidx227) := add223 $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for indvarx_xnext477
        // ignored out-of-scope w_root 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext477
        // start:  		$volatile indvarx_xnext477 := (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 213
        // volatile! 
        // Source expression
        // (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar476
        // Target expression
        // (as target) indvarx_xnext477
        // start: WAR dependencies for indvarx_xnext477
        // ignored out-of-scope w_root 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext477
        // end:  		$volatile indvarx_xnext477 := (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond
        // start:  		$volatile exitcond := (indvarx_xnext477 == tmp487) $buffering 1
        //  file prog.linked.opt.aa, line 214
        // volatile! 
        // Source expression
        // (indvarx_xnext477 == tmp487)
        // indvarx_xnext477
        // tmp487
        // Target expression
        // (as target) exitcond
        // start: WAR dependencies for exitcond
        // ignored out-of-scope w_root 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond
        // end:  		$volatile exitcond := (indvarx_xnext477 == tmp487) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_1
        //  ptr_deref_743 store
        // pipe read/write dependencies for pipe Concat_input_pipe
        // read-dependencies for pipe Concat_input_pipe
        RPIPE_Concat_input_pipe_623_sample_start_ <-& (RPIPE_Concat_input_pipe_610_update_completed_)
        RPIPE_Concat_input_pipe_641_sample_start_ <-& (RPIPE_Concat_input_pipe_623_update_completed_)
        RPIPE_Concat_input_pipe_659_sample_start_ <-& (RPIPE_Concat_input_pipe_641_update_completed_)
        RPIPE_Concat_input_pipe_677_sample_start_ <-& (RPIPE_Concat_input_pipe_659_update_completed_)
        RPIPE_Concat_input_pipe_695_sample_start_ <-& (RPIPE_Concat_input_pipe_677_update_completed_)
        RPIPE_Concat_input_pipe_713_sample_start_ <-& (RPIPE_Concat_input_pipe_695_update_completed_)
        RPIPE_Concat_input_pipe_731_sample_start_ <-& (RPIPE_Concat_input_pipe_713_update_completed_)
        // write-dependencies for pipe Concat_input_pipe
        // signal write dependencies for Concat_input_pipe
      }
      assign_stmt_608_to_assign_stmt_756__entry__ |-> (assign_stmt_608_to_assign_stmt_756)
      assign_stmt_608_to_assign_stmt_756__exit__ <-| (assign_stmt_608_to_assign_stmt_756)
      // if-statement  
      //  file prog.linked.opt.aa, line 215
      ;;[if_stmt_757_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_757__entry__ |-> (if_stmt_757_dead_link)
      if_stmt_757__exit__ <-| (if_stmt_757_dead_link)
      ;;[if_stmt_757_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_757__entry__ |-> (if_stmt_757_eval_test)
      $P [R_exitcond_758_place]
      R_exitcond_758_place <-| (if_stmt_757_eval_test)
      ;;[if_stmt_757_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_757_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond_758_place |-> (if_stmt_757_if_link if_stmt_757_else_link)
      $P [forx_xbody177_forx_xend231x_xloopexit]
      forx_xbody177_forx_xend231x_xloopexit <-| (if_stmt_757_if_link)
      $P [forx_xbody177_forx_xbody177]
      forx_xbody177_forx_xbody177 <-| (if_stmt_757_else_link)
      ::[call_stmt_768] 
      {
        // start: 		$call timer () (call233 ) 
        //  file prog.linked.opt.aa, line 226
        $T[call_stmt_768_sample_start_] 
        $T[call_stmt_768_sample_completed_] 
        $T[call_stmt_768_update_start_] 
        $T[call_stmt_768_update_completed_] 
        ;;[call_stmt_768_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_768_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_768_sample_start_ &-> (call_stmt_768_Sample)
        call_stmt_768_sample_completed_ <-& (call_stmt_768_Sample)
        call_stmt_768_sample_completed_ &-> ($null)
        call_stmt_768_update_start_ &-> (call_stmt_768_Update)
        call_stmt_768_update_completed_ <-& (call_stmt_768_Update)
        // Call output argument 0
        // (as target) call233
        // start: WAR dependencies for call233
        // done: WAR dependencies for call233
        // end: 		$call timer () (call233 ) 
        // load-store dependencies..
        // pipe read/write dependencies for pipe timer_resp
        // read-dependencies for pipe timer_resp
        // write-dependencies for pipe timer_resp
        // signal write dependencies for timer_resp
        // pipe read/write dependencies for pipe timer_req
        // read-dependencies for pipe timer_req
        // write-dependencies for pipe timer_req
        // signal write dependencies for timer_req
      }
      call_stmt_768__entry__ |-> (call_stmt_768)
      call_stmt_768__exit__ <-| (call_stmt_768)
      ::[assign_stmt_775_to_assign_stmt_787] 
      {
        // start: WAR dependencies for conv243
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for conv243
        // start:  		$volatile conv243 := (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 228
        // volatile! 
        // Source expression
        // (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        // shr457
        // Target expression
        // (as target) conv243
        // start: WAR dependencies for conv243
        // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for conv243
        // end:  		$volatile conv243 := (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
        // start: WAR dependencies for conv268
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for conv268
        // start:  		$volatile conv268 := (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 229
        // volatile! 
        // Source expression
        // (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        // shr117458
        // Target expression
        // (as target) conv268
        // start: WAR dependencies for conv268
        // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for conv268
        // end:  		$volatile conv268 := (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
        // start: WAR dependencies for shr304
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for shr304
        // start:  		$volatile shr304 := (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        //  file prog.linked.opt.aa, line 230
        // volatile! 
        // Source expression
        // (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
        // mul103
        // Target expression
        // (as target) shr304
        // start: WAR dependencies for shr304
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for shr304
        // end:  		$volatile shr304 := (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_775_to_assign_stmt_787__entry__ |-> (assign_stmt_775_to_assign_stmt_787)
      assign_stmt_775_to_assign_stmt_787__exit__ <-| (assign_stmt_775_to_assign_stmt_787)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 244
      <o> [do_while_stmt_817]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_817__entry__] 
        $P[do_while_stmt_817__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_817_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_819
          // 			$phi add_outx_x1 := 			  ($cast ($uint<16>) add_outx_x2504 ) $on   $loopback 			  add_outx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_819_sample_start_] 
          $T[phi_stmt_819_sample_completed_] 
          $T[phi_stmt_819_update_start_] 
          $T[phi_stmt_819_update_completed_] 
          $T[phi_stmt_819_sample_start__ps] 
          phi_stmt_819_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_819_sample_completed__ps] 
          phi_stmt_819_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_819_update_start__ps] 
          phi_stmt_819_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_819_update_completed__ps] 
          phi_stmt_819_update_completed_ <-& (phi_stmt_819_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_819_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_819_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_819_update_start_)
          $T[phi_stmt_819_loopback_trigger] 
          phi_stmt_819_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_819_loopback_sample_req] 
          $T[phi_stmt_819_loopback_sample_req_ps] 
          phi_stmt_819_loopback_sample_req <-& (phi_stmt_819_loopback_sample_req_ps)
          phi_stmt_819_loopback_sample_req &-> ($null)
          $T[phi_stmt_819_entry_trigger] 
          phi_stmt_819_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_819_entry_sample_req] 
          $T[phi_stmt_819_entry_sample_req_ps] 
          phi_stmt_819_entry_sample_req <-& (phi_stmt_819_entry_sample_req_ps)
          phi_stmt_819_entry_sample_req &-> ($null)
          phi_stmt_819_update_start_ o<-& (phi_stmt_819_update_completed_ 0)
          phi_stmt_819_sample_start_ o<-& (phi_stmt_819_sample_completed_ 1)
          $T[phi_stmt_819_merged_reqs] 
          $T[phi_stmt_819_phi_mux_ack] 
          $T[phi_stmt_819_phi_mux_ack_ps] 
          phi_stmt_819_phi_mux_ack_ps <-& (phi_stmt_819_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_819_update_completed_)
          $T[type_cast_822_sample_start__ps] 
          $T[type_cast_822_sample_completed__ps] 
          $T[type_cast_822_update_start__ps] 
          $T[type_cast_822_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) add_outx_x2504 )
          $T[type_cast_822_sample_start_] 
          $T[type_cast_822_sample_completed_] 
          $T[type_cast_822_update_start_] 
          $T[type_cast_822_update_completed_] 
          // add_outx_x2504
          // start: Forward dependencies from add_outx_x2504 to transition type_cast_822_sample_start_
          // done: Forward dependencies from add_outx_x2504 to transition type_cast_822_sample_start_
          ;;[type_cast_822_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_822_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_822_sample_start_ &-> (type_cast_822_Sample)
          type_cast_822_sample_completed_ <-& (type_cast_822_Sample)
          type_cast_822_sample_completed_ &-> ($null)
          type_cast_822_update_start_ &-> (type_cast_822_Update)
          type_cast_822_update_completed_ <-& (type_cast_822_Update)
          // RAW reenables for add_outx_x2504
          // self-release: 
          type_cast_822_sample_start_ o<-& (type_cast_822_sample_completed_ 1)
          $null &-> (type_cast_822_update_start_)
          type_cast_822_update_start_ o<-& (type_cast_822_update_completed_ 0)
          // Phi start dependency
          type_cast_822_sample_start_ <-& (type_cast_822_sample_start__ps)
          type_cast_822_update_start_ <-& (type_cast_822_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) add_outx_x2504 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_822_sample_completed__ps <-& (type_cast_822_sample_completed_)
          type_cast_822_update_completed__ps <-& (type_cast_822_update_completed_)
          $T[R_add_outx_x1_at_entry_823_sample_start__ps] 
          $T[R_add_outx_x1_at_entry_823_sample_completed__ps] 
          $T[R_add_outx_x1_at_entry_823_update_start__ps] 
          $T[R_add_outx_x1_at_entry_823_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_add_outx_x1_at_entry_823_sample_start_] 
          $T[R_add_outx_x1_at_entry_823_sample_completed_] 
          R_add_outx_x1_at_entry_823_sample_completed_ <-& (R_add_outx_x1_at_entry_823_sample_start_)
          $T[R_add_outx_x1_at_entry_823_update_start_] 
          $T [R_add_outx_x1_at_entry_823_update_completed_] $delay 
          R_add_outx_x1_at_entry_823_update_completed_ <-& (R_add_outx_x1_at_entry_823_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_add_outx_x1_at_entry_823_sample_start_ <-& (R_add_outx_x1_at_entry_823_sample_start__ps)
          R_add_outx_x1_at_entry_823_update_start_ <-& (R_add_outx_x1_at_entry_823_update_start__ps)
          // Phi complete dependency.
          R_add_outx_x1_at_entry_823_sample_completed__ps <-& (R_add_outx_x1_at_entry_823_sample_completed_)
          R_add_outx_x1_at_entry_823_update_completed__ps <-& (R_add_outx_x1_at_entry_823_update_completed_)
          $phisequencer [ phi_stmt_819_phi_seq] : 
          phi_stmt_819_loopback_trigger type_cast_822_sample_start__ps type_cast_822_sample_completed__ps type_cast_822_update_start__ps type_cast_822_update_completed__ps phi_stmt_819_entry_trigger R_add_outx_x1_at_entry_823_sample_start__ps R_add_outx_x1_at_entry_823_sample_completed__ps R_add_outx_x1_at_entry_823_update_start__ps R_add_outx_x1_at_entry_823_update_completed__ps :
          phi_stmt_819_sample_start__ps phi_stmt_819_sample_completed__ps phi_stmt_819_update_start__ps phi_stmt_819_update_completed__ps :
          phi_stmt_819_loopback_sample_req_ps phi_stmt_819_entry_sample_req_ps : 
          phi_stmt_819_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_819
          // start:  PHI statement phi_stmt_824
          // 			$phi add_inp1x_x1 := 			  ($cast ($uint<16>) add_inp1x_x0 ) $on   $loopback 			  add_inp1x_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_824_sample_start_] 
          $T[phi_stmt_824_sample_completed_] 
          $T[phi_stmt_824_update_start_] 
          $T[phi_stmt_824_update_completed_] 
          $T[phi_stmt_824_sample_start__ps] 
          phi_stmt_824_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_824_sample_completed__ps] 
          phi_stmt_824_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_824_update_start__ps] 
          phi_stmt_824_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_824_update_completed__ps] 
          phi_stmt_824_update_completed_ <-& (phi_stmt_824_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_824_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_824_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_824_update_start_)
          $T[phi_stmt_824_loopback_trigger] 
          phi_stmt_824_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_824_loopback_sample_req] 
          $T[phi_stmt_824_loopback_sample_req_ps] 
          phi_stmt_824_loopback_sample_req <-& (phi_stmt_824_loopback_sample_req_ps)
          phi_stmt_824_loopback_sample_req &-> ($null)
          $T[phi_stmt_824_entry_trigger] 
          phi_stmt_824_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_824_entry_sample_req] 
          $T[phi_stmt_824_entry_sample_req_ps] 
          phi_stmt_824_entry_sample_req <-& (phi_stmt_824_entry_sample_req_ps)
          phi_stmt_824_entry_sample_req &-> ($null)
          phi_stmt_824_update_start_ o<-& (phi_stmt_824_update_completed_ 0)
          phi_stmt_824_sample_start_ o<-& (phi_stmt_824_sample_completed_ 1)
          $T[phi_stmt_824_merged_reqs] 
          $T[phi_stmt_824_phi_mux_ack] 
          $T[phi_stmt_824_phi_mux_ack_ps] 
          phi_stmt_824_phi_mux_ack_ps <-& (phi_stmt_824_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_824_update_completed_)
          $T[type_cast_827_sample_start__ps] 
          $T[type_cast_827_sample_completed__ps] 
          $T[type_cast_827_update_start__ps] 
          $T[type_cast_827_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) add_inp1x_x0 )
          $T[type_cast_827_sample_start_] 
          $T[type_cast_827_sample_completed_] 
          $T[type_cast_827_update_start_] 
          $T[type_cast_827_update_completed_] 
          // add_inp1x_x0
          // start: Forward dependencies from add_inp1x_x0 to transition type_cast_827_sample_start_
          // done: Forward dependencies from add_inp1x_x0 to transition type_cast_827_sample_start_
          ;;[type_cast_827_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_827_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_827_sample_start_ &-> (type_cast_827_Sample)
          type_cast_827_sample_completed_ <-& (type_cast_827_Sample)
          type_cast_827_sample_completed_ &-> ($null)
          type_cast_827_update_start_ &-> (type_cast_827_Update)
          type_cast_827_update_completed_ <-& (type_cast_827_Update)
          // RAW reenables for add_inp1x_x0
          // self-release: 
          type_cast_827_sample_start_ o<-& (type_cast_827_sample_completed_ 1)
          $null &-> (type_cast_827_update_start_)
          type_cast_827_update_start_ o<-& (type_cast_827_update_completed_ 0)
          // Phi start dependency
          type_cast_827_sample_start_ <-& (type_cast_827_sample_start__ps)
          type_cast_827_update_start_ <-& (type_cast_827_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) add_inp1x_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_827_sample_completed__ps <-& (type_cast_827_sample_completed_)
          type_cast_827_update_completed__ps <-& (type_cast_827_update_completed_)
          $T[R_add_inp1x_x1_at_entry_828_sample_start__ps] 
          $T[R_add_inp1x_x1_at_entry_828_sample_completed__ps] 
          $T[R_add_inp1x_x1_at_entry_828_update_start__ps] 
          $T[R_add_inp1x_x1_at_entry_828_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_add_inp1x_x1_at_entry_828_sample_start_] 
          $T[R_add_inp1x_x1_at_entry_828_sample_completed_] 
          R_add_inp1x_x1_at_entry_828_sample_completed_ <-& (R_add_inp1x_x1_at_entry_828_sample_start_)
          $T[R_add_inp1x_x1_at_entry_828_update_start_] 
          $T [R_add_inp1x_x1_at_entry_828_update_completed_] $delay 
          R_add_inp1x_x1_at_entry_828_update_completed_ <-& (R_add_inp1x_x1_at_entry_828_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_add_inp1x_x1_at_entry_828_sample_start_ <-& (R_add_inp1x_x1_at_entry_828_sample_start__ps)
          R_add_inp1x_x1_at_entry_828_update_start_ <-& (R_add_inp1x_x1_at_entry_828_update_start__ps)
          // Phi complete dependency.
          R_add_inp1x_x1_at_entry_828_sample_completed__ps <-& (R_add_inp1x_x1_at_entry_828_sample_completed_)
          R_add_inp1x_x1_at_entry_828_update_completed__ps <-& (R_add_inp1x_x1_at_entry_828_update_completed_)
          $phisequencer [ phi_stmt_824_phi_seq] : 
          phi_stmt_824_loopback_trigger type_cast_827_sample_start__ps type_cast_827_sample_completed__ps type_cast_827_update_start__ps type_cast_827_update_completed__ps phi_stmt_824_entry_trigger R_add_inp1x_x1_at_entry_828_sample_start__ps R_add_inp1x_x1_at_entry_828_sample_completed__ps R_add_inp1x_x1_at_entry_828_update_start__ps R_add_inp1x_x1_at_entry_828_update_completed__ps :
          phi_stmt_824_sample_start__ps phi_stmt_824_sample_completed__ps phi_stmt_824_update_start__ps phi_stmt_824_update_completed__ps :
          phi_stmt_824_loopback_sample_req_ps phi_stmt_824_entry_sample_req_ps : 
          phi_stmt_824_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_824
          // start:  PHI statement phi_stmt_829
          // 			$phi add_inp2x_x1 := 			  ($cast ($uint<16>) add_inp2x_x0506 ) $on   $loopback 			  add_inp2x_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_829_sample_start_] 
          $T[phi_stmt_829_sample_completed_] 
          $T[phi_stmt_829_update_start_] 
          $T[phi_stmt_829_update_completed_] 
          $T[phi_stmt_829_sample_start__ps] 
          phi_stmt_829_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_829_sample_completed__ps] 
          phi_stmt_829_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_829_update_start__ps] 
          phi_stmt_829_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_829_update_completed__ps] 
          phi_stmt_829_update_completed_ <-& (phi_stmt_829_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_829_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_829_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_829_update_start_)
          $T[phi_stmt_829_loopback_trigger] 
          phi_stmt_829_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_829_loopback_sample_req] 
          $T[phi_stmt_829_loopback_sample_req_ps] 
          phi_stmt_829_loopback_sample_req <-& (phi_stmt_829_loopback_sample_req_ps)
          phi_stmt_829_loopback_sample_req &-> ($null)
          $T[phi_stmt_829_entry_trigger] 
          phi_stmt_829_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_829_entry_sample_req] 
          $T[phi_stmt_829_entry_sample_req_ps] 
          phi_stmt_829_entry_sample_req <-& (phi_stmt_829_entry_sample_req_ps)
          phi_stmt_829_entry_sample_req &-> ($null)
          phi_stmt_829_update_start_ o<-& (phi_stmt_829_update_completed_ 0)
          phi_stmt_829_sample_start_ o<-& (phi_stmt_829_sample_completed_ 1)
          $T[phi_stmt_829_merged_reqs] 
          $T[phi_stmt_829_phi_mux_ack] 
          $T[phi_stmt_829_phi_mux_ack_ps] 
          phi_stmt_829_phi_mux_ack_ps <-& (phi_stmt_829_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_829_update_completed_)
          $T[type_cast_832_sample_start__ps] 
          $T[type_cast_832_sample_completed__ps] 
          $T[type_cast_832_update_start__ps] 
          $T[type_cast_832_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) add_inp2x_x0506 )
          $T[type_cast_832_sample_start_] 
          $T[type_cast_832_sample_completed_] 
          $T[type_cast_832_update_start_] 
          $T[type_cast_832_update_completed_] 
          // add_inp2x_x0506
          // start: Forward dependencies from add_inp2x_x0506 to transition type_cast_832_sample_start_
          // done: Forward dependencies from add_inp2x_x0506 to transition type_cast_832_sample_start_
          ;;[type_cast_832_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_832_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_832_sample_start_ &-> (type_cast_832_Sample)
          type_cast_832_sample_completed_ <-& (type_cast_832_Sample)
          type_cast_832_sample_completed_ &-> ($null)
          type_cast_832_update_start_ &-> (type_cast_832_Update)
          type_cast_832_update_completed_ <-& (type_cast_832_Update)
          // RAW reenables for add_inp2x_x0506
          // self-release: 
          type_cast_832_sample_start_ o<-& (type_cast_832_sample_completed_ 1)
          $null &-> (type_cast_832_update_start_)
          type_cast_832_update_start_ o<-& (type_cast_832_update_completed_ 0)
          // Phi start dependency
          type_cast_832_sample_start_ <-& (type_cast_832_sample_start__ps)
          type_cast_832_update_start_ <-& (type_cast_832_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) add_inp2x_x0506 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_832_sample_completed__ps <-& (type_cast_832_sample_completed_)
          type_cast_832_update_completed__ps <-& (type_cast_832_update_completed_)
          $T[R_add_inp2x_x1_at_entry_833_sample_start__ps] 
          $T[R_add_inp2x_x1_at_entry_833_sample_completed__ps] 
          $T[R_add_inp2x_x1_at_entry_833_update_start__ps] 
          $T[R_add_inp2x_x1_at_entry_833_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_add_inp2x_x1_at_entry_833_sample_start_] 
          $T[R_add_inp2x_x1_at_entry_833_sample_completed_] 
          R_add_inp2x_x1_at_entry_833_sample_completed_ <-& (R_add_inp2x_x1_at_entry_833_sample_start_)
          $T[R_add_inp2x_x1_at_entry_833_update_start_] 
          $T [R_add_inp2x_x1_at_entry_833_update_completed_] $delay 
          R_add_inp2x_x1_at_entry_833_update_completed_ <-& (R_add_inp2x_x1_at_entry_833_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_add_inp2x_x1_at_entry_833_sample_start_ <-& (R_add_inp2x_x1_at_entry_833_sample_start__ps)
          R_add_inp2x_x1_at_entry_833_update_start_ <-& (R_add_inp2x_x1_at_entry_833_update_start__ps)
          // Phi complete dependency.
          R_add_inp2x_x1_at_entry_833_sample_completed__ps <-& (R_add_inp2x_x1_at_entry_833_sample_completed_)
          R_add_inp2x_x1_at_entry_833_update_completed__ps <-& (R_add_inp2x_x1_at_entry_833_update_completed_)
          $phisequencer [ phi_stmt_829_phi_seq] : 
          phi_stmt_829_loopback_trigger type_cast_832_sample_start__ps type_cast_832_sample_completed__ps type_cast_832_update_start__ps type_cast_832_update_completed__ps phi_stmt_829_entry_trigger R_add_inp2x_x1_at_entry_833_sample_start__ps R_add_inp2x_x1_at_entry_833_sample_completed__ps R_add_inp2x_x1_at_entry_833_update_start__ps R_add_inp2x_x1_at_entry_833_update_completed__ps :
          phi_stmt_829_sample_start__ps phi_stmt_829_sample_completed__ps phi_stmt_829_update_start__ps phi_stmt_829_update_completed__ps :
          phi_stmt_829_loopback_sample_req_ps phi_stmt_829_entry_sample_req_ps : 
          phi_stmt_829_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_829
          // start:  PHI statement phi_stmt_834
          // 			$phi count_inp1x_x1 := 			  ($cast ($uint<16>) count_inp1x_x2 ) $on   $loopback 			  count_inp1x_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_834_sample_start_] 
          $T[phi_stmt_834_sample_completed_] 
          $T[phi_stmt_834_update_start_] 
          $T[phi_stmt_834_update_completed_] 
          $T[phi_stmt_834_sample_start__ps] 
          phi_stmt_834_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_834_sample_completed__ps] 
          phi_stmt_834_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_834_update_start__ps] 
          phi_stmt_834_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_834_update_completed__ps] 
          phi_stmt_834_update_completed_ <-& (phi_stmt_834_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_834_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_834_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_834_update_start_)
          $T[phi_stmt_834_loopback_trigger] 
          phi_stmt_834_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_834_loopback_sample_req] 
          $T[phi_stmt_834_loopback_sample_req_ps] 
          phi_stmt_834_loopback_sample_req <-& (phi_stmt_834_loopback_sample_req_ps)
          phi_stmt_834_loopback_sample_req &-> ($null)
          $T[phi_stmt_834_entry_trigger] 
          phi_stmt_834_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_834_entry_sample_req] 
          $T[phi_stmt_834_entry_sample_req_ps] 
          phi_stmt_834_entry_sample_req <-& (phi_stmt_834_entry_sample_req_ps)
          phi_stmt_834_entry_sample_req &-> ($null)
          phi_stmt_834_update_start_ o<-& (phi_stmt_834_update_completed_ 0)
          phi_stmt_834_sample_start_ o<-& (phi_stmt_834_sample_completed_ 1)
          $T[phi_stmt_834_merged_reqs] 
          $T[phi_stmt_834_phi_mux_ack] 
          $T[phi_stmt_834_phi_mux_ack_ps] 
          phi_stmt_834_phi_mux_ack_ps <-& (phi_stmt_834_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_834_update_completed_)
          $T[type_cast_837_sample_start__ps] 
          $T[type_cast_837_sample_completed__ps] 
          $T[type_cast_837_update_start__ps] 
          $T[type_cast_837_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) count_inp1x_x2 )
          $T[type_cast_837_sample_start_] 
          $T[type_cast_837_sample_completed_] 
          $T[type_cast_837_update_start_] 
          $T[type_cast_837_update_completed_] 
          // count_inp1x_x2
          // start: Forward dependencies from count_inp1x_x2 to transition type_cast_837_sample_start_
          // done: Forward dependencies from count_inp1x_x2 to transition type_cast_837_sample_start_
          ;;[type_cast_837_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_837_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_837_sample_start_ &-> (type_cast_837_Sample)
          type_cast_837_sample_completed_ <-& (type_cast_837_Sample)
          type_cast_837_sample_completed_ &-> ($null)
          type_cast_837_update_start_ &-> (type_cast_837_Update)
          type_cast_837_update_completed_ <-& (type_cast_837_Update)
          // RAW reenables for count_inp1x_x2
          // self-release: 
          type_cast_837_sample_start_ o<-& (type_cast_837_sample_completed_ 1)
          $null &-> (type_cast_837_update_start_)
          type_cast_837_update_start_ o<-& (type_cast_837_update_completed_ 0)
          // Phi start dependency
          type_cast_837_sample_start_ <-& (type_cast_837_sample_start__ps)
          type_cast_837_update_start_ <-& (type_cast_837_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) count_inp1x_x2 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_837_sample_completed__ps <-& (type_cast_837_sample_completed_)
          type_cast_837_update_completed__ps <-& (type_cast_837_update_completed_)
          $T[R_count_inp1x_x1_at_entry_838_sample_start__ps] 
          $T[R_count_inp1x_x1_at_entry_838_sample_completed__ps] 
          $T[R_count_inp1x_x1_at_entry_838_update_start__ps] 
          $T[R_count_inp1x_x1_at_entry_838_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_count_inp1x_x1_at_entry_838_sample_start_] 
          $T[R_count_inp1x_x1_at_entry_838_sample_completed_] 
          R_count_inp1x_x1_at_entry_838_sample_completed_ <-& (R_count_inp1x_x1_at_entry_838_sample_start_)
          $T[R_count_inp1x_x1_at_entry_838_update_start_] 
          $T [R_count_inp1x_x1_at_entry_838_update_completed_] $delay 
          R_count_inp1x_x1_at_entry_838_update_completed_ <-& (R_count_inp1x_x1_at_entry_838_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_count_inp1x_x1_at_entry_838_sample_start_ <-& (R_count_inp1x_x1_at_entry_838_sample_start__ps)
          R_count_inp1x_x1_at_entry_838_update_start_ <-& (R_count_inp1x_x1_at_entry_838_update_start__ps)
          // Phi complete dependency.
          R_count_inp1x_x1_at_entry_838_sample_completed__ps <-& (R_count_inp1x_x1_at_entry_838_sample_completed_)
          R_count_inp1x_x1_at_entry_838_update_completed__ps <-& (R_count_inp1x_x1_at_entry_838_update_completed_)
          $phisequencer [ phi_stmt_834_phi_seq] : 
          phi_stmt_834_loopback_trigger type_cast_837_sample_start__ps type_cast_837_sample_completed__ps type_cast_837_update_start__ps type_cast_837_update_completed__ps phi_stmt_834_entry_trigger R_count_inp1x_x1_at_entry_838_sample_start__ps R_count_inp1x_x1_at_entry_838_sample_completed__ps R_count_inp1x_x1_at_entry_838_update_start__ps R_count_inp1x_x1_at_entry_838_update_completed__ps :
          phi_stmt_834_sample_start__ps phi_stmt_834_sample_completed__ps phi_stmt_834_update_start__ps phi_stmt_834_update_completed__ps :
          phi_stmt_834_loopback_sample_req_ps phi_stmt_834_entry_sample_req_ps : 
          phi_stmt_834_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_834
          // start:  PHI statement phi_stmt_839
          // 			$phi count_inp2x_x1 := 			  ($cast ($uint<16>) count_inp2x_x2 ) $on   $loopback 			  count_inp2x_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_839_sample_start_] 
          $T[phi_stmt_839_sample_completed_] 
          $T[phi_stmt_839_update_start_] 
          $T[phi_stmt_839_update_completed_] 
          $T[phi_stmt_839_sample_start__ps] 
          phi_stmt_839_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_839_sample_completed__ps] 
          phi_stmt_839_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_839_update_start__ps] 
          phi_stmt_839_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_839_update_completed__ps] 
          phi_stmt_839_update_completed_ <-& (phi_stmt_839_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_839_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_839_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_839_update_start_)
          $T[phi_stmt_839_loopback_trigger] 
          phi_stmt_839_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_839_loopback_sample_req] 
          $T[phi_stmt_839_loopback_sample_req_ps] 
          phi_stmt_839_loopback_sample_req <-& (phi_stmt_839_loopback_sample_req_ps)
          phi_stmt_839_loopback_sample_req &-> ($null)
          $T[phi_stmt_839_entry_trigger] 
          phi_stmt_839_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_839_entry_sample_req] 
          $T[phi_stmt_839_entry_sample_req_ps] 
          phi_stmt_839_entry_sample_req <-& (phi_stmt_839_entry_sample_req_ps)
          phi_stmt_839_entry_sample_req &-> ($null)
          phi_stmt_839_update_start_ o<-& (phi_stmt_839_update_completed_ 0)
          phi_stmt_839_sample_start_ o<-& (phi_stmt_839_sample_completed_ 1)
          $T[phi_stmt_839_merged_reqs] 
          $T[phi_stmt_839_phi_mux_ack] 
          $T[phi_stmt_839_phi_mux_ack_ps] 
          phi_stmt_839_phi_mux_ack_ps <-& (phi_stmt_839_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_839_update_completed_)
          $T[type_cast_842_sample_start__ps] 
          $T[type_cast_842_sample_completed__ps] 
          $T[type_cast_842_update_start__ps] 
          $T[type_cast_842_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) count_inp2x_x2 )
          $T[type_cast_842_sample_start_] 
          $T[type_cast_842_sample_completed_] 
          $T[type_cast_842_update_start_] 
          $T[type_cast_842_update_completed_] 
          // count_inp2x_x2
          // start: Forward dependencies from count_inp2x_x2 to transition type_cast_842_sample_start_
          // done: Forward dependencies from count_inp2x_x2 to transition type_cast_842_sample_start_
          ;;[type_cast_842_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_842_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_842_sample_start_ &-> (type_cast_842_Sample)
          type_cast_842_sample_completed_ <-& (type_cast_842_Sample)
          type_cast_842_sample_completed_ &-> ($null)
          type_cast_842_update_start_ &-> (type_cast_842_Update)
          type_cast_842_update_completed_ <-& (type_cast_842_Update)
          // RAW reenables for count_inp2x_x2
          // self-release: 
          type_cast_842_sample_start_ o<-& (type_cast_842_sample_completed_ 1)
          $null &-> (type_cast_842_update_start_)
          type_cast_842_update_start_ o<-& (type_cast_842_update_completed_ 0)
          // Phi start dependency
          type_cast_842_sample_start_ <-& (type_cast_842_sample_start__ps)
          type_cast_842_update_start_ <-& (type_cast_842_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) count_inp2x_x2 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_842_sample_completed__ps <-& (type_cast_842_sample_completed_)
          type_cast_842_update_completed__ps <-& (type_cast_842_update_completed_)
          $T[R_count_inp2x_x1_at_entry_843_sample_start__ps] 
          $T[R_count_inp2x_x1_at_entry_843_sample_completed__ps] 
          $T[R_count_inp2x_x1_at_entry_843_update_start__ps] 
          $T[R_count_inp2x_x1_at_entry_843_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_count_inp2x_x1_at_entry_843_sample_start_] 
          $T[R_count_inp2x_x1_at_entry_843_sample_completed_] 
          R_count_inp2x_x1_at_entry_843_sample_completed_ <-& (R_count_inp2x_x1_at_entry_843_sample_start_)
          $T[R_count_inp2x_x1_at_entry_843_update_start_] 
          $T [R_count_inp2x_x1_at_entry_843_update_completed_] $delay 
          R_count_inp2x_x1_at_entry_843_update_completed_ <-& (R_count_inp2x_x1_at_entry_843_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_count_inp2x_x1_at_entry_843_sample_start_ <-& (R_count_inp2x_x1_at_entry_843_sample_start__ps)
          R_count_inp2x_x1_at_entry_843_update_start_ <-& (R_count_inp2x_x1_at_entry_843_update_start__ps)
          // Phi complete dependency.
          R_count_inp2x_x1_at_entry_843_sample_completed__ps <-& (R_count_inp2x_x1_at_entry_843_sample_completed_)
          R_count_inp2x_x1_at_entry_843_update_completed__ps <-& (R_count_inp2x_x1_at_entry_843_update_completed_)
          $phisequencer [ phi_stmt_839_phi_seq] : 
          phi_stmt_839_loopback_trigger type_cast_842_sample_start__ps type_cast_842_sample_completed__ps type_cast_842_update_start__ps type_cast_842_update_completed__ps phi_stmt_839_entry_trigger R_count_inp2x_x1_at_entry_843_sample_start__ps R_count_inp2x_x1_at_entry_843_sample_completed__ps R_count_inp2x_x1_at_entry_843_update_start__ps R_count_inp2x_x1_at_entry_843_update_completed__ps :
          phi_stmt_839_sample_start__ps phi_stmt_839_sample_completed__ps phi_stmt_839_update_start__ps phi_stmt_839_update_completed__ps :
          phi_stmt_839_loopback_sample_req_ps phi_stmt_839_entry_sample_req_ps : 
          phi_stmt_839_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_839
          // start:  			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 258
          // Source expression
          // ($cast ($uint<32>) count_inp1x_x1 )
          $T[type_cast_847_sample_start_] 
          $T[type_cast_847_sample_completed_] 
          $T[type_cast_847_update_start_] 
          $T[type_cast_847_update_completed_] 
          // count_inp1x_x1
          // start: Forward dependencies from count_inp1x_x1 to transition type_cast_847_sample_start_
          type_cast_847_sample_start_ <-& (phi_stmt_834_update_completed_)
          // done: Forward dependencies from count_inp1x_x1 to transition type_cast_847_sample_start_
          ;;[type_cast_847_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_847_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_847_sample_start_ &-> (type_cast_847_Sample)
          type_cast_847_sample_completed_ <-& (type_cast_847_Sample)
          type_cast_847_sample_completed_ &-> ($null)
          type_cast_847_update_start_ &-> (type_cast_847_Update)
          type_cast_847_update_completed_ <-& (type_cast_847_Update)
          // RAW reenables for count_inp1x_x1
          phi_stmt_834_update_start_ o<-& (type_cast_847_sample_completed_ 0)
          // self-release: 
          type_cast_847_sample_start_ o<-& (type_cast_847_sample_completed_ 1)
          $null &-> (type_cast_847_update_start_)
          type_cast_847_update_start_ o<-& (type_cast_847_update_completed_ 0)
          // Target expression
          // (as target) conv241
          // start: WAR dependencies for conv241
          // done: WAR dependencies for conv241
          // end:  			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for cmp244
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp244
          // start:  			$volatile cmp244 := (conv241 < conv243) $buffering 1
          //  file prog.linked.opt.aa, line 259
          // volatile! 
          // Source expression
          // (conv241 < conv243)
          // conv241
          // conv243
          // Target expression
          // (as target) cmp244
          // start: WAR dependencies for cmp244
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp244
          // end:  			$volatile cmp244 := (conv241 < conv243) $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // start:  			$volatile whilex_xbody_ifx_xthen_taken := cmp244 $buffering 1
          //  file prog.linked.opt.aa, line 260
          // volatile! 
          // Source expression
          // cmp244
          // Target expression
          // (as target) whilex_xbody_ifx_xthen_taken
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // end:  			$volatile whilex_xbody_ifx_xthen_taken := cmp244 $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xend_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for whilex_xbody_ifx_xend_taken
          // start:  			$volatile whilex_xbody_ifx_xend_taken := ( ~ cmp244 ) $buffering 1
          //  file prog.linked.opt.aa, line 261
          // volatile! 
          // Source expression
          // ( ~ cmp244 )
          // cmp244
          // Target expression
          // (as target) whilex_xbody_ifx_xend_taken
          // start: WAR dependencies for whilex_xbody_ifx_xend_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for whilex_xbody_ifx_xend_taken
          // end:  			$volatile whilex_xbody_ifx_xend_taken := ( ~ cmp244 ) $buffering 1
          // start: WAR dependencies for ifx_xthen_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen_exec_guard
          // start:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          //  file prog.linked.opt.aa, line 262
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xthen_taken
          // Target expression
          // (as target) ifx_xthen_exec_guard
          // start: WAR dependencies for ifx_xthen_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen_exec_guard
          // end:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          // start:  			add_inp1x_x1_866_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 263
          $T[assign_stmt_866_sample_start_] 
          $T[assign_stmt_866_sample_completed_] 
          $T[assign_stmt_866_update_start_] 
          $T[assign_stmt_866_update_completed_] 
          // Source expression
          // add_inp1x_x1
          // Target expression
          // (as target) add_inp1x_x1_866_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_866_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_866_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_866_sample_start_ &-> (assign_stmt_866_Sample)
          assign_stmt_866_sample_completed_ <-& (assign_stmt_866_Sample)
          assign_stmt_866_sample_completed_ &-> ($null)
          assign_stmt_866_update_start_ &-> (assign_stmt_866_Update)
          assign_stmt_866_update_completed_ <-& (assign_stmt_866_Update)
          // start: Forward dependencies from add_inp1x_x1 to transition assign_stmt_866_sample_start_
          assign_stmt_866_sample_start_ <-& (phi_stmt_824_update_completed_)
          // done: Forward dependencies from add_inp1x_x1 to transition assign_stmt_866_sample_start_
          // RAW reenables for add_inp1x_x1
          phi_stmt_824_update_start_ o<-& (assign_stmt_866_sample_completed_ 0)
          // self-release: 
          assign_stmt_866_sample_start_ o<-& (assign_stmt_866_sample_completed_ 1)
          $null &-> (assign_stmt_866_update_start_)
          assign_stmt_866_update_start_ o<-& (assign_stmt_866_update_completed_ 0)
          // start: WAR dependencies for add_inp1x_x1_866_delayed_1_0
          // done: WAR dependencies for add_inp1x_x1_866_delayed_1_0
          // end:  			add_inp1x_x1_866_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			$guard (ifx_xthen_exec_guard) idxprom247 := ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 264
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 )
          $T[type_cast_870_sample_start_] 
          $T[type_cast_870_sample_completed_] 
          $T[type_cast_870_update_start_] 
          $T[type_cast_870_update_completed_] 
          // Guard dependency for expression type_cast_870 with guard R_ifx_xthen_exec_guard_867
          // root assign_stmt_56 of guard-expression not in visited elements.
          // root assign_stmt_69 of guard-expression not in visited elements.
          // root assign_stmt_81 of guard-expression not in visited elements.
          // root assign_stmt_94 of guard-expression not in visited elements.
          type_cast_870_sample_start_ <-& (type_cast_847_update_completed_)
          // RAW reenables for ifx_xthen_exec_guard
          type_cast_847_update_start_ o<-& (type_cast_870_sample_completed_ 0)
          // add_inp1x_x1_866_delayed_1_0
          // start: Forward dependencies from add_inp1x_x1_866_delayed_1_0 to transition type_cast_870_sample_start_
          type_cast_870_sample_start_ <-& (assign_stmt_866_update_completed_)
          // done: Forward dependencies from add_inp1x_x1_866_delayed_1_0 to transition type_cast_870_sample_start_
          ;;[type_cast_870_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_870_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_870_sample_start_ &-> (type_cast_870_Sample)
          type_cast_870_sample_completed_ <-& (type_cast_870_Sample)
          type_cast_870_sample_completed_ &-> ($null)
          type_cast_870_update_start_ &-> (type_cast_870_Update)
          type_cast_870_update_completed_ <-& (type_cast_870_Update)
          // RAW reenables for add_inp1x_x1_866_delayed_1_0
          assign_stmt_866_update_start_ o<-& (type_cast_870_sample_completed_ 0)
          // self-release: 
          type_cast_870_sample_start_ o<-& (type_cast_870_sample_completed_ 1)
          $null &-> (type_cast_870_update_start_)
          type_cast_870_update_start_ o<-& (type_cast_870_update_completed_ 0)
          // Target expression
          // (as target) idxprom247
          // start: WAR dependencies for idxprom247
          // done: WAR dependencies for idxprom247
          // end:  			$guard (ifx_xthen_exec_guard) idxprom247 := ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx248 := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 265
          // Source expression
          // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247])
          $T[addr_of_877_sample_start_] 
          $T[addr_of_877_sample_completed_] 
          $T[addr_of_877_update_start_] 
          $T[addr_of_877_update_completed_] 
          $T[array_obj_ref_876_root_address_calculated] 
          $T[array_obj_ref_876_offset_calculated] 
          $T[array_obj_ref_876_index_resized_1] 
          $T[array_obj_ref_876_index_scaled_1] 
          $T[array_obj_ref_876_index_computed_1] 
          // idxprom247
          // start: Forward dependencies from idxprom247 to transition array_obj_ref_876_index_computed_1
          array_obj_ref_876_index_computed_1 <-& (type_cast_870_update_completed_)
          // done: Forward dependencies from idxprom247 to transition array_obj_ref_876_index_computed_1
          ;;[array_obj_ref_876_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_876_index_computed_1 &-> (array_obj_ref_876_index_resize_1)
          array_obj_ref_876_index_resized_1 <-& (array_obj_ref_876_index_resize_1)
          ;;[array_obj_ref_876_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_876_index_resized_1 &-> (array_obj_ref_876_index_scale_1)
          array_obj_ref_876_index_scaled_1 <-& (array_obj_ref_876_index_scale_1)
          $T[array_obj_ref_876_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_876_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_876_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_876_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_876_index_scaled_1 &-> (array_obj_ref_876_final_index_sum_regn_Sample)
          array_obj_ref_876_final_index_sum_regn_sample_complete <-& (array_obj_ref_876_final_index_sum_regn_Sample)
          array_obj_ref_876_final_index_sum_regn_update_start &-> (array_obj_ref_876_final_index_sum_regn_Update)
          array_obj_ref_876_offset_calculated <-& (array_obj_ref_876_final_index_sum_regn_Update)
          type_cast_870_update_start_ o<-& (array_obj_ref_876_final_index_sum_regn_sample_complete 1)
          array_obj_ref_876_final_index_sum_regn_update_start o<-& (array_obj_ref_876_offset_calculated 0)
          ;;[array_obj_ref_876_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_876_offset_calculated &-> (array_obj_ref_876_base_plus_offset)
          array_obj_ref_876_root_address_calculated <-& (array_obj_ref_876_base_plus_offset)
          ;;[addr_of_877_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_877_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_877_sample_start_ <-& (array_obj_ref_876_root_address_calculated)
          addr_of_877_sample_start_ &-> (addr_of_877_request)
          addr_of_877_sample_completed_ <-& (addr_of_877_request)
          addr_of_877_sample_completed_ &-> ($null)
          addr_of_877_update_start_ &-> (addr_of_877_complete)
          addr_of_877_update_completed_ <-& (addr_of_877_complete)
          // reenables .
          array_obj_ref_876_final_index_sum_regn_update_start o<-& (addr_of_877_sample_completed_ 0)
          // self-release 
          addr_of_877_sample_start_ o<-& (addr_of_877_sample_completed_ 1)
          addr_of_877_update_start_ o<-& (addr_of_877_update_completed_ 0)
          // Target expression
          // (as target) arrayidx248
          // start: WAR dependencies for arrayidx248
          // done: WAR dependencies for arrayidx248
          // end:  			arrayidx248 := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen_exec_guard_876_delayed_7_0 := ifx_xthen_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
          //  file prog.linked.opt.aa, line 266
          $T[assign_stmt_881_sample_start_] 
          $T[assign_stmt_881_sample_completed_] 
          $T[assign_stmt_881_update_start_] 
          $T[assign_stmt_881_update_completed_] 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_exec_guard_876_delayed_7_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_881_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_881_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_881_sample_start_ &-> (assign_stmt_881_Sample)
          assign_stmt_881_sample_completed_ <-& (assign_stmt_881_Sample)
          assign_stmt_881_sample_completed_ &-> ($null)
          assign_stmt_881_update_start_ &-> (assign_stmt_881_Update)
          assign_stmt_881_update_completed_ <-& (assign_stmt_881_Update)
          // start: Forward dependencies from ifx_xthen_exec_guard to transition assign_stmt_881_sample_start_
          assign_stmt_881_sample_start_ <-& (type_cast_847_update_completed_)
          // done: Forward dependencies from ifx_xthen_exec_guard to transition assign_stmt_881_sample_start_
          // RAW reenables for ifx_xthen_exec_guard
          type_cast_847_update_start_ o<-& (assign_stmt_881_sample_completed_ 0)
          // self-release: 
          assign_stmt_881_sample_start_ o<-& (assign_stmt_881_sample_completed_ 1)
          $null &-> (assign_stmt_881_update_start_)
          assign_stmt_881_update_start_ o<-& (assign_stmt_881_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_exec_guard_876_delayed_7_0
          // done: WAR dependencies for ifx_xthen_exec_guard_876_delayed_7_0
          // end:  			ifx_xthen_exec_guard_876_delayed_7_0 := ifx_xthen_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
          // start:  			$guard (ifx_xthen_exec_guard_876_delayed_7_0) tmp249 := ->(arrayidx248) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 267
          // Guard expression 
          // ifx_xthen_exec_guard_876_delayed_7_0
          // Source expression
          // ->(arrayidx248)
          $T[ptr_deref_885_sample_start_] 
          $T[ptr_deref_885_sample_completed_] 
          $T[ptr_deref_885_update_start_] 
          $T[ptr_deref_885_update_completed_] 
          // Guard dependency for expression ptr_deref_885 with guard R_ifx_xthen_exec_guard_876_delayed_7_0_882
          ptr_deref_885_sample_start_ <-& (assign_stmt_881_update_completed_)
          // RAW reenables for ifx_xthen_exec_guard_876_delayed_7_0
          assign_stmt_881_update_start_ o<-& (ptr_deref_885_sample_completed_ 0)
          $T[ptr_deref_885_base_address_calculated] 
          // arrayidx248
          $T[ptr_deref_885_word_address_calculated] 
          $T[ptr_deref_885_root_address_calculated] 
          $T[ptr_deref_885_base_address_resized] 
          ;;[ptr_deref_885_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_885_base_address_calculated &-> (ptr_deref_885_base_addr_resize)
          ptr_deref_885_base_address_resized <-& (ptr_deref_885_base_addr_resize)
          ;;[ptr_deref_885_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_885_base_address_resized &-> (ptr_deref_885_base_plus_offset)
          ptr_deref_885_root_address_calculated <-& (ptr_deref_885_base_plus_offset)
          ;;[ptr_deref_885_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_885_root_address_calculated &-> (ptr_deref_885_word_addrgen)
          ptr_deref_885_word_address_calculated <-& (ptr_deref_885_word_addrgen)
          ;;[ptr_deref_885_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_885_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_885_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_885_sample_start_ <-& (ptr_deref_885_word_address_calculated)
          // reenable-joins
          addr_of_877_update_start_ o<-& (ptr_deref_885_sample_completed_ 0)
          ptr_deref_885_sample_start_ &-> (ptr_deref_885_Sample)
          ptr_deref_885_sample_completed_ <-& (ptr_deref_885_Sample)
          ptr_deref_885_sample_completed_ &-> ($null)
          ptr_deref_885_update_start_ &-> (ptr_deref_885_Update)
          ptr_deref_885_update_completed_ <-& (ptr_deref_885_Update)
          // start: Forward dependencies from arrayidx248 to transition ptr_deref_885_base_address_calculated
          ptr_deref_885_base_address_calculated <-& (addr_of_877_update_completed_)
          // done: Forward dependencies from arrayidx248 to transition ptr_deref_885_base_address_calculated
          ptr_deref_885_sample_start_ <-& (ptr_deref_885_base_address_calculated)
          // RAW reenables for arrayidx248
          addr_of_877_update_start_ o<-& (ptr_deref_885_sample_completed_ 0)
          // self-release: 
          ptr_deref_885_sample_start_ o<-& (ptr_deref_885_sample_completed_ 1)
          $null &-> (ptr_deref_885_update_start_)
          ptr_deref_885_update_start_ o<-& (ptr_deref_885_update_completed_ 0)
          // Target expression
          // (as target) tmp249
          // start: WAR dependencies for tmp249
          // done: WAR dependencies for tmp249
          // end:  			$guard (ifx_xthen_exec_guard_876_delayed_7_0) tmp249 := ->(arrayidx248) $buffering 1// bits of buffering = 64. 
          // start:  			add_outx_x1_883_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 268
          $T[assign_stmt_889_sample_start_] 
          $T[assign_stmt_889_sample_completed_] 
          $T[assign_stmt_889_update_start_] 
          $T[assign_stmt_889_update_completed_] 
          // Source expression
          // add_outx_x1
          // Target expression
          // (as target) add_outx_x1_883_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_889_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_889_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_889_sample_start_ &-> (assign_stmt_889_Sample)
          assign_stmt_889_sample_completed_ <-& (assign_stmt_889_Sample)
          assign_stmt_889_sample_completed_ &-> ($null)
          assign_stmt_889_update_start_ &-> (assign_stmt_889_Update)
          assign_stmt_889_update_completed_ <-& (assign_stmt_889_Update)
          // start: Forward dependencies from add_outx_x1 to transition assign_stmt_889_sample_start_
          assign_stmt_889_sample_start_ <-& (phi_stmt_819_update_completed_)
          // done: Forward dependencies from add_outx_x1 to transition assign_stmt_889_sample_start_
          // RAW reenables for add_outx_x1
          phi_stmt_819_update_start_ o<-& (assign_stmt_889_sample_completed_ 0)
          // self-release: 
          assign_stmt_889_sample_start_ o<-& (assign_stmt_889_sample_completed_ 1)
          $null &-> (assign_stmt_889_update_start_)
          assign_stmt_889_update_start_ o<-& (assign_stmt_889_update_completed_ 0)
          // start: WAR dependencies for add_outx_x1_883_delayed_1_0
          // done: WAR dependencies for add_outx_x1_883_delayed_1_0
          // end:  			add_outx_x1_883_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			$guard (ifx_xthen_exec_guard) idxprom251 := ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 269
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 )
          $T[type_cast_893_sample_start_] 
          $T[type_cast_893_sample_completed_] 
          $T[type_cast_893_update_start_] 
          $T[type_cast_893_update_completed_] 
          // Guard dependency for expression type_cast_893 with guard R_ifx_xthen_exec_guard_890
          // root assign_stmt_56 of guard-expression not in visited elements.
          // root assign_stmt_69 of guard-expression not in visited elements.
          // root assign_stmt_81 of guard-expression not in visited elements.
          // root assign_stmt_94 of guard-expression not in visited elements.
          type_cast_893_sample_start_ <-& (type_cast_847_update_completed_)
          // RAW reenables for ifx_xthen_exec_guard
          type_cast_847_update_start_ o<-& (type_cast_893_sample_completed_ 0)
          // add_outx_x1_883_delayed_1_0
          // start: Forward dependencies from add_outx_x1_883_delayed_1_0 to transition type_cast_893_sample_start_
          type_cast_893_sample_start_ <-& (assign_stmt_889_update_completed_)
          // done: Forward dependencies from add_outx_x1_883_delayed_1_0 to transition type_cast_893_sample_start_
          ;;[type_cast_893_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_893_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_893_sample_start_ &-> (type_cast_893_Sample)
          type_cast_893_sample_completed_ <-& (type_cast_893_Sample)
          type_cast_893_sample_completed_ &-> ($null)
          type_cast_893_update_start_ &-> (type_cast_893_Update)
          type_cast_893_update_completed_ <-& (type_cast_893_Update)
          // RAW reenables for add_outx_x1_883_delayed_1_0
          assign_stmt_889_update_start_ o<-& (type_cast_893_sample_completed_ 0)
          // self-release: 
          type_cast_893_sample_start_ o<-& (type_cast_893_sample_completed_ 1)
          $null &-> (type_cast_893_update_start_)
          type_cast_893_update_start_ o<-& (type_cast_893_update_completed_ 0)
          // Target expression
          // (as target) idxprom251
          // start: WAR dependencies for idxprom251
          // done: WAR dependencies for idxprom251
          // end:  			$guard (ifx_xthen_exec_guard) idxprom251 := ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx252 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 270
          // Source expression
          // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251])
          $T[addr_of_900_sample_start_] 
          $T[addr_of_900_sample_completed_] 
          $T[addr_of_900_update_start_] 
          $T[addr_of_900_update_completed_] 
          $T[array_obj_ref_899_root_address_calculated] 
          $T[array_obj_ref_899_offset_calculated] 
          $T[array_obj_ref_899_index_resized_1] 
          $T[array_obj_ref_899_index_scaled_1] 
          $T[array_obj_ref_899_index_computed_1] 
          // idxprom251
          // start: Forward dependencies from idxprom251 to transition array_obj_ref_899_index_computed_1
          array_obj_ref_899_index_computed_1 <-& (type_cast_893_update_completed_)
          // done: Forward dependencies from idxprom251 to transition array_obj_ref_899_index_computed_1
          ;;[array_obj_ref_899_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_899_index_computed_1 &-> (array_obj_ref_899_index_resize_1)
          array_obj_ref_899_index_resized_1 <-& (array_obj_ref_899_index_resize_1)
          ;;[array_obj_ref_899_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_899_index_resized_1 &-> (array_obj_ref_899_index_scale_1)
          array_obj_ref_899_index_scaled_1 <-& (array_obj_ref_899_index_scale_1)
          $T[array_obj_ref_899_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_899_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_899_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_899_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_899_index_scaled_1 &-> (array_obj_ref_899_final_index_sum_regn_Sample)
          array_obj_ref_899_final_index_sum_regn_sample_complete <-& (array_obj_ref_899_final_index_sum_regn_Sample)
          array_obj_ref_899_final_index_sum_regn_update_start &-> (array_obj_ref_899_final_index_sum_regn_Update)
          array_obj_ref_899_offset_calculated <-& (array_obj_ref_899_final_index_sum_regn_Update)
          type_cast_893_update_start_ o<-& (array_obj_ref_899_final_index_sum_regn_sample_complete 1)
          array_obj_ref_899_final_index_sum_regn_update_start o<-& (array_obj_ref_899_offset_calculated 0)
          ;;[array_obj_ref_899_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_899_offset_calculated &-> (array_obj_ref_899_base_plus_offset)
          array_obj_ref_899_root_address_calculated <-& (array_obj_ref_899_base_plus_offset)
          ;;[addr_of_900_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_900_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_900_sample_start_ <-& (array_obj_ref_899_root_address_calculated)
          addr_of_900_sample_start_ &-> (addr_of_900_request)
          addr_of_900_sample_completed_ <-& (addr_of_900_request)
          addr_of_900_sample_completed_ &-> ($null)
          addr_of_900_update_start_ &-> (addr_of_900_complete)
          addr_of_900_update_completed_ <-& (addr_of_900_complete)
          // reenables .
          array_obj_ref_899_final_index_sum_regn_update_start o<-& (addr_of_900_sample_completed_ 0)
          // self-release 
          addr_of_900_sample_start_ o<-& (addr_of_900_sample_completed_ 1)
          addr_of_900_update_start_ o<-& (addr_of_900_update_completed_ 0)
          // Target expression
          // (as target) arrayidx252
          // start: WAR dependencies for arrayidx252
          // done: WAR dependencies for arrayidx252
          // end:  			arrayidx252 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen_exec_guard_893_delayed_13_0 := ifx_xthen_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
          //  file prog.linked.opt.aa, line 271
          $T[assign_stmt_904_sample_start_] 
          $T[assign_stmt_904_sample_completed_] 
          $T[assign_stmt_904_update_start_] 
          $T[assign_stmt_904_update_completed_] 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_exec_guard_893_delayed_13_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_904_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_904_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_904_sample_start_ &-> (assign_stmt_904_Sample)
          assign_stmt_904_sample_completed_ <-& (assign_stmt_904_Sample)
          assign_stmt_904_sample_completed_ &-> ($null)
          assign_stmt_904_update_start_ &-> (assign_stmt_904_Update)
          assign_stmt_904_update_completed_ <-& (assign_stmt_904_Update)
          // start: Forward dependencies from ifx_xthen_exec_guard to transition assign_stmt_904_sample_start_
          assign_stmt_904_sample_start_ <-& (type_cast_847_update_completed_)
          // done: Forward dependencies from ifx_xthen_exec_guard to transition assign_stmt_904_sample_start_
          // RAW reenables for ifx_xthen_exec_guard
          type_cast_847_update_start_ o<-& (assign_stmt_904_sample_completed_ 0)
          // self-release: 
          assign_stmt_904_sample_start_ o<-& (assign_stmt_904_sample_completed_ 1)
          $null &-> (assign_stmt_904_update_start_)
          assign_stmt_904_update_start_ o<-& (assign_stmt_904_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_exec_guard_893_delayed_13_0
          // done: WAR dependencies for ifx_xthen_exec_guard_893_delayed_13_0
          // end:  			ifx_xthen_exec_guard_893_delayed_13_0 := ifx_xthen_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
          // start:  			arrayidx252_894_delayed_6_0 := arrayidx252 $buffering 6 $cut_through // bits of buffering = 192. 
          //  file prog.linked.opt.aa, line 272
          $T[assign_stmt_907_sample_start_] 
          $T[assign_stmt_907_sample_completed_] 
          $T[assign_stmt_907_update_start_] 
          $T[assign_stmt_907_update_completed_] 
          // Source expression
          // arrayidx252
          // Target expression
          // (as target) arrayidx252_894_delayed_6_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_907_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_907_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_907_sample_start_ &-> (assign_stmt_907_Sample)
          assign_stmt_907_sample_completed_ <-& (assign_stmt_907_Sample)
          assign_stmt_907_sample_completed_ &-> ($null)
          assign_stmt_907_update_start_ &-> (assign_stmt_907_Update)
          assign_stmt_907_update_completed_ <-& (assign_stmt_907_Update)
          // start: Forward dependencies from arrayidx252 to transition assign_stmt_907_sample_start_
          assign_stmt_907_sample_start_ <-& (addr_of_900_update_completed_)
          // done: Forward dependencies from arrayidx252 to transition assign_stmt_907_sample_start_
          // RAW reenables for arrayidx252
          addr_of_900_update_start_ o<-& (assign_stmt_907_sample_completed_ 0)
          // self-release: 
          assign_stmt_907_sample_start_ o<-& (assign_stmt_907_sample_completed_ 1)
          $null &-> (assign_stmt_907_update_start_)
          assign_stmt_907_update_start_ o<-& (assign_stmt_907_update_completed_ 0)
          // start: WAR dependencies for arrayidx252_894_delayed_6_0
          // done: WAR dependencies for arrayidx252_894_delayed_6_0
          // end:  			arrayidx252_894_delayed_6_0 := arrayidx252 $buffering 6 $cut_through // bits of buffering = 192. 
          // start:  			$guard (ifx_xthen_exec_guard_893_delayed_13_0) ->(arrayidx252_894_delayed_6_0) := tmp249 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 273
          // Guard expression 
          // ifx_xthen_exec_guard_893_delayed_13_0
          // Source expression
          // tmp249
          // Target expression
          // ->(arrayidx252_894_delayed_6_0)
          $T[ptr_deref_910_sample_start_] 
          $T[ptr_deref_910_sample_completed_] 
          $T[ptr_deref_910_update_start_] 
          $T[ptr_deref_910_update_completed_] 
          $T[ptr_deref_910_base_address_calculated] 
          // arrayidx252_894_delayed_6_0
          $T[ptr_deref_910_word_address_calculated] 
          $T[ptr_deref_910_root_address_calculated] 
          $T[ptr_deref_910_base_address_resized] 
          ;;[ptr_deref_910_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_910_base_address_calculated &-> (ptr_deref_910_base_addr_resize)
          ptr_deref_910_base_address_resized <-& (ptr_deref_910_base_addr_resize)
          ;;[ptr_deref_910_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_910_base_address_resized &-> (ptr_deref_910_base_plus_offset)
          ptr_deref_910_root_address_calculated <-& (ptr_deref_910_base_plus_offset)
          ;;[ptr_deref_910_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_910_root_address_calculated &-> (ptr_deref_910_word_addrgen)
          ptr_deref_910_word_address_calculated <-& (ptr_deref_910_word_addrgen)
          ;;[ptr_deref_910_Sample] 
          {
            ;;[ptr_deref_910_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_910_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_910_sample_start_ <-& (ptr_deref_910_word_address_calculated)
          // reenable-joins
          assign_stmt_907_update_start_ o<-& (ptr_deref_910_sample_completed_ 0)
          ptr_deref_910_sample_start_ &-> (ptr_deref_910_Sample)
          ptr_deref_910_sample_completed_ <-& (ptr_deref_910_Sample)
          ptr_deref_910_sample_completed_ &-> ($null)
          ptr_deref_910_update_start_ &-> (ptr_deref_910_Update)
          ptr_deref_910_update_completed_ <-& (ptr_deref_910_Update)
          // start: Forward dependencies from arrayidx252_894_delayed_6_0 to transition ptr_deref_910_base_address_calculated
          ptr_deref_910_base_address_calculated <-& (assign_stmt_907_update_completed_)
          // done: Forward dependencies from arrayidx252_894_delayed_6_0 to transition ptr_deref_910_base_address_calculated
          ptr_deref_910_sample_start_ <-& (ptr_deref_910_base_address_calculated)
          // RAW reenables for arrayidx252_894_delayed_6_0
          assign_stmt_907_update_start_ o<-& (ptr_deref_910_sample_completed_ 0)
          // self-release: 
          ptr_deref_910_sample_start_ o<-& (ptr_deref_910_sample_completed_ 1)
          $null &-> (ptr_deref_910_update_start_)
          ptr_deref_910_update_start_ o<-& (ptr_deref_910_update_completed_ 0)
          // start: Forward dependencies from tmp249 to transition ptr_deref_910_sample_start_
          ptr_deref_910_sample_start_ <-& (ptr_deref_885_update_completed_)
          // done: Forward dependencies from tmp249 to transition ptr_deref_910_sample_start_
          // RAW reenables for tmp249
          ptr_deref_885_update_start_ o<-& (ptr_deref_910_sample_completed_ 0)
          // end:  			$guard (ifx_xthen_exec_guard_893_delayed_13_0) ->(arrayidx252_894_delayed_6_0) := tmp249 $buffering 1// bits of buffering = 64. 
          // start:  			count_inp1x_x1_900_delayed_1_0 := count_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 274
          $T[assign_stmt_915_sample_start_] 
          $T[assign_stmt_915_sample_completed_] 
          $T[assign_stmt_915_update_start_] 
          $T[assign_stmt_915_update_completed_] 
          // Source expression
          // count_inp1x_x1
          // Target expression
          // (as target) count_inp1x_x1_900_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_915_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_915_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_915_sample_start_ &-> (assign_stmt_915_Sample)
          assign_stmt_915_sample_completed_ <-& (assign_stmt_915_Sample)
          assign_stmt_915_sample_completed_ &-> ($null)
          assign_stmt_915_update_start_ &-> (assign_stmt_915_Update)
          assign_stmt_915_update_completed_ <-& (assign_stmt_915_Update)
          // start: Forward dependencies from count_inp1x_x1 to transition assign_stmt_915_sample_start_
          assign_stmt_915_sample_start_ <-& (phi_stmt_834_update_completed_)
          // done: Forward dependencies from count_inp1x_x1 to transition assign_stmt_915_sample_start_
          // RAW reenables for count_inp1x_x1
          phi_stmt_834_update_start_ o<-& (assign_stmt_915_sample_completed_ 0)
          // self-release: 
          assign_stmt_915_sample_start_ o<-& (assign_stmt_915_sample_completed_ 1)
          $null &-> (assign_stmt_915_update_start_)
          assign_stmt_915_update_start_ o<-& (assign_stmt_915_update_completed_ 0)
          // start: WAR dependencies for count_inp1x_x1_900_delayed_1_0
          // done: WAR dependencies for count_inp1x_x1_900_delayed_1_0
          // end:  			count_inp1x_x1_900_delayed_1_0 := count_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc254
          // done: WAR dependencies for inc254
          // start:  			$guard (ifx_xthen_exec_guard) $volatile inc254 := (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 275
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // count_inp1x_x1_900_delayed_1_0
          // Target expression
          // (as target) inc254
          // start: WAR dependencies for inc254
          // done: WAR dependencies for inc254
          // end:  			$guard (ifx_xthen_exec_guard) $volatile inc254 := (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 276
          $T[assign_stmt_925_sample_start_] 
          $T[assign_stmt_925_sample_completed_] 
          $T[assign_stmt_925_update_start_] 
          $T[assign_stmt_925_update_completed_] 
          // Source expression
          // add_inp1x_x1
          // Target expression
          // (as target) add_inp1x_x1_907_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_925_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_925_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_925_sample_start_ &-> (assign_stmt_925_Sample)
          assign_stmt_925_sample_completed_ <-& (assign_stmt_925_Sample)
          assign_stmt_925_sample_completed_ &-> ($null)
          assign_stmt_925_update_start_ &-> (assign_stmt_925_Update)
          assign_stmt_925_update_completed_ <-& (assign_stmt_925_Update)
          // start: Forward dependencies from add_inp1x_x1 to transition assign_stmt_925_sample_start_
          assign_stmt_925_sample_start_ <-& (phi_stmt_824_update_completed_)
          // done: Forward dependencies from add_inp1x_x1 to transition assign_stmt_925_sample_start_
          // RAW reenables for add_inp1x_x1
          phi_stmt_824_update_start_ o<-& (assign_stmt_925_sample_completed_ 0)
          // self-release: 
          assign_stmt_925_sample_start_ o<-& (assign_stmt_925_sample_completed_ 1)
          $null &-> (assign_stmt_925_update_start_)
          assign_stmt_925_update_start_ o<-& (assign_stmt_925_update_completed_ 0)
          // start: WAR dependencies for add_inp1x_x1_907_delayed_1_0
          // done: WAR dependencies for add_inp1x_x1_907_delayed_1_0
          // end:  			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc256
          // done: WAR dependencies for inc256
          // start:  			$guard (ifx_xthen_exec_guard) $volatile inc256 := (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 277
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // add_inp1x_x1_907_delayed_1_0
          // Target expression
          // (as target) inc256
          // start: WAR dependencies for inc256
          // done: WAR dependencies for inc256
          // end:  			$guard (ifx_xthen_exec_guard) $volatile inc256 := (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			add_outx_x1_914_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 278
          $T[assign_stmt_935_sample_start_] 
          $T[assign_stmt_935_sample_completed_] 
          $T[assign_stmt_935_update_start_] 
          $T[assign_stmt_935_update_completed_] 
          // Source expression
          // add_outx_x1
          // Target expression
          // (as target) add_outx_x1_914_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_935_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_935_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_935_sample_start_ &-> (assign_stmt_935_Sample)
          assign_stmt_935_sample_completed_ <-& (assign_stmt_935_Sample)
          assign_stmt_935_sample_completed_ &-> ($null)
          assign_stmt_935_update_start_ &-> (assign_stmt_935_Update)
          assign_stmt_935_update_completed_ <-& (assign_stmt_935_Update)
          // start: Forward dependencies from add_outx_x1 to transition assign_stmt_935_sample_start_
          assign_stmt_935_sample_start_ <-& (phi_stmt_819_update_completed_)
          // done: Forward dependencies from add_outx_x1 to transition assign_stmt_935_sample_start_
          // RAW reenables for add_outx_x1
          phi_stmt_819_update_start_ o<-& (assign_stmt_935_sample_completed_ 0)
          // self-release: 
          assign_stmt_935_sample_start_ o<-& (assign_stmt_935_sample_completed_ 1)
          $null &-> (assign_stmt_935_update_start_)
          assign_stmt_935_update_start_ o<-& (assign_stmt_935_update_completed_ 0)
          // start: WAR dependencies for add_outx_x1_914_delayed_1_0
          // done: WAR dependencies for add_outx_x1_914_delayed_1_0
          // end:  			add_outx_x1_914_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc258
          // done: WAR dependencies for inc258
          // start:  			$guard (ifx_xthen_exec_guard) $volatile inc258 := (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 279
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // add_outx_x1_914_delayed_1_0
          // Target expression
          // (as target) inc258
          // start: WAR dependencies for inc258
          // done: WAR dependencies for inc258
          // end:  			$guard (ifx_xthen_exec_guard) $volatile inc258 := (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start: WAR dependencies for ifx_xthen_ifx_xend_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen_ifx_xend_taken
          // start:  			$volatile ifx_xthen_ifx_xend_taken := ifx_xthen_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 280
          // volatile! 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_ifx_xend_taken
          // start: WAR dependencies for ifx_xthen_ifx_xend_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen_ifx_xend_taken
          // end:  			$volatile ifx_xthen_ifx_xend_taken := ifx_xthen_exec_guard $buffering 1
          // start: WAR dependencies for ifx_xend_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_exec_guard
          // start:  			$volatile ifx_xend_exec_guard := (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken) $buffering 1
          //  file prog.linked.opt.aa, line 281
          // volatile! 
          // Source expression
          // (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken)
          // ifx_xthen_ifx_xend_taken
          // whilex_xbody_ifx_xend_taken
          // Target expression
          // (as target) ifx_xend_exec_guard
          // start: WAR dependencies for ifx_xend_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_exec_guard
          // end:  			$volatile ifx_xend_exec_guard := (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken) $buffering 1
          // start:  			type_cast_933_933_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 282
          // Source expression
          // ($bitcast ($uint<16>) add_outx_x1 )
          $T[type_cast_953_sample_start_] 
          $T[type_cast_953_sample_completed_] 
          $T[type_cast_953_update_start_] 
          $T[type_cast_953_update_completed_] 
          // add_outx_x1
          // start: Forward dependencies from add_outx_x1 to transition type_cast_953_sample_start_
          type_cast_953_sample_start_ <-& (phi_stmt_819_update_completed_)
          // done: Forward dependencies from add_outx_x1 to transition type_cast_953_sample_start_
          ;;[type_cast_953_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_953_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_953_sample_start_ &-> (type_cast_953_Sample)
          type_cast_953_sample_completed_ <-& (type_cast_953_Sample)
          type_cast_953_sample_completed_ &-> ($null)
          type_cast_953_update_start_ &-> (type_cast_953_Update)
          type_cast_953_update_completed_ <-& (type_cast_953_Update)
          // RAW reenables for add_outx_x1
          phi_stmt_819_update_start_ o<-& (type_cast_953_sample_completed_ 0)
          // self-release: 
          type_cast_953_sample_start_ o<-& (type_cast_953_sample_completed_ 1)
          $null &-> (type_cast_953_update_start_)
          type_cast_953_update_start_ o<-& (type_cast_953_update_completed_ 0)
          // Target expression
          // (as target) type_cast_933_933_delayed_1_0
          // start: WAR dependencies for type_cast_933_933_delayed_1_0
          // done: WAR dependencies for type_cast_933_933_delayed_1_0
          // end:  			type_cast_933_933_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add_outx_x0
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x0
          // start:  			$volatile add_outx_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 283
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen_ifx_xend_taken
          // ($bitcast ($uint<16>) inc258 )
          // inc258
          // ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // whilex_xbody_ifx_xend_taken
          // type_cast_933_933_delayed_1_0
          // Target expression
          // (as target) add_outx_x0
          // start: WAR dependencies for add_outx_x0
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x0
          // end:  			$volatile add_outx_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 284
          // Source expression
          // ($bitcast ($uint<16>) add_inp1x_x1 )
          $T[type_cast_968_sample_start_] 
          $T[type_cast_968_sample_completed_] 
          $T[type_cast_968_update_start_] 
          $T[type_cast_968_update_completed_] 
          // add_inp1x_x1
          // start: Forward dependencies from add_inp1x_x1 to transition type_cast_968_sample_start_
          type_cast_968_sample_start_ <-& (phi_stmt_824_update_completed_)
          // done: Forward dependencies from add_inp1x_x1 to transition type_cast_968_sample_start_
          ;;[type_cast_968_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_968_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_968_sample_start_ &-> (type_cast_968_Sample)
          type_cast_968_sample_completed_ <-& (type_cast_968_Sample)
          type_cast_968_sample_completed_ &-> ($null)
          type_cast_968_update_start_ &-> (type_cast_968_Update)
          type_cast_968_update_completed_ <-& (type_cast_968_Update)
          // RAW reenables for add_inp1x_x1
          phi_stmt_824_update_start_ o<-& (type_cast_968_sample_completed_ 0)
          // self-release: 
          type_cast_968_sample_start_ o<-& (type_cast_968_sample_completed_ 1)
          $null &-> (type_cast_968_update_start_)
          type_cast_968_update_start_ o<-& (type_cast_968_update_completed_ 0)
          // Target expression
          // (as target) type_cast_945_945_delayed_1_0
          // start: WAR dependencies for type_cast_945_945_delayed_1_0
          // done: WAR dependencies for type_cast_945_945_delayed_1_0
          // end:  			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add_inp1x_x0
          // WAR dependency: Read: add_inp1x_x0 before Write: 			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          type_cast_847_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (type_cast_847_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 1// bits of buffering = 32. 
          assign_stmt_925_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (assign_stmt_925_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_968_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (type_cast_968_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // done: WAR dependencies for add_inp1x_x0
          // start:  			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 285
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen_ifx_xend_taken
          // ($bitcast ($uint<16>) inc256 )
          // inc256
          // ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // whilex_xbody_ifx_xend_taken
          // type_cast_945_945_delayed_1_0
          // Target expression
          // (as target) add_inp1x_x0
          // start: WAR dependencies for add_inp1x_x0
          // WAR dependency: Read: add_inp1x_x0 before Write: 			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          type_cast_847_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (type_cast_847_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 2// bits of buffering = 64. 
          assign_stmt_925_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (assign_stmt_925_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_968_update_start_ <-& (phi_stmt_824_sample_completed_)
          phi_stmt_824_sample_start_ o<-& (type_cast_968_update_completed_ 0)
          // WAR dependency: release  Read: add_inp1x_x0 with Write: 			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for add_inp1x_x0
          // end:  			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			type_cast_957_957_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 286
          // Source expression
          // ($bitcast ($uint<16>) count_inp1x_x1 )
          $T[type_cast_983_sample_start_] 
          $T[type_cast_983_sample_completed_] 
          $T[type_cast_983_update_start_] 
          $T[type_cast_983_update_completed_] 
          // count_inp1x_x1
          // start: Forward dependencies from count_inp1x_x1 to transition type_cast_983_sample_start_
          type_cast_983_sample_start_ <-& (phi_stmt_834_update_completed_)
          // done: Forward dependencies from count_inp1x_x1 to transition type_cast_983_sample_start_
          ;;[type_cast_983_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_983_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_983_sample_start_ &-> (type_cast_983_Sample)
          type_cast_983_sample_completed_ <-& (type_cast_983_Sample)
          type_cast_983_sample_completed_ &-> ($null)
          type_cast_983_update_start_ &-> (type_cast_983_Update)
          type_cast_983_update_completed_ <-& (type_cast_983_Update)
          // RAW reenables for count_inp1x_x1
          phi_stmt_834_update_start_ o<-& (type_cast_983_sample_completed_ 0)
          // self-release: 
          type_cast_983_sample_start_ o<-& (type_cast_983_sample_completed_ 1)
          $null &-> (type_cast_983_update_start_)
          type_cast_983_update_start_ o<-& (type_cast_983_update_completed_ 0)
          // Target expression
          // (as target) type_cast_957_957_delayed_1_0
          // start: WAR dependencies for type_cast_957_957_delayed_1_0
          // done: WAR dependencies for type_cast_957_957_delayed_1_0
          // end:  			type_cast_957_957_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for count_inp1x_x0
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for count_inp1x_x0
          // start:  			$volatile count_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 287
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen_ifx_xend_taken
          // ($bitcast ($uint<16>) inc254 )
          // inc254
          // ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // whilex_xbody_ifx_xend_taken
          // type_cast_957_957_delayed_1_0
          // Target expression
          // (as target) count_inp1x_x0
          // start: WAR dependencies for count_inp1x_x0
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for count_inp1x_x0
          // end:  			$volatile count_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			$guard (ifx_xend_exec_guard) conv260 := ($cast ($uint<32>) count_inp1x_x0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 288
          // Guard expression 
          // ifx_xend_exec_guard
          // Source expression
          // ($cast ($uint<32>) count_inp1x_x0 )
          $T[type_cast_999_sample_start_] 
          $T[type_cast_999_sample_completed_] 
          $T[type_cast_999_update_start_] 
          $T[type_cast_999_update_completed_] 
          // Guard dependency for expression type_cast_999 with guard R_ifx_xend_exec_guard_996
          // root assign_stmt_56 of guard-expression not in visited elements.
          // root assign_stmt_69 of guard-expression not in visited elements.
          // root assign_stmt_81 of guard-expression not in visited elements.
          // root assign_stmt_94 of guard-expression not in visited elements.
          type_cast_999_sample_start_ <-& (type_cast_847_update_completed_)
          // RAW reenables for ifx_xend_exec_guard
          type_cast_847_update_start_ o<-& (type_cast_999_sample_completed_ 0)
          // count_inp1x_x0
          // start: Forward dependencies from count_inp1x_x0 to transition type_cast_999_sample_start_
          type_cast_999_sample_start_ <-& (type_cast_983_update_completed_)
          type_cast_999_sample_start_ <-& (type_cast_847_update_completed_)
          type_cast_999_sample_start_ <-& (assign_stmt_915_update_completed_)
          // done: Forward dependencies from count_inp1x_x0 to transition type_cast_999_sample_start_
          ;;[type_cast_999_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_999_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_999_sample_start_ &-> (type_cast_999_Sample)
          type_cast_999_sample_completed_ <-& (type_cast_999_Sample)
          type_cast_999_sample_completed_ &-> ($null)
          type_cast_999_update_start_ &-> (type_cast_999_Update)
          type_cast_999_update_completed_ <-& (type_cast_999_Update)
          // RAW reenables for count_inp1x_x0
          type_cast_983_update_start_ o<-& (type_cast_999_sample_completed_ 0)
          type_cast_847_update_start_ o<-& (type_cast_999_sample_completed_ 0)
          assign_stmt_915_update_start_ o<-& (type_cast_999_sample_completed_ 0)
          // self-release: 
          type_cast_999_sample_start_ o<-& (type_cast_999_sample_completed_ 1)
          $null &-> (type_cast_999_update_start_)
          type_cast_999_update_start_ o<-& (type_cast_999_update_completed_ 0)
          // Target expression
          // (as target) conv260
          // start: WAR dependencies for conv260
          // done: WAR dependencies for conv260
          // end:  			$guard (ifx_xend_exec_guard) conv260 := ($cast ($uint<32>) count_inp1x_x0 ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend_exec_guard_968_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 289
          $T[assign_stmt_1003_sample_start_] 
          $T[assign_stmt_1003_sample_completed_] 
          $T[assign_stmt_1003_update_start_] 
          $T[assign_stmt_1003_update_completed_] 
          // Source expression
          // ifx_xend_exec_guard
          // Target expression
          // (as target) ifx_xend_exec_guard_968_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1003_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1003_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1003_sample_start_ &-> (assign_stmt_1003_Sample)
          assign_stmt_1003_sample_completed_ <-& (assign_stmt_1003_Sample)
          assign_stmt_1003_sample_completed_ &-> ($null)
          assign_stmt_1003_update_start_ &-> (assign_stmt_1003_Update)
          assign_stmt_1003_update_completed_ <-& (assign_stmt_1003_Update)
          // start: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1003_sample_start_
          assign_stmt_1003_sample_start_ <-& (type_cast_847_update_completed_)
          // done: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1003_sample_start_
          // RAW reenables for ifx_xend_exec_guard
          type_cast_847_update_start_ o<-& (assign_stmt_1003_sample_completed_ 0)
          // self-release: 
          assign_stmt_1003_sample_start_ o<-& (assign_stmt_1003_sample_completed_ 1)
          $null &-> (assign_stmt_1003_update_start_)
          assign_stmt_1003_update_start_ o<-& (assign_stmt_1003_update_completed_ 0)
          // start: WAR dependencies for ifx_xend_exec_guard_968_delayed_1_0
          // done: WAR dependencies for ifx_xend_exec_guard_968_delayed_1_0
          // end:  			ifx_xend_exec_guard_968_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp263
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp263
          // start:  			$guard (ifx_xend_exec_guard_968_delayed_1_0) $volatile cmp263 := (conv260 == conv243) $buffering 1
          //  file prog.linked.opt.aa, line 290
          // volatile! 
          // Guard expression 
          // ifx_xend_exec_guard_968_delayed_1_0
          // Source expression
          // (conv260 == conv243)
          // conv260
          // conv243
          // Target expression
          // (as target) cmp263
          // start: WAR dependencies for cmp263
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp263
          // end:  			$guard (ifx_xend_exec_guard_968_delayed_1_0) $volatile cmp263 := (conv260 == conv243) $buffering 1
          // start:  			ifx_xend_exec_guard_975_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 291
          $T[assign_stmt_1012_sample_start_] 
          $T[assign_stmt_1012_sample_completed_] 
          $T[assign_stmt_1012_update_start_] 
          $T[assign_stmt_1012_update_completed_] 
          // Source expression
          // ifx_xend_exec_guard
          // Target expression
          // (as target) ifx_xend_exec_guard_975_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1012_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1012_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1012_sample_start_ &-> (assign_stmt_1012_Sample)
          assign_stmt_1012_sample_completed_ <-& (assign_stmt_1012_Sample)
          assign_stmt_1012_sample_completed_ &-> ($null)
          assign_stmt_1012_update_start_ &-> (assign_stmt_1012_Update)
          assign_stmt_1012_update_completed_ <-& (assign_stmt_1012_Update)
          // start: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1012_sample_start_
          assign_stmt_1012_sample_start_ <-& (type_cast_847_update_completed_)
          // done: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1012_sample_start_
          // RAW reenables for ifx_xend_exec_guard
          type_cast_847_update_start_ o<-& (assign_stmt_1012_sample_completed_ 0)
          // self-release: 
          assign_stmt_1012_sample_start_ o<-& (assign_stmt_1012_sample_completed_ 1)
          $null &-> (assign_stmt_1012_update_start_)
          assign_stmt_1012_update_start_ o<-& (assign_stmt_1012_update_completed_ 0)
          // start: WAR dependencies for ifx_xend_exec_guard_975_delayed_1_0
          // done: WAR dependencies for ifx_xend_exec_guard_975_delayed_1_0
          // end:  			ifx_xend_exec_guard_975_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend_landx_xlhsx_xtrue_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_landx_xlhsx_xtrue_taken
          // start:  			$volatile ifx_xend_landx_xlhsx_xtrue_taken := (ifx_xend_exec_guard_975_delayed_1_0 & cmp263) $buffering 1
          //  file prog.linked.opt.aa, line 292
          // volatile! 
          // Source expression
          // (ifx_xend_exec_guard_975_delayed_1_0 & cmp263)
          // ifx_xend_exec_guard_975_delayed_1_0
          // cmp263
          // Target expression
          // (as target) ifx_xend_landx_xlhsx_xtrue_taken
          // start: WAR dependencies for ifx_xend_landx_xlhsx_xtrue_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_landx_xlhsx_xtrue_taken
          // end:  			$volatile ifx_xend_landx_xlhsx_xtrue_taken := (ifx_xend_exec_guard_975_delayed_1_0 & cmp263) $buffering 1
          // start:  			ifx_xend_exec_guard_980_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 293
          $T[assign_stmt_1020_sample_start_] 
          $T[assign_stmt_1020_sample_completed_] 
          $T[assign_stmt_1020_update_start_] 
          $T[assign_stmt_1020_update_completed_] 
          // Source expression
          // ifx_xend_exec_guard
          // Target expression
          // (as target) ifx_xend_exec_guard_980_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1020_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1020_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1020_sample_start_ &-> (assign_stmt_1020_Sample)
          assign_stmt_1020_sample_completed_ <-& (assign_stmt_1020_Sample)
          assign_stmt_1020_sample_completed_ &-> ($null)
          assign_stmt_1020_update_start_ &-> (assign_stmt_1020_Update)
          assign_stmt_1020_update_completed_ <-& (assign_stmt_1020_Update)
          // start: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1020_sample_start_
          assign_stmt_1020_sample_start_ <-& (type_cast_847_update_completed_)
          // done: Forward dependencies from ifx_xend_exec_guard to transition assign_stmt_1020_sample_start_
          // RAW reenables for ifx_xend_exec_guard
          type_cast_847_update_start_ o<-& (assign_stmt_1020_sample_completed_ 0)
          // self-release: 
          assign_stmt_1020_sample_start_ o<-& (assign_stmt_1020_sample_completed_ 1)
          $null &-> (assign_stmt_1020_update_start_)
          assign_stmt_1020_update_start_ o<-& (assign_stmt_1020_update_completed_ 0)
          // start: WAR dependencies for ifx_xend_exec_guard_980_delayed_1_0
          // done: WAR dependencies for ifx_xend_exec_guard_980_delayed_1_0
          // end:  			ifx_xend_exec_guard_980_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_ifx_xend300_taken
          // start:  			$volatile ifx_xend_ifx_xend300_taken := (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 )) $buffering 1
          //  file prog.linked.opt.aa, line 294
          // volatile! 
          // Source expression
          // (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 ))
          // ifx_xend_exec_guard_980_delayed_1_0
          // ( ~ cmp263 )
          // cmp263
          // Target expression
          // (as target) ifx_xend_ifx_xend300_taken
          // start: WAR dependencies for ifx_xend_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend_ifx_xend300_taken
          // end:  			$volatile ifx_xend_ifx_xend300_taken := (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 )) $buffering 1
          // start: WAR dependencies for landx_xlhsx_xtrue_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_exec_guard
          // start:  			$volatile landx_xlhsx_xtrue_exec_guard := ifx_xend_landx_xlhsx_xtrue_taken $buffering 1
          //  file prog.linked.opt.aa, line 295
          // volatile! 
          // Source expression
          // ifx_xend_landx_xlhsx_xtrue_taken
          // Target expression
          // (as target) landx_xlhsx_xtrue_exec_guard
          // start: WAR dependencies for landx_xlhsx_xtrue_exec_guard
          // ignored out-of-scope w_root 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_exec_guard
          // end:  			$volatile landx_xlhsx_xtrue_exec_guard := ifx_xend_landx_xlhsx_xtrue_taken $buffering 1
          // start:  			count_inp2x_x1_990_delayed_2_0 := count_inp2x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 296
          $T[assign_stmt_1032_sample_start_] 
          $T[assign_stmt_1032_sample_completed_] 
          $T[assign_stmt_1032_update_start_] 
          $T[assign_stmt_1032_update_completed_] 
          // Source expression
          // count_inp2x_x1
          // Target expression
          // (as target) count_inp2x_x1_990_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1032_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1032_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1032_sample_start_ &-> (assign_stmt_1032_Sample)
          assign_stmt_1032_sample_completed_ <-& (assign_stmt_1032_Sample)
          assign_stmt_1032_sample_completed_ &-> ($null)
          assign_stmt_1032_update_start_ &-> (assign_stmt_1032_Update)
          assign_stmt_1032_update_completed_ <-& (assign_stmt_1032_Update)
          // start: Forward dependencies from count_inp2x_x1 to transition assign_stmt_1032_sample_start_
          assign_stmt_1032_sample_start_ <-& (phi_stmt_839_update_completed_)
          // done: Forward dependencies from count_inp2x_x1 to transition assign_stmt_1032_sample_start_
          // RAW reenables for count_inp2x_x1
          phi_stmt_839_update_start_ o<-& (assign_stmt_1032_sample_completed_ 0)
          // self-release: 
          assign_stmt_1032_sample_start_ o<-& (assign_stmt_1032_sample_completed_ 1)
          $null &-> (assign_stmt_1032_update_start_)
          assign_stmt_1032_update_start_ o<-& (assign_stmt_1032_update_completed_ 0)
          // start: WAR dependencies for count_inp2x_x1_990_delayed_2_0
          // done: WAR dependencies for count_inp2x_x1_990_delayed_2_0
          // end:  			count_inp2x_x1_990_delayed_2_0 := count_inp2x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			$guard (landx_xlhsx_xtrue_exec_guard) conv266 := ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 297
          // Guard expression 
          // landx_xlhsx_xtrue_exec_guard
          // Source expression
          // ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 )
          $T[type_cast_1036_sample_start_] 
          $T[type_cast_1036_sample_completed_] 
          $T[type_cast_1036_update_start_] 
          $T[type_cast_1036_update_completed_] 
          // Guard dependency for expression type_cast_1036 with guard R_landx_xlhsx_xtrue_exec_guard_1033
          // root assign_stmt_56 of guard-expression not in visited elements.
          // root assign_stmt_69 of guard-expression not in visited elements.
          // root assign_stmt_81 of guard-expression not in visited elements.
          // root assign_stmt_94 of guard-expression not in visited elements.
          type_cast_1036_sample_start_ <-& (type_cast_999_update_completed_)
          type_cast_1036_sample_start_ <-& (assign_stmt_1012_update_completed_)
          // RAW reenables for landx_xlhsx_xtrue_exec_guard
          type_cast_999_update_start_ o<-& (type_cast_1036_sample_completed_ 0)
          assign_stmt_1012_update_start_ o<-& (type_cast_1036_sample_completed_ 0)
          // count_inp2x_x1_990_delayed_2_0
          // start: Forward dependencies from count_inp2x_x1_990_delayed_2_0 to transition type_cast_1036_sample_start_
          type_cast_1036_sample_start_ <-& (assign_stmt_1032_update_completed_)
          // done: Forward dependencies from count_inp2x_x1_990_delayed_2_0 to transition type_cast_1036_sample_start_
          ;;[type_cast_1036_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1036_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1036_sample_start_ &-> (type_cast_1036_Sample)
          type_cast_1036_sample_completed_ <-& (type_cast_1036_Sample)
          type_cast_1036_sample_completed_ &-> ($null)
          type_cast_1036_update_start_ &-> (type_cast_1036_Update)
          type_cast_1036_update_completed_ <-& (type_cast_1036_Update)
          // RAW reenables for count_inp2x_x1_990_delayed_2_0
          assign_stmt_1032_update_start_ o<-& (type_cast_1036_sample_completed_ 0)
          // self-release: 
          type_cast_1036_sample_start_ o<-& (type_cast_1036_sample_completed_ 1)
          $null &-> (type_cast_1036_update_start_)
          type_cast_1036_update_start_ o<-& (type_cast_1036_update_completed_ 0)
          // Target expression
          // (as target) conv266
          // start: WAR dependencies for conv266
          // done: WAR dependencies for conv266
          // end:  			$guard (landx_xlhsx_xtrue_exec_guard) conv266 := ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 ) $buffering 1// bits of buffering = 32. 
          // start:  			landx_xlhsx_xtrue_exec_guard_993_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 298
          $T[assign_stmt_1040_sample_start_] 
          $T[assign_stmt_1040_sample_completed_] 
          $T[assign_stmt_1040_update_start_] 
          $T[assign_stmt_1040_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue_exec_guard_993_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1040_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1040_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1040_sample_start_ &-> (assign_stmt_1040_Sample)
          assign_stmt_1040_sample_completed_ <-& (assign_stmt_1040_Sample)
          assign_stmt_1040_sample_completed_ &-> ($null)
          assign_stmt_1040_update_start_ &-> (assign_stmt_1040_Update)
          assign_stmt_1040_update_completed_ <-& (assign_stmt_1040_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1040_sample_start_
          assign_stmt_1040_sample_start_ <-& (type_cast_999_update_completed_)
          assign_stmt_1040_sample_start_ <-& (assign_stmt_1012_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1040_sample_start_
          // RAW reenables for landx_xlhsx_xtrue_exec_guard
          type_cast_999_update_start_ o<-& (assign_stmt_1040_sample_completed_ 0)
          assign_stmt_1012_update_start_ o<-& (assign_stmt_1040_sample_completed_ 0)
          // self-release: 
          assign_stmt_1040_sample_start_ o<-& (assign_stmt_1040_sample_completed_ 1)
          $null &-> (assign_stmt_1040_update_start_)
          assign_stmt_1040_update_start_ o<-& (assign_stmt_1040_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue_exec_guard_993_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue_exec_guard_993_delayed_1_0
          // end:  			landx_xlhsx_xtrue_exec_guard_993_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp269
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp269
          // start:  			$guard (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0) $volatile cmp269 := (conv266 < conv268) $buffering 1
          //  file prog.linked.opt.aa, line 299
          // volatile! 
          // Guard expression 
          // landx_xlhsx_xtrue_exec_guard_993_delayed_1_0
          // Source expression
          // (conv266 < conv268)
          // conv266
          // conv268
          // Target expression
          // (as target) cmp269
          // start: WAR dependencies for cmp269
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp269
          // end:  			$guard (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0) $volatile cmp269 := (conv266 < conv268) $buffering 1
          // start:  			landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 300
          $T[assign_stmt_1049_sample_start_] 
          $T[assign_stmt_1049_sample_completed_] 
          $T[assign_stmt_1049_update_start_] 
          $T[assign_stmt_1049_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1049_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1049_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1049_sample_start_ &-> (assign_stmt_1049_Sample)
          assign_stmt_1049_sample_completed_ <-& (assign_stmt_1049_Sample)
          assign_stmt_1049_sample_completed_ &-> ($null)
          assign_stmt_1049_update_start_ &-> (assign_stmt_1049_Update)
          assign_stmt_1049_update_completed_ <-& (assign_stmt_1049_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1049_sample_start_
          assign_stmt_1049_sample_start_ <-& (type_cast_999_update_completed_)
          assign_stmt_1049_sample_start_ <-& (assign_stmt_1012_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1049_sample_start_
          // RAW reenables for landx_xlhsx_xtrue_exec_guard
          type_cast_999_update_start_ o<-& (assign_stmt_1049_sample_completed_ 0)
          assign_stmt_1012_update_start_ o<-& (assign_stmt_1049_sample_completed_ 0)
          // self-release: 
          assign_stmt_1049_sample_start_ o<-& (assign_stmt_1049_sample_completed_ 1)
          $null &-> (assign_stmt_1049_update_start_)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1049_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
          // end:  			landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for landx_xlhsx_xtrue_ifx_xthen271_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_ifx_xthen271_taken
          // start:  			$volatile landx_xlhsx_xtrue_ifx_xthen271_taken := (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269) $buffering 1
          //  file prog.linked.opt.aa, line 301
          // volatile! 
          // Source expression
          // (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269)
          // landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
          // cmp269
          // Target expression
          // (as target) landx_xlhsx_xtrue_ifx_xthen271_taken
          // start: WAR dependencies for landx_xlhsx_xtrue_ifx_xthen271_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_ifx_xthen271_taken
          // end:  			$volatile landx_xlhsx_xtrue_ifx_xthen271_taken := (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269) $buffering 1
          // start:  			landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 302
          $T[assign_stmt_1057_sample_start_] 
          $T[assign_stmt_1057_sample_completed_] 
          $T[assign_stmt_1057_update_start_] 
          $T[assign_stmt_1057_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1057_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1057_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1057_sample_start_ &-> (assign_stmt_1057_Sample)
          assign_stmt_1057_sample_completed_ <-& (assign_stmt_1057_Sample)
          assign_stmt_1057_sample_completed_ &-> ($null)
          assign_stmt_1057_update_start_ &-> (assign_stmt_1057_Update)
          assign_stmt_1057_update_completed_ <-& (assign_stmt_1057_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1057_sample_start_
          assign_stmt_1057_sample_start_ <-& (type_cast_999_update_completed_)
          assign_stmt_1057_sample_start_ <-& (assign_stmt_1012_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue_exec_guard to transition assign_stmt_1057_sample_start_
          // RAW reenables for landx_xlhsx_xtrue_exec_guard
          type_cast_999_update_start_ o<-& (assign_stmt_1057_sample_completed_ 0)
          assign_stmt_1012_update_start_ o<-& (assign_stmt_1057_sample_completed_ 0)
          // self-release: 
          assign_stmt_1057_sample_start_ o<-& (assign_stmt_1057_sample_completed_ 1)
          $null &-> (assign_stmt_1057_update_start_)
          assign_stmt_1057_update_start_ o<-& (assign_stmt_1057_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
          // end:  			landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // start:  			$volatile landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken := (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 )) $buffering 1
          //  file prog.linked.opt.aa, line 303
          // volatile! 
          // Source expression
          // (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 ))
          // landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
          // ( ~ cmp269 )
          // cmp269
          // Target expression
          // (as target) landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // start: WAR dependencies for landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // end:  			$volatile landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken := (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 )) $buffering 1
          // start: WAR dependencies for ifx_xthen271_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen271_exec_guard
          // start:  			$volatile ifx_xthen271_exec_guard := landx_xlhsx_xtrue_ifx_xthen271_taken $buffering 1
          //  file prog.linked.opt.aa, line 304
          // volatile! 
          // Source expression
          // landx_xlhsx_xtrue_ifx_xthen271_taken
          // Target expression
          // (as target) ifx_xthen271_exec_guard
          // start: WAR dependencies for ifx_xthen271_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen271_exec_guard
          // end:  			$volatile ifx_xthen271_exec_guard := landx_xlhsx_xtrue_ifx_xthen271_taken $buffering 1
          // start:  			add_inp2x_x1_1015_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 305
          $T[assign_stmt_1069_sample_start_] 
          $T[assign_stmt_1069_sample_completed_] 
          $T[assign_stmt_1069_update_start_] 
          $T[assign_stmt_1069_update_completed_] 
          // Source expression
          // add_inp2x_x1
          // Target expression
          // (as target) add_inp2x_x1_1015_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1069_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1069_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1069_sample_start_ &-> (assign_stmt_1069_Sample)
          assign_stmt_1069_sample_completed_ <-& (assign_stmt_1069_Sample)
          assign_stmt_1069_sample_completed_ &-> ($null)
          assign_stmt_1069_update_start_ &-> (assign_stmt_1069_Update)
          assign_stmt_1069_update_completed_ <-& (assign_stmt_1069_Update)
          // start: Forward dependencies from add_inp2x_x1 to transition assign_stmt_1069_sample_start_
          assign_stmt_1069_sample_start_ <-& (phi_stmt_829_update_completed_)
          // done: Forward dependencies from add_inp2x_x1 to transition assign_stmt_1069_sample_start_
          // RAW reenables for add_inp2x_x1
          phi_stmt_829_update_start_ o<-& (assign_stmt_1069_sample_completed_ 0)
          // self-release: 
          assign_stmt_1069_sample_start_ o<-& (assign_stmt_1069_sample_completed_ 1)
          $null &-> (assign_stmt_1069_update_start_)
          assign_stmt_1069_update_start_ o<-& (assign_stmt_1069_update_completed_ 0)
          // start: WAR dependencies for add_inp2x_x1_1015_delayed_3_0
          // done: WAR dependencies for add_inp2x_x1_1015_delayed_3_0
          // end:  			add_inp2x_x1_1015_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          // start:  			$guard (ifx_xthen271_exec_guard) idxprom273 := ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 306
          // Guard expression 
          // ifx_xthen271_exec_guard
          // Source expression
          // ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 )
          $T[type_cast_1073_sample_start_] 
          $T[type_cast_1073_sample_completed_] 
          $T[type_cast_1073_update_start_] 
          $T[type_cast_1073_update_completed_] 
          // Guard dependency for expression type_cast_1073 with guard R_ifx_xthen271_exec_guard_1070
          // root assign_stmt_131 of guard-expression not in visited elements.
          // root assign_stmt_144 of guard-expression not in visited elements.
          // root assign_stmt_156 of guard-expression not in visited elements.
          // root assign_stmt_169 of guard-expression not in visited elements.
          type_cast_1073_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1073_sample_start_ <-& (assign_stmt_1049_update_completed_)
          // RAW reenables for ifx_xthen271_exec_guard
          type_cast_1036_update_start_ o<-& (type_cast_1073_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1073_sample_completed_ 0)
          // add_inp2x_x1_1015_delayed_3_0
          // start: Forward dependencies from add_inp2x_x1_1015_delayed_3_0 to transition type_cast_1073_sample_start_
          type_cast_1073_sample_start_ <-& (assign_stmt_1069_update_completed_)
          // done: Forward dependencies from add_inp2x_x1_1015_delayed_3_0 to transition type_cast_1073_sample_start_
          ;;[type_cast_1073_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1073_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1073_sample_start_ &-> (type_cast_1073_Sample)
          type_cast_1073_sample_completed_ <-& (type_cast_1073_Sample)
          type_cast_1073_sample_completed_ &-> ($null)
          type_cast_1073_update_start_ &-> (type_cast_1073_Update)
          type_cast_1073_update_completed_ <-& (type_cast_1073_Update)
          // RAW reenables for add_inp2x_x1_1015_delayed_3_0
          assign_stmt_1069_update_start_ o<-& (type_cast_1073_sample_completed_ 0)
          // self-release: 
          type_cast_1073_sample_start_ o<-& (type_cast_1073_sample_completed_ 1)
          $null &-> (type_cast_1073_update_start_)
          type_cast_1073_update_start_ o<-& (type_cast_1073_update_completed_ 0)
          // Target expression
          // (as target) idxprom273
          // start: WAR dependencies for idxprom273
          // done: WAR dependencies for idxprom273
          // end:  			$guard (ifx_xthen271_exec_guard) idxprom273 := ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx274 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 307
          // Source expression
          // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273])
          $T[addr_of_1080_sample_start_] 
          $T[addr_of_1080_sample_completed_] 
          $T[addr_of_1080_update_start_] 
          $T[addr_of_1080_update_completed_] 
          $T[array_obj_ref_1079_root_address_calculated] 
          $T[array_obj_ref_1079_offset_calculated] 
          $T[array_obj_ref_1079_index_resized_1] 
          $T[array_obj_ref_1079_index_scaled_1] 
          $T[array_obj_ref_1079_index_computed_1] 
          // idxprom273
          // start: Forward dependencies from idxprom273 to transition array_obj_ref_1079_index_computed_1
          array_obj_ref_1079_index_computed_1 <-& (type_cast_1073_update_completed_)
          // done: Forward dependencies from idxprom273 to transition array_obj_ref_1079_index_computed_1
          ;;[array_obj_ref_1079_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1079_index_computed_1 &-> (array_obj_ref_1079_index_resize_1)
          array_obj_ref_1079_index_resized_1 <-& (array_obj_ref_1079_index_resize_1)
          ;;[array_obj_ref_1079_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1079_index_resized_1 &-> (array_obj_ref_1079_index_scale_1)
          array_obj_ref_1079_index_scaled_1 <-& (array_obj_ref_1079_index_scale_1)
          $T[array_obj_ref_1079_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_1079_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_1079_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_1079_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_1079_index_scaled_1 &-> (array_obj_ref_1079_final_index_sum_regn_Sample)
          array_obj_ref_1079_final_index_sum_regn_sample_complete <-& (array_obj_ref_1079_final_index_sum_regn_Sample)
          array_obj_ref_1079_final_index_sum_regn_update_start &-> (array_obj_ref_1079_final_index_sum_regn_Update)
          array_obj_ref_1079_offset_calculated <-& (array_obj_ref_1079_final_index_sum_regn_Update)
          type_cast_1073_update_start_ o<-& (array_obj_ref_1079_final_index_sum_regn_sample_complete 1)
          array_obj_ref_1079_final_index_sum_regn_update_start o<-& (array_obj_ref_1079_offset_calculated 0)
          ;;[array_obj_ref_1079_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1079_offset_calculated &-> (array_obj_ref_1079_base_plus_offset)
          array_obj_ref_1079_root_address_calculated <-& (array_obj_ref_1079_base_plus_offset)
          ;;[addr_of_1080_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1080_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1080_sample_start_ <-& (array_obj_ref_1079_root_address_calculated)
          addr_of_1080_sample_start_ &-> (addr_of_1080_request)
          addr_of_1080_sample_completed_ <-& (addr_of_1080_request)
          addr_of_1080_sample_completed_ &-> ($null)
          addr_of_1080_update_start_ &-> (addr_of_1080_complete)
          addr_of_1080_update_completed_ <-& (addr_of_1080_complete)
          // reenables .
          array_obj_ref_1079_final_index_sum_regn_update_start o<-& (addr_of_1080_sample_completed_ 0)
          // self-release 
          addr_of_1080_sample_start_ o<-& (addr_of_1080_sample_completed_ 1)
          addr_of_1080_update_start_ o<-& (addr_of_1080_update_completed_ 0)
          // Target expression
          // (as target) arrayidx274
          // start: WAR dependencies for arrayidx274
          // done: WAR dependencies for arrayidx274
          // end:  			arrayidx274 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen271_exec_guard_1025_delayed_7_0 := ifx_xthen271_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
          //  file prog.linked.opt.aa, line 308
          $T[assign_stmt_1084_sample_start_] 
          $T[assign_stmt_1084_sample_completed_] 
          $T[assign_stmt_1084_update_start_] 
          $T[assign_stmt_1084_update_completed_] 
          // Source expression
          // ifx_xthen271_exec_guard
          // Target expression
          // (as target) ifx_xthen271_exec_guard_1025_delayed_7_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1084_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1084_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1084_sample_start_ &-> (assign_stmt_1084_Sample)
          assign_stmt_1084_sample_completed_ <-& (assign_stmt_1084_Sample)
          assign_stmt_1084_sample_completed_ &-> ($null)
          assign_stmt_1084_update_start_ &-> (assign_stmt_1084_Update)
          assign_stmt_1084_update_completed_ <-& (assign_stmt_1084_Update)
          // start: Forward dependencies from ifx_xthen271_exec_guard to transition assign_stmt_1084_sample_start_
          assign_stmt_1084_sample_start_ <-& (type_cast_1036_update_completed_)
          assign_stmt_1084_sample_start_ <-& (assign_stmt_1049_update_completed_)
          // done: Forward dependencies from ifx_xthen271_exec_guard to transition assign_stmt_1084_sample_start_
          // RAW reenables for ifx_xthen271_exec_guard
          type_cast_1036_update_start_ o<-& (assign_stmt_1084_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1084_sample_completed_ 0)
          // self-release: 
          assign_stmt_1084_sample_start_ o<-& (assign_stmt_1084_sample_completed_ 1)
          $null &-> (assign_stmt_1084_update_start_)
          assign_stmt_1084_update_start_ o<-& (assign_stmt_1084_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen271_exec_guard_1025_delayed_7_0
          // done: WAR dependencies for ifx_xthen271_exec_guard_1025_delayed_7_0
          // end:  			ifx_xthen271_exec_guard_1025_delayed_7_0 := ifx_xthen271_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
          // start:  			$guard (ifx_xthen271_exec_guard_1025_delayed_7_0) tmp275 := ->(arrayidx274) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 309
          // Guard expression 
          // ifx_xthen271_exec_guard_1025_delayed_7_0
          // Source expression
          // ->(arrayidx274)
          $T[ptr_deref_1088_sample_start_] 
          $T[ptr_deref_1088_sample_completed_] 
          $T[ptr_deref_1088_update_start_] 
          $T[ptr_deref_1088_update_completed_] 
          // Guard dependency for expression ptr_deref_1088 with guard R_ifx_xthen271_exec_guard_1025_delayed_7_0_1085
          ptr_deref_1088_sample_start_ <-& (assign_stmt_1084_update_completed_)
          // RAW reenables for ifx_xthen271_exec_guard_1025_delayed_7_0
          assign_stmt_1084_update_start_ o<-& (ptr_deref_1088_sample_completed_ 0)
          $T[ptr_deref_1088_base_address_calculated] 
          // arrayidx274
          $T[ptr_deref_1088_word_address_calculated] 
          $T[ptr_deref_1088_root_address_calculated] 
          $T[ptr_deref_1088_base_address_resized] 
          ;;[ptr_deref_1088_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1088_base_address_calculated &-> (ptr_deref_1088_base_addr_resize)
          ptr_deref_1088_base_address_resized <-& (ptr_deref_1088_base_addr_resize)
          ;;[ptr_deref_1088_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1088_base_address_resized &-> (ptr_deref_1088_base_plus_offset)
          ptr_deref_1088_root_address_calculated <-& (ptr_deref_1088_base_plus_offset)
          ;;[ptr_deref_1088_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1088_root_address_calculated &-> (ptr_deref_1088_word_addrgen)
          ptr_deref_1088_word_address_calculated <-& (ptr_deref_1088_word_addrgen)
          ;;[ptr_deref_1088_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1088_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_1088_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_1088_sample_start_ <-& (ptr_deref_1088_word_address_calculated)
          // reenable-joins
          addr_of_1080_update_start_ o<-& (ptr_deref_1088_sample_completed_ 0)
          ptr_deref_1088_sample_start_ &-> (ptr_deref_1088_Sample)
          ptr_deref_1088_sample_completed_ <-& (ptr_deref_1088_Sample)
          ptr_deref_1088_sample_completed_ &-> ($null)
          ptr_deref_1088_update_start_ &-> (ptr_deref_1088_Update)
          ptr_deref_1088_update_completed_ <-& (ptr_deref_1088_Update)
          // start: Forward dependencies from arrayidx274 to transition ptr_deref_1088_base_address_calculated
          ptr_deref_1088_base_address_calculated <-& (addr_of_1080_update_completed_)
          // done: Forward dependencies from arrayidx274 to transition ptr_deref_1088_base_address_calculated
          ptr_deref_1088_sample_start_ <-& (ptr_deref_1088_base_address_calculated)
          // RAW reenables for arrayidx274
          addr_of_1080_update_start_ o<-& (ptr_deref_1088_sample_completed_ 0)
          // self-release: 
          ptr_deref_1088_sample_start_ o<-& (ptr_deref_1088_sample_completed_ 1)
          $null &-> (ptr_deref_1088_update_start_)
          ptr_deref_1088_update_start_ o<-& (ptr_deref_1088_update_completed_ 0)
          // Target expression
          // (as target) tmp275
          // start: WAR dependencies for tmp275
          // done: WAR dependencies for tmp275
          // end:  			$guard (ifx_xthen271_exec_guard_1025_delayed_7_0) tmp275 := ->(arrayidx274) $buffering 1// bits of buffering = 64. 
          // start:  			add_outx_x0_1032_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 310
          $T[assign_stmt_1092_sample_start_] 
          $T[assign_stmt_1092_sample_completed_] 
          $T[assign_stmt_1092_update_start_] 
          $T[assign_stmt_1092_update_completed_] 
          // Source expression
          // add_outx_x0
          // Target expression
          // (as target) add_outx_x0_1032_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1092_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1092_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1092_sample_start_ &-> (assign_stmt_1092_Sample)
          assign_stmt_1092_sample_completed_ <-& (assign_stmt_1092_Sample)
          assign_stmt_1092_sample_completed_ &-> ($null)
          assign_stmt_1092_update_start_ &-> (assign_stmt_1092_Update)
          assign_stmt_1092_update_completed_ <-& (assign_stmt_1092_Update)
          // start: Forward dependencies from add_outx_x0 to transition assign_stmt_1092_sample_start_
          assign_stmt_1092_sample_start_ <-& (type_cast_847_update_completed_)
          assign_stmt_1092_sample_start_ <-& (assign_stmt_935_update_completed_)
          assign_stmt_1092_sample_start_ <-& (type_cast_953_update_completed_)
          // done: Forward dependencies from add_outx_x0 to transition assign_stmt_1092_sample_start_
          // RAW reenables for add_outx_x0
          type_cast_847_update_start_ o<-& (assign_stmt_1092_sample_completed_ 0)
          assign_stmt_935_update_start_ o<-& (assign_stmt_1092_sample_completed_ 0)
          type_cast_953_update_start_ o<-& (assign_stmt_1092_sample_completed_ 0)
          // self-release: 
          assign_stmt_1092_sample_start_ o<-& (assign_stmt_1092_sample_completed_ 1)
          $null &-> (assign_stmt_1092_update_start_)
          assign_stmt_1092_update_start_ o<-& (assign_stmt_1092_update_completed_ 0)
          // start: WAR dependencies for add_outx_x0_1032_delayed_2_0
          // done: WAR dependencies for add_outx_x0_1032_delayed_2_0
          // end:  			add_outx_x0_1032_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			$guard (ifx_xthen271_exec_guard) idxprom277 := ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 311
          // Guard expression 
          // ifx_xthen271_exec_guard
          // Source expression
          // ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 )
          $T[type_cast_1096_sample_start_] 
          $T[type_cast_1096_sample_completed_] 
          $T[type_cast_1096_update_start_] 
          $T[type_cast_1096_update_completed_] 
          // Guard dependency for expression type_cast_1096 with guard R_ifx_xthen271_exec_guard_1093
          // root assign_stmt_131 of guard-expression not in visited elements.
          // root assign_stmt_144 of guard-expression not in visited elements.
          // root assign_stmt_156 of guard-expression not in visited elements.
          // root assign_stmt_169 of guard-expression not in visited elements.
          type_cast_1096_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_1049_update_completed_)
          // RAW reenables for ifx_xthen271_exec_guard
          type_cast_1036_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          // add_outx_x0_1032_delayed_2_0
          // start: Forward dependencies from add_outx_x0_1032_delayed_2_0 to transition type_cast_1096_sample_start_
          type_cast_1096_sample_start_ <-& (assign_stmt_1092_update_completed_)
          // done: Forward dependencies from add_outx_x0_1032_delayed_2_0 to transition type_cast_1096_sample_start_
          ;;[type_cast_1096_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1096_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1096_sample_start_ &-> (type_cast_1096_Sample)
          type_cast_1096_sample_completed_ <-& (type_cast_1096_Sample)
          type_cast_1096_sample_completed_ &-> ($null)
          type_cast_1096_update_start_ &-> (type_cast_1096_Update)
          type_cast_1096_update_completed_ <-& (type_cast_1096_Update)
          // RAW reenables for add_outx_x0_1032_delayed_2_0
          assign_stmt_1092_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          // self-release: 
          type_cast_1096_sample_start_ o<-& (type_cast_1096_sample_completed_ 1)
          $null &-> (type_cast_1096_update_start_)
          type_cast_1096_update_start_ o<-& (type_cast_1096_update_completed_ 0)
          // Target expression
          // (as target) idxprom277
          // start: WAR dependencies for idxprom277
          // done: WAR dependencies for idxprom277
          // end:  			$guard (ifx_xthen271_exec_guard) idxprom277 := ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx278 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 312
          // Source expression
          // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277])
          $T[addr_of_1103_sample_start_] 
          $T[addr_of_1103_sample_completed_] 
          $T[addr_of_1103_update_start_] 
          $T[addr_of_1103_update_completed_] 
          $T[array_obj_ref_1102_root_address_calculated] 
          $T[array_obj_ref_1102_offset_calculated] 
          $T[array_obj_ref_1102_index_resized_1] 
          $T[array_obj_ref_1102_index_scaled_1] 
          $T[array_obj_ref_1102_index_computed_1] 
          // idxprom277
          // start: Forward dependencies from idxprom277 to transition array_obj_ref_1102_index_computed_1
          array_obj_ref_1102_index_computed_1 <-& (type_cast_1096_update_completed_)
          // done: Forward dependencies from idxprom277 to transition array_obj_ref_1102_index_computed_1
          ;;[array_obj_ref_1102_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1102_index_computed_1 &-> (array_obj_ref_1102_index_resize_1)
          array_obj_ref_1102_index_resized_1 <-& (array_obj_ref_1102_index_resize_1)
          ;;[array_obj_ref_1102_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1102_index_resized_1 &-> (array_obj_ref_1102_index_scale_1)
          array_obj_ref_1102_index_scaled_1 <-& (array_obj_ref_1102_index_scale_1)
          $T[array_obj_ref_1102_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_1102_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_1102_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_1102_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_1102_index_scaled_1 &-> (array_obj_ref_1102_final_index_sum_regn_Sample)
          array_obj_ref_1102_final_index_sum_regn_sample_complete <-& (array_obj_ref_1102_final_index_sum_regn_Sample)
          array_obj_ref_1102_final_index_sum_regn_update_start &-> (array_obj_ref_1102_final_index_sum_regn_Update)
          array_obj_ref_1102_offset_calculated <-& (array_obj_ref_1102_final_index_sum_regn_Update)
          type_cast_1096_update_start_ o<-& (array_obj_ref_1102_final_index_sum_regn_sample_complete 1)
          array_obj_ref_1102_final_index_sum_regn_update_start o<-& (array_obj_ref_1102_offset_calculated 0)
          ;;[array_obj_ref_1102_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1102_offset_calculated &-> (array_obj_ref_1102_base_plus_offset)
          array_obj_ref_1102_root_address_calculated <-& (array_obj_ref_1102_base_plus_offset)
          ;;[addr_of_1103_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1103_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1103_sample_start_ <-& (array_obj_ref_1102_root_address_calculated)
          addr_of_1103_sample_start_ &-> (addr_of_1103_request)
          addr_of_1103_sample_completed_ <-& (addr_of_1103_request)
          addr_of_1103_sample_completed_ &-> ($null)
          addr_of_1103_update_start_ &-> (addr_of_1103_complete)
          addr_of_1103_update_completed_ <-& (addr_of_1103_complete)
          // reenables .
          array_obj_ref_1102_final_index_sum_regn_update_start o<-& (addr_of_1103_sample_completed_ 0)
          // self-release 
          addr_of_1103_sample_start_ o<-& (addr_of_1103_sample_completed_ 1)
          addr_of_1103_update_start_ o<-& (addr_of_1103_update_completed_ 0)
          // Target expression
          // (as target) arrayidx278
          // start: WAR dependencies for arrayidx278
          // done: WAR dependencies for arrayidx278
          // end:  			arrayidx278 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen271_exec_guard_1042_delayed_13_0 := ifx_xthen271_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
          //  file prog.linked.opt.aa, line 313
          $T[assign_stmt_1107_sample_start_] 
          $T[assign_stmt_1107_sample_completed_] 
          $T[assign_stmt_1107_update_start_] 
          $T[assign_stmt_1107_update_completed_] 
          // Source expression
          // ifx_xthen271_exec_guard
          // Target expression
          // (as target) ifx_xthen271_exec_guard_1042_delayed_13_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1107_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1107_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1107_sample_start_ &-> (assign_stmt_1107_Sample)
          assign_stmt_1107_sample_completed_ <-& (assign_stmt_1107_Sample)
          assign_stmt_1107_sample_completed_ &-> ($null)
          assign_stmt_1107_update_start_ &-> (assign_stmt_1107_Update)
          assign_stmt_1107_update_completed_ <-& (assign_stmt_1107_Update)
          // start: Forward dependencies from ifx_xthen271_exec_guard to transition assign_stmt_1107_sample_start_
          assign_stmt_1107_sample_start_ <-& (type_cast_1036_update_completed_)
          assign_stmt_1107_sample_start_ <-& (assign_stmt_1049_update_completed_)
          // done: Forward dependencies from ifx_xthen271_exec_guard to transition assign_stmt_1107_sample_start_
          // RAW reenables for ifx_xthen271_exec_guard
          type_cast_1036_update_start_ o<-& (assign_stmt_1107_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1107_sample_completed_ 0)
          // self-release: 
          assign_stmt_1107_sample_start_ o<-& (assign_stmt_1107_sample_completed_ 1)
          $null &-> (assign_stmt_1107_update_start_)
          assign_stmt_1107_update_start_ o<-& (assign_stmt_1107_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen271_exec_guard_1042_delayed_13_0
          // done: WAR dependencies for ifx_xthen271_exec_guard_1042_delayed_13_0
          // end:  			ifx_xthen271_exec_guard_1042_delayed_13_0 := ifx_xthen271_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
          // start:  			arrayidx278_1043_delayed_6_0 := arrayidx278 $buffering 6 $cut_through // bits of buffering = 192. 
          //  file prog.linked.opt.aa, line 314
          $T[assign_stmt_1110_sample_start_] 
          $T[assign_stmt_1110_sample_completed_] 
          $T[assign_stmt_1110_update_start_] 
          $T[assign_stmt_1110_update_completed_] 
          // Source expression
          // arrayidx278
          // Target expression
          // (as target) arrayidx278_1043_delayed_6_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1110_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1110_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1110_sample_start_ &-> (assign_stmt_1110_Sample)
          assign_stmt_1110_sample_completed_ <-& (assign_stmt_1110_Sample)
          assign_stmt_1110_sample_completed_ &-> ($null)
          assign_stmt_1110_update_start_ &-> (assign_stmt_1110_Update)
          assign_stmt_1110_update_completed_ <-& (assign_stmt_1110_Update)
          // start: Forward dependencies from arrayidx278 to transition assign_stmt_1110_sample_start_
          assign_stmt_1110_sample_start_ <-& (addr_of_1103_update_completed_)
          // done: Forward dependencies from arrayidx278 to transition assign_stmt_1110_sample_start_
          // RAW reenables for arrayidx278
          addr_of_1103_update_start_ o<-& (assign_stmt_1110_sample_completed_ 0)
          // self-release: 
          assign_stmt_1110_sample_start_ o<-& (assign_stmt_1110_sample_completed_ 1)
          $null &-> (assign_stmt_1110_update_start_)
          assign_stmt_1110_update_start_ o<-& (assign_stmt_1110_update_completed_ 0)
          // start: WAR dependencies for arrayidx278_1043_delayed_6_0
          // done: WAR dependencies for arrayidx278_1043_delayed_6_0
          // end:  			arrayidx278_1043_delayed_6_0 := arrayidx278 $buffering 6 $cut_through // bits of buffering = 192. 
          // start:  			$guard (ifx_xthen271_exec_guard_1042_delayed_13_0) ->(arrayidx278_1043_delayed_6_0) := tmp275 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 315
          // Guard expression 
          // ifx_xthen271_exec_guard_1042_delayed_13_0
          // Source expression
          // tmp275
          // Target expression
          // ->(arrayidx278_1043_delayed_6_0)
          $T[ptr_deref_1113_sample_start_] 
          $T[ptr_deref_1113_sample_completed_] 
          $T[ptr_deref_1113_update_start_] 
          $T[ptr_deref_1113_update_completed_] 
          $T[ptr_deref_1113_base_address_calculated] 
          // arrayidx278_1043_delayed_6_0
          $T[ptr_deref_1113_word_address_calculated] 
          $T[ptr_deref_1113_root_address_calculated] 
          $T[ptr_deref_1113_base_address_resized] 
          ;;[ptr_deref_1113_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1113_base_address_calculated &-> (ptr_deref_1113_base_addr_resize)
          ptr_deref_1113_base_address_resized <-& (ptr_deref_1113_base_addr_resize)
          ;;[ptr_deref_1113_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1113_base_address_resized &-> (ptr_deref_1113_base_plus_offset)
          ptr_deref_1113_root_address_calculated <-& (ptr_deref_1113_base_plus_offset)
          ;;[ptr_deref_1113_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1113_root_address_calculated &-> (ptr_deref_1113_word_addrgen)
          ptr_deref_1113_word_address_calculated <-& (ptr_deref_1113_word_addrgen)
          ;;[ptr_deref_1113_Sample] 
          {
            ;;[ptr_deref_1113_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1113_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_1113_sample_start_ <-& (ptr_deref_1113_word_address_calculated)
          // reenable-joins
          assign_stmt_1110_update_start_ o<-& (ptr_deref_1113_sample_completed_ 0)
          ptr_deref_1113_sample_start_ &-> (ptr_deref_1113_Sample)
          ptr_deref_1113_sample_completed_ <-& (ptr_deref_1113_Sample)
          ptr_deref_1113_sample_completed_ &-> ($null)
          ptr_deref_1113_update_start_ &-> (ptr_deref_1113_Update)
          ptr_deref_1113_update_completed_ <-& (ptr_deref_1113_Update)
          // start: Forward dependencies from arrayidx278_1043_delayed_6_0 to transition ptr_deref_1113_base_address_calculated
          ptr_deref_1113_base_address_calculated <-& (assign_stmt_1110_update_completed_)
          // done: Forward dependencies from arrayidx278_1043_delayed_6_0 to transition ptr_deref_1113_base_address_calculated
          ptr_deref_1113_sample_start_ <-& (ptr_deref_1113_base_address_calculated)
          // RAW reenables for arrayidx278_1043_delayed_6_0
          assign_stmt_1110_update_start_ o<-& (ptr_deref_1113_sample_completed_ 0)
          // self-release: 
          ptr_deref_1113_sample_start_ o<-& (ptr_deref_1113_sample_completed_ 1)
          $null &-> (ptr_deref_1113_update_start_)
          ptr_deref_1113_update_start_ o<-& (ptr_deref_1113_update_completed_ 0)
          // start: Forward dependencies from tmp275 to transition ptr_deref_1113_sample_start_
          ptr_deref_1113_sample_start_ <-& (ptr_deref_1088_update_completed_)
          // done: Forward dependencies from tmp275 to transition ptr_deref_1113_sample_start_
          // RAW reenables for tmp275
          ptr_deref_1088_update_start_ o<-& (ptr_deref_1113_sample_completed_ 0)
          // end:  			$guard (ifx_xthen271_exec_guard_1042_delayed_13_0) ->(arrayidx278_1043_delayed_6_0) := tmp275 $buffering 1// bits of buffering = 64. 
          // start:  			count_inp2x_x1_1049_delayed_3_0 := count_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 316
          $T[assign_stmt_1118_sample_start_] 
          $T[assign_stmt_1118_sample_completed_] 
          $T[assign_stmt_1118_update_start_] 
          $T[assign_stmt_1118_update_completed_] 
          // Source expression
          // count_inp2x_x1
          // Target expression
          // (as target) count_inp2x_x1_1049_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1118_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1118_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1118_sample_start_ &-> (assign_stmt_1118_Sample)
          assign_stmt_1118_sample_completed_ <-& (assign_stmt_1118_Sample)
          assign_stmt_1118_sample_completed_ &-> ($null)
          assign_stmt_1118_update_start_ &-> (assign_stmt_1118_Update)
          assign_stmt_1118_update_completed_ <-& (assign_stmt_1118_Update)
          // start: Forward dependencies from count_inp2x_x1 to transition assign_stmt_1118_sample_start_
          assign_stmt_1118_sample_start_ <-& (phi_stmt_839_update_completed_)
          // done: Forward dependencies from count_inp2x_x1 to transition assign_stmt_1118_sample_start_
          // RAW reenables for count_inp2x_x1
          phi_stmt_839_update_start_ o<-& (assign_stmt_1118_sample_completed_ 0)
          // self-release: 
          assign_stmt_1118_sample_start_ o<-& (assign_stmt_1118_sample_completed_ 1)
          $null &-> (assign_stmt_1118_update_start_)
          assign_stmt_1118_update_start_ o<-& (assign_stmt_1118_update_completed_ 0)
          // start: WAR dependencies for count_inp2x_x1_1049_delayed_3_0
          // done: WAR dependencies for count_inp2x_x1_1049_delayed_3_0
          // end:  			count_inp2x_x1_1049_delayed_3_0 := count_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc280
          // done: WAR dependencies for inc280
          // start:  			$guard (ifx_xthen271_exec_guard) $volatile inc280 := (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 317
          // volatile! 
          // Guard expression 
          // ifx_xthen271_exec_guard
          // Source expression
          // (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // count_inp2x_x1_1049_delayed_3_0
          // Target expression
          // (as target) inc280
          // start: WAR dependencies for inc280
          // done: WAR dependencies for inc280
          // end:  			$guard (ifx_xthen271_exec_guard) $volatile inc280 := (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			add_inp2x_x1_1056_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 318
          $T[assign_stmt_1128_sample_start_] 
          $T[assign_stmt_1128_sample_completed_] 
          $T[assign_stmt_1128_update_start_] 
          $T[assign_stmt_1128_update_completed_] 
          // Source expression
          // add_inp2x_x1
          // Target expression
          // (as target) add_inp2x_x1_1056_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1128_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1128_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1128_sample_start_ &-> (assign_stmt_1128_Sample)
          assign_stmt_1128_sample_completed_ <-& (assign_stmt_1128_Sample)
          assign_stmt_1128_sample_completed_ &-> ($null)
          assign_stmt_1128_update_start_ &-> (assign_stmt_1128_Update)
          assign_stmt_1128_update_completed_ <-& (assign_stmt_1128_Update)
          // start: Forward dependencies from add_inp2x_x1 to transition assign_stmt_1128_sample_start_
          assign_stmt_1128_sample_start_ <-& (phi_stmt_829_update_completed_)
          // done: Forward dependencies from add_inp2x_x1 to transition assign_stmt_1128_sample_start_
          // RAW reenables for add_inp2x_x1
          phi_stmt_829_update_start_ o<-& (assign_stmt_1128_sample_completed_ 0)
          // self-release: 
          assign_stmt_1128_sample_start_ o<-& (assign_stmt_1128_sample_completed_ 1)
          $null &-> (assign_stmt_1128_update_start_)
          assign_stmt_1128_update_start_ o<-& (assign_stmt_1128_update_completed_ 0)
          // start: WAR dependencies for add_inp2x_x1_1056_delayed_3_0
          // done: WAR dependencies for add_inp2x_x1_1056_delayed_3_0
          // end:  			add_inp2x_x1_1056_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc282
          // done: WAR dependencies for inc282
          // start:  			$guard (ifx_xthen271_exec_guard) $volatile inc282 := (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 319
          // volatile! 
          // Guard expression 
          // ifx_xthen271_exec_guard
          // Source expression
          // (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // add_inp2x_x1_1056_delayed_3_0
          // Target expression
          // (as target) inc282
          // start: WAR dependencies for inc282
          // done: WAR dependencies for inc282
          // end:  			$guard (ifx_xthen271_exec_guard) $volatile inc282 := (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			add_outx_x0_1063_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 320
          $T[assign_stmt_1138_sample_start_] 
          $T[assign_stmt_1138_sample_completed_] 
          $T[assign_stmt_1138_update_start_] 
          $T[assign_stmt_1138_update_completed_] 
          // Source expression
          // add_outx_x0
          // Target expression
          // (as target) add_outx_x0_1063_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1138_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1138_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1138_sample_start_ &-> (assign_stmt_1138_Sample)
          assign_stmt_1138_sample_completed_ <-& (assign_stmt_1138_Sample)
          assign_stmt_1138_sample_completed_ &-> ($null)
          assign_stmt_1138_update_start_ &-> (assign_stmt_1138_Update)
          assign_stmt_1138_update_completed_ <-& (assign_stmt_1138_Update)
          // start: Forward dependencies from add_outx_x0 to transition assign_stmt_1138_sample_start_
          assign_stmt_1138_sample_start_ <-& (type_cast_847_update_completed_)
          assign_stmt_1138_sample_start_ <-& (assign_stmt_935_update_completed_)
          assign_stmt_1138_sample_start_ <-& (type_cast_953_update_completed_)
          // done: Forward dependencies from add_outx_x0 to transition assign_stmt_1138_sample_start_
          // RAW reenables for add_outx_x0
          type_cast_847_update_start_ o<-& (assign_stmt_1138_sample_completed_ 0)
          assign_stmt_935_update_start_ o<-& (assign_stmt_1138_sample_completed_ 0)
          type_cast_953_update_start_ o<-& (assign_stmt_1138_sample_completed_ 0)
          // self-release: 
          assign_stmt_1138_sample_start_ o<-& (assign_stmt_1138_sample_completed_ 1)
          $null &-> (assign_stmt_1138_update_start_)
          assign_stmt_1138_update_start_ o<-& (assign_stmt_1138_update_completed_ 0)
          // start: WAR dependencies for add_outx_x0_1063_delayed_2_0
          // done: WAR dependencies for add_outx_x0_1063_delayed_2_0
          // end:  			add_outx_x0_1063_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for inc284
          // done: WAR dependencies for inc284
          // start:  			$guard (ifx_xthen271_exec_guard) $volatile inc284 := (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 321
          // volatile! 
          // Guard expression 
          // ifx_xthen271_exec_guard
          // Source expression
          // (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // add_outx_x0_1063_delayed_2_0
          // Target expression
          // (as target) inc284
          // start: WAR dependencies for inc284
          // done: WAR dependencies for inc284
          // end:  			$guard (ifx_xthen271_exec_guard) $volatile inc284 := (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start: WAR dependencies for ifx_xthen271_landx_xlhsx_xtrue292_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen271_landx_xlhsx_xtrue292_taken
          // start:  			$volatile ifx_xthen271_landx_xlhsx_xtrue292_taken := ifx_xthen271_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 322
          // volatile! 
          // Source expression
          // ifx_xthen271_exec_guard
          // Target expression
          // (as target) ifx_xthen271_landx_xlhsx_xtrue292_taken
          // start: WAR dependencies for ifx_xthen271_landx_xlhsx_xtrue292_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen271_landx_xlhsx_xtrue292_taken
          // end:  			$volatile ifx_xthen271_landx_xlhsx_xtrue292_taken := ifx_xthen271_exec_guard $buffering 1
          // start: WAR dependencies for landx_xlhsx_xtrue292_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_exec_guard
          // start:  			$volatile landx_xlhsx_xtrue292_exec_guard := (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken) $buffering 1
          //  file prog.linked.opt.aa, line 323
          // volatile! 
          // Source expression
          // (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken)
          // ifx_xthen271_landx_xlhsx_xtrue292_taken
          // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // Target expression
          // (as target) landx_xlhsx_xtrue292_exec_guard
          // start: WAR dependencies for landx_xlhsx_xtrue292_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_exec_guard
          // end:  			$volatile landx_xlhsx_xtrue292_exec_guard := (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken) $buffering 1
          // start:  			type_cast_1082_1082_delayed_2_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 324
          // Source expression
          // ($bitcast ($uint<16>) add_outx_x0 )
          $T[type_cast_1156_sample_start_] 
          $T[type_cast_1156_sample_completed_] 
          $T[type_cast_1156_update_start_] 
          $T[type_cast_1156_update_completed_] 
          // add_outx_x0
          // start: Forward dependencies from add_outx_x0 to transition type_cast_1156_sample_start_
          type_cast_1156_sample_start_ <-& (type_cast_847_update_completed_)
          type_cast_1156_sample_start_ <-& (assign_stmt_935_update_completed_)
          type_cast_1156_sample_start_ <-& (type_cast_953_update_completed_)
          // done: Forward dependencies from add_outx_x0 to transition type_cast_1156_sample_start_
          ;;[type_cast_1156_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1156_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1156_sample_start_ &-> (type_cast_1156_Sample)
          type_cast_1156_sample_completed_ <-& (type_cast_1156_Sample)
          type_cast_1156_sample_completed_ &-> ($null)
          type_cast_1156_update_start_ &-> (type_cast_1156_Update)
          type_cast_1156_update_completed_ <-& (type_cast_1156_Update)
          // RAW reenables for add_outx_x0
          type_cast_847_update_start_ o<-& (type_cast_1156_sample_completed_ 0)
          assign_stmt_935_update_start_ o<-& (type_cast_1156_sample_completed_ 0)
          type_cast_953_update_start_ o<-& (type_cast_1156_sample_completed_ 0)
          // self-release: 
          type_cast_1156_sample_start_ o<-& (type_cast_1156_sample_completed_ 1)
          $null &-> (type_cast_1156_update_start_)
          type_cast_1156_update_start_ o<-& (type_cast_1156_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1082_1082_delayed_2_0
          // start: WAR dependencies for type_cast_1082_1082_delayed_2_0
          // done: WAR dependencies for type_cast_1082_1082_delayed_2_0
          // end:  			type_cast_1082_1082_delayed_2_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for add_outx_x2x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x2x_xph
          // start:  			$volatile add_outx_x2x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 325
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen271_landx_xlhsx_xtrue292_taken
          // ($bitcast ($uint<16>) inc284 )
          // inc284
          // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // type_cast_1082_1082_delayed_2_0
          // Target expression
          // (as target) add_outx_x2x_xph
          // start: WAR dependencies for add_outx_x2x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x2x_xph
          // end:  			$volatile add_outx_x2x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			type_cast_1094_1094_delayed_3_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 326
          // Source expression
          // ($bitcast ($uint<16>) add_inp2x_x1 )
          $T[type_cast_1171_sample_start_] 
          $T[type_cast_1171_sample_completed_] 
          $T[type_cast_1171_update_start_] 
          $T[type_cast_1171_update_completed_] 
          // add_inp2x_x1
          // start: Forward dependencies from add_inp2x_x1 to transition type_cast_1171_sample_start_
          type_cast_1171_sample_start_ <-& (phi_stmt_829_update_completed_)
          // done: Forward dependencies from add_inp2x_x1 to transition type_cast_1171_sample_start_
          ;;[type_cast_1171_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1171_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1171_sample_start_ &-> (type_cast_1171_Sample)
          type_cast_1171_sample_completed_ <-& (type_cast_1171_Sample)
          type_cast_1171_sample_completed_ &-> ($null)
          type_cast_1171_update_start_ &-> (type_cast_1171_Update)
          type_cast_1171_update_completed_ <-& (type_cast_1171_Update)
          // RAW reenables for add_inp2x_x1
          phi_stmt_829_update_start_ o<-& (type_cast_1171_sample_completed_ 0)
          // self-release: 
          type_cast_1171_sample_start_ o<-& (type_cast_1171_sample_completed_ 1)
          $null &-> (type_cast_1171_update_start_)
          type_cast_1171_update_start_ o<-& (type_cast_1171_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1094_1094_delayed_3_0
          // start: WAR dependencies for type_cast_1094_1094_delayed_3_0
          // done: WAR dependencies for type_cast_1094_1094_delayed_3_0
          // end:  			type_cast_1094_1094_delayed_3_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for add_inp2x_x0x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_inp2x_x0x_xph
          // start:  			$volatile add_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 327
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen271_landx_xlhsx_xtrue292_taken
          // ($bitcast ($uint<16>) inc282 )
          // inc282
          // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
          // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // type_cast_1094_1094_delayed_3_0
          // Target expression
          // (as target) add_inp2x_x0x_xph
          // start: WAR dependencies for add_inp2x_x0x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add_inp2x_x0x_xph
          // end:  			$volatile add_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			type_cast_1106_1106_delayed_3_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 328
          // Source expression
          // ($bitcast ($uint<16>) count_inp2x_x1 )
          $T[type_cast_1186_sample_start_] 
          $T[type_cast_1186_sample_completed_] 
          $T[type_cast_1186_update_start_] 
          $T[type_cast_1186_update_completed_] 
          // count_inp2x_x1
          // start: Forward dependencies from count_inp2x_x1 to transition type_cast_1186_sample_start_
          type_cast_1186_sample_start_ <-& (phi_stmt_839_update_completed_)
          // done: Forward dependencies from count_inp2x_x1 to transition type_cast_1186_sample_start_
          ;;[type_cast_1186_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1186_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1186_sample_start_ &-> (type_cast_1186_Sample)
          type_cast_1186_sample_completed_ <-& (type_cast_1186_Sample)
          type_cast_1186_sample_completed_ &-> ($null)
          type_cast_1186_update_start_ &-> (type_cast_1186_Update)
          type_cast_1186_update_completed_ <-& (type_cast_1186_Update)
          // RAW reenables for count_inp2x_x1
          phi_stmt_839_update_start_ o<-& (type_cast_1186_sample_completed_ 0)
          // self-release: 
          type_cast_1186_sample_start_ o<-& (type_cast_1186_sample_completed_ 1)
          $null &-> (type_cast_1186_update_start_)
          type_cast_1186_update_start_ o<-& (type_cast_1186_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1106_1106_delayed_3_0
          // start: WAR dependencies for type_cast_1106_1106_delayed_3_0
          // done: WAR dependencies for type_cast_1106_1106_delayed_3_0
          // end:  			type_cast_1106_1106_delayed_3_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for count_inp2x_x0x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for count_inp2x_x0x_xph
          // start:  			$volatile count_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          //  file prog.linked.opt.aa, line 329
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen271_landx_xlhsx_xtrue292_taken
          // ($bitcast ($uint<16>) inc280 )
          // inc280
          // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
          // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
          // type_cast_1106_1106_delayed_3_0
          // Target expression
          // (as target) count_inp2x_x0x_xph
          // start: WAR dependencies for count_inp2x_x0x_xph
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for count_inp2x_x0x_xph
          // end:  			$volatile count_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
          // start:  			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 330
          // Guard expression 
          // landx_xlhsx_xtrue292_exec_guard
          // Source expression
          // ($cast ($uint<32>) count_inp2x_x0x_xph )
          $T[type_cast_1202_sample_start_] 
          $T[type_cast_1202_sample_completed_] 
          $T[type_cast_1202_update_start_] 
          $T[type_cast_1202_update_completed_] 
          // Guard dependency for expression type_cast_1202 with guard R_landx_xlhsx_xtrue292_exec_guard_1199
          // root assign_stmt_131 of guard-expression not in visited elements.
          // root assign_stmt_144 of guard-expression not in visited elements.
          // root assign_stmt_156 of guard-expression not in visited elements.
          // root assign_stmt_169 of guard-expression not in visited elements.
          type_cast_1202_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1202_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1202_sample_start_ <-& (assign_stmt_1057_update_completed_)
          // RAW reenables for landx_xlhsx_xtrue292_exec_guard
          type_cast_1036_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          // count_inp2x_x0x_xph
          // start: Forward dependencies from count_inp2x_x0x_xph to transition type_cast_1202_sample_start_
          type_cast_1202_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1202_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1202_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1202_sample_start_ <-& (assign_stmt_1118_update_completed_)
          type_cast_1202_sample_start_ <-& (type_cast_1186_update_completed_)
          // done: Forward dependencies from count_inp2x_x0x_xph to transition type_cast_1202_sample_start_
          ;;[type_cast_1202_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1202_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1202_sample_start_ &-> (type_cast_1202_Sample)
          type_cast_1202_sample_completed_ <-& (type_cast_1202_Sample)
          type_cast_1202_sample_completed_ &-> ($null)
          type_cast_1202_update_start_ &-> (type_cast_1202_Update)
          type_cast_1202_update_completed_ <-& (type_cast_1202_Update)
          // RAW reenables for count_inp2x_x0x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          assign_stmt_1118_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          type_cast_1186_update_start_ o<-& (type_cast_1202_sample_completed_ 0)
          // self-release: 
          type_cast_1202_sample_start_ o<-& (type_cast_1202_sample_completed_ 1)
          $null &-> (type_cast_1202_update_start_)
          type_cast_1202_update_start_ o<-& (type_cast_1202_update_completed_ 0)
          // Target expression
          // (as target) conv294
          // start: WAR dependencies for conv294
          // done: WAR dependencies for conv294
          // end:  			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 1// bits of buffering = 32. 
          // start:  			landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 331
          $T[assign_stmt_1206_sample_start_] 
          $T[assign_stmt_1206_sample_completed_] 
          $T[assign_stmt_1206_update_start_] 
          $T[assign_stmt_1206_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue292_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1206_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1206_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1206_sample_start_ &-> (assign_stmt_1206_Sample)
          assign_stmt_1206_sample_completed_ <-& (assign_stmt_1206_Sample)
          assign_stmt_1206_sample_completed_ &-> ($null)
          assign_stmt_1206_update_start_ &-> (assign_stmt_1206_Update)
          assign_stmt_1206_update_completed_ <-& (assign_stmt_1206_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1206_sample_start_
          assign_stmt_1206_sample_start_ <-& (type_cast_1036_update_completed_)
          assign_stmt_1206_sample_start_ <-& (assign_stmt_1049_update_completed_)
          assign_stmt_1206_sample_start_ <-& (assign_stmt_1057_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1206_sample_start_
          // RAW reenables for landx_xlhsx_xtrue292_exec_guard
          type_cast_1036_update_start_ o<-& (assign_stmt_1206_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1206_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (assign_stmt_1206_sample_completed_ 0)
          // self-release: 
          assign_stmt_1206_sample_start_ o<-& (assign_stmt_1206_sample_completed_ 1)
          $null &-> (assign_stmt_1206_update_start_)
          assign_stmt_1206_update_start_ o<-& (assign_stmt_1206_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0
          // end:  			landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp297
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp297
          // start:  			$guard (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0) $volatile cmp297 := (conv294 == conv268) $buffering 1
          //  file prog.linked.opt.aa, line 332
          // volatile! 
          // Guard expression 
          // landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0
          // Source expression
          // (conv294 == conv268)
          // conv294
          // conv268
          // Target expression
          // (as target) cmp297
          // start: WAR dependencies for cmp297
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp297
          // end:  			$guard (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0) $volatile cmp297 := (conv294 == conv268) $buffering 1
          // start:  			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 333
          $T[assign_stmt_1215_sample_start_] 
          $T[assign_stmt_1215_sample_completed_] 
          $T[assign_stmt_1215_update_start_] 
          $T[assign_stmt_1215_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue292_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1215_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1215_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1215_sample_start_ &-> (assign_stmt_1215_Sample)
          assign_stmt_1215_sample_completed_ <-& (assign_stmt_1215_Sample)
          assign_stmt_1215_sample_completed_ &-> ($null)
          assign_stmt_1215_update_start_ &-> (assign_stmt_1215_Update)
          assign_stmt_1215_update_completed_ <-& (assign_stmt_1215_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1215_sample_start_
          assign_stmt_1215_sample_start_ <-& (type_cast_1036_update_completed_)
          assign_stmt_1215_sample_start_ <-& (assign_stmt_1049_update_completed_)
          assign_stmt_1215_sample_start_ <-& (assign_stmt_1057_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1215_sample_start_
          // RAW reenables for landx_xlhsx_xtrue292_exec_guard
          type_cast_1036_update_start_ o<-& (assign_stmt_1215_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1215_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (assign_stmt_1215_sample_completed_ 0)
          // self-release: 
          assign_stmt_1215_sample_start_ o<-& (assign_stmt_1215_sample_completed_ 1)
          $null &-> (assign_stmt_1215_update_start_)
          assign_stmt_1215_update_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
          // end:  			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for landx_xlhsx_xtrue292_ifx_xthen299_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_ifx_xthen299_taken
          // start:  			$volatile landx_xlhsx_xtrue292_ifx_xthen299_taken := (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297) $buffering 1
          //  file prog.linked.opt.aa, line 334
          // volatile! 
          // Source expression
          // (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297)
          // landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
          // cmp297
          // Target expression
          // (as target) landx_xlhsx_xtrue292_ifx_xthen299_taken
          // start: WAR dependencies for landx_xlhsx_xtrue292_ifx_xthen299_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_ifx_xthen299_taken
          // end:  			$volatile landx_xlhsx_xtrue292_ifx_xthen299_taken := (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297) $buffering 1
          // start:  			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 335
          $T[assign_stmt_1223_sample_start_] 
          $T[assign_stmt_1223_sample_completed_] 
          $T[assign_stmt_1223_update_start_] 
          $T[assign_stmt_1223_update_completed_] 
          // Source expression
          // landx_xlhsx_xtrue292_exec_guard
          // Target expression
          // (as target) landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1223_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1223_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1223_sample_start_ &-> (assign_stmt_1223_Sample)
          assign_stmt_1223_sample_completed_ <-& (assign_stmt_1223_Sample)
          assign_stmt_1223_sample_completed_ &-> ($null)
          assign_stmt_1223_update_start_ &-> (assign_stmt_1223_Update)
          assign_stmt_1223_update_completed_ <-& (assign_stmt_1223_Update)
          // start: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1223_sample_start_
          assign_stmt_1223_sample_start_ <-& (type_cast_1036_update_completed_)
          assign_stmt_1223_sample_start_ <-& (assign_stmt_1049_update_completed_)
          assign_stmt_1223_sample_start_ <-& (assign_stmt_1057_update_completed_)
          // done: Forward dependencies from landx_xlhsx_xtrue292_exec_guard to transition assign_stmt_1223_sample_start_
          // RAW reenables for landx_xlhsx_xtrue292_exec_guard
          type_cast_1036_update_start_ o<-& (assign_stmt_1223_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (assign_stmt_1223_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (assign_stmt_1223_sample_completed_ 0)
          // self-release: 
          assign_stmt_1223_sample_start_ o<-& (assign_stmt_1223_sample_completed_ 1)
          $null &-> (assign_stmt_1223_update_start_)
          assign_stmt_1223_update_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // start: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
          // done: WAR dependencies for landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
          // end:  			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for landx_xlhsx_xtrue292_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_ifx_xend300_taken
          // start:  			$volatile landx_xlhsx_xtrue292_ifx_xend300_taken := (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 )) $buffering 1
          //  file prog.linked.opt.aa, line 336
          // volatile! 
          // Source expression
          // (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 ))
          // landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
          // ( ~ cmp297 )
          // cmp297
          // Target expression
          // (as target) landx_xlhsx_xtrue292_ifx_xend300_taken
          // start: WAR dependencies for landx_xlhsx_xtrue292_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for landx_xlhsx_xtrue292_ifx_xend300_taken
          // end:  			$volatile landx_xlhsx_xtrue292_ifx_xend300_taken := (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 )) $buffering 1
          // start: WAR dependencies for ifx_xthen299_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen299_exec_guard
          // start:  			$volatile ifx_xthen299_exec_guard := landx_xlhsx_xtrue292_ifx_xthen299_taken $buffering 1
          //  file prog.linked.opt.aa, line 337
          // volatile! 
          // Source expression
          // landx_xlhsx_xtrue292_ifx_xthen299_taken
          // Target expression
          // (as target) ifx_xthen299_exec_guard
          // start: WAR dependencies for ifx_xthen299_exec_guard
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen299_exec_guard
          // end:  			$volatile ifx_xthen299_exec_guard := landx_xlhsx_xtrue292_ifx_xthen299_taken $buffering 1
          // start: WAR dependencies for ifx_xthen299_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen299_ifx_xend300_taken
          // start:  			$volatile ifx_xthen299_ifx_xend300_taken := ifx_xthen299_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 338
          // volatile! 
          // Source expression
          // ifx_xthen299_exec_guard
          // Target expression
          // (as target) ifx_xthen299_ifx_xend300_taken
          // start: WAR dependencies for ifx_xthen299_ifx_xend300_taken
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen299_ifx_xend300_taken
          // end:  			$volatile ifx_xthen299_ifx_xend300_taken := ifx_xthen299_exec_guard $buffering 1
          // start:  			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 339
          // Source expression
          // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
          $T[type_cast_1238_sample_start_] 
          $T[type_cast_1238_sample_completed_] 
          $T[type_cast_1238_update_start_] 
          $T[type_cast_1238_update_completed_] 
          // add_inp2x_x0x_xph
          // start: Forward dependencies from add_inp2x_x0x_xph to transition type_cast_1238_sample_start_
          type_cast_1238_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1238_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1238_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1238_sample_start_ <-& (assign_stmt_1128_update_completed_)
          type_cast_1238_sample_start_ <-& (type_cast_1171_update_completed_)
          // done: Forward dependencies from add_inp2x_x0x_xph to transition type_cast_1238_sample_start_
          ;;[type_cast_1238_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1238_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1238_sample_start_ &-> (type_cast_1238_Sample)
          type_cast_1238_sample_completed_ <-& (type_cast_1238_Sample)
          type_cast_1238_sample_completed_ &-> ($null)
          type_cast_1238_update_start_ &-> (type_cast_1238_Update)
          type_cast_1238_update_completed_ <-& (type_cast_1238_Update)
          // RAW reenables for add_inp2x_x0x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1238_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1238_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1238_sample_completed_ 0)
          assign_stmt_1128_update_start_ o<-& (type_cast_1238_sample_completed_ 0)
          type_cast_1171_update_start_ o<-& (type_cast_1238_sample_completed_ 0)
          // self-release: 
          type_cast_1238_sample_start_ o<-& (type_cast_1238_sample_completed_ 1)
          $null &-> (type_cast_1238_update_start_)
          type_cast_1238_update_start_ o<-& (type_cast_1238_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1143_1143_delayed_1_0
          // start: WAR dependencies for type_cast_1143_1143_delayed_1_0
          // done: WAR dependencies for type_cast_1143_1143_delayed_1_0
          // end:  			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 340
          // Source expression
          // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
          $T[type_cast_1242_sample_start_] 
          $T[type_cast_1242_sample_completed_] 
          $T[type_cast_1242_update_start_] 
          $T[type_cast_1242_update_completed_] 
          // add_inp2x_x0x_xph
          // start: Forward dependencies from add_inp2x_x0x_xph to transition type_cast_1242_sample_start_
          type_cast_1242_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1242_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1242_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1242_sample_start_ <-& (assign_stmt_1128_update_completed_)
          type_cast_1242_sample_start_ <-& (type_cast_1171_update_completed_)
          // done: Forward dependencies from add_inp2x_x0x_xph to transition type_cast_1242_sample_start_
          ;;[type_cast_1242_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1242_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1242_sample_start_ &-> (type_cast_1242_Sample)
          type_cast_1242_sample_completed_ <-& (type_cast_1242_Sample)
          type_cast_1242_sample_completed_ &-> ($null)
          type_cast_1242_update_start_ &-> (type_cast_1242_Update)
          type_cast_1242_update_completed_ <-& (type_cast_1242_Update)
          // RAW reenables for add_inp2x_x0x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1242_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1242_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1242_sample_completed_ 0)
          assign_stmt_1128_update_start_ o<-& (type_cast_1242_sample_completed_ 0)
          type_cast_1171_update_start_ o<-& (type_cast_1242_sample_completed_ 0)
          // self-release: 
          type_cast_1242_sample_start_ o<-& (type_cast_1242_sample_completed_ 1)
          $null &-> (type_cast_1242_update_start_)
          type_cast_1242_update_start_ o<-& (type_cast_1242_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1146_1146_delayed_1_0
          // start: WAR dependencies for type_cast_1146_1146_delayed_1_0
          // done: WAR dependencies for type_cast_1146_1146_delayed_1_0
          // end:  			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1149_1149_delayed_2_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 341
          // Source expression
          // ($bitcast ($uint<16>) add_inp2x_x1 )
          $T[type_cast_1246_sample_start_] 
          $T[type_cast_1246_sample_completed_] 
          $T[type_cast_1246_update_start_] 
          $T[type_cast_1246_update_completed_] 
          // add_inp2x_x1
          // start: Forward dependencies from add_inp2x_x1 to transition type_cast_1246_sample_start_
          type_cast_1246_sample_start_ <-& (phi_stmt_829_update_completed_)
          // done: Forward dependencies from add_inp2x_x1 to transition type_cast_1246_sample_start_
          ;;[type_cast_1246_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1246_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1246_sample_start_ &-> (type_cast_1246_Sample)
          type_cast_1246_sample_completed_ <-& (type_cast_1246_Sample)
          type_cast_1246_sample_completed_ &-> ($null)
          type_cast_1246_update_start_ &-> (type_cast_1246_Update)
          type_cast_1246_update_completed_ <-& (type_cast_1246_Update)
          // RAW reenables for add_inp2x_x1
          phi_stmt_829_update_start_ o<-& (type_cast_1246_sample_completed_ 0)
          // self-release: 
          type_cast_1246_sample_start_ o<-& (type_cast_1246_sample_completed_ 1)
          $null &-> (type_cast_1246_update_start_)
          type_cast_1246_update_start_ o<-& (type_cast_1246_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1149_1149_delayed_2_0
          // start: WAR dependencies for type_cast_1149_1149_delayed_2_0
          // done: WAR dependencies for type_cast_1149_1149_delayed_2_0
          // end:  			type_cast_1149_1149_delayed_2_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 342
          // Source expression
          // ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          $T[MUX_1253_sample_start_] 
          $T[MUX_1253_sample_completed_] 
          $T[MUX_1253_update_start_] 
          $T[MUX_1253_update_completed_] 
          // ifx_xend_ifx_xend300_taken
          // type_cast_1149_1149_delayed_2_0
          // start: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1253_sample_start_
          MUX_1253_sample_start_ <-& (type_cast_999_update_completed_)
          MUX_1253_sample_start_ <-& (assign_stmt_1020_update_completed_)
          // done: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1253_sample_start_
          // start: Forward dependencies from type_cast_1149_1149_delayed_2_0 to transition MUX_1253_sample_start_
          MUX_1253_sample_start_ <-& (type_cast_1246_update_completed_)
          // done: Forward dependencies from type_cast_1149_1149_delayed_2_0 to transition MUX_1253_sample_start_
          ;;[MUX_1253_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_1253_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_1253_sample_start_ &-> (MUX_1253_start)
          MUX_1253_sample_completed_ <-& (MUX_1253_start)
          MUX_1253_sample_completed_ &-> ($null)
          MUX_1253_update_start_ &-> (MUX_1253_complete)
          MUX_1253_update_completed_ <-& (MUX_1253_complete)
          // RAW reenables for ifx_xend_ifx_xend300_taken
          type_cast_999_update_start_ o<-& (MUX_1253_sample_completed_ 0)
          assign_stmt_1020_update_start_ o<-& (MUX_1253_sample_completed_ 0)
          // RAW reenables for type_cast_1149_1149_delayed_2_0
          type_cast_1246_update_start_ o<-& (MUX_1253_sample_completed_ 0)
          // self-release: 
          MUX_1253_sample_start_ o<-& (MUX_1253_sample_completed_ 1)
          $null &-> (MUX_1253_update_start_)
          MUX_1253_update_start_ o<-& (MUX_1253_update_completed_ 0)
          // Target expression
          // (as target) MUX_1152_1152_delayed_2_0
          // start: WAR dependencies for MUX_1152_1152_delayed_2_0
          // done: WAR dependencies for MUX_1152_1152_delayed_2_0
          // end:  			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for add_inp2x_x0506
          // WAR dependency: Read: add_inp2x_x0506 before Write: 			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 1// bits of buffering = 32. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          type_cast_1238_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1238_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_1242_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1242_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          MUX_1253_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (MUX_1253_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for add_inp2x_x0506
          // start:  			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
          //  file prog.linked.opt.aa, line 343
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  ) 
          // ifx_xthen299_ifx_xend300_taken
          // type_cast_1143_1143_delayed_1_0
          // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 ) 
          // landx_xlhsx_xtrue292_ifx_xend300_taken
          // type_cast_1146_1146_delayed_1_0
          // MUX_1152_1152_delayed_2_0
          // Target expression
          // (as target) add_inp2x_x0506
          // start: WAR dependencies for add_inp2x_x0506
          // WAR dependency: Read: add_inp2x_x0506 before Write: 			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1238_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1238_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1242_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (type_cast_1242_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
          MUX_1253_update_start_ <-& (phi_stmt_829_sample_completed_)
          phi_stmt_829_sample_start_ o<-& (MUX_1253_update_completed_ 0)
          // WAR dependency: release  Read: add_inp2x_x0506 with Write: 			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for add_inp2x_x0506
          // end:  			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
          // start:  			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 344
          // Source expression
          // ($bitcast ($uint<16>) add_outx_x2x_xph )
          $T[type_cast_1266_sample_start_] 
          $T[type_cast_1266_sample_completed_] 
          $T[type_cast_1266_update_start_] 
          $T[type_cast_1266_update_completed_] 
          // add_outx_x2x_xph
          // start: Forward dependencies from add_outx_x2x_xph to transition type_cast_1266_sample_start_
          type_cast_1266_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1266_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1266_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1266_sample_start_ <-& (assign_stmt_1138_update_completed_)
          type_cast_1266_sample_start_ <-& (type_cast_1156_update_completed_)
          // done: Forward dependencies from add_outx_x2x_xph to transition type_cast_1266_sample_start_
          ;;[type_cast_1266_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1266_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1266_sample_start_ &-> (type_cast_1266_Sample)
          type_cast_1266_sample_completed_ <-& (type_cast_1266_Sample)
          type_cast_1266_sample_completed_ &-> ($null)
          type_cast_1266_update_start_ &-> (type_cast_1266_Update)
          type_cast_1266_update_completed_ <-& (type_cast_1266_Update)
          // RAW reenables for add_outx_x2x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1266_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1266_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1266_sample_completed_ 0)
          assign_stmt_1138_update_start_ o<-& (type_cast_1266_sample_completed_ 0)
          type_cast_1156_update_start_ o<-& (type_cast_1266_sample_completed_ 0)
          // self-release: 
          type_cast_1266_sample_start_ o<-& (type_cast_1266_sample_completed_ 1)
          $null &-> (type_cast_1266_update_start_)
          type_cast_1266_update_start_ o<-& (type_cast_1266_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1159_1159_delayed_1_0
          // start: WAR dependencies for type_cast_1159_1159_delayed_1_0
          // done: WAR dependencies for type_cast_1159_1159_delayed_1_0
          // end:  			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 345
          // Source expression
          // ($bitcast ($uint<16>) add_outx_x2x_xph )
          $T[type_cast_1270_sample_start_] 
          $T[type_cast_1270_sample_completed_] 
          $T[type_cast_1270_update_start_] 
          $T[type_cast_1270_update_completed_] 
          // add_outx_x2x_xph
          // start: Forward dependencies from add_outx_x2x_xph to transition type_cast_1270_sample_start_
          type_cast_1270_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1270_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1270_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1270_sample_start_ <-& (assign_stmt_1138_update_completed_)
          type_cast_1270_sample_start_ <-& (type_cast_1156_update_completed_)
          // done: Forward dependencies from add_outx_x2x_xph to transition type_cast_1270_sample_start_
          ;;[type_cast_1270_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1270_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1270_sample_start_ &-> (type_cast_1270_Sample)
          type_cast_1270_sample_completed_ <-& (type_cast_1270_Sample)
          type_cast_1270_sample_completed_ &-> ($null)
          type_cast_1270_update_start_ &-> (type_cast_1270_Update)
          type_cast_1270_update_completed_ <-& (type_cast_1270_Update)
          // RAW reenables for add_outx_x2x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1270_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1270_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1270_sample_completed_ 0)
          assign_stmt_1138_update_start_ o<-& (type_cast_1270_sample_completed_ 0)
          type_cast_1156_update_start_ o<-& (type_cast_1270_sample_completed_ 0)
          // self-release: 
          type_cast_1270_sample_start_ o<-& (type_cast_1270_sample_completed_ 1)
          $null &-> (type_cast_1270_update_start_)
          type_cast_1270_update_start_ o<-& (type_cast_1270_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1162_1162_delayed_1_0
          // start: WAR dependencies for type_cast_1162_1162_delayed_1_0
          // done: WAR dependencies for type_cast_1162_1162_delayed_1_0
          // end:  			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1165_1165_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 346
          // Source expression
          // ($bitcast ($uint<16>) add_outx_x0 )
          $T[type_cast_1274_sample_start_] 
          $T[type_cast_1274_sample_completed_] 
          $T[type_cast_1274_update_start_] 
          $T[type_cast_1274_update_completed_] 
          // add_outx_x0
          // start: Forward dependencies from add_outx_x0 to transition type_cast_1274_sample_start_
          type_cast_1274_sample_start_ <-& (type_cast_847_update_completed_)
          type_cast_1274_sample_start_ <-& (assign_stmt_935_update_completed_)
          type_cast_1274_sample_start_ <-& (type_cast_953_update_completed_)
          // done: Forward dependencies from add_outx_x0 to transition type_cast_1274_sample_start_
          ;;[type_cast_1274_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1274_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1274_sample_start_ &-> (type_cast_1274_Sample)
          type_cast_1274_sample_completed_ <-& (type_cast_1274_Sample)
          type_cast_1274_sample_completed_ &-> ($null)
          type_cast_1274_update_start_ &-> (type_cast_1274_Update)
          type_cast_1274_update_completed_ <-& (type_cast_1274_Update)
          // RAW reenables for add_outx_x0
          type_cast_847_update_start_ o<-& (type_cast_1274_sample_completed_ 0)
          assign_stmt_935_update_start_ o<-& (type_cast_1274_sample_completed_ 0)
          type_cast_953_update_start_ o<-& (type_cast_1274_sample_completed_ 0)
          // self-release: 
          type_cast_1274_sample_start_ o<-& (type_cast_1274_sample_completed_ 1)
          $null &-> (type_cast_1274_update_start_)
          type_cast_1274_update_start_ o<-& (type_cast_1274_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1165_1165_delayed_1_0
          // start: WAR dependencies for type_cast_1165_1165_delayed_1_0
          // done: WAR dependencies for type_cast_1165_1165_delayed_1_0
          // end:  			type_cast_1165_1165_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 347
          // Source expression
          // ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          $T[MUX_1281_sample_start_] 
          $T[MUX_1281_sample_completed_] 
          $T[MUX_1281_update_start_] 
          $T[MUX_1281_update_completed_] 
          // ifx_xend_ifx_xend300_taken
          // type_cast_1165_1165_delayed_1_0
          // start: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1281_sample_start_
          MUX_1281_sample_start_ <-& (type_cast_999_update_completed_)
          MUX_1281_sample_start_ <-& (assign_stmt_1020_update_completed_)
          // done: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1281_sample_start_
          // start: Forward dependencies from type_cast_1165_1165_delayed_1_0 to transition MUX_1281_sample_start_
          MUX_1281_sample_start_ <-& (type_cast_1274_update_completed_)
          // done: Forward dependencies from type_cast_1165_1165_delayed_1_0 to transition MUX_1281_sample_start_
          ;;[MUX_1281_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_1281_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_1281_sample_start_ &-> (MUX_1281_start)
          MUX_1281_sample_completed_ <-& (MUX_1281_start)
          MUX_1281_sample_completed_ &-> ($null)
          MUX_1281_update_start_ &-> (MUX_1281_complete)
          MUX_1281_update_completed_ <-& (MUX_1281_complete)
          // RAW reenables for ifx_xend_ifx_xend300_taken
          type_cast_999_update_start_ o<-& (MUX_1281_sample_completed_ 0)
          assign_stmt_1020_update_start_ o<-& (MUX_1281_sample_completed_ 0)
          // RAW reenables for type_cast_1165_1165_delayed_1_0
          type_cast_1274_update_start_ o<-& (MUX_1281_sample_completed_ 0)
          // self-release: 
          MUX_1281_sample_start_ o<-& (MUX_1281_sample_completed_ 1)
          $null &-> (MUX_1281_update_start_)
          MUX_1281_update_start_ o<-& (MUX_1281_update_completed_ 0)
          // Target expression
          // (as target) MUX_1168_1168_delayed_2_0
          // start: WAR dependencies for MUX_1168_1168_delayed_2_0
          // done: WAR dependencies for MUX_1168_1168_delayed_2_0
          // end:  			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for add_outx_x2504
          // WAR dependency: Read: add_outx_x2504 before Write: 			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1266_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1266_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_1270_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1270_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          MUX_1281_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (MUX_1281_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x2504
          // start:  			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
          //  file prog.linked.opt.aa, line 348
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  ) 
          // ifx_xthen299_ifx_xend300_taken
          // type_cast_1159_1159_delayed_1_0
          // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 ) 
          // landx_xlhsx_xtrue292_ifx_xend300_taken
          // type_cast_1162_1162_delayed_1_0
          // MUX_1168_1168_delayed_2_0
          // Target expression
          // (as target) add_outx_x2504
          // start: WAR dependencies for add_outx_x2504
          // WAR dependency: Read: add_outx_x2504 before Write: 			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1266_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1266_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1270_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (type_cast_1270_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
          MUX_1281_update_start_ <-& (phi_stmt_819_sample_completed_)
          phi_stmt_819_sample_start_ o<-& (MUX_1281_update_completed_ 0)
          // WAR dependency: release  Read: add_outx_x2504 with Write: 			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for add_outx_x2504
          // end:  			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
          // start:  			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 349
          // Source expression
          // ($bitcast ($uint<16>) count_inp1x_x0 )
          $T[type_cast_1294_sample_start_] 
          $T[type_cast_1294_sample_completed_] 
          $T[type_cast_1294_update_start_] 
          $T[type_cast_1294_update_completed_] 
          // count_inp1x_x0
          // start: Forward dependencies from count_inp1x_x0 to transition type_cast_1294_sample_start_
          type_cast_1294_sample_start_ <-& (type_cast_983_update_completed_)
          type_cast_1294_sample_start_ <-& (type_cast_847_update_completed_)
          type_cast_1294_sample_start_ <-& (assign_stmt_915_update_completed_)
          // done: Forward dependencies from count_inp1x_x0 to transition type_cast_1294_sample_start_
          ;;[type_cast_1294_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1294_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1294_sample_start_ &-> (type_cast_1294_Sample)
          type_cast_1294_sample_completed_ <-& (type_cast_1294_Sample)
          type_cast_1294_sample_completed_ &-> ($null)
          type_cast_1294_update_start_ &-> (type_cast_1294_Update)
          type_cast_1294_update_completed_ <-& (type_cast_1294_Update)
          // RAW reenables for count_inp1x_x0
          type_cast_983_update_start_ o<-& (type_cast_1294_sample_completed_ 0)
          type_cast_847_update_start_ o<-& (type_cast_1294_sample_completed_ 0)
          assign_stmt_915_update_start_ o<-& (type_cast_1294_sample_completed_ 0)
          // self-release: 
          type_cast_1294_sample_start_ o<-& (type_cast_1294_sample_completed_ 1)
          $null &-> (type_cast_1294_update_start_)
          type_cast_1294_update_start_ o<-& (type_cast_1294_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1179_1179_delayed_3_0
          // start: WAR dependencies for type_cast_1179_1179_delayed_3_0
          // done: WAR dependencies for type_cast_1179_1179_delayed_3_0
          // end:  			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start:  			type_cast_1182_1182_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 350
          // Source expression
          // ($bitcast ($uint<16>) count_inp1x_x0 )
          $T[type_cast_1298_sample_start_] 
          $T[type_cast_1298_sample_completed_] 
          $T[type_cast_1298_update_start_] 
          $T[type_cast_1298_update_completed_] 
          // count_inp1x_x0
          // start: Forward dependencies from count_inp1x_x0 to transition type_cast_1298_sample_start_
          type_cast_1298_sample_start_ <-& (type_cast_983_update_completed_)
          type_cast_1298_sample_start_ <-& (type_cast_847_update_completed_)
          type_cast_1298_sample_start_ <-& (assign_stmt_915_update_completed_)
          // done: Forward dependencies from count_inp1x_x0 to transition type_cast_1298_sample_start_
          ;;[type_cast_1298_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1298_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1298_sample_start_ &-> (type_cast_1298_Sample)
          type_cast_1298_sample_completed_ <-& (type_cast_1298_Sample)
          type_cast_1298_sample_completed_ &-> ($null)
          type_cast_1298_update_start_ &-> (type_cast_1298_Update)
          type_cast_1298_update_completed_ <-& (type_cast_1298_Update)
          // RAW reenables for count_inp1x_x0
          type_cast_983_update_start_ o<-& (type_cast_1298_sample_completed_ 0)
          type_cast_847_update_start_ o<-& (type_cast_1298_sample_completed_ 0)
          assign_stmt_915_update_start_ o<-& (type_cast_1298_sample_completed_ 0)
          // self-release: 
          type_cast_1298_sample_start_ o<-& (type_cast_1298_sample_completed_ 1)
          $null &-> (type_cast_1298_update_start_)
          type_cast_1298_update_start_ o<-& (type_cast_1298_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1182_1182_delayed_1_0
          // start: WAR dependencies for type_cast_1182_1182_delayed_1_0
          // done: WAR dependencies for type_cast_1182_1182_delayed_1_0
          // end:  			type_cast_1182_1182_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 351
          // Source expression
          // ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          $T[MUX_1305_sample_start_] 
          $T[MUX_1305_sample_completed_] 
          $T[MUX_1305_update_start_] 
          $T[MUX_1305_update_completed_] 
          // ifx_xend_ifx_xend300_taken
          // type_cast_1182_1182_delayed_1_0
          // start: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1305_sample_start_
          MUX_1305_sample_start_ <-& (type_cast_999_update_completed_)
          MUX_1305_sample_start_ <-& (assign_stmt_1020_update_completed_)
          // done: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1305_sample_start_
          // start: Forward dependencies from type_cast_1182_1182_delayed_1_0 to transition MUX_1305_sample_start_
          MUX_1305_sample_start_ <-& (type_cast_1298_update_completed_)
          // done: Forward dependencies from type_cast_1182_1182_delayed_1_0 to transition MUX_1305_sample_start_
          ;;[MUX_1305_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_1305_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_1305_sample_start_ &-> (MUX_1305_start)
          MUX_1305_sample_completed_ <-& (MUX_1305_start)
          MUX_1305_sample_completed_ &-> ($null)
          MUX_1305_update_start_ &-> (MUX_1305_complete)
          MUX_1305_update_completed_ <-& (MUX_1305_complete)
          // RAW reenables for ifx_xend_ifx_xend300_taken
          type_cast_999_update_start_ o<-& (MUX_1305_sample_completed_ 0)
          assign_stmt_1020_update_start_ o<-& (MUX_1305_sample_completed_ 0)
          // RAW reenables for type_cast_1182_1182_delayed_1_0
          type_cast_1298_update_start_ o<-& (MUX_1305_sample_completed_ 0)
          // self-release: 
          MUX_1305_sample_start_ o<-& (MUX_1305_sample_completed_ 1)
          $null &-> (MUX_1305_update_start_)
          MUX_1305_update_start_ o<-& (MUX_1305_update_completed_ 0)
          // Target expression
          // (as target) MUX_1185_1185_delayed_2_0
          // start: WAR dependencies for MUX_1185_1185_delayed_2_0
          // done: WAR dependencies for MUX_1185_1185_delayed_2_0
          // end:  			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for count_inp1x_x2
          // WAR dependency: Read: count_inp1x_x2 before Write: 			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1294_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (type_cast_1294_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
          MUX_1305_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (MUX_1305_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for count_inp1x_x2
          // start:  			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
          //  file prog.linked.opt.aa, line 352
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  ) 
          // ifx_xthen299_ifx_xend300_taken
          // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 ) 
          // landx_xlhsx_xtrue292_ifx_xend300_taken
          // type_cast_1179_1179_delayed_3_0
          // MUX_1185_1185_delayed_2_0
          // Target expression
          // (as target) count_inp1x_x2
          // start: WAR dependencies for count_inp1x_x2
          // WAR dependency: Read: count_inp1x_x2 before Write: 			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1294_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (type_cast_1294_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
          MUX_1305_update_start_ <-& (phi_stmt_834_sample_completed_)
          phi_stmt_834_sample_start_ o<-& (MUX_1305_update_completed_ 0)
          // WAR dependency: release  Read: count_inp1x_x2 with Write: 			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for count_inp1x_x2
          // end:  			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
          // start:  			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 353
          // Source expression
          // ($bitcast ($uint<16>) count_inp2x_x0x_xph )
          $T[type_cast_1320_sample_start_] 
          $T[type_cast_1320_sample_completed_] 
          $T[type_cast_1320_update_start_] 
          $T[type_cast_1320_update_completed_] 
          // count_inp2x_x0x_xph
          // start: Forward dependencies from count_inp2x_x0x_xph to transition type_cast_1320_sample_start_
          type_cast_1320_sample_start_ <-& (type_cast_1036_update_completed_)
          type_cast_1320_sample_start_ <-& (assign_stmt_1049_update_completed_)
          type_cast_1320_sample_start_ <-& (assign_stmt_1057_update_completed_)
          type_cast_1320_sample_start_ <-& (assign_stmt_1118_update_completed_)
          type_cast_1320_sample_start_ <-& (type_cast_1186_update_completed_)
          // done: Forward dependencies from count_inp2x_x0x_xph to transition type_cast_1320_sample_start_
          ;;[type_cast_1320_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1320_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1320_sample_start_ &-> (type_cast_1320_Sample)
          type_cast_1320_sample_completed_ <-& (type_cast_1320_Sample)
          type_cast_1320_sample_completed_ &-> ($null)
          type_cast_1320_update_start_ &-> (type_cast_1320_Update)
          type_cast_1320_update_completed_ <-& (type_cast_1320_Update)
          // RAW reenables for count_inp2x_x0x_xph
          type_cast_1036_update_start_ o<-& (type_cast_1320_sample_completed_ 0)
          assign_stmt_1049_update_start_ o<-& (type_cast_1320_sample_completed_ 0)
          assign_stmt_1057_update_start_ o<-& (type_cast_1320_sample_completed_ 0)
          assign_stmt_1118_update_start_ o<-& (type_cast_1320_sample_completed_ 0)
          type_cast_1186_update_start_ o<-& (type_cast_1320_sample_completed_ 0)
          // self-release: 
          type_cast_1320_sample_start_ o<-& (type_cast_1320_sample_completed_ 1)
          $null &-> (type_cast_1320_update_start_)
          type_cast_1320_update_start_ o<-& (type_cast_1320_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1196_1196_delayed_1_0
          // start: WAR dependencies for type_cast_1196_1196_delayed_1_0
          // done: WAR dependencies for type_cast_1196_1196_delayed_1_0
          // end:  			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1199_1199_delayed_2_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 354
          // Source expression
          // ($bitcast ($uint<16>) count_inp2x_x1 )
          $T[type_cast_1324_sample_start_] 
          $T[type_cast_1324_sample_completed_] 
          $T[type_cast_1324_update_start_] 
          $T[type_cast_1324_update_completed_] 
          // count_inp2x_x1
          // start: Forward dependencies from count_inp2x_x1 to transition type_cast_1324_sample_start_
          type_cast_1324_sample_start_ <-& (phi_stmt_839_update_completed_)
          // done: Forward dependencies from count_inp2x_x1 to transition type_cast_1324_sample_start_
          ;;[type_cast_1324_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1324_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1324_sample_start_ &-> (type_cast_1324_Sample)
          type_cast_1324_sample_completed_ <-& (type_cast_1324_Sample)
          type_cast_1324_sample_completed_ &-> ($null)
          type_cast_1324_update_start_ &-> (type_cast_1324_Update)
          type_cast_1324_update_completed_ <-& (type_cast_1324_Update)
          // RAW reenables for count_inp2x_x1
          phi_stmt_839_update_start_ o<-& (type_cast_1324_sample_completed_ 0)
          // self-release: 
          type_cast_1324_sample_start_ o<-& (type_cast_1324_sample_completed_ 1)
          $null &-> (type_cast_1324_update_start_)
          type_cast_1324_update_start_ o<-& (type_cast_1324_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1199_1199_delayed_2_0
          // start: WAR dependencies for type_cast_1199_1199_delayed_2_0
          // done: WAR dependencies for type_cast_1199_1199_delayed_2_0
          // end:  			type_cast_1199_1199_delayed_2_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 355
          // Source expression
          // ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          $T[MUX_1331_sample_start_] 
          $T[MUX_1331_sample_completed_] 
          $T[MUX_1331_update_start_] 
          $T[MUX_1331_update_completed_] 
          // ifx_xend_ifx_xend300_taken
          // type_cast_1199_1199_delayed_2_0
          // start: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1331_sample_start_
          MUX_1331_sample_start_ <-& (type_cast_999_update_completed_)
          MUX_1331_sample_start_ <-& (assign_stmt_1020_update_completed_)
          // done: Forward dependencies from ifx_xend_ifx_xend300_taken to transition MUX_1331_sample_start_
          // start: Forward dependencies from type_cast_1199_1199_delayed_2_0 to transition MUX_1331_sample_start_
          MUX_1331_sample_start_ <-& (type_cast_1324_update_completed_)
          // done: Forward dependencies from type_cast_1199_1199_delayed_2_0 to transition MUX_1331_sample_start_
          ;;[MUX_1331_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_1331_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_1331_sample_start_ &-> (MUX_1331_start)
          MUX_1331_sample_completed_ <-& (MUX_1331_start)
          MUX_1331_sample_completed_ &-> ($null)
          MUX_1331_update_start_ &-> (MUX_1331_complete)
          MUX_1331_update_completed_ <-& (MUX_1331_complete)
          // RAW reenables for ifx_xend_ifx_xend300_taken
          type_cast_999_update_start_ o<-& (MUX_1331_sample_completed_ 0)
          assign_stmt_1020_update_start_ o<-& (MUX_1331_sample_completed_ 0)
          // RAW reenables for type_cast_1199_1199_delayed_2_0
          type_cast_1324_update_start_ o<-& (MUX_1331_sample_completed_ 0)
          // self-release: 
          MUX_1331_sample_start_ o<-& (MUX_1331_sample_completed_ 1)
          $null &-> (MUX_1331_update_start_)
          MUX_1331_update_start_ o<-& (MUX_1331_update_completed_ 0)
          // Target expression
          // (as target) MUX_1202_1202_delayed_2_0
          // start: WAR dependencies for MUX_1202_1202_delayed_2_0
          // done: WAR dependencies for MUX_1202_1202_delayed_2_0
          // end:  			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for count_inp2x_x2
          // WAR dependency: Read: count_inp2x_x2 before Write: 			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1320_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (type_cast_1320_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 1 $cut_through // bits of buffering = 16. 
          MUX_1331_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (MUX_1331_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for count_inp2x_x2
          // start:  			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
          //  file prog.linked.opt.aa, line 356
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  ) 
          // ifx_xthen299_ifx_xend300_taken
          // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 ) 
          // landx_xlhsx_xtrue292_ifx_xend300_taken
          // type_cast_1196_1196_delayed_1_0
          // MUX_1202_1202_delayed_2_0
          // Target expression
          // (as target) count_inp2x_x2
          // start: WAR dependencies for count_inp2x_x2
          // WAR dependency: Read: count_inp2x_x2 before Write: 			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
          type_cast_1202_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (type_cast_1202_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
          assign_stmt_1215_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (assign_stmt_1215_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          assign_stmt_1223_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (assign_stmt_1223_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          type_cast_1320_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (type_cast_1320_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
          MUX_1331_update_start_ <-& (phi_stmt_839_sample_completed_)
          phi_stmt_839_sample_start_ o<-& (MUX_1331_update_completed_ 0)
          // WAR dependency: release  Read: count_inp2x_x2 with Write: 			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for count_inp2x_x2
          // end:  			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
          // start:  			conv302 := ($cast ($uint<32>) add_outx_x2504 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 357
          // Source expression
          // ($cast ($uint<32>) add_outx_x2504 )
          $T[type_cast_1346_sample_start_] 
          $T[type_cast_1346_sample_completed_] 
          $T[type_cast_1346_update_start_] 
          $T[type_cast_1346_update_completed_] 
          // add_outx_x2504
          // start: Forward dependencies from add_outx_x2504 to transition type_cast_1346_sample_start_
          type_cast_1346_sample_start_ <-& (type_cast_1202_update_completed_)
          type_cast_1346_sample_start_ <-& (assign_stmt_1215_update_completed_)
          type_cast_1346_sample_start_ <-& (assign_stmt_1223_update_completed_)
          type_cast_1346_sample_start_ <-& (type_cast_1266_update_completed_)
          type_cast_1346_sample_start_ <-& (type_cast_1270_update_completed_)
          type_cast_1346_sample_start_ <-& (MUX_1281_update_completed_)
          // done: Forward dependencies from add_outx_x2504 to transition type_cast_1346_sample_start_
          ;;[type_cast_1346_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1346_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1346_sample_start_ &-> (type_cast_1346_Sample)
          type_cast_1346_sample_completed_ <-& (type_cast_1346_Sample)
          type_cast_1346_sample_completed_ &-> ($null)
          type_cast_1346_update_start_ &-> (type_cast_1346_Update)
          type_cast_1346_update_completed_ <-& (type_cast_1346_Update)
          // RAW reenables for add_outx_x2504
          type_cast_1202_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          assign_stmt_1215_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          assign_stmt_1223_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          type_cast_1266_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          type_cast_1270_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          MUX_1281_update_start_ o<-& (type_cast_1346_sample_completed_ 0)
          // self-release: 
          type_cast_1346_sample_start_ o<-& (type_cast_1346_sample_completed_ 1)
          $null &-> (type_cast_1346_update_start_)
          type_cast_1346_update_start_ o<-& (type_cast_1346_update_completed_ 0)
          // Target expression
          // (as target) conv302
          // start: WAR dependencies for conv302
          // done: WAR dependencies for conv302
          // end:  			conv302 := ($cast ($uint<32>) add_outx_x2504 ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for cmp305
          // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp305
          // start:  			$volatile cmp305 := (conv302 == shr304) $buffering 1
          //  file prog.linked.opt.aa, line 358
          // volatile! 
          // Source expression
          // (conv302 == shr304)
          // conv302
          // shr304
          // Target expression
          // (as target) cmp305
          // start: WAR dependencies for cmp305
          // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp305
          // end:  			$volatile cmp305 := (conv302 == shr304) $buffering 1
          // start: WAR dependencies for ifx_xend300_whilex_xend_taken
          // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend300_whilex_xend_taken
          // start:  			$volatile ifx_xend300_whilex_xend_taken := cmp305 $buffering 1
          //  file prog.linked.opt.aa, line 359
          // volatile! 
          // Source expression
          // cmp305
          // Target expression
          // (as target) ifx_xend300_whilex_xend_taken
          // start: WAR dependencies for ifx_xend300_whilex_xend_taken
          // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend300_whilex_xend_taken
          // end:  			$volatile ifx_xend300_whilex_xend_taken := cmp305 $buffering 1
          // ( ~ cmp305 )
          // cmp305
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from ( ~ cmp305 ) to transition condition_evaluated
          condition_evaluated <-& (type_cast_1346_update_completed_)
          // done: Forward dependencies from ( ~ cmp305 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_2
          //  ptr_deref_910 store
          //  ptr_deref_1113 store
          $T [ptr_deref_910_ptr_deref_1113_delay] $delay
          // ptr_deref_910(store) -> ptr_deref_1113(store)
          ptr_deref_1113_sample_start_ <-& (ptr_deref_910_ptr_deref_1113_delay)
          ptr_deref_910_ptr_deref_1113_delay <-& (ptr_deref_910_sample_completed_)
          // reenable across ring for memory space memory_space_2
          $T[ring_reenable_memory_space_2] 
          // ordered memory-subsystem.
          ring_reenable_memory_space_2 <-& (ptr_deref_1113_sample_completed_)
          ptr_deref_910_sample_start_ o<-& (ring_reenable_memory_space_2 1)
          // memory-space  memory_space_1
          //  ptr_deref_1088 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
          // memory-space  memory_space_0
          //  ptr_deref_885 load
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_817__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_817_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_817__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_817_loop_body : condition_evaluated
        $bind do_while_stmt_817__entry__  => do_while_stmt_817_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_817_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_817__exit__)
      }
      do_while_stmt_817__entry__ |-> (do_while_stmt_817)
      do_while_stmt_817__exit__ <-| (do_while_stmt_817)
      // if-statement  
      //  file prog.linked.opt.aa, line 0
      ;;[if_stmt_1359_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1359__entry__ |-> (if_stmt_1359_dead_link)
      if_stmt_1359__exit__ <-| (if_stmt_1359_dead_link)
      ;;[if_stmt_1359_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1359__entry__ |-> (if_stmt_1359_eval_test)
      $P [R_ifx_xend300_whilex_xend_taken_1360_place]
      R_ifx_xend300_whilex_xend_taken_1360_place <-| (if_stmt_1359_eval_test)
      ;;[if_stmt_1359_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1359_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_ifx_xend300_whilex_xend_taken_1360_place |-> (if_stmt_1359_if_link if_stmt_1359_else_link)
      $P [ifx_xend300_whilex_xend]
      ifx_xend300_whilex_xend <-| (if_stmt_1359_if_link)
      if_stmt_1359__exit__ <-| (if_stmt_1359_else_link)
      ::[assign_stmt_1369] 
      {
        // start:  		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 366
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) )
        $T[type_cast_1368_sample_start_] 
        $T[type_cast_1368_sample_completed_] 
        $T[type_cast_1368_update_start_] 
        $T[type_cast_1368_update_completed_] 
        // ($cast ($int<64>) call233 )
        // call233
        // start: Forward dependencies from ($cast ($int<64>) call233 ) to transition type_cast_1368_sample_start_
        // done: Forward dependencies from ($cast ($int<64>) call233 ) to transition type_cast_1368_sample_start_
        ;;[type_cast_1368_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1368_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1368_sample_start_ &-> (type_cast_1368_Sample)
        type_cast_1368_sample_completed_ <-& (type_cast_1368_Sample)
        type_cast_1368_sample_completed_ &-> ($null)
        type_cast_1368_update_start_ &-> (type_cast_1368_Update)
        type_cast_1368_update_completed_ <-& (type_cast_1368_Update)
        // Target expression
        // (as target) conv234
        // start: WAR dependencies for conv234
        // done: WAR dependencies for conv234
        // end:  		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
      }
      assign_stmt_1369__entry__ |-> (assign_stmt_1369)
      assign_stmt_1369__exit__ <-| (assign_stmt_1369)
      ::[call_stmt_1372_to_assign_stmt_1480] 
      {
        // start: 		$call timer () (call310 ) 
        //  file prog.linked.opt.aa, line 368
        $T[call_stmt_1372_sample_start_] 
        $T[call_stmt_1372_sample_completed_] 
        $T[call_stmt_1372_update_start_] 
        $T[call_stmt_1372_update_completed_] 
        ;;[call_stmt_1372_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1372_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1372_sample_start_ &-> (call_stmt_1372_Sample)
        call_stmt_1372_sample_completed_ <-& (call_stmt_1372_Sample)
        call_stmt_1372_sample_completed_ &-> ($null)
        call_stmt_1372_update_start_ &-> (call_stmt_1372_Update)
        call_stmt_1372_update_completed_ <-& (call_stmt_1372_Update)
        // Call output argument 0
        // (as target) call310
        // start: WAR dependencies for call310
        // done: WAR dependencies for call310
        // end: 		$call timer () (call310 ) 
        // start:  		conv311 := ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 369
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) )
        $T[type_cast_1376_sample_start_] 
        $T[type_cast_1376_sample_completed_] 
        $T[type_cast_1376_update_start_] 
        $T[type_cast_1376_update_completed_] 
        // ($cast ($int<64>) call310 )
        // call310
        // start: Forward dependencies from ($cast ($int<64>) call310 ) to transition type_cast_1376_sample_start_
        type_cast_1376_sample_start_ <-& (call_stmt_1372_update_completed_)
        // done: Forward dependencies from ($cast ($int<64>) call310 ) to transition type_cast_1376_sample_start_
        ;;[type_cast_1376_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1376_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1376_sample_start_ &-> (type_cast_1376_Sample)
        type_cast_1376_sample_completed_ <-& (type_cast_1376_Sample)
        type_cast_1376_sample_completed_ &-> ($null)
        type_cast_1376_update_start_ &-> (type_cast_1376_Update)
        type_cast_1376_update_completed_ <-& (type_cast_1376_Update)
        // Target expression
        // (as target) conv311
        // start: WAR dependencies for conv311
        // done: WAR dependencies for conv311
        // end:  		conv311 := ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for sub
        // start:  		$volatile sub := (conv311 - conv234) $buffering 1
        //  file prog.linked.opt.aa, line 370
        // volatile! 
        // Source expression
        // (conv311 - conv234)
        // conv311
        // conv234
        // Target expression
        // (as target) sub
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for sub
        // end:  		$volatile sub := (conv311 - conv234) $buffering 1
        // start:  		conv317 := ($cast ($uint<8>) sub ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 371
        // Source expression
        // ($cast ($uint<8>) sub )
        $T[type_cast_1385_sample_start_] 
        $T[type_cast_1385_sample_completed_] 
        $T[type_cast_1385_update_start_] 
        $T[type_cast_1385_update_completed_] 
        // sub
        // start: Forward dependencies from sub to transition type_cast_1385_sample_start_
        type_cast_1385_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from sub to transition type_cast_1385_sample_start_
        ;;[type_cast_1385_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1385_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1385_sample_start_ &-> (type_cast_1385_Sample)
        type_cast_1385_sample_completed_ <-& (type_cast_1385_Sample)
        type_cast_1385_sample_completed_ &-> ($null)
        type_cast_1385_update_start_ &-> (type_cast_1385_Update)
        type_cast_1385_update_completed_ <-& (type_cast_1385_Update)
        // Target expression
        // (as target) conv317
        // start: WAR dependencies for conv317
        // done: WAR dependencies for conv317
        // end:  		conv317 := ($cast ($uint<8>) sub ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr320
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr320
        // start:  		$volatile shr320 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 372
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // sub
        // Target expression
        // (as target) shr320
        // start: WAR dependencies for shr320
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr320
        // end:  		$volatile shr320 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 373
        // Source expression
        // ($cast ($uint<8>) shr320 )
        $T[type_cast_1395_sample_start_] 
        $T[type_cast_1395_sample_completed_] 
        $T[type_cast_1395_update_start_] 
        $T[type_cast_1395_update_completed_] 
        // shr320
        // start: Forward dependencies from shr320 to transition type_cast_1395_sample_start_
        type_cast_1395_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr320 to transition type_cast_1395_sample_start_
        ;;[type_cast_1395_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1395_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1395_sample_start_ &-> (type_cast_1395_Sample)
        type_cast_1395_sample_completed_ <-& (type_cast_1395_Sample)
        type_cast_1395_sample_completed_ &-> ($null)
        type_cast_1395_update_start_ &-> (type_cast_1395_Update)
        type_cast_1395_update_completed_ <-& (type_cast_1395_Update)
        // Target expression
        // (as target) conv323
        // start: WAR dependencies for conv323
        // done: WAR dependencies for conv323
        // end:  		conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr326
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr326
        // start:  		$volatile shr326 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 374
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        // sub
        // Target expression
        // (as target) shr326
        // start: WAR dependencies for shr326
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr326
        // end:  		$volatile shr326 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        // start:  		conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 375
        // Source expression
        // ($cast ($uint<8>) shr326 )
        $T[type_cast_1405_sample_start_] 
        $T[type_cast_1405_sample_completed_] 
        $T[type_cast_1405_update_start_] 
        $T[type_cast_1405_update_completed_] 
        // shr326
        // start: Forward dependencies from shr326 to transition type_cast_1405_sample_start_
        type_cast_1405_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr326 to transition type_cast_1405_sample_start_
        ;;[type_cast_1405_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1405_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1405_sample_start_ &-> (type_cast_1405_Sample)
        type_cast_1405_sample_completed_ <-& (type_cast_1405_Sample)
        type_cast_1405_sample_completed_ &-> ($null)
        type_cast_1405_update_start_ &-> (type_cast_1405_Update)
        type_cast_1405_update_completed_ <-& (type_cast_1405_Update)
        // Target expression
        // (as target) conv329
        // start: WAR dependencies for conv329
        // done: WAR dependencies for conv329
        // end:  		conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr332
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr332
        // start:  		$volatile shr332 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        //  file prog.linked.opt.aa, line 376
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
        // sub
        // Target expression
        // (as target) shr332
        // start: WAR dependencies for shr332
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr332
        // end:  		$volatile shr332 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        // start:  		conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 377
        // Source expression
        // ($cast ($uint<8>) shr332 )
        $T[type_cast_1415_sample_start_] 
        $T[type_cast_1415_sample_completed_] 
        $T[type_cast_1415_update_start_] 
        $T[type_cast_1415_update_completed_] 
        // shr332
        // start: Forward dependencies from shr332 to transition type_cast_1415_sample_start_
        type_cast_1415_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr332 to transition type_cast_1415_sample_start_
        ;;[type_cast_1415_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1415_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1415_sample_start_ &-> (type_cast_1415_Sample)
        type_cast_1415_sample_completed_ <-& (type_cast_1415_Sample)
        type_cast_1415_sample_completed_ &-> ($null)
        type_cast_1415_update_start_ &-> (type_cast_1415_Update)
        type_cast_1415_update_completed_ <-& (type_cast_1415_Update)
        // Target expression
        // (as target) conv335
        // start: WAR dependencies for conv335
        // done: WAR dependencies for conv335
        // end:  		conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr338
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr338
        // start:  		$volatile shr338 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        //  file prog.linked.opt.aa, line 378
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
        // sub
        // Target expression
        // (as target) shr338
        // start: WAR dependencies for shr338
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr338
        // end:  		$volatile shr338 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        // start:  		conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 379
        // Source expression
        // ($cast ($uint<8>) shr338 )
        $T[type_cast_1425_sample_start_] 
        $T[type_cast_1425_sample_completed_] 
        $T[type_cast_1425_update_start_] 
        $T[type_cast_1425_update_completed_] 
        // shr338
        // start: Forward dependencies from shr338 to transition type_cast_1425_sample_start_
        type_cast_1425_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr338 to transition type_cast_1425_sample_start_
        ;;[type_cast_1425_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1425_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1425_sample_start_ &-> (type_cast_1425_Sample)
        type_cast_1425_sample_completed_ <-& (type_cast_1425_Sample)
        type_cast_1425_sample_completed_ &-> ($null)
        type_cast_1425_update_start_ &-> (type_cast_1425_Update)
        type_cast_1425_update_completed_ <-& (type_cast_1425_Update)
        // Target expression
        // (as target) conv341
        // start: WAR dependencies for conv341
        // done: WAR dependencies for conv341
        // end:  		conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr344
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr344
        // start:  		$volatile shr344 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        //  file prog.linked.opt.aa, line 380
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
        // sub
        // Target expression
        // (as target) shr344
        // start: WAR dependencies for shr344
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr344
        // end:  		$volatile shr344 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        // start:  		conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 381
        // Source expression
        // ($cast ($uint<8>) shr344 )
        $T[type_cast_1435_sample_start_] 
        $T[type_cast_1435_sample_completed_] 
        $T[type_cast_1435_update_start_] 
        $T[type_cast_1435_update_completed_] 
        // shr344
        // start: Forward dependencies from shr344 to transition type_cast_1435_sample_start_
        type_cast_1435_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr344 to transition type_cast_1435_sample_start_
        ;;[type_cast_1435_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1435_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1435_sample_start_ &-> (type_cast_1435_Sample)
        type_cast_1435_sample_completed_ <-& (type_cast_1435_Sample)
        type_cast_1435_sample_completed_ &-> ($null)
        type_cast_1435_update_start_ &-> (type_cast_1435_Update)
        type_cast_1435_update_completed_ <-& (type_cast_1435_Update)
        // Target expression
        // (as target) conv347
        // start: WAR dependencies for conv347
        // done: WAR dependencies for conv347
        // end:  		conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr350
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr350
        // start:  		$volatile shr350 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        //  file prog.linked.opt.aa, line 382
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
        // sub
        // Target expression
        // (as target) shr350
        // start: WAR dependencies for shr350
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr350
        // end:  		$volatile shr350 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        // start:  		conv353 := ($cast ($uint<8>) shr350 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 383
        // Source expression
        // ($cast ($uint<8>) shr350 )
        $T[type_cast_1445_sample_start_] 
        $T[type_cast_1445_sample_completed_] 
        $T[type_cast_1445_update_start_] 
        $T[type_cast_1445_update_completed_] 
        // shr350
        // start: Forward dependencies from shr350 to transition type_cast_1445_sample_start_
        type_cast_1445_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr350 to transition type_cast_1445_sample_start_
        ;;[type_cast_1445_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1445_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1445_sample_start_ &-> (type_cast_1445_Sample)
        type_cast_1445_sample_completed_ <-& (type_cast_1445_Sample)
        type_cast_1445_sample_completed_ &-> ($null)
        type_cast_1445_update_start_ &-> (type_cast_1445_Update)
        type_cast_1445_update_completed_ <-& (type_cast_1445_Update)
        // Target expression
        // (as target) conv353
        // start: WAR dependencies for conv353
        // done: WAR dependencies for conv353
        // end:  		conv353 := ($cast ($uint<8>) shr350 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr356
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr356
        // start:  		$volatile shr356 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        //  file prog.linked.opt.aa, line 384
        // volatile! 
        // Source expression
        // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
        // sub
        // Target expression
        // (as target) shr356
        // start: WAR dependencies for shr356
        // ignored out-of-scope w_root 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for shr356
        // end:  		$volatile shr356 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        // start:  		conv359 := ($cast ($uint<8>) shr356 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 385
        // Source expression
        // ($cast ($uint<8>) shr356 )
        $T[type_cast_1455_sample_start_] 
        $T[type_cast_1455_sample_completed_] 
        $T[type_cast_1455_update_start_] 
        $T[type_cast_1455_update_completed_] 
        // shr356
        // start: Forward dependencies from shr356 to transition type_cast_1455_sample_start_
        type_cast_1455_sample_start_ <-& (type_cast_1376_update_completed_)
        // done: Forward dependencies from shr356 to transition type_cast_1455_sample_start_
        ;;[type_cast_1455_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1455_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1455_sample_start_ &-> (type_cast_1455_Sample)
        type_cast_1455_sample_completed_ <-& (type_cast_1455_Sample)
        type_cast_1455_sample_completed_ &-> ($null)
        type_cast_1455_update_start_ &-> (type_cast_1455_Update)
        type_cast_1455_update_completed_ <-& (type_cast_1455_Update)
        // Target expression
        // (as target) conv359
        // start: WAR dependencies for conv359
        // done: WAR dependencies for conv359
        // end:  		conv359 := ($cast ($uint<8>) shr356 ) $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv359 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 386
        // Source expression
        // conv359
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1457_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1457_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1457_update_start_] 
        $T[WPIPE_Concat_output_pipe_1457_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1457_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1457_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1457_sample_start_ &-> (WPIPE_Concat_output_pipe_1457_Sample)
        WPIPE_Concat_output_pipe_1457_sample_completed_ <-& (WPIPE_Concat_output_pipe_1457_Sample)
        WPIPE_Concat_output_pipe_1457_update_start_ <-& (WPIPE_Concat_output_pipe_1457_sample_completed_)
        WPIPE_Concat_output_pipe_1457_update_start_ &-> (WPIPE_Concat_output_pipe_1457_Update)
        WPIPE_Concat_output_pipe_1457_update_completed_ <-& (WPIPE_Concat_output_pipe_1457_Update)
        // start: Forward dependencies from conv359 to transition WPIPE_Concat_output_pipe_1457_sample_start_
        WPIPE_Concat_output_pipe_1457_sample_start_ <-& (type_cast_1455_update_completed_)
        // done: Forward dependencies from conv359 to transition WPIPE_Concat_output_pipe_1457_sample_start_
        // end:  		Concat_output_pipe := conv359 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv353 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 387
        // Source expression
        // conv353
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1460_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1460_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1460_update_start_] 
        $T[WPIPE_Concat_output_pipe_1460_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1460_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1460_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1460_sample_start_ &-> (WPIPE_Concat_output_pipe_1460_Sample)
        WPIPE_Concat_output_pipe_1460_sample_completed_ <-& (WPIPE_Concat_output_pipe_1460_Sample)
        WPIPE_Concat_output_pipe_1460_update_start_ <-& (WPIPE_Concat_output_pipe_1460_sample_completed_)
        WPIPE_Concat_output_pipe_1460_update_start_ &-> (WPIPE_Concat_output_pipe_1460_Update)
        WPIPE_Concat_output_pipe_1460_update_completed_ <-& (WPIPE_Concat_output_pipe_1460_Update)
        // start: Forward dependencies from conv353 to transition WPIPE_Concat_output_pipe_1460_sample_start_
        WPIPE_Concat_output_pipe_1460_sample_start_ <-& (type_cast_1445_update_completed_)
        // done: Forward dependencies from conv353 to transition WPIPE_Concat_output_pipe_1460_sample_start_
        // end:  		Concat_output_pipe := conv353 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 388
        // Source expression
        // conv347
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1463_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1463_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1463_update_start_] 
        $T[WPIPE_Concat_output_pipe_1463_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1463_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1463_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1463_sample_start_ &-> (WPIPE_Concat_output_pipe_1463_Sample)
        WPIPE_Concat_output_pipe_1463_sample_completed_ <-& (WPIPE_Concat_output_pipe_1463_Sample)
        WPIPE_Concat_output_pipe_1463_update_start_ <-& (WPIPE_Concat_output_pipe_1463_sample_completed_)
        WPIPE_Concat_output_pipe_1463_update_start_ &-> (WPIPE_Concat_output_pipe_1463_Update)
        WPIPE_Concat_output_pipe_1463_update_completed_ <-& (WPIPE_Concat_output_pipe_1463_Update)
        // start: Forward dependencies from conv347 to transition WPIPE_Concat_output_pipe_1463_sample_start_
        WPIPE_Concat_output_pipe_1463_sample_start_ <-& (type_cast_1435_update_completed_)
        // done: Forward dependencies from conv347 to transition WPIPE_Concat_output_pipe_1463_sample_start_
        // end:  		Concat_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 389
        // Source expression
        // conv341
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1466_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1466_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1466_update_start_] 
        $T[WPIPE_Concat_output_pipe_1466_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1466_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1466_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1466_sample_start_ &-> (WPIPE_Concat_output_pipe_1466_Sample)
        WPIPE_Concat_output_pipe_1466_sample_completed_ <-& (WPIPE_Concat_output_pipe_1466_Sample)
        WPIPE_Concat_output_pipe_1466_update_start_ <-& (WPIPE_Concat_output_pipe_1466_sample_completed_)
        WPIPE_Concat_output_pipe_1466_update_start_ &-> (WPIPE_Concat_output_pipe_1466_Update)
        WPIPE_Concat_output_pipe_1466_update_completed_ <-& (WPIPE_Concat_output_pipe_1466_Update)
        // start: Forward dependencies from conv341 to transition WPIPE_Concat_output_pipe_1466_sample_start_
        WPIPE_Concat_output_pipe_1466_sample_start_ <-& (type_cast_1425_update_completed_)
        // done: Forward dependencies from conv341 to transition WPIPE_Concat_output_pipe_1466_sample_start_
        // end:  		Concat_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 390
        // Source expression
        // conv335
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1469_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1469_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1469_update_start_] 
        $T[WPIPE_Concat_output_pipe_1469_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1469_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1469_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1469_sample_start_ &-> (WPIPE_Concat_output_pipe_1469_Sample)
        WPIPE_Concat_output_pipe_1469_sample_completed_ <-& (WPIPE_Concat_output_pipe_1469_Sample)
        WPIPE_Concat_output_pipe_1469_update_start_ <-& (WPIPE_Concat_output_pipe_1469_sample_completed_)
        WPIPE_Concat_output_pipe_1469_update_start_ &-> (WPIPE_Concat_output_pipe_1469_Update)
        WPIPE_Concat_output_pipe_1469_update_completed_ <-& (WPIPE_Concat_output_pipe_1469_Update)
        // start: Forward dependencies from conv335 to transition WPIPE_Concat_output_pipe_1469_sample_start_
        WPIPE_Concat_output_pipe_1469_sample_start_ <-& (type_cast_1415_update_completed_)
        // done: Forward dependencies from conv335 to transition WPIPE_Concat_output_pipe_1469_sample_start_
        // end:  		Concat_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 391
        // Source expression
        // conv329
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1472_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1472_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1472_update_start_] 
        $T[WPIPE_Concat_output_pipe_1472_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1472_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1472_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1472_sample_start_ &-> (WPIPE_Concat_output_pipe_1472_Sample)
        WPIPE_Concat_output_pipe_1472_sample_completed_ <-& (WPIPE_Concat_output_pipe_1472_Sample)
        WPIPE_Concat_output_pipe_1472_update_start_ <-& (WPIPE_Concat_output_pipe_1472_sample_completed_)
        WPIPE_Concat_output_pipe_1472_update_start_ &-> (WPIPE_Concat_output_pipe_1472_Update)
        WPIPE_Concat_output_pipe_1472_update_completed_ <-& (WPIPE_Concat_output_pipe_1472_Update)
        // start: Forward dependencies from conv329 to transition WPIPE_Concat_output_pipe_1472_sample_start_
        WPIPE_Concat_output_pipe_1472_sample_start_ <-& (type_cast_1405_update_completed_)
        // done: Forward dependencies from conv329 to transition WPIPE_Concat_output_pipe_1472_sample_start_
        // end:  		Concat_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 392
        // Source expression
        // conv323
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1475_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1475_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1475_update_start_] 
        $T[WPIPE_Concat_output_pipe_1475_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1475_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1475_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1475_sample_start_ &-> (WPIPE_Concat_output_pipe_1475_Sample)
        WPIPE_Concat_output_pipe_1475_sample_completed_ <-& (WPIPE_Concat_output_pipe_1475_Sample)
        WPIPE_Concat_output_pipe_1475_update_start_ <-& (WPIPE_Concat_output_pipe_1475_sample_completed_)
        WPIPE_Concat_output_pipe_1475_update_start_ &-> (WPIPE_Concat_output_pipe_1475_Update)
        WPIPE_Concat_output_pipe_1475_update_completed_ <-& (WPIPE_Concat_output_pipe_1475_Update)
        // start: Forward dependencies from conv323 to transition WPIPE_Concat_output_pipe_1475_sample_start_
        WPIPE_Concat_output_pipe_1475_sample_start_ <-& (type_cast_1395_update_completed_)
        // done: Forward dependencies from conv323 to transition WPIPE_Concat_output_pipe_1475_sample_start_
        // end:  		Concat_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 393
        // Source expression
        // conv317
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1478_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1478_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1478_update_start_] 
        $T[WPIPE_Concat_output_pipe_1478_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1478_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1478_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1478_sample_start_ &-> (WPIPE_Concat_output_pipe_1478_Sample)
        WPIPE_Concat_output_pipe_1478_sample_completed_ <-& (WPIPE_Concat_output_pipe_1478_Sample)
        WPIPE_Concat_output_pipe_1478_update_start_ <-& (WPIPE_Concat_output_pipe_1478_sample_completed_)
        WPIPE_Concat_output_pipe_1478_update_start_ &-> (WPIPE_Concat_output_pipe_1478_Update)
        WPIPE_Concat_output_pipe_1478_update_completed_ <-& (WPIPE_Concat_output_pipe_1478_Update)
        // start: Forward dependencies from conv317 to transition WPIPE_Concat_output_pipe_1478_sample_start_
        WPIPE_Concat_output_pipe_1478_sample_start_ <-& (type_cast_1385_update_completed_)
        // done: Forward dependencies from conv317 to transition WPIPE_Concat_output_pipe_1478_sample_start_
        // end:  		Concat_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe timer_resp
        // read-dependencies for pipe timer_resp
        // write-dependencies for pipe timer_resp
        // signal write dependencies for timer_resp
        // pipe read/write dependencies for pipe Concat_output_pipe
        // read-dependencies for pipe Concat_output_pipe
        // write-dependencies for pipe Concat_output_pipe
        WPIPE_Concat_output_pipe_1460_sample_start_ <-& (WPIPE_Concat_output_pipe_1457_update_completed_)
        WPIPE_Concat_output_pipe_1463_sample_start_ <-& (WPIPE_Concat_output_pipe_1460_update_completed_)
        WPIPE_Concat_output_pipe_1466_sample_start_ <-& (WPIPE_Concat_output_pipe_1463_update_completed_)
        WPIPE_Concat_output_pipe_1469_sample_start_ <-& (WPIPE_Concat_output_pipe_1466_update_completed_)
        WPIPE_Concat_output_pipe_1472_sample_start_ <-& (WPIPE_Concat_output_pipe_1469_update_completed_)
        WPIPE_Concat_output_pipe_1475_sample_start_ <-& (WPIPE_Concat_output_pipe_1472_update_completed_)
        WPIPE_Concat_output_pipe_1478_sample_start_ <-& (WPIPE_Concat_output_pipe_1475_update_completed_)
        // signal write dependencies for Concat_output_pipe
        // pipe read/write dependencies for pipe timer_req
        // read-dependencies for pipe timer_req
        // write-dependencies for pipe timer_req
        // signal write dependencies for timer_req
      }
      call_stmt_1372_to_assign_stmt_1480__entry__ |-> (call_stmt_1372_to_assign_stmt_1480)
      call_stmt_1372_to_assign_stmt_1480__exit__ <-| (call_stmt_1372_to_assign_stmt_1480)
      ::[assign_stmt_1487] 
      {
        // start: WAR dependencies for cmp381460
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for cmp381460
        // start:  		$volatile cmp381460 := (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        //  file prog.linked.opt.aa, line 395
        // volatile! 
        // Source expression
        // (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        // mul103
        // Target expression
        // (as target) cmp381460
        // start: WAR dependencies for cmp381460
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for cmp381460
        // end:  		$volatile cmp381460 := (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1487__entry__ |-> (assign_stmt_1487)
      assign_stmt_1487__exit__ <-| (assign_stmt_1487)
      // if-statement  
      //  file prog.linked.opt.aa, line 396
      ;;[if_stmt_1488_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1488__entry__ |-> (if_stmt_1488_dead_link)
      if_stmt_1488__exit__ <-| (if_stmt_1488_dead_link)
      ;;[if_stmt_1488_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1488__entry__ |-> (if_stmt_1488_eval_test)
      $P [R_cmp381460_1489_place]
      R_cmp381460_1489_place <-| (if_stmt_1488_eval_test)
      ;;[if_stmt_1488_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1488_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp381460_1489_place |-> (if_stmt_1488_if_link if_stmt_1488_else_link)
      $P [whilex_xend_bbx_xnph]
      whilex_xend_bbx_xnph <-| (if_stmt_1488_if_link)
      $P [whilex_xend_forx_xend456]
      whilex_xend_forx_xend456 <-| (if_stmt_1488_else_link)
      ::[assign_stmt_1500_to_assign_stmt_1523] 
      {
        // start: WAR dependencies for tmp472
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp472
        // start:  		$volatile tmp472 := (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 403
        // volatile! 
        // Source expression
        // (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // shr304
        // Target expression
        // (as target) tmp472
        // start: WAR dependencies for tmp472
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp472
        // end:  		$volatile tmp472 := (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp471x_xop
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp471x_xop
        // start:  		$volatile tmp471x_xop := (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 404
        // volatile! 
        // Source expression
        // (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // shr304
        // Target expression
        // (as target) tmp471x_xop
        // start: WAR dependencies for tmp471x_xop
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp471x_xop
        // end:  		$volatile tmp471x_xop := (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        // start:  		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 405
        // Source expression
        // ($cast ($uint<64>) tmp471x_xop )
        $T[type_cast_1509_sample_start_] 
        $T[type_cast_1509_sample_completed_] 
        $T[type_cast_1509_update_start_] 
        $T[type_cast_1509_update_completed_] 
        // tmp471x_xop
        // start: Forward dependencies from tmp471x_xop to transition type_cast_1509_sample_start_
        // done: Forward dependencies from tmp471x_xop to transition type_cast_1509_sample_start_
        ;;[type_cast_1509_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1509_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1509_sample_start_ &-> (type_cast_1509_Sample)
        type_cast_1509_sample_completed_ <-& (type_cast_1509_Sample)
        type_cast_1509_sample_completed_ &-> ($null)
        type_cast_1509_update_start_ &-> (type_cast_1509_Update)
        type_cast_1509_update_completed_ <-& (type_cast_1509_Update)
        // Target expression
        // (as target) iNsTr_79
        // start: WAR dependencies for iNsTr_79
        // done: WAR dependencies for iNsTr_79
        // end:  		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // start:  		$volatile xx_xop := (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 406
        // volatile! 
        // Source expression
        // (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // iNsTr_79
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		$volatile xx_xop := (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for tmp475
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp475
        // start:  		$volatile tmp475 := ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 407
        // volatile! 
        // Source expression
        // ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp472
        // xx_xop
        // Target expression
        // (as target) tmp475
        // start: WAR dependencies for tmp475
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp475
        // end:  		$volatile tmp475 := ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1500_to_assign_stmt_1523__entry__ |-> (assign_stmt_1500_to_assign_stmt_1523)
      assign_stmt_1500_to_assign_stmt_1523__exit__ <-| (assign_stmt_1500_to_assign_stmt_1523)
      ::[assign_stmt_1540_to_assign_stmt_1653] 
      {
        // start:  		arrayidx388 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 413
        // Source expression
        // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
        $T[addr_of_1539_sample_start_] 
        $T[addr_of_1539_sample_completed_] 
        $T[addr_of_1539_update_start_] 
        $T[addr_of_1539_update_completed_] 
        $T[array_obj_ref_1538_root_address_calculated] 
        $T[array_obj_ref_1538_offset_calculated] 
        $T[array_obj_ref_1538_index_resized_1] 
        $T[array_obj_ref_1538_index_scaled_1] 
        $T[array_obj_ref_1538_index_computed_1] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1538_index_computed_1
        // done: Forward dependencies from indvar to transition array_obj_ref_1538_index_computed_1
        ;;[array_obj_ref_1538_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1538_index_computed_1 &-> (array_obj_ref_1538_index_resize_1)
        array_obj_ref_1538_index_resized_1 <-& (array_obj_ref_1538_index_resize_1)
        ;;[array_obj_ref_1538_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1538_index_resized_1 &-> (array_obj_ref_1538_index_scale_1)
        array_obj_ref_1538_index_scaled_1 <-& (array_obj_ref_1538_index_scale_1)
        $T[array_obj_ref_1538_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_1538_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_1538_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_1538_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_1538_index_scaled_1 &-> (array_obj_ref_1538_final_index_sum_regn_Sample)
        array_obj_ref_1538_final_index_sum_regn_sample_complete <-& (array_obj_ref_1538_final_index_sum_regn_Sample)
        array_obj_ref_1538_final_index_sum_regn_update_start &-> (array_obj_ref_1538_final_index_sum_regn_Update)
        array_obj_ref_1538_offset_calculated <-& (array_obj_ref_1538_final_index_sum_regn_Update)
        ;;[array_obj_ref_1538_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1538_offset_calculated &-> (array_obj_ref_1538_base_plus_offset)
        array_obj_ref_1538_root_address_calculated <-& (array_obj_ref_1538_base_plus_offset)
        ;;[addr_of_1539_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1539_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1539_sample_start_ <-& (array_obj_ref_1538_root_address_calculated)
        addr_of_1539_sample_start_ &-> (addr_of_1539_request)
        addr_of_1539_sample_completed_ <-& (addr_of_1539_request)
        addr_of_1539_sample_completed_ &-> ($null)
        addr_of_1539_update_start_ &-> (addr_of_1539_complete)
        addr_of_1539_update_completed_ <-& (addr_of_1539_complete)
        // Target expression
        // (as target) arrayidx388
        // start: WAR dependencies for arrayidx388
        // done: WAR dependencies for arrayidx388
        // end:  		arrayidx388 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp389 := ->(arrayidx388) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 414
        // Source expression
        // ->(arrayidx388)
        $T[ptr_deref_1543_sample_start_] 
        $T[ptr_deref_1543_sample_completed_] 
        $T[ptr_deref_1543_update_start_] 
        $T[ptr_deref_1543_update_completed_] 
        $T[ptr_deref_1543_base_address_calculated] 
        // arrayidx388
        $T[ptr_deref_1543_word_address_calculated] 
        $T[ptr_deref_1543_root_address_calculated] 
        $T[ptr_deref_1543_base_address_resized] 
        ;;[ptr_deref_1543_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1543_base_address_calculated &-> (ptr_deref_1543_base_addr_resize)
        ptr_deref_1543_base_address_resized <-& (ptr_deref_1543_base_addr_resize)
        ;;[ptr_deref_1543_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1543_base_address_resized &-> (ptr_deref_1543_base_plus_offset)
        ptr_deref_1543_root_address_calculated <-& (ptr_deref_1543_base_plus_offset)
        ;;[ptr_deref_1543_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1543_root_address_calculated &-> (ptr_deref_1543_word_addrgen)
        ptr_deref_1543_word_address_calculated <-& (ptr_deref_1543_word_addrgen)
        ;;[ptr_deref_1543_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1543_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1543_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1543_sample_start_ <-& (ptr_deref_1543_word_address_calculated)
        ptr_deref_1543_sample_start_ &-> (ptr_deref_1543_Sample)
        ptr_deref_1543_sample_completed_ <-& (ptr_deref_1543_Sample)
        ptr_deref_1543_sample_completed_ &-> ($null)
        ptr_deref_1543_update_start_ &-> (ptr_deref_1543_Update)
        ptr_deref_1543_update_completed_ <-& (ptr_deref_1543_Update)
        // start: Forward dependencies from arrayidx388 to transition ptr_deref_1543_base_address_calculated
        ptr_deref_1543_base_address_calculated <-& (addr_of_1539_update_completed_)
        // done: Forward dependencies from arrayidx388 to transition ptr_deref_1543_base_address_calculated
        ptr_deref_1543_sample_start_ <-& (ptr_deref_1543_base_address_calculated)
        // Target expression
        // (as target) tmp389
        // start: WAR dependencies for tmp389
        // done: WAR dependencies for tmp389
        // end:  		tmp389 := ->(arrayidx388) $buffering 1// bits of buffering = 64. 
        // start:  		conv393 := ($cast ($uint<8>) tmp389 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 415
        // Source expression
        // ($cast ($uint<8>) tmp389 )
        $T[type_cast_1547_sample_start_] 
        $T[type_cast_1547_sample_completed_] 
        $T[type_cast_1547_update_start_] 
        $T[type_cast_1547_update_completed_] 
        // tmp389
        // start: Forward dependencies from tmp389 to transition type_cast_1547_sample_start_
        type_cast_1547_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from tmp389 to transition type_cast_1547_sample_start_
        ;;[type_cast_1547_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1547_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1547_sample_start_ &-> (type_cast_1547_Sample)
        type_cast_1547_sample_completed_ <-& (type_cast_1547_Sample)
        type_cast_1547_sample_completed_ &-> ($null)
        type_cast_1547_update_start_ &-> (type_cast_1547_Update)
        type_cast_1547_update_completed_ <-& (type_cast_1547_Update)
        // Target expression
        // (as target) conv393
        // start: WAR dependencies for conv393
        // done: WAR dependencies for conv393
        // end:  		conv393 := ($cast ($uint<8>) tmp389 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr396
        // done: WAR dependencies for shr396
        // start:  		$volatile shr396 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 416
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // tmp389
        // Target expression
        // (as target) shr396
        // start: WAR dependencies for shr396
        // done: WAR dependencies for shr396
        // end:  		$volatile shr396 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		conv399 := ($cast ($uint<8>) shr396 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 417
        // Source expression
        // ($cast ($uint<8>) shr396 )
        $T[type_cast_1557_sample_start_] 
        $T[type_cast_1557_sample_completed_] 
        $T[type_cast_1557_update_start_] 
        $T[type_cast_1557_update_completed_] 
        // shr396
        // start: Forward dependencies from shr396 to transition type_cast_1557_sample_start_
        type_cast_1557_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr396 to transition type_cast_1557_sample_start_
        ;;[type_cast_1557_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1557_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1557_sample_start_ &-> (type_cast_1557_Sample)
        type_cast_1557_sample_completed_ <-& (type_cast_1557_Sample)
        type_cast_1557_sample_completed_ &-> ($null)
        type_cast_1557_update_start_ &-> (type_cast_1557_Update)
        type_cast_1557_update_completed_ <-& (type_cast_1557_Update)
        // Target expression
        // (as target) conv399
        // start: WAR dependencies for conv399
        // done: WAR dependencies for conv399
        // end:  		conv399 := ($cast ($uint<8>) shr396 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr402
        // done: WAR dependencies for shr402
        // start:  		$volatile shr402 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 418
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        // tmp389
        // Target expression
        // (as target) shr402
        // start: WAR dependencies for shr402
        // done: WAR dependencies for shr402
        // end:  		$volatile shr402 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        // start:  		conv405 := ($cast ($uint<8>) shr402 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 419
        // Source expression
        // ($cast ($uint<8>) shr402 )
        $T[type_cast_1567_sample_start_] 
        $T[type_cast_1567_sample_completed_] 
        $T[type_cast_1567_update_start_] 
        $T[type_cast_1567_update_completed_] 
        // shr402
        // start: Forward dependencies from shr402 to transition type_cast_1567_sample_start_
        type_cast_1567_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr402 to transition type_cast_1567_sample_start_
        ;;[type_cast_1567_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1567_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1567_sample_start_ &-> (type_cast_1567_Sample)
        type_cast_1567_sample_completed_ <-& (type_cast_1567_Sample)
        type_cast_1567_sample_completed_ &-> ($null)
        type_cast_1567_update_start_ &-> (type_cast_1567_Update)
        type_cast_1567_update_completed_ <-& (type_cast_1567_Update)
        // Target expression
        // (as target) conv405
        // start: WAR dependencies for conv405
        // done: WAR dependencies for conv405
        // end:  		conv405 := ($cast ($uint<8>) shr402 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr408
        // done: WAR dependencies for shr408
        // start:  		$volatile shr408 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        //  file prog.linked.opt.aa, line 420
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
        // tmp389
        // Target expression
        // (as target) shr408
        // start: WAR dependencies for shr408
        // done: WAR dependencies for shr408
        // end:  		$volatile shr408 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        // start:  		conv411 := ($cast ($uint<8>) shr408 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 421
        // Source expression
        // ($cast ($uint<8>) shr408 )
        $T[type_cast_1577_sample_start_] 
        $T[type_cast_1577_sample_completed_] 
        $T[type_cast_1577_update_start_] 
        $T[type_cast_1577_update_completed_] 
        // shr408
        // start: Forward dependencies from shr408 to transition type_cast_1577_sample_start_
        type_cast_1577_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr408 to transition type_cast_1577_sample_start_
        ;;[type_cast_1577_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1577_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1577_sample_start_ &-> (type_cast_1577_Sample)
        type_cast_1577_sample_completed_ <-& (type_cast_1577_Sample)
        type_cast_1577_sample_completed_ &-> ($null)
        type_cast_1577_update_start_ &-> (type_cast_1577_Update)
        type_cast_1577_update_completed_ <-& (type_cast_1577_Update)
        // Target expression
        // (as target) conv411
        // start: WAR dependencies for conv411
        // done: WAR dependencies for conv411
        // end:  		conv411 := ($cast ($uint<8>) shr408 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr414
        // done: WAR dependencies for shr414
        // start:  		$volatile shr414 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        //  file prog.linked.opt.aa, line 422
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
        // tmp389
        // Target expression
        // (as target) shr414
        // start: WAR dependencies for shr414
        // done: WAR dependencies for shr414
        // end:  		$volatile shr414 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        // start:  		conv417 := ($cast ($uint<8>) shr414 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 423
        // Source expression
        // ($cast ($uint<8>) shr414 )
        $T[type_cast_1587_sample_start_] 
        $T[type_cast_1587_sample_completed_] 
        $T[type_cast_1587_update_start_] 
        $T[type_cast_1587_update_completed_] 
        // shr414
        // start: Forward dependencies from shr414 to transition type_cast_1587_sample_start_
        type_cast_1587_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr414 to transition type_cast_1587_sample_start_
        ;;[type_cast_1587_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1587_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1587_sample_start_ &-> (type_cast_1587_Sample)
        type_cast_1587_sample_completed_ <-& (type_cast_1587_Sample)
        type_cast_1587_sample_completed_ &-> ($null)
        type_cast_1587_update_start_ &-> (type_cast_1587_Update)
        type_cast_1587_update_completed_ <-& (type_cast_1587_Update)
        // Target expression
        // (as target) conv417
        // start: WAR dependencies for conv417
        // done: WAR dependencies for conv417
        // end:  		conv417 := ($cast ($uint<8>) shr414 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr420
        // done: WAR dependencies for shr420
        // start:  		$volatile shr420 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        //  file prog.linked.opt.aa, line 424
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
        // tmp389
        // Target expression
        // (as target) shr420
        // start: WAR dependencies for shr420
        // done: WAR dependencies for shr420
        // end:  		$volatile shr420 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        // start:  		conv423 := ($cast ($uint<8>) shr420 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 425
        // Source expression
        // ($cast ($uint<8>) shr420 )
        $T[type_cast_1597_sample_start_] 
        $T[type_cast_1597_sample_completed_] 
        $T[type_cast_1597_update_start_] 
        $T[type_cast_1597_update_completed_] 
        // shr420
        // start: Forward dependencies from shr420 to transition type_cast_1597_sample_start_
        type_cast_1597_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr420 to transition type_cast_1597_sample_start_
        ;;[type_cast_1597_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1597_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1597_sample_start_ &-> (type_cast_1597_Sample)
        type_cast_1597_sample_completed_ <-& (type_cast_1597_Sample)
        type_cast_1597_sample_completed_ &-> ($null)
        type_cast_1597_update_start_ &-> (type_cast_1597_Update)
        type_cast_1597_update_completed_ <-& (type_cast_1597_Update)
        // Target expression
        // (as target) conv423
        // start: WAR dependencies for conv423
        // done: WAR dependencies for conv423
        // end:  		conv423 := ($cast ($uint<8>) shr420 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr426
        // done: WAR dependencies for shr426
        // start:  		$volatile shr426 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        //  file prog.linked.opt.aa, line 426
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
        // tmp389
        // Target expression
        // (as target) shr426
        // start: WAR dependencies for shr426
        // done: WAR dependencies for shr426
        // end:  		$volatile shr426 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        // start:  		conv429 := ($cast ($uint<8>) shr426 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 427
        // Source expression
        // ($cast ($uint<8>) shr426 )
        $T[type_cast_1607_sample_start_] 
        $T[type_cast_1607_sample_completed_] 
        $T[type_cast_1607_update_start_] 
        $T[type_cast_1607_update_completed_] 
        // shr426
        // start: Forward dependencies from shr426 to transition type_cast_1607_sample_start_
        type_cast_1607_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr426 to transition type_cast_1607_sample_start_
        ;;[type_cast_1607_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1607_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1607_sample_start_ &-> (type_cast_1607_Sample)
        type_cast_1607_sample_completed_ <-& (type_cast_1607_Sample)
        type_cast_1607_sample_completed_ &-> ($null)
        type_cast_1607_update_start_ &-> (type_cast_1607_Update)
        type_cast_1607_update_completed_ <-& (type_cast_1607_Update)
        // Target expression
        // (as target) conv429
        // start: WAR dependencies for conv429
        // done: WAR dependencies for conv429
        // end:  		conv429 := ($cast ($uint<8>) shr426 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr432
        // done: WAR dependencies for shr432
        // start:  		$volatile shr432 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        //  file prog.linked.opt.aa, line 428
        // volatile! 
        // Source expression
        // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
        // tmp389
        // Target expression
        // (as target) shr432
        // start: WAR dependencies for shr432
        // done: WAR dependencies for shr432
        // end:  		$volatile shr432 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        // start:  		conv435 := ($cast ($uint<8>) shr432 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 429
        // Source expression
        // ($cast ($uint<8>) shr432 )
        $T[type_cast_1617_sample_start_] 
        $T[type_cast_1617_sample_completed_] 
        $T[type_cast_1617_update_start_] 
        $T[type_cast_1617_update_completed_] 
        // shr432
        // start: Forward dependencies from shr432 to transition type_cast_1617_sample_start_
        type_cast_1617_sample_start_ <-& (ptr_deref_1543_update_completed_)
        // done: Forward dependencies from shr432 to transition type_cast_1617_sample_start_
        ;;[type_cast_1617_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1617_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1617_sample_start_ &-> (type_cast_1617_Sample)
        type_cast_1617_sample_completed_ <-& (type_cast_1617_Sample)
        type_cast_1617_sample_completed_ &-> ($null)
        type_cast_1617_update_start_ &-> (type_cast_1617_Update)
        type_cast_1617_update_completed_ <-& (type_cast_1617_Update)
        // Target expression
        // (as target) conv435
        // start: WAR dependencies for conv435
        // done: WAR dependencies for conv435
        // end:  		conv435 := ($cast ($uint<8>) shr432 ) $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv435 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 430
        // Source expression
        // conv435
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1619_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1619_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1619_update_start_] 
        $T[WPIPE_Concat_output_pipe_1619_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1619_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1619_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1619_sample_start_ &-> (WPIPE_Concat_output_pipe_1619_Sample)
        WPIPE_Concat_output_pipe_1619_sample_completed_ <-& (WPIPE_Concat_output_pipe_1619_Sample)
        WPIPE_Concat_output_pipe_1619_update_start_ <-& (WPIPE_Concat_output_pipe_1619_sample_completed_)
        WPIPE_Concat_output_pipe_1619_update_start_ &-> (WPIPE_Concat_output_pipe_1619_Update)
        WPIPE_Concat_output_pipe_1619_update_completed_ <-& (WPIPE_Concat_output_pipe_1619_Update)
        // start: Forward dependencies from conv435 to transition WPIPE_Concat_output_pipe_1619_sample_start_
        WPIPE_Concat_output_pipe_1619_sample_start_ <-& (type_cast_1617_update_completed_)
        // done: Forward dependencies from conv435 to transition WPIPE_Concat_output_pipe_1619_sample_start_
        // end:  		Concat_output_pipe := conv435 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv429 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 431
        // Source expression
        // conv429
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1622_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1622_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1622_update_start_] 
        $T[WPIPE_Concat_output_pipe_1622_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1622_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1622_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1622_sample_start_ &-> (WPIPE_Concat_output_pipe_1622_Sample)
        WPIPE_Concat_output_pipe_1622_sample_completed_ <-& (WPIPE_Concat_output_pipe_1622_Sample)
        WPIPE_Concat_output_pipe_1622_update_start_ <-& (WPIPE_Concat_output_pipe_1622_sample_completed_)
        WPIPE_Concat_output_pipe_1622_update_start_ &-> (WPIPE_Concat_output_pipe_1622_Update)
        WPIPE_Concat_output_pipe_1622_update_completed_ <-& (WPIPE_Concat_output_pipe_1622_Update)
        // start: Forward dependencies from conv429 to transition WPIPE_Concat_output_pipe_1622_sample_start_
        WPIPE_Concat_output_pipe_1622_sample_start_ <-& (type_cast_1607_update_completed_)
        // done: Forward dependencies from conv429 to transition WPIPE_Concat_output_pipe_1622_sample_start_
        // end:  		Concat_output_pipe := conv429 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv423 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 432
        // Source expression
        // conv423
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1625_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1625_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1625_update_start_] 
        $T[WPIPE_Concat_output_pipe_1625_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1625_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1625_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1625_sample_start_ &-> (WPIPE_Concat_output_pipe_1625_Sample)
        WPIPE_Concat_output_pipe_1625_sample_completed_ <-& (WPIPE_Concat_output_pipe_1625_Sample)
        WPIPE_Concat_output_pipe_1625_update_start_ <-& (WPIPE_Concat_output_pipe_1625_sample_completed_)
        WPIPE_Concat_output_pipe_1625_update_start_ &-> (WPIPE_Concat_output_pipe_1625_Update)
        WPIPE_Concat_output_pipe_1625_update_completed_ <-& (WPIPE_Concat_output_pipe_1625_Update)
        // start: Forward dependencies from conv423 to transition WPIPE_Concat_output_pipe_1625_sample_start_
        WPIPE_Concat_output_pipe_1625_sample_start_ <-& (type_cast_1597_update_completed_)
        // done: Forward dependencies from conv423 to transition WPIPE_Concat_output_pipe_1625_sample_start_
        // end:  		Concat_output_pipe := conv423 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv417 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 433
        // Source expression
        // conv417
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1628_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1628_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1628_update_start_] 
        $T[WPIPE_Concat_output_pipe_1628_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1628_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1628_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1628_sample_start_ &-> (WPIPE_Concat_output_pipe_1628_Sample)
        WPIPE_Concat_output_pipe_1628_sample_completed_ <-& (WPIPE_Concat_output_pipe_1628_Sample)
        WPIPE_Concat_output_pipe_1628_update_start_ <-& (WPIPE_Concat_output_pipe_1628_sample_completed_)
        WPIPE_Concat_output_pipe_1628_update_start_ &-> (WPIPE_Concat_output_pipe_1628_Update)
        WPIPE_Concat_output_pipe_1628_update_completed_ <-& (WPIPE_Concat_output_pipe_1628_Update)
        // start: Forward dependencies from conv417 to transition WPIPE_Concat_output_pipe_1628_sample_start_
        WPIPE_Concat_output_pipe_1628_sample_start_ <-& (type_cast_1587_update_completed_)
        // done: Forward dependencies from conv417 to transition WPIPE_Concat_output_pipe_1628_sample_start_
        // end:  		Concat_output_pipe := conv417 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv411 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 434
        // Source expression
        // conv411
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1631_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1631_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1631_update_start_] 
        $T[WPIPE_Concat_output_pipe_1631_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1631_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1631_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1631_sample_start_ &-> (WPIPE_Concat_output_pipe_1631_Sample)
        WPIPE_Concat_output_pipe_1631_sample_completed_ <-& (WPIPE_Concat_output_pipe_1631_Sample)
        WPIPE_Concat_output_pipe_1631_update_start_ <-& (WPIPE_Concat_output_pipe_1631_sample_completed_)
        WPIPE_Concat_output_pipe_1631_update_start_ &-> (WPIPE_Concat_output_pipe_1631_Update)
        WPIPE_Concat_output_pipe_1631_update_completed_ <-& (WPIPE_Concat_output_pipe_1631_Update)
        // start: Forward dependencies from conv411 to transition WPIPE_Concat_output_pipe_1631_sample_start_
        WPIPE_Concat_output_pipe_1631_sample_start_ <-& (type_cast_1577_update_completed_)
        // done: Forward dependencies from conv411 to transition WPIPE_Concat_output_pipe_1631_sample_start_
        // end:  		Concat_output_pipe := conv411 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv405 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 435
        // Source expression
        // conv405
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1634_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1634_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1634_update_start_] 
        $T[WPIPE_Concat_output_pipe_1634_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1634_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1634_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1634_sample_start_ &-> (WPIPE_Concat_output_pipe_1634_Sample)
        WPIPE_Concat_output_pipe_1634_sample_completed_ <-& (WPIPE_Concat_output_pipe_1634_Sample)
        WPIPE_Concat_output_pipe_1634_update_start_ <-& (WPIPE_Concat_output_pipe_1634_sample_completed_)
        WPIPE_Concat_output_pipe_1634_update_start_ &-> (WPIPE_Concat_output_pipe_1634_Update)
        WPIPE_Concat_output_pipe_1634_update_completed_ <-& (WPIPE_Concat_output_pipe_1634_Update)
        // start: Forward dependencies from conv405 to transition WPIPE_Concat_output_pipe_1634_sample_start_
        WPIPE_Concat_output_pipe_1634_sample_start_ <-& (type_cast_1567_update_completed_)
        // done: Forward dependencies from conv405 to transition WPIPE_Concat_output_pipe_1634_sample_start_
        // end:  		Concat_output_pipe := conv405 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv399 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 436
        // Source expression
        // conv399
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1637_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1637_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1637_update_start_] 
        $T[WPIPE_Concat_output_pipe_1637_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1637_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1637_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1637_sample_start_ &-> (WPIPE_Concat_output_pipe_1637_Sample)
        WPIPE_Concat_output_pipe_1637_sample_completed_ <-& (WPIPE_Concat_output_pipe_1637_Sample)
        WPIPE_Concat_output_pipe_1637_update_start_ <-& (WPIPE_Concat_output_pipe_1637_sample_completed_)
        WPIPE_Concat_output_pipe_1637_update_start_ &-> (WPIPE_Concat_output_pipe_1637_Update)
        WPIPE_Concat_output_pipe_1637_update_completed_ <-& (WPIPE_Concat_output_pipe_1637_Update)
        // start: Forward dependencies from conv399 to transition WPIPE_Concat_output_pipe_1637_sample_start_
        WPIPE_Concat_output_pipe_1637_sample_start_ <-& (type_cast_1557_update_completed_)
        // done: Forward dependencies from conv399 to transition WPIPE_Concat_output_pipe_1637_sample_start_
        // end:  		Concat_output_pipe := conv399 $buffering 1// bits of buffering = 8. 
        // start:  		Concat_output_pipe := conv393 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 437
        // Source expression
        // conv393
        // Target expression
        // (as target) Concat_output_pipe
        $T[WPIPE_Concat_output_pipe_1640_sample_start_] 
        $T[WPIPE_Concat_output_pipe_1640_sample_completed_] 
        $T[WPIPE_Concat_output_pipe_1640_update_start_] 
        $T[WPIPE_Concat_output_pipe_1640_update_completed_] 
        ;;[WPIPE_Concat_output_pipe_1640_Sample] 
        {
          // pipe write sample-start Concat_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Concat_output_pipe_1640_Update] 
        {
          // pipe write update (complete) Concat_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_Concat_output_pipe_1640_sample_start_ &-> (WPIPE_Concat_output_pipe_1640_Sample)
        WPIPE_Concat_output_pipe_1640_sample_completed_ <-& (WPIPE_Concat_output_pipe_1640_Sample)
        WPIPE_Concat_output_pipe_1640_update_start_ <-& (WPIPE_Concat_output_pipe_1640_sample_completed_)
        WPIPE_Concat_output_pipe_1640_update_start_ &-> (WPIPE_Concat_output_pipe_1640_Update)
        WPIPE_Concat_output_pipe_1640_update_completed_ <-& (WPIPE_Concat_output_pipe_1640_Update)
        // start: Forward dependencies from conv393 to transition WPIPE_Concat_output_pipe_1640_sample_start_
        WPIPE_Concat_output_pipe_1640_sample_start_ <-& (type_cast_1547_update_completed_)
        // done: Forward dependencies from conv393 to transition WPIPE_Concat_output_pipe_1640_sample_start_
        // end:  		Concat_output_pipe := conv393 $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // start:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 438
        // volatile! 
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // end:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond1
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond1
        // start:  		$volatile exitcond1 := (indvarx_xnext == tmp475) $buffering 1
        //  file prog.linked.opt.aa, line 439
        // volatile! 
        // Source expression
        // (indvarx_xnext == tmp475)
        // indvarx_xnext
        // tmp475
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // ignored out-of-scope w_root 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond1
        // end:  		$volatile exitcond1 := (indvarx_xnext == tmp475) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_1543 load
        // pipe read/write dependencies for pipe Concat_output_pipe
        // read-dependencies for pipe Concat_output_pipe
        // write-dependencies for pipe Concat_output_pipe
        WPIPE_Concat_output_pipe_1622_sample_start_ <-& (WPIPE_Concat_output_pipe_1619_update_completed_)
        WPIPE_Concat_output_pipe_1625_sample_start_ <-& (WPIPE_Concat_output_pipe_1622_update_completed_)
        WPIPE_Concat_output_pipe_1628_sample_start_ <-& (WPIPE_Concat_output_pipe_1625_update_completed_)
        WPIPE_Concat_output_pipe_1631_sample_start_ <-& (WPIPE_Concat_output_pipe_1628_update_completed_)
        WPIPE_Concat_output_pipe_1634_sample_start_ <-& (WPIPE_Concat_output_pipe_1631_update_completed_)
        WPIPE_Concat_output_pipe_1637_sample_start_ <-& (WPIPE_Concat_output_pipe_1634_update_completed_)
        WPIPE_Concat_output_pipe_1640_sample_start_ <-& (WPIPE_Concat_output_pipe_1637_update_completed_)
        // signal write dependencies for Concat_output_pipe
      }
      assign_stmt_1540_to_assign_stmt_1653__entry__ |-> (assign_stmt_1540_to_assign_stmt_1653)
      assign_stmt_1540_to_assign_stmt_1653__exit__ <-| (assign_stmt_1540_to_assign_stmt_1653)
      // if-statement  
      //  file prog.linked.opt.aa, line 440
      ;;[if_stmt_1654_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1654__entry__ |-> (if_stmt_1654_dead_link)
      if_stmt_1654__exit__ <-| (if_stmt_1654_dead_link)
      ;;[if_stmt_1654_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1654__entry__ |-> (if_stmt_1654_eval_test)
      $P [R_exitcond1_1655_place]
      R_exitcond1_1655_place <-| (if_stmt_1654_eval_test)
      ;;[if_stmt_1654_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1654_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_1655_place |-> (if_stmt_1654_if_link if_stmt_1654_else_link)
      $P [forx_xbody383_forx_xend456x_xloopexit]
      forx_xbody383_forx_xend456x_xloopexit <-| (if_stmt_1654_if_link)
      $P [forx_xbody383_forx_xbody383]
      forx_xbody383_forx_xbody383 <-| (if_stmt_1654_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 101
      ;;[merge_stmt_314_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_314__entry__ |-> (merge_stmt_314_dead_link)
      merge_stmt_314__exit__ <-| (merge_stmt_314_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 101  --------------------------
      ||[forx_xbody_forx_xcond171x_xpreheaderx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody_forx_xcond171x_xpreheaderx_xloopexit |-> (forx_xbody_forx_xcond171x_xpreheaderx_xloopexit_PhiReq)
      $P [merge_stmt_314_PhiReqMerge] 
      merge_stmt_314_PhiReqMerge <-| ( forx_xbody_forx_xcond171x_xpreheaderx_xloopexit_PhiReq )
      ||[merge_stmt_314_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_314_PhiReqMerge |-> (merge_stmt_314_PhiAck)
      merge_stmt_314__exit__  <-| (merge_stmt_314_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 101  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 104
      //---------------------   merge statement  file prog.linked.opt.aa, line 104  --------------------------
      ||[entry_forx_xcond171x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_forx_xcond171x_xpreheader |-> (entry_forx_xcond171x_xpreheader_PhiReq)
      ||[forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader |-> (forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader_PhiReq)
      $P [merge_stmt_316_PhiReqMerge] 
      merge_stmt_316_PhiReqMerge <-| ( entry_forx_xcond171x_xpreheader_PhiReq  forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader_PhiReq )
      ||[merge_stmt_316_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_316_PhiReqMerge |-> (merge_stmt_316_PhiAck)
      merge_stmt_316__exit__  <-| (merge_stmt_316_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 104  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 112
      ;;[merge_stmt_329_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_329__entry__ |-> (merge_stmt_329_dead_link)
      merge_stmt_329__exit__ <-| (merge_stmt_329_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 112  --------------------------
      ||[entry_bbx_xnph469_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_bbx_xnph469 |-> (entry_bbx_xnph469_PhiReq)
      $P [merge_stmt_329_PhiReqMerge] 
      merge_stmt_329_PhiReqMerge <-| ( entry_bbx_xnph469_PhiReq )
      ||[merge_stmt_329_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_329_PhiReqMerge |-> (merge_stmt_329_PhiAck)
      merge_stmt_329__exit__  <-| (merge_stmt_329_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 112  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 123
      //---------------------   merge statement  file prog.linked.opt.aa, line 123  --------------------------
      ||[bbx_xnph469_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_377] 
        {
          ||[phi_stmt_377_sources] 
          {
            // sources for 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_381_konst_delay_trans] $delay
          }
          $T [phi_stmt_377_req] 
        }
      }
      bbx_xnph469_forx_xbody |-> (bbx_xnph469_forx_xbody_PhiReq)
      ||[forx_xbody_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_377] 
        {
          ||[phi_stmt_377_sources] 
          {
            // sources for 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext490 )
            ;;[type_cast_383] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_377_req] 
        }
      }
      forx_xbody_forx_xbody |-> (forx_xbody_forx_xbody_PhiReq)
      $P [merge_stmt_376_PhiReqMerge] 
      merge_stmt_376_PhiReqMerge <-| ( bbx_xnph469_forx_xbody_PhiReq  forx_xbody_forx_xbody_PhiReq )
      ||[merge_stmt_376_PhiAck] 
      {
        $T [phi_stmt_377_ack] 
      }
      merge_stmt_376_PhiReqMerge |-> (merge_stmt_376_PhiAck)
      merge_stmt_376__exit__  <-| (merge_stmt_376_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 123  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 166
      ;;[merge_stmt_546_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_546__entry__ |-> (merge_stmt_546_dead_link)
      merge_stmt_546__exit__ <-| (merge_stmt_546_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 166  --------------------------
      ||[forx_xcond171x_xpreheader_bbx_xnph465_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xcond171x_xpreheader_bbx_xnph465 |-> (forx_xcond171x_xpreheader_bbx_xnph465_PhiReq)
      $P [merge_stmt_546_PhiReqMerge] 
      merge_stmt_546_PhiReqMerge <-| ( forx_xcond171x_xpreheader_bbx_xnph465_PhiReq )
      ||[merge_stmt_546_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_546_PhiReqMerge |-> (merge_stmt_546_PhiAck)
      merge_stmt_546__exit__  <-| (merge_stmt_546_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 166  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 177
      //---------------------   merge statement  file prog.linked.opt.aa, line 177  --------------------------
      ||[bbx_xnph465_forx_xbody177_PhiReq] 
      {
        ;;[phi_stmt_594] 
        {
          ||[phi_stmt_594_sources] 
          {
            // sources for 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_598_konst_delay_trans] $delay
          }
          $T [phi_stmt_594_req] 
        }
      }
      bbx_xnph465_forx_xbody177 |-> (bbx_xnph465_forx_xbody177_PhiReq)
      ||[forx_xbody177_forx_xbody177_PhiReq] 
      {
        ;;[phi_stmt_594] 
        {
          ||[phi_stmt_594_sources] 
          {
            // sources for 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext477 )
            ;;[type_cast_600] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_594_req] 
        }
      }
      forx_xbody177_forx_xbody177 |-> (forx_xbody177_forx_xbody177_PhiReq)
      $P [merge_stmt_593_PhiReqMerge] 
      merge_stmt_593_PhiReqMerge <-| ( bbx_xnph465_forx_xbody177_PhiReq  forx_xbody177_forx_xbody177_PhiReq )
      ||[merge_stmt_593_PhiAck] 
      {
        $T [phi_stmt_594_ack] 
      }
      merge_stmt_593_PhiReqMerge |-> (merge_stmt_593_PhiAck)
      merge_stmt_593__exit__  <-| (merge_stmt_593_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 177  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 220
      ;;[merge_stmt_763_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_763__entry__ |-> (merge_stmt_763_dead_link)
      merge_stmt_763__exit__ <-| (merge_stmt_763_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 220  --------------------------
      ||[forx_xbody177_forx_xend231x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody177_forx_xend231x_xloopexit |-> (forx_xbody177_forx_xend231x_xloopexit_PhiReq)
      $P [merge_stmt_763_PhiReqMerge] 
      merge_stmt_763_PhiReqMerge <-| ( forx_xbody177_forx_xend231x_xloopexit_PhiReq )
      ||[merge_stmt_763_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_763_PhiReqMerge |-> (merge_stmt_763_PhiAck)
      merge_stmt_763__exit__  <-| (merge_stmt_763_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 220  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 223
      //---------------------   merge statement  file prog.linked.opt.aa, line 223  --------------------------
      ||[forx_xcond171x_xpreheader_forx_xend231_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xcond171x_xpreheader_forx_xend231 |-> (forx_xcond171x_xpreheader_forx_xend231_PhiReq)
      ||[forx_xend231x_xloopexit_forx_xend231_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xend231x_xloopexit_forx_xend231 |-> (forx_xend231x_xloopexit_forx_xend231_PhiReq)
      $P [merge_stmt_765_PhiReqMerge] 
      merge_stmt_765_PhiReqMerge <-| ( forx_xcond171x_xpreheader_forx_xend231_PhiReq  forx_xend231x_xloopexit_forx_xend231_PhiReq )
      ||[merge_stmt_765_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_765_PhiReqMerge |-> (merge_stmt_765_PhiAck)
      merge_stmt_765__exit__  <-| (merge_stmt_765_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 223  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 232
      //---------------------   merge statement  file prog.linked.opt.aa, line 232  --------------------------
      ||[forx_xend231_whilex_xbody_PhiReq] 
      {
        // skipped constant phi phi_stmt_790
        // skipped constant phi phi_stmt_796
        // skipped constant phi phi_stmt_801
        // skipped constant phi phi_stmt_806
        // skipped constant phi phi_stmt_811
      }
      forx_xend231_whilex_xbody |-> (forx_xend231_whilex_xbody_PhiReq)
      $P [merge_stmt_789_PhiReqMerge] 
      merge_stmt_789_PhiReqMerge <-| ( forx_xend231_whilex_xbody_PhiReq )
      ||[merge_stmt_789_PhiAck] 
      {
        // skipped constant phi phi_stmt_790
        // skipped constant phi phi_stmt_796
        // skipped constant phi phi_stmt_801
        // skipped constant phi phi_stmt_806
        // skipped constant phi phi_stmt_811
      }
      merge_stmt_789_PhiReqMerge |-> (merge_stmt_789_PhiAck)
      merge_stmt_789__exit__  <-| (merge_stmt_789_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 232  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 364
      ;;[merge_stmt_1363_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1363__entry__ |-> (merge_stmt_1363_dead_link)
      merge_stmt_1363__exit__ <-| (merge_stmt_1363_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 364  --------------------------
      ||[ifx_xend300_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend300_whilex_xend |-> (ifx_xend300_whilex_xend_PhiReq)
      $P [merge_stmt_1363_PhiReqMerge] 
      merge_stmt_1363_PhiReqMerge <-| ( ifx_xend300_whilex_xend_PhiReq )
      ||[merge_stmt_1363_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1363_PhiReqMerge |-> (merge_stmt_1363_PhiAck)
      merge_stmt_1363__exit__  <-| (merge_stmt_1363_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 364  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 401
      ;;[merge_stmt_1494_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1494__entry__ |-> (merge_stmt_1494_dead_link)
      merge_stmt_1494__exit__ <-| (merge_stmt_1494_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 401  --------------------------
      ||[whilex_xend_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      whilex_xend_bbx_xnph |-> (whilex_xend_bbx_xnph_PhiReq)
      $P [merge_stmt_1494_PhiReqMerge] 
      merge_stmt_1494_PhiReqMerge <-| ( whilex_xend_bbx_xnph_PhiReq )
      ||[merge_stmt_1494_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1494_PhiReqMerge |-> (merge_stmt_1494_PhiAck)
      merge_stmt_1494__exit__  <-| (merge_stmt_1494_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 401  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 409
      //---------------------   merge statement  file prog.linked.opt.aa, line 409  --------------------------
      ||[bbx_xnph_forx_xbody383_PhiReq] 
      {
        ;;[phi_stmt_1526] 
        {
          ||[phi_stmt_1526_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1530_konst_delay_trans] $delay
          }
          $T [phi_stmt_1526_req] 
        }
      }
      bbx_xnph_forx_xbody383 |-> (bbx_xnph_forx_xbody383_PhiReq)
      ||[forx_xbody383_forx_xbody383_PhiReq] 
      {
        ;;[phi_stmt_1526] 
        {
          ||[phi_stmt_1526_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_1532] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1526_req] 
        }
      }
      forx_xbody383_forx_xbody383 |-> (forx_xbody383_forx_xbody383_PhiReq)
      $P [merge_stmt_1525_PhiReqMerge] 
      merge_stmt_1525_PhiReqMerge <-| ( bbx_xnph_forx_xbody383_PhiReq  forx_xbody383_forx_xbody383_PhiReq )
      ||[merge_stmt_1525_PhiAck] 
      {
        $T [phi_stmt_1526_ack] 
      }
      merge_stmt_1525_PhiReqMerge |-> (merge_stmt_1525_PhiAck)
      merge_stmt_1525__exit__  <-| (merge_stmt_1525_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 409  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 445
      ;;[merge_stmt_1660_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1660__entry__ |-> (merge_stmt_1660_dead_link)
      merge_stmt_1660__exit__ <-| (merge_stmt_1660_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 445  --------------------------
      ||[forx_xbody383_forx_xend456x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody383_forx_xend456x_xloopexit |-> (forx_xbody383_forx_xend456x_xloopexit_PhiReq)
      $P [merge_stmt_1660_PhiReqMerge] 
      merge_stmt_1660_PhiReqMerge <-| ( forx_xbody383_forx_xend456x_xloopexit_PhiReq )
      ||[merge_stmt_1660_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1660_PhiReqMerge |-> (merge_stmt_1660_PhiAck)
      merge_stmt_1660__exit__  <-| (merge_stmt_1660_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 445  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 448
      //---------------------   merge statement  file prog.linked.opt.aa, line 448  --------------------------
      ||[forx_xend456x_xloopexit_forx_xend456_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xend456x_xloopexit_forx_xend456 |-> (forx_xend456x_xloopexit_forx_xend456_PhiReq)
      ||[whilex_xend_forx_xend456_PhiReq] 
      {
        // no phi statements in merge..
      }
      whilex_xend_forx_xend456 |-> (whilex_xend_forx_xend456_PhiReq)
      $P [merge_stmt_1662_PhiReqMerge] 
      merge_stmt_1662_PhiReqMerge <-| ( forx_xend456x_xloopexit_forx_xend456_PhiReq  whilex_xend_forx_xend456_PhiReq )
      ||[merge_stmt_1662_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1662_PhiReqMerge |-> (merge_stmt_1662_PhiAck)
      merge_stmt_1662__exit__  <-| (merge_stmt_1662_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 448  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 451
      //---------------------   merge statement  file prog.linked.opt.aa, line 451  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1664_PhiReqMerge] 
      merge_stmt_1664_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1664_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1664_PhiReqMerge |-> (merge_stmt_1664_PhiAck)
      merge_stmt_1664__exit__  <-| (merge_stmt_1664_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 451  --------------------------
      assign_stmt_26_to_assign_stmt_307__entry__ <-| (branch_block_stmt_23__entry__)
      if_stmt_308__entry__ <-| (assign_stmt_26_to_assign_stmt_307__exit__)
      merge_stmt_314__entry__ <-| (if_stmt_308__exit__)
      forx_xcond171x_xpreheaderx_xloopexit_forx_xcond171x_xpreheader <-| (merge_stmt_314__exit__)
      assign_stmt_322__entry__ <-| (merge_stmt_316__exit__)
      if_stmt_323__entry__ <-| (assign_stmt_322__exit__)
      merge_stmt_329__entry__ <-| (if_stmt_323__exit__)
      assign_stmt_334_to_assign_stmt_374__entry__ <-| (merge_stmt_329__exit__)
      bbx_xnph469_forx_xbody <-| (assign_stmt_334_to_assign_stmt_374__exit__)
      assign_stmt_391_to_assign_stmt_539__entry__ <-| (merge_stmt_376__exit__)
      if_stmt_540__entry__ <-| (assign_stmt_391_to_assign_stmt_539__exit__)
      merge_stmt_546__entry__ <-| (if_stmt_540__exit__)
      assign_stmt_551_to_assign_stmt_591__entry__ <-| (merge_stmt_546__exit__)
      bbx_xnph465_forx_xbody177 <-| (assign_stmt_551_to_assign_stmt_591__exit__)
      assign_stmt_608_to_assign_stmt_756__entry__ <-| (merge_stmt_593__exit__)
      if_stmt_757__entry__ <-| (assign_stmt_608_to_assign_stmt_756__exit__)
      merge_stmt_763__entry__ <-| (if_stmt_757__exit__)
      forx_xend231x_xloopexit_forx_xend231 <-| (merge_stmt_763__exit__)
      call_stmt_768__entry__ <-| (merge_stmt_765__exit__)
      assign_stmt_775_to_assign_stmt_787__entry__ <-| (call_stmt_768__exit__)
      forx_xend231_whilex_xbody <-| (assign_stmt_775_to_assign_stmt_787__exit__)
      do_while_stmt_817__entry__ <-| (merge_stmt_789__exit__)
      if_stmt_1359__entry__ <-| (do_while_stmt_817__exit__)
      merge_stmt_1363__entry__ <-| (if_stmt_1359__exit__)
      assign_stmt_1369__entry__ <-| (merge_stmt_1363__exit__)
      call_stmt_1372_to_assign_stmt_1480__entry__ <-| (assign_stmt_1369__exit__)
      assign_stmt_1487__entry__ <-| (call_stmt_1372_to_assign_stmt_1480__exit__)
      if_stmt_1488__entry__ <-| (assign_stmt_1487__exit__)
      merge_stmt_1494__entry__ <-| (if_stmt_1488__exit__)
      assign_stmt_1500_to_assign_stmt_1523__entry__ <-| (merge_stmt_1494__exit__)
      bbx_xnph_forx_xbody383 <-| (assign_stmt_1500_to_assign_stmt_1523__exit__)
      assign_stmt_1540_to_assign_stmt_1653__entry__ <-| (merge_stmt_1525__exit__)
      if_stmt_1654__entry__ <-| (assign_stmt_1540_to_assign_stmt_1653__exit__)
      merge_stmt_1660__entry__ <-| (if_stmt_1654__exit__)
      forx_xend456x_xloopexit_forx_xend456 <-| (merge_stmt_1660__exit__)
      return__ <-| (merge_stmt_1662__exit__)
      merge_stmt_1664__exit__ |-> (branch_block_stmt_23__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 101
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 104
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 112
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 123
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 166
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 177
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 220
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 223
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 232
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 246
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 364
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 401
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 409
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 445
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 448
    // constant-object-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 451
    // constant-object-declarations for block %concat%body
    //  file prog.linked.opt.aa, line 29
    // constant-object-declarations for block %concat
    //  file prog.linked.opt.aa, line 24
    // constant-declarations for block %concat%body
    //  file prog.linked.opt.aa, line 29
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_35_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_60_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_85_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_110_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_135_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_160_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_185_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_210_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000001000  )
    $constant $W[type_cast_235_wire_constant] : $int<32> := _b00000000000000000000000000001000// 8
    // ($bitcast ($uint<32>) _b00000000000000000000000000000011  )
    $constant $W[type_cast_288_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000011  )
    $constant $W[type_cast_299_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_305_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // if-statement  
    //  file prog.linked.opt.aa, line 96
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 101
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 104
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_320_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // if-statement  
    //  file prog.linked.opt.aa, line 107
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 112
    // ($bitcast ($uint<32>) _b00000000000000000000000000000011  )
    $constant $W[type_cast_343_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_349_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_355_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_365_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_372_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 123
    // constant-declarations for phi:  			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 124
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_381_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489])
    $constant $W[array_obj_ref_389_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_389_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_389_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_389_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_402_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_420_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_438_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_456_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_474_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_492_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_510_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ->(arrayidx)
    $constant $W[ptr_deref_526_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_532_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 161
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 166
    // ($bitcast ($uint<32>) _b00000000000000000000000000000011  )
    $constant $W[type_cast_560_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_566_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_572_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_582_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_589_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 177
    // constant-declarations for phi:  			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 178
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_598_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476])
    $constant $W[array_obj_ref_606_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_606_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_606_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_606_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_619_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_637_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_655_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_673_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_691_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_709_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_727_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ->(arrayidx227)
    $constant $W[ptr_deref_743_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_749_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 215
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 220
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 223
    // 		$call timer () (call233 ) 
    //  file prog.linked.opt.aa, line 226
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_773_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_779_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000000000000000000011  )
    $constant $W[type_cast_785_wire_constant] : $int<32> := _b00000000000000000000000000000011// 3
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 232
    // constant-declarations for phi:  			$phi add_outx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 233
    $constant $W[add_outx_x1_at_entry_790] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi add_inp1x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 235
    $constant $W[add_inp1x_x1_at_entry_796] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi add_inp2x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 237
    $constant $W[add_inp2x_x1_at_entry_801] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi count_inp1x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 239
    $constant $W[count_inp1x_x1_at_entry_806] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi count_inp2x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 241
    $constant $W[count_inp2x_x1_at_entry_811] : $int<16> := _b0000000000000000 // 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 244
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 246
    // constant-declarations for phi:  			$phi add_outx_x1 := 			  ($cast ($uint<16>) add_outx_x2504 ) $on   $loopback 			  add_outx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 247
    // constant-declarations for phi:  			$phi add_inp1x_x1 := 			  ($cast ($uint<16>) add_inp1x_x0 ) $on   $loopback 			  add_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 249
    // constant-declarations for phi:  			$phi add_inp2x_x1 := 			  ($cast ($uint<16>) add_inp2x_x0506 ) $on   $loopback 			  add_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 251
    // constant-declarations for phi:  			$phi count_inp1x_x1 := 			  ($cast ($uint<16>) count_inp1x_x2 ) $on   $loopback 			  count_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 253
    // constant-declarations for phi:  			$phi count_inp2x_x1 := 			  ($cast ($uint<16>) count_inp2x_x2 ) $on   $loopback 			  count_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 255
    // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247])
    $constant $W[array_obj_ref_876_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_876_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_876_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_876_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx248)
    $constant $W[ptr_deref_885_word_offset_0] : $int<14> := _b00000000000000// 0
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251])
    $constant $W[array_obj_ref_899_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_899_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_899_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_899_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx252_894_delayed_6_0)
    $constant $W[ptr_deref_910_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_920_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_930_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_940_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_962_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_977_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_992_wire_constant] : $int<16> := _b0000000000000000// 0
    // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273])
    $constant $W[array_obj_ref_1079_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1079_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1079_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1079_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx274)
    $constant $W[ptr_deref_1088_word_offset_0] : $int<14> := _b00000000000000// 0
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277])
    $constant $W[array_obj_ref_1102_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1102_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1102_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1102_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx278_1043_delayed_6_0)
    $constant $W[ptr_deref_1113_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1123_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1133_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1143_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1165_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1180_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1195_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1252_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  ) 
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 ) 
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1280_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  ) 
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 ) 
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1304_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1311_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 ) 
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1330_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1337_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 ) 
    // if-statement  
    //  file prog.linked.opt.aa, line 0
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 364
    // 		$call timer () (call310 ) 
    //  file prog.linked.opt.aa, line 368
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_1390_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_1400_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )
    $constant $W[type_cast_1410_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011000// 24
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )
    $constant $W[type_cast_1420_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000100000// 32
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )
    $constant $W[type_cast_1430_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000101000// 40
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )
    $constant $W[type_cast_1440_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000110000// 48
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )
    $constant $W[type_cast_1450_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111000// 56
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1485_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // if-statement  
    //  file prog.linked.opt.aa, line 396
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 401
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1498_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_1504_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1514_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1521_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 409
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 410
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1530_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $constant $W[array_obj_ref_1538_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1538_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1538_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1538_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx388)
    $constant $W[ptr_deref_1543_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_1552_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_1562_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )
    $constant $W[type_cast_1572_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011000// 24
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )
    $constant $W[type_cast_1582_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000100000// 32
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )
    $constant $W[type_cast_1592_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000101000// 40
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )
    $constant $W[type_cast_1602_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000110000// 48
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )
    $constant $W[type_cast_1612_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111000// 56
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1646_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 440
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 445
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 448
    // constant-declarations for block %concat%body%
    //  file prog.linked.opt.aa, line 451
    // block %concat%body
    //  file prog.linked.opt.aa, line 29
    // 		call := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 31
    // call
    $W[call_26] : $int<8>
    // 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 32
    // conv1
    $W[conv1_31] : $int<32>
    // 		$volatile shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 33
    // shl
    $W[shl_37] : $int<32>
    // 		call2 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 34
    // call2
    $W[call2_40] : $int<8>
    // 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 35
    // conv3
    $W[conv3_44] : $int<32>
    // 		$volatile add := (shl | conv3) $buffering 1
    //  file prog.linked.opt.aa, line 36
    // add
    $W[add_49] : $int<32>
    // 		call5 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 37
    // call5
    $W[call5_52] : $int<8>
    // 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 38
    // conv8
    $W[conv8_56] : $int<32>
    // 		$volatile shl9 := (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 39
    // shl9
    $W[shl9_62] : $int<32>
    // 		call10 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 40
    // call10
    $W[call10_65] : $int<8>
    // 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 41
    // conv11
    $W[conv11_69] : $int<32>
    // 		$volatile add12 := (shl9 | conv11) $buffering 1
    //  file prog.linked.opt.aa, line 42
    // add12
    $W[add12_74] : $int<32>
    // 		call14 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 43
    // call14
    $W[call14_77] : $int<8>
    // 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 44
    // conv17
    $W[conv17_81] : $int<32>
    // 		$volatile shl18 := (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 45
    // shl18
    $W[shl18_87] : $int<32>
    // 		call19 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 46
    // call19
    $W[call19_90] : $int<8>
    // 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 47
    // conv20
    $W[conv20_94] : $int<32>
    // 		$volatile add21 := (shl18 | conv20) $buffering 1
    //  file prog.linked.opt.aa, line 48
    // add21
    $W[add21_99] : $int<32>
    // 		call23 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 49
    // call23
    $W[call23_102] : $int<8>
    // 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 50
    // conv26
    $W[conv26_106] : $int<32>
    // 		$volatile shl27 := (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 51
    // shl27
    $W[shl27_112] : $int<32>
    // 		call28 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 52
    // call28
    $W[call28_115] : $int<8>
    // 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 53
    // conv29
    $W[conv29_119] : $int<32>
    // 		$volatile add30 := (shl27 | conv29) $buffering 1
    //  file prog.linked.opt.aa, line 54
    // add30
    $W[add30_124] : $int<32>
    // 		call32 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 55
    // call32
    $W[call32_127] : $int<8>
    // 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 56
    // conv35
    $W[conv35_131] : $int<32>
    // 		$volatile shl36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 57
    // shl36
    $W[shl36_137] : $int<32>
    // 		call37 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 58
    // call37
    $W[call37_140] : $int<8>
    // 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 59
    // conv38
    $W[conv38_144] : $int<32>
    // 		$volatile add39 := (shl36 | conv38) $buffering 1
    //  file prog.linked.opt.aa, line 60
    // add39
    $W[add39_149] : $int<32>
    // 		call41 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 61
    // call41
    $W[call41_152] : $int<8>
    // 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 62
    // conv44
    $W[conv44_156] : $int<32>
    // 		$volatile shl45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 63
    // shl45
    $W[shl45_162] : $int<32>
    // 		call46 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 64
    // call46
    $W[call46_165] : $int<8>
    // 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 65
    // conv47
    $W[conv47_169] : $int<32>
    // 		$volatile add48 := (shl45 | conv47) $buffering 1
    //  file prog.linked.opt.aa, line 66
    // add48
    $W[add48_174] : $int<32>
    // 		call50 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 67
    // call50
    $W[call50_177] : $int<8>
    // 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 68
    // conv53
    $W[conv53_181] : $int<32>
    // 		$volatile shl54 := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 69
    // shl54
    $W[shl54_187] : $int<32>
    // 		call55 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 70
    // call55
    $W[call55_190] : $int<8>
    // 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 71
    // conv56
    $W[conv56_194] : $int<32>
    // 		$volatile add57 := (shl54 | conv56) $buffering 1
    //  file prog.linked.opt.aa, line 72
    // add57
    $W[add57_199] : $int<32>
    // 		call59 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 73
    // call59
    $W[call59_202] : $int<8>
    // 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 74
    // conv62
    $W[conv62_206] : $int<32>
    // 		$volatile shl63 := (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 75
    // shl63
    $W[shl63_212] : $int<32>
    // 		call64 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 76
    // call64
    $W[call64_215] : $int<8>
    // 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 77
    // conv65
    $W[conv65_219] : $int<32>
    // 		$volatile add66 := (shl63 | conv65) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // add66
    $W[add66_224] : $int<32>
    // 		call68 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // call68
    $W[call68_227] : $int<8>
    // 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 80
    // conv71
    $W[conv71_231] : $int<32>
    // 		$volatile shl72 := (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 81
    // shl72
    $W[shl72_237] : $int<32>
    // 		call73 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 82
    // call73
    $W[call73_240] : $int<8>
    // 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 83
    // conv74
    $W[conv74_244] : $int<32>
    // 		$volatile add75 := (shl72 | conv74) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // add75
    $W[add75_249] : $int<32>
    // 		$volatile mul := (add12 * add) $buffering 1
    //  file prog.linked.opt.aa, line 85
    // mul
    $W[mul_254] : $int<32>
    // 		$volatile mul85 := (mul * add21) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // mul85
    $W[mul85_259] : $int<32>
    // 		$volatile mul91 := (add39 * add30) $buffering 1
    //  file prog.linked.opt.aa, line 87
    // mul91
    $W[mul91_264] : $int<32>
    // 		$volatile mul94 := (mul91 * add48) $buffering 1
    //  file prog.linked.opt.aa, line 88
    // mul94
    $W[mul94_269] : $int<32>
    // 		$volatile mul100 := (add66 * add57) $buffering 1
    //  file prog.linked.opt.aa, line 89
    // mul100
    $W[mul100_274] : $int<32>
    // 		$volatile mul103 := (mul100 * add75) $buffering 1
    //  file prog.linked.opt.aa, line 90
    // mul103
    $W[mul103_279] : $int<32>
    // 		$volatile mul109 := (add21 * add12) $buffering 1
    //  file prog.linked.opt.aa, line 91
    // mul109
    $W[mul109_284] : $int<32>
    // 		$volatile shr457 := (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 92
    // shr457
    $W[shr457_290] : $int<32>
    // 		$volatile mul116 := (add48 * add39) $buffering 1
    //  file prog.linked.opt.aa, line 93
    // mul116
    $W[mul116_295] : $int<32>
    // 		$volatile shr117458 := (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 94
    // shr117458
    $W[shr117458_301] : $int<32>
    // 		$volatile cmp467 := (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 95
    // cmp467
    $W[cmp467_307] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 96
    // 		$volatile cmp175463 := (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 106
    // cmp175463
    $W[cmp175463_322] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 107
    // 		$volatile tmp492 := (add * add12) $buffering 1
    //  file prog.linked.opt.aa, line 114
    // tmp492
    $W[tmp492_334] : $int<32>
    // 		$volatile tmp494 := (tmp492 * add21) $buffering 1
    //  file prog.linked.opt.aa, line 115
    // tmp494
    $W[tmp494_339] : $int<32>
    // 		$volatile tmp495 := (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 116
    // tmp495
    $W[tmp495_345] : $int<32>
    // 		$volatile tmp496 := (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 117
    // tmp496
    $W[tmp496_351] : $int<1>
    // 		$volatile tmp495x_xop := (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 118
    // tmp495x_xop
    $W[tmp495x_xop_357] : $int<32>
    // 		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 119
    // iNsTr_19
    $W[iNsTr_19_361] : $int<64>
    // 		$volatile xx_xop503 := (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 120
    // xx_xop503
    $W[xx_xop503_367] : $int<64>
    // 		$volatile tmp500 := ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 121
    // tmp500
    $W[tmp500_374] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 123
    // 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 124
    // ($cast ($uint<64>) indvarx_xnext490 )
    $intermediate $W[type_cast_383_wire] : $int<64>
    // indvar489
    $W[indvar489_377] : $int<64>
    // 		arrayidx := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 127
    // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489])
    $intermediate $W[R_indvar489_388_resized] : $int<14>
    $intermediate $W[R_indvar489_388_scaled] : $int<14>
    $intermediate $W[array_obj_ref_389_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_389_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_391] : $int<32>
    // 		call124 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 128
    // call124
    $W[call124_394] : $int<8>
    // 		conv125 := ($cast ($uint<64>) call124 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 129
    // conv125
    $W[conv125_398] : $int<64>
    // 		$volatile shl127 := (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 130
    // shl127
    $W[shl127_404] : $int<64>
    // 		call128 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 131
    // call128
    $W[call128_407] : $int<8>
    // 		conv130 := ($cast ($uint<64>) call128 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 132
    // conv130
    $W[conv130_411] : $int<64>
    // 		$volatile add131 := (shl127 | conv130) $buffering 1
    //  file prog.linked.opt.aa, line 133
    // add131
    $W[add131_416] : $int<64>
    // 		$volatile shl133 := (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 134
    // shl133
    $W[shl133_422] : $int<64>
    // 		call134 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 135
    // call134
    $W[call134_425] : $int<8>
    // 		conv136 := ($cast ($uint<64>) call134 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 136
    // conv136
    $W[conv136_429] : $int<64>
    // 		$volatile add137 := (shl133 | conv136) $buffering 1
    //  file prog.linked.opt.aa, line 137
    // add137
    $W[add137_434] : $int<64>
    // 		$volatile shl139 := (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 138
    // shl139
    $W[shl139_440] : $int<64>
    // 		call140 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 139
    // call140
    $W[call140_443] : $int<8>
    // 		conv142 := ($cast ($uint<64>) call140 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 140
    // conv142
    $W[conv142_447] : $int<64>
    // 		$volatile add143 := (shl139 | conv142) $buffering 1
    //  file prog.linked.opt.aa, line 141
    // add143
    $W[add143_452] : $int<64>
    // 		$volatile shl145 := (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 142
    // shl145
    $W[shl145_458] : $int<64>
    // 		call146 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 143
    // call146
    $W[call146_461] : $int<8>
    // 		conv148 := ($cast ($uint<64>) call146 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 144
    // conv148
    $W[conv148_465] : $int<64>
    // 		$volatile add149 := (shl145 | conv148) $buffering 1
    //  file prog.linked.opt.aa, line 145
    // add149
    $W[add149_470] : $int<64>
    // 		$volatile shl151 := (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 146
    // shl151
    $W[shl151_476] : $int<64>
    // 		call152 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 147
    // call152
    $W[call152_479] : $int<8>
    // 		conv154 := ($cast ($uint<64>) call152 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 148
    // conv154
    $W[conv154_483] : $int<64>
    // 		$volatile add155 := (shl151 | conv154) $buffering 1
    //  file prog.linked.opt.aa, line 149
    // add155
    $W[add155_488] : $int<64>
    // 		$volatile shl157 := (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 150
    // shl157
    $W[shl157_494] : $int<64>
    // 		call158 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 151
    // call158
    $W[call158_497] : $int<8>
    // 		conv160 := ($cast ($uint<64>) call158 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 152
    // conv160
    $W[conv160_501] : $int<64>
    // 		$volatile add161 := (shl157 | conv160) $buffering 1
    //  file prog.linked.opt.aa, line 153
    // add161
    $W[add161_506] : $int<64>
    // 		$volatile shl163 := (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 154
    // shl163
    $W[shl163_512] : $int<64>
    // 		call164 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 155
    // call164
    $W[call164_515] : $int<8>
    // 		conv166 := ($cast ($uint<64>) call164 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 156
    // conv166
    $W[conv166_519] : $int<64>
    // 		$volatile add167 := (shl163 | conv166) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // add167
    $W[add167_524] : $int<64>
    // 		->(arrayidx) := add167 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 158
    // ->(arrayidx)
    $intermediate $W[ptr_deref_526_wire] : $int<64>
    $intermediate $W[ptr_deref_526_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_526_root_address] : $int<14>
    $W[ptr_deref_526_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_526_data_0] : $int<64>
    // 		$volatile indvarx_xnext490 := (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 159
    // indvarx_xnext490
    $W[indvarx_xnext490_534] : $int<64>
    // 		$volatile exitcond2 := (indvarx_xnext490 == tmp500) $buffering 1
    //  file prog.linked.opt.aa, line 160
    // exitcond2
    $W[exitcond2_539] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 161
    // 		$volatile tmp479 := (add30 * add39) $buffering 1
    //  file prog.linked.opt.aa, line 168
    // tmp479
    $W[tmp479_551] : $int<32>
    // 		$volatile tmp481 := (tmp479 * add48) $buffering 1
    //  file prog.linked.opt.aa, line 169
    // tmp481
    $W[tmp481_556] : $int<32>
    // 		$volatile tmp482 := (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 170
    // tmp482
    $W[tmp482_562] : $int<32>
    // 		$volatile tmp483 := (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 171
    // tmp483
    $W[tmp483_568] : $int<1>
    // 		$volatile tmp482x_xop := (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 172
    // tmp482x_xop
    $W[tmp482x_xop_574] : $int<32>
    // 		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 173
    // iNsTr_32
    $W[iNsTr_32_578] : $int<64>
    // 		$volatile xx_xop502 := (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 174
    // xx_xop502
    $W[xx_xop502_584] : $int<64>
    // 		$volatile tmp487 := ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 175
    // tmp487
    $W[tmp487_591] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 177
    // 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 178
    // ($cast ($uint<64>) indvarx_xnext477 )
    $intermediate $W[type_cast_600_wire] : $int<64>
    // indvar476
    $W[indvar476_594] : $int<64>
    // 		arrayidx227 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 181
    // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476])
    $intermediate $W[R_indvar476_605_resized] : $int<14>
    $intermediate $W[R_indvar476_605_scaled] : $int<14>
    $intermediate $W[array_obj_ref_606_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_606_root_address] : $int<14>
    // arrayidx227
    $W[arrayidx227_608] : $int<32>
    // 		call180 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 182
    // call180
    $W[call180_611] : $int<8>
    // 		conv181 := ($cast ($uint<64>) call180 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 183
    // conv181
    $W[conv181_615] : $int<64>
    // 		$volatile shl183 := (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 184
    // shl183
    $W[shl183_621] : $int<64>
    // 		call184 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 185
    // call184
    $W[call184_624] : $int<8>
    // 		conv186 := ($cast ($uint<64>) call184 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 186
    // conv186
    $W[conv186_628] : $int<64>
    // 		$volatile add187 := (shl183 | conv186) $buffering 1
    //  file prog.linked.opt.aa, line 187
    // add187
    $W[add187_633] : $int<64>
    // 		$volatile shl189 := (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 188
    // shl189
    $W[shl189_639] : $int<64>
    // 		call190 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 189
    // call190
    $W[call190_642] : $int<8>
    // 		conv192 := ($cast ($uint<64>) call190 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 190
    // conv192
    $W[conv192_646] : $int<64>
    // 		$volatile add193 := (shl189 | conv192) $buffering 1
    //  file prog.linked.opt.aa, line 191
    // add193
    $W[add193_651] : $int<64>
    // 		$volatile shl195 := (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 192
    // shl195
    $W[shl195_657] : $int<64>
    // 		call196 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 193
    // call196
    $W[call196_660] : $int<8>
    // 		conv198 := ($cast ($uint<64>) call196 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 194
    // conv198
    $W[conv198_664] : $int<64>
    // 		$volatile add199 := (shl195 | conv198) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // add199
    $W[add199_669] : $int<64>
    // 		$volatile shl201 := (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 196
    // shl201
    $W[shl201_675] : $int<64>
    // 		call202 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 197
    // call202
    $W[call202_678] : $int<8>
    // 		conv204 := ($cast ($uint<64>) call202 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 198
    // conv204
    $W[conv204_682] : $int<64>
    // 		$volatile add205 := (shl201 | conv204) $buffering 1
    //  file prog.linked.opt.aa, line 199
    // add205
    $W[add205_687] : $int<64>
    // 		$volatile shl207 := (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 200
    // shl207
    $W[shl207_693] : $int<64>
    // 		call208 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 201
    // call208
    $W[call208_696] : $int<8>
    // 		conv210 := ($cast ($uint<64>) call208 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 202
    // conv210
    $W[conv210_700] : $int<64>
    // 		$volatile add211 := (shl207 | conv210) $buffering 1
    //  file prog.linked.opt.aa, line 203
    // add211
    $W[add211_705] : $int<64>
    // 		$volatile shl213 := (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 204
    // shl213
    $W[shl213_711] : $int<64>
    // 		call214 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 205
    // call214
    $W[call214_714] : $int<8>
    // 		conv216 := ($cast ($uint<64>) call214 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 206
    // conv216
    $W[conv216_718] : $int<64>
    // 		$volatile add217 := (shl213 | conv216) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // add217
    $W[add217_723] : $int<64>
    // 		$volatile shl219 := (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 208
    // shl219
    $W[shl219_729] : $int<64>
    // 		call220 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 209
    // call220
    $W[call220_732] : $int<8>
    // 		conv222 := ($cast ($uint<64>) call220 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 210
    // conv222
    $W[conv222_736] : $int<64>
    // 		$volatile add223 := (shl219 | conv222) $buffering 1
    //  file prog.linked.opt.aa, line 211
    // add223
    $W[add223_741] : $int<64>
    // 		->(arrayidx227) := add223 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 212
    // ->(arrayidx227)
    $intermediate $W[ptr_deref_743_wire] : $int<64>
    $intermediate $W[ptr_deref_743_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_743_root_address] : $int<14>
    $W[ptr_deref_743_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_743_data_0] : $int<64>
    // 		$volatile indvarx_xnext477 := (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 213
    // indvarx_xnext477
    $W[indvarx_xnext477_751] : $int<64>
    // 		$volatile exitcond := (indvarx_xnext477 == tmp487) $buffering 1
    //  file prog.linked.opt.aa, line 214
    // exitcond
    $W[exitcond_756] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 215
    // 		$call timer () (call233 ) 
    //  file prog.linked.opt.aa, line 226
    // call233
    $W[call233_768] : $int<64>
    // 		$volatile conv243 := (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 228
    // conv243
    $W[conv243_775] : $int<32>
    // 		$volatile conv268 := (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 229
    // conv268
    $W[conv268_781] : $int<32>
    // 		$volatile shr304 := (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 230
    // shr304
    $W[shr304_787] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 232
    // do-while statement  
    //  file prog.linked.opt.aa, line 244
    // ( ~ cmp305 )
    $intermediate $W[NOT_u1_u1_1358_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 246
    // 			$phi add_outx_x1 := 			  ($cast ($uint<16>) add_outx_x2504 ) $on   $loopback 			  add_outx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 247
    // ($cast ($uint<16>) add_outx_x2504 )
    $intermediate $W[type_cast_822_wire] : $int<16>
    // add_outx_x1
    $W[add_outx_x1_819] : $int<16>
    // 			$phi add_inp1x_x1 := 			  ($cast ($uint<16>) add_inp1x_x0 ) $on   $loopback 			  add_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 249
    // ($cast ($uint<16>) add_inp1x_x0 )
    $intermediate $W[type_cast_827_wire] : $int<16>
    // add_inp1x_x1
    $W[add_inp1x_x1_824] : $int<16>
    // 			$phi add_inp2x_x1 := 			  ($cast ($uint<16>) add_inp2x_x0506 ) $on   $loopback 			  add_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 251
    // ($cast ($uint<16>) add_inp2x_x0506 )
    $intermediate $W[type_cast_832_wire] : $int<16>
    // add_inp2x_x1
    $W[add_inp2x_x1_829] : $int<16>
    // 			$phi count_inp1x_x1 := 			  ($cast ($uint<16>) count_inp1x_x2 ) $on   $loopback 			  count_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 253
    // ($cast ($uint<16>) count_inp1x_x2 )
    $intermediate $W[type_cast_837_wire] : $int<16>
    // count_inp1x_x1
    $W[count_inp1x_x1_834] : $int<16>
    // 			$phi count_inp2x_x1 := 			  ($cast ($uint<16>) count_inp2x_x2 ) $on   $loopback 			  count_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 255
    // ($cast ($uint<16>) count_inp2x_x2 )
    $intermediate $W[type_cast_842_wire] : $int<16>
    // count_inp2x_x1
    $W[count_inp2x_x1_839] : $int<16>
    // 			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 258
    // conv241
    $W[conv241_848] : $int<32>
    // 			$volatile cmp244 := (conv241 < conv243) $buffering 1
    //  file prog.linked.opt.aa, line 259
    // cmp244
    $W[cmp244_853] : $int<1>
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp244 $buffering 1
    //  file prog.linked.opt.aa, line 260
    // whilex_xbody_ifx_xthen_taken
    $W[whilex_xbody_ifx_xthen_taken_856] : $int<1>
    // 			$volatile whilex_xbody_ifx_xend_taken := ( ~ cmp244 ) $buffering 1
    //  file prog.linked.opt.aa, line 261
    // whilex_xbody_ifx_xend_taken
    $W[whilex_xbody_ifx_xend_taken_860] : $int<1>
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 262
    // ifx_xthen_exec_guard
    $W[ifx_xthen_exec_guard_863] : $int<1>
    // 			add_inp1x_x1_866_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 263
    // add_inp1x_x1_866_delayed_1_0
    $W[add_inp1x_x1_866_delayed_1_0_866] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) idxprom247 := ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 264
    // idxprom247
    $W[idxprom247_871] : $int<64>
    // 			arrayidx248 := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 265
    // @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247])
    $intermediate $W[R_idxprom247_875_resized] : $int<14>
    $intermediate $W[R_idxprom247_875_scaled] : $int<14>
    $intermediate $W[array_obj_ref_876_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_876_root_address] : $int<14>
    // arrayidx248
    $W[arrayidx248_878] : $int<32>
    // 			ifx_xthen_exec_guard_876_delayed_7_0 := ifx_xthen_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
    //  file prog.linked.opt.aa, line 266
    // ifx_xthen_exec_guard_876_delayed_7_0
    $W[ifx_xthen_exec_guard_876_delayed_7_0_881] : $int<1>
    // 			$guard (ifx_xthen_exec_guard_876_delayed_7_0) tmp249 := ->(arrayidx248) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 267
    // ->(arrayidx248)
    $intermediate $W[ptr_deref_885_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_885_root_address] : $int<14>
    $W[ptr_deref_885_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_885_data_0] : $int<64>
    // tmp249
    $W[tmp249_886] : $int<64>
    // 			add_outx_x1_883_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 268
    // add_outx_x1_883_delayed_1_0
    $W[add_outx_x1_883_delayed_1_0_889] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) idxprom251 := ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 269
    // idxprom251
    $W[idxprom251_894] : $int<64>
    // 			arrayidx252 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 270
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251])
    $intermediate $W[R_idxprom251_898_resized] : $int<14>
    $intermediate $W[R_idxprom251_898_scaled] : $int<14>
    $intermediate $W[array_obj_ref_899_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_899_root_address] : $int<14>
    // arrayidx252
    $W[arrayidx252_901] : $int<32>
    // 			ifx_xthen_exec_guard_893_delayed_13_0 := ifx_xthen_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
    //  file prog.linked.opt.aa, line 271
    // ifx_xthen_exec_guard_893_delayed_13_0
    $W[ifx_xthen_exec_guard_893_delayed_13_0_904] : $int<1>
    // 			arrayidx252_894_delayed_6_0 := arrayidx252 $buffering 6 $cut_through // bits of buffering = 192. 
    //  file prog.linked.opt.aa, line 272
    // arrayidx252_894_delayed_6_0
    $W[arrayidx252_894_delayed_6_0_907] : $int<32>
    // 			$guard (ifx_xthen_exec_guard_893_delayed_13_0) ->(arrayidx252_894_delayed_6_0) := tmp249 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 273
    // ->(arrayidx252_894_delayed_6_0)
    $intermediate $W[ptr_deref_910_wire] : $int<64>
    $intermediate $W[ptr_deref_910_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_910_root_address] : $int<14>
    $W[ptr_deref_910_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_910_data_0] : $int<64>
    // 			count_inp1x_x1_900_delayed_1_0 := count_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 274
    // count_inp1x_x1_900_delayed_1_0
    $W[count_inp1x_x1_900_delayed_1_0_915] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile inc254 := (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 275
    // inc254
    $W[inc254_922] : $int<16>
    // 			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 276
    // add_inp1x_x1_907_delayed_1_0
    $W[add_inp1x_x1_907_delayed_1_0_925] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile inc256 := (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 277
    // inc256
    $W[inc256_932] : $int<16>
    // 			add_outx_x1_914_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 278
    // add_outx_x1_914_delayed_1_0
    $W[add_outx_x1_914_delayed_1_0_935] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile inc258 := (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 279
    // inc258
    $W[inc258_942] : $int<16>
    // 			$volatile ifx_xthen_ifx_xend_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 280
    // ifx_xthen_ifx_xend_taken
    $W[ifx_xthen_ifx_xend_taken_945] : $int<1>
    // 			$volatile ifx_xend_exec_guard := (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken) $buffering 1
    //  file prog.linked.opt.aa, line 281
    // ifx_xend_exec_guard
    $W[ifx_xend_exec_guard_950] : $int<1>
    // 			type_cast_933_933_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 282
    // type_cast_933_933_delayed_1_0
    $W[type_cast_933_933_delayed_1_0_954] : $int<16>
    // 			$volatile add_outx_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 283
    // ($bitcast ($uint<16>) inc258 )
    $intermediate $W[type_cast_958_wire] : $int<16>
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_963_wire] : $int<16>
    // add_outx_x0
    $W[add_outx_x0_965] : $int<16>
    // 			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 284
    // type_cast_945_945_delayed_1_0
    $W[type_cast_945_945_delayed_1_0_969] : $int<16>
    // 			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 285
    // ($bitcast ($uint<16>) inc256 )
    $intermediate $W[type_cast_973_wire] : $int<16>
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_978_wire] : $int<16>
    // add_inp1x_x0
    $W[add_inp1x_x0_980] : $int<16>
    // 			type_cast_957_957_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 286
    // type_cast_957_957_delayed_1_0
    $W[type_cast_957_957_delayed_1_0_984] : $int<16>
    // 			$volatile count_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 287
    // ($bitcast ($uint<16>) inc254 )
    $intermediate $W[type_cast_988_wire] : $int<16>
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_993_wire] : $int<16>
    // count_inp1x_x0
    $W[count_inp1x_x0_995] : $int<16>
    // 			$guard (ifx_xend_exec_guard) conv260 := ($cast ($uint<32>) count_inp1x_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 288
    // conv260
    $W[conv260_1000] : $int<32>
    // 			ifx_xend_exec_guard_968_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 289
    // ifx_xend_exec_guard_968_delayed_1_0
    $W[ifx_xend_exec_guard_968_delayed_1_0_1003] : $int<1>
    // 			$guard (ifx_xend_exec_guard_968_delayed_1_0) $volatile cmp263 := (conv260 == conv243) $buffering 1
    //  file prog.linked.opt.aa, line 290
    // cmp263
    $W[cmp263_1009] : $int<1>
    // 			ifx_xend_exec_guard_975_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 291
    // ifx_xend_exec_guard_975_delayed_1_0
    $W[ifx_xend_exec_guard_975_delayed_1_0_1012] : $int<1>
    // 			$volatile ifx_xend_landx_xlhsx_xtrue_taken := (ifx_xend_exec_guard_975_delayed_1_0 & cmp263) $buffering 1
    //  file prog.linked.opt.aa, line 292
    // ifx_xend_landx_xlhsx_xtrue_taken
    $W[ifx_xend_landx_xlhsx_xtrue_taken_1017] : $int<1>
    // 			ifx_xend_exec_guard_980_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 293
    // ifx_xend_exec_guard_980_delayed_1_0
    $W[ifx_xend_exec_guard_980_delayed_1_0_1020] : $int<1>
    // 			$volatile ifx_xend_ifx_xend300_taken := (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 )) $buffering 1
    //  file prog.linked.opt.aa, line 294
    // ( ~ cmp263 )
    $intermediate $W[NOT_u1_u1_1024_wire] : $int<1>
    // ifx_xend_ifx_xend300_taken
    $W[ifx_xend_ifx_xend300_taken_1026] : $int<1>
    // 			$volatile landx_xlhsx_xtrue_exec_guard := ifx_xend_landx_xlhsx_xtrue_taken $buffering 1
    //  file prog.linked.opt.aa, line 295
    // landx_xlhsx_xtrue_exec_guard
    $W[landx_xlhsx_xtrue_exec_guard_1029] : $int<1>
    // 			count_inp2x_x1_990_delayed_2_0 := count_inp2x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 296
    // count_inp2x_x1_990_delayed_2_0
    $W[count_inp2x_x1_990_delayed_2_0_1032] : $int<16>
    // 			$guard (landx_xlhsx_xtrue_exec_guard) conv266 := ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 297
    // conv266
    $W[conv266_1037] : $int<32>
    // 			landx_xlhsx_xtrue_exec_guard_993_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 298
    // landx_xlhsx_xtrue_exec_guard_993_delayed_1_0
    $W[landx_xlhsx_xtrue_exec_guard_993_delayed_1_0_1040] : $int<1>
    // 			$guard (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0) $volatile cmp269 := (conv266 < conv268) $buffering 1
    //  file prog.linked.opt.aa, line 299
    // cmp269
    $W[cmp269_1046] : $int<1>
    // 			landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 300
    // landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
    $W[landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0_1049] : $int<1>
    // 			$volatile landx_xlhsx_xtrue_ifx_xthen271_taken := (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269) $buffering 1
    //  file prog.linked.opt.aa, line 301
    // landx_xlhsx_xtrue_ifx_xthen271_taken
    $W[landx_xlhsx_xtrue_ifx_xthen271_taken_1054] : $int<1>
    // 			landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 302
    // landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
    $W[landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0_1057] : $int<1>
    // 			$volatile landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken := (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 )) $buffering 1
    //  file prog.linked.opt.aa, line 303
    // ( ~ cmp269 )
    $intermediate $W[NOT_u1_u1_1061_wire] : $int<1>
    // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
    $W[landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063] : $int<1>
    // 			$volatile ifx_xthen271_exec_guard := landx_xlhsx_xtrue_ifx_xthen271_taken $buffering 1
    //  file prog.linked.opt.aa, line 304
    // ifx_xthen271_exec_guard
    $W[ifx_xthen271_exec_guard_1066] : $int<1>
    // 			add_inp2x_x1_1015_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 305
    // add_inp2x_x1_1015_delayed_3_0
    $W[add_inp2x_x1_1015_delayed_3_0_1069] : $int<16>
    // 			$guard (ifx_xthen271_exec_guard) idxprom273 := ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 306
    // idxprom273
    $W[idxprom273_1074] : $int<64>
    // 			arrayidx274 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 307
    // @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273])
    $intermediate $W[R_idxprom273_1078_resized] : $int<14>
    $intermediate $W[R_idxprom273_1078_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1079_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1079_root_address] : $int<14>
    // arrayidx274
    $W[arrayidx274_1081] : $int<32>
    // 			ifx_xthen271_exec_guard_1025_delayed_7_0 := ifx_xthen271_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
    //  file prog.linked.opt.aa, line 308
    // ifx_xthen271_exec_guard_1025_delayed_7_0
    $W[ifx_xthen271_exec_guard_1025_delayed_7_0_1084] : $int<1>
    // 			$guard (ifx_xthen271_exec_guard_1025_delayed_7_0) tmp275 := ->(arrayidx274) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 309
    // ->(arrayidx274)
    $intermediate $W[ptr_deref_1088_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1088_root_address] : $int<14>
    $W[ptr_deref_1088_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_1088_data_0] : $int<64>
    // tmp275
    $W[tmp275_1089] : $int<64>
    // 			add_outx_x0_1032_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 310
    // add_outx_x0_1032_delayed_2_0
    $W[add_outx_x0_1032_delayed_2_0_1092] : $int<16>
    // 			$guard (ifx_xthen271_exec_guard) idxprom277 := ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 311
    // idxprom277
    $W[idxprom277_1097] : $int<64>
    // 			arrayidx278 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 312
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277])
    $intermediate $W[R_idxprom277_1101_resized] : $int<14>
    $intermediate $W[R_idxprom277_1101_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1102_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1102_root_address] : $int<14>
    // arrayidx278
    $W[arrayidx278_1104] : $int<32>
    // 			ifx_xthen271_exec_guard_1042_delayed_13_0 := ifx_xthen271_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
    //  file prog.linked.opt.aa, line 313
    // ifx_xthen271_exec_guard_1042_delayed_13_0
    $W[ifx_xthen271_exec_guard_1042_delayed_13_0_1107] : $int<1>
    // 			arrayidx278_1043_delayed_6_0 := arrayidx278 $buffering 6 $cut_through // bits of buffering = 192. 
    //  file prog.linked.opt.aa, line 314
    // arrayidx278_1043_delayed_6_0
    $W[arrayidx278_1043_delayed_6_0_1110] : $int<32>
    // 			$guard (ifx_xthen271_exec_guard_1042_delayed_13_0) ->(arrayidx278_1043_delayed_6_0) := tmp275 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 315
    // ->(arrayidx278_1043_delayed_6_0)
    $intermediate $W[ptr_deref_1113_wire] : $int<64>
    $intermediate $W[ptr_deref_1113_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1113_root_address] : $int<14>
    $W[ptr_deref_1113_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1113_data_0] : $int<64>
    // 			count_inp2x_x1_1049_delayed_3_0 := count_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 316
    // count_inp2x_x1_1049_delayed_3_0
    $W[count_inp2x_x1_1049_delayed_3_0_1118] : $int<16>
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc280 := (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 317
    // inc280
    $W[inc280_1125] : $int<16>
    // 			add_inp2x_x1_1056_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 318
    // add_inp2x_x1_1056_delayed_3_0
    $W[add_inp2x_x1_1056_delayed_3_0_1128] : $int<16>
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc282 := (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 319
    // inc282
    $W[inc282_1135] : $int<16>
    // 			add_outx_x0_1063_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 320
    // add_outx_x0_1063_delayed_2_0
    $W[add_outx_x0_1063_delayed_2_0_1138] : $int<16>
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc284 := (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 321
    // inc284
    $W[inc284_1145] : $int<16>
    // 			$volatile ifx_xthen271_landx_xlhsx_xtrue292_taken := ifx_xthen271_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 322
    // ifx_xthen271_landx_xlhsx_xtrue292_taken
    $W[ifx_xthen271_landx_xlhsx_xtrue292_taken_1148] : $int<1>
    // 			$volatile landx_xlhsx_xtrue292_exec_guard := (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken) $buffering 1
    //  file prog.linked.opt.aa, line 323
    // landx_xlhsx_xtrue292_exec_guard
    $W[landx_xlhsx_xtrue292_exec_guard_1153] : $int<1>
    // 			type_cast_1082_1082_delayed_2_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 324
    // type_cast_1082_1082_delayed_2_0
    $W[type_cast_1082_1082_delayed_2_0_1157] : $int<16>
    // 			$volatile add_outx_x2x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 325
    // ($bitcast ($uint<16>) inc284 )
    $intermediate $W[type_cast_1161_wire] : $int<16>
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1166_wire] : $int<16>
    // add_outx_x2x_xph
    $W[add_outx_x2x_xph_1168] : $int<16>
    // 			type_cast_1094_1094_delayed_3_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 326
    // type_cast_1094_1094_delayed_3_0
    $W[type_cast_1094_1094_delayed_3_0_1172] : $int<16>
    // 			$volatile add_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 327
    // ($bitcast ($uint<16>) inc282 )
    $intermediate $W[type_cast_1176_wire] : $int<16>
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1181_wire] : $int<16>
    // add_inp2x_x0x_xph
    $W[add_inp2x_x0x_xph_1183] : $int<16>
    // 			type_cast_1106_1106_delayed_3_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 328
    // type_cast_1106_1106_delayed_3_0
    $W[type_cast_1106_1106_delayed_3_0_1187] : $int<16>
    // 			$volatile count_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 329
    // ($bitcast ($uint<16>) inc280 )
    $intermediate $W[type_cast_1191_wire] : $int<16>
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1196_wire] : $int<16>
    // count_inp2x_x0x_xph
    $W[count_inp2x_x0x_xph_1198] : $int<16>
    // 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 330
    // conv294
    $W[conv294_1203] : $int<32>
    // 			landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 331
    // landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0
    $W[landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0_1206] : $int<1>
    // 			$guard (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0) $volatile cmp297 := (conv294 == conv268) $buffering 1
    //  file prog.linked.opt.aa, line 332
    // cmp297
    $W[cmp297_1212] : $int<1>
    // 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 333
    // landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
    $W[landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1215] : $int<1>
    // 			$volatile landx_xlhsx_xtrue292_ifx_xthen299_taken := (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297) $buffering 1
    //  file prog.linked.opt.aa, line 334
    // landx_xlhsx_xtrue292_ifx_xthen299_taken
    $W[landx_xlhsx_xtrue292_ifx_xthen299_taken_1220] : $int<1>
    // 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 335
    // landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
    $W[landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1223] : $int<1>
    // 			$volatile landx_xlhsx_xtrue292_ifx_xend300_taken := (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 )) $buffering 1
    //  file prog.linked.opt.aa, line 336
    // ( ~ cmp297 )
    $intermediate $W[NOT_u1_u1_1227_wire] : $int<1>
    // landx_xlhsx_xtrue292_ifx_xend300_taken
    $W[landx_xlhsx_xtrue292_ifx_xend300_taken_1229] : $int<1>
    // 			$volatile ifx_xthen299_exec_guard := landx_xlhsx_xtrue292_ifx_xthen299_taken $buffering 1
    //  file prog.linked.opt.aa, line 337
    // ifx_xthen299_exec_guard
    $W[ifx_xthen299_exec_guard_1232] : $int<1>
    // 			$volatile ifx_xthen299_ifx_xend300_taken := ifx_xthen299_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 338
    // ifx_xthen299_ifx_xend300_taken
    $W[ifx_xthen299_ifx_xend300_taken_1235] : $int<1>
    // 			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 339
    // type_cast_1143_1143_delayed_1_0
    $W[type_cast_1143_1143_delayed_1_0_1239] : $int<16>
    // 			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 340
    // type_cast_1146_1146_delayed_1_0
    $W[type_cast_1146_1146_delayed_1_0_1243] : $int<16>
    // 			type_cast_1149_1149_delayed_2_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 341
    // type_cast_1149_1149_delayed_2_0
    $W[type_cast_1149_1149_delayed_2_0_1247] : $int<16>
    // 			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 342
    // MUX_1152_1152_delayed_2_0
    $W[MUX_1152_1152_delayed_2_0_1254] : $int<16>
    // 			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 343
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 ) 
    $intermediate $W[MUX_1261_wire] : $int<16>
    // add_inp2x_x0506
    $W[add_inp2x_x0506_1263] : $int<16>
    // 			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 344
    // type_cast_1159_1159_delayed_1_0
    $W[type_cast_1159_1159_delayed_1_0_1267] : $int<16>
    // 			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 345
    // type_cast_1162_1162_delayed_1_0
    $W[type_cast_1162_1162_delayed_1_0_1271] : $int<16>
    // 			type_cast_1165_1165_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 346
    // type_cast_1165_1165_delayed_1_0
    $W[type_cast_1165_1165_delayed_1_0_1275] : $int<16>
    // 			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 347
    // MUX_1168_1168_delayed_2_0
    $W[MUX_1168_1168_delayed_2_0_1282] : $int<16>
    // 			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 348
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 ) 
    $intermediate $W[MUX_1289_wire] : $int<16>
    // add_outx_x2504
    $W[add_outx_x2504_1291] : $int<16>
    // 			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 349
    // type_cast_1179_1179_delayed_3_0
    $W[type_cast_1179_1179_delayed_3_0_1295] : $int<16>
    // 			type_cast_1182_1182_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 350
    // type_cast_1182_1182_delayed_1_0
    $W[type_cast_1182_1182_delayed_1_0_1299] : $int<16>
    // 			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 351
    // MUX_1185_1185_delayed_2_0
    $W[MUX_1185_1185_delayed_2_0_1306] : $int<16>
    // 			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 352
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 ) 
    $intermediate $W[MUX_1315_wire] : $int<16>
    // count_inp1x_x2
    $W[count_inp1x_x2_1317] : $int<16>
    // 			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 353
    // type_cast_1196_1196_delayed_1_0
    $W[type_cast_1196_1196_delayed_1_0_1321] : $int<16>
    // 			type_cast_1199_1199_delayed_2_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 354
    // type_cast_1199_1199_delayed_2_0
    $W[type_cast_1199_1199_delayed_2_0_1325] : $int<16>
    // 			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 355
    // MUX_1202_1202_delayed_2_0
    $W[MUX_1202_1202_delayed_2_0_1332] : $int<16>
    // 			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 356
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 ) 
    $intermediate $W[MUX_1341_wire] : $int<16>
    // count_inp2x_x2
    $W[count_inp2x_x2_1343] : $int<16>
    // 			conv302 := ($cast ($uint<32>) add_outx_x2504 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 357
    // conv302
    $W[conv302_1347] : $int<32>
    // 			$volatile cmp305 := (conv302 == shr304) $buffering 1
    //  file prog.linked.opt.aa, line 358
    // cmp305
    $W[cmp305_1352] : $int<1>
    // 			$volatile ifx_xend300_whilex_xend_taken := cmp305 $buffering 1
    //  file prog.linked.opt.aa, line 359
    // ifx_xend300_whilex_xend_taken
    $W[ifx_xend300_whilex_xend_taken_1355] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 0
    // 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 366
    // ($cast ($int<64>) call233 )
    $intermediate $W[type_cast_1367_wire] : $int<64>
    // conv234
    $W[conv234_1369] : $int<64>
    // 		$call timer () (call310 ) 
    //  file prog.linked.opt.aa, line 368
    // call310
    $W[call310_1372] : $int<64>
    // 		conv311 := ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 369
    // ($cast ($int<64>) call310 )
    $intermediate $W[type_cast_1375_wire] : $int<64>
    // conv311
    $W[conv311_1377] : $int<64>
    // 		$volatile sub := (conv311 - conv234) $buffering 1
    //  file prog.linked.opt.aa, line 370
    // sub
    $W[sub_1382] : $int<64>
    // 		conv317 := ($cast ($uint<8>) sub ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 371
    // conv317
    $W[conv317_1386] : $int<8>
    // 		$volatile shr320 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 372
    // shr320
    $W[shr320_1392] : $int<64>
    // 		conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 373
    // conv323
    $W[conv323_1396] : $int<8>
    // 		$volatile shr326 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 374
    // shr326
    $W[shr326_1402] : $int<64>
    // 		conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 375
    // conv329
    $W[conv329_1406] : $int<8>
    // 		$volatile shr332 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 376
    // shr332
    $W[shr332_1412] : $int<64>
    // 		conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 377
    // conv335
    $W[conv335_1416] : $int<8>
    // 		$volatile shr338 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 378
    // shr338
    $W[shr338_1422] : $int<64>
    // 		conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 379
    // conv341
    $W[conv341_1426] : $int<8>
    // 		$volatile shr344 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 380
    // shr344
    $W[shr344_1432] : $int<64>
    // 		conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 381
    // conv347
    $W[conv347_1436] : $int<8>
    // 		$volatile shr350 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 382
    // shr350
    $W[shr350_1442] : $int<64>
    // 		conv353 := ($cast ($uint<8>) shr350 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 383
    // conv353
    $W[conv353_1446] : $int<8>
    // 		$volatile shr356 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 384
    // shr356
    $W[shr356_1452] : $int<64>
    // 		conv359 := ($cast ($uint<8>) shr356 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 385
    // conv359
    $W[conv359_1456] : $int<8>
    // 		Concat_output_pipe := conv359 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 386
    // Concat_output_pipe
    // 		Concat_output_pipe := conv353 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 387
    // Concat_output_pipe
    // 		Concat_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 388
    // Concat_output_pipe
    // 		Concat_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 389
    // Concat_output_pipe
    // 		Concat_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 390
    // Concat_output_pipe
    // 		Concat_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 391
    // Concat_output_pipe
    // 		Concat_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 392
    // Concat_output_pipe
    // 		Concat_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 393
    // Concat_output_pipe
    // 		$volatile cmp381460 := (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 395
    // cmp381460
    $W[cmp381460_1487] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 396
    // 		$volatile tmp472 := (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 403
    // tmp472
    $W[tmp472_1500] : $int<1>
    // 		$volatile tmp471x_xop := (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // tmp471x_xop
    $W[tmp471x_xop_1506] : $int<32>
    // 		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 405
    // iNsTr_79
    $W[iNsTr_79_1510] : $int<64>
    // 		$volatile xx_xop := (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 406
    // xx_xop
    $W[xx_xop_1516] : $int<64>
    // 		$volatile tmp475 := ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 407
    // tmp475
    $W[tmp475_1523] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 409
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 410
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_1532_wire] : $int<64>
    // indvar
    $W[indvar_1526] : $int<64>
    // 		arrayidx388 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 413
    // @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $intermediate $W[R_indvar_1537_resized] : $int<14>
    $intermediate $W[R_indvar_1537_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1538_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1538_root_address] : $int<14>
    // arrayidx388
    $W[arrayidx388_1540] : $int<32>
    // 		tmp389 := ->(arrayidx388) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 414
    // ->(arrayidx388)
    $intermediate $W[ptr_deref_1543_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1543_root_address] : $int<14>
    $W[ptr_deref_1543_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1543_data_0] : $int<64>
    // tmp389
    $W[tmp389_1544] : $int<64>
    // 		conv393 := ($cast ($uint<8>) tmp389 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 415
    // conv393
    $W[conv393_1548] : $int<8>
    // 		$volatile shr396 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 416
    // shr396
    $W[shr396_1554] : $int<64>
    // 		conv399 := ($cast ($uint<8>) shr396 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 417
    // conv399
    $W[conv399_1558] : $int<8>
    // 		$volatile shr402 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 418
    // shr402
    $W[shr402_1564] : $int<64>
    // 		conv405 := ($cast ($uint<8>) shr402 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 419
    // conv405
    $W[conv405_1568] : $int<8>
    // 		$volatile shr408 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 420
    // shr408
    $W[shr408_1574] : $int<64>
    // 		conv411 := ($cast ($uint<8>) shr408 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 421
    // conv411
    $W[conv411_1578] : $int<8>
    // 		$volatile shr414 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 422
    // shr414
    $W[shr414_1584] : $int<64>
    // 		conv417 := ($cast ($uint<8>) shr414 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 423
    // conv417
    $W[conv417_1588] : $int<8>
    // 		$volatile shr420 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 424
    // shr420
    $W[shr420_1594] : $int<64>
    // 		conv423 := ($cast ($uint<8>) shr420 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 425
    // conv423
    $W[conv423_1598] : $int<8>
    // 		$volatile shr426 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // shr426
    $W[shr426_1604] : $int<64>
    // 		conv429 := ($cast ($uint<8>) shr426 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 427
    // conv429
    $W[conv429_1608] : $int<8>
    // 		$volatile shr432 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 428
    // shr432
    $W[shr432_1614] : $int<64>
    // 		conv435 := ($cast ($uint<8>) shr432 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 429
    // conv435
    $W[conv435_1618] : $int<8>
    // 		Concat_output_pipe := conv435 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 430
    // Concat_output_pipe
    // 		Concat_output_pipe := conv429 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 431
    // Concat_output_pipe
    // 		Concat_output_pipe := conv423 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 432
    // Concat_output_pipe
    // 		Concat_output_pipe := conv417 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 433
    // Concat_output_pipe
    // 		Concat_output_pipe := conv411 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 434
    // Concat_output_pipe
    // 		Concat_output_pipe := conv405 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 435
    // Concat_output_pipe
    // 		Concat_output_pipe := conv399 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 436
    // Concat_output_pipe
    // 		Concat_output_pipe := conv393 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 437
    // Concat_output_pipe
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 438
    // indvarx_xnext
    $W[indvarx_xnext_1648] : $int<64>
    // 		$volatile exitcond1 := (indvarx_xnext == tmp475) $buffering 1
    //  file prog.linked.opt.aa, line 439
    // exitcond1
    $W[exitcond1_1653] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 440
    // datapath-instances for block %concat%body
    //  file prog.linked.opt.aa, line 29
    // 		call := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 31
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_25_inst] (Concat_input_pipe) (call_26) 
    $buffering $out RPIPE_Concat_input_pipe_25_inst call_26 1
    // 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 32
    // ($cast ($uint<32>) call )
    # := [type_cast_30_inst] (call_26) (conv1_31)    
    $buffering  $out type_cast_30_inst conv1_31 1
    $delay type_cast_30_inst 1
    // 		$volatile shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 33
    // (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_36_inst] (conv1_31 type_cast_35_wire_constant) (shl_37)   $flowthrough 
    $delay SHL_u32_u32_36_inst 0
    // 		call2 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 34
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_39_inst] (Concat_input_pipe) (call2_40) 
    $buffering $out RPIPE_Concat_input_pipe_39_inst call2_40 1
    // 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 35
    // ($cast ($uint<32>) call2 )
    # := [type_cast_43_inst] (call2_40) (conv3_44)    
    $buffering  $out type_cast_43_inst conv3_44 1
    $delay type_cast_43_inst 1
    // 		$volatile add := (shl | conv3) $buffering 1
    //  file prog.linked.opt.aa, line 36
    // (shl | conv3)
    |[OR_u32_u32_48_inst] (shl_37 conv3_44) (add_49)   $flowthrough 
    $delay OR_u32_u32_48_inst 0
    // 		call5 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 37
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_51_inst] (Concat_input_pipe) (call5_52) 
    $buffering $out RPIPE_Concat_input_pipe_51_inst call5_52 1
    // 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 38
    // ($cast ($uint<32>) call5 )
    # := [type_cast_55_inst] (call5_52) (conv8_56)    
    $buffering  $out type_cast_55_inst conv8_56 1
    $delay type_cast_55_inst 1
    // 		$volatile shl9 := (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 39
    // (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_61_inst] (conv8_56 type_cast_60_wire_constant) (shl9_62)   $flowthrough 
    $delay SHL_u32_u32_61_inst 0
    // 		call10 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 40
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_64_inst] (Concat_input_pipe) (call10_65) 
    $buffering $out RPIPE_Concat_input_pipe_64_inst call10_65 1
    // 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 41
    // ($cast ($uint<32>) call10 )
    # := [type_cast_68_inst] (call10_65) (conv11_69)    
    $buffering  $out type_cast_68_inst conv11_69 1
    $delay type_cast_68_inst 1
    // 		$volatile add12 := (shl9 | conv11) $buffering 1
    //  file prog.linked.opt.aa, line 42
    // (shl9 | conv11)
    |[OR_u32_u32_73_inst] (shl9_62 conv11_69) (add12_74)   $flowthrough 
    $delay OR_u32_u32_73_inst 0
    // 		call14 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 43
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_76_inst] (Concat_input_pipe) (call14_77) 
    $buffering $out RPIPE_Concat_input_pipe_76_inst call14_77 1
    // 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 44
    // ($cast ($uint<32>) call14 )
    # := [type_cast_80_inst] (call14_77) (conv17_81)    
    $buffering  $out type_cast_80_inst conv17_81 1
    $delay type_cast_80_inst 1
    // 		$volatile shl18 := (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 45
    // (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_86_inst] (conv17_81 type_cast_85_wire_constant) (shl18_87)   $flowthrough 
    $delay SHL_u32_u32_86_inst 0
    // 		call19 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 46
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_89_inst] (Concat_input_pipe) (call19_90) 
    $buffering $out RPIPE_Concat_input_pipe_89_inst call19_90 1
    // 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 47
    // ($cast ($uint<32>) call19 )
    # := [type_cast_93_inst] (call19_90) (conv20_94)    
    $buffering  $out type_cast_93_inst conv20_94 1
    $delay type_cast_93_inst 1
    // 		$volatile add21 := (shl18 | conv20) $buffering 1
    //  file prog.linked.opt.aa, line 48
    // (shl18 | conv20)
    |[OR_u32_u32_98_inst] (shl18_87 conv20_94) (add21_99)   $flowthrough 
    $delay OR_u32_u32_98_inst 0
    // 		call23 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 49
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_101_inst] (Concat_input_pipe) (call23_102) 
    $buffering $out RPIPE_Concat_input_pipe_101_inst call23_102 1
    // 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 50
    // ($cast ($uint<32>) call23 )
    # := [type_cast_105_inst] (call23_102) (conv26_106)    
    $buffering  $out type_cast_105_inst conv26_106 1
    $delay type_cast_105_inst 1
    // 		$volatile shl27 := (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 51
    // (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_111_inst] (conv26_106 type_cast_110_wire_constant) (shl27_112)   $flowthrough 
    $delay SHL_u32_u32_111_inst 0
    // 		call28 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 52
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_114_inst] (Concat_input_pipe) (call28_115) 
    $buffering $out RPIPE_Concat_input_pipe_114_inst call28_115 1
    // 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 53
    // ($cast ($uint<32>) call28 )
    # := [type_cast_118_inst] (call28_115) (conv29_119)    
    $buffering  $out type_cast_118_inst conv29_119 1
    $delay type_cast_118_inst 1
    // 		$volatile add30 := (shl27 | conv29) $buffering 1
    //  file prog.linked.opt.aa, line 54
    // (shl27 | conv29)
    |[OR_u32_u32_123_inst] (shl27_112 conv29_119) (add30_124)   $flowthrough 
    $delay OR_u32_u32_123_inst 0
    // 		call32 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 55
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_126_inst] (Concat_input_pipe) (call32_127) 
    $buffering $out RPIPE_Concat_input_pipe_126_inst call32_127 1
    // 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 56
    // ($cast ($uint<32>) call32 )
    # := [type_cast_130_inst] (call32_127) (conv35_131)    
    $buffering  $out type_cast_130_inst conv35_131 1
    $delay type_cast_130_inst 1
    // 		$volatile shl36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 57
    // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_136_inst] (conv35_131 type_cast_135_wire_constant) (shl36_137)   $flowthrough 
    $delay SHL_u32_u32_136_inst 0
    // 		call37 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 58
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_139_inst] (Concat_input_pipe) (call37_140) 
    $buffering $out RPIPE_Concat_input_pipe_139_inst call37_140 1
    // 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 59
    // ($cast ($uint<32>) call37 )
    # := [type_cast_143_inst] (call37_140) (conv38_144)    
    $buffering  $out type_cast_143_inst conv38_144 1
    $delay type_cast_143_inst 1
    // 		$volatile add39 := (shl36 | conv38) $buffering 1
    //  file prog.linked.opt.aa, line 60
    // (shl36 | conv38)
    |[OR_u32_u32_148_inst] (shl36_137 conv38_144) (add39_149)   $flowthrough 
    $delay OR_u32_u32_148_inst 0
    // 		call41 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 61
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_151_inst] (Concat_input_pipe) (call41_152) 
    $buffering $out RPIPE_Concat_input_pipe_151_inst call41_152 1
    // 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 62
    // ($cast ($uint<32>) call41 )
    # := [type_cast_155_inst] (call41_152) (conv44_156)    
    $buffering  $out type_cast_155_inst conv44_156 1
    $delay type_cast_155_inst 1
    // 		$volatile shl45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 63
    // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_161_inst] (conv44_156 type_cast_160_wire_constant) (shl45_162)   $flowthrough 
    $delay SHL_u32_u32_161_inst 0
    // 		call46 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 64
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_164_inst] (Concat_input_pipe) (call46_165) 
    $buffering $out RPIPE_Concat_input_pipe_164_inst call46_165 1
    // 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 65
    // ($cast ($uint<32>) call46 )
    # := [type_cast_168_inst] (call46_165) (conv47_169)    
    $buffering  $out type_cast_168_inst conv47_169 1
    $delay type_cast_168_inst 1
    // 		$volatile add48 := (shl45 | conv47) $buffering 1
    //  file prog.linked.opt.aa, line 66
    // (shl45 | conv47)
    |[OR_u32_u32_173_inst] (shl45_162 conv47_169) (add48_174)   $flowthrough 
    $delay OR_u32_u32_173_inst 0
    // 		call50 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 67
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_176_inst] (Concat_input_pipe) (call50_177) 
    $buffering $out RPIPE_Concat_input_pipe_176_inst call50_177 1
    // 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 68
    // ($cast ($uint<32>) call50 )
    # := [type_cast_180_inst] (call50_177) (conv53_181)    
    $buffering  $out type_cast_180_inst conv53_181 1
    $delay type_cast_180_inst 1
    // 		$volatile shl54 := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 69
    // (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_186_inst] (conv53_181 type_cast_185_wire_constant) (shl54_187)   $flowthrough 
    $delay SHL_u32_u32_186_inst 0
    // 		call55 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 70
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_189_inst] (Concat_input_pipe) (call55_190) 
    $buffering $out RPIPE_Concat_input_pipe_189_inst call55_190 1
    // 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 71
    // ($cast ($uint<32>) call55 )
    # := [type_cast_193_inst] (call55_190) (conv56_194)    
    $buffering  $out type_cast_193_inst conv56_194 1
    $delay type_cast_193_inst 1
    // 		$volatile add57 := (shl54 | conv56) $buffering 1
    //  file prog.linked.opt.aa, line 72
    // (shl54 | conv56)
    |[OR_u32_u32_198_inst] (shl54_187 conv56_194) (add57_199)   $flowthrough 
    $delay OR_u32_u32_198_inst 0
    // 		call59 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 73
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_201_inst] (Concat_input_pipe) (call59_202) 
    $buffering $out RPIPE_Concat_input_pipe_201_inst call59_202 1
    // 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 74
    // ($cast ($uint<32>) call59 )
    # := [type_cast_205_inst] (call59_202) (conv62_206)    
    $buffering  $out type_cast_205_inst conv62_206 1
    $delay type_cast_205_inst 1
    // 		$volatile shl63 := (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 75
    // (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_211_inst] (conv62_206 type_cast_210_wire_constant) (shl63_212)   $flowthrough 
    $delay SHL_u32_u32_211_inst 0
    // 		call64 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 76
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_214_inst] (Concat_input_pipe) (call64_215) 
    $buffering $out RPIPE_Concat_input_pipe_214_inst call64_215 1
    // 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 77
    // ($cast ($uint<32>) call64 )
    # := [type_cast_218_inst] (call64_215) (conv65_219)    
    $buffering  $out type_cast_218_inst conv65_219 1
    $delay type_cast_218_inst 1
    // 		$volatile add66 := (shl63 | conv65) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // (shl63 | conv65)
    |[OR_u32_u32_223_inst] (shl63_212 conv65_219) (add66_224)   $flowthrough 
    $delay OR_u32_u32_223_inst 0
    // 		call68 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_226_inst] (Concat_input_pipe) (call68_227) 
    $buffering $out RPIPE_Concat_input_pipe_226_inst call68_227 1
    // 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 80
    // ($cast ($uint<32>) call68 )
    # := [type_cast_230_inst] (call68_227) (conv71_231)    
    $buffering  $out type_cast_230_inst conv71_231 1
    $delay type_cast_230_inst 1
    // 		$volatile shl72 := (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 81
    // (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
    <<[SHL_u32_u32_236_inst] (conv71_231 type_cast_235_wire_constant) (shl72_237)   $flowthrough 
    $delay SHL_u32_u32_236_inst 0
    // 		call73 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 82
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_239_inst] (Concat_input_pipe) (call73_240) 
    $buffering $out RPIPE_Concat_input_pipe_239_inst call73_240 1
    // 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 83
    // ($cast ($uint<32>) call73 )
    # := [type_cast_243_inst] (call73_240) (conv74_244)    
    $buffering  $out type_cast_243_inst conv74_244 1
    $delay type_cast_243_inst 1
    // 		$volatile add75 := (shl72 | conv74) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // (shl72 | conv74)
    |[OR_u32_u32_248_inst] (shl72_237 conv74_244) (add75_249)   $flowthrough 
    $delay OR_u32_u32_248_inst 0
    // 		$volatile mul := (add12 * add) $buffering 1
    //  file prog.linked.opt.aa, line 85
    // (add12 * add)
    *[MUL_u32_u32_253_inst] (add12_74 add_49) (mul_254)   $flowthrough 
    $delay MUL_u32_u32_253_inst 0
    // 		$volatile mul85 := (mul * add21) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // (mul * add21)
    *[MUL_u32_u32_258_inst] (mul_254 add21_99) (mul85_259)   $flowthrough 
    $delay MUL_u32_u32_258_inst 0
    // 		$volatile mul91 := (add39 * add30) $buffering 1
    //  file prog.linked.opt.aa, line 87
    // (add39 * add30)
    *[MUL_u32_u32_263_inst] (add39_149 add30_124) (mul91_264)   $flowthrough 
    $delay MUL_u32_u32_263_inst 0
    // 		$volatile mul94 := (mul91 * add48) $buffering 1
    //  file prog.linked.opt.aa, line 88
    // (mul91 * add48)
    *[MUL_u32_u32_268_inst] (mul91_264 add48_174) (mul94_269)   $flowthrough 
    $delay MUL_u32_u32_268_inst 0
    // 		$volatile mul100 := (add66 * add57) $buffering 1
    //  file prog.linked.opt.aa, line 89
    // (add66 * add57)
    *[MUL_u32_u32_273_inst] (add66_224 add57_199) (mul100_274)   $flowthrough 
    $delay MUL_u32_u32_273_inst 0
    // 		$volatile mul103 := (mul100 * add75) $buffering 1
    //  file prog.linked.opt.aa, line 90
    // (mul100 * add75)
    *[MUL_u32_u32_278_inst] (mul100_274 add75_249) (mul103_279)   $flowthrough 
    $delay MUL_u32_u32_278_inst 0
    // 		$volatile mul109 := (add21 * add12) $buffering 1
    //  file prog.linked.opt.aa, line 91
    // (add21 * add12)
    *[MUL_u32_u32_283_inst] (add21_99 add12_74) (mul109_284)   $flowthrough 
    $delay MUL_u32_u32_283_inst 0
    // 		$volatile shr457 := (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 92
    // (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    >>[LSHR_u32_u32_289_inst] (mul109_284 type_cast_288_wire_constant) (shr457_290)   $flowthrough 
    $delay LSHR_u32_u32_289_inst 0
    // 		$volatile mul116 := (add48 * add39) $buffering 1
    //  file prog.linked.opt.aa, line 93
    // (add48 * add39)
    *[MUL_u32_u32_294_inst] (add48_174 add39_149) (mul116_295)   $flowthrough 
    $delay MUL_u32_u32_294_inst 0
    // 		$volatile shr117458 := (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 94
    // (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    >>[LSHR_u32_u32_300_inst] (mul116_295 type_cast_299_wire_constant) (shr117458_301)   $flowthrough 
    $delay LSHR_u32_u32_300_inst 0
    // 		$volatile cmp467 := (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 95
    // (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >[UGT_u32_u1_306_inst] (mul85_259 type_cast_305_wire_constant) (cmp467_307)   $flowthrough 
    $delay UGT_u32_u1_306_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 96
    ==0? [if_stmt_308_branch] (cmp467_307)
    // 		$volatile cmp175463 := (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 106
    // (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >[UGT_u32_u1_321_inst] (mul94_269 type_cast_320_wire_constant) (cmp175463_322)   $flowthrough 
    $delay UGT_u32_u1_321_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 107
    ==0? [if_stmt_323_branch] (cmp175463_322)
    // 		$volatile tmp492 := (add * add12) $buffering 1
    //  file prog.linked.opt.aa, line 114
    // (add * add12)
    *[MUL_u32_u32_333_inst] (add_49 add12_74) (tmp492_334)   $flowthrough 
    $delay MUL_u32_u32_333_inst 0
    // 		$volatile tmp494 := (tmp492 * add21) $buffering 1
    //  file prog.linked.opt.aa, line 115
    // (tmp492 * add21)
    *[MUL_u32_u32_338_inst] (tmp492_334 add21_99) (tmp494_339)   $flowthrough 
    $delay MUL_u32_u32_338_inst 0
    // 		$volatile tmp495 := (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 116
    // (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    >>[LSHR_u32_u32_344_inst] (tmp494_339 type_cast_343_wire_constant) (tmp495_345)   $flowthrough 
    $delay LSHR_u32_u32_344_inst 0
    // 		$volatile tmp496 := (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 117
    // (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >[UGT_u32_u1_350_inst] (tmp495_345 type_cast_349_wire_constant) (tmp496_351)   $flowthrough 
    $delay UGT_u32_u1_350_inst 0
    // 		$volatile tmp495x_xop := (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 118
    // (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_356_inst] (tmp495_345 type_cast_355_wire_constant) (tmp495x_xop_357)   $flowthrough 
    $delay ADD_u32_u32_356_inst 0
    // 		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 119
    // ($cast ($uint<64>) tmp495x_xop )
    # := [type_cast_360_inst] (tmp495x_xop_357) (iNsTr_19_361)    
    $buffering  $out type_cast_360_inst iNsTr_19_361 1
    $delay type_cast_360_inst 1
    // 		$volatile xx_xop503 := (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 120
    // (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_366_inst] (iNsTr_19_361 type_cast_365_wire_constant) (xx_xop503_367)   $flowthrough 
    $delay ADD_u64_u64_366_inst 0
    // 		$volatile tmp500 := ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 121
    // ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_373_inst] (tmp496_351 xx_xop503_367 type_cast_372_wire_constant) (tmp500_374)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 123
    // 			$phi indvar489 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph469_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext490 ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 124
    // ($cast ($uint<64>) indvarx_xnext490 )
    # := [type_cast_383_inst] (indvarx_xnext490_534) (type_cast_383_wire)    
    $buffering  $out type_cast_383_inst type_cast_383_wire 1
    $delay type_cast_383_inst 1
    $phi [phi_stmt_377] (type_cast_381_wire_constant type_cast_383_wire) ( indvar489_377 ) 
    // 		arrayidx := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 127
    &/ [array_obj_ref_389_index_1_resize] (indvar489_377) (R_indvar489_388_resized) 
    $flowthrough 
    &/ [array_obj_ref_389_index_1_rename] (R_indvar489_388_resized) (R_indvar489_388_scaled) 
    $flowthrough 
    +[array_obj_ref_389_index_offset] (R_indvar489_388_scaled array_obj_ref_389_constant_part_of_offset) (array_obj_ref_389_final_offset)   
    $delay array_obj_ref_389_index_offset 2
    &/ [array_obj_ref_389_root_address_inst] (array_obj_ref_389_final_offset) (array_obj_ref_389_root_address) 
    $flowthrough 
    # := [addr_of_390_final_reg] (array_obj_ref_389_root_address) (arrayidx_391)    
    $buffering  $out addr_of_390_final_reg arrayidx_391 1
    // 		call124 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 128
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_393_inst] (Concat_input_pipe) (call124_394) 
    $buffering $out RPIPE_Concat_input_pipe_393_inst call124_394 1
    // 		conv125 := ($cast ($uint<64>) call124 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 129
    // ($cast ($uint<64>) call124 )
    # := [type_cast_397_inst] (call124_394) (conv125_398)    
    $buffering  $out type_cast_397_inst conv125_398 1
    $delay type_cast_397_inst 1
    // 		$volatile shl127 := (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 130
    // (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_403_inst] (conv125_398 type_cast_402_wire_constant) (shl127_404)   $flowthrough 
    $delay SHL_u64_u64_403_inst 0
    // 		call128 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 131
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_406_inst] (Concat_input_pipe) (call128_407) 
    $buffering $out RPIPE_Concat_input_pipe_406_inst call128_407 1
    // 		conv130 := ($cast ($uint<64>) call128 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 132
    // ($cast ($uint<64>) call128 )
    # := [type_cast_410_inst] (call128_407) (conv130_411)    
    $buffering  $out type_cast_410_inst conv130_411 1
    $delay type_cast_410_inst 1
    // 		$volatile add131 := (shl127 | conv130) $buffering 1
    //  file prog.linked.opt.aa, line 133
    // (shl127 | conv130)
    |[OR_u64_u64_415_inst] (shl127_404 conv130_411) (add131_416)   $flowthrough 
    $delay OR_u64_u64_415_inst 0
    // 		$volatile shl133 := (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 134
    // (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_421_inst] (add131_416 type_cast_420_wire_constant) (shl133_422)   $flowthrough 
    $delay SHL_u64_u64_421_inst 0
    // 		call134 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 135
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_424_inst] (Concat_input_pipe) (call134_425) 
    $buffering $out RPIPE_Concat_input_pipe_424_inst call134_425 1
    // 		conv136 := ($cast ($uint<64>) call134 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 136
    // ($cast ($uint<64>) call134 )
    # := [type_cast_428_inst] (call134_425) (conv136_429)    
    $buffering  $out type_cast_428_inst conv136_429 1
    $delay type_cast_428_inst 1
    // 		$volatile add137 := (shl133 | conv136) $buffering 1
    //  file prog.linked.opt.aa, line 137
    // (shl133 | conv136)
    |[OR_u64_u64_433_inst] (shl133_422 conv136_429) (add137_434)   $flowthrough 
    $delay OR_u64_u64_433_inst 0
    // 		$volatile shl139 := (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 138
    // (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_439_inst] (add137_434 type_cast_438_wire_constant) (shl139_440)   $flowthrough 
    $delay SHL_u64_u64_439_inst 0
    // 		call140 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 139
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_442_inst] (Concat_input_pipe) (call140_443) 
    $buffering $out RPIPE_Concat_input_pipe_442_inst call140_443 1
    // 		conv142 := ($cast ($uint<64>) call140 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 140
    // ($cast ($uint<64>) call140 )
    # := [type_cast_446_inst] (call140_443) (conv142_447)    
    $buffering  $out type_cast_446_inst conv142_447 1
    $delay type_cast_446_inst 1
    // 		$volatile add143 := (shl139 | conv142) $buffering 1
    //  file prog.linked.opt.aa, line 141
    // (shl139 | conv142)
    |[OR_u64_u64_451_inst] (shl139_440 conv142_447) (add143_452)   $flowthrough 
    $delay OR_u64_u64_451_inst 0
    // 		$volatile shl145 := (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 142
    // (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_457_inst] (add143_452 type_cast_456_wire_constant) (shl145_458)   $flowthrough 
    $delay SHL_u64_u64_457_inst 0
    // 		call146 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 143
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_460_inst] (Concat_input_pipe) (call146_461) 
    $buffering $out RPIPE_Concat_input_pipe_460_inst call146_461 1
    // 		conv148 := ($cast ($uint<64>) call146 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) call146 )
    # := [type_cast_464_inst] (call146_461) (conv148_465)    
    $buffering  $out type_cast_464_inst conv148_465 1
    $delay type_cast_464_inst 1
    // 		$volatile add149 := (shl145 | conv148) $buffering 1
    //  file prog.linked.opt.aa, line 145
    // (shl145 | conv148)
    |[OR_u64_u64_469_inst] (shl145_458 conv148_465) (add149_470)   $flowthrough 
    $delay OR_u64_u64_469_inst 0
    // 		$volatile shl151 := (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 146
    // (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_475_inst] (add149_470 type_cast_474_wire_constant) (shl151_476)   $flowthrough 
    $delay SHL_u64_u64_475_inst 0
    // 		call152 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 147
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_478_inst] (Concat_input_pipe) (call152_479) 
    $buffering $out RPIPE_Concat_input_pipe_478_inst call152_479 1
    // 		conv154 := ($cast ($uint<64>) call152 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 148
    // ($cast ($uint<64>) call152 )
    # := [type_cast_482_inst] (call152_479) (conv154_483)    
    $buffering  $out type_cast_482_inst conv154_483 1
    $delay type_cast_482_inst 1
    // 		$volatile add155 := (shl151 | conv154) $buffering 1
    //  file prog.linked.opt.aa, line 149
    // (shl151 | conv154)
    |[OR_u64_u64_487_inst] (shl151_476 conv154_483) (add155_488)   $flowthrough 
    $delay OR_u64_u64_487_inst 0
    // 		$volatile shl157 := (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 150
    // (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_493_inst] (add155_488 type_cast_492_wire_constant) (shl157_494)   $flowthrough 
    $delay SHL_u64_u64_493_inst 0
    // 		call158 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 151
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_496_inst] (Concat_input_pipe) (call158_497) 
    $buffering $out RPIPE_Concat_input_pipe_496_inst call158_497 1
    // 		conv160 := ($cast ($uint<64>) call158 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 152
    // ($cast ($uint<64>) call158 )
    # := [type_cast_500_inst] (call158_497) (conv160_501)    
    $buffering  $out type_cast_500_inst conv160_501 1
    $delay type_cast_500_inst 1
    // 		$volatile add161 := (shl157 | conv160) $buffering 1
    //  file prog.linked.opt.aa, line 153
    // (shl157 | conv160)
    |[OR_u64_u64_505_inst] (shl157_494 conv160_501) (add161_506)   $flowthrough 
    $delay OR_u64_u64_505_inst 0
    // 		$volatile shl163 := (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 154
    // (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_511_inst] (add161_506 type_cast_510_wire_constant) (shl163_512)   $flowthrough 
    $delay SHL_u64_u64_511_inst 0
    // 		call164 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 155
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_514_inst] (Concat_input_pipe) (call164_515) 
    $buffering $out RPIPE_Concat_input_pipe_514_inst call164_515 1
    // 		conv166 := ($cast ($uint<64>) call164 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 156
    // ($cast ($uint<64>) call164 )
    # := [type_cast_518_inst] (call164_515) (conv166_519)    
    $buffering  $out type_cast_518_inst conv166_519 1
    $delay type_cast_518_inst 1
    // 		$volatile add167 := (shl163 | conv166) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // (shl163 | conv166)
    |[OR_u64_u64_523_inst] (shl163_512 conv166_519) (add167_524)   $flowthrough 
    $delay OR_u64_u64_523_inst 0
    // 		->(arrayidx) := add167 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 158
    // ->(arrayidx)
    &/ [ptr_deref_526_base_resize] (arrayidx_391) (ptr_deref_526_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_526_root_address_inst] (ptr_deref_526_resized_base_address) (ptr_deref_526_root_address) 
    $flowthrough 
    &/ [ptr_deref_526_addr_0] (ptr_deref_526_root_address) (ptr_deref_526_word_address_0) 
    $flowthrough 
    $store [ptr_deref_526_store_0] $to memory_space_0 (ptr_deref_526_word_address_0 ptr_deref_526_data_0) 
    $delay ptr_deref_526_store_0 6
    &/ [ptr_deref_526_gather_scatter] (add167_524) (ptr_deref_526_data_0) 
    $flowthrough 
    // 		$volatile indvarx_xnext490 := (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 159
    // (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_533_inst] (indvar489_377 type_cast_532_wire_constant) (indvarx_xnext490_534)   $flowthrough 
    $delay ADD_u64_u64_533_inst 0
    // 		$volatile exitcond2 := (indvarx_xnext490 == tmp500) $buffering 1
    //  file prog.linked.opt.aa, line 160
    // (indvarx_xnext490 == tmp500)
    ==[EQ_u64_u1_538_inst] (indvarx_xnext490_534 tmp500_374) (exitcond2_539)   $flowthrough 
    $delay EQ_u64_u1_538_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 161
    ==0? [if_stmt_540_branch] (exitcond2_539)
    // 		$volatile tmp479 := (add30 * add39) $buffering 1
    //  file prog.linked.opt.aa, line 168
    // (add30 * add39)
    *[MUL_u32_u32_550_inst] (add30_124 add39_149) (tmp479_551)   $flowthrough 
    $delay MUL_u32_u32_550_inst 0
    // 		$volatile tmp481 := (tmp479 * add48) $buffering 1
    //  file prog.linked.opt.aa, line 169
    // (tmp479 * add48)
    *[MUL_u32_u32_555_inst] (tmp479_551 add48_174) (tmp481_556)   $flowthrough 
    $delay MUL_u32_u32_555_inst 0
    // 		$volatile tmp482 := (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 170
    // (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    >>[LSHR_u32_u32_561_inst] (tmp481_556 type_cast_560_wire_constant) (tmp482_562)   $flowthrough 
    $delay LSHR_u32_u32_561_inst 0
    // 		$volatile tmp483 := (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 171
    // (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >[UGT_u32_u1_567_inst] (tmp482_562 type_cast_566_wire_constant) (tmp483_568)   $flowthrough 
    $delay UGT_u32_u1_567_inst 0
    // 		$volatile tmp482x_xop := (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 172
    // (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_573_inst] (tmp482_562 type_cast_572_wire_constant) (tmp482x_xop_574)   $flowthrough 
    $delay ADD_u32_u32_573_inst 0
    // 		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 173
    // ($cast ($uint<64>) tmp482x_xop )
    # := [type_cast_577_inst] (tmp482x_xop_574) (iNsTr_32_578)    
    $buffering  $out type_cast_577_inst iNsTr_32_578 1
    $delay type_cast_577_inst 1
    // 		$volatile xx_xop502 := (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 174
    // (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_583_inst] (iNsTr_32_578 type_cast_582_wire_constant) (xx_xop502_584)   $flowthrough 
    $delay ADD_u64_u64_583_inst 0
    // 		$volatile tmp487 := ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 175
    // ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_590_inst] (tmp483_568 xx_xop502_584 type_cast_589_wire_constant) (tmp487_591)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 177
    // 			$phi indvar476 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph465_forx_xbody177 			  ($cast ($uint<64>) indvarx_xnext477 ) $on   forx_xbody177_forx_xbody177 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 178
    // ($cast ($uint<64>) indvarx_xnext477 )
    # := [type_cast_600_inst] (indvarx_xnext477_751) (type_cast_600_wire)    
    $buffering  $out type_cast_600_inst type_cast_600_wire 1
    $delay type_cast_600_inst 1
    $phi [phi_stmt_594] (type_cast_598_wire_constant type_cast_600_wire) ( indvar476_594 ) 
    // 		arrayidx227 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 181
    &/ [array_obj_ref_606_index_1_resize] (indvar476_594) (R_indvar476_605_resized) 
    $flowthrough 
    &/ [array_obj_ref_606_index_1_rename] (R_indvar476_605_resized) (R_indvar476_605_scaled) 
    $flowthrough 
    +[array_obj_ref_606_index_offset] (R_indvar476_605_scaled array_obj_ref_606_constant_part_of_offset) (array_obj_ref_606_final_offset)   
    $delay array_obj_ref_606_index_offset 2
    &/ [array_obj_ref_606_root_address_inst] (array_obj_ref_606_final_offset) (array_obj_ref_606_root_address) 
    $flowthrough 
    # := [addr_of_607_final_reg] (array_obj_ref_606_root_address) (arrayidx227_608)    
    $buffering  $out addr_of_607_final_reg arrayidx227_608 1
    // 		call180 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 182
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_610_inst] (Concat_input_pipe) (call180_611) 
    $buffering $out RPIPE_Concat_input_pipe_610_inst call180_611 1
    // 		conv181 := ($cast ($uint<64>) call180 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 183
    // ($cast ($uint<64>) call180 )
    # := [type_cast_614_inst] (call180_611) (conv181_615)    
    $buffering  $out type_cast_614_inst conv181_615 1
    $delay type_cast_614_inst 1
    // 		$volatile shl183 := (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 184
    // (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_620_inst] (conv181_615 type_cast_619_wire_constant) (shl183_621)   $flowthrough 
    $delay SHL_u64_u64_620_inst 0
    // 		call184 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 185
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_623_inst] (Concat_input_pipe) (call184_624) 
    $buffering $out RPIPE_Concat_input_pipe_623_inst call184_624 1
    // 		conv186 := ($cast ($uint<64>) call184 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 186
    // ($cast ($uint<64>) call184 )
    # := [type_cast_627_inst] (call184_624) (conv186_628)    
    $buffering  $out type_cast_627_inst conv186_628 1
    $delay type_cast_627_inst 1
    // 		$volatile add187 := (shl183 | conv186) $buffering 1
    //  file prog.linked.opt.aa, line 187
    // (shl183 | conv186)
    |[OR_u64_u64_632_inst] (shl183_621 conv186_628) (add187_633)   $flowthrough 
    $delay OR_u64_u64_632_inst 0
    // 		$volatile shl189 := (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 188
    // (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_638_inst] (add187_633 type_cast_637_wire_constant) (shl189_639)   $flowthrough 
    $delay SHL_u64_u64_638_inst 0
    // 		call190 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 189
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_641_inst] (Concat_input_pipe) (call190_642) 
    $buffering $out RPIPE_Concat_input_pipe_641_inst call190_642 1
    // 		conv192 := ($cast ($uint<64>) call190 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 190
    // ($cast ($uint<64>) call190 )
    # := [type_cast_645_inst] (call190_642) (conv192_646)    
    $buffering  $out type_cast_645_inst conv192_646 1
    $delay type_cast_645_inst 1
    // 		$volatile add193 := (shl189 | conv192) $buffering 1
    //  file prog.linked.opt.aa, line 191
    // (shl189 | conv192)
    |[OR_u64_u64_650_inst] (shl189_639 conv192_646) (add193_651)   $flowthrough 
    $delay OR_u64_u64_650_inst 0
    // 		$volatile shl195 := (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 192
    // (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_656_inst] (add193_651 type_cast_655_wire_constant) (shl195_657)   $flowthrough 
    $delay SHL_u64_u64_656_inst 0
    // 		call196 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 193
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_659_inst] (Concat_input_pipe) (call196_660) 
    $buffering $out RPIPE_Concat_input_pipe_659_inst call196_660 1
    // 		conv198 := ($cast ($uint<64>) call196 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 194
    // ($cast ($uint<64>) call196 )
    # := [type_cast_663_inst] (call196_660) (conv198_664)    
    $buffering  $out type_cast_663_inst conv198_664 1
    $delay type_cast_663_inst 1
    // 		$volatile add199 := (shl195 | conv198) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // (shl195 | conv198)
    |[OR_u64_u64_668_inst] (shl195_657 conv198_664) (add199_669)   $flowthrough 
    $delay OR_u64_u64_668_inst 0
    // 		$volatile shl201 := (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 196
    // (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_674_inst] (add199_669 type_cast_673_wire_constant) (shl201_675)   $flowthrough 
    $delay SHL_u64_u64_674_inst 0
    // 		call202 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 197
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_677_inst] (Concat_input_pipe) (call202_678) 
    $buffering $out RPIPE_Concat_input_pipe_677_inst call202_678 1
    // 		conv204 := ($cast ($uint<64>) call202 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 198
    // ($cast ($uint<64>) call202 )
    # := [type_cast_681_inst] (call202_678) (conv204_682)    
    $buffering  $out type_cast_681_inst conv204_682 1
    $delay type_cast_681_inst 1
    // 		$volatile add205 := (shl201 | conv204) $buffering 1
    //  file prog.linked.opt.aa, line 199
    // (shl201 | conv204)
    |[OR_u64_u64_686_inst] (shl201_675 conv204_682) (add205_687)   $flowthrough 
    $delay OR_u64_u64_686_inst 0
    // 		$volatile shl207 := (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 200
    // (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_692_inst] (add205_687 type_cast_691_wire_constant) (shl207_693)   $flowthrough 
    $delay SHL_u64_u64_692_inst 0
    // 		call208 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 201
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_695_inst] (Concat_input_pipe) (call208_696) 
    $buffering $out RPIPE_Concat_input_pipe_695_inst call208_696 1
    // 		conv210 := ($cast ($uint<64>) call208 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 202
    // ($cast ($uint<64>) call208 )
    # := [type_cast_699_inst] (call208_696) (conv210_700)    
    $buffering  $out type_cast_699_inst conv210_700 1
    $delay type_cast_699_inst 1
    // 		$volatile add211 := (shl207 | conv210) $buffering 1
    //  file prog.linked.opt.aa, line 203
    // (shl207 | conv210)
    |[OR_u64_u64_704_inst] (shl207_693 conv210_700) (add211_705)   $flowthrough 
    $delay OR_u64_u64_704_inst 0
    // 		$volatile shl213 := (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 204
    // (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_710_inst] (add211_705 type_cast_709_wire_constant) (shl213_711)   $flowthrough 
    $delay SHL_u64_u64_710_inst 0
    // 		call214 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 205
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_713_inst] (Concat_input_pipe) (call214_714) 
    $buffering $out RPIPE_Concat_input_pipe_713_inst call214_714 1
    // 		conv216 := ($cast ($uint<64>) call214 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 206
    // ($cast ($uint<64>) call214 )
    # := [type_cast_717_inst] (call214_714) (conv216_718)    
    $buffering  $out type_cast_717_inst conv216_718 1
    $delay type_cast_717_inst 1
    // 		$volatile add217 := (shl213 | conv216) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // (shl213 | conv216)
    |[OR_u64_u64_722_inst] (shl213_711 conv216_718) (add217_723)   $flowthrough 
    $delay OR_u64_u64_722_inst 0
    // 		$volatile shl219 := (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 208
    // (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_728_inst] (add217_723 type_cast_727_wire_constant) (shl219_729)   $flowthrough 
    $delay SHL_u64_u64_728_inst 0
    // 		call220 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 209
    // Concat_input_pipe
    $ioport $in [RPIPE_Concat_input_pipe_731_inst] (Concat_input_pipe) (call220_732) 
    $buffering $out RPIPE_Concat_input_pipe_731_inst call220_732 1
    // 		conv222 := ($cast ($uint<64>) call220 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 210
    // ($cast ($uint<64>) call220 )
    # := [type_cast_735_inst] (call220_732) (conv222_736)    
    $buffering  $out type_cast_735_inst conv222_736 1
    $delay type_cast_735_inst 1
    // 		$volatile add223 := (shl219 | conv222) $buffering 1
    //  file prog.linked.opt.aa, line 211
    // (shl219 | conv222)
    |[OR_u64_u64_740_inst] (shl219_729 conv222_736) (add223_741)   $flowthrough 
    $delay OR_u64_u64_740_inst 0
    // 		->(arrayidx227) := add223 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 212
    // ->(arrayidx227)
    &/ [ptr_deref_743_base_resize] (arrayidx227_608) (ptr_deref_743_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_743_root_address_inst] (ptr_deref_743_resized_base_address) (ptr_deref_743_root_address) 
    $flowthrough 
    &/ [ptr_deref_743_addr_0] (ptr_deref_743_root_address) (ptr_deref_743_word_address_0) 
    $flowthrough 
    $store [ptr_deref_743_store_0] $to memory_space_1 (ptr_deref_743_word_address_0 ptr_deref_743_data_0) 
    $delay ptr_deref_743_store_0 6
    &/ [ptr_deref_743_gather_scatter] (add223_741) (ptr_deref_743_data_0) 
    $flowthrough 
    // 		$volatile indvarx_xnext477 := (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 213
    // (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_750_inst] (indvar476_594 type_cast_749_wire_constant) (indvarx_xnext477_751)   $flowthrough 
    $delay ADD_u64_u64_750_inst 0
    // 		$volatile exitcond := (indvarx_xnext477 == tmp487) $buffering 1
    //  file prog.linked.opt.aa, line 214
    // (indvarx_xnext477 == tmp487)
    ==[EQ_u64_u1_755_inst] (indvarx_xnext477_751 tmp487_591) (exitcond_756)   $flowthrough 
    $delay EQ_u64_u1_755_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 215
    ==0? [if_stmt_757_branch] (exitcond_756)
    // 		$call timer () (call233 ) 
    //  file prog.linked.opt.aa, line 226
    $call [call_stmt_768_call] $module timer() (call233_768)  
    $delay call_stmt_768_call 4
    $buffering  $out call_stmt_768_call call233_768 1
    // 		$volatile conv243 := (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 228
    // (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_774_inst] (shr457_290 type_cast_773_wire_constant) (conv243_775)   $flowthrough 
    $delay AND_u32_u32_774_inst 0
    // 		$volatile conv268 := (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 229
    // (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_780_inst] (shr117458_301 type_cast_779_wire_constant) (conv268_781)   $flowthrough 
    $delay AND_u32_u32_780_inst 0
    // 		$volatile shr304 := (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
    //  file prog.linked.opt.aa, line 230
    // (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    >>[LSHR_u32_u32_786_inst] (mul103_279 type_cast_785_wire_constant) (shr304_787)   $flowthrough 
    $delay LSHR_u32_u32_786_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 232
    // 			$phi add_outx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 233
    // constant phi data-path element skipped phi_stmt_790
    // 			$phi add_inp1x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 235
    // constant phi data-path element skipped phi_stmt_796
    // 			$phi add_inp2x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 237
    // constant phi data-path element skipped phi_stmt_801
    // 			$phi count_inp1x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 239
    // constant phi data-path element skipped phi_stmt_806
    // 			$phi count_inp2x_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend231_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 241
    // constant phi data-path element skipped phi_stmt_811
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 244
    // ( ~ cmp305 )
    ~ [NOT_u1_u1_1358_inst] (cmp305_1352) (NOT_u1_u1_1358_wire)   $flowthrough
    $delay NOT_u1_u1_1358_inst 0
    ==0? [do_while_stmt_817_branch] (NOT_u1_u1_1358_wire)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 246
    // 			$phi add_outx_x1 := 			  ($cast ($uint<16>) add_outx_x2504 ) $on   $loopback 			  add_outx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 247
    // ($cast ($uint<16>) add_outx_x2504 )
    # := [type_cast_822_inst] (add_outx_x2504_1291) (type_cast_822_wire)     $fullrate
    $buffering  $out type_cast_822_inst type_cast_822_wire 1
    $delay type_cast_822_inst 1
    # $phi [phi_stmt_819] (type_cast_822_wire add_outx_x1_at_entry_790) ( add_outx_x1_819 ) $fullrate
    // $buffering  $out phi_stmt_819 add_outx_x1_819 2
    // 			$phi add_inp1x_x1 := 			  ($cast ($uint<16>) add_inp1x_x0 ) $on   $loopback 			  add_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 249
    // ($cast ($uint<16>) add_inp1x_x0 )
    # := [type_cast_827_inst] (add_inp1x_x0_980) (type_cast_827_wire)     $fullrate
    $buffering  $out type_cast_827_inst type_cast_827_wire 1
    $delay type_cast_827_inst 1
    # $phi [phi_stmt_824] (type_cast_827_wire add_inp1x_x1_at_entry_796) ( add_inp1x_x1_824 ) $fullrate
    // $buffering  $out phi_stmt_824 add_inp1x_x1_824 2
    // 			$phi add_inp2x_x1 := 			  ($cast ($uint<16>) add_inp2x_x0506 ) $on   $loopback 			  add_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 251
    // ($cast ($uint<16>) add_inp2x_x0506 )
    # := [type_cast_832_inst] (add_inp2x_x0506_1263) (type_cast_832_wire)     $fullrate
    $buffering  $out type_cast_832_inst type_cast_832_wire 1
    $delay type_cast_832_inst 1
    # $phi [phi_stmt_829] (type_cast_832_wire add_inp2x_x1_at_entry_801) ( add_inp2x_x1_829 ) $fullrate
    // $buffering  $out phi_stmt_829 add_inp2x_x1_829 2
    // 			$phi count_inp1x_x1 := 			  ($cast ($uint<16>) count_inp1x_x2 ) $on   $loopback 			  count_inp1x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 253
    // ($cast ($uint<16>) count_inp1x_x2 )
    # := [type_cast_837_inst] (count_inp1x_x2_1317) (type_cast_837_wire)     $fullrate
    $buffering  $out type_cast_837_inst type_cast_837_wire 1
    $delay type_cast_837_inst 1
    # $phi [phi_stmt_834] (type_cast_837_wire count_inp1x_x1_at_entry_806) ( count_inp1x_x1_834 ) $fullrate
    // $buffering  $out phi_stmt_834 count_inp1x_x1_834 2
    // 			$phi count_inp2x_x1 := 			  ($cast ($uint<16>) count_inp2x_x2 ) $on   $loopback 			  count_inp2x_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 255
    // ($cast ($uint<16>) count_inp2x_x2 )
    # := [type_cast_842_inst] (count_inp2x_x2_1343) (type_cast_842_wire)     $fullrate
    $buffering  $out type_cast_842_inst type_cast_842_wire 1
    $delay type_cast_842_inst 1
    # $phi [phi_stmt_839] (type_cast_842_wire count_inp2x_x1_at_entry_811) ( count_inp2x_x1_839 ) $fullrate
    // $buffering  $out phi_stmt_839 count_inp2x_x1_839 2
    // 			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 258
    // ($cast ($uint<32>) count_inp1x_x1 )
    # := [type_cast_847_inst] (count_inp1x_x1_834) (conv241_848)     $fullrate
    $buffering  $out type_cast_847_inst conv241_848 2
    $delay type_cast_847_inst 1
    // 			$volatile cmp244 := (conv241 < conv243) $buffering 1
    //  file prog.linked.opt.aa, line 259
    // (conv241 < conv243)
    <[ULT_u32_u1_852_inst] (conv241_848 conv243_775) (cmp244_853)   $flowthrough 
    $delay ULT_u32_u1_852_inst 0
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp244 $buffering 1
    //  file prog.linked.opt.aa, line 260
    # := [W_whilex_xbody_ifx_xthen_taken_854_inst] (cmp244_853) (whilex_xbody_ifx_xthen_taken_856)    $flowthrough 
    // 			$volatile whilex_xbody_ifx_xend_taken := ( ~ cmp244 ) $buffering 1
    //  file prog.linked.opt.aa, line 261
    // ( ~ cmp244 )
    ~ [NOT_u1_u1_859_inst] (cmp244_853) (whilex_xbody_ifx_xend_taken_860)   $flowthrough
    $delay NOT_u1_u1_859_inst 0
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 262
    # := [W_ifx_xthen_exec_guard_861_inst] (whilex_xbody_ifx_xthen_taken_856) (ifx_xthen_exec_guard_863)    $flowthrough 
    // 			add_inp1x_x1_866_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 263
    # := [W_add_inp1x_x1_866_delayed_1_0_864_inst] (add_inp1x_x1_824) (add_inp1x_x1_866_delayed_1_0_866)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) idxprom247 := ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 264
    // ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 )
    # := [type_cast_870_inst] (add_inp1x_x1_866_delayed_1_0_866) (idxprom247_871)  $guard ( ifx_xthen_exec_guard_863 )    $fullrate
    $buffering  $out type_cast_870_inst idxprom247_871 1
    $delay type_cast_870_inst 1
    // 			arrayidx248 := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 265
    &/ [array_obj_ref_876_index_1_resize] (idxprom247_871) (R_idxprom247_875_resized) 
    $flowthrough 
    &/ [array_obj_ref_876_index_1_rename] (R_idxprom247_875_resized) (R_idxprom247_875_scaled) 
    $flowthrough 
    +[array_obj_ref_876_index_offset] (R_idxprom247_875_scaled array_obj_ref_876_constant_part_of_offset) (array_obj_ref_876_final_offset)    $fullrate
    $buffering  $in array_obj_ref_876_index_offset R_idxprom247_875_scaled 2
    $buffering  $in array_obj_ref_876_index_offset array_obj_ref_876_constant_part_of_offset 2
    $buffering  $out array_obj_ref_876_index_offset array_obj_ref_876_final_offset 2
    $delay array_obj_ref_876_index_offset 2
    &/ [array_obj_ref_876_root_address_inst] (array_obj_ref_876_final_offset) (array_obj_ref_876_root_address) 
    $flowthrough 
    # := [addr_of_877_final_reg] (array_obj_ref_876_root_address) (arrayidx248_878)     $fullrate
    $buffering  $out addr_of_877_final_reg arrayidx248_878 1
    // 			ifx_xthen_exec_guard_876_delayed_7_0 := ifx_xthen_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
    //  file prog.linked.opt.aa, line 266
    # := [W_ifx_xthen_exec_guard_876_delayed_7_0_879_inst] (ifx_xthen_exec_guard_863) (ifx_xthen_exec_guard_876_delayed_7_0_881)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_exec_guard_876_delayed_7_0_879_inst ifx_xthen_exec_guard_876_delayed_7_0_881 7
    // 			$guard (ifx_xthen_exec_guard_876_delayed_7_0) tmp249 := ->(arrayidx248) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 267
    // ->(arrayidx248)
    &/ [ptr_deref_885_base_resize] (arrayidx248_878) (ptr_deref_885_resized_base_address) $guard ( ifx_xthen_exec_guard_876_delayed_7_0_881 ) 
    $flowthrough 
    &/ [ptr_deref_885_root_address_inst] (ptr_deref_885_resized_base_address) (ptr_deref_885_root_address) $guard ( ifx_xthen_exec_guard_876_delayed_7_0_881 ) 
    $flowthrough 
    &/ [ptr_deref_885_addr_0] (ptr_deref_885_root_address) (ptr_deref_885_word_address_0) $guard ( ifx_xthen_exec_guard_876_delayed_7_0_881 ) 
    $flowthrough 
    $load [ptr_deref_885_load_0] $from memory_space_0 (ptr_deref_885_word_address_0) (ptr_deref_885_data_0) $guard ( ifx_xthen_exec_guard_876_delayed_7_0_881 ) 
    $buffering  $in ptr_deref_885_load_0 ptr_deref_885_word_address_0 2
    $buffering  $out ptr_deref_885_load_0 ptr_deref_885_data_0 2
    $delay ptr_deref_885_load_0 6
    &/ [ptr_deref_885_gather_scatter] (ptr_deref_885_data_0) (tmp249_886) $guard ( ifx_xthen_exec_guard_876_delayed_7_0_881 ) 
    $flowthrough 
    // 			add_outx_x1_883_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 268
    # := [W_add_outx_x1_883_delayed_1_0_887_inst] (add_outx_x1_819) (add_outx_x1_883_delayed_1_0_889)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) idxprom251 := ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 269
    // ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 )
    # := [type_cast_893_inst] (add_outx_x1_883_delayed_1_0_889) (idxprom251_894)  $guard ( ifx_xthen_exec_guard_863 )    $fullrate
    $buffering  $out type_cast_893_inst idxprom251_894 1
    $delay type_cast_893_inst 1
    // 			arrayidx252 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 270
    &/ [array_obj_ref_899_index_1_resize] (idxprom251_894) (R_idxprom251_898_resized) 
    $flowthrough 
    &/ [array_obj_ref_899_index_1_rename] (R_idxprom251_898_resized) (R_idxprom251_898_scaled) 
    $flowthrough 
    +[array_obj_ref_899_index_offset] (R_idxprom251_898_scaled array_obj_ref_899_constant_part_of_offset) (array_obj_ref_899_final_offset)    $fullrate
    $buffering  $in array_obj_ref_899_index_offset R_idxprom251_898_scaled 2
    $buffering  $in array_obj_ref_899_index_offset array_obj_ref_899_constant_part_of_offset 2
    $buffering  $out array_obj_ref_899_index_offset array_obj_ref_899_final_offset 2
    $delay array_obj_ref_899_index_offset 2
    &/ [array_obj_ref_899_root_address_inst] (array_obj_ref_899_final_offset) (array_obj_ref_899_root_address) 
    $flowthrough 
    # := [addr_of_900_final_reg] (array_obj_ref_899_root_address) (arrayidx252_901)     $fullrate
    $buffering  $out addr_of_900_final_reg arrayidx252_901 1
    // 			ifx_xthen_exec_guard_893_delayed_13_0 := ifx_xthen_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
    //  file prog.linked.opt.aa, line 271
    # := [W_ifx_xthen_exec_guard_893_delayed_13_0_902_inst] (ifx_xthen_exec_guard_863) (ifx_xthen_exec_guard_893_delayed_13_0_904)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_exec_guard_893_delayed_13_0_902_inst ifx_xthen_exec_guard_893_delayed_13_0_904 13
    // 			arrayidx252_894_delayed_6_0 := arrayidx252 $buffering 6 $cut_through // bits of buffering = 192. 
    //  file prog.linked.opt.aa, line 272
    # := [W_arrayidx252_894_delayed_6_0_905_inst] (arrayidx252_901) (arrayidx252_894_delayed_6_0_907)  $cut_through    $fullrate
    $buffering  $out W_arrayidx252_894_delayed_6_0_905_inst arrayidx252_894_delayed_6_0_907 6
    // 			$guard (ifx_xthen_exec_guard_893_delayed_13_0) ->(arrayidx252_894_delayed_6_0) := tmp249 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 273
    // ->(arrayidx252_894_delayed_6_0)
    &/ [ptr_deref_910_base_resize] (arrayidx252_894_delayed_6_0_907) (ptr_deref_910_resized_base_address) $guard ( ifx_xthen_exec_guard_893_delayed_13_0_904 ) 
    $flowthrough 
    &/ [ptr_deref_910_root_address_inst] (ptr_deref_910_resized_base_address) (ptr_deref_910_root_address) $guard ( ifx_xthen_exec_guard_893_delayed_13_0_904 ) 
    $flowthrough 
    &/ [ptr_deref_910_addr_0] (ptr_deref_910_root_address) (ptr_deref_910_word_address_0) $guard ( ifx_xthen_exec_guard_893_delayed_13_0_904 ) 
    $flowthrough 
    $store [ptr_deref_910_store_0] $to memory_space_2 (ptr_deref_910_word_address_0 ptr_deref_910_data_0) $guard ( ifx_xthen_exec_guard_893_delayed_13_0_904 ) 
    $buffering  $in ptr_deref_910_store_0 ptr_deref_910_word_address_0 2
    $buffering  $in ptr_deref_910_store_0 ptr_deref_910_data_0 2
    $delay ptr_deref_910_store_0 6
    &/ [ptr_deref_910_gather_scatter] (tmp249_886) (ptr_deref_910_data_0) $guard ( ifx_xthen_exec_guard_893_delayed_13_0_904 ) 
    $flowthrough 
    // 			count_inp1x_x1_900_delayed_1_0 := count_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 274
    # := [W_count_inp1x_x1_900_delayed_1_0_913_inst] (count_inp1x_x1_834) (count_inp1x_x1_900_delayed_1_0_915)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile inc254 := (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 275
    // (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_921_inst] (count_inp1x_x1_900_delayed_1_0_915 type_cast_920_wire_constant) (inc254_922) $guard ( ifx_xthen_exec_guard_863 )   $flowthrough 
    $delay ADD_u16_u16_921_inst 0
    // 			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 276
    # := [W_add_inp1x_x1_907_delayed_1_0_923_inst] (add_inp1x_x1_824) (add_inp1x_x1_907_delayed_1_0_925)  $cut_through    $fullrate
    $buffering  $out W_add_inp1x_x1_907_delayed_1_0_923_inst add_inp1x_x1_907_delayed_1_0_925 2
    // 			$guard (ifx_xthen_exec_guard) $volatile inc256 := (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 277
    // (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_931_inst] (add_inp1x_x1_907_delayed_1_0_925 type_cast_930_wire_constant) (inc256_932) $guard ( ifx_xthen_exec_guard_863 )   $flowthrough 
    $delay ADD_u16_u16_931_inst 0
    // 			add_outx_x1_914_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 278
    # := [W_add_outx_x1_914_delayed_1_0_933_inst] (add_outx_x1_819) (add_outx_x1_914_delayed_1_0_935)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile inc258 := (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 279
    // (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_941_inst] (add_outx_x1_914_delayed_1_0_935 type_cast_940_wire_constant) (inc258_942) $guard ( ifx_xthen_exec_guard_863 )   $flowthrough 
    $delay ADD_u16_u16_941_inst 0
    // 			$volatile ifx_xthen_ifx_xend_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 280
    # := [W_ifx_xthen_ifx_xend_taken_943_inst] (ifx_xthen_exec_guard_863) (ifx_xthen_ifx_xend_taken_945)    $flowthrough 
    // 			$volatile ifx_xend_exec_guard := (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken) $buffering 1
    //  file prog.linked.opt.aa, line 281
    // (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken)
    |[OR_u1_u1_949_inst] (ifx_xthen_ifx_xend_taken_945 whilex_xbody_ifx_xend_taken_860) (ifx_xend_exec_guard_950)   $flowthrough 
    $delay OR_u1_u1_949_inst 0
    // 			type_cast_933_933_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 282
    // ($bitcast ($uint<16>) add_outx_x1 )
    # := [type_cast_953_inst] (add_outx_x1_819) (type_cast_933_933_delayed_1_0_954)     $fullrate
    $buffering  $out type_cast_953_inst type_cast_933_933_delayed_1_0_954 1
    $delay type_cast_953_inst 1
    // 			$volatile add_outx_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 283
    // ($bitcast ($uint<16>) inc258 )
    # := [type_cast_958_inst] (inc258_942) (type_cast_958_wire)   $flowthrough
    $delay type_cast_958_inst 0
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_963_inst] (whilex_xbody_ifx_xend_taken_860 type_cast_933_933_delayed_1_0_954 type_cast_962_wire_constant) (MUX_963_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_964_inst] (ifx_xthen_ifx_xend_taken_945 type_cast_958_wire MUX_963_wire) (add_outx_x0_965)  $flowthrough
    // 			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 284
    // ($bitcast ($uint<16>) add_inp1x_x1 )
    # := [type_cast_968_inst] (add_inp1x_x1_824) (type_cast_945_945_delayed_1_0_969)     $fullrate
    $buffering  $out type_cast_968_inst type_cast_945_945_delayed_1_0_969 2
    $delay type_cast_968_inst 1
    // 			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 285
    // ($bitcast ($uint<16>) inc256 )
    # := [type_cast_973_inst] (inc256_932) (type_cast_973_wire)   $flowthrough
    $delay type_cast_973_inst 0
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_978_inst] (whilex_xbody_ifx_xend_taken_860 type_cast_945_945_delayed_1_0_969 type_cast_977_wire_constant) (MUX_978_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_979_inst] (ifx_xthen_ifx_xend_taken_945 type_cast_973_wire MUX_978_wire) (add_inp1x_x0_980)  $flowthrough
    // 			type_cast_957_957_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 286
    // ($bitcast ($uint<16>) count_inp1x_x1 )
    # := [type_cast_983_inst] (count_inp1x_x1_834) (type_cast_957_957_delayed_1_0_984)     $fullrate
    $buffering  $out type_cast_983_inst type_cast_957_957_delayed_1_0_984 1
    $delay type_cast_983_inst 1
    // 			$volatile count_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 287
    // ($bitcast ($uint<16>) inc254 )
    # := [type_cast_988_inst] (inc254_922) (type_cast_988_wire)   $flowthrough
    $delay type_cast_988_inst 0
    // ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_993_inst] (whilex_xbody_ifx_xend_taken_860 type_cast_957_957_delayed_1_0_984 type_cast_992_wire_constant) (MUX_993_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_994_inst] (ifx_xthen_ifx_xend_taken_945 type_cast_988_wire MUX_993_wire) (count_inp1x_x0_995)  $flowthrough
    // 			$guard (ifx_xend_exec_guard) conv260 := ($cast ($uint<32>) count_inp1x_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 288
    // ($cast ($uint<32>) count_inp1x_x0 )
    # := [type_cast_999_inst] (count_inp1x_x0_995) (conv260_1000)  $guard ( ifx_xend_exec_guard_950 )    $fullrate
    $buffering  $out type_cast_999_inst conv260_1000 1
    $delay type_cast_999_inst 1
    // 			ifx_xend_exec_guard_968_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 289
    # := [W_ifx_xend_exec_guard_968_delayed_1_0_1001_inst] (ifx_xend_exec_guard_950) (ifx_xend_exec_guard_968_delayed_1_0_1003)  $cut_through    $fullrate
    // 			$guard (ifx_xend_exec_guard_968_delayed_1_0) $volatile cmp263 := (conv260 == conv243) $buffering 1
    //  file prog.linked.opt.aa, line 290
    // (conv260 == conv243)
    ==[EQ_u32_u1_1008_inst] (conv260_1000 conv243_775) (cmp263_1009) $guard ( ifx_xend_exec_guard_968_delayed_1_0_1003 )   $flowthrough 
    $delay EQ_u32_u1_1008_inst 0
    // 			ifx_xend_exec_guard_975_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 291
    # := [W_ifx_xend_exec_guard_975_delayed_1_0_1010_inst] (ifx_xend_exec_guard_950) (ifx_xend_exec_guard_975_delayed_1_0_1012)  $cut_through    $fullrate
    // 			$volatile ifx_xend_landx_xlhsx_xtrue_taken := (ifx_xend_exec_guard_975_delayed_1_0 & cmp263) $buffering 1
    //  file prog.linked.opt.aa, line 292
    // (ifx_xend_exec_guard_975_delayed_1_0 & cmp263)
    &[AND_u1_u1_1016_inst] (ifx_xend_exec_guard_975_delayed_1_0_1012 cmp263_1009) (ifx_xend_landx_xlhsx_xtrue_taken_1017)   $flowthrough 
    $delay AND_u1_u1_1016_inst 0
    // 			ifx_xend_exec_guard_980_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 293
    # := [W_ifx_xend_exec_guard_980_delayed_1_0_1018_inst] (ifx_xend_exec_guard_950) (ifx_xend_exec_guard_980_delayed_1_0_1020)  $cut_through    $fullrate
    // 			$volatile ifx_xend_ifx_xend300_taken := (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 )) $buffering 1
    //  file prog.linked.opt.aa, line 294
    // ( ~ cmp263 )
    ~ [NOT_u1_u1_1024_inst] (cmp263_1009) (NOT_u1_u1_1024_wire)   $flowthrough
    $delay NOT_u1_u1_1024_inst 0
    // (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 ))
    &[AND_u1_u1_1025_inst] (ifx_xend_exec_guard_980_delayed_1_0_1020 NOT_u1_u1_1024_wire) (ifx_xend_ifx_xend300_taken_1026)   $flowthrough 
    $delay AND_u1_u1_1025_inst 0
    // 			$volatile landx_xlhsx_xtrue_exec_guard := ifx_xend_landx_xlhsx_xtrue_taken $buffering 1
    //  file prog.linked.opt.aa, line 295
    # := [W_landx_xlhsx_xtrue_exec_guard_1027_inst] (ifx_xend_landx_xlhsx_xtrue_taken_1017) (landx_xlhsx_xtrue_exec_guard_1029)    $flowthrough 
    // 			count_inp2x_x1_990_delayed_2_0 := count_inp2x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 296
    # := [W_count_inp2x_x1_990_delayed_2_0_1030_inst] (count_inp2x_x1_839) (count_inp2x_x1_990_delayed_2_0_1032)  $cut_through    $fullrate
    $buffering  $out W_count_inp2x_x1_990_delayed_2_0_1030_inst count_inp2x_x1_990_delayed_2_0_1032 2
    // 			$guard (landx_xlhsx_xtrue_exec_guard) conv266 := ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 297
    // ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 )
    # := [type_cast_1036_inst] (count_inp2x_x1_990_delayed_2_0_1032) (conv266_1037)  $guard ( landx_xlhsx_xtrue_exec_guard_1029 )    $fullrate
    $buffering  $out type_cast_1036_inst conv266_1037 1
    $delay type_cast_1036_inst 1
    // 			landx_xlhsx_xtrue_exec_guard_993_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 298
    # := [W_landx_xlhsx_xtrue_exec_guard_993_delayed_1_0_1038_inst] (landx_xlhsx_xtrue_exec_guard_1029) (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0_1040)  $cut_through    $fullrate
    // 			$guard (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0) $volatile cmp269 := (conv266 < conv268) $buffering 1
    //  file prog.linked.opt.aa, line 299
    // (conv266 < conv268)
    <[ULT_u32_u1_1045_inst] (conv266_1037 conv268_781) (cmp269_1046) $guard ( landx_xlhsx_xtrue_exec_guard_993_delayed_1_0_1040 )   $flowthrough 
    $delay ULT_u32_u1_1045_inst 0
    // 			landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 300
    # := [W_landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0_1047_inst] (landx_xlhsx_xtrue_exec_guard_1029) (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0_1049)  $cut_through    $fullrate
    // 			$volatile landx_xlhsx_xtrue_ifx_xthen271_taken := (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269) $buffering 1
    //  file prog.linked.opt.aa, line 301
    // (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269)
    &[AND_u1_u1_1053_inst] (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0_1049 cmp269_1046) (landx_xlhsx_xtrue_ifx_xthen271_taken_1054)   $flowthrough 
    $delay AND_u1_u1_1053_inst 0
    // 			landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 302
    # := [W_landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0_1055_inst] (landx_xlhsx_xtrue_exec_guard_1029) (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0_1057)  $cut_through    $fullrate
    // 			$volatile landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken := (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 )) $buffering 1
    //  file prog.linked.opt.aa, line 303
    // ( ~ cmp269 )
    ~ [NOT_u1_u1_1061_inst] (cmp269_1046) (NOT_u1_u1_1061_wire)   $flowthrough
    $delay NOT_u1_u1_1061_inst 0
    // (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 ))
    &[AND_u1_u1_1062_inst] (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0_1057 NOT_u1_u1_1061_wire) (landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063)   $flowthrough 
    $delay AND_u1_u1_1062_inst 0
    // 			$volatile ifx_xthen271_exec_guard := landx_xlhsx_xtrue_ifx_xthen271_taken $buffering 1
    //  file prog.linked.opt.aa, line 304
    # := [W_ifx_xthen271_exec_guard_1064_inst] (landx_xlhsx_xtrue_ifx_xthen271_taken_1054) (ifx_xthen271_exec_guard_1066)    $flowthrough 
    // 			add_inp2x_x1_1015_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 305
    # := [W_add_inp2x_x1_1015_delayed_3_0_1067_inst] (add_inp2x_x1_829) (add_inp2x_x1_1015_delayed_3_0_1069)  $cut_through    $fullrate
    $buffering  $out W_add_inp2x_x1_1015_delayed_3_0_1067_inst add_inp2x_x1_1015_delayed_3_0_1069 3
    // 			$guard (ifx_xthen271_exec_guard) idxprom273 := ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 306
    // ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 )
    # := [type_cast_1073_inst] (add_inp2x_x1_1015_delayed_3_0_1069) (idxprom273_1074)  $guard ( ifx_xthen271_exec_guard_1066 )    $fullrate
    $buffering  $out type_cast_1073_inst idxprom273_1074 1
    $delay type_cast_1073_inst 1
    // 			arrayidx274 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 307
    &/ [array_obj_ref_1079_index_1_resize] (idxprom273_1074) (R_idxprom273_1078_resized) 
    $flowthrough 
    &/ [array_obj_ref_1079_index_1_rename] (R_idxprom273_1078_resized) (R_idxprom273_1078_scaled) 
    $flowthrough 
    +[array_obj_ref_1079_index_offset] (R_idxprom273_1078_scaled array_obj_ref_1079_constant_part_of_offset) (array_obj_ref_1079_final_offset)    $fullrate
    $buffering  $in array_obj_ref_1079_index_offset R_idxprom273_1078_scaled 2
    $buffering  $in array_obj_ref_1079_index_offset array_obj_ref_1079_constant_part_of_offset 2
    $buffering  $out array_obj_ref_1079_index_offset array_obj_ref_1079_final_offset 2
    $delay array_obj_ref_1079_index_offset 2
    &/ [array_obj_ref_1079_root_address_inst] (array_obj_ref_1079_final_offset) (array_obj_ref_1079_root_address) 
    $flowthrough 
    # := [addr_of_1080_final_reg] (array_obj_ref_1079_root_address) (arrayidx274_1081)     $fullrate
    $buffering  $out addr_of_1080_final_reg arrayidx274_1081 1
    // 			ifx_xthen271_exec_guard_1025_delayed_7_0 := ifx_xthen271_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
    //  file prog.linked.opt.aa, line 308
    # := [W_ifx_xthen271_exec_guard_1025_delayed_7_0_1082_inst] (ifx_xthen271_exec_guard_1066) (ifx_xthen271_exec_guard_1025_delayed_7_0_1084)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen271_exec_guard_1025_delayed_7_0_1082_inst ifx_xthen271_exec_guard_1025_delayed_7_0_1084 7
    // 			$guard (ifx_xthen271_exec_guard_1025_delayed_7_0) tmp275 := ->(arrayidx274) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 309
    // ->(arrayidx274)
    &/ [ptr_deref_1088_base_resize] (arrayidx274_1081) (ptr_deref_1088_resized_base_address) $guard ( ifx_xthen271_exec_guard_1025_delayed_7_0_1084 ) 
    $flowthrough 
    &/ [ptr_deref_1088_root_address_inst] (ptr_deref_1088_resized_base_address) (ptr_deref_1088_root_address) $guard ( ifx_xthen271_exec_guard_1025_delayed_7_0_1084 ) 
    $flowthrough 
    &/ [ptr_deref_1088_addr_0] (ptr_deref_1088_root_address) (ptr_deref_1088_word_address_0) $guard ( ifx_xthen271_exec_guard_1025_delayed_7_0_1084 ) 
    $flowthrough 
    $load [ptr_deref_1088_load_0] $from memory_space_1 (ptr_deref_1088_word_address_0) (ptr_deref_1088_data_0) $guard ( ifx_xthen271_exec_guard_1025_delayed_7_0_1084 ) 
    $buffering  $in ptr_deref_1088_load_0 ptr_deref_1088_word_address_0 2
    $buffering  $out ptr_deref_1088_load_0 ptr_deref_1088_data_0 2
    $delay ptr_deref_1088_load_0 6
    &/ [ptr_deref_1088_gather_scatter] (ptr_deref_1088_data_0) (tmp275_1089) $guard ( ifx_xthen271_exec_guard_1025_delayed_7_0_1084 ) 
    $flowthrough 
    // 			add_outx_x0_1032_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 310
    # := [W_add_outx_x0_1032_delayed_2_0_1090_inst] (add_outx_x0_965) (add_outx_x0_1032_delayed_2_0_1092)  $cut_through    $fullrate
    $buffering  $out W_add_outx_x0_1032_delayed_2_0_1090_inst add_outx_x0_1032_delayed_2_0_1092 2
    // 			$guard (ifx_xthen271_exec_guard) idxprom277 := ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 311
    // ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 )
    # := [type_cast_1096_inst] (add_outx_x0_1032_delayed_2_0_1092) (idxprom277_1097)  $guard ( ifx_xthen271_exec_guard_1066 )    $fullrate
    $buffering  $out type_cast_1096_inst idxprom277_1097 1
    $delay type_cast_1096_inst 1
    // 			arrayidx278 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 312
    &/ [array_obj_ref_1102_index_1_resize] (idxprom277_1097) (R_idxprom277_1101_resized) 
    $flowthrough 
    &/ [array_obj_ref_1102_index_1_rename] (R_idxprom277_1101_resized) (R_idxprom277_1101_scaled) 
    $flowthrough 
    +[array_obj_ref_1102_index_offset] (R_idxprom277_1101_scaled array_obj_ref_1102_constant_part_of_offset) (array_obj_ref_1102_final_offset)    $fullrate
    $buffering  $in array_obj_ref_1102_index_offset R_idxprom277_1101_scaled 2
    $buffering  $in array_obj_ref_1102_index_offset array_obj_ref_1102_constant_part_of_offset 2
    $buffering  $out array_obj_ref_1102_index_offset array_obj_ref_1102_final_offset 2
    $delay array_obj_ref_1102_index_offset 2
    &/ [array_obj_ref_1102_root_address_inst] (array_obj_ref_1102_final_offset) (array_obj_ref_1102_root_address) 
    $flowthrough 
    # := [addr_of_1103_final_reg] (array_obj_ref_1102_root_address) (arrayidx278_1104)     $fullrate
    $buffering  $out addr_of_1103_final_reg arrayidx278_1104 1
    // 			ifx_xthen271_exec_guard_1042_delayed_13_0 := ifx_xthen271_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
    //  file prog.linked.opt.aa, line 313
    # := [W_ifx_xthen271_exec_guard_1042_delayed_13_0_1105_inst] (ifx_xthen271_exec_guard_1066) (ifx_xthen271_exec_guard_1042_delayed_13_0_1107)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen271_exec_guard_1042_delayed_13_0_1105_inst ifx_xthen271_exec_guard_1042_delayed_13_0_1107 13
    // 			arrayidx278_1043_delayed_6_0 := arrayidx278 $buffering 6 $cut_through // bits of buffering = 192. 
    //  file prog.linked.opt.aa, line 314
    # := [W_arrayidx278_1043_delayed_6_0_1108_inst] (arrayidx278_1104) (arrayidx278_1043_delayed_6_0_1110)  $cut_through    $fullrate
    $buffering  $out W_arrayidx278_1043_delayed_6_0_1108_inst arrayidx278_1043_delayed_6_0_1110 6
    // 			$guard (ifx_xthen271_exec_guard_1042_delayed_13_0) ->(arrayidx278_1043_delayed_6_0) := tmp275 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 315
    // ->(arrayidx278_1043_delayed_6_0)
    &/ [ptr_deref_1113_base_resize] (arrayidx278_1043_delayed_6_0_1110) (ptr_deref_1113_resized_base_address) $guard ( ifx_xthen271_exec_guard_1042_delayed_13_0_1107 ) 
    $flowthrough 
    &/ [ptr_deref_1113_root_address_inst] (ptr_deref_1113_resized_base_address) (ptr_deref_1113_root_address) $guard ( ifx_xthen271_exec_guard_1042_delayed_13_0_1107 ) 
    $flowthrough 
    &/ [ptr_deref_1113_addr_0] (ptr_deref_1113_root_address) (ptr_deref_1113_word_address_0) $guard ( ifx_xthen271_exec_guard_1042_delayed_13_0_1107 ) 
    $flowthrough 
    $store [ptr_deref_1113_store_0] $to memory_space_2 (ptr_deref_1113_word_address_0 ptr_deref_1113_data_0) $guard ( ifx_xthen271_exec_guard_1042_delayed_13_0_1107 ) 
    $buffering  $in ptr_deref_1113_store_0 ptr_deref_1113_word_address_0 2
    $buffering  $in ptr_deref_1113_store_0 ptr_deref_1113_data_0 2
    $delay ptr_deref_1113_store_0 6
    &/ [ptr_deref_1113_gather_scatter] (tmp275_1089) (ptr_deref_1113_data_0) $guard ( ifx_xthen271_exec_guard_1042_delayed_13_0_1107 ) 
    $flowthrough 
    // 			count_inp2x_x1_1049_delayed_3_0 := count_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 316
    # := [W_count_inp2x_x1_1049_delayed_3_0_1116_inst] (count_inp2x_x1_839) (count_inp2x_x1_1049_delayed_3_0_1118)  $cut_through    $fullrate
    $buffering  $out W_count_inp2x_x1_1049_delayed_3_0_1116_inst count_inp2x_x1_1049_delayed_3_0_1118 3
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc280 := (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 317
    // (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_1124_inst] (count_inp2x_x1_1049_delayed_3_0_1118 type_cast_1123_wire_constant) (inc280_1125) $guard ( ifx_xthen271_exec_guard_1066 )   $flowthrough 
    $delay ADD_u16_u16_1124_inst 0
    // 			add_inp2x_x1_1056_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 318
    # := [W_add_inp2x_x1_1056_delayed_3_0_1126_inst] (add_inp2x_x1_829) (add_inp2x_x1_1056_delayed_3_0_1128)  $cut_through    $fullrate
    $buffering  $out W_add_inp2x_x1_1056_delayed_3_0_1126_inst add_inp2x_x1_1056_delayed_3_0_1128 3
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc282 := (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 319
    // (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_1134_inst] (add_inp2x_x1_1056_delayed_3_0_1128 type_cast_1133_wire_constant) (inc282_1135) $guard ( ifx_xthen271_exec_guard_1066 )   $flowthrough 
    $delay ADD_u16_u16_1134_inst 0
    // 			add_outx_x0_1063_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 320
    # := [W_add_outx_x0_1063_delayed_2_0_1136_inst] (add_outx_x0_965) (add_outx_x0_1063_delayed_2_0_1138)  $cut_through    $fullrate
    $buffering  $out W_add_outx_x0_1063_delayed_2_0_1136_inst add_outx_x0_1063_delayed_2_0_1138 2
    // 			$guard (ifx_xthen271_exec_guard) $volatile inc284 := (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 321
    // (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_1144_inst] (add_outx_x0_1063_delayed_2_0_1138 type_cast_1143_wire_constant) (inc284_1145) $guard ( ifx_xthen271_exec_guard_1066 )   $flowthrough 
    $delay ADD_u16_u16_1144_inst 0
    // 			$volatile ifx_xthen271_landx_xlhsx_xtrue292_taken := ifx_xthen271_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 322
    # := [W_ifx_xthen271_landx_xlhsx_xtrue292_taken_1146_inst] (ifx_xthen271_exec_guard_1066) (ifx_xthen271_landx_xlhsx_xtrue292_taken_1148)    $flowthrough 
    // 			$volatile landx_xlhsx_xtrue292_exec_guard := (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken) $buffering 1
    //  file prog.linked.opt.aa, line 323
    // (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken)
    |[OR_u1_u1_1152_inst] (ifx_xthen271_landx_xlhsx_xtrue292_taken_1148 landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063) (landx_xlhsx_xtrue292_exec_guard_1153)   $flowthrough 
    $delay OR_u1_u1_1152_inst 0
    // 			type_cast_1082_1082_delayed_2_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 324
    // ($bitcast ($uint<16>) add_outx_x0 )
    # := [type_cast_1156_inst] (add_outx_x0_965) (type_cast_1082_1082_delayed_2_0_1157)     $fullrate
    $buffering  $out type_cast_1156_inst type_cast_1082_1082_delayed_2_0_1157 2
    $delay type_cast_1156_inst 1
    // 			$volatile add_outx_x2x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 325
    // ($bitcast ($uint<16>) inc284 )
    # := [type_cast_1161_inst] (inc284_1145) (type_cast_1161_wire)   $flowthrough
    $delay type_cast_1161_inst 0
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1166_inst] (landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063 type_cast_1082_1082_delayed_2_0_1157 type_cast_1165_wire_constant) (MUX_1166_wire)  $flowthrough
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1167_inst] (ifx_xthen271_landx_xlhsx_xtrue292_taken_1148 type_cast_1161_wire MUX_1166_wire) (add_outx_x2x_xph_1168)  $flowthrough
    // 			type_cast_1094_1094_delayed_3_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 326
    // ($bitcast ($uint<16>) add_inp2x_x1 )
    # := [type_cast_1171_inst] (add_inp2x_x1_829) (type_cast_1094_1094_delayed_3_0_1172)     $fullrate
    $buffering  $out type_cast_1171_inst type_cast_1094_1094_delayed_3_0_1172 3
    $delay type_cast_1171_inst 1
    // 			$volatile add_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 327
    // ($bitcast ($uint<16>) inc282 )
    # := [type_cast_1176_inst] (inc282_1135) (type_cast_1176_wire)   $flowthrough
    $delay type_cast_1176_inst 0
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1181_inst] (landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063 type_cast_1094_1094_delayed_3_0_1172 type_cast_1180_wire_constant) (MUX_1181_wire)  $flowthrough
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1182_inst] (ifx_xthen271_landx_xlhsx_xtrue292_taken_1148 type_cast_1176_wire MUX_1181_wire) (add_inp2x_x0x_xph_1183)  $flowthrough
    // 			type_cast_1106_1106_delayed_3_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 328
    // ($bitcast ($uint<16>) count_inp2x_x1 )
    # := [type_cast_1186_inst] (count_inp2x_x1_839) (type_cast_1106_1106_delayed_3_0_1187)     $fullrate
    $buffering  $out type_cast_1186_inst type_cast_1106_1106_delayed_3_0_1187 3
    $delay type_cast_1186_inst 1
    // 			$volatile count_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
    //  file prog.linked.opt.aa, line 329
    // ($bitcast ($uint<16>) inc280 )
    # := [type_cast_1191_inst] (inc280_1125) (type_cast_1191_wire)   $flowthrough
    $delay type_cast_1191_inst 0
    // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1196_inst] (landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken_1063 type_cast_1106_1106_delayed_3_0_1187 type_cast_1195_wire_constant) (MUX_1196_wire)  $flowthrough
    // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1197_inst] (ifx_xthen271_landx_xlhsx_xtrue292_taken_1148 type_cast_1191_wire MUX_1196_wire) (count_inp2x_x0x_xph_1198)  $flowthrough
    // 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 330
    // ($cast ($uint<32>) count_inp2x_x0x_xph )
    # := [type_cast_1202_inst] (count_inp2x_x0x_xph_1198) (conv294_1203)  $guard ( landx_xlhsx_xtrue292_exec_guard_1153 )    $fullrate
    $buffering  $out type_cast_1202_inst conv294_1203 2
    $delay type_cast_1202_inst 1
    // 			landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 331
    # := [W_landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0_1204_inst] (landx_xlhsx_xtrue292_exec_guard_1153) (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0_1206)  $cut_through    $fullrate
    // 			$guard (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0) $volatile cmp297 := (conv294 == conv268) $buffering 1
    //  file prog.linked.opt.aa, line 332
    // (conv294 == conv268)
    ==[EQ_u32_u1_1211_inst] (conv294_1203 conv268_781) (cmp297_1212) $guard ( landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0_1206 )   $flowthrough 
    $delay EQ_u32_u1_1211_inst 0
    // 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 333
    # := [W_landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1213_inst] (landx_xlhsx_xtrue292_exec_guard_1153) (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1215)  $cut_through    $fullrate
    $buffering  $out W_landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1213_inst landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1215 2
    // 			$volatile landx_xlhsx_xtrue292_ifx_xthen299_taken := (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297) $buffering 1
    //  file prog.linked.opt.aa, line 334
    // (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297)
    &[AND_u1_u1_1219_inst] (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1215 cmp297_1212) (landx_xlhsx_xtrue292_ifx_xthen299_taken_1220)   $flowthrough 
    $delay AND_u1_u1_1219_inst 0
    // 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 335
    # := [W_landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1221_inst] (landx_xlhsx_xtrue292_exec_guard_1153) (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1223)  $cut_through    $fullrate
    $buffering  $out W_landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1221_inst landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1223 2
    // 			$volatile landx_xlhsx_xtrue292_ifx_xend300_taken := (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 )) $buffering 1
    //  file prog.linked.opt.aa, line 336
    // ( ~ cmp297 )
    ~ [NOT_u1_u1_1227_inst] (cmp297_1212) (NOT_u1_u1_1227_wire)   $flowthrough
    $delay NOT_u1_u1_1227_inst 0
    // (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 ))
    &[AND_u1_u1_1228_inst] (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1223 NOT_u1_u1_1227_wire) (landx_xlhsx_xtrue292_ifx_xend300_taken_1229)   $flowthrough 
    $delay AND_u1_u1_1228_inst 0
    // 			$volatile ifx_xthen299_exec_guard := landx_xlhsx_xtrue292_ifx_xthen299_taken $buffering 1
    //  file prog.linked.opt.aa, line 337
    # := [W_ifx_xthen299_exec_guard_1230_inst] (landx_xlhsx_xtrue292_ifx_xthen299_taken_1220) (ifx_xthen299_exec_guard_1232)    $flowthrough 
    // 			$volatile ifx_xthen299_ifx_xend300_taken := ifx_xthen299_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 338
    # := [W_ifx_xthen299_ifx_xend300_taken_1233_inst] (ifx_xthen299_exec_guard_1232) (ifx_xthen299_ifx_xend300_taken_1235)    $flowthrough 
    // 			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 339
    // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
    # := [type_cast_1238_inst] (add_inp2x_x0x_xph_1183) (type_cast_1143_1143_delayed_1_0_1239)     $fullrate
    $buffering  $out type_cast_1238_inst type_cast_1143_1143_delayed_1_0_1239 2
    $delay type_cast_1238_inst 1
    // 			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 340
    // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
    # := [type_cast_1242_inst] (add_inp2x_x0x_xph_1183) (type_cast_1146_1146_delayed_1_0_1243)     $fullrate
    $buffering  $out type_cast_1242_inst type_cast_1146_1146_delayed_1_0_1243 2
    $delay type_cast_1242_inst 1
    // 			type_cast_1149_1149_delayed_2_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 341
    // ($bitcast ($uint<16>) add_inp2x_x1 )
    # := [type_cast_1246_inst] (add_inp2x_x1_829) (type_cast_1149_1149_delayed_2_0_1247)     $fullrate
    $buffering  $out type_cast_1246_inst type_cast_1149_1149_delayed_2_0_1247 2
    $delay type_cast_1246_inst 1
    // 			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 342
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1253_inst] (ifx_xend_ifx_xend300_taken_1026 type_cast_1149_1149_delayed_2_0_1247 type_cast_1252_wire_constant) (MUX_1152_1152_delayed_2_0_1254)  $fullrate
    $buffering  $out MUX_1253_inst MUX_1152_1152_delayed_2_0_1254 2
    // 			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 343
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 ) 
    ? [MUX_1261_inst] (landx_xlhsx_xtrue292_ifx_xend300_taken_1229 type_cast_1146_1146_delayed_1_0_1243 MUX_1152_1152_delayed_2_0_1254) (MUX_1261_wire)  $flowthrough
    // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  ) 
    ? [MUX_1262_inst] (ifx_xthen299_ifx_xend300_taken_1235 type_cast_1143_1143_delayed_1_0_1239 MUX_1261_wire) (add_inp2x_x0506_1263)  $flowthrough
    // 			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 344
    // ($bitcast ($uint<16>) add_outx_x2x_xph )
    # := [type_cast_1266_inst] (add_outx_x2x_xph_1168) (type_cast_1159_1159_delayed_1_0_1267)     $fullrate
    $buffering  $out type_cast_1266_inst type_cast_1159_1159_delayed_1_0_1267 2
    $delay type_cast_1266_inst 1
    // 			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 345
    // ($bitcast ($uint<16>) add_outx_x2x_xph )
    # := [type_cast_1270_inst] (add_outx_x2x_xph_1168) (type_cast_1162_1162_delayed_1_0_1271)     $fullrate
    $buffering  $out type_cast_1270_inst type_cast_1162_1162_delayed_1_0_1271 2
    $delay type_cast_1270_inst 1
    // 			type_cast_1165_1165_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 346
    // ($bitcast ($uint<16>) add_outx_x0 )
    # := [type_cast_1274_inst] (add_outx_x0_965) (type_cast_1165_1165_delayed_1_0_1275)     $fullrate
    $buffering  $out type_cast_1274_inst type_cast_1165_1165_delayed_1_0_1275 1
    $delay type_cast_1274_inst 1
    // 			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 347
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1281_inst] (ifx_xend_ifx_xend300_taken_1026 type_cast_1165_1165_delayed_1_0_1275 type_cast_1280_wire_constant) (MUX_1168_1168_delayed_2_0_1282)  $fullrate
    $buffering  $out MUX_1281_inst MUX_1168_1168_delayed_2_0_1282 2
    // 			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 348
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 ) 
    ? [MUX_1289_inst] (landx_xlhsx_xtrue292_ifx_xend300_taken_1229 type_cast_1162_1162_delayed_1_0_1271 MUX_1168_1168_delayed_2_0_1282) (MUX_1289_wire)  $flowthrough
    // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  ) 
    ? [MUX_1290_inst] (ifx_xthen299_ifx_xend300_taken_1235 type_cast_1159_1159_delayed_1_0_1267 MUX_1289_wire) (add_outx_x2504_1291)  $flowthrough
    // 			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 349
    // ($bitcast ($uint<16>) count_inp1x_x0 )
    # := [type_cast_1294_inst] (count_inp1x_x0_995) (type_cast_1179_1179_delayed_3_0_1295)     $fullrate
    $buffering  $out type_cast_1294_inst type_cast_1179_1179_delayed_3_0_1295 3
    $delay type_cast_1294_inst 1
    // 			type_cast_1182_1182_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 350
    // ($bitcast ($uint<16>) count_inp1x_x0 )
    # := [type_cast_1298_inst] (count_inp1x_x0_995) (type_cast_1182_1182_delayed_1_0_1299)     $fullrate
    $buffering  $out type_cast_1298_inst type_cast_1182_1182_delayed_1_0_1299 1
    $delay type_cast_1298_inst 1
    // 			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 351
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1305_inst] (ifx_xend_ifx_xend300_taken_1026 type_cast_1182_1182_delayed_1_0_1299 type_cast_1304_wire_constant) (MUX_1185_1185_delayed_2_0_1306)  $fullrate
    $buffering  $out MUX_1305_inst MUX_1185_1185_delayed_2_0_1306 2
    // 			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 352
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 ) 
    ? [MUX_1315_inst] (landx_xlhsx_xtrue292_ifx_xend300_taken_1229 type_cast_1179_1179_delayed_3_0_1295 MUX_1185_1185_delayed_2_0_1306) (MUX_1315_wire)  $flowthrough
    // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  ) 
    ? [MUX_1316_inst] (ifx_xthen299_ifx_xend300_taken_1235 type_cast_1311_wire_constant MUX_1315_wire) (count_inp1x_x2_1317)  $flowthrough
    // 			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 353
    // ($bitcast ($uint<16>) count_inp2x_x0x_xph )
    # := [type_cast_1320_inst] (count_inp2x_x0x_xph_1198) (type_cast_1196_1196_delayed_1_0_1321)     $fullrate
    $buffering  $out type_cast_1320_inst type_cast_1196_1196_delayed_1_0_1321 2
    $delay type_cast_1320_inst 1
    // 			type_cast_1199_1199_delayed_2_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 354
    // ($bitcast ($uint<16>) count_inp2x_x1 )
    # := [type_cast_1324_inst] (count_inp2x_x1_839) (type_cast_1199_1199_delayed_2_0_1325)     $fullrate
    $buffering  $out type_cast_1324_inst type_cast_1199_1199_delayed_2_0_1325 2
    $delay type_cast_1324_inst 1
    // 			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 355
    // ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1331_inst] (ifx_xend_ifx_xend300_taken_1026 type_cast_1199_1199_delayed_2_0_1325 type_cast_1330_wire_constant) (MUX_1202_1202_delayed_2_0_1332)  $fullrate
    $buffering  $out MUX_1331_inst MUX_1202_1202_delayed_2_0_1332 2
    // 			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
    //  file prog.linked.opt.aa, line 356
    // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 ) 
    ? [MUX_1341_inst] (landx_xlhsx_xtrue292_ifx_xend300_taken_1229 type_cast_1196_1196_delayed_1_0_1321 MUX_1202_1202_delayed_2_0_1332) (MUX_1341_wire)  $flowthrough
    // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  ) 
    ? [MUX_1342_inst] (ifx_xthen299_ifx_xend300_taken_1235 type_cast_1337_wire_constant MUX_1341_wire) (count_inp2x_x2_1343)  $flowthrough
    // 			conv302 := ($cast ($uint<32>) add_outx_x2504 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 357
    // ($cast ($uint<32>) add_outx_x2504 )
    # := [type_cast_1346_inst] (add_outx_x2504_1291) (conv302_1347)     $fullrate
    $buffering  $out type_cast_1346_inst conv302_1347 1
    $delay type_cast_1346_inst 1
    // 			$volatile cmp305 := (conv302 == shr304) $buffering 1
    //  file prog.linked.opt.aa, line 358
    // (conv302 == shr304)
    ==[EQ_u32_u1_1351_inst] (conv302_1347 shr304_787) (cmp305_1352)   $flowthrough 
    $delay EQ_u32_u1_1351_inst 0
    // 			$volatile ifx_xend300_whilex_xend_taken := cmp305 $buffering 1
    //  file prog.linked.opt.aa, line 359
    # := [W_ifx_xend300_whilex_xend_taken_1353_inst] (cmp305_1352) (ifx_xend300_whilex_xend_taken_1355)    $flowthrough 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 0
    ==0? [if_stmt_1359_branch] (ifx_xend300_whilex_xend_taken_1355)
    // 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 366
    // ($cast ($int<64>) call233 )
    $S:=$U [type_cast_1367_inst] (call233_768) (type_cast_1367_wire)   $flowthrough
    $delay type_cast_1367_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) )
    # := [type_cast_1368_inst] (type_cast_1367_wire) (conv234_1369)    
    $buffering  $out type_cast_1368_inst conv234_1369 1
    $delay type_cast_1368_inst 1
    // 		$call timer () (call310 ) 
    //  file prog.linked.opt.aa, line 368
    $call [call_stmt_1372_call] $module timer() (call310_1372)  
    $delay call_stmt_1372_call 4
    $buffering  $out call_stmt_1372_call call310_1372 1
    // 		conv311 := ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 369
    // ($cast ($int<64>) call310 )
    $S:=$U [type_cast_1375_inst] (call310_1372) (type_cast_1375_wire)   $flowthrough
    $delay type_cast_1375_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) )
    # := [type_cast_1376_inst] (type_cast_1375_wire) (conv311_1377)    
    $buffering  $out type_cast_1376_inst conv311_1377 1
    $delay type_cast_1376_inst 1
    // 		$volatile sub := (conv311 - conv234) $buffering 1
    //  file prog.linked.opt.aa, line 370
    // (conv311 - conv234)
    -[SUB_u64_u64_1381_inst] (conv311_1377 conv234_1369) (sub_1382)   $flowthrough 
    $delay SUB_u64_u64_1381_inst 0
    // 		conv317 := ($cast ($uint<8>) sub ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 371
    // ($cast ($uint<8>) sub )
    # := [type_cast_1385_inst] (sub_1382) (conv317_1386)    
    $buffering  $out type_cast_1385_inst conv317_1386 1
    $delay type_cast_1385_inst 1
    // 		$volatile shr320 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 372
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    >>[LSHR_u64_u64_1391_inst] (sub_1382 type_cast_1390_wire_constant) (shr320_1392)   $flowthrough 
    $delay LSHR_u64_u64_1391_inst 0
    // 		conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 373
    // ($cast ($uint<8>) shr320 )
    # := [type_cast_1395_inst] (shr320_1392) (conv323_1396)    
    $buffering  $out type_cast_1395_inst conv323_1396 1
    $delay type_cast_1395_inst 1
    // 		$volatile shr326 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 374
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >>[LSHR_u64_u64_1401_inst] (sub_1382 type_cast_1400_wire_constant) (shr326_1402)   $flowthrough 
    $delay LSHR_u64_u64_1401_inst 0
    // 		conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 375
    // ($cast ($uint<8>) shr326 )
    # := [type_cast_1405_inst] (shr326_1402) (conv329_1406)    
    $buffering  $out type_cast_1405_inst conv329_1406 1
    $delay type_cast_1405_inst 1
    // 		$volatile shr332 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 376
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
    >>[LSHR_u64_u64_1411_inst] (sub_1382 type_cast_1410_wire_constant) (shr332_1412)   $flowthrough 
    $delay LSHR_u64_u64_1411_inst 0
    // 		conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 377
    // ($cast ($uint<8>) shr332 )
    # := [type_cast_1415_inst] (shr332_1412) (conv335_1416)    
    $buffering  $out type_cast_1415_inst conv335_1416 1
    $delay type_cast_1415_inst 1
    // 		$volatile shr338 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 378
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
    >>[LSHR_u64_u64_1421_inst] (sub_1382 type_cast_1420_wire_constant) (shr338_1422)   $flowthrough 
    $delay LSHR_u64_u64_1421_inst 0
    // 		conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 379
    // ($cast ($uint<8>) shr338 )
    # := [type_cast_1425_inst] (shr338_1422) (conv341_1426)    
    $buffering  $out type_cast_1425_inst conv341_1426 1
    $delay type_cast_1425_inst 1
    // 		$volatile shr344 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 380
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
    >>[LSHR_u64_u64_1431_inst] (sub_1382 type_cast_1430_wire_constant) (shr344_1432)   $flowthrough 
    $delay LSHR_u64_u64_1431_inst 0
    // 		conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 381
    // ($cast ($uint<8>) shr344 )
    # := [type_cast_1435_inst] (shr344_1432) (conv347_1436)    
    $buffering  $out type_cast_1435_inst conv347_1436 1
    $delay type_cast_1435_inst 1
    // 		$volatile shr350 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 382
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
    >>[LSHR_u64_u64_1441_inst] (sub_1382 type_cast_1440_wire_constant) (shr350_1442)   $flowthrough 
    $delay LSHR_u64_u64_1441_inst 0
    // 		conv353 := ($cast ($uint<8>) shr350 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 383
    // ($cast ($uint<8>) shr350 )
    # := [type_cast_1445_inst] (shr350_1442) (conv353_1446)    
    $buffering  $out type_cast_1445_inst conv353_1446 1
    $delay type_cast_1445_inst 1
    // 		$volatile shr356 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 384
    // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
    >>[LSHR_u64_u64_1451_inst] (sub_1382 type_cast_1450_wire_constant) (shr356_1452)   $flowthrough 
    $delay LSHR_u64_u64_1451_inst 0
    // 		conv359 := ($cast ($uint<8>) shr356 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 385
    // ($cast ($uint<8>) shr356 )
    # := [type_cast_1455_inst] (shr356_1452) (conv359_1456)    
    $buffering  $out type_cast_1455_inst conv359_1456 1
    $delay type_cast_1455_inst 1
    // 		Concat_output_pipe := conv359 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 386
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1457_inst]  (conv359_1456) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv353 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 387
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1460_inst]  (conv353_1446) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 388
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1463_inst]  (conv347_1436) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 389
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1466_inst]  (conv341_1426) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 390
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1469_inst]  (conv335_1416) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 391
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1472_inst]  (conv329_1406) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 392
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1475_inst]  (conv323_1396) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 393
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1478_inst]  (conv317_1386) (Concat_output_pipe) 
    // 		$volatile cmp381460 := (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
    //  file prog.linked.opt.aa, line 395
    // (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >[UGT_u32_u1_1486_inst] (mul103_279 type_cast_1485_wire_constant) (cmp381460_1487)   $flowthrough 
    $delay UGT_u32_u1_1486_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 396
    ==0? [if_stmt_1488_branch] (cmp381460_1487)
    // 		$volatile tmp472 := (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 403
    // (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >[UGT_u32_u1_1499_inst] (shr304_787 type_cast_1498_wire_constant) (tmp472_1500)   $flowthrough 
    $delay UGT_u32_u1_1499_inst 0
    // 		$volatile tmp471x_xop := (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_1505_inst] (shr304_787 type_cast_1504_wire_constant) (tmp471x_xop_1506)   $flowthrough 
    $delay ADD_u32_u32_1505_inst 0
    // 		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 405
    // ($cast ($uint<64>) tmp471x_xop )
    # := [type_cast_1509_inst] (tmp471x_xop_1506) (iNsTr_79_1510)    
    $buffering  $out type_cast_1509_inst iNsTr_79_1510 1
    $delay type_cast_1509_inst 1
    // 		$volatile xx_xop := (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 406
    // (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1515_inst] (iNsTr_79_1510 type_cast_1514_wire_constant) (xx_xop_1516)   $flowthrough 
    $delay ADD_u64_u64_1515_inst 0
    // 		$volatile tmp475 := ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 407
    // ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1522_inst] (tmp472_1500 xx_xop_1516 type_cast_1521_wire_constant) (tmp475_1523)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 409
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody383 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody383_forx_xbody383 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 410
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_1532_inst] (indvarx_xnext_1648) (type_cast_1532_wire)    
    $buffering  $out type_cast_1532_inst type_cast_1532_wire 1
    $delay type_cast_1532_inst 1
    $phi [phi_stmt_1526] (type_cast_1530_wire_constant type_cast_1532_wire) ( indvar_1526 ) 
    // 		arrayidx388 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 413
    &/ [array_obj_ref_1538_index_1_resize] (indvar_1526) (R_indvar_1537_resized) 
    $flowthrough 
    &/ [array_obj_ref_1538_index_1_rename] (R_indvar_1537_resized) (R_indvar_1537_scaled) 
    $flowthrough 
    +[array_obj_ref_1538_index_offset] (R_indvar_1537_scaled array_obj_ref_1538_constant_part_of_offset) (array_obj_ref_1538_final_offset)   
    $delay array_obj_ref_1538_index_offset 2
    &/ [array_obj_ref_1538_root_address_inst] (array_obj_ref_1538_final_offset) (array_obj_ref_1538_root_address) 
    $flowthrough 
    # := [addr_of_1539_final_reg] (array_obj_ref_1538_root_address) (arrayidx388_1540)    
    $buffering  $out addr_of_1539_final_reg arrayidx388_1540 1
    // 		tmp389 := ->(arrayidx388) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 414
    // ->(arrayidx388)
    &/ [ptr_deref_1543_base_resize] (arrayidx388_1540) (ptr_deref_1543_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1543_root_address_inst] (ptr_deref_1543_resized_base_address) (ptr_deref_1543_root_address) 
    $flowthrough 
    &/ [ptr_deref_1543_addr_0] (ptr_deref_1543_root_address) (ptr_deref_1543_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1543_load_0] $from memory_space_2 (ptr_deref_1543_word_address_0) (ptr_deref_1543_data_0) 
    $delay ptr_deref_1543_load_0 6
    &/ [ptr_deref_1543_gather_scatter] (ptr_deref_1543_data_0) (tmp389_1544) 
    $flowthrough 
    // 		conv393 := ($cast ($uint<8>) tmp389 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 415
    // ($cast ($uint<8>) tmp389 )
    # := [type_cast_1547_inst] (tmp389_1544) (conv393_1548)    
    $buffering  $out type_cast_1547_inst conv393_1548 1
    $delay type_cast_1547_inst 1
    // 		$volatile shr396 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 416
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    >>[LSHR_u64_u64_1553_inst] (tmp389_1544 type_cast_1552_wire_constant) (shr396_1554)   $flowthrough 
    $delay LSHR_u64_u64_1553_inst 0
    // 		conv399 := ($cast ($uint<8>) shr396 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 417
    // ($cast ($uint<8>) shr396 )
    # := [type_cast_1557_inst] (shr396_1554) (conv399_1558)    
    $buffering  $out type_cast_1557_inst conv399_1558 1
    $delay type_cast_1557_inst 1
    // 		$volatile shr402 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 418
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >>[LSHR_u64_u64_1563_inst] (tmp389_1544 type_cast_1562_wire_constant) (shr402_1564)   $flowthrough 
    $delay LSHR_u64_u64_1563_inst 0
    // 		conv405 := ($cast ($uint<8>) shr402 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 419
    // ($cast ($uint<8>) shr402 )
    # := [type_cast_1567_inst] (shr402_1564) (conv405_1568)    
    $buffering  $out type_cast_1567_inst conv405_1568 1
    $delay type_cast_1567_inst 1
    // 		$volatile shr408 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 420
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
    >>[LSHR_u64_u64_1573_inst] (tmp389_1544 type_cast_1572_wire_constant) (shr408_1574)   $flowthrough 
    $delay LSHR_u64_u64_1573_inst 0
    // 		conv411 := ($cast ($uint<8>) shr408 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 421
    // ($cast ($uint<8>) shr408 )
    # := [type_cast_1577_inst] (shr408_1574) (conv411_1578)    
    $buffering  $out type_cast_1577_inst conv411_1578 1
    $delay type_cast_1577_inst 1
    // 		$volatile shr414 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 422
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
    >>[LSHR_u64_u64_1583_inst] (tmp389_1544 type_cast_1582_wire_constant) (shr414_1584)   $flowthrough 
    $delay LSHR_u64_u64_1583_inst 0
    // 		conv417 := ($cast ($uint<8>) shr414 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 423
    // ($cast ($uint<8>) shr414 )
    # := [type_cast_1587_inst] (shr414_1584) (conv417_1588)    
    $buffering  $out type_cast_1587_inst conv417_1588 1
    $delay type_cast_1587_inst 1
    // 		$volatile shr420 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 424
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
    >>[LSHR_u64_u64_1593_inst] (tmp389_1544 type_cast_1592_wire_constant) (shr420_1594)   $flowthrough 
    $delay LSHR_u64_u64_1593_inst 0
    // 		conv423 := ($cast ($uint<8>) shr420 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 425
    // ($cast ($uint<8>) shr420 )
    # := [type_cast_1597_inst] (shr420_1594) (conv423_1598)    
    $buffering  $out type_cast_1597_inst conv423_1598 1
    $delay type_cast_1597_inst 1
    // 		$volatile shr426 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
    >>[LSHR_u64_u64_1603_inst] (tmp389_1544 type_cast_1602_wire_constant) (shr426_1604)   $flowthrough 
    $delay LSHR_u64_u64_1603_inst 0
    // 		conv429 := ($cast ($uint<8>) shr426 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 427
    // ($cast ($uint<8>) shr426 )
    # := [type_cast_1607_inst] (shr426_1604) (conv429_1608)    
    $buffering  $out type_cast_1607_inst conv429_1608 1
    $delay type_cast_1607_inst 1
    // 		$volatile shr432 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 428
    // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
    >>[LSHR_u64_u64_1613_inst] (tmp389_1544 type_cast_1612_wire_constant) (shr432_1614)   $flowthrough 
    $delay LSHR_u64_u64_1613_inst 0
    // 		conv435 := ($cast ($uint<8>) shr432 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 429
    // ($cast ($uint<8>) shr432 )
    # := [type_cast_1617_inst] (shr432_1614) (conv435_1618)    
    $buffering  $out type_cast_1617_inst conv435_1618 1
    $delay type_cast_1617_inst 1
    // 		Concat_output_pipe := conv435 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 430
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1619_inst]  (conv435_1618) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv429 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 431
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1622_inst]  (conv429_1608) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv423 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 432
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1625_inst]  (conv423_1598) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv417 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 433
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1628_inst]  (conv417_1588) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv411 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 434
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1631_inst]  (conv411_1578) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv405 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 435
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1634_inst]  (conv405_1568) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv399 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 436
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1637_inst]  (conv399_1558) (Concat_output_pipe) 
    // 		Concat_output_pipe := conv393 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 437
    // Concat_output_pipe
    $ioport $out [WPIPE_Concat_output_pipe_1640_inst]  (conv393_1548) (Concat_output_pipe) 
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 438
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1647_inst] (indvar_1526 type_cast_1646_wire_constant) (indvarx_xnext_1648)   $flowthrough 
    $delay ADD_u64_u64_1647_inst 0
    // 		$volatile exitcond1 := (indvarx_xnext == tmp475) $buffering 1
    //  file prog.linked.opt.aa, line 439
    // (indvarx_xnext == tmp475)
    ==[EQ_u64_u1_1652_inst] (indvarx_xnext_1648 tmp475_1523) (exitcond1_1653)   $flowthrough 
    $delay EQ_u64_u1_1652_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 440
    ==0? [if_stmt_1654_branch] (exitcond1_1653)
  }
  // end data-path
  // 		call := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 31
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_25_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_25_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_25_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_25_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_25_Update/ca)
  // 		conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 32
  // call
  // ($cast ($uint<32>) call )
  type_cast_30_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_30_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_30_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_30_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_30_Update/ca)
  // 		$volatile shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 33
  // (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv1
  // 		call2 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 34
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_39_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_39_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_39_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_39_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_39_Update/ca)
  // 		conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 35
  // call2
  // ($cast ($uint<32>) call2 )
  type_cast_43_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_43_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_43_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_43_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_43_Update/ca)
  // 		$volatile add := (shl | conv3) $buffering 1
  //  file prog.linked.opt.aa, line 36
  // (shl | conv3)
  // shl
  // conv3
  // 		call5 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 37
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_51_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_51_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_51_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_51_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_51_Update/ca)
  // 		conv8 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 38
  // call5
  // ($cast ($uint<32>) call5 )
  type_cast_55_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_55_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_55_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_55_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_55_Update/ca)
  // 		$volatile shl9 := (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 39
  // (conv8 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv8
  // 		call10 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 40
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_64_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_64_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_64_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_64_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_64_Update/ca)
  // 		conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 41
  // call10
  // ($cast ($uint<32>) call10 )
  type_cast_68_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_68_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_68_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_68_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_68_Update/ca)
  // 		$volatile add12 := (shl9 | conv11) $buffering 1
  //  file prog.linked.opt.aa, line 42
  // (shl9 | conv11)
  // shl9
  // conv11
  // 		call14 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 43
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_76_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_76_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_76_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_76_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_76_Update/ca)
  // 		conv17 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 44
  // call14
  // ($cast ($uint<32>) call14 )
  type_cast_80_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_80_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_80_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_80_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_80_Update/ca)
  // 		$volatile shl18 := (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 45
  // (conv17 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv17
  // 		call19 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 46
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_89_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_89_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_89_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_89_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_89_Update/ca)
  // 		conv20 := ($cast ($uint<32>) call19 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 47
  // call19
  // ($cast ($uint<32>) call19 )
  type_cast_93_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_93_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_93_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_93_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_93_Update/ca)
  // 		$volatile add21 := (shl18 | conv20) $buffering 1
  //  file prog.linked.opt.aa, line 48
  // (shl18 | conv20)
  // shl18
  // conv20
  // 		call23 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 49
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_101_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_101_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_101_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_101_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_101_Update/ca)
  // 		conv26 := ($cast ($uint<32>) call23 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 50
  // call23
  // ($cast ($uint<32>) call23 )
  type_cast_105_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_105_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_105_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_105_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_105_Update/ca)
  // 		$volatile shl27 := (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 51
  // (conv26 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv26
  // 		call28 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 52
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_114_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_114_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_114_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_114_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_114_Update/ca)
  // 		conv29 := ($cast ($uint<32>) call28 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 53
  // call28
  // ($cast ($uint<32>) call28 )
  type_cast_118_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_118_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_118_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_118_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_118_Update/ca)
  // 		$volatile add30 := (shl27 | conv29) $buffering 1
  //  file prog.linked.opt.aa, line 54
  // (shl27 | conv29)
  // shl27
  // conv29
  // 		call32 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 55
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_126_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_126_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_126_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_126_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_126_Update/ca)
  // 		conv35 := ($cast ($uint<32>) call32 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 56
  // call32
  // ($cast ($uint<32>) call32 )
  type_cast_130_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_130_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_130_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_130_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_130_Update/ca)
  // 		$volatile shl36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 57
  // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv35
  // 		call37 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 58
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_139_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_139_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_139_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_139_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_139_Update/ca)
  // 		conv38 := ($cast ($uint<32>) call37 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 59
  // call37
  // ($cast ($uint<32>) call37 )
  type_cast_143_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_143_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_143_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_143_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_143_Update/ca)
  // 		$volatile add39 := (shl36 | conv38) $buffering 1
  //  file prog.linked.opt.aa, line 60
  // (shl36 | conv38)
  // shl36
  // conv38
  // 		call41 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 61
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_151_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_151_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_151_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_151_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_151_Update/ca)
  // 		conv44 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 62
  // call41
  // ($cast ($uint<32>) call41 )
  type_cast_155_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_155_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_155_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_155_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_155_Update/ca)
  // 		$volatile shl45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 63
  // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv44
  // 		call46 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 64
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_164_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_164_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_164_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_164_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_164_Update/ca)
  // 		conv47 := ($cast ($uint<32>) call46 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 65
  // call46
  // ($cast ($uint<32>) call46 )
  type_cast_168_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_168_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_168_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_168_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_168_Update/ca)
  // 		$volatile add48 := (shl45 | conv47) $buffering 1
  //  file prog.linked.opt.aa, line 66
  // (shl45 | conv47)
  // shl45
  // conv47
  // 		call50 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 67
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_176_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_176_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_176_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_176_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_176_Update/ca)
  // 		conv53 := ($cast ($uint<32>) call50 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 68
  // call50
  // ($cast ($uint<32>) call50 )
  type_cast_180_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_180_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_180_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_180_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_180_Update/ca)
  // 		$volatile shl54 := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 69
  // (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv53
  // 		call55 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 70
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_189_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_189_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_189_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_189_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_189_Update/ca)
  // 		conv56 := ($cast ($uint<32>) call55 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 71
  // call55
  // ($cast ($uint<32>) call55 )
  type_cast_193_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_193_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_193_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_193_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_193_Update/ca)
  // 		$volatile add57 := (shl54 | conv56) $buffering 1
  //  file prog.linked.opt.aa, line 72
  // (shl54 | conv56)
  // shl54
  // conv56
  // 		call59 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 73
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_201_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_201_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_201_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_201_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_201_Update/ca)
  // 		conv62 := ($cast ($uint<32>) call59 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 74
  // call59
  // ($cast ($uint<32>) call59 )
  type_cast_205_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_205_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_205_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_205_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_205_Update/ca)
  // 		$volatile shl63 := (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 75
  // (conv62 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv62
  // 		call64 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 76
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_214_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_214_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_214_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_214_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_214_Update/ca)
  // 		conv65 := ($cast ($uint<32>) call64 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 77
  // call64
  // ($cast ($uint<32>) call64 )
  type_cast_218_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_218_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_218_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_218_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_218_Update/ca)
  // 		$volatile add66 := (shl63 | conv65) $buffering 1
  //  file prog.linked.opt.aa, line 78
  // (shl63 | conv65)
  // shl63
  // conv65
  // 		call68 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 79
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_226_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_226_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_226_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_226_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_226_Update/ca)
  // 		conv71 := ($cast ($uint<32>) call68 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 80
  // call68
  // ($cast ($uint<32>) call68 )
  type_cast_230_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_230_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_230_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_230_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_230_Update/ca)
  // 		$volatile shl72 := (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 81
  // (conv71 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  ))
  // conv71
  // 		call73 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 82
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_239_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_239_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_239_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_239_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/RPIPE_Concat_input_pipe_239_Update/ca)
  // 		conv74 := ($cast ($uint<32>) call73 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 83
  // call73
  // ($cast ($uint<32>) call73 )
  type_cast_243_inst <=> (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_243_Sample/rr branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_243_Update/cr) (branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_243_Sample/ra branch_block_stmt_23/assign_stmt_26_to_assign_stmt_307/type_cast_243_Update/ca)
  // 		$volatile add75 := (shl72 | conv74) $buffering 1
  //  file prog.linked.opt.aa, line 84
  // (shl72 | conv74)
  // shl72
  // conv74
  // 		$volatile mul := (add12 * add) $buffering 1
  //  file prog.linked.opt.aa, line 85
  // (add12 * add)
  // add12
  // add
  // 		$volatile mul85 := (mul * add21) $buffering 1
  //  file prog.linked.opt.aa, line 86
  // (mul * add21)
  // mul
  // add21
  // 		$volatile mul91 := (add39 * add30) $buffering 1
  //  file prog.linked.opt.aa, line 87
  // (add39 * add30)
  // add39
  // add30
  // 		$volatile mul94 := (mul91 * add48) $buffering 1
  //  file prog.linked.opt.aa, line 88
  // (mul91 * add48)
  // mul91
  // add48
  // 		$volatile mul100 := (add66 * add57) $buffering 1
  //  file prog.linked.opt.aa, line 89
  // (add66 * add57)
  // add66
  // add57
  // 		$volatile mul103 := (mul100 * add75) $buffering 1
  //  file prog.linked.opt.aa, line 90
  // (mul100 * add75)
  // mul100
  // add75
  // 		$volatile mul109 := (add21 * add12) $buffering 1
  //  file prog.linked.opt.aa, line 91
  // (add21 * add12)
  // add21
  // add12
  // 		$volatile shr457 := (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
  //  file prog.linked.opt.aa, line 92
  // (mul109 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
  // mul109
  // 		$volatile mul116 := (add48 * add39) $buffering 1
  //  file prog.linked.opt.aa, line 93
  // (add48 * add39)
  // add48
  // add39
  // 		$volatile shr117458 := (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
  //  file prog.linked.opt.aa, line 94
  // (mul116 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
  // mul116
  // 		$volatile cmp467 := (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
  //  file prog.linked.opt.aa, line 95
  // (mul85 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  // mul85
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 96
  if_stmt_308_branch <=> (branch_block_stmt_23/if_stmt_308_eval_test/branch_req) (branch_block_stmt_23/if_stmt_308_else_link/else_choice_transition branch_block_stmt_23/if_stmt_308_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 101
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 104
  // 		$volatile cmp175463 := (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
  //  file prog.linked.opt.aa, line 106
  // (mul94 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  // mul94
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 107
  if_stmt_323_branch <=> (branch_block_stmt_23/if_stmt_323_eval_test/branch_req) (branch_block_stmt_23/if_stmt_323_else_link/else_choice_transition branch_block_stmt_23/if_stmt_323_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 112
  // 		$volatile tmp492 := (add * add12) $buffering 1
  //  file prog.linked.opt.aa, line 114
  // (add * add12)
  // add
  // add12
  // 		$volatile tmp494 := (tmp492 * add21) $buffering 1
  //  file prog.linked.opt.aa, line 115
  // (tmp492 * add21)
  // tmp492
  // add21
  // 		$volatile tmp495 := (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
  //  file prog.linked.opt.aa, line 116
  // (tmp494 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
  // tmp494
  // 		$volatile tmp496 := (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 117
  // (tmp495 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // tmp495
  // 		$volatile tmp495x_xop := (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 118
  // (tmp495 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // tmp495
  // 		iNsTr_19 := ($cast ($uint<64>) tmp495x_xop ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 119
  // tmp495x_xop
  // ($cast ($uint<64>) tmp495x_xop )
  type_cast_360_inst <=> (branch_block_stmt_23/assign_stmt_334_to_assign_stmt_374/type_cast_360_Sample/rr branch_block_stmt_23/assign_stmt_334_to_assign_stmt_374/type_cast_360_Update/cr) (branch_block_stmt_23/assign_stmt_334_to_assign_stmt_374/type_cast_360_Sample/ra branch_block_stmt_23/assign_stmt_334_to_assign_stmt_374/type_cast_360_Update/ca)
  // 		$volatile xx_xop503 := (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 120
  // (iNsTr_19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_19
  // 		$volatile tmp500 := ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 121
  // tmp496
  // xx_xop503
  // ( $mux tmp496 xx_xop503  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 123
  // ($cast ($uint<64>) indvarx_xnext490 )
  type_cast_383_inst <=> (branch_block_stmt_23/forx_xbody_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_sources/type_cast_383/SplitProtocol/Sample/rr branch_block_stmt_23/forx_xbody_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_sources/type_cast_383/SplitProtocol/Update/cr) (branch_block_stmt_23/forx_xbody_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_sources/type_cast_383/SplitProtocol/Sample/ra branch_block_stmt_23/forx_xbody_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_sources/type_cast_383/SplitProtocol/Update/ca)
  phi_stmt_377 <=> (branch_block_stmt_23/bbx_xnph469_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_req branch_block_stmt_23/forx_xbody_forx_xbody_PhiReq/phi_stmt_377/phi_stmt_377_req) (branch_block_stmt_23/merge_stmt_376_PhiAck/phi_stmt_377_ack)
  // 		arrayidx := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar489]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 127
  // indvar489
  array_obj_ref_389_index_1_resize <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_index_resize_1/index_resize_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_index_resize_1/index_resize_ack)
  array_obj_ref_389_index_1_rename <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_index_scale_1/scale_rename_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_index_scale_1/scale_rename_ack)
  array_obj_ref_389_index_offset <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_final_index_sum_regn_Sample/req branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_final_index_sum_regn_Update/req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_final_index_sum_regn_Sample/ack branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_final_index_sum_regn_Update/ack)
  array_obj_ref_389_root_address_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/array_obj_ref_389_base_plus_offset/sum_rename_ack)
  addr_of_390_final_reg <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/addr_of_390_request/req branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/addr_of_390_complete/req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/addr_of_390_request/ack branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/addr_of_390_complete/ack)
  // 		call124 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 128
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_393_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_393_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_393_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_393_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_393_Update/ca)
  // 		conv125 := ($cast ($uint<64>) call124 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 129
  // call124
  // ($cast ($uint<64>) call124 )
  type_cast_397_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_397_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_397_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_397_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_397_Update/ca)
  // 		$volatile shl127 := (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 130
  // (conv125 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // conv125
  // 		call128 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 131
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_406_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_406_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_406_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_406_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_406_Update/ca)
  // 		conv130 := ($cast ($uint<64>) call128 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 132
  // call128
  // ($cast ($uint<64>) call128 )
  type_cast_410_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_410_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_410_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_410_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_410_Update/ca)
  // 		$volatile add131 := (shl127 | conv130) $buffering 1
  //  file prog.linked.opt.aa, line 133
  // (shl127 | conv130)
  // shl127
  // conv130
  // 		$volatile shl133 := (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 134
  // (add131 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add131
  // 		call134 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 135
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_424_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_424_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_424_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_424_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_424_Update/ca)
  // 		conv136 := ($cast ($uint<64>) call134 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 136
  // call134
  // ($cast ($uint<64>) call134 )
  type_cast_428_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_428_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_428_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_428_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_428_Update/ca)
  // 		$volatile add137 := (shl133 | conv136) $buffering 1
  //  file prog.linked.opt.aa, line 137
  // (shl133 | conv136)
  // shl133
  // conv136
  // 		$volatile shl139 := (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 138
  // (add137 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add137
  // 		call140 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 139
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_442_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_442_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_442_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_442_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_442_Update/ca)
  // 		conv142 := ($cast ($uint<64>) call140 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 140
  // call140
  // ($cast ($uint<64>) call140 )
  type_cast_446_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_446_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_446_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_446_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_446_Update/ca)
  // 		$volatile add143 := (shl139 | conv142) $buffering 1
  //  file prog.linked.opt.aa, line 141
  // (shl139 | conv142)
  // shl139
  // conv142
  // 		$volatile shl145 := (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 142
  // (add143 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add143
  // 		call146 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 143
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_460_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_460_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_460_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_460_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_460_Update/ca)
  // 		conv148 := ($cast ($uint<64>) call146 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 144
  // call146
  // ($cast ($uint<64>) call146 )
  type_cast_464_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_464_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_464_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_464_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_464_Update/ca)
  // 		$volatile add149 := (shl145 | conv148) $buffering 1
  //  file prog.linked.opt.aa, line 145
  // (shl145 | conv148)
  // shl145
  // conv148
  // 		$volatile shl151 := (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 146
  // (add149 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add149
  // 		call152 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 147
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_478_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_478_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_478_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_478_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_478_Update/ca)
  // 		conv154 := ($cast ($uint<64>) call152 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 148
  // call152
  // ($cast ($uint<64>) call152 )
  type_cast_482_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_482_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_482_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_482_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_482_Update/ca)
  // 		$volatile add155 := (shl151 | conv154) $buffering 1
  //  file prog.linked.opt.aa, line 149
  // (shl151 | conv154)
  // shl151
  // conv154
  // 		$volatile shl157 := (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 150
  // (add155 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add155
  // 		call158 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 151
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_496_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_496_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_496_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_496_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_496_Update/ca)
  // 		conv160 := ($cast ($uint<64>) call158 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 152
  // call158
  // ($cast ($uint<64>) call158 )
  type_cast_500_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_500_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_500_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_500_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_500_Update/ca)
  // 		$volatile add161 := (shl157 | conv160) $buffering 1
  //  file prog.linked.opt.aa, line 153
  // (shl157 | conv160)
  // shl157
  // conv160
  // 		$volatile shl163 := (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 154
  // (add161 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add161
  // 		call164 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 155
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_514_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_514_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_514_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_514_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/RPIPE_Concat_input_pipe_514_Update/ca)
  // 		conv166 := ($cast ($uint<64>) call164 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 156
  // call164
  // ($cast ($uint<64>) call164 )
  type_cast_518_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_518_Sample/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_518_Update/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_518_Sample/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/type_cast_518_Update/ca)
  // 		$volatile add167 := (shl163 | conv166) $buffering 1
  //  file prog.linked.opt.aa, line 157
  // (shl163 | conv166)
  // shl163
  // conv166
  // 		->(arrayidx) := add167 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 158
  // add167
  // arrayidx
  ptr_deref_526_base_resize <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_base_addr_resize/base_resize_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_base_addr_resize/base_resize_ack)
  ptr_deref_526_root_address_inst <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_base_plus_offset/sum_rename_ack)
  ptr_deref_526_addr_0 <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_word_addrgen/root_register_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_word_addrgen/root_register_ack)
  ptr_deref_526_gather_scatter <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Sample/ptr_deref_526_Split/split_req) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Sample/ptr_deref_526_Split/split_ack)
  ptr_deref_526_store_0 <=> (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Sample/word_access_start/word_0/rr branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Sample/word_access_start/word_0/ra branch_block_stmt_23/assign_stmt_391_to_assign_stmt_539/ptr_deref_526_Update/word_access_complete/word_0/ca)
  // 		$volatile indvarx_xnext490 := (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 159
  // (indvar489 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar489
  // 		$volatile exitcond2 := (indvarx_xnext490 == tmp500) $buffering 1
  //  file prog.linked.opt.aa, line 160
  // (indvarx_xnext490 == tmp500)
  // indvarx_xnext490
  // tmp500
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 161
  if_stmt_540_branch <=> (branch_block_stmt_23/if_stmt_540_eval_test/branch_req) (branch_block_stmt_23/if_stmt_540_else_link/else_choice_transition branch_block_stmt_23/if_stmt_540_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 166
  // 		$volatile tmp479 := (add30 * add39) $buffering 1
  //  file prog.linked.opt.aa, line 168
  // (add30 * add39)
  // add30
  // add39
  // 		$volatile tmp481 := (tmp479 * add48) $buffering 1
  //  file prog.linked.opt.aa, line 169
  // (tmp479 * add48)
  // tmp479
  // add48
  // 		$volatile tmp482 := (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
  //  file prog.linked.opt.aa, line 170
  // (tmp481 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
  // tmp481
  // 		$volatile tmp483 := (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 171
  // (tmp482 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // tmp482
  // 		$volatile tmp482x_xop := (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 172
  // (tmp482 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // tmp482
  // 		iNsTr_32 := ($cast ($uint<64>) tmp482x_xop ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 173
  // tmp482x_xop
  // ($cast ($uint<64>) tmp482x_xop )
  type_cast_577_inst <=> (branch_block_stmt_23/assign_stmt_551_to_assign_stmt_591/type_cast_577_Sample/rr branch_block_stmt_23/assign_stmt_551_to_assign_stmt_591/type_cast_577_Update/cr) (branch_block_stmt_23/assign_stmt_551_to_assign_stmt_591/type_cast_577_Sample/ra branch_block_stmt_23/assign_stmt_551_to_assign_stmt_591/type_cast_577_Update/ca)
  // 		$volatile xx_xop502 := (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 174
  // (iNsTr_32 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_32
  // 		$volatile tmp487 := ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 175
  // tmp483
  // xx_xop502
  // ( $mux tmp483 xx_xop502  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 177
  // ($cast ($uint<64>) indvarx_xnext477 )
  type_cast_600_inst <=> (branch_block_stmt_23/forx_xbody177_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_sources/type_cast_600/SplitProtocol/Sample/rr branch_block_stmt_23/forx_xbody177_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_sources/type_cast_600/SplitProtocol/Update/cr) (branch_block_stmt_23/forx_xbody177_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_sources/type_cast_600/SplitProtocol/Sample/ra branch_block_stmt_23/forx_xbody177_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_sources/type_cast_600/SplitProtocol/Update/ca)
  phi_stmt_594 <=> (branch_block_stmt_23/bbx_xnph465_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_req branch_block_stmt_23/forx_xbody177_forx_xbody177_PhiReq/phi_stmt_594/phi_stmt_594_req) (branch_block_stmt_23/merge_stmt_593_PhiAck/phi_stmt_594_ack)
  // 		arrayidx227 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar476]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 181
  // indvar476
  array_obj_ref_606_index_1_resize <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_index_resize_1/index_resize_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_index_resize_1/index_resize_ack)
  array_obj_ref_606_index_1_rename <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_index_scale_1/scale_rename_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_index_scale_1/scale_rename_ack)
  array_obj_ref_606_index_offset <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_final_index_sum_regn_Sample/req branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_final_index_sum_regn_Update/req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_final_index_sum_regn_Sample/ack branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_final_index_sum_regn_Update/ack)
  array_obj_ref_606_root_address_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/array_obj_ref_606_base_plus_offset/sum_rename_ack)
  addr_of_607_final_reg <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/addr_of_607_request/req branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/addr_of_607_complete/req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/addr_of_607_request/ack branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/addr_of_607_complete/ack)
  // 		call180 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 182
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_610_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_610_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_610_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_610_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_610_Update/ca)
  // 		conv181 := ($cast ($uint<64>) call180 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 183
  // call180
  // ($cast ($uint<64>) call180 )
  type_cast_614_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_614_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_614_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_614_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_614_Update/ca)
  // 		$volatile shl183 := (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 184
  // (conv181 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // conv181
  // 		call184 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 185
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_623_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_623_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_623_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_623_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_623_Update/ca)
  // 		conv186 := ($cast ($uint<64>) call184 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 186
  // call184
  // ($cast ($uint<64>) call184 )
  type_cast_627_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_627_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_627_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_627_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_627_Update/ca)
  // 		$volatile add187 := (shl183 | conv186) $buffering 1
  //  file prog.linked.opt.aa, line 187
  // (shl183 | conv186)
  // shl183
  // conv186
  // 		$volatile shl189 := (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 188
  // (add187 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add187
  // 		call190 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 189
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_641_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_641_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_641_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_641_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_641_Update/ca)
  // 		conv192 := ($cast ($uint<64>) call190 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 190
  // call190
  // ($cast ($uint<64>) call190 )
  type_cast_645_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_645_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_645_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_645_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_645_Update/ca)
  // 		$volatile add193 := (shl189 | conv192) $buffering 1
  //  file prog.linked.opt.aa, line 191
  // (shl189 | conv192)
  // shl189
  // conv192
  // 		$volatile shl195 := (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 192
  // (add193 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add193
  // 		call196 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 193
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_659_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_659_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_659_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_659_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_659_Update/ca)
  // 		conv198 := ($cast ($uint<64>) call196 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 194
  // call196
  // ($cast ($uint<64>) call196 )
  type_cast_663_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_663_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_663_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_663_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_663_Update/ca)
  // 		$volatile add199 := (shl195 | conv198) $buffering 1
  //  file prog.linked.opt.aa, line 195
  // (shl195 | conv198)
  // shl195
  // conv198
  // 		$volatile shl201 := (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 196
  // (add199 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add199
  // 		call202 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 197
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_677_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_677_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_677_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_677_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_677_Update/ca)
  // 		conv204 := ($cast ($uint<64>) call202 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 198
  // call202
  // ($cast ($uint<64>) call202 )
  type_cast_681_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_681_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_681_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_681_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_681_Update/ca)
  // 		$volatile add205 := (shl201 | conv204) $buffering 1
  //  file prog.linked.opt.aa, line 199
  // (shl201 | conv204)
  // shl201
  // conv204
  // 		$volatile shl207 := (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 200
  // (add205 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add205
  // 		call208 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 201
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_695_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_695_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_695_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_695_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_695_Update/ca)
  // 		conv210 := ($cast ($uint<64>) call208 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 202
  // call208
  // ($cast ($uint<64>) call208 )
  type_cast_699_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_699_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_699_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_699_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_699_Update/ca)
  // 		$volatile add211 := (shl207 | conv210) $buffering 1
  //  file prog.linked.opt.aa, line 203
  // (shl207 | conv210)
  // shl207
  // conv210
  // 		$volatile shl213 := (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 204
  // (add211 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add211
  // 		call214 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 205
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_713_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_713_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_713_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_713_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_713_Update/ca)
  // 		conv216 := ($cast ($uint<64>) call214 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 206
  // call214
  // ($cast ($uint<64>) call214 )
  type_cast_717_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_717_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_717_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_717_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_717_Update/ca)
  // 		$volatile add217 := (shl213 | conv216) $buffering 1
  //  file prog.linked.opt.aa, line 207
  // (shl213 | conv216)
  // shl213
  // conv216
  // 		$volatile shl219 := (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 208
  // (add217 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add217
  // 		call220 := Concat_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 209
  // Concat_input_pipe
  RPIPE_Concat_input_pipe_731_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_731_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_731_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_731_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/RPIPE_Concat_input_pipe_731_Update/ca)
  // 		conv222 := ($cast ($uint<64>) call220 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 210
  // call220
  // ($cast ($uint<64>) call220 )
  type_cast_735_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_735_Sample/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_735_Update/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_735_Sample/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/type_cast_735_Update/ca)
  // 		$volatile add223 := (shl219 | conv222) $buffering 1
  //  file prog.linked.opt.aa, line 211
  // (shl219 | conv222)
  // shl219
  // conv222
  // 		->(arrayidx227) := add223 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 212
  // add223
  // arrayidx227
  ptr_deref_743_base_resize <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_base_addr_resize/base_resize_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_base_addr_resize/base_resize_ack)
  ptr_deref_743_root_address_inst <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_base_plus_offset/sum_rename_ack)
  ptr_deref_743_addr_0 <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_word_addrgen/root_register_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_word_addrgen/root_register_ack)
  ptr_deref_743_gather_scatter <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Sample/ptr_deref_743_Split/split_req) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Sample/ptr_deref_743_Split/split_ack)
  ptr_deref_743_store_0 <=> (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Sample/word_access_start/word_0/rr branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Sample/word_access_start/word_0/ra branch_block_stmt_23/assign_stmt_608_to_assign_stmt_756/ptr_deref_743_Update/word_access_complete/word_0/ca)
  // 		$volatile indvarx_xnext477 := (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 213
  // (indvar476 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar476
  // 		$volatile exitcond := (indvarx_xnext477 == tmp487) $buffering 1
  //  file prog.linked.opt.aa, line 214
  // (indvarx_xnext477 == tmp487)
  // indvarx_xnext477
  // tmp487
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 215
  if_stmt_757_branch <=> (branch_block_stmt_23/if_stmt_757_eval_test/branch_req) (branch_block_stmt_23/if_stmt_757_else_link/else_choice_transition branch_block_stmt_23/if_stmt_757_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 220
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 223
  // 		$call timer () (call233 ) 
  //  file prog.linked.opt.aa, line 226
  call_stmt_768_call <=> (branch_block_stmt_23/call_stmt_768/call_stmt_768_Sample/crr branch_block_stmt_23/call_stmt_768/call_stmt_768_Update/ccr) (branch_block_stmt_23/call_stmt_768/call_stmt_768_Sample/cra branch_block_stmt_23/call_stmt_768/call_stmt_768_Update/cca)
  // 		$volatile conv243 := (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 228
  // (shr457 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  // shr457
  // 		$volatile conv268 := (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 229
  // (shr117458 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  // shr117458
  // 		$volatile shr304 := (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1
  //  file prog.linked.opt.aa, line 230
  // (mul103 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
  // mul103
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 232
  // In merge, skipped links for constant phi phi_stmt_790
  // In merge, skipped links for constant phi phi_stmt_796
  // In merge, skipped links for constant phi phi_stmt_801
  // In merge, skipped links for constant phi phi_stmt_806
  // In merge, skipped links for constant phi phi_stmt_811
  // CP-DP links for do-while  do_while_stmt_817
  //  file prog.linked.opt.aa, line 244
  phi_stmt_819 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_819_loopback_sample_req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_819_entry_sample_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_819_phi_mux_ack)
  // add_outx_x2504
  // ($cast ($uint<16>) add_outx_x2504 )
  type_cast_822_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_822_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_822_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_822_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_822_Update/ca)
  phi_stmt_824 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_824_loopback_sample_req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_824_entry_sample_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_824_phi_mux_ack)
  // add_inp1x_x0
  // ($cast ($uint<16>) add_inp1x_x0 )
  type_cast_827_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_827_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_827_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_827_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_827_Update/ca)
  phi_stmt_829 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_829_loopback_sample_req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_829_entry_sample_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_829_phi_mux_ack)
  // add_inp2x_x0506
  // ($cast ($uint<16>) add_inp2x_x0506 )
  type_cast_832_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_832_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_832_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_832_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_832_Update/ca)
  phi_stmt_834 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_834_loopback_sample_req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_834_entry_sample_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_834_phi_mux_ack)
  // count_inp1x_x2
  // ($cast ($uint<16>) count_inp1x_x2 )
  type_cast_837_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_837_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_837_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_837_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_837_Update/ca)
  phi_stmt_839 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_839_loopback_sample_req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_839_entry_sample_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/phi_stmt_839_phi_mux_ack)
  // count_inp2x_x2
  // ($cast ($uint<16>) count_inp2x_x2 )
  type_cast_842_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_842_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_842_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_842_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_842_Update/ca)
  // 			conv241 := ($cast ($uint<32>) count_inp1x_x1 ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 258
  // count_inp1x_x1
  // ($cast ($uint<32>) count_inp1x_x1 )
  type_cast_847_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_847_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_847_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_847_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_847_Update/ca)
  // 			$volatile cmp244 := (conv241 < conv243) $buffering 1
  //  file prog.linked.opt.aa, line 259
  // (conv241 < conv243)
  // conv241
  // conv243
  // 			$volatile whilex_xbody_ifx_xthen_taken := cmp244 $buffering 1
  //  file prog.linked.opt.aa, line 260
  // cmp244
  // 			$volatile whilex_xbody_ifx_xend_taken := ( ~ cmp244 ) $buffering 1
  //  file prog.linked.opt.aa, line 261
  // cmp244
  // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
  //  file prog.linked.opt.aa, line 262
  // whilex_xbody_ifx_xthen_taken
  // 			add_inp1x_x1_866_delayed_1_0 := add_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 263
  // add_inp1x_x1
  W_add_inp1x_x1_866_delayed_1_0_864_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_866_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_866_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_866_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_866_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) idxprom247 := ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 264
  // add_inp1x_x1_866_delayed_1_0
  // ($cast ($uint<64>) add_inp1x_x1_866_delayed_1_0 )
  type_cast_870_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_870_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_870_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_870_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_870_Update/ca)
  // 			arrayidx248 := @(input_1[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom247]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 265
  // idxprom247
  array_obj_ref_876_index_1_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_index_resize_1/index_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_index_resize_1/index_resize_ack)
  array_obj_ref_876_index_1_rename <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_index_scale_1/scale_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_index_scale_1/scale_rename_ack)
  array_obj_ref_876_index_offset <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_final_index_sum_regn_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_final_index_sum_regn_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_final_index_sum_regn_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_final_index_sum_regn_Update/ack)
  array_obj_ref_876_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_876_base_plus_offset/sum_rename_ack)
  addr_of_877_final_reg <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_877_request/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_877_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_877_request/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_877_complete/ack)
  // 			ifx_xthen_exec_guard_876_delayed_7_0 := ifx_xthen_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
  //  file prog.linked.opt.aa, line 266
  // ifx_xthen_exec_guard
  W_ifx_xthen_exec_guard_876_delayed_7_0_879_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_881_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_881_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_881_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_881_Update/ack)
  // 			$guard (ifx_xthen_exec_guard_876_delayed_7_0) tmp249 := ->(arrayidx248) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 267
  // arrayidx248
  ptr_deref_885_base_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_base_addr_resize/base_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_base_addr_resize/base_resize_ack)
  ptr_deref_885_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_base_plus_offset/sum_rename_ack)
  ptr_deref_885_addr_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_word_addrgen/root_register_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_word_addrgen/root_register_ack)
  ptr_deref_885_gather_scatter <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Update/ptr_deref_885_Merge/merge_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Update/ptr_deref_885_Merge/merge_ack)
  ptr_deref_885_load_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Sample/word_access_start/word_0/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Sample/word_access_start/word_0/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_885_Update/word_access_complete/word_0/ca)
  // 			add_outx_x1_883_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 268
  // add_outx_x1
  W_add_outx_x1_883_delayed_1_0_887_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_889_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_889_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_889_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_889_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) idxprom251 := ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 269
  // add_outx_x1_883_delayed_1_0
  // ($cast ($uint<64>) add_outx_x1_883_delayed_1_0 )
  type_cast_893_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_893_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_893_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_893_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_893_Update/ca)
  // 			arrayidx252 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom251]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 270
  // idxprom251
  array_obj_ref_899_index_1_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_index_resize_1/index_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_index_resize_1/index_resize_ack)
  array_obj_ref_899_index_1_rename <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_index_scale_1/scale_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_index_scale_1/scale_rename_ack)
  array_obj_ref_899_index_offset <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_final_index_sum_regn_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_final_index_sum_regn_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_final_index_sum_regn_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_final_index_sum_regn_Update/ack)
  array_obj_ref_899_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_899_base_plus_offset/sum_rename_ack)
  addr_of_900_final_reg <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_900_request/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_900_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_900_request/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_900_complete/ack)
  // 			ifx_xthen_exec_guard_893_delayed_13_0 := ifx_xthen_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
  //  file prog.linked.opt.aa, line 271
  // ifx_xthen_exec_guard
  W_ifx_xthen_exec_guard_893_delayed_13_0_902_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_904_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_904_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_904_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_904_Update/ack)
  // 			arrayidx252_894_delayed_6_0 := arrayidx252 $buffering 6 $cut_through // bits of buffering = 192. 
  //  file prog.linked.opt.aa, line 272
  // arrayidx252
  W_arrayidx252_894_delayed_6_0_905_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_907_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_907_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_907_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_907_Update/ack)
  // 			$guard (ifx_xthen_exec_guard_893_delayed_13_0) ->(arrayidx252_894_delayed_6_0) := tmp249 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 273
  // tmp249
  // arrayidx252_894_delayed_6_0
  ptr_deref_910_base_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_base_addr_resize/base_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_base_addr_resize/base_resize_ack)
  ptr_deref_910_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_base_plus_offset/sum_rename_ack)
  ptr_deref_910_addr_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_word_addrgen/root_register_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_word_addrgen/root_register_ack)
  ptr_deref_910_gather_scatter <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Sample/ptr_deref_910_Split/split_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Sample/ptr_deref_910_Split/split_ack)
  ptr_deref_910_store_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Sample/word_access_start/word_0/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Sample/word_access_start/word_0/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_910_Update/word_access_complete/word_0/ca)
  // 			count_inp1x_x1_900_delayed_1_0 := count_inp1x_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 274
  // count_inp1x_x1
  W_count_inp1x_x1_900_delayed_1_0_913_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_915_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_915_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_915_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_915_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile inc254 := (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 275
  // (count_inp1x_x1_900_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // count_inp1x_x1_900_delayed_1_0
  // 			add_inp1x_x1_907_delayed_1_0 := add_inp1x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 276
  // add_inp1x_x1
  W_add_inp1x_x1_907_delayed_1_0_923_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_925_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_925_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_925_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_925_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile inc256 := (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 277
  // (add_inp1x_x1_907_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // add_inp1x_x1_907_delayed_1_0
  // 			add_outx_x1_914_delayed_1_0 := add_outx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 278
  // add_outx_x1
  W_add_outx_x1_914_delayed_1_0_933_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_935_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_935_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_935_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_935_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile inc258 := (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 279
  // (add_outx_x1_914_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // add_outx_x1_914_delayed_1_0
  // 			$volatile ifx_xthen_ifx_xend_taken := ifx_xthen_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 280
  // ifx_xthen_exec_guard
  // 			$volatile ifx_xend_exec_guard := (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken) $buffering 1
  //  file prog.linked.opt.aa, line 281
  // (ifx_xthen_ifx_xend_taken | whilex_xbody_ifx_xend_taken)
  // ifx_xthen_ifx_xend_taken
  // whilex_xbody_ifx_xend_taken
  // 			type_cast_933_933_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 282
  // add_outx_x1
  // ($bitcast ($uint<16>) add_outx_x1 )
  type_cast_953_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_953_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_953_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_953_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_953_Update/ca)
  // 			$volatile add_outx_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 283
  // ifx_xthen_ifx_xend_taken
  // inc258
  // whilex_xbody_ifx_xend_taken
  // type_cast_933_933_delayed_1_0
  // ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc258 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_933_933_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			type_cast_945_945_delayed_1_0 := ($bitcast ($uint<16>) add_inp1x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 284
  // add_inp1x_x1
  // ($bitcast ($uint<16>) add_inp1x_x1 )
  type_cast_968_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_968_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_968_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_968_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_968_Update/ca)
  // 			$volatile add_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 285
  // ifx_xthen_ifx_xend_taken
  // inc256
  // whilex_xbody_ifx_xend_taken
  // type_cast_945_945_delayed_1_0
  // ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc256 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_945_945_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			type_cast_957_957_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x1 ) $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 286
  // count_inp1x_x1
  // ($bitcast ($uint<16>) count_inp1x_x1 )
  type_cast_983_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_983_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_983_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_983_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_983_Update/ca)
  // 			$volatile count_inp1x_x0 := ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 287
  // ifx_xthen_ifx_xend_taken
  // inc254
  // whilex_xbody_ifx_xend_taken
  // type_cast_957_957_delayed_1_0
  // ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen_ifx_xend_taken ($bitcast ($uint<16>) inc254 )  ( $mux whilex_xbody_ifx_xend_taken type_cast_957_957_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			$guard (ifx_xend_exec_guard) conv260 := ($cast ($uint<32>) count_inp1x_x0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 288
  // count_inp1x_x0
  // ($cast ($uint<32>) count_inp1x_x0 )
  type_cast_999_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_999_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_999_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_999_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_999_Update/ca)
  // 			ifx_xend_exec_guard_968_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 289
  // ifx_xend_exec_guard
  W_ifx_xend_exec_guard_968_delayed_1_0_1001_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1003_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1003_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1003_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1003_Update/ack)
  // 			$guard (ifx_xend_exec_guard_968_delayed_1_0) $volatile cmp263 := (conv260 == conv243) $buffering 1
  //  file prog.linked.opt.aa, line 290
  // (conv260 == conv243)
  // conv260
  // conv243
  // 			ifx_xend_exec_guard_975_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 291
  // ifx_xend_exec_guard
  W_ifx_xend_exec_guard_975_delayed_1_0_1010_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1012_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1012_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1012_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1012_Update/ack)
  // 			$volatile ifx_xend_landx_xlhsx_xtrue_taken := (ifx_xend_exec_guard_975_delayed_1_0 & cmp263) $buffering 1
  //  file prog.linked.opt.aa, line 292
  // (ifx_xend_exec_guard_975_delayed_1_0 & cmp263)
  // ifx_xend_exec_guard_975_delayed_1_0
  // cmp263
  // 			ifx_xend_exec_guard_980_delayed_1_0 := ifx_xend_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 293
  // ifx_xend_exec_guard
  W_ifx_xend_exec_guard_980_delayed_1_0_1018_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1020_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1020_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1020_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1020_Update/ack)
  // 			$volatile ifx_xend_ifx_xend300_taken := (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 )) $buffering 1
  //  file prog.linked.opt.aa, line 294
  // (ifx_xend_exec_guard_980_delayed_1_0 & ( ~ cmp263 ))
  // ifx_xend_exec_guard_980_delayed_1_0
  // cmp263
  // 			$volatile landx_xlhsx_xtrue_exec_guard := ifx_xend_landx_xlhsx_xtrue_taken $buffering 1
  //  file prog.linked.opt.aa, line 295
  // ifx_xend_landx_xlhsx_xtrue_taken
  // 			count_inp2x_x1_990_delayed_2_0 := count_inp2x_x1 $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 296
  // count_inp2x_x1
  W_count_inp2x_x1_990_delayed_2_0_1030_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1032_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1032_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1032_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1032_Update/ack)
  // 			$guard (landx_xlhsx_xtrue_exec_guard) conv266 := ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 297
  // count_inp2x_x1_990_delayed_2_0
  // ($cast ($uint<32>) count_inp2x_x1_990_delayed_2_0 )
  type_cast_1036_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1036_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1036_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1036_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1036_Update/ca)
  // 			landx_xlhsx_xtrue_exec_guard_993_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 298
  // landx_xlhsx_xtrue_exec_guard
  W_landx_xlhsx_xtrue_exec_guard_993_delayed_1_0_1038_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1040_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1040_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1040_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1040_Update/ack)
  // 			$guard (landx_xlhsx_xtrue_exec_guard_993_delayed_1_0) $volatile cmp269 := (conv266 < conv268) $buffering 1
  //  file prog.linked.opt.aa, line 299
  // (conv266 < conv268)
  // conv266
  // conv268
  // 			landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 300
  // landx_xlhsx_xtrue_exec_guard
  W_landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0_1047_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1049_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1049_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1049_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1049_Update/ack)
  // 			$volatile landx_xlhsx_xtrue_ifx_xthen271_taken := (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269) $buffering 1
  //  file prog.linked.opt.aa, line 301
  // (landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0 & cmp269)
  // landx_xlhsx_xtrue_exec_guard_1000_delayed_1_0
  // cmp269
  // 			landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 := landx_xlhsx_xtrue_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 302
  // landx_xlhsx_xtrue_exec_guard
  W_landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0_1055_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1057_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1057_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1057_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1057_Update/ack)
  // 			$volatile landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken := (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 )) $buffering 1
  //  file prog.linked.opt.aa, line 303
  // (landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0 & ( ~ cmp269 ))
  // landx_xlhsx_xtrue_exec_guard_1005_delayed_1_0
  // cmp269
  // 			$volatile ifx_xthen271_exec_guard := landx_xlhsx_xtrue_ifx_xthen271_taken $buffering 1
  //  file prog.linked.opt.aa, line 304
  // landx_xlhsx_xtrue_ifx_xthen271_taken
  // 			add_inp2x_x1_1015_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 305
  // add_inp2x_x1
  W_add_inp2x_x1_1015_delayed_3_0_1067_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1069_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1069_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1069_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1069_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard) idxprom273 := ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 306
  // add_inp2x_x1_1015_delayed_3_0
  // ($cast ($uint<64>) add_inp2x_x1_1015_delayed_3_0 )
  type_cast_1073_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1073_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1073_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1073_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1073_Update/ca)
  // 			arrayidx274 := @(input_2[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom273]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 307
  // idxprom273
  array_obj_ref_1079_index_1_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_index_resize_1/index_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_index_resize_1/index_resize_ack)
  array_obj_ref_1079_index_1_rename <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_index_scale_1/scale_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_index_scale_1/scale_rename_ack)
  array_obj_ref_1079_index_offset <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_final_index_sum_regn_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_final_index_sum_regn_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_final_index_sum_regn_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_final_index_sum_regn_Update/ack)
  array_obj_ref_1079_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1079_base_plus_offset/sum_rename_ack)
  addr_of_1080_final_reg <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1080_request/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1080_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1080_request/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1080_complete/ack)
  // 			ifx_xthen271_exec_guard_1025_delayed_7_0 := ifx_xthen271_exec_guard $buffering 7 $cut_through // bits of buffering = 7. 
  //  file prog.linked.opt.aa, line 308
  // ifx_xthen271_exec_guard
  W_ifx_xthen271_exec_guard_1025_delayed_7_0_1082_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1084_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1084_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1084_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1084_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard_1025_delayed_7_0) tmp275 := ->(arrayidx274) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 309
  // arrayidx274
  ptr_deref_1088_base_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_base_addr_resize/base_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_base_addr_resize/base_resize_ack)
  ptr_deref_1088_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_base_plus_offset/sum_rename_ack)
  ptr_deref_1088_addr_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_word_addrgen/root_register_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_word_addrgen/root_register_ack)
  ptr_deref_1088_gather_scatter <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Update/ptr_deref_1088_Merge/merge_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Update/ptr_deref_1088_Merge/merge_ack)
  ptr_deref_1088_load_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Sample/word_access_start/word_0/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Sample/word_access_start/word_0/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1088_Update/word_access_complete/word_0/ca)
  // 			add_outx_x0_1032_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 310
  // add_outx_x0
  W_add_outx_x0_1032_delayed_2_0_1090_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1092_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1092_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1092_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1092_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard) idxprom277 := ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 311
  // add_outx_x0_1032_delayed_2_0
  // ($cast ($uint<64>) add_outx_x0_1032_delayed_2_0 )
  type_cast_1096_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1096_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1096_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1096_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1096_Update/ca)
  // 			arrayidx278 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom277]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 312
  // idxprom277
  array_obj_ref_1102_index_1_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_index_resize_1/index_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_index_resize_1/index_resize_ack)
  array_obj_ref_1102_index_1_rename <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_index_scale_1/scale_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_index_scale_1/scale_rename_ack)
  array_obj_ref_1102_index_offset <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_final_index_sum_regn_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_final_index_sum_regn_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_final_index_sum_regn_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_final_index_sum_regn_Update/ack)
  array_obj_ref_1102_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/array_obj_ref_1102_base_plus_offset/sum_rename_ack)
  addr_of_1103_final_reg <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1103_request/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1103_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1103_request/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/addr_of_1103_complete/ack)
  // 			ifx_xthen271_exec_guard_1042_delayed_13_0 := ifx_xthen271_exec_guard $buffering 13 $cut_through // bits of buffering = 13. 
  //  file prog.linked.opt.aa, line 313
  // ifx_xthen271_exec_guard
  W_ifx_xthen271_exec_guard_1042_delayed_13_0_1105_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1107_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1107_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1107_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1107_Update/ack)
  // 			arrayidx278_1043_delayed_6_0 := arrayidx278 $buffering 6 $cut_through // bits of buffering = 192. 
  //  file prog.linked.opt.aa, line 314
  // arrayidx278
  W_arrayidx278_1043_delayed_6_0_1108_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1110_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1110_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1110_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1110_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard_1042_delayed_13_0) ->(arrayidx278_1043_delayed_6_0) := tmp275 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 315
  // tmp275
  // arrayidx278_1043_delayed_6_0
  ptr_deref_1113_base_resize <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_base_addr_resize/base_resize_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_base_addr_resize/base_resize_ack)
  ptr_deref_1113_root_address_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_base_plus_offset/sum_rename_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_base_plus_offset/sum_rename_ack)
  ptr_deref_1113_addr_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_word_addrgen/root_register_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_word_addrgen/root_register_ack)
  ptr_deref_1113_gather_scatter <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Sample/ptr_deref_1113_Split/split_req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Sample/ptr_deref_1113_Split/split_ack)
  ptr_deref_1113_store_0 <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Sample/word_access_start/word_0/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Sample/word_access_start/word_0/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/ptr_deref_1113_Update/word_access_complete/word_0/ca)
  // 			count_inp2x_x1_1049_delayed_3_0 := count_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 316
  // count_inp2x_x1
  W_count_inp2x_x1_1049_delayed_3_0_1116_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1118_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1118_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1118_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1118_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard) $volatile inc280 := (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 317
  // (count_inp2x_x1_1049_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // count_inp2x_x1_1049_delayed_3_0
  // 			add_inp2x_x1_1056_delayed_3_0 := add_inp2x_x1 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 318
  // add_inp2x_x1
  W_add_inp2x_x1_1056_delayed_3_0_1126_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1128_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1128_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1128_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1128_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard) $volatile inc282 := (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 319
  // (add_inp2x_x1_1056_delayed_3_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // add_inp2x_x1_1056_delayed_3_0
  // 			add_outx_x0_1063_delayed_2_0 := add_outx_x0 $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 320
  // add_outx_x0
  W_add_outx_x0_1063_delayed_2_0_1136_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1138_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1138_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1138_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1138_Update/ack)
  // 			$guard (ifx_xthen271_exec_guard) $volatile inc284 := (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 321
  // (add_outx_x0_1063_delayed_2_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // add_outx_x0_1063_delayed_2_0
  // 			$volatile ifx_xthen271_landx_xlhsx_xtrue292_taken := ifx_xthen271_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 322
  // ifx_xthen271_exec_guard
  // 			$volatile landx_xlhsx_xtrue292_exec_guard := (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken) $buffering 1
  //  file prog.linked.opt.aa, line 323
  // (ifx_xthen271_landx_xlhsx_xtrue292_taken | landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken)
  // ifx_xthen271_landx_xlhsx_xtrue292_taken
  // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
  // 			type_cast_1082_1082_delayed_2_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 324
  // add_outx_x0
  // ($bitcast ($uint<16>) add_outx_x0 )
  type_cast_1156_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1156_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1156_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1156_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1156_Update/ca)
  // 			$volatile add_outx_x2x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 325
  // ifx_xthen271_landx_xlhsx_xtrue292_taken
  // inc284
  // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
  // type_cast_1082_1082_delayed_2_0
  // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc284 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1082_1082_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			type_cast_1094_1094_delayed_3_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 326
  // add_inp2x_x1
  // ($bitcast ($uint<16>) add_inp2x_x1 )
  type_cast_1171_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1171_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1171_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1171_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1171_Update/ca)
  // 			$volatile add_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 327
  // ifx_xthen271_landx_xlhsx_xtrue292_taken
  // inc282
  // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
  // type_cast_1094_1094_delayed_3_0
  // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc282 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1094_1094_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			type_cast_1106_1106_delayed_3_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 328
  // count_inp2x_x1
  // ($bitcast ($uint<16>) count_inp2x_x1 )
  type_cast_1186_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1186_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1186_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1186_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1186_Update/ca)
  // 			$volatile count_inp2x_x0x_xph := ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  )  $buffering 1
  //  file prog.linked.opt.aa, line 329
  // ifx_xthen271_landx_xlhsx_xtrue292_taken
  // inc280
  // landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken
  // type_cast_1106_1106_delayed_3_0
  // ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen271_landx_xlhsx_xtrue292_taken ($bitcast ($uint<16>) inc280 )  ( $mux landx_xlhsx_xtrue_landx_xlhsx_xtrue292_taken type_cast_1106_1106_delayed_3_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // 			$guard (landx_xlhsx_xtrue292_exec_guard) conv294 := ($cast ($uint<32>) count_inp2x_x0x_xph ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 330
  // count_inp2x_x0x_xph
  // ($cast ($uint<32>) count_inp2x_x0x_xph )
  type_cast_1202_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1202_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1202_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1202_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1202_Update/ca)
  // 			landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 331
  // landx_xlhsx_xtrue292_exec_guard
  W_landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0_1204_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1206_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1206_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1206_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1206_Update/ack)
  // 			$guard (landx_xlhsx_xtrue292_exec_guard_1117_delayed_1_0) $volatile cmp297 := (conv294 == conv268) $buffering 1
  //  file prog.linked.opt.aa, line 332
  // (conv294 == conv268)
  // conv294
  // conv268
  // 			landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 333
  // landx_xlhsx_xtrue292_exec_guard
  W_landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0_1213_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1215_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1215_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1215_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1215_Update/ack)
  // 			$volatile landx_xlhsx_xtrue292_ifx_xthen299_taken := (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297) $buffering 1
  //  file prog.linked.opt.aa, line 334
  // (landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0 & cmp297)
  // landx_xlhsx_xtrue292_exec_guard_1124_delayed_1_0
  // cmp297
  // 			landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 := landx_xlhsx_xtrue292_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 335
  // landx_xlhsx_xtrue292_exec_guard
  W_landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0_1221_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1223_Sample/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1223_Update/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1223_Sample/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/assign_stmt_1223_Update/ack)
  // 			$volatile landx_xlhsx_xtrue292_ifx_xend300_taken := (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 )) $buffering 1
  //  file prog.linked.opt.aa, line 336
  // (landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0 & ( ~ cmp297 ))
  // landx_xlhsx_xtrue292_exec_guard_1129_delayed_1_0
  // cmp297
  // 			$volatile ifx_xthen299_exec_guard := landx_xlhsx_xtrue292_ifx_xthen299_taken $buffering 1
  //  file prog.linked.opt.aa, line 337
  // landx_xlhsx_xtrue292_ifx_xthen299_taken
  // 			$volatile ifx_xthen299_ifx_xend300_taken := ifx_xthen299_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 338
  // ifx_xthen299_exec_guard
  // 			type_cast_1143_1143_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 339
  // add_inp2x_x0x_xph
  // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
  type_cast_1238_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1238_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1238_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1238_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1238_Update/ca)
  // 			type_cast_1146_1146_delayed_1_0 := ($bitcast ($uint<16>) add_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 340
  // add_inp2x_x0x_xph
  // ($bitcast ($uint<16>) add_inp2x_x0x_xph )
  type_cast_1242_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1242_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1242_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1242_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1242_Update/ca)
  // 			type_cast_1149_1149_delayed_2_0 := ($bitcast ($uint<16>) add_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 341
  // add_inp2x_x1
  // ($bitcast ($uint<16>) add_inp2x_x1 )
  type_cast_1246_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1246_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1246_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1246_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1246_Update/ca)
  // 			MUX_1152_1152_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 342
  // ifx_xend_ifx_xend300_taken
  // type_cast_1149_1149_delayed_2_0
  // ( $mux ifx_xend_ifx_xend300_taken type_cast_1149_1149_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  MUX_1253_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1253_start/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1253_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1253_start/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1253_complete/ack)
  // 			$volatile add_inp2x_x0506 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  )  $buffering 1
  //  file prog.linked.opt.aa, line 343
  // ifx_xthen299_ifx_xend300_taken
  // type_cast_1143_1143_delayed_1_0
  // landx_xlhsx_xtrue292_ifx_xend300_taken
  // type_cast_1146_1146_delayed_1_0
  // MUX_1152_1152_delayed_2_0
  // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 ) 
  // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1143_1143_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1146_1146_delayed_1_0  MUX_1152_1152_delayed_2_0 )  ) 
  // 			type_cast_1159_1159_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 344
  // add_outx_x2x_xph
  // ($bitcast ($uint<16>) add_outx_x2x_xph )
  type_cast_1266_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1266_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1266_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1266_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1266_Update/ca)
  // 			type_cast_1162_1162_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x2x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 345
  // add_outx_x2x_xph
  // ($bitcast ($uint<16>) add_outx_x2x_xph )
  type_cast_1270_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1270_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1270_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1270_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1270_Update/ca)
  // 			type_cast_1165_1165_delayed_1_0 := ($bitcast ($uint<16>) add_outx_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 346
  // add_outx_x0
  // ($bitcast ($uint<16>) add_outx_x0 )
  type_cast_1274_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1274_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1274_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1274_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1274_Update/ca)
  // 			MUX_1168_1168_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 347
  // ifx_xend_ifx_xend300_taken
  // type_cast_1165_1165_delayed_1_0
  // ( $mux ifx_xend_ifx_xend300_taken type_cast_1165_1165_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  MUX_1281_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1281_start/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1281_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1281_start/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1281_complete/ack)
  // 			$volatile add_outx_x2504 := ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  )  $buffering 1
  //  file prog.linked.opt.aa, line 348
  // ifx_xthen299_ifx_xend300_taken
  // type_cast_1159_1159_delayed_1_0
  // landx_xlhsx_xtrue292_ifx_xend300_taken
  // type_cast_1162_1162_delayed_1_0
  // MUX_1168_1168_delayed_2_0
  // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 ) 
  // ( $mux ifx_xthen299_ifx_xend300_taken type_cast_1159_1159_delayed_1_0  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1162_1162_delayed_1_0  MUX_1168_1168_delayed_2_0 )  ) 
  // 			type_cast_1179_1179_delayed_3_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 349
  // count_inp1x_x0
  // ($bitcast ($uint<16>) count_inp1x_x0 )
  type_cast_1294_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1294_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1294_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1294_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1294_Update/ca)
  // 			type_cast_1182_1182_delayed_1_0 := ($bitcast ($uint<16>) count_inp1x_x0 ) $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 350
  // count_inp1x_x0
  // ($bitcast ($uint<16>) count_inp1x_x0 )
  type_cast_1298_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1298_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1298_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1298_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1298_Update/ca)
  // 			MUX_1185_1185_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 351
  // ifx_xend_ifx_xend300_taken
  // type_cast_1182_1182_delayed_1_0
  // ( $mux ifx_xend_ifx_xend300_taken type_cast_1182_1182_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  MUX_1305_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1305_start/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1305_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1305_start/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1305_complete/ack)
  // 			$volatile count_inp1x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  )  $buffering 1
  //  file prog.linked.opt.aa, line 352
  // ifx_xthen299_ifx_xend300_taken
  // landx_xlhsx_xtrue292_ifx_xend300_taken
  // type_cast_1179_1179_delayed_3_0
  // MUX_1185_1185_delayed_2_0
  // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 ) 
  // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1179_1179_delayed_3_0  MUX_1185_1185_delayed_2_0 )  ) 
  // 			type_cast_1196_1196_delayed_1_0 := ($bitcast ($uint<16>) count_inp2x_x0x_xph ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 353
  // count_inp2x_x0x_xph
  // ($bitcast ($uint<16>) count_inp2x_x0x_xph )
  type_cast_1320_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1320_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1320_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1320_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1320_Update/ca)
  // 			type_cast_1199_1199_delayed_2_0 := ($bitcast ($uint<16>) count_inp2x_x1 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 354
  // count_inp2x_x1
  // ($bitcast ($uint<16>) count_inp2x_x1 )
  type_cast_1324_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1324_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1324_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1324_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1324_Update/ca)
  // 			MUX_1202_1202_delayed_2_0 := ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 355
  // ifx_xend_ifx_xend300_taken
  // type_cast_1199_1199_delayed_2_0
  // ( $mux ifx_xend_ifx_xend300_taken type_cast_1199_1199_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  MUX_1331_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1331_start/req branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1331_complete/req) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1331_start/ack branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/MUX_1331_complete/ack)
  // 			$volatile count_inp2x_x2 := ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  )  $buffering 1
  //  file prog.linked.opt.aa, line 356
  // ifx_xthen299_ifx_xend300_taken
  // landx_xlhsx_xtrue292_ifx_xend300_taken
  // type_cast_1196_1196_delayed_1_0
  // MUX_1202_1202_delayed_2_0
  // ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 ) 
  // ( $mux ifx_xthen299_ifx_xend300_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux landx_xlhsx_xtrue292_ifx_xend300_taken type_cast_1196_1196_delayed_1_0  MUX_1202_1202_delayed_2_0 )  ) 
  // 			conv302 := ($cast ($uint<32>) add_outx_x2504 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 357
  // add_outx_x2504
  // ($cast ($uint<32>) add_outx_x2504 )
  type_cast_1346_inst <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1346_Sample/rr branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1346_Update/cr) (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1346_Sample/ra branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/type_cast_1346_Update/ca)
  // 			$volatile cmp305 := (conv302 == shr304) $buffering 1
  //  file prog.linked.opt.aa, line 358
  // (conv302 == shr304)
  // conv302
  // shr304
  // 			$volatile ifx_xend300_whilex_xend_taken := cmp305 $buffering 1
  //  file prog.linked.opt.aa, line 359
  // cmp305
  // cmp305
  do_while_stmt_817_branch <=> (branch_block_stmt_23/do_while_stmt_817/do_while_stmt_817_loop_body/condition_evaluated) (branch_block_stmt_23/do_while_stmt_817/loop_exit/ack branch_block_stmt_23/do_while_stmt_817/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 0
  if_stmt_1359_branch <=> (branch_block_stmt_23/if_stmt_1359_eval_test/branch_req) (branch_block_stmt_23/if_stmt_1359_else_link/else_choice_transition branch_block_stmt_23/if_stmt_1359_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 364
  // 		conv234 := ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 366
  // call233
  // ($bitcast ($uint<64>) ($cast ($int<64>) call233 ) )
  type_cast_1368_inst <=> (branch_block_stmt_23/assign_stmt_1369/type_cast_1368_Sample/rr branch_block_stmt_23/assign_stmt_1369/type_cast_1368_Update/cr) (branch_block_stmt_23/assign_stmt_1369/type_cast_1368_Sample/ra branch_block_stmt_23/assign_stmt_1369/type_cast_1368_Update/ca)
  // 		$call timer () (call310 ) 
  //  file prog.linked.opt.aa, line 368
  call_stmt_1372_call <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/call_stmt_1372_Sample/crr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/call_stmt_1372_Update/ccr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/call_stmt_1372_Sample/cra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/call_stmt_1372_Update/cca)
  // 		conv311 := ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 369
  // call310
  // ($bitcast ($uint<64>) ($cast ($int<64>) call310 ) )
  type_cast_1376_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1376_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1376_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1376_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1376_Update/ca)
  // 		$volatile sub := (conv311 - conv234) $buffering 1
  //  file prog.linked.opt.aa, line 370
  // (conv311 - conv234)
  // conv311
  // conv234
  // 		conv317 := ($cast ($uint<8>) sub ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 371
  // sub
  // ($cast ($uint<8>) sub )
  type_cast_1385_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1385_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1385_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1385_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1385_Update/ca)
  // 		$volatile shr320 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 372
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // sub
  // 		conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 373
  // shr320
  // ($cast ($uint<8>) shr320 )
  type_cast_1395_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1395_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1395_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1395_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1395_Update/ca)
  // 		$volatile shr326 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 374
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  // sub
  // 		conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 375
  // shr326
  // ($cast ($uint<8>) shr326 )
  type_cast_1405_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1405_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1405_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1405_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1405_Update/ca)
  // 		$volatile shr332 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
  //  file prog.linked.opt.aa, line 376
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
  // sub
  // 		conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 377
  // shr332
  // ($cast ($uint<8>) shr332 )
  type_cast_1415_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1415_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1415_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1415_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1415_Update/ca)
  // 		$volatile shr338 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
  //  file prog.linked.opt.aa, line 378
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
  // sub
  // 		conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 379
  // shr338
  // ($cast ($uint<8>) shr338 )
  type_cast_1425_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1425_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1425_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1425_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1425_Update/ca)
  // 		$volatile shr344 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
  //  file prog.linked.opt.aa, line 380
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
  // sub
  // 		conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 381
  // shr344
  // ($cast ($uint<8>) shr344 )
  type_cast_1435_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1435_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1435_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1435_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1435_Update/ca)
  // 		$volatile shr350 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
  //  file prog.linked.opt.aa, line 382
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
  // sub
  // 		conv353 := ($cast ($uint<8>) shr350 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 383
  // shr350
  // ($cast ($uint<8>) shr350 )
  type_cast_1445_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1445_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1445_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1445_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1445_Update/ca)
  // 		$volatile shr356 := (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
  //  file prog.linked.opt.aa, line 384
  // (sub >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
  // sub
  // 		conv359 := ($cast ($uint<8>) shr356 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 385
  // shr356
  // ($cast ($uint<8>) shr356 )
  type_cast_1455_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1455_Sample/rr branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1455_Update/cr) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1455_Sample/ra branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/type_cast_1455_Update/ca)
  // 		Concat_output_pipe := conv359 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 386
  // conv359
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1457_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1457_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1457_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1457_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1457_Update/ack)
  // 		Concat_output_pipe := conv353 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 387
  // conv353
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1460_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1460_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1460_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1460_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1460_Update/ack)
  // 		Concat_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 388
  // conv347
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1463_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1463_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1463_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1463_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1463_Update/ack)
  // 		Concat_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 389
  // conv341
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1466_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1466_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1466_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1466_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1466_Update/ack)
  // 		Concat_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 390
  // conv335
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1469_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1469_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1469_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1469_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1469_Update/ack)
  // 		Concat_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 391
  // conv329
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1472_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1472_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1472_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1472_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1472_Update/ack)
  // 		Concat_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 392
  // conv323
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1475_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1475_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1475_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1475_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1475_Update/ack)
  // 		Concat_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 393
  // conv317
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1478_inst <=> (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1478_Sample/req branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1478_Update/req) (branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1478_Sample/ack branch_block_stmt_23/call_stmt_1372_to_assign_stmt_1480/WPIPE_Concat_output_pipe_1478_Update/ack)
  // 		$volatile cmp381460 := (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1
  //  file prog.linked.opt.aa, line 395
  // (mul103 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  // mul103
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 396
  if_stmt_1488_branch <=> (branch_block_stmt_23/if_stmt_1488_eval_test/branch_req) (branch_block_stmt_23/if_stmt_1488_else_link/else_choice_transition branch_block_stmt_23/if_stmt_1488_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 401
  // 		$volatile tmp472 := (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 403
  // (shr304 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // shr304
  // 		$volatile tmp471x_xop := (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 404
  // (shr304 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // shr304
  // 		iNsTr_79 := ($cast ($uint<64>) tmp471x_xop ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 405
  // tmp471x_xop
  // ($cast ($uint<64>) tmp471x_xop )
  type_cast_1509_inst <=> (branch_block_stmt_23/assign_stmt_1500_to_assign_stmt_1523/type_cast_1509_Sample/rr branch_block_stmt_23/assign_stmt_1500_to_assign_stmt_1523/type_cast_1509_Update/cr) (branch_block_stmt_23/assign_stmt_1500_to_assign_stmt_1523/type_cast_1509_Sample/ra branch_block_stmt_23/assign_stmt_1500_to_assign_stmt_1523/type_cast_1509_Update/ca)
  // 		$volatile xx_xop := (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 406
  // (iNsTr_79 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_79
  // 		$volatile tmp475 := ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 407
  // tmp472
  // xx_xop
  // ( $mux tmp472 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 409
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_1532_inst <=> (branch_block_stmt_23/forx_xbody383_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_sources/type_cast_1532/SplitProtocol/Sample/rr branch_block_stmt_23/forx_xbody383_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_sources/type_cast_1532/SplitProtocol/Update/cr) (branch_block_stmt_23/forx_xbody383_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_sources/type_cast_1532/SplitProtocol/Sample/ra branch_block_stmt_23/forx_xbody383_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_sources/type_cast_1532/SplitProtocol/Update/ca)
  phi_stmt_1526 <=> (branch_block_stmt_23/bbx_xnph_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_req branch_block_stmt_23/forx_xbody383_forx_xbody383_PhiReq/phi_stmt_1526/phi_stmt_1526_req) (branch_block_stmt_23/merge_stmt_1525_PhiAck/phi_stmt_1526_ack)
  // 		arrayidx388 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 413
  // indvar
  array_obj_ref_1538_index_1_resize <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_index_resize_1/index_resize_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_index_resize_1/index_resize_ack)
  array_obj_ref_1538_index_1_rename <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_index_scale_1/scale_rename_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_index_scale_1/scale_rename_ack)
  array_obj_ref_1538_index_offset <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_final_index_sum_regn_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_final_index_sum_regn_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_final_index_sum_regn_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_final_index_sum_regn_Update/ack)
  array_obj_ref_1538_root_address_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/array_obj_ref_1538_base_plus_offset/sum_rename_ack)
  addr_of_1539_final_reg <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/addr_of_1539_request/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/addr_of_1539_complete/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/addr_of_1539_request/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/addr_of_1539_complete/ack)
  // 		tmp389 := ->(arrayidx388) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 414
  // arrayidx388
  ptr_deref_1543_base_resize <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_base_addr_resize/base_resize_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_base_addr_resize/base_resize_ack)
  ptr_deref_1543_root_address_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_base_plus_offset/sum_rename_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_base_plus_offset/sum_rename_ack)
  ptr_deref_1543_addr_0 <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_word_addrgen/root_register_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_word_addrgen/root_register_ack)
  ptr_deref_1543_gather_scatter <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Update/ptr_deref_1543_Merge/merge_req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Update/ptr_deref_1543_Merge/merge_ack)
  ptr_deref_1543_load_0 <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Sample/word_access_start/word_0/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Update/word_access_complete/word_0/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Sample/word_access_start/word_0/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/ptr_deref_1543_Update/word_access_complete/word_0/ca)
  // 		conv393 := ($cast ($uint<8>) tmp389 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 415
  // tmp389
  // ($cast ($uint<8>) tmp389 )
  type_cast_1547_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1547_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1547_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1547_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1547_Update/ca)
  // 		$volatile shr396 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 416
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // tmp389
  // 		conv399 := ($cast ($uint<8>) shr396 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 417
  // shr396
  // ($cast ($uint<8>) shr396 )
  type_cast_1557_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1557_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1557_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1557_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1557_Update/ca)
  // 		$volatile shr402 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 418
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  // tmp389
  // 		conv405 := ($cast ($uint<8>) shr402 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 419
  // shr402
  // ($cast ($uint<8>) shr402 )
  type_cast_1567_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1567_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1567_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1567_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1567_Update/ca)
  // 		$volatile shr408 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
  //  file prog.linked.opt.aa, line 420
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
  // tmp389
  // 		conv411 := ($cast ($uint<8>) shr408 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 421
  // shr408
  // ($cast ($uint<8>) shr408 )
  type_cast_1577_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1577_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1577_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1577_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1577_Update/ca)
  // 		$volatile shr414 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
  //  file prog.linked.opt.aa, line 422
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
  // tmp389
  // 		conv417 := ($cast ($uint<8>) shr414 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 423
  // shr414
  // ($cast ($uint<8>) shr414 )
  type_cast_1587_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1587_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1587_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1587_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1587_Update/ca)
  // 		$volatile shr420 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
  //  file prog.linked.opt.aa, line 424
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
  // tmp389
  // 		conv423 := ($cast ($uint<8>) shr420 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 425
  // shr420
  // ($cast ($uint<8>) shr420 )
  type_cast_1597_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1597_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1597_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1597_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1597_Update/ca)
  // 		$volatile shr426 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
  //  file prog.linked.opt.aa, line 426
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
  // tmp389
  // 		conv429 := ($cast ($uint<8>) shr426 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 427
  // shr426
  // ($cast ($uint<8>) shr426 )
  type_cast_1607_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1607_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1607_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1607_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1607_Update/ca)
  // 		$volatile shr432 := (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
  //  file prog.linked.opt.aa, line 428
  // (tmp389 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
  // tmp389
  // 		conv435 := ($cast ($uint<8>) shr432 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 429
  // shr432
  // ($cast ($uint<8>) shr432 )
  type_cast_1617_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1617_Sample/rr branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1617_Update/cr) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1617_Sample/ra branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/type_cast_1617_Update/ca)
  // 		Concat_output_pipe := conv435 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 430
  // conv435
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1619_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1619_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1619_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1619_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1619_Update/ack)
  // 		Concat_output_pipe := conv429 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 431
  // conv429
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1622_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1622_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1622_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1622_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1622_Update/ack)
  // 		Concat_output_pipe := conv423 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 432
  // conv423
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1625_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1625_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1625_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1625_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1625_Update/ack)
  // 		Concat_output_pipe := conv417 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 433
  // conv417
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1628_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1628_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1628_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1628_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1628_Update/ack)
  // 		Concat_output_pipe := conv411 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 434
  // conv411
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1631_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1631_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1631_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1631_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1631_Update/ack)
  // 		Concat_output_pipe := conv405 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 435
  // conv405
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1634_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1634_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1634_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1634_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1634_Update/ack)
  // 		Concat_output_pipe := conv399 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 436
  // conv399
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1637_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1637_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1637_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1637_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1637_Update/ack)
  // 		Concat_output_pipe := conv393 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 437
  // conv393
  // Concat_output_pipe
  WPIPE_Concat_output_pipe_1640_inst <=> (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1640_Sample/req branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1640_Update/req) (branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1640_Sample/ack branch_block_stmt_23/assign_stmt_1540_to_assign_stmt_1653/WPIPE_Concat_output_pipe_1640_Update/ack)
  // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 438
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  // 		$volatile exitcond1 := (indvarx_xnext == tmp475) $buffering 1
  //  file prog.linked.opt.aa, line 439
  // (indvarx_xnext == tmp475)
  // indvarx_xnext
  // tmp475
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 440
  if_stmt_1654_branch <=> (branch_block_stmt_23/if_stmt_1654_eval_test/branch_req) (branch_block_stmt_23/if_stmt_1654_else_link/else_choice_transition branch_block_stmt_23/if_stmt_1654_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 445
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 448
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 451
}
$module [progx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 455
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 455
  }
  // end data-path
  $attribute initializer => ""
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 463
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 468
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_1671] 
    {
      ::[call_stmt_1672] 
      {
        // start: 		$call progx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 470
        $T[call_stmt_1672_sample_start_] 
        $T[call_stmt_1672_sample_completed_] 
        $T[call_stmt_1672_update_start_] 
        $T[call_stmt_1672_update_completed_] 
        ;;[call_stmt_1672_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1672_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1672_sample_start_ &-> (call_stmt_1672_Sample)
        call_stmt_1672_sample_completed_ <-& (call_stmt_1672_Sample)
        call_stmt_1672_sample_completed_ &-> ($null)
        call_stmt_1672_update_start_ &-> (call_stmt_1672_Update)
        call_stmt_1672_update_completed_ <-& (call_stmt_1672_Update)
        // end: 		$call progx_xoptx_xo_storage_initializer_ () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 468
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 463
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 468
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 470
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 468
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 470
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 468
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 470
    $call [call_stmt_1672_call] $module progx_xoptx_xo_storage_initializer_() ()  
    $delay call_stmt_1672_call 4
  }
  // end data-path
  // 		$call progx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 470
  call_stmt_1672_call <=> (parallel_block_stmt_1671/call_stmt_1672/call_stmt_1672_Sample/crr parallel_block_stmt_1671/call_stmt_1672/call_stmt_1672_Update/ccr) (parallel_block_stmt_1671/call_stmt_1672/call_stmt_1672_Sample/cra parallel_block_stmt_1671/call_stmt_1672/call_stmt_1672_Update/cca)
}
$module [timerDaemon] 
{
  // pipe-declarations for block %timerDaemon
  //  file prog.linked.opt.aa, line 473
  // pipe-declarations for block %timerDaemon%loop
  //  file prog.linked.opt.aa, line 478
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1676] // Branch Block  file prog.linked.opt.aa, line 478
    {
      $P [branch_block_stmt_1676__entry__]
      branch_block_stmt_1676__entry__ <-| ($entry)
      $P [branch_block_stmt_1676__exit__]
      branch_block_stmt_1676__exit__ |-> ($exit)
      $P [do_while_stmt_1677__entry__] 
      $P [do_while_stmt_1677__exit__] 
      // do-while-statement  
      //  file prog.linked.opt.aa, line 480
      <o> [do_while_stmt_1677]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_1677__entry__] 
        $P[do_while_stmt_1677__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1677_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1679
          // 			$phi COUNTER := 			  ($bitcast ($uint<64>) _b0  ) $on   $entry 			  nCOUNTER $on   $loopback 
          // type of target is $uint<64>
          $T[phi_stmt_1679_sample_start_] 
          $T[phi_stmt_1679_sample_completed_] 
          $T[phi_stmt_1679_update_start_] 
          $T[phi_stmt_1679_update_completed_] 
          $T[phi_stmt_1679_sample_start__ps] 
          phi_stmt_1679_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1679_sample_completed__ps] 
          phi_stmt_1679_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1679_update_start__ps] 
          phi_stmt_1679_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1679_update_completed__ps] 
          phi_stmt_1679_update_completed_ <-& (phi_stmt_1679_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1679_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1679_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1679_update_start_)
          $T[phi_stmt_1679_loopback_trigger] 
          phi_stmt_1679_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1679_loopback_sample_req] 
          $T[phi_stmt_1679_loopback_sample_req_ps] 
          phi_stmt_1679_loopback_sample_req <-& (phi_stmt_1679_loopback_sample_req_ps)
          phi_stmt_1679_loopback_sample_req &-> ($null)
          $T[phi_stmt_1679_entry_trigger] 
          phi_stmt_1679_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1679_entry_sample_req] 
          $T[phi_stmt_1679_entry_sample_req_ps] 
          phi_stmt_1679_entry_sample_req <-& (phi_stmt_1679_entry_sample_req_ps)
          phi_stmt_1679_entry_sample_req &-> ($null)
          phi_stmt_1679_update_start_ o<-& (phi_stmt_1679_update_completed_ 0)
          phi_stmt_1679_sample_start_ o<-& (phi_stmt_1679_sample_completed_ 1)
          $T[phi_stmt_1679_merged_reqs] 
          $T[phi_stmt_1679_phi_mux_ack] 
          $T[phi_stmt_1679_phi_mux_ack_ps] 
          phi_stmt_1679_phi_mux_ack_ps <-& (phi_stmt_1679_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1679_update_completed_)
          $T[type_cast_1682_sample_start__ps] 
          $T[type_cast_1682_sample_completed__ps] 
          $T[type_cast_1682_update_start__ps] 
          $T[type_cast_1682_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1682_sample_start_] 
          $T[type_cast_1682_sample_completed_] 
          type_cast_1682_sample_completed_ <-& (type_cast_1682_sample_start_)
          $T[type_cast_1682_update_start_] 
          $T [type_cast_1682_update_completed_] $delay 
          type_cast_1682_update_completed_ <-& (type_cast_1682_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1682_sample_start_ <-& (type_cast_1682_sample_start__ps)
          type_cast_1682_update_start_ <-& (type_cast_1682_update_start__ps)
          // Phi complete dependency.
          type_cast_1682_sample_completed__ps <-& (type_cast_1682_sample_completed_)
          type_cast_1682_update_completed__ps <-& (type_cast_1682_update_completed_)
          $T[R_nCOUNTER_1683_sample_start__ps] 
          $T[R_nCOUNTER_1683_sample_completed__ps] 
          $T[R_nCOUNTER_1683_update_start__ps] 
          $T[R_nCOUNTER_1683_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nCOUNTER_1683_sample_start_] 
          $T[R_nCOUNTER_1683_sample_completed_] 
          $T[R_nCOUNTER_1683_update_start_] 
          $T[R_nCOUNTER_1683_update_completed_] 
          ;;[R_nCOUNTER_1683_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nCOUNTER_1683_sample_start_ &-> (R_nCOUNTER_1683_Sample)
          R_nCOUNTER_1683_sample_completed_ <-& (R_nCOUNTER_1683_Sample)
          ;;[R_nCOUNTER_1683_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nCOUNTER_1683_update_start_ &-> (R_nCOUNTER_1683_Update)
          R_nCOUNTER_1683_update_completed_ <-& (R_nCOUNTER_1683_Update)
          // RAW reenables for nCOUNTER
          // Phi start dependency for implicit/constant alternative.
          R_nCOUNTER_1683_sample_start_ <-& (R_nCOUNTER_1683_sample_start__ps)
          R_nCOUNTER_1683_update_start_ <-& (R_nCOUNTER_1683_update_start__ps)
          // Phi complete dependency.
          R_nCOUNTER_1683_sample_completed__ps <-& (R_nCOUNTER_1683_sample_completed_)
          R_nCOUNTER_1683_update_completed__ps <-& (R_nCOUNTER_1683_update_completed_)
          $phisequencer [ phi_stmt_1679_phi_seq] : 
          phi_stmt_1679_entry_trigger type_cast_1682_sample_start__ps type_cast_1682_sample_completed__ps type_cast_1682_update_start__ps type_cast_1682_update_completed__ps phi_stmt_1679_loopback_trigger R_nCOUNTER_1683_sample_start__ps R_nCOUNTER_1683_sample_completed__ps R_nCOUNTER_1683_update_start__ps R_nCOUNTER_1683_update_completed__ps :
          phi_stmt_1679_sample_start__ps phi_stmt_1679_sample_completed__ps phi_stmt_1679_update_start__ps phi_stmt_1679_update_completed__ps :
          phi_stmt_1679_entry_sample_req_ps phi_stmt_1679_loopback_sample_req_ps : 
          phi_stmt_1679_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1679
          // start:  single source PHI statement phi_stmt_1684
          // 			$phi req := 			  timer_req $on   $entry ,   $loopback 
          // type of target is $uint<1>
          $T[phi_stmt_1684_sample_start_] 
          $T[phi_stmt_1684_sample_completed_] 
          $T[phi_stmt_1684_update_start_] 
          $T[phi_stmt_1684_update_completed_] 
          aggregated_phi_sample_req <-& (phi_stmt_1684_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1684_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1684_update_start_)
          // non-implicit source expression in single-source phi
          // timer_req
          $T[RPIPE_timer_req_1686_sample_start_] 
          $T[RPIPE_timer_req_1686_sample_completed_] 
          $T[RPIPE_timer_req_1686_update_start_] 
          $T[RPIPE_timer_req_1686_update_completed_] 
          ;;[RPIPE_timer_req_1686_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_timer_req_1686_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_timer_req_1686_sample_start_ &-> (RPIPE_timer_req_1686_Sample)
          RPIPE_timer_req_1686_sample_completed_ <-& (RPIPE_timer_req_1686_Sample)
          RPIPE_timer_req_1686_update_start_ <-& (RPIPE_timer_req_1686_sample_completed_)
          RPIPE_timer_req_1686_update_start_ &-> (RPIPE_timer_req_1686_Update)
          RPIPE_timer_req_1686_update_completed_ <-& (RPIPE_timer_req_1686_Update)
          RPIPE_timer_req_1686_sample_start_ o<-& (RPIPE_timer_req_1686_update_completed_ 0)
          // RAW reenables for timer_req
          // producer  and  consumer are both determined by PHI statements.
          aggregated_phi_sample_req &-> (RPIPE_timer_req_1686_sample_start_)
          aggregated_phi_sample_ack <-& (RPIPE_timer_req_1686_sample_completed_)
          aggregated_phi_update_req &-> (RPIPE_timer_req_1686_update_start_)
          phi_stmt_1684_update_completed_ <-& (RPIPE_timer_req_1686_update_completed_)
          aggregated_phi_update_ack <-& (phi_stmt_1684_update_completed_)
          // done: PHI Statement phi_stmt_1684
          // start: WAR dependencies for nCOUNTER
          // WAR dependency: Read: nCOUNTER before Write: 			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nCOUNTER
          // start:  			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
          //  file prog.linked.opt.aa, line 488
          // volatile! 
          // Source expression
          // (COUNTER + 1 )
          // COUNTER
          // Target expression
          // (as target) nCOUNTER
          // start: WAR dependencies for nCOUNTER
          // WAR dependency: Read: nCOUNTER before Write: 			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nCOUNTER
          // end:  			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
          // start:  			$guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 489
          // Guard expression 
          // req
          // Source expression
          // COUNTER
          // Target expression
          // (as target) timer_resp
          $T[WPIPE_timer_resp_1694_sample_start_] 
          $T[WPIPE_timer_resp_1694_sample_completed_] 
          $T[WPIPE_timer_resp_1694_update_start_] 
          $T[WPIPE_timer_resp_1694_update_completed_] 
          // Guard dependency for expression WPIPE_timer_resp_1694 with guard R_req_1693
          WPIPE_timer_resp_1694_sample_start_ <-& (phi_stmt_1684_update_completed_)
          // RAW reenables for req
          phi_stmt_1684_update_start_ o<-& (WPIPE_timer_resp_1694_sample_completed_ 0)
          ;;[WPIPE_timer_resp_1694_Sample] 
          {
            // pipe write sample-start timer_resp
            $T [req] $T [ack] 
          }
          ;;[WPIPE_timer_resp_1694_Update] 
          {
            // pipe write update (complete) timer_resp
            $T [req] $T [ack] 
          }
          WPIPE_timer_resp_1694_sample_start_ &-> (WPIPE_timer_resp_1694_Sample)
          WPIPE_timer_resp_1694_sample_completed_ <-& (WPIPE_timer_resp_1694_Sample)
          WPIPE_timer_resp_1694_update_start_ <-& (WPIPE_timer_resp_1694_sample_completed_)
          WPIPE_timer_resp_1694_update_start_ &-> (WPIPE_timer_resp_1694_Update)
          WPIPE_timer_resp_1694_update_completed_ <-& (WPIPE_timer_resp_1694_Update)
          WPIPE_timer_resp_1694_sample_start_ o<-& (WPIPE_timer_resp_1694_update_completed_ 0)
          // start: Forward dependencies from COUNTER to transition WPIPE_timer_resp_1694_sample_start_
          WPIPE_timer_resp_1694_sample_start_ <-& (phi_stmt_1679_update_completed_)
          // done: Forward dependencies from COUNTER to transition WPIPE_timer_resp_1694_sample_start_
          // RAW reenables for COUNTER
          phi_stmt_1679_update_start_ o<-& (WPIPE_timer_resp_1694_sample_completed_ 0)
          // end:  			$guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe timer_resp
          // read-dependencies for pipe timer_resp
          // write-dependencies for pipe timer_resp
          // signal write dependencies for timer_resp
          // pipe read/write dependencies for pipe timer_req
          // read-dependencies for pipe timer_req
          // write-dependencies for pipe timer_req
          // signal write dependencies for timer_req
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1677__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1677_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1677__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1677_loop_body : condition_evaluated
        $bind do_while_stmt_1677__entry__  => do_while_stmt_1677_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1677_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1677__exit__)
      }
      do_while_stmt_1677__entry__ |-> (do_while_stmt_1677)
      do_while_stmt_1677__exit__ <-| (do_while_stmt_1677)
      do_while_stmt_1677__entry__ <-| (branch_block_stmt_1676__entry__)
      do_while_stmt_1677__exit__ |-> (branch_block_stmt_1676__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %timerDaemon%loop%
    //  file prog.linked.opt.aa, line 482
    // constant-object-declarations for block %timerDaemon%loop
    //  file prog.linked.opt.aa, line 478
    // constant-object-declarations for block %timerDaemon
    //  file prog.linked.opt.aa, line 473
    // constant-declarations for block %timerDaemon%loop
    //  file prog.linked.opt.aa, line 478
    // do-while statement  
    //  file prog.linked.opt.aa, line 480
    // 1 
    $constant $W[konst_1698_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %timerDaemon%loop%
    //  file prog.linked.opt.aa, line 482
    // constant-declarations for phi:  			$phi COUNTER := 			  ($bitcast ($uint<64>) _b0  ) $on   $entry 			  nCOUNTER $on   $loopback 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 483
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_1682_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi req := 			  timer_req $on   $entry ,   $loopback 
    // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 485
    // 1 
    $constant $W[konst_1690_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // block %timerDaemon%loop
    //  file prog.linked.opt.aa, line 478
    // do-while statement  
    //  file prog.linked.opt.aa, line 480
    // merge-statement  
    //  file prog.linked.opt.aa, line 482
    // 			$phi COUNTER := 			  ($bitcast ($uint<64>) _b0  ) $on   $entry 			  nCOUNTER $on   $loopback 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 483
    $W[nCOUNTER_1692_1683_buffered] : $int<64>
    // COUNTER
    $W[COUNTER_1679] : $int<64>
    // 			$phi req := 			  timer_req $on   $entry ,   $loopback 
    // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 485
    // timer_req
    $W[RPIPE_timer_req_1686_wire] : $int<1>
    // req
    $W[req_1684] : $int<1>
    // 			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
    //  file prog.linked.opt.aa, line 488
    // nCOUNTER
    $W[nCOUNTER_1692] : $int<64>
    // 			$guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 489
    // timer_resp
    // datapath-instances for block %timerDaemon%loop
    //  file prog.linked.opt.aa, line 478
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 480
    ==0? [do_while_stmt_1677_branch] (konst_1698_wire_constant)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 482
    // 			$phi COUNTER := 			  ($bitcast ($uint<64>) _b0  ) $on   $entry 			  nCOUNTER $on   $loopback 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 483
    # := [nCOUNTER_1692_1683_buf] (nCOUNTER_1692) (nCOUNTER_1692_1683_buffered)     $fullrate
    $buffering $out nCOUNTER_1692_1683_buf nCOUNTER_1692_1683_buffered  1
    # $phi [phi_stmt_1679] (type_cast_1682_wire_constant nCOUNTER_1692_1683_buffered) ( COUNTER_1679 ) $fullrate
    // $buffering  $out phi_stmt_1679 COUNTER_1679 2
    // 			$phi req := 			  timer_req $on   $entry ,   $loopback 
    // type of target is $uint<1>
    //  file prog.linked.opt.aa, line 485
    // timer_req
    $ioport $in [RPIPE_timer_req_1686_inst] (timer_req) (RPIPE_timer_req_1686_wire)  $fullrate 
    $buffering $out RPIPE_timer_req_1686_inst RPIPE_timer_req_1686_wire 1
    # := [ssrc_phi_stmt_1684] (RPIPE_timer_req_1686_wire) (req_1684)    $flowthrough 
    // 			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
    //  file prog.linked.opt.aa, line 488
    // (COUNTER + 1 )
    +[ADD_u64_u64_1691_inst] (COUNTER_1679 konst_1690_wire_constant) (nCOUNTER_1692)   $flowthrough 
    $delay ADD_u64_u64_1691_inst 0
    // 			$guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 489
    // timer_resp
    $ioport $out [WPIPE_timer_resp_1694_inst]  (COUNTER_1679) (timer_resp) $guard ( req_1684 )  $fullrate 
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_1677
  //  file prog.linked.opt.aa, line 480
  phi_stmt_1679 <=> (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/phi_stmt_1679_entry_sample_req branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/phi_stmt_1679_loopback_sample_req) (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/phi_stmt_1679_phi_mux_ack)
  nCOUNTER_1692_1683_buf <=> (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/R_nCOUNTER_1683_Sample/req branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/R_nCOUNTER_1683_Update/req) (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/R_nCOUNTER_1683_Sample/ack branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/R_nCOUNTER_1683_Update/ack)
  // timer_req
  RPIPE_timer_req_1686_inst <=> (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/RPIPE_timer_req_1686_Sample/rr branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/RPIPE_timer_req_1686_Update/cr) (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/RPIPE_timer_req_1686_Sample/ra branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/RPIPE_timer_req_1686_Update/ca)
  // 			$volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
  //  file prog.linked.opt.aa, line 488
  // (COUNTER + 1 )
  // COUNTER
  // 			$guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 489
  // COUNTER
  // timer_resp
  WPIPE_timer_resp_1694_inst <=> (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/WPIPE_timer_resp_1694_Sample/req branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/WPIPE_timer_resp_1694_Update/req) (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/WPIPE_timer_resp_1694_Sample/ack branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/WPIPE_timer_resp_1694_Update/ack)
  do_while_stmt_1677_branch <=> (branch_block_stmt_1676/do_while_stmt_1677/do_while_stmt_1677_loop_body/condition_evaluated) (branch_block_stmt_1676/do_while_stmt_1677/loop_exit/ack branch_block_stmt_1676/do_while_stmt_1677/loop_taken/ack)
}
