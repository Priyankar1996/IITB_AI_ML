$record [structx_x__SizedTensor_16K]  < $array[16384] $of $uint<64> > 
$storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
// can point into 
$storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
// can point into 
$pipe  zeropad_input_pipe : $uint<8>  $depth 2 
// can point into 
$pipe  zeropad_output_pipe : $uint<8>  $depth 2 
// can point into 
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $null
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [sendOutput]
$in ( size : $uint<32>  )
$out ()
$is
{
  $branchblock [body]
  {
    cmp68 := (size > ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 1. 
    $if cmp68 $then 
    $place[entry_bbx_xnph]
    $else 
    $place[entry_forx_xend]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    shr := (size >> ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    tmp := (shr > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    shrx_xop := (shr + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_1 := ($cast ($uint<64>) shrx_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_1 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp72 := ( $mux tmp xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
    shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
    shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
    shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1// bits of buffering = 64. 
    conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
    shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
    shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1// bits of buffering = 64. 
    conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
    shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
    shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1// bits of buffering = 64. 
    conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnext == tmp72) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1// bits of buffering = 32. 
    call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    add := (shl | conv3) $buffering 1// bits of buffering = 32. 
    call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv9 := ($cast ($uint<16>) call6 ) $buffering 1// bits of buffering = 16. 
    shl10 := (conv9 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv12 := ($cast ($uint<16>) call11 ) $buffering 1// bits of buffering = 16. 
    add13 := (shl10 | conv12) $buffering 1// bits of buffering = 16. 
    call16 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv19 := ($cast ($uint<16>) call16 ) $buffering 1// bits of buffering = 16. 
    shl20 := (conv19 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call21 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv22 := ($cast ($uint<16>) call21 ) $buffering 1// bits of buffering = 16. 
    add23 := (shl20 | conv22) $buffering 1// bits of buffering = 16. 
    call26 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv29 := ($cast ($uint<16>) call26 ) $buffering 1// bits of buffering = 16. 
    shl30 := (conv29 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call31 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv32 := ($cast ($uint<16>) call31 ) $buffering 1// bits of buffering = 16. 
    add33 := (shl30 | conv32) $buffering 1// bits of buffering = 16. 
    call36 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv39 := ($cast ($uint<32>) call36 ) $buffering 1// bits of buffering = 32. 
    shl40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1// bits of buffering = 32. 
    call41 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv42 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
    add43 := (shl40 | conv42) $buffering 1// bits of buffering = 32. 
    call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv49 := ($cast ($uint<16>) call46 ) $buffering 1// bits of buffering = 16. 
    shl50 := (conv49 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call51 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv52 := ($cast ($uint<16>) call51 ) $buffering 1// bits of buffering = 16. 
    add53 := (shl50 | conv52) $buffering 1// bits of buffering = 16. 
    call56 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv59 := ($cast ($uint<16>) call56 ) $buffering 1// bits of buffering = 16. 
    shl60 := (conv59 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv62 := ($cast ($uint<16>) call61 ) $buffering 1// bits of buffering = 16. 
    add63 := (shl60 | conv62) $buffering 1// bits of buffering = 16. 
    $barrier
    conv69 := ($cast ($uint<32>) add13 ) $buffering 1// bits of buffering = 32. 
    conv71 := ($cast ($uint<32>) add23 ) $buffering 1// bits of buffering = 32. 
    mul := (conv69 * add) $buffering 1// bits of buffering = 32. 
    mul72 := (mul * conv71) $buffering 1// bits of buffering = 32. 
    cmp471 := (mul72 > ($bitcast ($uint<32>) _b00000000000000000000000000001111  )) $buffering 1// bits of buffering = 1. 
    $if cmp471 $then 
    $place[entry_bbx_xnph]
    $else 
    $place[entry_forx_xend]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp477 := (mul72 >> ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    tmp478 := (tmp477 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp477x_xop := (tmp477 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_16 := ($cast ($uint<64>) tmp477x_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_16 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp481 := ( $mux tmp478 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    tmp := (indvar * ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )) $buffering 1// bits of buffering = 64. 
    tmp2 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )) $buffering 1// bits of buffering = 64. 
    arrayidx274 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][tmp2]) $buffering 1// bits of buffering = 32. 
    tmp3 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    arrayidx224 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][tmp3]) $buffering 1// bits of buffering = 32. 
    tmp4 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    arrayidx174 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][tmp4]) $buffering 1// bits of buffering = 32. 
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][tmp]) $buffering 1// bits of buffering = 32. 
    call78 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv79 := ($cast ($uint<64>) call78 ) $buffering 1// bits of buffering = 64. 
    shl81 := (conv79 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call82 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv84 := ($cast ($uint<64>) call82 ) $buffering 1// bits of buffering = 64. 
    add85 := (shl81 | conv84) $buffering 1// bits of buffering = 64. 
    shl87 := (add85 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call88 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv90 := ($cast ($uint<64>) call88 ) $buffering 1// bits of buffering = 64. 
    add91 := (shl87 | conv90) $buffering 1// bits of buffering = 64. 
    shl93 := (add91 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call94 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv96 := ($cast ($uint<64>) call94 ) $buffering 1// bits of buffering = 64. 
    add97 := (shl93 | conv96) $buffering 1// bits of buffering = 64. 
    shl99 := (add97 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call100 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv102 := ($cast ($uint<64>) call100 ) $buffering 1// bits of buffering = 64. 
    add103 := (shl99 | conv102) $buffering 1// bits of buffering = 64. 
    shl105 := (add103 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call106 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv108 := ($cast ($uint<64>) call106 ) $buffering 1// bits of buffering = 64. 
    add109 := (shl105 | conv108) $buffering 1// bits of buffering = 64. 
    shl111 := (add109 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call112 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv114 := ($cast ($uint<64>) call112 ) $buffering 1// bits of buffering = 64. 
    add115 := (shl111 | conv114) $buffering 1// bits of buffering = 64. 
    shl117 := (add115 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call118 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv120 := ($cast ($uint<64>) call118 ) $buffering 1// bits of buffering = 64. 
    add121 := (shl117 | conv120) $buffering 1// bits of buffering = 64. 
    ->(arrayidx) := add121 $buffering 1// bits of buffering = 64. 
    call125 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv126 := ($cast ($uint<64>) call125 ) $buffering 1// bits of buffering = 64. 
    shl128 := (conv126 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call129 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv131 := ($cast ($uint<64>) call129 ) $buffering 1// bits of buffering = 64. 
    add132 := (shl128 | conv131) $buffering 1// bits of buffering = 64. 
    shl134 := (add132 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call135 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv137 := ($cast ($uint<64>) call135 ) $buffering 1// bits of buffering = 64. 
    add138 := (shl134 | conv137) $buffering 1// bits of buffering = 64. 
    shl140 := (add138 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call141 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv143 := ($cast ($uint<64>) call141 ) $buffering 1// bits of buffering = 64. 
    add144 := (shl140 | conv143) $buffering 1// bits of buffering = 64. 
    shl146 := (add144 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call147 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv149 := ($cast ($uint<64>) call147 ) $buffering 1// bits of buffering = 64. 
    add150 := (shl146 | conv149) $buffering 1// bits of buffering = 64. 
    shl152 := (add150 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call153 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv155 := ($cast ($uint<64>) call153 ) $buffering 1// bits of buffering = 64. 
    add156 := (shl152 | conv155) $buffering 1// bits of buffering = 64. 
    shl158 := (add156 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call159 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv161 := ($cast ($uint<64>) call159 ) $buffering 1// bits of buffering = 64. 
    add162 := (shl158 | conv161) $buffering 1// bits of buffering = 64. 
    shl164 := (add162 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call165 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv167 := ($cast ($uint<64>) call165 ) $buffering 1// bits of buffering = 64. 
    add168 := (shl164 | conv167) $buffering 1// bits of buffering = 64. 
    ->(arrayidx174) := add168 $buffering 1// bits of buffering = 64. 
    call175 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv176 := ($cast ($uint<64>) call175 ) $buffering 1// bits of buffering = 64. 
    shl178 := (conv176 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call179 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv181 := ($cast ($uint<64>) call179 ) $buffering 1// bits of buffering = 64. 
    add182 := (shl178 | conv181) $buffering 1// bits of buffering = 64. 
    shl184 := (add182 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call185 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv187 := ($cast ($uint<64>) call185 ) $buffering 1// bits of buffering = 64. 
    add188 := (shl184 | conv187) $buffering 1// bits of buffering = 64. 
    shl190 := (add188 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call191 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv193 := ($cast ($uint<64>) call191 ) $buffering 1// bits of buffering = 64. 
    add194 := (shl190 | conv193) $buffering 1// bits of buffering = 64. 
    shl196 := (add194 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call197 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv199 := ($cast ($uint<64>) call197 ) $buffering 1// bits of buffering = 64. 
    add200 := (shl196 | conv199) $buffering 1// bits of buffering = 64. 
    shl202 := (add200 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call203 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv205 := ($cast ($uint<64>) call203 ) $buffering 1// bits of buffering = 64. 
    add206 := (shl202 | conv205) $buffering 1// bits of buffering = 64. 
    shl208 := (add206 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call209 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv211 := ($cast ($uint<64>) call209 ) $buffering 1// bits of buffering = 64. 
    add212 := (shl208 | conv211) $buffering 1// bits of buffering = 64. 
    shl214 := (add212 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call215 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv217 := ($cast ($uint<64>) call215 ) $buffering 1// bits of buffering = 64. 
    add218 := (shl214 | conv217) $buffering 1// bits of buffering = 64. 
    ->(arrayidx224) := add218 $buffering 1// bits of buffering = 64. 
    call225 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv226 := ($cast ($uint<64>) call225 ) $buffering 1// bits of buffering = 64. 
    shl228 := (conv226 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call229 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv231 := ($cast ($uint<64>) call229 ) $buffering 1// bits of buffering = 64. 
    add232 := (shl228 | conv231) $buffering 1// bits of buffering = 64. 
    shl234 := (add232 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call235 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv237 := ($cast ($uint<64>) call235 ) $buffering 1// bits of buffering = 64. 
    add238 := (shl234 | conv237) $buffering 1// bits of buffering = 64. 
    shl240 := (add238 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call241 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv243 := ($cast ($uint<64>) call241 ) $buffering 1// bits of buffering = 64. 
    add244 := (shl240 | conv243) $buffering 1// bits of buffering = 64. 
    shl246 := (add244 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call247 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv249 := ($cast ($uint<64>) call247 ) $buffering 1// bits of buffering = 64. 
    add250 := (shl246 | conv249) $buffering 1// bits of buffering = 64. 
    shl252 := (add250 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call253 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv255 := ($cast ($uint<64>) call253 ) $buffering 1// bits of buffering = 64. 
    add256 := (shl252 | conv255) $buffering 1// bits of buffering = 64. 
    shl258 := (add256 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call259 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv261 := ($cast ($uint<64>) call259 ) $buffering 1// bits of buffering = 64. 
    add262 := (shl258 | conv261) $buffering 1// bits of buffering = 64. 
    shl264 := (add262 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call265 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv267 := ($cast ($uint<64>) call265 ) $buffering 1// bits of buffering = 64. 
    add268 := (shl264 | conv267) $buffering 1// bits of buffering = 64. 
    ->(arrayidx274) := add268 $buffering 1// bits of buffering = 64. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnext == tmp481) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    mul299 := (add23 * add13) $buffering 1// bits of buffering = 16. 
    mul306 := (add63 * add53) $buffering 1// bits of buffering = 16. 
    conv347 := ($bitcast ($uint<32>) ($cast ($int<32>) add63 ) ) $buffering 1// bits of buffering = 32. 
    conv353 := ($bitcast ($uint<32>) ($cast ($int<32>) mul306 ) ) $buffering 1// bits of buffering = 32. 
    conv412 := ($bitcast ($uint<32>) ($cast ($int<32>) add23 ) ) $buffering 1// bits of buffering = 32. 
    conv428 := ($bitcast ($uint<32>) ($cast ($int<32>) add33 ) ) $buffering 1// bits of buffering = 32. 
    shl429 := (conv428 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add430 := (shl429 + conv69) $buffering 1// bits of buffering = 32. 
    add445 := (shl429 + add) $buffering 1// bits of buffering = 32. 
    add323 := (conv428 + add) $buffering 1// bits of buffering = 32. 
    add340 := (conv428 + conv69) $buffering 1// bits of buffering = 32. 
    conv374 := ($bitcast ($uint<32>) ($cast ($int<32>) mul299 ) ) $buffering 1// bits of buffering = 32. 
    $place[forx_xend_whilex_xbody]
    $merge forx_xend_whilex_xbody ifx_xend454_whilex_xbody 
    $phi i279x_x2 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 			  ($cast ($uint<16>) i279x_x1x_xph ) $on   ifx_xend454_whilex_xbody 
    // type of target is $uint<16>
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend454_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend454_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    cmp315 := (($bitcast ($int<16>) i279x_x2 ) < ($bitcast ($int<16>) add33 )) $buffering 1// bits of buffering = 1. 
    $if cmp315 $then 
    $place[whilex_xbody_ifx_xthen]
    $else 
    $place[whilex_xbody_lorx_xlhsx_xfalse]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse 
    $endmerge
    conv318 := ($bitcast ($uint<32>) ($cast ($int<32>) i279x_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp324x_xnot := (($bitcast ($int<32>) conv318 ) >= ($bitcast ($int<32>) add323 )) $buffering 1// bits of buffering = 1. 
    cmp331 := (($bitcast ($int<16>) jx_x1 ) < ($bitcast ($int<16>) add33 )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmp324x_xnot | cmp331) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[lorx_xlhsx_xfalse_ifx_xthen]
    $else 
    $place[lorx_xlhsx_xfalse_lorx_xlhsx_xfalse333]
    $endif
    $merge lorx_xlhsx_xfalse_lorx_xlhsx_xfalse333 
    $endmerge
    conv335 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp341 := (($bitcast ($int<32>) conv335 ) < ($bitcast ($int<32>) add340 )) $buffering 1// bits of buffering = 1. 
    $if cmp341 $then 
    $place[lorx_xlhsx_xfalse333_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse333_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse_ifx_xthen lorx_xlhsx_xfalse333_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv345 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv349 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul350 := (conv349 * conv347) $buffering 1// bits of buffering = 32. 
    conv355 := ($bitcast ($uint<32>) ($cast ($int<32>) i279x_x2 ) ) $buffering 1// bits of buffering = 32. 
    mul356 := (conv355 * conv353) $buffering 1// bits of buffering = 32. 
    add351 := (conv345 + mul356) $buffering 1// bits of buffering = 32. 
    add357 := (add351 + mul350) $buffering 1// bits of buffering = 32. 
    shr359 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add357 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom360 := ($bitcast ($uint<64>) ($cast ($int<64>) shr359 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx361 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom360]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx361) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse333_ifx_xelse 
    $endmerge
    conv364 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv335 - conv428) $buffering 1// bits of buffering = 32. 
    mul371 := (sub * conv412) $buffering 1// bits of buffering = 32. 
    sub379 := (conv318 - conv428) $buffering 1// bits of buffering = 32. 
    mul380 := (sub379 * conv374) $buffering 1// bits of buffering = 32. 
    add372 := (mul380 + conv364) $buffering 1// bits of buffering = 32. 
    add381 := (add372 + mul371) $buffering 1// bits of buffering = 32. 
    mul390 := (conv335 * conv347) $buffering 1// bits of buffering = 32. 
    mul396 := (conv318 * conv353) $buffering 1// bits of buffering = 32. 
    add391 := (conv364 + mul396) $buffering 1// bits of buffering = 32. 
    add397 := (add391 + mul390) $buffering 1// bits of buffering = 32. 
    shr399 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add381 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom400 := ($bitcast ($uint<64>) ($cast ($int<64>) shr399 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx401 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom400]) $buffering 1// bits of buffering = 32. 
    tmp402 := ->(arrayidx401) $buffering 1// bits of buffering = 64. 
    shr404 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add397 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom405 := ($bitcast ($uint<64>) ($cast ($int<64>) shr404 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx406 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom405]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx406) := tmp402 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv409 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add410 := (conv409 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp413 := (($bitcast ($int<32>) add410 ) < ($bitcast ($int<32>) conv412 )) $buffering 1// bits of buffering = 1. 
    $if cmp413 $then 
    $place[ifx_xend_ifx_xthen415]
    $else 
    $place[ifx_xend_ifx_xelse420]
    $endif
    $merge ifx_xend_ifx_xthen415 
    $endmerge
    add418 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen415_ifx_xend454]
    $merge ifx_xend_ifx_xelse420 
    $endmerge
    inc422 := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv424 := ($bitcast ($uint<32>) ($cast ($int<32>) inc422 ) ) $buffering 1// bits of buffering = 32. 
    cmp431 := (conv424 == add430) $buffering 1// bits of buffering = 1. 
    inc436 := ($cast ($uint<16>) cmp431 ) $buffering 1// bits of buffering = 16. 
    inc436x_xi279x_x2 := (inc436 + i279x_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp431 ($bitcast ($uint<16>) _b0000000000000000  )  inc422 )  $buffering 1// bits of buffering = 16. 
    conv439 := ($bitcast ($uint<32>) ($cast ($int<32>) inc436x_xi279x_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp446 := (conv439 == add445) $buffering 1// bits of buffering = 1. 
    $if cmp446 $then 
    $place[ifx_xelse420_whilex_xend]
    $else 
    $place[ifx_xelse420_ifx_xend454]
    $endif
    $merge ifx_xelse420_ifx_xend454 ifx_xthen415_ifx_xend454 
    $phi i279x_x1x_xph := 			  ($cast ($uint<16>) i279x_x2 ) $on   ifx_xthen415_ifx_xend454 			  ($cast ($uint<16>) inc436x_xi279x_x2 ) $on   ifx_xelse420_ifx_xend454 
    // type of target is $uint<16>
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add418 ) $on   ifx_xthen415_ifx_xend454 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse420_ifx_xend454 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen415_ifx_xend454 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse420_ifx_xend454 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend454_whilex_xbody]
    $merge ifx_xelse420_whilex_xend 
    $endmerge
    $barrier
    conv458 := ($cast ($uint<32>) add53 ) $buffering 1// bits of buffering = 32. 
    conv461 := ($cast ($uint<32>) add63 ) $buffering 1// bits of buffering = 32. 
    mul459 := (conv458 * add43) $buffering 1// bits of buffering = 32. 
    mul462 := (mul459 * conv461) $buffering 1// bits of buffering = 32. 
    $call sendOutput (mul462 ) () 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: R 
// Memory space 1: T 
// use of gated clocks in modules 
