$record [structx_x__SizedTensorDescriptor]  <  structx_x__TensorDescriptor  >  < $uint<32> > 
$record [structx_x__SizedTensor_16K]  <  structx_x__SizedTensorDescriptor  >  < $array[16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor]  < $uint<32> >  < $uint<8> >  < $uint<32> >  < $array[64] $of $uint<32> > 
$pipe  ZeroPad_input_pipe : $uint<16>  $depth 2 
// can point into 
$pipe  ZeroPad_output_pipe : $uint<16>  $depth 2 
// can point into 
$pipe  elapsed_time_pipe : $uint<64>  $depth 1 
// can point into 
$storage  input :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 8
// can point into 
$storage  output :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 32
// can point into 
$storage  pad : $uint<16> // memory space index = 2  base address = 0  word size = 16
// can point into 
$noblock $pipe  timer_req : $uint<1>  $depth 1 
// can point into 
$pipe  timer_resp : $uint<64>  $depth 1 
// can point into 
$module [getRemainingElements]
$in ( ne : $uint<16>  )
$out ( ret_val__ : $uint<64>  )
$is
{
  $branchblock [body]
  {
    cmp14 := (ne == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp14 $then 
    $place[entry_forx_xend]
    $else 
    $place[entry_forx_xbodyx_xpreheader]
    $endif
    $merge entry_forx_xbodyx_xpreheader 
    $endmerge
    $place[forx_xbodyx_xpreheader_forx_xbody]
    $merge forx_xbody_forx_xbody forx_xbodyx_xpreheader_forx_xbody 
    $phi nx_x016 := 			  ($cast ($uint<16>) inc ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<16>
    $phi elementx_x015 := 			  ($cast ($uint<64>) shl ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    call := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv5 := ($cast ($uint<64>) call ) $buffering 1// bits of buffering = 64. 
    add := (conv5 | elementx_x015) $buffering 1// bits of buffering = 64. 
    shl := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    inc := (nx_x016 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    exitcond1 := (inc == ne) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $phi shlx_xlcssa := 			  ($cast ($uint<64>) shl ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<64>
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $phi elementx_x0x_xlcssa := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   entry_forx_xend 			  ($cast ($uint<64>) shlx_xlcssa ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<64>
    $endmerge
    conv10 := ($cast ($uint<64>) ne ) $buffering 1// bits of buffering = 64. 
    sub := (($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ) - conv10) $buffering 1// bits of buffering = 64. 
    mul := (sub << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )) $buffering 1// bits of buffering = 64. 
    sh_prom := (mul & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111110000  )) $buffering 1// bits of buffering = 64. 
    ret_val__ := (elementx_x0x_xlcssa << sh_prom) $buffering 1// bits of buffering = 64. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $null
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [sendOutput]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  out_datax_xi_alloc : $array[3] $of $uint<16> // memory space index = 4  base address = 0  word size = 16
    // can point into 
    out_datax_xi := @(out_datax_xi_alloc) $buffering 1// bits of buffering = 32. 
    iNsTr_0 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
    iNsTr_1 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    mul := (tmp1 * tmp) $buffering 1// bits of buffering = 32. 
    mul3 := (mul * tmp2) $buffering 1// bits of buffering = 32. 
    conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
    shr52x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1// bits of buffering = 64. 
    cmp53 := (shr52x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp53 $then 
    $place[entry_forx_xend]
    $else 
    $place[entry_bbx_xnph55]
    $endif
    $merge entry_bbx_xnph55 
    $endmerge
    tmp65 := (conv >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp66 := (tmp65 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp3 := (tmp1 * tmp) $buffering 1// bits of buffering = 32. 
    tmp4 := (tmp3 * tmp2) $buffering 1// bits of buffering = 32. 
    tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
    tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph55_forx_xbody]
    $merge bbx_xnph55_forx_xbody forx_xbody_forx_xbody 
    $phi indvar70 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph55_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext71 ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][indvar70]) $buffering 1// bits of buffering = 32. 
    tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    conv14 := ($cast ($uint<16>) tmp11 ) $buffering 1// bits of buffering = 16. 
    shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv20 := ($cast ($uint<16>) shr17 ) $buffering 1// bits of buffering = 16. 
    shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv26 := ($cast ($uint<16>) shr23 ) $buffering 1// bits of buffering = 16. 
    shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv32 := ($cast ($uint<16>) shr29 ) $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := conv32 $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := conv26 $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := conv20 $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := conv14 $buffering 1// bits of buffering = 16. 
    indvarx_xnext71 := (indvar70 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond9 := (indvarx_xnext71 == umax8) $buffering 1// bits of buffering = 1. 
    $if exitcond9 $then 
    $place[forx_xbody_forx_xcondx_xforx_xend_crit_edge]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xcondx_xforx_xend_crit_edge 
    $endmerge
    umax := ( $mux tmp66 tmp65  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    phitmp73 := (umax & ($bitcast ($uint<64>) _b0000000000000000000000000000000000111111111111111111111111111111  )) $buffering 1// bits of buffering = 64. 
    $place[forx_xcondx_xforx_xend_crit_edge_forx_xend]
    $merge entry_forx_xend forx_xcondx_xforx_xend_crit_edge_forx_xend 
    $phi ix_x0x_xlcssa := 			  ($cast ($uint<64>) phitmp73 ) $on   forx_xcondx_xforx_xend_crit_edge_forx_xend 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   entry_forx_xend 
    // type of target is $uint<64>
    $endmerge
    and44 := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )) $buffering 1// bits of buffering = 64. 
    tobool := (and44 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if tobool $then 
    $place[forx_xend_sendRemainingElementsx_xexit]
    $else 
    $place[forx_xend_bbx_xnphx_xi]
    $endif
    $merge forx_xend_bbx_xnphx_xi 
    $endmerge
    arrayidxx_xi := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][ix_x0x_xlcssa]) $buffering 1// bits of buffering = 32. 
    tmp1x_xi := ->(arrayidxx_xi) $buffering 1// bits of buffering = 64. 
    shrx_xi := (tmp1x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    convx_xi := ($cast ($uint<16>) shrx_xi ) $buffering 1// bits of buffering = 16. 
    arrayidx6x_xi := out_datax_xi[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx6x_xi) := convx_xi $buffering 1// bits of buffering = 16. 
    shr8x_xi := (tmp1x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv11x_xi := ($cast ($uint<16>) shr8x_xi ) $buffering 1// bits of buffering = 16. 
    arrayidx12x_xi := out_datax_xi[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx12x_xi) := conv11x_xi $buffering 1// bits of buffering = 16. 
    shr14x_xi := (tmp1x_xi >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv17x_xi := ($cast ($uint<16>) shr14x_xi ) $buffering 1// bits of buffering = 16. 
    arrayidx18x_xi := out_datax_xi[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx18x_xi) := conv17x_xi $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := conv17x_xi $buffering 1// bits of buffering = 16. 
    exitcondx_xi49 := (and44 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    $if exitcondx_xi49 $then 
    $place[bbx_xnphx_xi_sendRemainingElementsx_xexit]
    $else 
    $place[bbx_xnphx_xi_bbx_xnph]
    $endif
    $merge bbx_xnphx_xi_bbx_xnph 
    $endmerge
    tmp12 := (tmp1 * tmp) $buffering 1// bits of buffering = 32. 
    tmp13 := (tmp12 * tmp2) $buffering 1// bits of buffering = 32. 
    tmp14 := ($cast ($uint<2>) tmp13 ) $buffering 1// bits of buffering = 2. 
    tmp15 := ($cast ($uint<64>) tmp14 ) $buffering 1// bits of buffering = 64. 
    tmp16 := (tmp15 + ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111110  )) $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi]
    $merge bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi 
    $phi indvar10 := 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi 
    // type of target is $uint<64>
    $endmerge
    tmp18 := (indvar10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    arrayidx26x_xphix_xtransx_xinsertx_xi := out_datax_xi[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][tmp18] $buffering 1// bits of buffering = 32. 
    tmp27x_xprex_xi := ->(arrayidx26x_xphix_xtransx_xinsertx_xi) $buffering 1// bits of buffering = 16. 
    ZeroPad_output_pipe := tmp27x_xprex_xi $buffering 1// bits of buffering = 16. 
    exitcond17 := (indvar10 == tmp16) $buffering 1// bits of buffering = 1. 
    $if exitcond17 $then 
    $place[forx_xbodyx_xforx_xbody_crit_edgex_xi_sendRemainingElementsx_xexitx_xloopexit]
    $else 
    $place[forx_xbodyx_xforx_xbody_crit_edgex_xi_forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge]
    $endif
    $merge forx_xbodyx_xforx_xbody_crit_edgex_xi_forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge 
    $endmerge
    indvarx_xnext := (indvar10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    $place[forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi]
    $merge forx_xbodyx_xforx_xbody_crit_edgex_xi_sendRemainingElementsx_xexitx_xloopexit 
    $endmerge
    $place[sendRemainingElementsx_xexitx_xloopexit_sendRemainingElementsx_xexit]
    $merge bbx_xnphx_xi_sendRemainingElementsx_xexit forx_xend_sendRemainingElementsx_xexit sendRemainingElementsx_xexitx_xloopexit_sendRemainingElementsx_xexit 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [sendRemainingElements]
$in ( addr : $uint<32>   ne : $uint<16>  )
$out ()
$is
{
  $branchblock [body]
  {
    $storage  out_data_alloc : $array[3] $of $uint<16> // memory space index = 3  base address = 0  word size = 16
    // can point into 
    out_data := @(out_data_alloc) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) addr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom]) $buffering 1// bits of buffering = 32. 
    tmp1 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    shr := (tmp1 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv := ($cast ($uint<16>) shr ) $buffering 1// bits of buffering = 16. 
    arrayidx6 := out_data[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx6) := conv $buffering 1// bits of buffering = 16. 
    shr8 := (tmp1 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv11 := ($cast ($uint<16>) shr8 ) $buffering 1// bits of buffering = 16. 
    arrayidx12 := out_data[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx12) := conv11 $buffering 1// bits of buffering = 16. 
    shr14 := (tmp1 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv17 := ($cast ($uint<16>) shr14 ) $buffering 1// bits of buffering = 16. 
    arrayidx18 := out_data[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx18) := conv17 $buffering 1// bits of buffering = 16. 
    cmp29 := (ne == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp29 $then 
    $place[entry_forx_xend]
    $else 
    $place[entry_bbx_xnph]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp2 := ($cast ($uint<64>) ne ) $buffering 1// bits of buffering = 64. 
    tmp3 := (tmp2 + ($bitcast ($uint<64>) _b1111111111111111111111111111111111111111111111111111111111111111  )) $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbodyx_xforx_xbody_crit_edge_forx_xbody 
    $phi indvar1 := 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbodyx_xforx_xbody_crit_edge_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 
    // type of target is $uint<64>
    $phi tmp27 := 			  ($cast ($uint<16>) conv17 ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<16>) tmp27x_xpre ) $on   forx_xbodyx_xforx_xbody_crit_edge_forx_xbody 
    // type of target is $uint<16>
    $endmerge
    tmp := (indvar1 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    arrayidx26x_xphix_xtransx_xinsert := out_data[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][tmp] $buffering 1// bits of buffering = 32. 
    ZeroPad_output_pipe := tmp27 $buffering 1// bits of buffering = 16. 
    exitcond4 := (indvar1 == tmp3) $buffering 1// bits of buffering = 1. 
    $if exitcond4 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbodyx_xforx_xbody_crit_edge]
    $endif
    $merge forx_xbody_forx_xbodyx_xforx_xbody_crit_edge 
    $endmerge
    tmp27x_xpre := ->(arrayidx26x_xphix_xtransx_xinsert) $buffering 1// bits of buffering = 16. 
    indvarx_xnext := (indvar1 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    $place[forx_xbodyx_xforx_xbody_crit_edge_forx_xbody]
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [testConfigure]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    iNsTr_0 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    call := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
    iNsTr_3 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_3) := conv $buffering 1// bits of buffering = 8. 
    call1 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv2 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    iNsTr_6 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_6) := conv2 $buffering 1// bits of buffering = 32. 
    cmp117 := (call1 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1// bits of buffering = 1. 
    call5118 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    $if cmp117 $then 
    $place[entry_forx_xend]
    $else 
    $place[entry_forx_xbodyx_xpreheader]
    $endif
    $merge entry_forx_xbodyx_xpreheader 
    $endmerge
    $place[forx_xbodyx_xpreheader_forx_xbody]
    $merge forx_xbody_forx_xbody forx_xbodyx_xpreheader_forx_xbody 
    $phi indvar149 := 			  ($cast ($uint<64>) tmp151 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<64>
    $phi call5120 := 			  ($cast ($uint<16>) call5 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<16>) call5118 ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<16>
    $endmerge
    tmp2 := (indvar149 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    inc := ($cast ($uint<32>) tmp2 ) $buffering 1// bits of buffering = 32. 
    arrayidx := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar149]) $buffering 1// bits of buffering = 32. 
    conv6 := ($cast ($uint<32>) call5120 ) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := conv6 $buffering 1// bits of buffering = 32. 
    tmp151 := (indvar149 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    iNsTr_27 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp3 := ->(iNsTr_27) $buffering 1// bits of buffering = 32. 
    cmp := (inc < tmp3) $buffering 1// bits of buffering = 1. 
    call5 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    $if cmp $then 
    $place[forx_xbody_forx_xbody]
    $else 
    $place[forx_xbody_forx_xendx_xloopexit]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $phi call5x_xlcssa1 := 			  ($cast ($uint<16>) call5 ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<16>
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $phi call5x_xlcssa := 			  ($cast ($uint<16>) call5118 ) $on   entry_forx_xend 			  ($cast ($uint<16>) call5x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<16>
    $endmerge
    pad := call5x_xlcssa $buffering 1// bits of buffering = 16. 
    call10 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv11 := ($cast ($uint<32>) call10 ) $buffering 1// bits of buffering = 32. 
    iNsTr_12 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_12) := conv11 $buffering 1// bits of buffering = 32. 
    call12 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv13 := ($cast ($uint<32>) call12 ) $buffering 1// bits of buffering = 32. 
    iNsTr_15 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_15) := conv13 $buffering 1// bits of buffering = 32. 
    call14 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv15 := ($cast ($uint<32>) call14 ) $buffering 1// bits of buffering = 32. 
    iNsTr_18 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_18) := conv15 $buffering 1// bits of buffering = 32. 
    iNsTr_20 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp22110 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
    cmp23111 := (tmp22110 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp23111 $then 
    $place[forx_xend_forx_xbodyx_xix_xpreheader]
    $else 
    $place[forx_xend_bbx_xnph114]
    $endif
    $merge forx_xend_bbx_xnph114 
    $endmerge
    tmp142 := (tmp22110 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp22x_xop := (tmp22110 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_24 := ($cast ($uint<64>) tmp22x_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp146 := ( $mux tmp142 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph114_forx_xbody25]
    $merge bbx_xnph114_forx_xbody25 forx_xbody25_forx_xbody25 
    $phi indvar140 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph114_forx_xbody25 			  ($cast ($uint<64>) indvarx_xnext141 ) $on   forx_xbody25_forx_xbody25 
    // type of target is $uint<64>
    $phi num_elemsx_x0113 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   bbx_xnph114_forx_xbody25 			  ($cast ($uint<32>) mul ) $on   forx_xbody25_forx_xbody25 
    // type of target is $uint<32>
    $endmerge
    arrayidx28 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar140]) $buffering 1// bits of buffering = 32. 
    tmp29 := ->(arrayidx28) $buffering 1// bits of buffering = 32. 
    mul := (tmp29 * num_elemsx_x0113) $buffering 1// bits of buffering = 32. 
    indvarx_xnext141 := (indvar140 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond11 := (indvarx_xnext141 == tmp146) $buffering 1// bits of buffering = 1. 
    $if exitcond11 $then 
    $place[forx_xbody25_forx_xend34]
    $else 
    $place[forx_xbody25_forx_xbody25]
    $endif
    $merge forx_xbody25_forx_xend34 
    $phi mulx_xlcssa := 			  ($cast ($uint<32>) mul ) $on   forx_xbody25_forx_xend34 
    // type of target is $uint<32>
    $phi tmp29x_xlcssa := 			  ($cast ($uint<32>) tmp29 ) $on   forx_xbody25_forx_xend34 
    // type of target is $uint<32>
    $phi num_elemsx_x0113x_xlcssa := 			  ($cast ($uint<32>) num_elemsx_x0113 ) $on   forx_xbody25_forx_xend34 
    // type of target is $uint<32>
    $endmerge
    conv36 := ($bitcast ($uint<64>) ($cast ($int<64>) mulx_xlcssa ) ) $buffering 1// bits of buffering = 64. 
    cmp41107 := (mulx_xlcssa > ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 1. 
    $if cmp41107 $then 
    $place[forx_xend34_bbx_xnph109]
    $else 
    $place[forx_xend34_forx_xend70]
    $endif
    $merge forx_xend34_bbx_xnph109 
    $endmerge
    tmp131 := (conv36 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp132 := (tmp131 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp5 := (num_elemsx_x0113x_xlcssa * tmp29x_xlcssa) $buffering 1// bits of buffering = 32. 
    tmp6 := ($bitcast ($uint<64>) ($cast ($int<64>) tmp5 ) ) $buffering 1// bits of buffering = 64. 
    tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph109_forx_xbody43]
    $merge bbx_xnph109_forx_xbody43 forx_xbody43_forx_xbody43 
    $phi indvar137 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph109_forx_xbody43 			  ($cast ($uint<64>) indvarx_xnext138 ) $on   forx_xbody43_forx_xbody43 
    // type of target is $uint<64>
    $endmerge
    arrayidx66 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][indvar137]) $buffering 1// bits of buffering = 32. 
    call45 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv46 := ($cast ($uint<64>) call45 ) $buffering 1// bits of buffering = 64. 
    shl := (conv46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    call48 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv50 := ($cast ($uint<64>) call48 ) $buffering 1// bits of buffering = 64. 
    add := (shl | conv50) $buffering 1// bits of buffering = 64. 
    shl52 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    call53 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv55 := ($cast ($uint<64>) call53 ) $buffering 1// bits of buffering = 64. 
    add56 := (shl52 | conv55) $buffering 1// bits of buffering = 64. 
    shl58 := (add56 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    call59 := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv61 := ($cast ($uint<64>) call59 ) $buffering 1// bits of buffering = 64. 
    add62 := (shl58 | conv61) $buffering 1// bits of buffering = 64. 
    ->(arrayidx66) := add62 $buffering 1// bits of buffering = 64. 
    indvarx_xnext138 := (indvar137 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond10 := (indvarx_xnext138 == umax9) $buffering 1// bits of buffering = 1. 
    $if exitcond10 $then 
    $place[forx_xbody43_forx_xcond37x_xforx_xend70_crit_edge]
    $else 
    $place[forx_xbody43_forx_xbody43]
    $endif
    $merge forx_xbody43_forx_xcond37x_xforx_xend70_crit_edge 
    $endmerge
    umax133 := ( $mux tmp132 tmp131  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    tmp134 := (umax133 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    phitmp := ($bitcast ($uint<64>) (($bitcast ($int<64>) tmp134 ) >> ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ) )) ) $buffering 1// bits of buffering = 64. 
    $place[forx_xcond37x_xforx_xend70_crit_edge_forx_xend70]
    $merge forx_xcond37x_xforx_xend70_crit_edge_forx_xend70 forx_xend34_forx_xend70 
    $phi ix_x1x_xlcssa := 			  ($cast ($uint<64>) phitmp ) $on   forx_xcond37x_xforx_xend70_crit_edge_forx_xend70 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xend34_forx_xend70 
    // type of target is $uint<64>
    $endmerge
    and := (conv36 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )) $buffering 1// bits of buffering = 64. 
    tobool := (and == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if tobool $then 
    $place[forx_xend70_ifx_xend]
    $else 
    $place[forx_xend70_forx_xbodyx_xix_xpreheader]
    $endif
    $merge forx_xend_forx_xbodyx_xix_xpreheader forx_xend70_forx_xbodyx_xix_xpreheader 
    $phi conv36156159 := 			  ($cast ($uint<64>) conv36 ) $on   forx_xend70_forx_xbodyx_xix_xpreheader 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) $on   forx_xend_forx_xbodyx_xix_xpreheader 
    // type of target is $uint<64>
    $phi num_elemsx_x0x_xlcssa155160 := 			  ($cast ($uint<32>) mulx_xlcssa ) $on   forx_xend70_forx_xbodyx_xix_xpreheader 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   forx_xend_forx_xbodyx_xix_xpreheader 
    // type of target is $uint<32>
    $phi ix_x1x_xlcssa161 := 			  ($cast ($uint<64>) ix_x1x_xlcssa ) $on   forx_xend70_forx_xbodyx_xix_xpreheader 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xend_forx_xbodyx_xix_xpreheader 
    // type of target is $uint<64>
    $endmerge
    tmp19 := ($cast ($uint<2>) num_elemsx_x0x_xlcssa155160 ) $buffering 1// bits of buffering = 2. 
    tmp20 := ($cast ($uint<16>) tmp19 ) $buffering 1// bits of buffering = 16. 
    $place[forx_xbodyx_xix_xpreheader_forx_xbodyx_xi]
    $merge forx_xbodyx_xi_forx_xbodyx_xi forx_xbodyx_xix_xpreheader_forx_xbodyx_xi 
    $phi nx_x016x_xi := 			  ($cast ($uint<16>) incx_xi ) $on   forx_xbodyx_xi_forx_xbodyx_xi 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xbodyx_xix_xpreheader_forx_xbodyx_xi 
    // type of target is $uint<16>
    $phi elementx_x015x_xi := 			  ($cast ($uint<64>) shlx_xi ) $on   forx_xbodyx_xi_forx_xbodyx_xi 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xix_xpreheader_forx_xbodyx_xi 
    // type of target is $uint<64>
    $endmerge
    callx_xi := ZeroPad_input_pipe $buffering 1// bits of buffering = 16. 
    conv5x_xi := ($cast ($uint<64>) callx_xi ) $buffering 1// bits of buffering = 64. 
    addx_xi := (conv5x_xi | elementx_x015x_xi) $buffering 1// bits of buffering = 64. 
    shlx_xi := (addx_xi << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    incx_xi := (nx_x016x_xi + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    exitcond21 := (incx_xi == tmp20) $buffering 1// bits of buffering = 1. 
    $if exitcond21 $then 
    $place[forx_xbodyx_xi_getRemainingElementsx_xexit]
    $else 
    $place[forx_xbodyx_xi_forx_xbodyx_xi]
    $endif
    $merge forx_xbodyx_xi_getRemainingElementsx_xexit 
    $phi shlx_xix_xlcssa := 			  ($cast ($uint<64>) shlx_xi ) $on   forx_xbodyx_xi_getRemainingElementsx_xexit 
    // type of target is $uint<64>
    $endmerge
    Bx_xnot := (conv36156159 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )) $buffering 1// bits of buffering = 64. 
    mulx_xi := (Bx_xnot & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    sh_promx_xi := (mulx_xi ^ ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    shl12x_xi := (shlx_xix_xlcssa << sh_promx_xi) $buffering 1// bits of buffering = 64. 
    arrayidx78 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][ix_x1x_xlcssa161]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx78) := shl12x_xi $buffering 1// bits of buffering = 64. 
    $place[getRemainingElementsx_xexit_ifx_xend]
    $merge forx_xend70_ifx_xend getRemainingElementsx_xexit_ifx_xend 
    $endmerge
    iNsTr_37 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    tmp80 := ->(iNsTr_37) $buffering 1// bits of buffering = 32. 
    iNsTr_38 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp81 := ->(iNsTr_38) $buffering 1// bits of buffering = 32. 
    iNsTr_39 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp83 := ->(iNsTr_39) $buffering 1// bits of buffering = 32. 
    mul82 := (tmp81 * tmp80) $buffering 1// bits of buffering = 32. 
    mul84 := (mul82 * tmp83) $buffering 1// bits of buffering = 32. 
    conv85 := ($cast ($uint<64>) mul84 ) $buffering 1// bits of buffering = 64. 
    shr90102x_xmask := (conv85 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1// bits of buffering = 64. 
    cmp91103 := (shr90102x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp91103 $then 
    $place[ifx_xend_forx_xend100]
    $else 
    $place[ifx_xend_bbx_xnph]
    $endif
    $merge ifx_xend_bbx_xnph 
    $endmerge
    tmp12 := (tmp81 * tmp80) $buffering 1// bits of buffering = 32. 
    tmp13 := (tmp12 * tmp83) $buffering 1// bits of buffering = 32. 
    tmp14 := ($cast ($uint<64>) tmp13 ) $buffering 1// bits of buffering = 64. 
    tmp15 := (tmp14 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp16 := (tmp15 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    umax17 := ( $mux tmp16 tmp15  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody93]
    $merge bbx_xnph_forx_xbody93 forx_xbody93_forx_xbody93 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody93 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody93_forx_xbody93 
    // type of target is $uint<64>
    $endmerge
    arrayidx96 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][indvar]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx96) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond18 := (indvarx_xnext == umax17) $buffering 1// bits of buffering = 1. 
    $if exitcond18 $then 
    $place[forx_xbody93_forx_xend100x_xloopexit]
    $else 
    $place[forx_xbody93_forx_xbody93]
    $endif
    $merge forx_xbody93_forx_xend100x_xloopexit 
    $endmerge
    $place[forx_xend100x_xloopexit_forx_xend100]
    $merge forx_xend100x_xloopexit_forx_xend100 ifx_xend_forx_xend100 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [timer]
$in ()
$out ( T : $uint<64>  )
$is
{
  timer_req := ($bitcast ($uint<1>) _b1 ) $buffering 1// bits of buffering = 1. 
  T := timer_resp $buffering 1// bits of buffering = 64. 
}
$module [timerDaemon]
$in ()
$out ()
$is
{
  $branchblock [loop]
  {
    $dopipeline $depth 7 $buffering 1
    $fullrate 
    $merge $entry $loopback 
    $phi COUNTER := 			  nCOUNTER $on   $loopback 			  ($bitcast ($uint<64>) _b0 ) $on   $entry 
    // type of target is $uint<64>
    $phi req := 			  timer_req $on   $entry ,   $loopback 
    // type of target is $uint<1>
    $endmerge
    $volatile nCOUNTER := (COUNTER + 1 ) $buffering 1
    $guard (req) timer_resp := COUNTER $buffering 1// bits of buffering = 64. 
    $while 1 
  }
}
$module [zeropad_thread]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  dest2_alloc :  structx_x__SizedTensor_16K  // memory space index = 5  base address = 0  word size = 8
    // can point into 
    dest2 := @(dest2_alloc) $buffering 1// bits of buffering = 32. 
    $call testConfigure () () 
    $call timer () (call ) 
    conv := ($bitcast ($uint<64>) ($cast ($int<64>) call ) ) $buffering 1// bits of buffering = 64. 
    iNsTr_1 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    tmp := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    iNsTr_3 := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
    tmp8 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )] $buffering 1// bits of buffering = 32. 
    ->(tmp8) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    tmp11 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )] $buffering 1// bits of buffering = 32. 
    ->(tmp11) := ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) $buffering 1// bits of buffering = 32. 
    iNsTr_6 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    tmp12 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
    arrayidx := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := tmp12 $buffering 1// bits of buffering = 32. 
    iNsTr_8 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp16 := ->(iNsTr_8) $buffering 1// bits of buffering = 32. 
    arrayidx20 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx20) := tmp16 $buffering 1// bits of buffering = 32. 
    iNsTr_10 := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp21 := ->(iNsTr_10) $buffering 1// bits of buffering = 32. 
    arrayidx25 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )] $buffering 1// bits of buffering = 32. 
    ->(arrayidx25) := tmp21 $buffering 1// bits of buffering = 32. 
    tmp28 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )] $buffering 1// bits of buffering = 32. 
    ->(tmp28) := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    mul := (tmp16 * tmp12) $buffering 1// bits of buffering = 32. 
    mul32 := (mul * tmp21) $buffering 1// bits of buffering = 32. 
    tmp34 := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )] $buffering 1// bits of buffering = 32. 
    ->(tmp34) := mul32 $buffering 1// bits of buffering = 32. 
    cmp358 := (($bitcast ($int<32>) tmp ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    $if cmp358 $then 
    $place[entry_bbx_xnph360]
    $else 
    $place[entry_entryx_xforx_xend171_crit_edge]
    $endif
    $merge entry_entryx_xforx_xend171_crit_edge 
    $endmerge
    tmp175x_xpre := pad $buffering 1// bits of buffering = 16. 
    $place[entryx_xforx_xend171_crit_edge_forx_xend171]
    $merge entry_bbx_xnph360 
    $endmerge
    cmp57355 := (($bitcast ($int<32>) tmp2 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    cmp63352 := (($bitcast ($int<32>) tmp4 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    tmp96 := pad $buffering 1// bits of buffering = 16. 
    tmp167 := (tmp2 * tmp4) $buffering 1// bits of buffering = 32. 
    tmp172 := (tmp4 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp174 := (tmp2 * tmp4) $buffering 1// bits of buffering = 32. 
    tmp176 := (tmp174 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp180 := ($cast ($uint<32>) tmp96 ) $buffering 1// bits of buffering = 32. 
    tmp181 := (tmp180 * ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    tmp182 := (tmp + tmp181) $buffering 1// bits of buffering = 32. 
    tmp183 := (tmp2 + tmp181) $buffering 1// bits of buffering = 32. 
    tmp184 := (tmp182 * tmp183) $buffering 1// bits of buffering = 32. 
    tmp185 := (tmp184 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp187 := (tmp182 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp190 := (tmp180 * ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 32. 
    tmp191 := (tmp + tmp190) $buffering 1// bits of buffering = 32. 
    tmp192 := (tmp191 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp196 := (tmp182 * tmp183) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnph360_forx_xcond54x_xpreheader]
    $merge bbx_xnph360_forx_xcond54x_xpreheader forx_xinc168_forx_xcond54x_xpreheader 
    $phi ix_x0359 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph360_forx_xcond54x_xpreheader 			  ($cast ($uint<32>) inc170 ) $on   forx_xinc168_forx_xcond54x_xpreheader 
    // type of target is $uint<32>
    $endmerge
    tmp168 := (tmp167 * ix_x0359) $buffering 1// bits of buffering = 32. 
    tmp177 := (tmp176 * ix_x0359) $buffering 1// bits of buffering = 32. 
    tmp189 := (ix_x0359 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp193 := (tmp192 + tmp189) $buffering 1// bits of buffering = 32. 
    tmp199 := (tmp191 + ix_x0359) $buffering 1// bits of buffering = 32. 
    cmp57355x_xnot := (cmp57355 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp63352x_xnot := (cmp63352 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    brmerge := (cmp57355x_xnot | cmp63352x_xnot) $buffering 1// bits of buffering = 1. 
    $if brmerge $then 
    $place[forx_xcond54x_xpreheader_forx_xinc168]
    $else 
    $place[forx_xcond54x_xpreheader_bbx_xnph354x_xusx_xpreheader]
    $endif
    $merge forx_xcond54x_xpreheader_bbx_xnph354x_xusx_xpreheader 
    $endmerge
    $place[bbx_xnph354x_xusx_xpreheader_bbx_xnph354x_xus]
    $merge forx_xbody65x_xus_forx_xinc164x_xus 
    $endmerge
    inc166x_xus := (jx_x0356x_xus + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond129 := (inc166x_xus == tmp2) $buffering 1// bits of buffering = 1. 
    $if exitcond129 $then 
    $place[forx_xinc164x_xus_forx_xinc168x_xloopexit]
    $else 
    $place[forx_xinc164x_xus_bbx_xnph354x_xus]
    $endif
    $merge bbx_xnph354x_xus_forx_xbody65x_xus forx_xbody65x_xus_forx_xbody65x_xus 
    $phi kx_x0353x_xus := 			  ($cast ($uint<32>) inc163x_xus ) $on   forx_xbody65x_xus_forx_xbody65x_xus 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph354x_xus_forx_xbody65x_xus 
    // type of target is $uint<32>
    $endmerge
    add75x_xus := (tmp169 + kx_x0353x_xus) $buffering 1// bits of buffering = 32. 
    tmp171 := (kx_x0353x_xus * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    subx_xus := (tmp178 + tmp171) $buffering 1// bits of buffering = 32. 
    tmp186 := (tmp185 * kx_x0353x_xus) $buffering 1// bits of buffering = 32. 
    sub132x_xus := (tmp194 + tmp186) $buffering 1// bits of buffering = 32. 
    tmp197 := (tmp196 * kx_x0353x_xus) $buffering 1// bits of buffering = 32. 
    add126x_xus := (tmp200 + tmp197) $buffering 1// bits of buffering = 32. 
    shrx_xus := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75x_xus ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxpromx_xus := ($bitcast ($uint<64>) ($cast ($int<64>) shrx_xus ) ) $buffering 1// bits of buffering = 64. 
    arrayidx78x_xus := @(input[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxpromx_xus]) $buffering 1// bits of buffering = 32. 
    tmp79x_xus := ->(arrayidx78x_xus) $buffering 1// bits of buffering = 64. 
    mul91x_xus := (subx_xus & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_promx_xus := ($cast ($uint<64>) mul91x_xus ) $buffering 1// bits of buffering = 64. 
    shr92x_xus := (tmp79x_xus >> sh_promx_xus) $buffering 1// bits of buffering = 64. 
    shr135x_xus := ($bitcast ($uint<32>) (($bitcast ($int<32>) add126x_xus ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom136x_xus := ($bitcast ($uint<64>) ($cast ($int<64>) shr135x_xus ) ) $buffering 1// bits of buffering = 64. 
    arrayidx138x_xus := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom136x_xus] $buffering 1// bits of buffering = 32. 
    tmp139x_xus := ->(arrayidx138x_xus) $buffering 1// bits of buffering = 64. 
    sext327x_xus := (shr92x_xus << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv141x_xus := ($bitcast ($uint<64>) (($bitcast ($int<64>) sext327x_xus ) >> ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ) )) ) $buffering 1// bits of buffering = 64. 
    mul144x_xus := (sub132x_xus & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_prom145x_xus := ($cast ($uint<64>) mul144x_xus ) $buffering 1// bits of buffering = 64. 
    shlx_xus := (conv141x_xus << sh_prom145x_xus) $buffering 1// bits of buffering = 64. 
    orx_xus := (shlx_xus | tmp139x_xus) $buffering 1// bits of buffering = 64. 
    ->(arrayidx138x_xus) := orx_xus $buffering 1// bits of buffering = 64. 
    inc163x_xus := (kx_x0353x_xus + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond92 := (inc163x_xus == tmp4) $buffering 1// bits of buffering = 1. 
    $if exitcond92 $then 
    $place[forx_xbody65x_xus_forx_xinc164x_xus]
    $else 
    $place[forx_xbody65x_xus_forx_xbody65x_xus]
    $endif
    $merge bbx_xnph354x_xusx_xpreheader_bbx_xnph354x_xus forx_xinc164x_xus_bbx_xnph354x_xus 
    $phi jx_x0356x_xus := 			  ($cast ($uint<32>) inc166x_xus ) $on   forx_xinc164x_xus_bbx_xnph354x_xus 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph354x_xusx_xpreheader_bbx_xnph354x_xus 
    // type of target is $uint<32>
    $endmerge
    tmp166 := (tmp4 * jx_x0356x_xus) $buffering 1// bits of buffering = 32. 
    tmp169 := (tmp168 + tmp166) $buffering 1// bits of buffering = 32. 
    tmp173 := (tmp172 * jx_x0356x_xus) $buffering 1// bits of buffering = 32. 
    tmp178 := (tmp177 + tmp173) $buffering 1// bits of buffering = 32. 
    tmp188 := (tmp187 * jx_x0356x_xus) $buffering 1// bits of buffering = 32. 
    tmp194 := (tmp193 + tmp188) $buffering 1// bits of buffering = 32. 
    tmp198 := (tmp182 * jx_x0356x_xus) $buffering 1// bits of buffering = 32. 
    tmp200 := (tmp199 + tmp198) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnph354x_xus_forx_xbody65x_xus]
    $merge forx_xinc164x_xus_forx_xinc168x_xloopexit 
    $endmerge
    $place[forx_xinc168x_xloopexit_forx_xinc168]
    $merge forx_xcond54x_xpreheader_forx_xinc168 forx_xinc168x_xloopexit_forx_xinc168 
    $endmerge
    inc170 := (ix_x0359 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond165 := (inc170 == tmp) $buffering 1// bits of buffering = 1. 
    $if exitcond165 $then 
    $place[forx_xinc168_forx_xend171x_xloopexit]
    $else 
    $place[forx_xinc168_forx_xcond54x_xpreheader]
    $endif
    $merge forx_xinc168_forx_xend171x_xloopexit 
    $endmerge
    $place[forx_xend171x_xloopexit_forx_xend171]
    $merge entryx_xforx_xend171_crit_edge_forx_xend171 forx_xend171x_xloopexit_forx_xend171 
    $phi tmp175 := 			  ($cast ($uint<16>) tmp175x_xpre ) $on   entryx_xforx_xend171_crit_edge_forx_xend171 			  ($cast ($uint<16>) tmp96 ) $on   forx_xend171x_xloopexit_forx_xend171 
    // type of target is $uint<16>
    $endmerge
    conv201343 := ($cast ($uint<32>) tmp175 ) $buffering 1// bits of buffering = 32. 
    mul202344 := (conv201343 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add203345 := (mul202344 + tmp) $buffering 1// bits of buffering = 32. 
    cmp204346 := (($bitcast ($int<32>) add203345 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    $if cmp204346 $then 
    $place[forx_xend171_bbx_xnph351]
    $else 
    $place[forx_xend171_forx_xend314]
    $endif
    $merge forx_xend171_bbx_xnph351 
    $endmerge
    add215336 := (mul202344 + tmp2) $buffering 1// bits of buffering = 32. 
    cmp216337 := (($bitcast ($int<32>) add215336 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    cmp222330 := (($bitcast ($int<32>) tmp4 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    tmp1 := ($cast ($uint<32>) tmp175 ) $buffering 1// bits of buffering = 32. 
    tmp3 := (tmp1 * ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    tmp5 := (tmp2 + tmp3) $buffering 1// bits of buffering = 32. 
    tmp6 := (($bitcast ($int<32>) tmp5 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) $buffering 1// bits of buffering = 1. 
    smax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 32. 
    tmp43 := ($cast ($uint<32>) tmp175 ) $buffering 1// bits of buffering = 32. 
    tmp44 := (tmp43 * ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    tmp45 := (tmp2 + tmp44) $buffering 1// bits of buffering = 32. 
    tmp46 := (($bitcast ($int<32>) tmp45 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) $buffering 1// bits of buffering = 1. 
    smax47 := ( $mux tmp46 tmp45  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 32. 
    tmp48 := (tmp4 * smax47) $buffering 1// bits of buffering = 32. 
    tmp68 := (tmp4 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp73 := ($cast ($uint<32>) tmp175 ) $buffering 1// bits of buffering = 32. 
    tmp74 := (tmp73 * ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    tmp75 := (tmp + tmp74) $buffering 1// bits of buffering = 32. 
    tmp76 := (($bitcast ($int<32>) tmp75 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )) $buffering 1// bits of buffering = 1. 
    smax := ( $mux tmp76 tmp75  ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 32. 
    tmp78 := (tmp2 + tmp74) $buffering 1// bits of buffering = 32. 
    tmp79 := (tmp75 * tmp78) $buffering 1// bits of buffering = 32. 
    tmp84 := (tmp75 * tmp78) $buffering 1// bits of buffering = 32. 
    tmp85 := (tmp84 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    tmp87 := (tmp75 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnph351_forx_xcond209x_xpreheader]
    $merge bbx_xnph351_forx_xcond209x_xpreheader forx_xinc311_forx_xcond209x_xpreheader 
    $phi indexx_x2350 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph351_forx_xcond209x_xpreheader 			  ($cast ($uint<32>) indexx_x1x_xlcssa ) $on   forx_xinc311_forx_xcond209x_xpreheader 
    // type of target is $uint<32>
    $phi ix_x1347 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph351_forx_xcond209x_xpreheader 			  ($cast ($uint<32>) inc313 ) $on   forx_xinc311_forx_xcond209x_xpreheader 
    // type of target is $uint<32>
    $endmerge
    tmp89 := (ix_x1347 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    $if cmp216337 $then 
    $place[forx_xcond209x_xpreheader_bbx_xnph340]
    $else 
    $place[forx_xcond209x_xpreheader_forx_xinc311]
    $endif
    $merge forx_xcond209x_xpreheader_bbx_xnph340 
    $endmerge
    $if cmp222330 $then 
    $place[bbx_xnph340_bbx_xnphx_xusx_xpreheader]
    $else 
    $place[bbx_xnph340_forx_xinc307x_xpreheader]
    $endif
    $merge bbx_xnph340_bbx_xnphx_xusx_xpreheader 
    $endmerge
    tmp70 := (indexx_x2350 * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus]
    $merge bbx_xnph340_forx_xinc307x_xpreheader 
    $endmerge
    $place[forx_xinc307x_xpreheader_forx_xinc307]
    $merge forx_xbody224x_xus_forx_xinc307x_xus 
    $endmerge
    inc309x_xus := (jx_x1338x_xus + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond := (inc309x_xus == smax47) $buffering 1// bits of buffering = 1. 
    $if exitcond $then 
    $place[forx_xinc307x_xus_forx_xinc311x_xloopexit42]
    $else 
    $place[forx_xinc307x_xus_bbx_xnphx_xus]
    $endif
    $merge bbx_xnphx_xus_forx_xbody224x_xus forx_xbody224x_xus_forx_xbody224x_xus 
    $phi kx_x1331x_xus := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnphx_xus_forx_xbody224x_xus 			  ($cast ($uint<32>) inc305x_xus ) $on   forx_xbody224x_xus_forx_xbody224x_xus 
    // type of target is $uint<32>
    $endmerge
    tmp80 := (tmp79 * kx_x1331x_xus) $buffering 1// bits of buffering = 32. 
    add237x_xus := (tmp82 + tmp80) $buffering 1// bits of buffering = 32. 
    tmp86 := (tmp85 * kx_x1331x_xus) $buffering 1// bits of buffering = 32. 
    sub252x_xus := (tmp90 + tmp86) $buffering 1// bits of buffering = 32. 
    indexx_x0332x_xus := (tmp65 + kx_x1331x_xus) $buffering 1// bits of buffering = 32. 
    tmp67 := (kx_x1331x_xus * ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sub273x_xus := (tmp71 + tmp67) $buffering 1// bits of buffering = 32. 
    shr241x_xus := ($bitcast ($uint<32>) (($bitcast ($int<32>) add237x_xus ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom242x_xus := ($bitcast ($uint<64>) ($cast ($int<64>) shr241x_xus ) ) $buffering 1// bits of buffering = 64. 
    arrayidx244x_xus := dest2[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom242x_xus] $buffering 1// bits of buffering = 32. 
    tmp245x_xus := ->(arrayidx244x_xus) $buffering 1// bits of buffering = 64. 
    mul261x_xus := (sub252x_xus & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_prom262x_xus := ($cast ($uint<64>) mul261x_xus ) $buffering 1// bits of buffering = 64. 
    shr263x_xus := (tmp245x_xus >> sh_prom262x_xus) $buffering 1// bits of buffering = 64. 
    shr276x_xus := ($bitcast ($uint<32>) (($bitcast ($int<32>) indexx_x0332x_xus ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom277x_xus := ($bitcast ($uint<64>) ($cast ($int<64>) shr276x_xus ) ) $buffering 1// bits of buffering = 64. 
    arrayidx278x_xus := @(output[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom277x_xus]) $buffering 1// bits of buffering = 32. 
    tmp279x_xus := ->(arrayidx278x_xus) $buffering 1// bits of buffering = 64. 
    sextx_xus := (shr263x_xus << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv281x_xus := ($bitcast ($uint<64>) (($bitcast ($int<64>) sextx_xus ) >> ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ) )) ) $buffering 1// bits of buffering = 64. 
    mul284x_xus := (sub273x_xus & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_prom285x_xus := ($cast ($uint<64>) mul284x_xus ) $buffering 1// bits of buffering = 64. 
    shl286x_xus := (conv281x_xus << sh_prom285x_xus) $buffering 1// bits of buffering = 64. 
    or287x_xus := (shl286x_xus | tmp279x_xus) $buffering 1// bits of buffering = 64. 
    ->(arrayidx278x_xus) := or287x_xus $buffering 1// bits of buffering = 64. 
    inc305x_xus := (kx_x1331x_xus + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond9 := (inc305x_xus == tmp4) $buffering 1// bits of buffering = 1. 
    $if exitcond9 $then 
    $place[forx_xbody224x_xus_forx_xinc307x_xus]
    $else 
    $place[forx_xbody224x_xus_forx_xbody224x_xus]
    $endif
    $merge bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus forx_xinc307x_xus_bbx_xnphx_xus 
    $phi jx_x1338x_xus := 			  ($cast ($uint<32>) inc309x_xus ) $on   forx_xinc307x_xus_bbx_xnphx_xus 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnphx_xusx_xpreheader_bbx_xnphx_xus 
    // type of target is $uint<32>
    $endmerge
    tmp81 := (tmp75 * jx_x1338x_xus) $buffering 1// bits of buffering = 32. 
    tmp82 := (ix_x1347 + tmp81) $buffering 1// bits of buffering = 32. 
    tmp88 := (tmp87 * jx_x1338x_xus) $buffering 1// bits of buffering = 32. 
    tmp90 := (tmp89 + tmp88) $buffering 1// bits of buffering = 32. 
    tmp64 := (tmp4 * jx_x1338x_xus) $buffering 1// bits of buffering = 32. 
    tmp65 := (indexx_x2350 + tmp64) $buffering 1// bits of buffering = 32. 
    tmp69 := (tmp68 * jx_x1338x_xus) $buffering 1// bits of buffering = 32. 
    tmp71 := (tmp70 + tmp69) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnphx_xus_forx_xbody224x_xus]
    $merge forx_xinc307_forx_xinc307 forx_xinc307x_xpreheader_forx_xinc307 
    $phi jx_x1338 := 			  ($cast ($uint<32>) inc309 ) $on   forx_xinc307_forx_xinc307 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   forx_xinc307x_xpreheader_forx_xinc307 
    // type of target is $uint<32>
    $endmerge
    inc309 := (jx_x1338 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond8 := (inc309 == smax7) $buffering 1// bits of buffering = 1. 
    $if exitcond8 $then 
    $place[forx_xinc307_forx_xinc311x_xloopexit]
    $else 
    $place[forx_xinc307_forx_xinc307]
    $endif
    $merge forx_xinc307_forx_xinc311x_xloopexit 
    $endmerge
    $place[forx_xinc311x_xloopexit_forx_xinc311]
    $merge forx_xinc307x_xus_forx_xinc311x_xloopexit42 
    $endmerge
    tmp49 := (tmp48 + indexx_x2350) $buffering 1// bits of buffering = 32. 
    $place[forx_xinc311x_xloopexit42_forx_xinc311]
    $merge forx_xcond209x_xpreheader_forx_xinc311 forx_xinc311x_xloopexit_forx_xinc311 forx_xinc311x_xloopexit42_forx_xinc311 
    $phi indexx_x1x_xlcssa := 			  ($cast ($uint<32>) indexx_x2350 ) $on   forx_xcond209x_xpreheader_forx_xinc311 			  ($cast ($uint<32>) indexx_x2350 ) $on   forx_xinc311x_xloopexit_forx_xinc311 			  ($cast ($uint<32>) tmp49 ) $on   forx_xinc311x_xloopexit42_forx_xinc311 
    // type of target is $uint<32>
    $endmerge
    inc313 := (ix_x1347 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    exitcond77 := (inc313 == smax) $buffering 1// bits of buffering = 1. 
    $if exitcond77 $then 
    $place[forx_xinc311_forx_xend314x_xloopexit]
    $else 
    $place[forx_xinc311_forx_xcond209x_xpreheader]
    $endif
    $merge forx_xinc311_forx_xend314x_xloopexit 
    $endmerge
    $place[forx_xend314x_xloopexit_forx_xend314]
    $merge forx_xend171_forx_xend314 forx_xend314x_xloopexit_forx_xend314 
    $endmerge
    $call timer () (call316 ) 
    conv317 := ($bitcast ($uint<64>) ($cast ($int<64>) call316 ) ) $buffering 1// bits of buffering = 64. 
    sub321 := (conv317 - conv) $buffering 1// bits of buffering = 64. 
    elapsed_time_pipe := sub321 $buffering 1// bits of buffering = 64. 
    $call sendOutput () () 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: output 
// Memory space 1: input 
// Memory space 2: pad 
// Memory space 3: %sendRemainingElements%body:out_data_alloc 
// Memory space 4: %sendOutput%body:out_datax_xi_alloc 
// Memory space 5: %zeropad_thread%body:dest2_alloc 
