$record [structx_x__SizedTensorDescriptor]  <  structx_x__TensorDescriptor  >  < $uint<32> > 
$record [structx_x__SizedTensor_16K]  <  structx_x__SizedTensorDescriptor  >  < $array[16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor]  < $uint<32> >  < $uint<8> >  < $uint<32> >  < $array[64] $of $uint<32> > 
$storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 8
// can point into 
$storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 8
// can point into 
$storage  count : $uint<64> // memory space index = 3  base address = 0  word size = 64
// can point into 
$pipe  elapsed_time_pipe : $uint<64>  $depth 1 
// can point into 
$storage  pad : $uint<16> // memory space index = 2  base address = 0  word size = 16
// can point into 
$pipe  zeropad_input_pipe : $uint<16>  $depth 2 
// can point into 
$pipe  zeropad_output_pipe : $uint<16>  $depth 2 
// can point into 
$module [getInputData]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $place[entry_forx_xcond]
    $merge entry_forx_xcond forx_xbody13_forx_xcond 
    $phi indvar26 := 			  ($cast ($uint<64>) indvarx_xnext27 ) $on   forx_xbody13_forx_xcond 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   entry_forx_xcond 
    // type of target is $uint<64>
    $endmerge
    ix_x0 := ($cast ($uint<32>) indvar26 ) $buffering 1// bits of buffering = 32. 
    tmp3 := (indvar26 * ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    iNsTr_1 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1 ) $buffering 1// bits of buffering = 32. 
    uglygep4 := iNsTr_2[tmp3] $buffering 1// bits of buffering = 32. 
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep4 ) $buffering 1// bits of buffering = 32. 
    iNsTr_3 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp619 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
    cmp20 := (tmp619 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp20 $then 
    $place[forx_xcond_forx_xend]
    $else 
    $place[forx_xcond_bbx_xnph]
    $endif
    $merge forx_xcond_bbx_xnph 
    $endmerge
    tmp := (tmp619 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp6x_xop := (tmp619 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_6 := ($cast ($uint<64>) tmp6x_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp25 := ( $mux tmp xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $phi num_elemsx_x021 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<32>) mul ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<32>
    $endmerge
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp8 := ->(arrayidx) $buffering 1// bits of buffering = 32. 
    mul := (tmp8 * num_elemsx_x021) $buffering 1// bits of buffering = 32. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnext == tmp25) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $phi mulx_xlcssa := 			  ($cast ($uint<32>) mul ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<32>
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge forx_xcond_forx_xend forx_xendx_xloopexit_forx_xend 
    $phi num_elemsx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   forx_xcond_forx_xend 			  ($cast ($uint<32>) mulx_xlcssa ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<32>
    $endmerge
    cmp12 := (($bitcast ($int<32>) ix_x0 ) < ($bitcast ($int<32>) num_elemsx_x0x_xlcssa )) $buffering 1// bits of buffering = 1. 
    $if cmp12 $then 
    $place[forx_xend_forx_xbody13]
    $else 
    $place[forx_xend_forx_xend18]
    $endif
    $merge forx_xend_forx_xbody13 
    $endmerge
    call := zeropad_input_pipe $buffering 1// bits of buffering = 16. 
    ->(addx_xptr) := call $buffering 1// bits of buffering = 16. 
    indvarx_xnext27 := (indvar26 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    $place[forx_xbody13_forx_xcond]
    $merge forx_xend_forx_xend18 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [getInputDim]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    iNsTr_0 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_2) := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    iNsTr_4 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_4) := ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) tmp ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    inc := ($cast ($uint<32>) tmp2 ) $buffering 1// bits of buffering = 32. 
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar]) $buffering 1// bits of buffering = 32. 
    call := zeropad_input_pipe $buffering 1// bits of buffering = 16. 
    conv := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := conv $buffering 1// bits of buffering = 32. 
    tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    iNsTr_9 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp1 := ->(iNsTr_9) $buffering 1// bits of buffering = 32. 
    cmp := (inc < tmp1) $buffering 1// bits of buffering = 1. 
    $if cmp $then 
    $place[forx_xbody_forx_xbody]
    $else 
    $place[forx_xbody_forx_xend]
    $endif
    $merge forx_xbody_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [getpad]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := zeropad_input_pipe $buffering 1// bits of buffering = 16. 
    pad := call $buffering 1// bits of buffering = 16. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $null
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [sendOutputData]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $place[entry_forx_xcond]
    $merge entry_forx_xcond forx_xbody9_forx_xcond 
    $phi indvar23 := 			  ($cast ($uint<64>) indvarx_xnext24 ) $on   forx_xbody9_forx_xcond 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   entry_forx_xcond 
    // type of target is $uint<64>
    $endmerge
    tmp2 := (indvar23 * ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    iNsTr_1 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := ($bitcast ($pointer< $uint<8> >) iNsTr_1 ) $buffering 1// bits of buffering = 32. 
    uglygep3 := iNsTr_2[tmp2] $buffering 1// bits of buffering = 32. 
    addx_xptr := ($bitcast ($pointer< $uint<16> >) uglygep3 ) $buffering 1// bits of buffering = 32. 
    iNsTr_3 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp316 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
    cmp17 := (tmp316 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp17 $then 
    $place[forx_xcond_forx_xbody9]
    $else 
    $place[forx_xcond_bbx_xnph]
    $endif
    $merge forx_xcond_bbx_xnph 
    $endmerge
    tmp := (tmp316 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp3x_xop := (tmp316 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_8 := ($cast ($uint<64>) tmp3x_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_8 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp22 := ( $mux tmp xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $phi num_elemsx_x018 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<32>) mul ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<32>
    $endmerge
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp5 := ->(arrayidx) $buffering 1// bits of buffering = 32. 
    mul := (tmp5 * num_elemsx_x018) $buffering 1// bits of buffering = 32. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnext == tmp22) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xend]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xend 
    $phi mulx_xlcssa := 			  ($cast ($uint<32>) mul ) $on   forx_xbody_forx_xend 
    // type of target is $uint<32>
    $endmerge
    phitmp := (mulx_xlcssa == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if phitmp $then 
    $place[forx_xend_forx_xend15]
    $else 
    $place[forx_xend_forx_xbody9]
    $endif
    $merge forx_xcond_forx_xbody9 forx_xend_forx_xbody9 
    $endmerge
    tmp11 := ->(addx_xptr) $buffering 1// bits of buffering = 16. 
    zeropad_output_pipe := tmp11 $buffering 1// bits of buffering = 16. 
    indvarx_xnext24 := (indvar23 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    $place[forx_xbody9_forx_xcond]
    $merge forx_xend_forx_xend15 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [sendOutputDim]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    iNsTr_0 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_2) := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    iNsTr_4 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_4) := ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) $buffering 1// bits of buffering = 32. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) tmp ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    inc := ($cast ($uint<32>) tmp2 ) $buffering 1// bits of buffering = 32. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp3 := ->(arrayidx) $buffering 1// bits of buffering = 32. 
    conv := ($cast ($uint<16>) tmp3 ) $buffering 1// bits of buffering = 16. 
    zeropad_output_pipe := conv $buffering 1// bits of buffering = 16. 
    tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    iNsTr_9 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp1 := ->(iNsTr_9) $buffering 1// bits of buffering = 32. 
    cmp := (inc < tmp1) $buffering 1// bits of buffering = 1. 
    $if cmp $then 
    $place[forx_xbody_forx_xbody]
    $else 
    $place[forx_xbody_forx_xend]
    $endif
    $merge forx_xbody_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [timer]
$in ()
$out ( c : $uint<64>  )
$is
{
  c := count $buffering 1// bits of buffering = 64. 
}
$module [timerDaemon]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $dopipeline $depth 3 $buffering 1
    $fullrate 
    $merge $entry $loopback 
    $phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    $endmerge
    count := ncount $buffering 1// bits of buffering = 64. 
    $while 1 
  }
}
$module [zeropad3D]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    iNsTr_0 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    iNsTr_2 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_2) := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    iNsTr_4 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_4) := ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) $buffering 1// bits of buffering = 32. 
    $place[entry_forx_xbodyx_xi]
    $merge entry_forx_xbodyx_xi forx_xbodyx_xi_forx_xbodyx_xi 
    $phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   entry_forx_xbodyx_xi 			  ($cast ($uint<64>) tmp181 ) $on   forx_xbodyx_xi_forx_xbodyx_xi 
    // type of target is $uint<64>
    $endmerge
    arrayidxx_xi := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvarx_xi]) $buffering 1// bits of buffering = 32. 
    tmp := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    incx_xi := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
    tmp181 := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    callx_xi := zeropad_input_pipe $buffering 1// bits of buffering = 16. 
    convx_xi := ($cast ($uint<32>) callx_xi ) $buffering 1// bits of buffering = 32. 
    ->(arrayidxx_xi) := convx_xi $buffering 1// bits of buffering = 32. 
    iNsTr_9 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp1x_xi := ->(iNsTr_9) $buffering 1// bits of buffering = 32. 
    cmpx_xi := (incx_xi < tmp1x_xi) $buffering 1// bits of buffering = 1. 
    $if cmpx_xi $then 
    $place[forx_xbodyx_xi_forx_xbodyx_xi]
    $else 
    $place[forx_xbodyx_xi_forx_xcondx_xix_xpreheader]
    $endif
    $merge forx_xbodyx_xi_forx_xcondx_xix_xpreheader 
    $phi tmp1x_xix_xlcssa := 			  ($cast ($uint<32>) tmp1x_xi ) $on   forx_xbodyx_xi_forx_xcondx_xix_xpreheader 
    // type of target is $uint<32>
    $endmerge
    $place[forx_xcondx_xix_xpreheader_forx_xcondx_xi]
    $merge forx_xbody13x_xi_forx_xcondx_xi forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    $phi tmp619x_xi := 			  ($cast ($uint<32>) tmp619x_xix_xpr ) $on   forx_xbody13x_xi_forx_xcondx_xi 			  ($cast ($uint<32>) tmp1x_xix_xlcssa ) $on   forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    // type of target is $uint<32>
    $phi indvar26x_xi := 			  ($cast ($uint<64>) indvarx_xnext27x_xi ) $on   forx_xbody13x_xi_forx_xcondx_xi 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xcondx_xix_xpreheader_forx_xcondx_xi 
    // type of target is $uint<64>
    $endmerge
    tmp29 := (indvar26x_xi * ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    iNsTr_12 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    iNsTr_13 := ($bitcast ($pointer< $uint<8> >) iNsTr_12 ) $buffering 1// bits of buffering = 32. 
    uglygep := iNsTr_13[tmp29] $buffering 1// bits of buffering = 32. 
    addx_xptrx_xi := ($bitcast ($pointer< $uint<16> >) uglygep ) $buffering 1// bits of buffering = 32. 
    ix_x0x_xi := ($cast ($uint<32>) indvar26x_xi ) $buffering 1// bits of buffering = 32. 
    cmp20x_xi := (tmp619x_xi == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp20x_xi $then 
    $place[forx_xcondx_xi_forx_xendx_xi]
    $else 
    $place[forx_xcondx_xi_bbx_xnphx_xi]
    $endif
    $merge forx_xcondx_xi_bbx_xnphx_xi 
    $endmerge
    tmpx_xi105 := (tmp619x_xi > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp6x_xopx_xi := (tmp619x_xi + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_17 := ($cast ($uint<64>) tmp6x_xopx_xi ) $buffering 1// bits of buffering = 64. 
    xx_xopx_xi := (iNsTr_17 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp25x_xi := ( $mux tmpx_xi105 xx_xopx_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnphx_xi_forx_xbodyx_xi108]
    $merge bbx_xnphx_xi_forx_xbodyx_xi108 forx_xbodyx_xi108_forx_xbodyx_xi108 
    $phi indvarx_xi106 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnphx_xi_forx_xbodyx_xi108 			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on   forx_xbodyx_xi108_forx_xbodyx_xi108 
    // type of target is $uint<64>
    $phi num_elemsx_x021x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   bbx_xnphx_xi_forx_xbodyx_xi108 			  ($cast ($uint<32>) mulx_xi ) $on   forx_xbodyx_xi108_forx_xbodyx_xi108 
    // type of target is $uint<32>
    $endmerge
    arrayidxx_xi107 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvarx_xi106]) $buffering 1// bits of buffering = 32. 
    tmp8x_xi := ->(arrayidxx_xi107) $buffering 1// bits of buffering = 32. 
    mulx_xi := (tmp8x_xi * num_elemsx_x021x_xi) $buffering 1// bits of buffering = 32. 
    indvarx_xnextx_xi := (indvarx_xi106 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond := (indvarx_xnextx_xi == tmp25x_xi) $buffering 1// bits of buffering = 1. 
    $if exitcond $then 
    $place[forx_xbodyx_xi108_forx_xendx_xix_xloopexit]
    $else 
    $place[forx_xbodyx_xi108_forx_xbodyx_xi108]
    $endif
    $merge forx_xbodyx_xi108_forx_xendx_xix_xloopexit 
    $phi mulx_xix_xlcssa := 			  ($cast ($uint<32>) mulx_xi ) $on   forx_xbodyx_xi108_forx_xendx_xix_xloopexit 
    // type of target is $uint<32>
    $endmerge
    $place[forx_xendx_xix_xloopexit_forx_xendx_xi]
    $merge forx_xcondx_xi_forx_xendx_xi forx_xendx_xix_xloopexit_forx_xendx_xi 
    $phi num_elemsx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   forx_xcondx_xi_forx_xendx_xi 			  ($cast ($uint<32>) mulx_xix_xlcssa ) $on   forx_xendx_xix_xloopexit_forx_xendx_xi 
    // type of target is $uint<32>
    $endmerge
    cmp12x_xi := (($bitcast ($int<32>) ix_x0x_xi ) < ($bitcast ($int<32>) num_elemsx_x0x_xlcssax_xi )) $buffering 1// bits of buffering = 1. 
    callx_xi109 := zeropad_input_pipe $buffering 1// bits of buffering = 16. 
    $if cmp12x_xi $then 
    $place[forx_xendx_xi_forx_xbody13x_xi]
    $else 
    $place[forx_xendx_xi_getInputDatax_xexit]
    $endif
    $merge forx_xendx_xi_forx_xbody13x_xi 
    $endmerge
    ->(addx_xptrx_xi) := callx_xi109 $buffering 1// bits of buffering = 16. 
    indvarx_xnext27x_xi := (indvar26x_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    iNsTr_20 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp619x_xix_xpr := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
    $place[forx_xbody13x_xi_forx_xcondx_xi]
    $merge forx_xendx_xi_getInputDatax_xexit 
    $phi callx_xi109x_xlcssa := 			  ($cast ($uint<16>) callx_xi109 ) $on   forx_xendx_xi_getInputDatax_xexit 
    // type of target is $uint<16>
    $endmerge
    pad := callx_xi109x_xlcssa $buffering 1// bits of buffering = 16. 
    $call timer () (call ) 
    iNsTr_23 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    tmp1 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
    tmp17 := pad $buffering 1// bits of buffering = 16. 
    tmp9 := ($cast ($uint<32>) tmp17 ) $buffering 1// bits of buffering = 32. 
    $place[getInputDatax_xexit_whilex_xcondx_xouter]
    $merge getInputDatax_xexit_whilex_xcondx_xouter whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $phi jx_x0x_xph := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   getInputDatax_xexit_whilex_xcondx_xouter 			  ($cast ($uint<32>) jx_x0x_xphx_xbe ) $on   whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    // type of target is $uint<32>
    $phi ix_x0x_xph := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   getInputDatax_xexit_whilex_xcondx_xouter 			  ($cast ($uint<32>) inc93x_xix_x0 ) $on   whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    // type of target is $uint<32>
    $endmerge
    cmp := (ix_x0x_xph < tmp1) $buffering 1// bits of buffering = 1. 
    $if cmp $then 
    $place[whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge]
    $else 
    $place[whilex_xcondx_xouter_whilex_xendx_xsplit]
    $endif
    $merge whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge 
    $endmerge
    tmp10 := (tmp9 + jx_x0x_xph) $buffering 1// bits of buffering = 32. 
    tmp11 := (tmp9 + ix_x0x_xph) $buffering 1// bits of buffering = 32. 
    tmp18 := (tmp9 + jx_x0x_xph) $buffering 1// bits of buffering = 32. 
    $place[whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody]
    $merge whilex_xbody_whilex_xbody whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody 
    $phi kx_x0 := 			  ($cast ($uint<32>) iNsTr_38 ) $on   whilex_xbody_whilex_xbody 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody 
    // type of target is $uint<32>
    $endmerge
    inc := (kx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    iNsTr_38 := (kx_x0 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    iNsTr_39 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp5 := ->(iNsTr_39) $buffering 1// bits of buffering = 32. 
    iNsTr_40 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp8 := ->(iNsTr_40) $buffering 1// bits of buffering = 32. 
    iNsTr_41 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp15 := ->(iNsTr_41) $buffering 1// bits of buffering = 32. 
    iNsTr_42 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    tmp23 := ->(iNsTr_42) $buffering 1// bits of buffering = 32. 
    tmp174 := (ix_x0x_xph * tmp8) $buffering 1// bits of buffering = 32. 
    tmp175 := (jx_x0x_xph + tmp174) $buffering 1// bits of buffering = 32. 
    tmp176 := (tmp5 * tmp175) $buffering 1// bits of buffering = 32. 
    iNsTr_43 := (kx_x0 + tmp176) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) iNsTr_43 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom]) $buffering 1// bits of buffering = 32. 
    tmp33 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    tmp24 := (ix_x0x_xph * tmp8) $buffering 1// bits of buffering = 32. 
    tmp25 := (jx_x0x_xph + tmp24) $buffering 1// bits of buffering = 32. 
    tmp26 := (tmp5 * tmp25) $buffering 1// bits of buffering = 32. 
    tmp177 := (kx_x0 + tmp26) $buffering 1// bits of buffering = 32. 
    sub := (tmp177 << ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    mul45 := (sub & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_prom := ($cast ($uint<64>) mul45 ) $buffering 1// bits of buffering = 64. 
    shr46 := (tmp33 >> sh_prom) $buffering 1// bits of buffering = 64. 
    tmp19 := (tmp11 * tmp23) $buffering 1// bits of buffering = 32. 
    tmp20 := (tmp18 + tmp19) $buffering 1// bits of buffering = 32. 
    tmp21 := (tmp15 * tmp20) $buffering 1// bits of buffering = 32. 
    tmp22 := (kx_x0 + tmp21) $buffering 1// bits of buffering = 32. 
    shr57 := ($bitcast ($uint<32>) (($bitcast ($int<32>) tmp22 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom58 := ($bitcast ($uint<64>) ($cast ($int<64>) shr57 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx59 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][idxprom58]) $buffering 1// bits of buffering = 32. 
    tmp60 := ->(arrayidx59) $buffering 1// bits of buffering = 64. 
    sext := (shr46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv62 := ($bitcast ($uint<64>) (($bitcast ($int<64>) sext ) >> ($bitcast ($int<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ) )) ) $buffering 1// bits of buffering = 64. 
    tmp12 := (tmp11 * tmp23) $buffering 1// bits of buffering = 32. 
    tmp13 := (tmp10 + tmp12) $buffering 1// bits of buffering = 32. 
    tmp14 := (tmp15 * tmp13) $buffering 1// bits of buffering = 32. 
    tmp154 := (kx_x0 + tmp14) $buffering 1// bits of buffering = 32. 
    sub54 := (tmp154 << ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    mul65 := (sub54 & ($bitcast ($uint<32>) _b00000000000000000000000000110000  )) $buffering 1// bits of buffering = 32. 
    sh_prom66 := ($cast ($uint<64>) mul65 ) $buffering 1// bits of buffering = 64. 
    shl := (conv62 << sh_prom66) $buffering 1// bits of buffering = 64. 
    or := (shl | tmp60) $buffering 1// bits of buffering = 64. 
    ->(arrayidx59) := or $buffering 1// bits of buffering = 64. 
    cmp83 := (inc == tmp5) $buffering 1// bits of buffering = 1. 
    $if cmp83 $then 
    $place[whilex_xbody_ifx_xthen]
    $else 
    $place[whilex_xbody_whilex_xbody]
    $endif
    $merge whilex_xbody_ifx_xthen 
    $phi tmp8x_xlcssa := 			  ($cast ($uint<32>) tmp8 ) $on   whilex_xbody_ifx_xthen 
    // type of target is $uint<32>
    $endmerge
    inc86 := (jx_x0x_xph + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    cmp89 := (inc86 == tmp8x_xlcssa) $buffering 1// bits of buffering = 1. 
    inc93 := ($cast ($uint<32>) cmp89 ) $buffering 1// bits of buffering = 32. 
    inc93x_xix_x0 := (inc93 + ix_x0x_xph) $buffering 1// bits of buffering = 32. 
    $if cmp89 $then 
    $place[ifx_xthen_ifx_xthen91]
    $else 
    $place[ifx_xthen_whilex_xcondx_xouterx_xbackedge]
    $endif
    $merge ifx_xthen_whilex_xcondx_xouterx_xbackedge ifx_xthen91_whilex_xcondx_xouterx_xbackedge 
    $phi jx_x0x_xphx_xbe := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen91_whilex_xcondx_xouterx_xbackedge 			  ($cast ($uint<32>) inc86 ) $on   ifx_xthen_whilex_xcondx_xouterx_xbackedge 
    // type of target is $uint<32>
    $endmerge
    $place[whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter]
    $merge ifx_xthen_ifx_xthen91 
    $endmerge
    $place[ifx_xthen91_whilex_xcondx_xouterx_xbackedge]
    $merge whilex_xcondx_xouter_whilex_xendx_xsplit 
    $endmerge
    conv := ($bitcast ($uint<64>) ($cast ($int<64>) call ) ) $buffering 1// bits of buffering = 64. 
    $call timer () (call96 ) 
    conv97 := ($bitcast ($uint<64>) ($cast ($int<64>) call96 ) ) $buffering 1// bits of buffering = 64. 
    sub101 := (conv97 - conv) $buffering 1// bits of buffering = 64. 
    elapsed_time_pipe := sub101 $buffering 1// bits of buffering = 64. 
    iNsTr_31 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_31) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    iNsTr_33 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_33) := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    iNsTr_35 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    ->(iNsTr_35) := ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) $buffering 1// bits of buffering = 32. 
    $place[whilex_xendx_xsplit_forx_xbodyx_xi119]
    $merge forx_xbodyx_xi119_forx_xbodyx_xi119 whilex_xendx_xsplit_forx_xbodyx_xi119 
    $phi indvarx_xi112 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   whilex_xendx_xsplit_forx_xbodyx_xi119 			  ($cast ($uint<64>) tmp140 ) $on   forx_xbodyx_xi119_forx_xbodyx_xi119 
    // type of target is $uint<64>
    $endmerge
    arrayidxx_xi113 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvarx_xi112]) $buffering 1// bits of buffering = 32. 
    tmp6 := (indvarx_xi112 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    incx_xi116 := ($cast ($uint<32>) tmp6 ) $buffering 1// bits of buffering = 32. 
    tmp140 := (indvarx_xi112 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp3x_xi := ->(arrayidxx_xi113) $buffering 1// bits of buffering = 32. 
    convx_xi114 := ($cast ($uint<16>) tmp3x_xi ) $buffering 1// bits of buffering = 16. 
    zeropad_output_pipe := convx_xi114 $buffering 1// bits of buffering = 16. 
    iNsTr_48 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp1x_xi117 := ->(iNsTr_48) $buffering 1// bits of buffering = 32. 
    cmpx_xi118 := (incx_xi116 < tmp1x_xi117) $buffering 1// bits of buffering = 1. 
    $if cmpx_xi118 $then 
    $place[forx_xbodyx_xi119_forx_xbodyx_xi119]
    $else 
    $place[forx_xbodyx_xi119_forx_xcondx_xi124x_xpreheader]
    $endif
    $merge forx_xbodyx_xi119_forx_xcondx_xi124x_xpreheader 
    $phi tmp1x_xi117x_xlcssa := 			  ($cast ($uint<32>) tmp1x_xi117 ) $on   forx_xbodyx_xi119_forx_xcondx_xi124x_xpreheader 
    // type of target is $uint<32>
    $endmerge
    $place[forx_xcondx_xi124x_xpreheader_forx_xcondx_xi124]
    $merge forx_xbody9x_xi_forx_xcondx_xi124 forx_xcondx_xi124x_xpreheader_forx_xcondx_xi124 
    $phi tmp316x_xi := 			  ($cast ($uint<32>) tmp316x_xix_xpr ) $on   forx_xbody9x_xi_forx_xcondx_xi124 			  ($cast ($uint<32>) tmp1x_xi117x_xlcssa ) $on   forx_xcondx_xi124x_xpreheader_forx_xcondx_xi124 
    // type of target is $uint<32>
    $phi indvar23x_xi := 			  ($cast ($uint<64>) indvarx_xnext24x_xi ) $on   forx_xbody9x_xi_forx_xcondx_xi124 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xcondx_xi124x_xpreheader_forx_xcondx_xi124 
    // type of target is $uint<64>
    $endmerge
    tmp2 := (indvar23x_xi * ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    iNsTr_54 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000001  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    iNsTr_55 := ($bitcast ($pointer< $uint<8> >) iNsTr_54 ) $buffering 1// bits of buffering = 32. 
    uglygep3 := iNsTr_55[tmp2] $buffering 1// bits of buffering = 32. 
    addx_xptrx_xi123 := ($bitcast ($pointer< $uint<16> >) uglygep3 ) $buffering 1// bits of buffering = 32. 
    cmp17x_xi := (tmp316x_xi == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp17x_xi $then 
    $place[forx_xcondx_xi124_forx_xbody9x_xi]
    $else 
    $place[forx_xcondx_xi124_bbx_xnphx_xi127]
    $endif
    $merge forx_xcondx_xi124_bbx_xnphx_xi127 
    $endmerge
    tmpx_xi125 := (tmp316x_xi > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp3x_xopx_xi := (tmp316x_xi + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_61 := ($cast ($uint<64>) tmp3x_xopx_xi ) $buffering 1// bits of buffering = 64. 
    xx_xopx_xi126 := (iNsTr_61 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp22x_xi := ( $mux tmpx_xi125 xx_xopx_xi126  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnphx_xi127_forx_xbodyx_xi133]
    $merge bbx_xnphx_xi127_forx_xbodyx_xi133 forx_xbodyx_xi133_forx_xbodyx_xi133 
    $phi indvarx_xi128 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnphx_xi127_forx_xbodyx_xi133 			  ($cast ($uint<64>) indvarx_xnextx_xi131 ) $on   forx_xbodyx_xi133_forx_xbodyx_xi133 
    // type of target is $uint<64>
    $phi num_elemsx_x018x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on   bbx_xnphx_xi127_forx_xbodyx_xi133 			  ($cast ($uint<32>) mulx_xi130 ) $on   forx_xbodyx_xi133_forx_xbodyx_xi133 
    // type of target is $uint<32>
    $endmerge
    arrayidxx_xi129 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvarx_xi128]) $buffering 1// bits of buffering = 32. 
    tmp5x_xi := ->(arrayidxx_xi129) $buffering 1// bits of buffering = 32. 
    mulx_xi130 := (tmp5x_xi * num_elemsx_x018x_xi) $buffering 1// bits of buffering = 32. 
    indvarx_xnextx_xi131 := (indvarx_xi128 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnextx_xi131 == tmp22x_xi) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbodyx_xi133_forx_xendx_xi134]
    $else 
    $place[forx_xbodyx_xi133_forx_xbodyx_xi133]
    $endif
    $merge forx_xbodyx_xi133_forx_xendx_xi134 
    $phi mulx_xi130x_xlcssa := 			  ($cast ($uint<32>) mulx_xi130 ) $on   forx_xbodyx_xi133_forx_xendx_xi134 
    // type of target is $uint<32>
    $endmerge
    phitmpx_xi := (mulx_xi130x_xlcssa == ($bitcast ($uint<32>) _b00000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if phitmpx_xi $then 
    $place[forx_xendx_xi134_sendOutputDatax_xexit]
    $else 
    $place[forx_xendx_xi134_forx_xbody9x_xi]
    $endif
    $merge forx_xcondx_xi124_forx_xbody9x_xi forx_xendx_xi134_forx_xbody9x_xi 
    $endmerge
    tmp11x_xi := ->(addx_xptrx_xi123) $buffering 1// bits of buffering = 16. 
    zeropad_output_pipe := tmp11x_xi $buffering 1// bits of buffering = 16. 
    indvarx_xnext24x_xi := (indvar23x_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    iNsTr_59 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000000  )][($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    tmp316x_xix_xpr := ->(iNsTr_59) $buffering 1// bits of buffering = 32. 
    $place[forx_xbody9x_xi_forx_xcondx_xi124]
    $merge forx_xendx_xi134_sendOutputDatax_xexit 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: R 
// Memory space 1: T 
// Memory space 2: pad 
// Memory space 3: count 
