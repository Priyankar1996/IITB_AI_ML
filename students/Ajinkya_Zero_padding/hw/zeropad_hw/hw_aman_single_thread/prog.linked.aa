$record [structx_x__SizedTensor_16K]  < $array[16384] $of $uint<64> > 
$storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
// can point into 
$storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
// can point into 
$storage  count : $uint<64> // memory space index = 2  base address = 0  word size = 64
// can point into 
$pipe  zeropad_input_pipe : $uint<8>  $depth 2 
// can point into 
$pipe  zeropad_output_pipe : $uint<8>  $depth 2 
// can point into 
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $null
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [sendOutput]
$in ( size : $uint<32>  )
$out ()
$is
{
  $branchblock [body]
  {
    shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    $if cmp68 $then 
    $place[entry_bbx_xnph]
    $else 
    $place[entry_forx_xend]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
    shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
    shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
    shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1// bits of buffering = 64. 
    conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
    shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
    shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1// bits of buffering = 64. 
    conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
    shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
    shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1// bits of buffering = 64. 
    conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond2 := (indvarx_xnext == tmp1) $buffering 1// bits of buffering = 1. 
    $if exitcond2 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [timer]
$in ()
$out ( c : $uint<64>  )
$is
{
  c := count $buffering 1// bits of buffering = 64. 
}
$module [timerDaemon]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $dopipeline $depth 3 $buffering 1
    $fullrate 
    $merge $entry $loopback 
    $phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    $endmerge
    count := ncount $buffering 1// bits of buffering = 64. 
    $while 1 
  }
}
$module [zeropad3D]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv1 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    shl := (conv1 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1// bits of buffering = 32. 
    call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv3 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    add := (shl | conv3) $buffering 1// bits of buffering = 32. 
    call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv9 := ($cast ($uint<16>) call6 ) $buffering 1// bits of buffering = 16. 
    shl10 := (conv9 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv12 := ($cast ($uint<16>) call11 ) $buffering 1// bits of buffering = 16. 
    add13 := (shl10 | conv12) $buffering 1// bits of buffering = 16. 
    call16 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv19 := ($cast ($uint<16>) call16 ) $buffering 1// bits of buffering = 16. 
    shl20 := (conv19 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call21 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv22 := ($cast ($uint<16>) call21 ) $buffering 1// bits of buffering = 16. 
    add23 := (shl20 | conv22) $buffering 1// bits of buffering = 16. 
    call26 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv29 := ($cast ($uint<16>) call26 ) $buffering 1// bits of buffering = 16. 
    shl30 := (conv29 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call31 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv32 := ($cast ($uint<16>) call31 ) $buffering 1// bits of buffering = 16. 
    add33 := (shl30 | conv32) $buffering 1// bits of buffering = 16. 
    call36 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv39 := ($cast ($uint<32>) call36 ) $buffering 1// bits of buffering = 32. 
    shl40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000001000  )) $buffering 1// bits of buffering = 32. 
    call41 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv42 := ($cast ($uint<32>) call41 ) $buffering 1// bits of buffering = 32. 
    add43 := (shl40 | conv42) $buffering 1// bits of buffering = 32. 
    call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv49 := ($cast ($uint<16>) call46 ) $buffering 1// bits of buffering = 16. 
    shl50 := (conv49 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call51 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv52 := ($cast ($uint<16>) call51 ) $buffering 1// bits of buffering = 16. 
    add53 := (shl50 | conv52) $buffering 1// bits of buffering = 16. 
    call56 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv59 := ($cast ($uint<16>) call56 ) $buffering 1// bits of buffering = 16. 
    shl60 := (conv59 << ($bitcast ($uint<16>) _b0000000000001000  )) $buffering 1// bits of buffering = 16. 
    call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv62 := ($cast ($uint<16>) call61 ) $buffering 1// bits of buffering = 16. 
    add63 := (shl60 | conv62) $buffering 1// bits of buffering = 16. 
    $barrier
    conv69 := ($cast ($uint<32>) add13 ) $buffering 1// bits of buffering = 32. 
    conv71 := ($cast ($uint<32>) add23 ) $buffering 1// bits of buffering = 32. 
    mul := (conv69 * add) $buffering 1// bits of buffering = 32. 
    mul72 := (mul * conv71) $buffering 1// bits of buffering = 32. 
    cmp380 := (mul72 > ($bitcast ($uint<32>) _b00000000000000000000000000000111  )) $buffering 1// bits of buffering = 1. 
    $if cmp380 $then 
    $place[entry_bbx_xnph]
    $else 
    $place[entry_forx_xend]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp387 := (mul72 >> ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 32. 
    tmp388 := (tmp387 > ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    tmp387x_xop := (tmp387 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1// bits of buffering = 32. 
    iNsTr_16 := ($cast ($uint<64>) tmp387x_xop ) $buffering 1// bits of buffering = 64. 
    xx_xop := (iNsTr_16 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    tmp391 := ( $mux tmp388 xx_xop  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    call78 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv79 := ($cast ($uint<64>) call78 ) $buffering 1// bits of buffering = 64. 
    shl81 := (conv79 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call82 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv84 := ($cast ($uint<64>) call82 ) $buffering 1// bits of buffering = 64. 
    add85 := (shl81 | conv84) $buffering 1// bits of buffering = 64. 
    shl87 := (add85 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call88 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv90 := ($cast ($uint<64>) call88 ) $buffering 1// bits of buffering = 64. 
    add91 := (shl87 | conv90) $buffering 1// bits of buffering = 64. 
    shl93 := (add91 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call94 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv96 := ($cast ($uint<64>) call94 ) $buffering 1// bits of buffering = 64. 
    add97 := (shl93 | conv96) $buffering 1// bits of buffering = 64. 
    shl99 := (add97 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call100 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv102 := ($cast ($uint<64>) call100 ) $buffering 1// bits of buffering = 64. 
    add103 := (shl99 | conv102) $buffering 1// bits of buffering = 64. 
    shl105 := (add103 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call106 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv108 := ($cast ($uint<64>) call106 ) $buffering 1// bits of buffering = 64. 
    add109 := (shl105 | conv108) $buffering 1// bits of buffering = 64. 
    shl111 := (add109 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call112 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv114 := ($cast ($uint<64>) call112 ) $buffering 1// bits of buffering = 64. 
    add115 := (shl111 | conv114) $buffering 1// bits of buffering = 64. 
    shl117 := (add115 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call118 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv120 := ($cast ($uint<64>) call118 ) $buffering 1// bits of buffering = 64. 
    add121 := (shl117 | conv120) $buffering 1// bits of buffering = 64. 
    ->(arrayidx) := add121 $buffering 1// bits of buffering = 64. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond1 := (indvarx_xnext == tmp391) $buffering 1// bits of buffering = 1. 
    $if exitcond1 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $call timer () (call126 ) 
    conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) add23 ) ) $buffering 1// bits of buffering = 32. 
    conv253 := ($bitcast ($uint<32>) ($cast ($int<32>) add33 ) ) $buffering 1// bits of buffering = 32. 
    add254 := (conv253 + add) $buffering 1// bits of buffering = 32. 
    add271 := (conv253 + conv69) $buffering 1// bits of buffering = 32. 
    shl183 := (conv253 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add184 := (shl183 + conv69) $buffering 1// bits of buffering = 32. 
    add198 := (shl183 + add) $buffering 1// bits of buffering = 32. 
    $place[forx_xend_whilex_xbody]
    $merge forx_xend_whilex_xbody 
    $phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 
    // type of target is $uint<16>
    $phi i131x_x2_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   forx_xend_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    $dopipeline $depth 15 $buffering 1
    $fullrate 
    $merge $entry $loopback 
    $phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    $phi i131x_x2 := 			  ($cast ($uint<16>) i131x_x1 ) $on   $loopback 			  i131x_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    $endmerge
    conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add166 := (conv165 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp169 := (($bitcast ($int<32>) add166 ) < ($bitcast ($int<32>) conv168 )) $buffering 1// bits of buffering = 1. 
    whilex_xbody_ifx_xthen_taken := cmp169 $buffering 1// bits of buffering = 1. 
    whilex_xbody_ifx_xelse_taken := ( ~ cmp169 ) $buffering 1// bits of buffering = 1. 
    ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1// bits of buffering = 1. 
    $guard (ifx_xelse_exec_guard) inc176 := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xelse_exec_guard) conv178 := ($bitcast ($uint<32>) ($cast ($int<32>) inc176 ) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse_exec_guard) cmp185 := (conv178 == add184) $buffering 1// bits of buffering = 1. 
    $guard (ifx_xelse_exec_guard) inc190 := ($cast ($uint<16>) cmp185 ) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xelse_exec_guard) inc190x_xi131x_x2 := (inc190 + i131x_x2) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xelse_exec_guard) jx_x2 := ( $mux cmp185 ($bitcast ($uint<16>) _b0000000000000000  )  inc176 )  $buffering 1// bits of buffering = 16. 
    $guard (ifx_xelse_exec_guard) conv192 := ($bitcast ($uint<32>) ($cast ($int<32>) inc190x_xi131x_x2 ) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse_exec_guard) cmp199 := (conv192 == add198) $buffering 1// bits of buffering = 1. 
    ifx_xelse_ifx_xthen201_taken := (ifx_xelse_exec_guard & cmp199) $buffering 1// bits of buffering = 1. 
    ifx_xelse_ifx_xend203_taken := (ifx_xelse_exec_guard & ( ~ cmp199 )) $buffering 1// bits of buffering = 1. 
    ifx_xthen201_exec_guard := ifx_xelse_ifx_xthen201_taken $buffering 1// bits of buffering = 1. 
    ifx_xthen201_ifx_xend203_taken := ifx_xthen201_exec_guard $buffering 1// bits of buffering = 1. 
    ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1// bits of buffering = 1. 
    $guard (ifx_xthen_exec_guard) add173 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    ifx_xthen_ifx_xend203_taken := ifx_xthen_exec_guard $buffering 1// bits of buffering = 1. 
    ifx_xend203_exec_guard := (ifx_xelse_ifx_xend203_taken | (ifx_xthen_ifx_xend203_taken | ifx_xthen201_ifx_xend203_taken)) $buffering 1// bits of buffering = 1. 
    kx_x0 := ( $mux ifx_xthen_ifx_xend203_taken ($bitcast ($uint<16>) add173 )  ( $mux ifx_xthen201_ifx_xend203_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend203_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1// bits of buffering = 16. 
    i131x_x1 := ( $mux ifx_xthen_ifx_xend203_taken ($bitcast ($uint<16>) i131x_x2 )  ( $mux ifx_xthen201_ifx_xend203_taken ($bitcast ($uint<16>) inc190x_xi131x_x2 )  ( $mux ifx_xelse_ifx_xend203_taken ($bitcast ($uint<16>) inc190x_xi131x_x2 )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1// bits of buffering = 16. 
    jx_x0 := ( $mux ifx_xthen_ifx_xend203_taken ($bitcast ($uint<16>) jx_x1 )  ( $mux ifx_xthen201_ifx_xend203_taken ($bitcast ($uint<16>) jx_x2 )  ( $mux ifx_xelse_ifx_xend203_taken ($bitcast ($uint<16>) jx_x2 )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1// bits of buffering = 16. 
    flagx_x0 := ( $mux ifx_xthen_ifx_xend203_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen201_ifx_xend203_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend203_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) mul218 := (add53 * i131x_x1) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) tmp := (jx_x0 + mul218) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) tmp376 := (tmp * add63) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) add219 := (tmp376 + kx_x0) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) sub := (jx_x0 - add33) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) sub238 := (i131x_x1 - add33) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) mul239 := (add13 * sub238) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) tmp377 := (sub + mul239) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) tmp378 := (tmp377 * add23) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) add240 := (tmp378 + kx_x0) $buffering 1// bits of buffering = 16. 
    $guard (ifx_xend203_exec_guard) cmp246 := (($bitcast ($int<16>) i131x_x1 ) < ($bitcast ($int<16>) add33 )) $buffering 1// bits of buffering = 1. 
    ifx_xend203_ifx_xthen274_taken := (ifx_xend203_exec_guard & cmp246) $buffering 1// bits of buffering = 1. 
    ifx_xend203_lorx_xlhsx_xfalse_taken := (ifx_xend203_exec_guard & ( ~ cmp246 )) $buffering 1// bits of buffering = 1. 
    lorx_xlhsx_xfalse_exec_guard := ifx_xend203_lorx_xlhsx_xfalse_taken $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) conv249 := ($bitcast ($uint<32>) ($cast ($int<32>) i131x_x1 ) ) $buffering 1// bits of buffering = 32. 
    $guard (lorx_xlhsx_xfalse_exec_guard) cmp255x_xnot := (($bitcast ($int<32>) conv249 ) >= ($bitcast ($int<32>) add254 )) $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) cmp262 := (($bitcast ($int<16>) jx_x0 ) < ($bitcast ($int<16>) add33 )) $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) orx_xcond := (cmp255x_xnot | cmp262) $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) conv266 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    $guard (lorx_xlhsx_xfalse_exec_guard) cmp272 := (($bitcast ($int<32>) conv266 ) < ($bitcast ($int<32>) add271 )) $buffering 1// bits of buffering = 1. 
    $guard (lorx_xlhsx_xfalse_exec_guard) orx_xcond392 := (orx_xcondx_xnot & cmp272) $buffering 1// bits of buffering = 1. 
    lorx_xlhsx_xfalse_ifx_xelse280_taken := (lorx_xlhsx_xfalse_exec_guard & orx_xcond392) $buffering 1// bits of buffering = 1. 
    lorx_xlhsx_xfalse_ifx_xthen274_taken := (lorx_xlhsx_xfalse_exec_guard & ( ~ orx_xcond392 )) $buffering 1// bits of buffering = 1. 
    ifx_xelse280_exec_guard := lorx_xlhsx_xfalse_ifx_xelse280_taken $buffering 1// bits of buffering = 1. 
    $guard (ifx_xelse280_exec_guard) conv282 := ($bitcast ($uint<32>) ($cast ($int<32>) add240 ) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) shr283 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv282 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) idxprom284 := ($bitcast ($uint<64>) ($cast ($int<64>) shr283 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx285 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom284]) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) tmp286 := ->(arrayidx285) $buffering 1// bits of buffering = 64. 
    $guard (ifx_xelse280_exec_guard) conv288 := ($bitcast ($uint<32>) ($cast ($int<32>) add219 ) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) shr289 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv288 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) idxprom290 := ($bitcast ($uint<64>) ($cast ($int<64>) shr289 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx291 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom290]) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xelse280_exec_guard) ->(arrayidx291) := tmp286 $buffering 1// bits of buffering = 64. 
    ifx_xelse280_ifx_xend292_taken := ifx_xelse280_exec_guard $buffering 1// bits of buffering = 1.  Orphaned statement with target ifx_xelse280_ifx_xend292_taken ?? 
    ifx_xthen274_exec_guard := (ifx_xend203_ifx_xthen274_taken | lorx_xlhsx_xfalse_ifx_xthen274_taken) $buffering 1// bits of buffering = 1. 
    $guard (ifx_xthen274_exec_guard) conv276 := ($bitcast ($uint<32>) ($cast ($int<32>) add219 ) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xthen274_exec_guard) shr277 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv276 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xthen274_exec_guard) idxprom278 := ($bitcast ($uint<64>) ($cast ($int<64>) shr277 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx279 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom278]) $buffering 1// bits of buffering = 32. 
    $guard (ifx_xthen274_exec_guard) ->(arrayidx279) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    ifx_xthen274_ifx_xend292_taken := ifx_xthen274_exec_guard $buffering 1// bits of buffering = 1.  Orphaned statement with target ifx_xthen274_ifx_xend292_taken ?? 
    tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1// bits of buffering = 1. 
    ifx_xend292_whilex_xend_taken := ( ~ tobool ) $buffering 1// bits of buffering = 1. 
    $while tobool
    $if ifx_xend292_whilex_xend_taken $then 
    $place[ifx_xend292_whilex_xend]
    $endif
    $merge ifx_xend292_whilex_xend 
    $endmerge
    conv127 := ($bitcast ($uint<64>) ($cast ($int<64>) call126 ) ) $buffering 1// bits of buffering = 64. 
    $barrier
    $call timer () (call297 ) 
    conv298 := ($bitcast ($uint<64>) ($cast ($int<64>) call297 ) ) $buffering 1// bits of buffering = 64. 
    sub302 := (conv298 - conv127) $buffering 1// bits of buffering = 64. 
    conv305 := ($cast ($uint<8>) sub302 ) $buffering 1// bits of buffering = 8. 
    shr308 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    conv311 := ($cast ($uint<8>) shr308 ) $buffering 1// bits of buffering = 8. 
    shr314 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv317 := ($cast ($uint<8>) shr314 ) $buffering 1// bits of buffering = 8. 
    shr320 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1// bits of buffering = 64. 
    conv323 := ($cast ($uint<8>) shr320 ) $buffering 1// bits of buffering = 8. 
    shr326 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv329 := ($cast ($uint<8>) shr326 ) $buffering 1// bits of buffering = 8. 
    shr332 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1// bits of buffering = 64. 
    conv335 := ($cast ($uint<8>) shr332 ) $buffering 1// bits of buffering = 8. 
    shr338 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv341 := ($cast ($uint<8>) shr338 ) $buffering 1// bits of buffering = 8. 
    shr344 := (sub302 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1// bits of buffering = 64. 
    conv347 := ($cast ($uint<8>) shr344 ) $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv347 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv341 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv335 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv329 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv323 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv317 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv311 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv305 $buffering 1// bits of buffering = 8. 
    $barrier
    conv368 := ($cast ($uint<32>) add53 ) $buffering 1// bits of buffering = 32. 
    conv371 := ($cast ($uint<32>) add63 ) $buffering 1// bits of buffering = 32. 
    mul369 := (conv368 * add43) $buffering 1// bits of buffering = 32. 
    mul372 := (mul369 * conv371) $buffering 1// bits of buffering = 32. 
    $call sendOutput (mul372 ) () 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: R 
// Memory space 1: T 
// Memory space 2: count 
// use of gated clocks in modules 
