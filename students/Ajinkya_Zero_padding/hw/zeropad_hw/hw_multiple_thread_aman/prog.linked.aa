$record [structx_x__SizedTensor_16K]  < $array[16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor]  < $uint<32> >  < $uint<32> >  < $uint<32> >  < $array[64] $of $uint<32> > 
$pipe  Block0_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block0_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block1_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block1_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block2_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block2_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block3_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block3_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block4_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block4_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block5_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block5_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block6_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block6_starting : $uint<8>  $depth 1 
// can point into 
$pipe  Block7_complete : $uint<8>  $depth 1 
// can point into 
$pipe  Block7_starting : $uint<8>  $depth 1 
// can point into 
$storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
// can point into 
$storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
// can point into 
$storage  count : $uint<64> // memory space index = 2  base address = 0  word size = 64
// can point into 
$pipe  elapsed_time_pipe : $uint<64>  $depth 1 
// can point into 
$pipe  zeropad_input_pipe : $uint<8>  $depth 2 
// can point into 
$pipe  zeropad_output_pipe : $uint<8>  $depth 2 
// can point into 
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $null
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [sendOutput]
$in ( size : $uint<32>  )
$out ()
$is
{
  $branchblock [body]
  {
    shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1// bits of buffering = 1. 
    $if cmp68 $then 
    $place[entry_bbx_xnph]
    $else 
    $place[entry_forx_xend]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
    shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
    shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1// bits of buffering = 64. 
    conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
    shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1// bits of buffering = 64. 
    conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
    shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1// bits of buffering = 64. 
    conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
    shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1// bits of buffering = 64. 
    conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
    shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1// bits of buffering = 64. 
    conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
    shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1// bits of buffering = 64. 
    conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
    zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond2 := (indvarx_xnext == tmp1) $buffering 1// bits of buffering = 1. 
    $if exitcond2 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [timer]
$in ()
$out ( c : $uint<64>  )
$is
{
  c := count $buffering 1// bits of buffering = 64. 
}
$module [timerDaemon]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $dopipeline $depth 3 $buffering 1
    $fullrate 
    $merge $entry $loopback 
    $phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    $endmerge
    count := ncount $buffering 1// bits of buffering = 64. 
    $while 1 
  }
}
$module [zeropad3D]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    mul := (conv10 * conv) $buffering 1// bits of buffering = 64. 
    mul13 := (mul * conv12) $buffering 1// bits of buffering = 64. 
    shr165x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1// bits of buffering = 64. 
    cmp166 := (shr165x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1// bits of buffering = 1. 
    $if cmp166 $then 
    $place[entry_forx_xend]
    $else 
    $place[entry_bbx_xnph]
    $endif
    $merge entry_bbx_xnph 
    $endmerge
    tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    tmp2 := (tmp * tmp1) $buffering 1// bits of buffering = 64. 
    tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    tmp4 := (tmp2 * tmp3) $buffering 1// bits of buffering = 64. 
    tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1// bits of buffering = 64. 
    tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 1. 
    umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1// bits of buffering = 64. 
    $place[bbx_xnph_forx_xbody]
    $merge bbx_xnph_forx_xbody forx_xbody_forx_xbody 
    $phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    $endmerge
    arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
    shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
    add := (shl | conv25) $buffering 1// bits of buffering = 64. 
    shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
    add31 := (shl27 | conv30) $buffering 1// bits of buffering = 64. 
    shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
    add37 := (shl33 | conv36) $buffering 1// bits of buffering = 64. 
    shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
    add43 := (shl39 | conv42) $buffering 1// bits of buffering = 64. 
    shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
    add49 := (shl45 | conv48) $buffering 1// bits of buffering = 64. 
    shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
    add55 := (shl51 | conv54) $buffering 1// bits of buffering = 64. 
    shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1// bits of buffering = 64. 
    call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
    add61 := (shl57 | conv60) $buffering 1// bits of buffering = 64. 
    ->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
    indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1// bits of buffering = 64. 
    exitcond8 := (indvarx_xnext == umax7) $buffering 1// bits of buffering = 1. 
    $if exitcond8 $then 
    $place[forx_xbody_forx_xendx_xloopexit]
    $else 
    $place[forx_xbody_forx_xbody]
    $endif
    $merge forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place[forx_xendx_xloopexit_forx_xend]
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend 
    $endmerge
    $barrier
    $call timer () (call66 ) 
    conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
    Block0_starting := call2 $buffering 1// bits of buffering = 8. 
    Block0_starting := call3 $buffering 1// bits of buffering = 8. 
    Block0_starting := call4 $buffering 1// bits of buffering = 8. 
    Block0_starting := call6 $buffering 1// bits of buffering = 8. 
    Block0_starting := call7 $buffering 1// bits of buffering = 8. 
    Block0_starting := call8 $buffering 1// bits of buffering = 8. 
    Block0_starting := call5 $buffering 1// bits of buffering = 8. 
    Block1_starting := call2 $buffering 1// bits of buffering = 8. 
    Block1_starting := call3 $buffering 1// bits of buffering = 8. 
    Block1_starting := call4 $buffering 1// bits of buffering = 8. 
    Block1_starting := call6 $buffering 1// bits of buffering = 8. 
    Block1_starting := call7 $buffering 1// bits of buffering = 8. 
    Block1_starting := call8 $buffering 1// bits of buffering = 8. 
    Block1_starting := call5 $buffering 1// bits of buffering = 8. 
    Block2_starting := call2 $buffering 1// bits of buffering = 8. 
    Block2_starting := call3 $buffering 1// bits of buffering = 8. 
    Block2_starting := call4 $buffering 1// bits of buffering = 8. 
    Block2_starting := call6 $buffering 1// bits of buffering = 8. 
    Block2_starting := call7 $buffering 1// bits of buffering = 8. 
    Block2_starting := call8 $buffering 1// bits of buffering = 8. 
    Block2_starting := call5 $buffering 1// bits of buffering = 8. 
    Block3_starting := call2 $buffering 1// bits of buffering = 8. 
    Block3_starting := call3 $buffering 1// bits of buffering = 8. 
    Block3_starting := call4 $buffering 1// bits of buffering = 8. 
    Block3_starting := call6 $buffering 1// bits of buffering = 8. 
    Block3_starting := call7 $buffering 1// bits of buffering = 8. 
    Block3_starting := call8 $buffering 1// bits of buffering = 8. 
    Block3_starting := call5 $buffering 1// bits of buffering = 8. 
    Block4_starting := call2 $buffering 1// bits of buffering = 8. 
    Block4_starting := call3 $buffering 1// bits of buffering = 8. 
    Block4_starting := call4 $buffering 1// bits of buffering = 8. 
    Block4_starting := call6 $buffering 1// bits of buffering = 8. 
    Block4_starting := call7 $buffering 1// bits of buffering = 8. 
    Block4_starting := call8 $buffering 1// bits of buffering = 8. 
    Block4_starting := call5 $buffering 1// bits of buffering = 8. 
    Block5_starting := call2 $buffering 1// bits of buffering = 8. 
    Block5_starting := call3 $buffering 1// bits of buffering = 8. 
    Block5_starting := call4 $buffering 1// bits of buffering = 8. 
    Block5_starting := call6 $buffering 1// bits of buffering = 8. 
    Block5_starting := call7 $buffering 1// bits of buffering = 8. 
    Block5_starting := call8 $buffering 1// bits of buffering = 8. 
    Block5_starting := call5 $buffering 1// bits of buffering = 8. 
    Block6_starting := call2 $buffering 1// bits of buffering = 8. 
    Block6_starting := call3 $buffering 1// bits of buffering = 8. 
    Block6_starting := call4 $buffering 1// bits of buffering = 8. 
    Block6_starting := call6 $buffering 1// bits of buffering = 8. 
    Block6_starting := call7 $buffering 1// bits of buffering = 8. 
    Block6_starting := call8 $buffering 1// bits of buffering = 8. 
    Block6_starting := call5 $buffering 1// bits of buffering = 8. 
    Block7_starting := call2 $buffering 1// bits of buffering = 8. 
    Block7_starting := call3 $buffering 1// bits of buffering = 8. 
    Block7_starting := call4 $buffering 1// bits of buffering = 8. 
    Block7_starting := call6 $buffering 1// bits of buffering = 8. 
    Block7_starting := call7 $buffering 1// bits of buffering = 8. 
    Block7_starting := call8 $buffering 1// bits of buffering = 8. 
    Block7_starting := call5 $buffering 1// bits of buffering = 8. 
    $barrier
    call125 := Block0_complete $buffering 1// bits of buffering = 8. 
    call128 := Block1_complete $buffering 1// bits of buffering = 8. 
    call131 := Block2_complete $buffering 1// bits of buffering = 8. 
    call134 := Block3_complete $buffering 1// bits of buffering = 8. 
    call137 := Block4_complete $buffering 1// bits of buffering = 8. 
    call140 := Block5_complete $buffering 1// bits of buffering = 8. 
    call143 := Block6_complete $buffering 1// bits of buffering = 8. 
    call146 := Block7_complete $buffering 1// bits of buffering = 8. 
    $barrier
    $call timer () (call149 ) 
    conv150 := ($bitcast ($uint<64>) ($cast ($int<64>) call149 ) ) $buffering 1// bits of buffering = 64. 
    sub := (conv150 - conv67) $buffering 1// bits of buffering = 64. 
    elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
    $barrier
    conv156 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv158 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
    conv161 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
    mul159 := (conv158 * conv156) $buffering 1// bits of buffering = 32. 
    mul162 := (mul159 * conv161) $buffering 1// bits of buffering = 32. 
    $call sendOutput (mul162 ) () 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_A]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block0_starting $buffering 1// bits of buffering = 8. 
    call1 := Block0_starting $buffering 1// bits of buffering = 8. 
    call2 := Block0_starting $buffering 1// bits of buffering = 8. 
    call3 := Block0_starting $buffering 1// bits of buffering = 8. 
    call4 := Block0_starting $buffering 1// bits of buffering = 8. 
    call5 := Block0_starting $buffering 1// bits of buffering = 8. 
    call6 := Block0_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul36 := (conv33 * conv35) $buffering 1// bits of buffering = 32. 
    conv44 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv76 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext185 := (mul36 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv82 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext185 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    div152 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    shl := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add155 := (shl + div152) $buffering 1// bits of buffering = 32. 
    conv166 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    div167 := (conv166 >> ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    add171 := (shl + div167) $buffering 1// bits of buffering = 32. 
    add := (conv44 + div167) $buffering 1// bits of buffering = 32. 
    add69 := (conv44 + div152) $buffering 1// bits of buffering = 32. 
    mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv27) $buffering 1// bits of buffering = 32. 
    conv100 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend180_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend180_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend180_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend180_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv42 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv42 ) < ($bitcast ($int<32>) conv44 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp52 := (($bitcast ($int<32>) conv42 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp52) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse54]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse54 
    $endmerge
    conv56 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp59 := (($bitcast ($int<32>) conv56 ) < ($bitcast ($int<32>) conv44 )) $buffering 1// bits of buffering = 1. 
    cmp59x_xnot := (cmp59 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp70 := (($bitcast ($int<32>) conv56 ) < ($bitcast ($int<32>) add69 )) $buffering 1// bits of buffering = 1. 
    orx_xcond186 := (cmp59x_xnot & cmp70) $buffering 1// bits of buffering = 1. 
    $if orx_xcond186 $then 
    $place[lorx_xlhsx_xfalse54_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse54_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse54_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv74 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv78 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul79 := (conv78 * conv76) $buffering 1// bits of buffering = 32. 
    mul85 := (conv42 * conv82) $buffering 1// bits of buffering = 32. 
    add80 := (mul85 + conv74) $buffering 1// bits of buffering = 32. 
    add86 := (add80 + mul79) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse54_ifx_xelse 
    $endmerge
    conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv56 - conv44) $buffering 1// bits of buffering = 32. 
    mul97 := (sub * conv27) $buffering 1// bits of buffering = 32. 
    sub105 := (conv42 - conv44) $buffering 1// bits of buffering = 32. 
    mul106 := (sub105 * conv100) $buffering 1// bits of buffering = 32. 
    add98 := (mul106 + conv90) $buffering 1// bits of buffering = 32. 
    add107 := (add98 + mul97) $buffering 1// bits of buffering = 32. 
    mul116 := (conv56 * conv76) $buffering 1// bits of buffering = 32. 
    mul122 := (conv42 * conv82) $buffering 1// bits of buffering = 32. 
    add117 := (mul122 + conv90) $buffering 1// bits of buffering = 32. 
    add123 := (add117 + mul116) $buffering 1// bits of buffering = 32. 
    shr125 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add107 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom126 := ($bitcast ($uint<64>) ($cast ($int<64>) shr125 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx127 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom126]) $buffering 1// bits of buffering = 32. 
    tmp128 := ->(arrayidx127) $buffering 1// bits of buffering = 64. 
    shr130 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add123 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom131 := ($bitcast ($uint<64>) ($cast ($int<64>) shr130 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx132 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom131]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx132) := tmp128 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv135 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add136 := (conv135 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp139 := (($bitcast ($int<32>) add136 ) < ($bitcast ($int<32>) conv27 )) $buffering 1// bits of buffering = 1. 
    $if cmp139 $then 
    $place[ifx_xend_ifx_xthen141]
    $else 
    $place[ifx_xend_ifx_xelse146]
    $endif
    $merge ifx_xend_ifx_xthen141 
    $endmerge
    add144 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen141_ifx_xend180]
    $merge ifx_xend_ifx_xelse146 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv149 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp156 := (conv149 == add155) $buffering 1// bits of buffering = 1. 
    inc161 := ($cast ($uint<16>) cmp156 ) $buffering 1// bits of buffering = 16. 
    inc161x_xix_x2 := (inc161 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp156 ($bitcast ($uint<16>) _b0000000000000000  )  inc )  $buffering 1// bits of buffering = 16. 
    conv164 := ($bitcast ($uint<32>) ($cast ($int<32>) inc161x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp172 := (conv164 == add171) $buffering 1// bits of buffering = 1. 
    $if cmp172 $then 
    $place[ifx_xelse146_whilex_xend]
    $else 
    $place[ifx_xelse146_ifx_xend180]
    $endif
    $merge ifx_xelse146_ifx_xend180 ifx_xthen141_ifx_xend180 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add144 ) $on   ifx_xthen141_ifx_xend180 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse146_ifx_xend180 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen141_ifx_xend180 			  ($cast ($uint<16>) inc161x_xix_x2 ) $on   ifx_xelse146_ifx_xend180 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen141_ifx_xend180 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse146_ifx_xend180 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend180_whilex_xbody]
    $merge ifx_xelse146_whilex_xend 
    $endmerge
    $barrier
    Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_B]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block1_starting $buffering 1// bits of buffering = 8. 
    call1 := Block1_starting $buffering 1// bits of buffering = 8. 
    call2 := Block1_starting $buffering 1// bits of buffering = 8. 
    call3 := Block1_starting $buffering 1// bits of buffering = 8. 
    call4 := Block1_starting $buffering 1// bits of buffering = 8. 
    call5 := Block1_starting $buffering 1// bits of buffering = 8. 
    call6 := Block1_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul41 := (conv38 * conv40) $buffering 1// bits of buffering = 32. 
    conv49 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv81 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext189 := (mul41 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv87 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext189 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    shl := (conv49 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add159 := (shl + conv34) $buffering 1// bits of buffering = 32. 
    conv170 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    div171 := (conv170 >> ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    add175 := (shl + div171) $buffering 1// bits of buffering = 32. 
    add := (conv49 + div171) $buffering 1// bits of buffering = 32. 
    add74 := (conv49 + conv34) $buffering 1// bits of buffering = 32. 
    mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv32) $buffering 1// bits of buffering = 32. 
    conv105 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend184_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv47 ) < ($bitcast ($int<32>) conv49 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp58 := (($bitcast ($int<32>) conv47 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp58) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse60]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse60 
    $endmerge
    conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp65 := (($bitcast ($int<32>) conv62 ) < ($bitcast ($int<32>) conv49 )) $buffering 1// bits of buffering = 1. 
    cmp65x_xnot := (cmp65 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp75 := (($bitcast ($int<32>) conv62 ) < ($bitcast ($int<32>) add74 )) $buffering 1// bits of buffering = 1. 
    orx_xcond190 := (cmp65x_xnot & cmp75) $buffering 1// bits of buffering = 1. 
    $if orx_xcond190 $then 
    $place[lorx_xlhsx_xfalse60_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse60_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse60_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv79 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv83 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul84 := (conv83 * conv81) $buffering 1// bits of buffering = 32. 
    mul90 := (conv47 * conv87) $buffering 1// bits of buffering = 32. 
    add85 := (mul90 + conv79) $buffering 1// bits of buffering = 32. 
    add91 := (add85 + mul84) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add91 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse60_ifx_xelse 
    $endmerge
    conv95 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv62 - conv49) $buffering 1// bits of buffering = 32. 
    mul102 := (sub * conv32) $buffering 1// bits of buffering = 32. 
    sub110 := (conv47 - conv49) $buffering 1// bits of buffering = 32. 
    mul111 := (sub110 * conv105) $buffering 1// bits of buffering = 32. 
    add103 := (mul111 + conv95) $buffering 1// bits of buffering = 32. 
    add112 := (add103 + mul102) $buffering 1// bits of buffering = 32. 
    mul121 := (conv62 * conv81) $buffering 1// bits of buffering = 32. 
    mul127 := (conv47 * conv87) $buffering 1// bits of buffering = 32. 
    add122 := (mul127 + conv95) $buffering 1// bits of buffering = 32. 
    add128 := (add122 + mul121) $buffering 1// bits of buffering = 32. 
    shr130 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add112 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom131 := ($bitcast ($uint<64>) ($cast ($int<64>) shr130 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx132 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom131]) $buffering 1// bits of buffering = 32. 
    tmp133 := ->(arrayidx132) $buffering 1// bits of buffering = 64. 
    shr135 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add128 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom136 := ($bitcast ($uint<64>) ($cast ($int<64>) shr135 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx137 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom136]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx137) := tmp133 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv140 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add141 := (conv140 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp144 := (($bitcast ($int<32>) add141 ) < ($bitcast ($int<32>) conv32 )) $buffering 1// bits of buffering = 1. 
    $if cmp144 $then 
    $place[ifx_xend_ifx_xthen146]
    $else 
    $place[ifx_xend_ifx_xelse151]
    $endif
    $merge ifx_xend_ifx_xthen146 
    $endmerge
    add149 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen146_ifx_xend184]
    $merge ifx_xend_ifx_xelse151 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv154 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp160 := (conv154 == add159) $buffering 1// bits of buffering = 1. 
    inc165 := ($cast ($uint<16>) cmp160 ) $buffering 1// bits of buffering = 16. 
    inc165x_xix_x2 := (inc165 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp160 div  inc )  $buffering 1// bits of buffering = 16. 
    conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) inc165x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp176 := (conv168 == add175) $buffering 1// bits of buffering = 1. 
    $if cmp176 $then 
    $place[ifx_xelse151_whilex_xend]
    $else 
    $place[ifx_xelse151_ifx_xend184]
    $endif
    $merge ifx_xelse151_ifx_xend184 ifx_xthen146_ifx_xend184 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add149 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) inc165x_xix_x2 ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend184_whilex_xbody]
    $merge ifx_xelse151_whilex_xend 
    $endmerge
    $barrier
    Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_C]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block2_starting $buffering 1// bits of buffering = 8. 
    call1 := Block2_starting $buffering 1// bits of buffering = 8. 
    call2 := Block2_starting $buffering 1// bits of buffering = 8. 
    call3 := Block2_starting $buffering 1// bits of buffering = 8. 
    call4 := Block2_starting $buffering 1// bits of buffering = 8. 
    call5 := Block2_starting $buffering 1// bits of buffering = 8. 
    call6 := Block2_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000010  )) $buffering 1// bits of buffering = 16. 
    conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul40 := (conv37 * conv39) $buffering 1// bits of buffering = 32. 
    conv48 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv81 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext190 := (mul40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv87 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext190 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    div157 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    shl := (conv48 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add160 := (shl + div157) $buffering 1// bits of buffering = 32. 
    conv171 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    div172 := (conv171 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add176 := (shl + div172) $buffering 1// bits of buffering = 32. 
    add := (conv48 + div172) $buffering 1// bits of buffering = 32. 
    add74 := (conv48 + div157) $buffering 1// bits of buffering = 32. 
    mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv31) $buffering 1// bits of buffering = 32. 
    conv105 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend185_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend185_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend185_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend185_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv46 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv46 ) < ($bitcast ($int<32>) conv48 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp57 := (($bitcast ($int<32>) conv46 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp57) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse59]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse59 
    $endmerge
    conv61 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp64 := (($bitcast ($int<32>) conv61 ) < ($bitcast ($int<32>) conv48 )) $buffering 1// bits of buffering = 1. 
    cmp64x_xnot := (cmp64 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp75 := (($bitcast ($int<32>) conv61 ) < ($bitcast ($int<32>) add74 )) $buffering 1// bits of buffering = 1. 
    orx_xcond191 := (cmp64x_xnot & cmp75) $buffering 1// bits of buffering = 1. 
    $if orx_xcond191 $then 
    $place[lorx_xlhsx_xfalse59_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse59_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse59_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv79 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv83 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul84 := (conv83 * conv81) $buffering 1// bits of buffering = 32. 
    mul90 := (conv46 * conv87) $buffering 1// bits of buffering = 32. 
    add85 := (mul90 + conv79) $buffering 1// bits of buffering = 32. 
    add91 := (add85 + mul84) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add91 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse59_ifx_xelse 
    $endmerge
    conv95 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv61 - conv48) $buffering 1// bits of buffering = 32. 
    mul102 := (sub * conv31) $buffering 1// bits of buffering = 32. 
    sub110 := (conv46 - conv48) $buffering 1// bits of buffering = 32. 
    mul111 := (sub110 * conv105) $buffering 1// bits of buffering = 32. 
    add103 := (mul111 + conv95) $buffering 1// bits of buffering = 32. 
    add112 := (add103 + mul102) $buffering 1// bits of buffering = 32. 
    mul121 := (conv61 * conv81) $buffering 1// bits of buffering = 32. 
    mul127 := (conv46 * conv87) $buffering 1// bits of buffering = 32. 
    add122 := (mul127 + conv95) $buffering 1// bits of buffering = 32. 
    add128 := (add122 + mul121) $buffering 1// bits of buffering = 32. 
    shr130 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add112 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom131 := ($bitcast ($uint<64>) ($cast ($int<64>) shr130 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx132 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom131]) $buffering 1// bits of buffering = 32. 
    tmp133 := ->(arrayidx132) $buffering 1// bits of buffering = 64. 
    shr135 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add128 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom136 := ($bitcast ($uint<64>) ($cast ($int<64>) shr135 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx137 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom136]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx137) := tmp133 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv140 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add141 := (conv140 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp144 := (($bitcast ($int<32>) add141 ) < ($bitcast ($int<32>) conv31 )) $buffering 1// bits of buffering = 1. 
    $if cmp144 $then 
    $place[ifx_xend_ifx_xthen146]
    $else 
    $place[ifx_xend_ifx_xelse151]
    $endif
    $merge ifx_xend_ifx_xthen146 
    $endmerge
    add149 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen146_ifx_xend185]
    $merge ifx_xend_ifx_xelse151 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv154 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp161 := (conv154 == add160) $buffering 1// bits of buffering = 1. 
    inc166 := ($cast ($uint<16>) cmp161 ) $buffering 1// bits of buffering = 16. 
    inc166x_xix_x2 := (inc166 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp161 ($bitcast ($uint<16>) _b0000000000000000  )  inc )  $buffering 1// bits of buffering = 16. 
    conv169 := ($bitcast ($uint<32>) ($cast ($int<32>) inc166x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp177 := (conv169 == add176) $buffering 1// bits of buffering = 1. 
    $if cmp177 $then 
    $place[ifx_xelse151_whilex_xend]
    $else 
    $place[ifx_xelse151_ifx_xend185]
    $endif
    $merge ifx_xelse151_ifx_xend185 ifx_xthen146_ifx_xend185 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse151_ifx_xend185 			  ($cast ($uint<16>) add149 ) $on   ifx_xthen146_ifx_xend185 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen146_ifx_xend185 			  ($cast ($uint<16>) inc166x_xix_x2 ) $on   ifx_xelse151_ifx_xend185 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse151_ifx_xend185 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen146_ifx_xend185 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend185_whilex_xbody]
    $merge ifx_xelse151_whilex_xend 
    $endmerge
    $barrier
    Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_D]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block3_starting $buffering 1// bits of buffering = 8. 
    call1 := Block3_starting $buffering 1// bits of buffering = 8. 
    call2 := Block3_starting $buffering 1// bits of buffering = 8. 
    call3 := Block3_starting $buffering 1// bits of buffering = 8. 
    call4 := Block3_starting $buffering 1// bits of buffering = 8. 
    call5 := Block3_starting $buffering 1// bits of buffering = 8. 
    call6 := Block3_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000010  )) $buffering 1// bits of buffering = 16. 
    conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul45 := (conv42 * conv44) $buffering 1// bits of buffering = 32. 
    conv53 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv85 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext193 := (mul45 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv91 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext193 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    shl := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add163 := (shl + conv38) $buffering 1// bits of buffering = 32. 
    conv174 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    div175 := (conv174 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add179 := (shl + div175) $buffering 1// bits of buffering = 32. 
    add := (conv53 + div175) $buffering 1// bits of buffering = 32. 
    add78 := (conv53 + conv38) $buffering 1// bits of buffering = 32. 
    mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv36) $buffering 1// bits of buffering = 32. 
    conv109 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend188_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend188_whilex_xbody 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend188_whilex_xbody 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend188_whilex_xbody 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv51 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv51 ) < ($bitcast ($int<32>) conv53 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp62 := (($bitcast ($int<32>) conv51 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp62) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse64]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse64 
    $endmerge
    conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp69 := (($bitcast ($int<32>) conv66 ) < ($bitcast ($int<32>) conv53 )) $buffering 1// bits of buffering = 1. 
    cmp69x_xnot := (cmp69 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp79 := (($bitcast ($int<32>) conv66 ) < ($bitcast ($int<32>) add78 )) $buffering 1// bits of buffering = 1. 
    orx_xcond194 := (cmp69x_xnot & cmp79) $buffering 1// bits of buffering = 1. 
    $if orx_xcond194 $then 
    $place[lorx_xlhsx_xfalse64_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse64_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse64_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv83 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv87 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul88 := (conv87 * conv85) $buffering 1// bits of buffering = 32. 
    mul94 := (conv51 * conv91) $buffering 1// bits of buffering = 32. 
    add89 := (mul94 + conv83) $buffering 1// bits of buffering = 32. 
    add95 := (add89 + mul88) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add95 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse64_ifx_xelse 
    $endmerge
    conv99 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv66 - conv53) $buffering 1// bits of buffering = 32. 
    mul106 := (sub * conv36) $buffering 1// bits of buffering = 32. 
    sub114 := (conv51 - conv53) $buffering 1// bits of buffering = 32. 
    mul115 := (sub114 * conv109) $buffering 1// bits of buffering = 32. 
    add107 := (mul115 + conv99) $buffering 1// bits of buffering = 32. 
    add116 := (add107 + mul106) $buffering 1// bits of buffering = 32. 
    mul125 := (conv66 * conv85) $buffering 1// bits of buffering = 32. 
    mul131 := (conv51 * conv91) $buffering 1// bits of buffering = 32. 
    add126 := (mul131 + conv99) $buffering 1// bits of buffering = 32. 
    add132 := (add126 + mul125) $buffering 1// bits of buffering = 32. 
    shr134 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add116 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom135 := ($bitcast ($uint<64>) ($cast ($int<64>) shr134 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx136 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom135]) $buffering 1// bits of buffering = 32. 
    tmp137 := ->(arrayidx136) $buffering 1// bits of buffering = 64. 
    shr139 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add132 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom140 := ($bitcast ($uint<64>) ($cast ($int<64>) shr139 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx141 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom140]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx141) := tmp137 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv144 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add145 := (conv144 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp148 := (($bitcast ($int<32>) add145 ) < ($bitcast ($int<32>) conv36 )) $buffering 1// bits of buffering = 1. 
    $if cmp148 $then 
    $place[ifx_xend_ifx_xthen150]
    $else 
    $place[ifx_xend_ifx_xelse155]
    $endif
    $merge ifx_xend_ifx_xthen150 
    $endmerge
    add153 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen150_ifx_xend188]
    $merge ifx_xend_ifx_xelse155 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv158 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp164 := (conv158 == add163) $buffering 1// bits of buffering = 1. 
    inc169 := ($cast ($uint<16>) cmp164 ) $buffering 1// bits of buffering = 16. 
    inc169x_xix_x2 := (inc169 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp164 div  inc )  $buffering 1// bits of buffering = 16. 
    conv172 := ($bitcast ($uint<32>) ($cast ($int<32>) inc169x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp180 := (conv172 == add179) $buffering 1// bits of buffering = 1. 
    $if cmp180 $then 
    $place[ifx_xelse155_whilex_xend]
    $else 
    $place[ifx_xelse155_ifx_xend188]
    $endif
    $merge ifx_xelse155_ifx_xend188 ifx_xthen150_ifx_xend188 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add153 ) $on   ifx_xthen150_ifx_xend188 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse155_ifx_xend188 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen150_ifx_xend188 			  ($cast ($uint<16>) inc169x_xix_x2 ) $on   ifx_xelse155_ifx_xend188 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen150_ifx_xend188 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse155_ifx_xend188 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend188_whilex_xbody]
    $merge ifx_xelse155_whilex_xend 
    $endmerge
    $barrier
    Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_E]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block4_starting $buffering 1// bits of buffering = 8. 
    call1 := Block4_starting $buffering 1// bits of buffering = 8. 
    call2 := Block4_starting $buffering 1// bits of buffering = 8. 
    call3 := Block4_starting $buffering 1// bits of buffering = 8. 
    call4 := Block4_starting $buffering 1// bits of buffering = 8. 
    call5 := Block4_starting $buffering 1// bits of buffering = 8. 
    call6 := Block4_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul40 := (conv37 * conv39) $buffering 1// bits of buffering = 32. 
    conv48 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv82 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext192 := (mul40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext192 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    div158 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    shl := (conv48 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add161 := (shl + div158) $buffering 1// bits of buffering = 32. 
    conv172 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    mul173 := (conv172 * ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 32. 
    div174 := (mul173 >> ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    add178 := (shl + div174) $buffering 1// bits of buffering = 32. 
    add := (conv48 + div174) $buffering 1// bits of buffering = 32. 
    add75 := (conv48 + div158) $buffering 1// bits of buffering = 32. 
    mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv31) $buffering 1// bits of buffering = 32. 
    conv106 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend187_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv46 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv46 ) < ($bitcast ($int<32>) conv48 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp58 := (($bitcast ($int<32>) conv46 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp58) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse60]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse60 
    $endmerge
    conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp65 := (($bitcast ($int<32>) conv62 ) < ($bitcast ($int<32>) conv48 )) $buffering 1// bits of buffering = 1. 
    cmp65x_xnot := (cmp65 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp76 := (($bitcast ($int<32>) conv62 ) < ($bitcast ($int<32>) add75 )) $buffering 1// bits of buffering = 1. 
    orx_xcond193 := (cmp65x_xnot & cmp76) $buffering 1// bits of buffering = 1. 
    $if orx_xcond193 $then 
    $place[lorx_xlhsx_xfalse60_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse60_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse60_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv80 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv84 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul85 := (conv84 * conv82) $buffering 1// bits of buffering = 32. 
    mul91 := (conv46 * conv88) $buffering 1// bits of buffering = 32. 
    add86 := (mul91 + conv80) $buffering 1// bits of buffering = 32. 
    add92 := (add86 + mul85) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add92 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse60_ifx_xelse 
    $endmerge
    conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv62 - conv48) $buffering 1// bits of buffering = 32. 
    mul103 := (sub * conv31) $buffering 1// bits of buffering = 32. 
    sub111 := (conv46 - conv48) $buffering 1// bits of buffering = 32. 
    mul112 := (sub111 * conv106) $buffering 1// bits of buffering = 32. 
    add104 := (mul112 + conv96) $buffering 1// bits of buffering = 32. 
    add113 := (add104 + mul103) $buffering 1// bits of buffering = 32. 
    mul122 := (conv62 * conv82) $buffering 1// bits of buffering = 32. 
    mul128 := (conv46 * conv88) $buffering 1// bits of buffering = 32. 
    add123 := (mul128 + conv96) $buffering 1// bits of buffering = 32. 
    add129 := (add123 + mul122) $buffering 1// bits of buffering = 32. 
    shr131 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add113 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom132 := ($bitcast ($uint<64>) ($cast ($int<64>) shr131 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx133 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom132]) $buffering 1// bits of buffering = 32. 
    tmp134 := ->(arrayidx133) $buffering 1// bits of buffering = 64. 
    shr136 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add129 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom137 := ($bitcast ($uint<64>) ($cast ($int<64>) shr136 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx138 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom137]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx138) := tmp134 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv141 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add142 := (conv141 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp145 := (($bitcast ($int<32>) add142 ) < ($bitcast ($int<32>) conv31 )) $buffering 1// bits of buffering = 1. 
    $if cmp145 $then 
    $place[ifx_xend_ifx_xthen147]
    $else 
    $place[ifx_xend_ifx_xelse152]
    $endif
    $merge ifx_xend_ifx_xthen147 
    $endmerge
    add150 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen147_ifx_xend187]
    $merge ifx_xend_ifx_xelse152 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv155 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp162 := (conv155 == add161) $buffering 1// bits of buffering = 1. 
    inc167 := ($cast ($uint<16>) cmp162 ) $buffering 1// bits of buffering = 16. 
    inc167x_xix_x2 := (inc167 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp162 ($bitcast ($uint<16>) _b0000000000000000  )  inc )  $buffering 1// bits of buffering = 16. 
    conv170 := ($bitcast ($uint<32>) ($cast ($int<32>) inc167x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp179 := (conv170 == add178) $buffering 1// bits of buffering = 1. 
    $if cmp179 $then 
    $place[ifx_xelse152_whilex_xend]
    $else 
    $place[ifx_xelse152_ifx_xend187]
    $endif
    $merge ifx_xelse152_ifx_xend187 ifx_xthen147_ifx_xend187 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add150 ) $on   ifx_xthen147_ifx_xend187 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse152_ifx_xend187 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen147_ifx_xend187 			  ($cast ($uint<16>) inc167x_xix_x2 ) $on   ifx_xelse152_ifx_xend187 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen147_ifx_xend187 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse152_ifx_xend187 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend187_whilex_xbody]
    $merge ifx_xelse152_whilex_xend 
    $endmerge
    $barrier
    Block4_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_F]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block5_starting $buffering 1// bits of buffering = 8. 
    call1 := Block5_starting $buffering 1// bits of buffering = 8. 
    call2 := Block5_starting $buffering 1// bits of buffering = 8. 
    call3 := Block5_starting $buffering 1// bits of buffering = 8. 
    call4 := Block5_starting $buffering 1// bits of buffering = 8. 
    call5 := Block5_starting $buffering 1// bits of buffering = 8. 
    call6 := Block5_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul45 := (conv42 * conv44) $buffering 1// bits of buffering = 32. 
    conv53 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv86 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext195 := (mul45 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv92 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext195 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    shl := (conv53 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add164 := (shl + conv38) $buffering 1// bits of buffering = 32. 
    conv175 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    mul176 := (conv175 * ($bitcast ($uint<32>) _b00000000000000000000000000000011  )) $buffering 1// bits of buffering = 32. 
    div177 := (mul176 >> ($bitcast ($uint<32>) _b00000000000000000000000000000010  )) $buffering 1// bits of buffering = 32. 
    add181 := (shl + div177) $buffering 1// bits of buffering = 32. 
    add := (conv53 + div177) $buffering 1// bits of buffering = 32. 
    add79 := (conv53 + conv38) $buffering 1// bits of buffering = 32. 
    mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul * conv36) $buffering 1// bits of buffering = 32. 
    conv110 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend190_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend190_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend190_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend190_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv51 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv51 ) < ($bitcast ($int<32>) conv53 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp63 := (($bitcast ($int<32>) conv51 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp63) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse65]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse65 
    $endmerge
    conv67 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp70 := (($bitcast ($int<32>) conv67 ) < ($bitcast ($int<32>) conv53 )) $buffering 1// bits of buffering = 1. 
    cmp70x_xnot := (cmp70 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp80 := (($bitcast ($int<32>) conv67 ) < ($bitcast ($int<32>) add79 )) $buffering 1// bits of buffering = 1. 
    orx_xcond196 := (cmp70x_xnot & cmp80) $buffering 1// bits of buffering = 1. 
    $if orx_xcond196 $then 
    $place[lorx_xlhsx_xfalse65_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse65_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse65_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv84 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv88 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul89 := (conv88 * conv86) $buffering 1// bits of buffering = 32. 
    mul95 := (conv51 * conv92) $buffering 1// bits of buffering = 32. 
    add90 := (mul95 + conv84) $buffering 1// bits of buffering = 32. 
    add96 := (add90 + mul89) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add96 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse65_ifx_xelse 
    $endmerge
    conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv67 - conv53) $buffering 1// bits of buffering = 32. 
    mul107 := (sub * conv36) $buffering 1// bits of buffering = 32. 
    sub115 := (conv51 - conv53) $buffering 1// bits of buffering = 32. 
    mul116 := (sub115 * conv110) $buffering 1// bits of buffering = 32. 
    add108 := (mul116 + conv100) $buffering 1// bits of buffering = 32. 
    add117 := (add108 + mul107) $buffering 1// bits of buffering = 32. 
    mul126 := (conv67 * conv86) $buffering 1// bits of buffering = 32. 
    mul132 := (conv51 * conv92) $buffering 1// bits of buffering = 32. 
    add127 := (mul132 + conv100) $buffering 1// bits of buffering = 32. 
    add133 := (add127 + mul126) $buffering 1// bits of buffering = 32. 
    shr135 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add117 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom136 := ($bitcast ($uint<64>) ($cast ($int<64>) shr135 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx137 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom136]) $buffering 1// bits of buffering = 32. 
    tmp138 := ->(arrayidx137) $buffering 1// bits of buffering = 64. 
    shr140 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add133 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom141 := ($bitcast ($uint<64>) ($cast ($int<64>) shr140 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx142 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom141]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx142) := tmp138 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv145 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add146 := (conv145 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp149 := (($bitcast ($int<32>) add146 ) < ($bitcast ($int<32>) conv36 )) $buffering 1// bits of buffering = 1. 
    $if cmp149 $then 
    $place[ifx_xend_ifx_xthen151]
    $else 
    $place[ifx_xend_ifx_xelse156]
    $endif
    $merge ifx_xend_ifx_xthen151 
    $endmerge
    add154 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen151_ifx_xend190]
    $merge ifx_xend_ifx_xelse156 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp165 := (conv159 == add164) $buffering 1// bits of buffering = 1. 
    inc170 := ($cast ($uint<16>) cmp165 ) $buffering 1// bits of buffering = 16. 
    inc170x_xix_x2 := (inc170 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp165 div  inc )  $buffering 1// bits of buffering = 16. 
    conv173 := ($bitcast ($uint<32>) ($cast ($int<32>) inc170x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp182 := (conv173 == add181) $buffering 1// bits of buffering = 1. 
    $if cmp182 $then 
    $place[ifx_xelse156_whilex_xend]
    $else 
    $place[ifx_xelse156_ifx_xend190]
    $endif
    $merge ifx_xelse156_ifx_xend190 ifx_xthen151_ifx_xend190 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add154 ) $on   ifx_xthen151_ifx_xend190 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse156_ifx_xend190 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen151_ifx_xend190 			  ($cast ($uint<16>) inc170x_xix_x2 ) $on   ifx_xelse156_ifx_xend190 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen151_ifx_xend190 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse156_ifx_xend190 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend190_whilex_xbody]
    $merge ifx_xelse156_whilex_xend 
    $endmerge
    $barrier
    Block5_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_G]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block6_starting $buffering 1// bits of buffering = 8. 
    call1 := Block6_starting $buffering 1// bits of buffering = 8. 
    call2 := Block6_starting $buffering 1// bits of buffering = 8. 
    call3 := Block6_starting $buffering 1// bits of buffering = 8. 
    call4 := Block6_starting $buffering 1// bits of buffering = 8. 
    call5 := Block6_starting $buffering 1// bits of buffering = 8. 
    call6 := Block6_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000010  )) $buffering 1// bits of buffering = 16. 
    mul := (div * ($bitcast ($uint<16>) _b0000000000000011  )) $buffering 1// bits of buffering = 16. 
    conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul41 := (conv38 * conv40) $buffering 1// bits of buffering = 32. 
    conv49 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv81 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext189 := (mul41 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv87 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext189 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    div157 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    shl := (conv49 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add160 := (shl + div157) $buffering 1// bits of buffering = 32. 
    conv171 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    add175 := (shl + conv171) $buffering 1// bits of buffering = 32. 
    add := (conv49 + conv171) $buffering 1// bits of buffering = 32. 
    add74 := (conv49 + div157) $buffering 1// bits of buffering = 32. 
    mul34 := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul34 * conv31) $buffering 1// bits of buffering = 32. 
    conv105 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend184_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) mul ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend184_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv47 ) < ($bitcast ($int<32>) conv49 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp57 := (($bitcast ($int<32>) conv47 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp57) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse59]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse59 
    $endmerge
    conv61 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp64 := (($bitcast ($int<32>) conv61 ) < ($bitcast ($int<32>) conv49 )) $buffering 1// bits of buffering = 1. 
    cmp64x_xnot := (cmp64 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp75 := (($bitcast ($int<32>) conv61 ) < ($bitcast ($int<32>) add74 )) $buffering 1// bits of buffering = 1. 
    orx_xcond190 := (cmp64x_xnot & cmp75) $buffering 1// bits of buffering = 1. 
    $if orx_xcond190 $then 
    $place[lorx_xlhsx_xfalse59_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse59_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse59_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv79 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv83 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul84 := (conv83 * conv81) $buffering 1// bits of buffering = 32. 
    mul90 := (conv47 * conv87) $buffering 1// bits of buffering = 32. 
    add85 := (mul90 + conv79) $buffering 1// bits of buffering = 32. 
    add91 := (add85 + mul84) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add91 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse59_ifx_xelse 
    $endmerge
    conv95 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv61 - conv49) $buffering 1// bits of buffering = 32. 
    mul102 := (sub * conv31) $buffering 1// bits of buffering = 32. 
    sub110 := (conv47 - conv49) $buffering 1// bits of buffering = 32. 
    mul111 := (sub110 * conv105) $buffering 1// bits of buffering = 32. 
    add103 := (mul111 + conv95) $buffering 1// bits of buffering = 32. 
    add112 := (add103 + mul102) $buffering 1// bits of buffering = 32. 
    mul121 := (conv61 * conv81) $buffering 1// bits of buffering = 32. 
    mul127 := (conv47 * conv87) $buffering 1// bits of buffering = 32. 
    add122 := (mul127 + conv95) $buffering 1// bits of buffering = 32. 
    add128 := (add122 + mul121) $buffering 1// bits of buffering = 32. 
    shr130 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add112 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom131 := ($bitcast ($uint<64>) ($cast ($int<64>) shr130 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx132 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom131]) $buffering 1// bits of buffering = 32. 
    tmp133 := ->(arrayidx132) $buffering 1// bits of buffering = 64. 
    shr135 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add128 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom136 := ($bitcast ($uint<64>) ($cast ($int<64>) shr135 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx137 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom136]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx137) := tmp133 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv140 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add141 := (conv140 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp144 := (($bitcast ($int<32>) add141 ) < ($bitcast ($int<32>) conv31 )) $buffering 1// bits of buffering = 1. 
    $if cmp144 $then 
    $place[ifx_xend_ifx_xthen146]
    $else 
    $place[ifx_xend_ifx_xelse151]
    $endif
    $merge ifx_xend_ifx_xthen146 
    $endmerge
    add149 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen146_ifx_xend184]
    $merge ifx_xend_ifx_xelse151 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv154 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp161 := (conv154 == add160) $buffering 1// bits of buffering = 1. 
    inc166 := ($cast ($uint<16>) cmp161 ) $buffering 1// bits of buffering = 16. 
    inc166x_xix_x2 := (inc166 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp161 ($bitcast ($uint<16>) _b0000000000000000  )  inc )  $buffering 1// bits of buffering = 16. 
    conv169 := ($bitcast ($uint<32>) ($cast ($int<32>) inc166x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp176 := (conv169 == add175) $buffering 1// bits of buffering = 1. 
    $if cmp176 $then 
    $place[ifx_xelse151_whilex_xend]
    $else 
    $place[ifx_xelse151_ifx_xend184]
    $endif
    $merge ifx_xelse151_ifx_xend184 ifx_xthen146_ifx_xend184 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add149 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) inc166x_xix_x2 ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen146_ifx_xend184 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse151_ifx_xend184 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend184_whilex_xbody]
    $merge ifx_xelse151_whilex_xend 
    $endmerge
    $barrier
    Block6_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [zeropad3D_H]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    call := Block7_starting $buffering 1// bits of buffering = 8. 
    call1 := Block7_starting $buffering 1// bits of buffering = 8. 
    call2 := Block7_starting $buffering 1// bits of buffering = 8. 
    call3 := Block7_starting $buffering 1// bits of buffering = 8. 
    call4 := Block7_starting $buffering 1// bits of buffering = 8. 
    call5 := Block7_starting $buffering 1// bits of buffering = 8. 
    call6 := Block7_starting $buffering 1// bits of buffering = 8. 
    $barrier
    conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    mul := (conv10 * ($bitcast ($uint<16>) _b0000000000000011  )) $buffering 1// bits of buffering = 16. 
    div11 := (mul >> ($bitcast ($uint<16>) _b0000000000000010  )) $buffering 1// bits of buffering = 16. 
    conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    conv43 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    conv45 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    mul46 := (conv43 * conv45) $buffering 1// bits of buffering = 32. 
    conv54 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    conv85 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    sext192 := (mul46 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    conv91 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext192 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    shl := (conv54 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1// bits of buffering = 32. 
    add163 := (shl + conv38) $buffering 1// bits of buffering = 32. 
    conv174 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    add178 := (shl + conv174) $buffering 1// bits of buffering = 32. 
    add := (conv54 + conv174) $buffering 1// bits of buffering = 32. 
    add78 := (conv54 + conv38) $buffering 1// bits of buffering = 32. 
    mul39 := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1// bits of buffering = 32. 
    sext := (mul39 * conv36) $buffering 1// bits of buffering = 32. 
    conv109 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1// bits of buffering = 32. 
    $place[entry_whilex_xbody]
    $merge entry_whilex_xbody ifx_xend187_whilex_xbody 
    $phi kx_x1 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) kx_x0x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $phi ix_x2 := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) ix_x1x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $phi jx_x1 := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 			  ($cast ($uint<16>) jx_x0x_xph ) $on   ifx_xend187_whilex_xbody 
    // type of target is $uint<16>
    $endmerge
    conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp := (($bitcast ($int<32>) conv52 ) < ($bitcast ($int<32>) conv54 )) $buffering 1// bits of buffering = 1. 
    cmpx_xnot := (cmp ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp62 := (($bitcast ($int<32>) conv52 ) < ($bitcast ($int<32>) add )) $buffering 1// bits of buffering = 1. 
    orx_xcond := (cmpx_xnot & cmp62) $buffering 1// bits of buffering = 1. 
    $if orx_xcond $then 
    $place[whilex_xbody_lorx_xlhsx_xfalse64]
    $else 
    $place[whilex_xbody_ifx_xthen]
    $endif
    $merge whilex_xbody_lorx_xlhsx_xfalse64 
    $endmerge
    conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    cmp69 := (($bitcast ($int<32>) conv66 ) < ($bitcast ($int<32>) conv54 )) $buffering 1// bits of buffering = 1. 
    cmp69x_xnot := (cmp69 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1// bits of buffering = 1. 
    cmp79 := (($bitcast ($int<32>) conv66 ) < ($bitcast ($int<32>) add78 )) $buffering 1// bits of buffering = 1. 
    orx_xcond193 := (cmp69x_xnot & cmp79) $buffering 1// bits of buffering = 1. 
    $if orx_xcond193 $then 
    $place[lorx_xlhsx_xfalse64_ifx_xelse]
    $else 
    $place[lorx_xlhsx_xfalse64_ifx_xthen]
    $endif
    $merge lorx_xlhsx_xfalse64_ifx_xthen whilex_xbody_ifx_xthen 
    $endmerge
    conv83 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    conv87 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x1 ) ) $buffering 1// bits of buffering = 32. 
    mul88 := (conv87 * conv85) $buffering 1// bits of buffering = 32. 
    mul94 := (conv52 * conv91) $buffering 1// bits of buffering = 32. 
    add89 := (mul94 + conv83) $buffering 1// bits of buffering = 32. 
    add95 := (add89 + mul88) $buffering 1// bits of buffering = 32. 
    shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add95 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    $place[ifx_xthen_ifx_xend]
    $merge lorx_xlhsx_xfalse64_ifx_xelse 
    $endmerge
    conv99 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    sub := (conv66 - conv54) $buffering 1// bits of buffering = 32. 
    mul106 := (sub * conv36) $buffering 1// bits of buffering = 32. 
    sub114 := (conv52 - conv54) $buffering 1// bits of buffering = 32. 
    mul115 := (sub114 * conv109) $buffering 1// bits of buffering = 32. 
    add107 := (mul115 + conv99) $buffering 1// bits of buffering = 32. 
    add116 := (add107 + mul106) $buffering 1// bits of buffering = 32. 
    mul125 := (conv66 * conv85) $buffering 1// bits of buffering = 32. 
    mul131 := (conv52 * conv91) $buffering 1// bits of buffering = 32. 
    add126 := (mul131 + conv99) $buffering 1// bits of buffering = 32. 
    add132 := (add126 + mul125) $buffering 1// bits of buffering = 32. 
    shr134 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add116 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom135 := ($bitcast ($uint<64>) ($cast ($int<64>) shr134 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx136 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom135]) $buffering 1// bits of buffering = 32. 
    tmp137 := ->(arrayidx136) $buffering 1// bits of buffering = 64. 
    shr139 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add132 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1// bits of buffering = 32. 
    idxprom140 := ($bitcast ($uint<64>) ($cast ($int<64>) shr139 ) ) $buffering 1// bits of buffering = 64. 
    arrayidx141 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom140]) $buffering 1// bits of buffering = 32. 
    ->(arrayidx141) := tmp137 $buffering 1// bits of buffering = 64. 
    $place[ifx_xelse_ifx_xend]
    $merge ifx_xelse_ifx_xend ifx_xthen_ifx_xend 
    $endmerge
    conv144 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    add145 := (conv144 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1// bits of buffering = 32. 
    cmp148 := (($bitcast ($int<32>) add145 ) < ($bitcast ($int<32>) conv36 )) $buffering 1// bits of buffering = 1. 
    $if cmp148 $then 
    $place[ifx_xend_ifx_xthen150]
    $else 
    $place[ifx_xend_ifx_xelse155]
    $endif
    $merge ifx_xend_ifx_xthen150 
    $endmerge
    add153 := (kx_x1 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1// bits of buffering = 16. 
    $place[ifx_xthen150_ifx_xend187]
    $merge ifx_xend_ifx_xelse155 
    $endmerge
    inc := (jx_x1 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1// bits of buffering = 16. 
    conv158 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    cmp164 := (conv158 == add163) $buffering 1// bits of buffering = 1. 
    inc169 := ($cast ($uint<16>) cmp164 ) $buffering 1// bits of buffering = 16. 
    inc169x_xix_x2 := (inc169 + ix_x2) $buffering 1// bits of buffering = 16. 
    jx_x2 := ( $mux cmp164 div  inc )  $buffering 1// bits of buffering = 16. 
    conv172 := ($bitcast ($uint<32>) ($cast ($int<32>) inc169x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
    cmp179 := (conv172 == add178) $buffering 1// bits of buffering = 1. 
    $if cmp179 $then 
    $place[ifx_xelse155_whilex_xend]
    $else 
    $place[ifx_xelse155_ifx_xend187]
    $endif
    $merge ifx_xelse155_ifx_xend187 ifx_xthen150_ifx_xend187 
    $phi kx_x0x_xph := 			  ($cast ($uint<16>) add153 ) $on   ifx_xthen150_ifx_xend187 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   ifx_xelse155_ifx_xend187 
    // type of target is $uint<16>
    $phi ix_x1x_xph := 			  ($cast ($uint<16>) ix_x2 ) $on   ifx_xthen150_ifx_xend187 			  ($cast ($uint<16>) inc169x_xix_x2 ) $on   ifx_xelse155_ifx_xend187 
    // type of target is $uint<16>
    $phi jx_x0x_xph := 			  ($cast ($uint<16>) jx_x1 ) $on   ifx_xthen150_ifx_xend187 			  ($cast ($uint<16>) jx_x2 ) $on   ifx_xelse155_ifx_xend187 
    // type of target is $uint<16>
    $endmerge
    $place[ifx_xend187_whilex_xbody]
    $merge ifx_xelse155_whilex_xend 
    $endmerge
    $barrier
    Block7_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: R 
// Memory space 1: T 
// Memory space 2: count 
// use of gated clocks in modules 
