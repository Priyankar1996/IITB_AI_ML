// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  Block0_complete : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block0_complete] 8 $depth 1 
// $pipe  Block0_starting : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block0_starting] 8 $depth 1 
// $pipe  Block1_complete : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block1_complete] 8 $depth 1 
// $pipe  Block1_starting : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block1_starting] 8 $depth 1 
// $pipe  Block2_complete : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block2_complete] 8 $depth 1 
// $pipe  Block2_starting : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block2_starting] 8 $depth 1 
// $pipe  Block3_complete : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block3_complete] 8 $depth 1 
// $pipe  Block3_starting : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block3_starting] 8 $depth 1 
// $pipe  elapsed_time_pipe : $uint<64>  $depth 1 
// can point into 
// in scope  top-level
$pipe [elapsed_time_pipe] 64 $depth 1 
// $pipe  zeropad_input_pipe : $uint<8>  $depth 2 
// can point into 
// in scope  top-level
$pipe [zeropad_input_pipe] 8 $depth 2 
// $pipe  zeropad_output_pipe : $uint<8>  $depth 2 
// can point into 
// in scope  top-level
$pipe [zeropad_output_pipe] 8 $depth 2 
// load store constants for object R
$constant $W[R_base_address] : $int<14> := _b00000000000000
// load store constants for object T
$constant $W[T_base_address] : $int<14> := _b00000000000000
// load store constants for object count
$constant $W[count_base_address] : $int<1> := _b0
// Declared gated clocks.
$memoryspace [memory_space_0] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [R] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_1] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [T] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_2] 
{
  $capacity 1
  $datawidth 64
  $addrwidth 1
  $maxaccesswidth 64
  // $storage  count : $uint<64> // memory space index = 2  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [count] : $int<64>
}
$module [progx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 31
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 31
  }
  // end data-path
  $attribute initializer => ""
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 39
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 44
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_25] 
    {
      ::[call_stmt_26] 
      {
        // start: 		$call progx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 46
        $T[call_stmt_26_sample_start_] 
        $T[call_stmt_26_sample_completed_] 
        $T[call_stmt_26_update_start_] 
        $T[call_stmt_26_update_completed_] 
        ;;[call_stmt_26_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_26_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_26_sample_start_ &-> (call_stmt_26_Sample)
        call_stmt_26_sample_completed_ <-& (call_stmt_26_Sample)
        call_stmt_26_sample_completed_ &-> ($null)
        call_stmt_26_update_start_ &-> (call_stmt_26_Update)
        call_stmt_26_update_completed_ <-& (call_stmt_26_Update)
        // end: 		$call progx_xoptx_xo_storage_initializer_ () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 44
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 39
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 44
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 46
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 44
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 46
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 44
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 46
    $call [call_stmt_26_call] $module progx_xoptx_xo_storage_initializer_() ()  
    $delay call_stmt_26_call 4
  }
  // end data-path
  // 		$call progx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 46
  call_stmt_26_call <=> (parallel_block_stmt_25/call_stmt_26/call_stmt_26_Sample/crr parallel_block_stmt_25/call_stmt_26/call_stmt_26_Update/ccr) (parallel_block_stmt_25/call_stmt_26/call_stmt_26_Sample/cra parallel_block_stmt_25/call_stmt_26/call_stmt_26_Update/cca)
}
$module [sendOutput] 
{
  $in size:$int<32>
  // can point into 
  // pipe-declarations for block %sendOutput
  //  file prog.linked.opt.aa, line 49
  // pipe-declarations for block %sendOutput%body
  //  file prog.linked.opt.aa, line 54
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 63
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 67
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 103
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 106
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 109
  // memory-space 0 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_31] // Branch Block  file prog.linked.opt.aa, line 54
    {
      $P [branch_block_stmt_31__entry__]
      branch_block_stmt_31__entry__ <-| ($entry)
      $P [branch_block_stmt_31__exit__]
      branch_block_stmt_31__exit__ |-> ($exit)
      $P [assign_stmt_41_to_assign_stmt_50__entry__] 
      $P [assign_stmt_41_to_assign_stmt_50__exit__] 
      $P [if_stmt_51__entry__] 
      $P [if_stmt_51__exit__] 
      $P [merge_stmt_57__entry__] 
      $P [merge_stmt_57__exit__] 
      $P [assign_stmt_61__entry__] 
      $P [assign_stmt_61__exit__] 
      $P [bbx_xnph_forx_xbody]
      $P [merge_stmt_63__exit__] 
      $P [assign_stmt_78_to_assign_stmt_191__entry__] 
      $P [assign_stmt_78_to_assign_stmt_191__exit__] 
      $P [if_stmt_192__entry__] 
      $P [if_stmt_192__exit__] 
      $P [merge_stmt_198__entry__] 
      $P [merge_stmt_198__exit__] 
      $P [forx_xendx_xloopexit_forx_xend]
      $P [merge_stmt_200__exit__] 
      $P [return__]
      $P [merge_stmt_202__exit__] 
      ::[assign_stmt_41_to_assign_stmt_50] 
      {
        // start: WAR dependencies for shr67
        // ignored out-of-scope w_root  size : $uint<32> 
        // done: WAR dependencies for shr67
        // start:  		$volatile shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 56
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
        // (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        // ($bitcast ($int<32>) size )
        // size
        // Target expression
        // (as target) shr67
        // start: WAR dependencies for shr67
        // ignored out-of-scope w_root  size : $uint<32> 
        // done: WAR dependencies for shr67
        // end:  		$volatile shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        // start: WAR dependencies for cmp68
        // ignored out-of-scope w_root  size : $uint<32> 
        // done: WAR dependencies for cmp68
        // start:  		$volatile cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1
        //  file prog.linked.opt.aa, line 57
        // volatile! 
        // Source expression
        // (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        // ($bitcast ($int<32>) shr67 )
        // shr67
        // Target expression
        // (as target) cmp68
        // start: WAR dependencies for cmp68
        // ignored out-of-scope w_root  size : $uint<32> 
        // done: WAR dependencies for cmp68
        // end:  		$volatile cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_41_to_assign_stmt_50__entry__ |-> (assign_stmt_41_to_assign_stmt_50)
      assign_stmt_41_to_assign_stmt_50__exit__ <-| (assign_stmt_41_to_assign_stmt_50)
      // if-statement  
      //  file prog.linked.opt.aa, line 58
      ;;[if_stmt_51_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_51__entry__ |-> (if_stmt_51_dead_link)
      if_stmt_51__exit__ <-| (if_stmt_51_dead_link)
      ;;[if_stmt_51_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_51__entry__ |-> (if_stmt_51_eval_test)
      $P [R_cmp68_52_place]
      R_cmp68_52_place <-| (if_stmt_51_eval_test)
      ;;[if_stmt_51_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_51_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp68_52_place |-> (if_stmt_51_if_link if_stmt_51_else_link)
      $P [entry_bbx_xnph]
      entry_bbx_xnph <-| (if_stmt_51_if_link)
      $P [entry_forx_xend]
      entry_forx_xend <-| (if_stmt_51_else_link)
      ::[assign_stmt_61] 
      {
        // start:  		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 65
        // Source expression
        // ($cast ($uint<64>) shr67 )
        $T[type_cast_60_sample_start_] 
        $T[type_cast_60_sample_completed_] 
        $T[type_cast_60_update_start_] 
        $T[type_cast_60_update_completed_] 
        // shr67
        // start: Forward dependencies from shr67 to transition type_cast_60_sample_start_
        // done: Forward dependencies from shr67 to transition type_cast_60_sample_start_
        ;;[type_cast_60_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_60_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_60_sample_start_ &-> (type_cast_60_Sample)
        type_cast_60_sample_completed_ <-& (type_cast_60_Sample)
        type_cast_60_sample_completed_ &-> ($null)
        type_cast_60_update_start_ &-> (type_cast_60_Update)
        type_cast_60_update_completed_ <-& (type_cast_60_Update)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
      }
      assign_stmt_61__entry__ |-> (assign_stmt_61)
      assign_stmt_61__exit__ <-| (assign_stmt_61)
      ::[assign_stmt_78_to_assign_stmt_191] 
      {
        // start:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 71
        // Source expression
        // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
        $T[addr_of_77_sample_start_] 
        $T[addr_of_77_sample_completed_] 
        $T[addr_of_77_update_start_] 
        $T[addr_of_77_update_completed_] 
        $T[array_obj_ref_76_root_address_calculated] 
        $T[array_obj_ref_76_offset_calculated] 
        $T[array_obj_ref_76_index_resized_1] 
        $T[array_obj_ref_76_index_scaled_1] 
        $T[array_obj_ref_76_index_computed_1] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_76_index_computed_1
        // done: Forward dependencies from indvar to transition array_obj_ref_76_index_computed_1
        ;;[array_obj_ref_76_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_76_index_computed_1 &-> (array_obj_ref_76_index_resize_1)
        array_obj_ref_76_index_resized_1 <-& (array_obj_ref_76_index_resize_1)
        ;;[array_obj_ref_76_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_76_index_resized_1 &-> (array_obj_ref_76_index_scale_1)
        array_obj_ref_76_index_scaled_1 <-& (array_obj_ref_76_index_scale_1)
        $T[array_obj_ref_76_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_76_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_76_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_76_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_76_index_scaled_1 &-> (array_obj_ref_76_final_index_sum_regn_Sample)
        array_obj_ref_76_final_index_sum_regn_sample_complete <-& (array_obj_ref_76_final_index_sum_regn_Sample)
        array_obj_ref_76_final_index_sum_regn_update_start &-> (array_obj_ref_76_final_index_sum_regn_Update)
        array_obj_ref_76_offset_calculated <-& (array_obj_ref_76_final_index_sum_regn_Update)
        ;;[array_obj_ref_76_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_76_offset_calculated &-> (array_obj_ref_76_base_plus_offset)
        array_obj_ref_76_root_address_calculated <-& (array_obj_ref_76_base_plus_offset)
        ;;[addr_of_77_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_77_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_77_sample_start_ <-& (array_obj_ref_76_root_address_calculated)
        addr_of_77_sample_start_ &-> (addr_of_77_request)
        addr_of_77_sample_completed_ <-& (addr_of_77_request)
        addr_of_77_sample_completed_ &-> ($null)
        addr_of_77_update_start_ &-> (addr_of_77_complete)
        addr_of_77_update_completed_ <-& (addr_of_77_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 72
        // Source expression
        // ->(arrayidx)
        $T[ptr_deref_81_sample_start_] 
        $T[ptr_deref_81_sample_completed_] 
        $T[ptr_deref_81_update_start_] 
        $T[ptr_deref_81_update_completed_] 
        $T[ptr_deref_81_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_81_word_address_calculated] 
        $T[ptr_deref_81_root_address_calculated] 
        $T[ptr_deref_81_base_address_resized] 
        ;;[ptr_deref_81_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_81_base_address_calculated &-> (ptr_deref_81_base_addr_resize)
        ptr_deref_81_base_address_resized <-& (ptr_deref_81_base_addr_resize)
        ;;[ptr_deref_81_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_81_base_address_resized &-> (ptr_deref_81_base_plus_offset)
        ptr_deref_81_root_address_calculated <-& (ptr_deref_81_base_plus_offset)
        ;;[ptr_deref_81_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_81_root_address_calculated &-> (ptr_deref_81_word_addrgen)
        ptr_deref_81_word_address_calculated <-& (ptr_deref_81_word_addrgen)
        ;;[ptr_deref_81_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_81_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_81_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_81_sample_start_ <-& (ptr_deref_81_word_address_calculated)
        ptr_deref_81_sample_start_ &-> (ptr_deref_81_Sample)
        ptr_deref_81_sample_completed_ <-& (ptr_deref_81_Sample)
        ptr_deref_81_sample_completed_ &-> ($null)
        ptr_deref_81_update_start_ &-> (ptr_deref_81_Update)
        ptr_deref_81_update_completed_ <-& (ptr_deref_81_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_81_base_address_calculated
        ptr_deref_81_base_address_calculated <-& (addr_of_77_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_81_base_address_calculated
        ptr_deref_81_sample_start_ <-& (ptr_deref_81_base_address_calculated)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
        // start:  		conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 73
        // Source expression
        // ($cast ($uint<8>) tmp4 )
        $T[type_cast_85_sample_start_] 
        $T[type_cast_85_sample_completed_] 
        $T[type_cast_85_update_start_] 
        $T[type_cast_85_update_completed_] 
        // tmp4
        // start: Forward dependencies from tmp4 to transition type_cast_85_sample_start_
        type_cast_85_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from tmp4 to transition type_cast_85_sample_start_
        ;;[type_cast_85_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_85_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_85_sample_start_ &-> (type_cast_85_Sample)
        type_cast_85_sample_completed_ <-& (type_cast_85_Sample)
        type_cast_85_sample_completed_ &-> ($null)
        type_cast_85_update_start_ &-> (type_cast_85_Update)
        type_cast_85_update_completed_ <-& (type_cast_85_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr9
        // done: WAR dependencies for shr9
        // start:  		$volatile shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 74
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // tmp4
        // Target expression
        // (as target) shr9
        // start: WAR dependencies for shr9
        // done: WAR dependencies for shr9
        // end:  		$volatile shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 75
        // Source expression
        // ($cast ($uint<8>) shr9 )
        $T[type_cast_95_sample_start_] 
        $T[type_cast_95_sample_completed_] 
        $T[type_cast_95_update_start_] 
        $T[type_cast_95_update_completed_] 
        // shr9
        // start: Forward dependencies from shr9 to transition type_cast_95_sample_start_
        type_cast_95_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr9 to transition type_cast_95_sample_start_
        ;;[type_cast_95_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_95_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_95_sample_start_ &-> (type_cast_95_Sample)
        type_cast_95_sample_completed_ <-& (type_cast_95_Sample)
        type_cast_95_sample_completed_ &-> ($null)
        type_cast_95_update_start_ &-> (type_cast_95_Update)
        type_cast_95_update_completed_ <-& (type_cast_95_Update)
        // Target expression
        // (as target) conv12
        // start: WAR dependencies for conv12
        // done: WAR dependencies for conv12
        // end:  		conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr15
        // done: WAR dependencies for shr15
        // start:  		$volatile shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 76
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        // tmp4
        // Target expression
        // (as target) shr15
        // start: WAR dependencies for shr15
        // done: WAR dependencies for shr15
        // end:  		$volatile shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        // start:  		conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 77
        // Source expression
        // ($cast ($uint<8>) shr15 )
        $T[type_cast_105_sample_start_] 
        $T[type_cast_105_sample_completed_] 
        $T[type_cast_105_update_start_] 
        $T[type_cast_105_update_completed_] 
        // shr15
        // start: Forward dependencies from shr15 to transition type_cast_105_sample_start_
        type_cast_105_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr15 to transition type_cast_105_sample_start_
        ;;[type_cast_105_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_105_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_105_sample_start_ &-> (type_cast_105_Sample)
        type_cast_105_sample_completed_ <-& (type_cast_105_Sample)
        type_cast_105_sample_completed_ &-> ($null)
        type_cast_105_update_start_ &-> (type_cast_105_Update)
        type_cast_105_update_completed_ <-& (type_cast_105_Update)
        // Target expression
        // (as target) conv18
        // start: WAR dependencies for conv18
        // done: WAR dependencies for conv18
        // end:  		conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr21
        // done: WAR dependencies for shr21
        // start:  		$volatile shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        //  file prog.linked.opt.aa, line 78
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
        // tmp4
        // Target expression
        // (as target) shr21
        // start: WAR dependencies for shr21
        // done: WAR dependencies for shr21
        // end:  		$volatile shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        // start:  		conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 79
        // Source expression
        // ($cast ($uint<8>) shr21 )
        $T[type_cast_115_sample_start_] 
        $T[type_cast_115_sample_completed_] 
        $T[type_cast_115_update_start_] 
        $T[type_cast_115_update_completed_] 
        // shr21
        // start: Forward dependencies from shr21 to transition type_cast_115_sample_start_
        type_cast_115_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr21 to transition type_cast_115_sample_start_
        ;;[type_cast_115_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_115_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_115_sample_start_ &-> (type_cast_115_Sample)
        type_cast_115_sample_completed_ <-& (type_cast_115_Sample)
        type_cast_115_sample_completed_ &-> ($null)
        type_cast_115_update_start_ &-> (type_cast_115_Update)
        type_cast_115_update_completed_ <-& (type_cast_115_Update)
        // Target expression
        // (as target) conv24
        // start: WAR dependencies for conv24
        // done: WAR dependencies for conv24
        // end:  		conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr27
        // done: WAR dependencies for shr27
        // start:  		$volatile shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        //  file prog.linked.opt.aa, line 80
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
        // tmp4
        // Target expression
        // (as target) shr27
        // start: WAR dependencies for shr27
        // done: WAR dependencies for shr27
        // end:  		$volatile shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        // start:  		conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 81
        // Source expression
        // ($cast ($uint<8>) shr27 )
        $T[type_cast_125_sample_start_] 
        $T[type_cast_125_sample_completed_] 
        $T[type_cast_125_update_start_] 
        $T[type_cast_125_update_completed_] 
        // shr27
        // start: Forward dependencies from shr27 to transition type_cast_125_sample_start_
        type_cast_125_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr27 to transition type_cast_125_sample_start_
        ;;[type_cast_125_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_125_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_125_sample_start_ &-> (type_cast_125_Sample)
        type_cast_125_sample_completed_ <-& (type_cast_125_Sample)
        type_cast_125_sample_completed_ &-> ($null)
        type_cast_125_update_start_ &-> (type_cast_125_Update)
        type_cast_125_update_completed_ <-& (type_cast_125_Update)
        // Target expression
        // (as target) conv30
        // start: WAR dependencies for conv30
        // done: WAR dependencies for conv30
        // end:  		conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr33
        // done: WAR dependencies for shr33
        // start:  		$volatile shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        //  file prog.linked.opt.aa, line 82
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
        // tmp4
        // Target expression
        // (as target) shr33
        // start: WAR dependencies for shr33
        // done: WAR dependencies for shr33
        // end:  		$volatile shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        // start:  		conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 83
        // Source expression
        // ($cast ($uint<8>) shr33 )
        $T[type_cast_135_sample_start_] 
        $T[type_cast_135_sample_completed_] 
        $T[type_cast_135_update_start_] 
        $T[type_cast_135_update_completed_] 
        // shr33
        // start: Forward dependencies from shr33 to transition type_cast_135_sample_start_
        type_cast_135_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr33 to transition type_cast_135_sample_start_
        ;;[type_cast_135_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_135_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_135_sample_start_ &-> (type_cast_135_Sample)
        type_cast_135_sample_completed_ <-& (type_cast_135_Sample)
        type_cast_135_sample_completed_ &-> ($null)
        type_cast_135_update_start_ &-> (type_cast_135_Update)
        type_cast_135_update_completed_ <-& (type_cast_135_Update)
        // Target expression
        // (as target) conv36
        // start: WAR dependencies for conv36
        // done: WAR dependencies for conv36
        // end:  		conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr39
        // done: WAR dependencies for shr39
        // start:  		$volatile shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        //  file prog.linked.opt.aa, line 84
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
        // tmp4
        // Target expression
        // (as target) shr39
        // start: WAR dependencies for shr39
        // done: WAR dependencies for shr39
        // end:  		$volatile shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        // start:  		conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 85
        // Source expression
        // ($cast ($uint<8>) shr39 )
        $T[type_cast_145_sample_start_] 
        $T[type_cast_145_sample_completed_] 
        $T[type_cast_145_update_start_] 
        $T[type_cast_145_update_completed_] 
        // shr39
        // start: Forward dependencies from shr39 to transition type_cast_145_sample_start_
        type_cast_145_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr39 to transition type_cast_145_sample_start_
        ;;[type_cast_145_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_145_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_145_sample_start_ &-> (type_cast_145_Sample)
        type_cast_145_sample_completed_ <-& (type_cast_145_Sample)
        type_cast_145_sample_completed_ &-> ($null)
        type_cast_145_update_start_ &-> (type_cast_145_Update)
        type_cast_145_update_completed_ <-& (type_cast_145_Update)
        // Target expression
        // (as target) conv42
        // start: WAR dependencies for conv42
        // done: WAR dependencies for conv42
        // end:  		conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr45
        // done: WAR dependencies for shr45
        // start:  		$volatile shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        //  file prog.linked.opt.aa, line 86
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
        // tmp4
        // Target expression
        // (as target) shr45
        // start: WAR dependencies for shr45
        // done: WAR dependencies for shr45
        // end:  		$volatile shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        // start:  		conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 87
        // Source expression
        // ($cast ($uint<8>) shr45 )
        $T[type_cast_155_sample_start_] 
        $T[type_cast_155_sample_completed_] 
        $T[type_cast_155_update_start_] 
        $T[type_cast_155_update_completed_] 
        // shr45
        // start: Forward dependencies from shr45 to transition type_cast_155_sample_start_
        type_cast_155_sample_start_ <-& (ptr_deref_81_update_completed_)
        // done: Forward dependencies from shr45 to transition type_cast_155_sample_start_
        ;;[type_cast_155_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_155_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_155_sample_start_ &-> (type_cast_155_Sample)
        type_cast_155_sample_completed_ <-& (type_cast_155_Sample)
        type_cast_155_sample_completed_ &-> ($null)
        type_cast_155_update_start_ &-> (type_cast_155_Update)
        type_cast_155_update_completed_ <-& (type_cast_155_Update)
        // Target expression
        // (as target) conv48
        // start: WAR dependencies for conv48
        // done: WAR dependencies for conv48
        // end:  		conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 88
        // Source expression
        // conv48
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_157_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_157_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_157_update_start_] 
        $T[WPIPE_zeropad_output_pipe_157_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_157_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_157_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_157_sample_start_ &-> (WPIPE_zeropad_output_pipe_157_Sample)
        WPIPE_zeropad_output_pipe_157_sample_completed_ <-& (WPIPE_zeropad_output_pipe_157_Sample)
        WPIPE_zeropad_output_pipe_157_update_start_ <-& (WPIPE_zeropad_output_pipe_157_sample_completed_)
        WPIPE_zeropad_output_pipe_157_update_start_ &-> (WPIPE_zeropad_output_pipe_157_Update)
        WPIPE_zeropad_output_pipe_157_update_completed_ <-& (WPIPE_zeropad_output_pipe_157_Update)
        // start: Forward dependencies from conv48 to transition WPIPE_zeropad_output_pipe_157_sample_start_
        WPIPE_zeropad_output_pipe_157_sample_start_ <-& (type_cast_155_update_completed_)
        // done: Forward dependencies from conv48 to transition WPIPE_zeropad_output_pipe_157_sample_start_
        // end:  		zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 89
        // Source expression
        // conv42
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_160_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_160_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_160_update_start_] 
        $T[WPIPE_zeropad_output_pipe_160_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_160_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_160_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_160_sample_start_ &-> (WPIPE_zeropad_output_pipe_160_Sample)
        WPIPE_zeropad_output_pipe_160_sample_completed_ <-& (WPIPE_zeropad_output_pipe_160_Sample)
        WPIPE_zeropad_output_pipe_160_update_start_ <-& (WPIPE_zeropad_output_pipe_160_sample_completed_)
        WPIPE_zeropad_output_pipe_160_update_start_ &-> (WPIPE_zeropad_output_pipe_160_Update)
        WPIPE_zeropad_output_pipe_160_update_completed_ <-& (WPIPE_zeropad_output_pipe_160_Update)
        // start: Forward dependencies from conv42 to transition WPIPE_zeropad_output_pipe_160_sample_start_
        WPIPE_zeropad_output_pipe_160_sample_start_ <-& (type_cast_145_update_completed_)
        // done: Forward dependencies from conv42 to transition WPIPE_zeropad_output_pipe_160_sample_start_
        // end:  		zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 90
        // Source expression
        // conv36
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_163_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_163_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_163_update_start_] 
        $T[WPIPE_zeropad_output_pipe_163_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_163_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_163_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_163_sample_start_ &-> (WPIPE_zeropad_output_pipe_163_Sample)
        WPIPE_zeropad_output_pipe_163_sample_completed_ <-& (WPIPE_zeropad_output_pipe_163_Sample)
        WPIPE_zeropad_output_pipe_163_update_start_ <-& (WPIPE_zeropad_output_pipe_163_sample_completed_)
        WPIPE_zeropad_output_pipe_163_update_start_ &-> (WPIPE_zeropad_output_pipe_163_Update)
        WPIPE_zeropad_output_pipe_163_update_completed_ <-& (WPIPE_zeropad_output_pipe_163_Update)
        // start: Forward dependencies from conv36 to transition WPIPE_zeropad_output_pipe_163_sample_start_
        WPIPE_zeropad_output_pipe_163_sample_start_ <-& (type_cast_135_update_completed_)
        // done: Forward dependencies from conv36 to transition WPIPE_zeropad_output_pipe_163_sample_start_
        // end:  		zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 91
        // Source expression
        // conv30
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_166_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_166_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_166_update_start_] 
        $T[WPIPE_zeropad_output_pipe_166_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_166_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_166_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_166_sample_start_ &-> (WPIPE_zeropad_output_pipe_166_Sample)
        WPIPE_zeropad_output_pipe_166_sample_completed_ <-& (WPIPE_zeropad_output_pipe_166_Sample)
        WPIPE_zeropad_output_pipe_166_update_start_ <-& (WPIPE_zeropad_output_pipe_166_sample_completed_)
        WPIPE_zeropad_output_pipe_166_update_start_ &-> (WPIPE_zeropad_output_pipe_166_Update)
        WPIPE_zeropad_output_pipe_166_update_completed_ <-& (WPIPE_zeropad_output_pipe_166_Update)
        // start: Forward dependencies from conv30 to transition WPIPE_zeropad_output_pipe_166_sample_start_
        WPIPE_zeropad_output_pipe_166_sample_start_ <-& (type_cast_125_update_completed_)
        // done: Forward dependencies from conv30 to transition WPIPE_zeropad_output_pipe_166_sample_start_
        // end:  		zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 92
        // Source expression
        // conv24
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_169_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_169_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_169_update_start_] 
        $T[WPIPE_zeropad_output_pipe_169_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_169_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_169_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_169_sample_start_ &-> (WPIPE_zeropad_output_pipe_169_Sample)
        WPIPE_zeropad_output_pipe_169_sample_completed_ <-& (WPIPE_zeropad_output_pipe_169_Sample)
        WPIPE_zeropad_output_pipe_169_update_start_ <-& (WPIPE_zeropad_output_pipe_169_sample_completed_)
        WPIPE_zeropad_output_pipe_169_update_start_ &-> (WPIPE_zeropad_output_pipe_169_Update)
        WPIPE_zeropad_output_pipe_169_update_completed_ <-& (WPIPE_zeropad_output_pipe_169_Update)
        // start: Forward dependencies from conv24 to transition WPIPE_zeropad_output_pipe_169_sample_start_
        WPIPE_zeropad_output_pipe_169_sample_start_ <-& (type_cast_115_update_completed_)
        // done: Forward dependencies from conv24 to transition WPIPE_zeropad_output_pipe_169_sample_start_
        // end:  		zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 93
        // Source expression
        // conv18
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_172_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_172_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_172_update_start_] 
        $T[WPIPE_zeropad_output_pipe_172_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_172_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_172_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_172_sample_start_ &-> (WPIPE_zeropad_output_pipe_172_Sample)
        WPIPE_zeropad_output_pipe_172_sample_completed_ <-& (WPIPE_zeropad_output_pipe_172_Sample)
        WPIPE_zeropad_output_pipe_172_update_start_ <-& (WPIPE_zeropad_output_pipe_172_sample_completed_)
        WPIPE_zeropad_output_pipe_172_update_start_ &-> (WPIPE_zeropad_output_pipe_172_Update)
        WPIPE_zeropad_output_pipe_172_update_completed_ <-& (WPIPE_zeropad_output_pipe_172_Update)
        // start: Forward dependencies from conv18 to transition WPIPE_zeropad_output_pipe_172_sample_start_
        WPIPE_zeropad_output_pipe_172_sample_start_ <-& (type_cast_105_update_completed_)
        // done: Forward dependencies from conv18 to transition WPIPE_zeropad_output_pipe_172_sample_start_
        // end:  		zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 94
        // Source expression
        // conv12
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_175_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_175_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_175_update_start_] 
        $T[WPIPE_zeropad_output_pipe_175_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_175_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_175_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_175_sample_start_ &-> (WPIPE_zeropad_output_pipe_175_Sample)
        WPIPE_zeropad_output_pipe_175_sample_completed_ <-& (WPIPE_zeropad_output_pipe_175_Sample)
        WPIPE_zeropad_output_pipe_175_update_start_ <-& (WPIPE_zeropad_output_pipe_175_sample_completed_)
        WPIPE_zeropad_output_pipe_175_update_start_ &-> (WPIPE_zeropad_output_pipe_175_Update)
        WPIPE_zeropad_output_pipe_175_update_completed_ <-& (WPIPE_zeropad_output_pipe_175_Update)
        // start: Forward dependencies from conv12 to transition WPIPE_zeropad_output_pipe_175_sample_start_
        WPIPE_zeropad_output_pipe_175_sample_start_ <-& (type_cast_95_update_completed_)
        // done: Forward dependencies from conv12 to transition WPIPE_zeropad_output_pipe_175_sample_start_
        // end:  		zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 95
        // Source expression
        // conv
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_178_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_178_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_178_update_start_] 
        $T[WPIPE_zeropad_output_pipe_178_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_178_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_178_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_178_sample_start_ &-> (WPIPE_zeropad_output_pipe_178_Sample)
        WPIPE_zeropad_output_pipe_178_sample_completed_ <-& (WPIPE_zeropad_output_pipe_178_Sample)
        WPIPE_zeropad_output_pipe_178_update_start_ <-& (WPIPE_zeropad_output_pipe_178_sample_completed_)
        WPIPE_zeropad_output_pipe_178_update_start_ &-> (WPIPE_zeropad_output_pipe_178_Update)
        WPIPE_zeropad_output_pipe_178_update_completed_ <-& (WPIPE_zeropad_output_pipe_178_Update)
        // start: Forward dependencies from conv to transition WPIPE_zeropad_output_pipe_178_sample_start_
        WPIPE_zeropad_output_pipe_178_sample_start_ <-& (type_cast_85_update_completed_)
        // done: Forward dependencies from conv to transition WPIPE_zeropad_output_pipe_178_sample_start_
        // end:  		zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // start:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 96
        // volatile! 
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // end:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond2
        // ignored out-of-scope w_root 		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond2
        // start:  		$volatile exitcond2 := (indvarx_xnext == tmp1) $buffering 1
        //  file prog.linked.opt.aa, line 97
        // volatile! 
        // Source expression
        // (indvarx_xnext == tmp1)
        // indvarx_xnext
        // tmp1
        // Target expression
        // (as target) exitcond2
        // start: WAR dependencies for exitcond2
        // ignored out-of-scope w_root 		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond2
        // end:  		$volatile exitcond2 := (indvarx_xnext == tmp1) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_0
        //  ptr_deref_81 load
        // pipe read/write dependencies for pipe zeropad_output_pipe
        // read-dependencies for pipe zeropad_output_pipe
        // write-dependencies for pipe zeropad_output_pipe
        WPIPE_zeropad_output_pipe_160_sample_start_ <-& (WPIPE_zeropad_output_pipe_157_update_completed_)
        WPIPE_zeropad_output_pipe_163_sample_start_ <-& (WPIPE_zeropad_output_pipe_160_update_completed_)
        WPIPE_zeropad_output_pipe_166_sample_start_ <-& (WPIPE_zeropad_output_pipe_163_update_completed_)
        WPIPE_zeropad_output_pipe_169_sample_start_ <-& (WPIPE_zeropad_output_pipe_166_update_completed_)
        WPIPE_zeropad_output_pipe_172_sample_start_ <-& (WPIPE_zeropad_output_pipe_169_update_completed_)
        WPIPE_zeropad_output_pipe_175_sample_start_ <-& (WPIPE_zeropad_output_pipe_172_update_completed_)
        WPIPE_zeropad_output_pipe_178_sample_start_ <-& (WPIPE_zeropad_output_pipe_175_update_completed_)
        // signal write dependencies for zeropad_output_pipe
      }
      assign_stmt_78_to_assign_stmt_191__entry__ |-> (assign_stmt_78_to_assign_stmt_191)
      assign_stmt_78_to_assign_stmt_191__exit__ <-| (assign_stmt_78_to_assign_stmt_191)
      // if-statement  
      //  file prog.linked.opt.aa, line 98
      ;;[if_stmt_192_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_192__entry__ |-> (if_stmt_192_dead_link)
      if_stmt_192__exit__ <-| (if_stmt_192_dead_link)
      ;;[if_stmt_192_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_192__entry__ |-> (if_stmt_192_eval_test)
      $P [R_exitcond2_193_place]
      R_exitcond2_193_place <-| (if_stmt_192_eval_test)
      ;;[if_stmt_192_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_192_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond2_193_place |-> (if_stmt_192_if_link if_stmt_192_else_link)
      $P [forx_xbody_forx_xendx_xloopexit]
      forx_xbody_forx_xendx_xloopexit <-| (if_stmt_192_if_link)
      $P [forx_xbody_forx_xbody]
      forx_xbody_forx_xbody <-| (if_stmt_192_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 63
      ;;[merge_stmt_57_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_57__entry__ |-> (merge_stmt_57_dead_link)
      merge_stmt_57__exit__ <-| (merge_stmt_57_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 63  --------------------------
      ||[entry_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_bbx_xnph |-> (entry_bbx_xnph_PhiReq)
      $P [merge_stmt_57_PhiReqMerge] 
      merge_stmt_57_PhiReqMerge <-| ( entry_bbx_xnph_PhiReq )
      ||[merge_stmt_57_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_57_PhiReqMerge |-> (merge_stmt_57_PhiAck)
      merge_stmt_57__exit__  <-| (merge_stmt_57_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 63  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 67
      //---------------------   merge statement  file prog.linked.opt.aa, line 67  --------------------------
      ||[bbx_xnph_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_64] 
        {
          ||[phi_stmt_64_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_68_konst_delay_trans] $delay
          }
          $T [phi_stmt_64_req] 
        }
      }
      bbx_xnph_forx_xbody |-> (bbx_xnph_forx_xbody_PhiReq)
      ||[forx_xbody_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_64] 
        {
          ||[phi_stmt_64_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_70] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_64_req] 
        }
      }
      forx_xbody_forx_xbody |-> (forx_xbody_forx_xbody_PhiReq)
      $P [merge_stmt_63_PhiReqMerge] 
      merge_stmt_63_PhiReqMerge <-| ( bbx_xnph_forx_xbody_PhiReq  forx_xbody_forx_xbody_PhiReq )
      ||[merge_stmt_63_PhiAck] 
      {
        $T [phi_stmt_64_ack] 
      }
      merge_stmt_63_PhiReqMerge |-> (merge_stmt_63_PhiAck)
      merge_stmt_63__exit__  <-| (merge_stmt_63_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 67  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 103
      ;;[merge_stmt_198_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_198__entry__ |-> (merge_stmt_198_dead_link)
      merge_stmt_198__exit__ <-| (merge_stmt_198_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 103  --------------------------
      ||[forx_xbody_forx_xendx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody_forx_xendx_xloopexit |-> (forx_xbody_forx_xendx_xloopexit_PhiReq)
      $P [merge_stmt_198_PhiReqMerge] 
      merge_stmt_198_PhiReqMerge <-| ( forx_xbody_forx_xendx_xloopexit_PhiReq )
      ||[merge_stmt_198_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_198_PhiReqMerge |-> (merge_stmt_198_PhiAck)
      merge_stmt_198__exit__  <-| (merge_stmt_198_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 103  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 106
      //---------------------   merge statement  file prog.linked.opt.aa, line 106  --------------------------
      ||[entry_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_forx_xend |-> (entry_forx_xend_PhiReq)
      ||[forx_xendx_xloopexit_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xendx_xloopexit_forx_xend |-> (forx_xendx_xloopexit_forx_xend_PhiReq)
      $P [merge_stmt_200_PhiReqMerge] 
      merge_stmt_200_PhiReqMerge <-| ( entry_forx_xend_PhiReq  forx_xendx_xloopexit_forx_xend_PhiReq )
      ||[merge_stmt_200_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_200_PhiReqMerge |-> (merge_stmt_200_PhiAck)
      merge_stmt_200__exit__  <-| (merge_stmt_200_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 106  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 109
      //---------------------   merge statement  file prog.linked.opt.aa, line 109  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_202_PhiReqMerge] 
      merge_stmt_202_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_202_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_202_PhiReqMerge |-> (merge_stmt_202_PhiAck)
      merge_stmt_202__exit__  <-| (merge_stmt_202_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 109  --------------------------
      assign_stmt_41_to_assign_stmt_50__entry__ <-| (branch_block_stmt_31__entry__)
      if_stmt_51__entry__ <-| (assign_stmt_41_to_assign_stmt_50__exit__)
      merge_stmt_57__entry__ <-| (if_stmt_51__exit__)
      assign_stmt_61__entry__ <-| (merge_stmt_57__exit__)
      bbx_xnph_forx_xbody <-| (assign_stmt_61__exit__)
      assign_stmt_78_to_assign_stmt_191__entry__ <-| (merge_stmt_63__exit__)
      if_stmt_192__entry__ <-| (assign_stmt_78_to_assign_stmt_191__exit__)
      merge_stmt_198__entry__ <-| (if_stmt_192__exit__)
      forx_xendx_xloopexit_forx_xend <-| (merge_stmt_198__exit__)
      return__ <-| (merge_stmt_200__exit__)
      merge_stmt_202__exit__ |-> (branch_block_stmt_31__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 63
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 67
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 103
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 106
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 109
    // constant-object-declarations for block %sendOutput%body
    //  file prog.linked.opt.aa, line 54
    // constant-object-declarations for block %sendOutput
    //  file prog.linked.opt.aa, line 49
    // constant-declarations for block %sendOutput%body
    //  file prog.linked.opt.aa, line 54
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_38_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_47_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 58
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 63
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 67
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 68
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_68_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $constant $W[array_obj_ref_76_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_76_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_76_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_76_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx)
    $constant $W[ptr_deref_81_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_90_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_100_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )
    $constant $W[type_cast_110_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011000// 24
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )
    $constant $W[type_cast_120_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000100000// 32
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )
    $constant $W[type_cast_130_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000101000// 40
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )
    $constant $W[type_cast_140_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000110000// 48
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )
    $constant $W[type_cast_150_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111000// 56
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_184_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 98
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 103
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 106
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 109
    // block %sendOutput%body
    //  file prog.linked.opt.aa, line 54
    // 		$volatile shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 56
    // ($bitcast ($int<32>) size )
    $intermediate $W[type_cast_35_wire] : $int<32>
    // (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_39_wire] : $int<32>
    // shr67
    $W[shr67_41] : $int<32>
    // 		$volatile cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1
    //  file prog.linked.opt.aa, line 57
    // ($bitcast ($int<32>) shr67 )
    $intermediate $W[type_cast_44_wire] : $int<32>
    // cmp68
    $W[cmp68_50] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 58
    // 		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 65
    // tmp1
    $W[tmp1_61] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 67
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 68
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_70_wire] : $int<64>
    // indvar
    $W[indvar_64] : $int<64>
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 71
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $intermediate $W[R_indvar_75_resized] : $int<14>
    $intermediate $W[R_indvar_75_scaled] : $int<14>
    $intermediate $W[array_obj_ref_76_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_76_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_78] : $int<32>
    // 		tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 72
    // ->(arrayidx)
    $intermediate $W[ptr_deref_81_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_81_root_address] : $int<14>
    $W[ptr_deref_81_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_81_data_0] : $int<64>
    // tmp4
    $W[tmp4_82] : $int<64>
    // 		conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 73
    // conv
    $W[conv_86] : $int<8>
    // 		$volatile shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 74
    // shr9
    $W[shr9_92] : $int<64>
    // 		conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 75
    // conv12
    $W[conv12_96] : $int<8>
    // 		$volatile shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 76
    // shr15
    $W[shr15_102] : $int<64>
    // 		conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 77
    // conv18
    $W[conv18_106] : $int<8>
    // 		$volatile shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // shr21
    $W[shr21_112] : $int<64>
    // 		conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // conv24
    $W[conv24_116] : $int<8>
    // 		$volatile shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 80
    // shr27
    $W[shr27_122] : $int<64>
    // 		conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 81
    // conv30
    $W[conv30_126] : $int<8>
    // 		$volatile shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 82
    // shr33
    $W[shr33_132] : $int<64>
    // 		conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 83
    // conv36
    $W[conv36_136] : $int<8>
    // 		$volatile shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // shr39
    $W[shr39_142] : $int<64>
    // 		conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 85
    // conv42
    $W[conv42_146] : $int<8>
    // 		$volatile shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // shr45
    $W[shr45_152] : $int<64>
    // 		conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 87
    // conv48
    $W[conv48_156] : $int<8>
    // 		zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 88
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 89
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 90
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 91
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 92
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 93
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 94
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 95
    // zeropad_output_pipe
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 96
    // indvarx_xnext
    $W[indvarx_xnext_186] : $int<64>
    // 		$volatile exitcond2 := (indvarx_xnext == tmp1) $buffering 1
    //  file prog.linked.opt.aa, line 97
    // exitcond2
    $W[exitcond2_191] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 98
    // datapath-instances for block %sendOutput%body
    //  file prog.linked.opt.aa, line 54
    // 		$volatile shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 56
    // ($bitcast ($int<32>) size )
    # := [type_cast_35_inst] (size) (type_cast_35_wire)   $flowthrough
    $delay type_cast_35_inst 0
    // (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_39_inst] (type_cast_35_wire type_cast_38_wire_constant) (ASHR_i32_i32_39_wire)   $flowthrough 
    $delay ASHR_i32_i32_39_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_40_inst] (ASHR_i32_i32_39_wire) (shr67_41)   $flowthrough
    $delay type_cast_40_inst 0
    // 		$volatile cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1
    //  file prog.linked.opt.aa, line 57
    // ($bitcast ($int<32>) shr67 )
    # := [type_cast_44_inst] (shr67_41) (type_cast_44_wire)   $flowthrough
    $delay type_cast_44_inst 0
    // (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $S>$S[SGT_i32_u1_48_inst] (type_cast_44_wire type_cast_47_wire_constant) (cmp68_50)   $flowthrough 
    $delay SGT_i32_u1_48_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 58
    ==0? [if_stmt_51_branch] (cmp68_50)
    // 		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 65
    // ($cast ($uint<64>) shr67 )
    # := [type_cast_60_inst] (shr67_41) (tmp1_61)    
    $buffering  $out type_cast_60_inst tmp1_61 1
    $delay type_cast_60_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 67
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 68
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_70_inst] (indvarx_xnext_186) (type_cast_70_wire)    
    $buffering  $out type_cast_70_inst type_cast_70_wire 1
    $delay type_cast_70_inst 1
    $phi [phi_stmt_64] (type_cast_68_wire_constant type_cast_70_wire) ( indvar_64 ) 
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 71
    &/ [array_obj_ref_76_index_1_resize] (indvar_64) (R_indvar_75_resized) 
    $flowthrough 
    &/ [array_obj_ref_76_index_1_rename] (R_indvar_75_resized) (R_indvar_75_scaled) 
    $flowthrough 
    +[array_obj_ref_76_index_offset] (R_indvar_75_scaled array_obj_ref_76_constant_part_of_offset) (array_obj_ref_76_final_offset)   
    $delay array_obj_ref_76_index_offset 2
    &/ [array_obj_ref_76_root_address_inst] (array_obj_ref_76_final_offset) (array_obj_ref_76_root_address) 
    $flowthrough 
    # := [addr_of_77_final_reg] (array_obj_ref_76_root_address) (arrayidx_78)    
    $buffering  $out addr_of_77_final_reg arrayidx_78 1
    // 		tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 72
    // ->(arrayidx)
    &/ [ptr_deref_81_base_resize] (arrayidx_78) (ptr_deref_81_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_81_root_address_inst] (ptr_deref_81_resized_base_address) (ptr_deref_81_root_address) 
    $flowthrough 
    &/ [ptr_deref_81_addr_0] (ptr_deref_81_root_address) (ptr_deref_81_word_address_0) 
    $flowthrough 
    $load [ptr_deref_81_load_0] $from memory_space_0 (ptr_deref_81_word_address_0) (ptr_deref_81_data_0) 
    $delay ptr_deref_81_load_0 6
    &/ [ptr_deref_81_gather_scatter] (ptr_deref_81_data_0) (tmp4_82) 
    $flowthrough 
    // 		conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 73
    // ($cast ($uint<8>) tmp4 )
    # := [type_cast_85_inst] (tmp4_82) (conv_86)    
    $buffering  $out type_cast_85_inst conv_86 1
    $delay type_cast_85_inst 1
    // 		$volatile shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 74
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    >>[LSHR_u64_u64_91_inst] (tmp4_82 type_cast_90_wire_constant) (shr9_92)   $flowthrough 
    $delay LSHR_u64_u64_91_inst 0
    // 		conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 75
    // ($cast ($uint<8>) shr9 )
    # := [type_cast_95_inst] (shr9_92) (conv12_96)    
    $buffering  $out type_cast_95_inst conv12_96 1
    $delay type_cast_95_inst 1
    // 		$volatile shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 76
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >>[LSHR_u64_u64_101_inst] (tmp4_82 type_cast_100_wire_constant) (shr15_102)   $flowthrough 
    $delay LSHR_u64_u64_101_inst 0
    // 		conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 77
    // ($cast ($uint<8>) shr15 )
    # := [type_cast_105_inst] (shr15_102) (conv18_106)    
    $buffering  $out type_cast_105_inst conv18_106 1
    $delay type_cast_105_inst 1
    // 		$volatile shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
    >>[LSHR_u64_u64_111_inst] (tmp4_82 type_cast_110_wire_constant) (shr21_112)   $flowthrough 
    $delay LSHR_u64_u64_111_inst 0
    // 		conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // ($cast ($uint<8>) shr21 )
    # := [type_cast_115_inst] (shr21_112) (conv24_116)    
    $buffering  $out type_cast_115_inst conv24_116 1
    $delay type_cast_115_inst 1
    // 		$volatile shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 80
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
    >>[LSHR_u64_u64_121_inst] (tmp4_82 type_cast_120_wire_constant) (shr27_122)   $flowthrough 
    $delay LSHR_u64_u64_121_inst 0
    // 		conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 81
    // ($cast ($uint<8>) shr27 )
    # := [type_cast_125_inst] (shr27_122) (conv30_126)    
    $buffering  $out type_cast_125_inst conv30_126 1
    $delay type_cast_125_inst 1
    // 		$volatile shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 82
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
    >>[LSHR_u64_u64_131_inst] (tmp4_82 type_cast_130_wire_constant) (shr33_132)   $flowthrough 
    $delay LSHR_u64_u64_131_inst 0
    // 		conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 83
    // ($cast ($uint<8>) shr33 )
    # := [type_cast_135_inst] (shr33_132) (conv36_136)    
    $buffering  $out type_cast_135_inst conv36_136 1
    $delay type_cast_135_inst 1
    // 		$volatile shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
    >>[LSHR_u64_u64_141_inst] (tmp4_82 type_cast_140_wire_constant) (shr39_142)   $flowthrough 
    $delay LSHR_u64_u64_141_inst 0
    // 		conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 85
    // ($cast ($uint<8>) shr39 )
    # := [type_cast_145_inst] (shr39_142) (conv42_146)    
    $buffering  $out type_cast_145_inst conv42_146 1
    $delay type_cast_145_inst 1
    // 		$volatile shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
    >>[LSHR_u64_u64_151_inst] (tmp4_82 type_cast_150_wire_constant) (shr45_152)   $flowthrough 
    $delay LSHR_u64_u64_151_inst 0
    // 		conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 87
    // ($cast ($uint<8>) shr45 )
    # := [type_cast_155_inst] (shr45_152) (conv48_156)    
    $buffering  $out type_cast_155_inst conv48_156 1
    $delay type_cast_155_inst 1
    // 		zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 88
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_157_inst]  (conv48_156) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 89
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_160_inst]  (conv42_146) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 90
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_163_inst]  (conv36_136) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 91
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_166_inst]  (conv30_126) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 92
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_169_inst]  (conv24_116) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 93
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_172_inst]  (conv18_106) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 94
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_175_inst]  (conv12_96) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 95
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_178_inst]  (conv_86) (zeropad_output_pipe) 
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 96
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_185_inst] (indvar_64 type_cast_184_wire_constant) (indvarx_xnext_186)   $flowthrough 
    $delay ADD_u64_u64_185_inst 0
    // 		$volatile exitcond2 := (indvarx_xnext == tmp1) $buffering 1
    //  file prog.linked.opt.aa, line 97
    // (indvarx_xnext == tmp1)
    ==[EQ_u64_u1_190_inst] (indvarx_xnext_186 tmp1_61) (exitcond2_191)   $flowthrough 
    $delay EQ_u64_u1_190_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 98
    ==0? [if_stmt_192_branch] (exitcond2_191)
  }
  // end data-path
  // 		$volatile shr67 := ($bitcast ($uint<32>) (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 56
  // (($bitcast ($int<32>) size ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // size
  // 		$volatile cmp68 := (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )) $buffering 1
  //  file prog.linked.opt.aa, line 57
  // (($bitcast ($int<32>) shr67 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // shr67
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 58
  if_stmt_51_branch <=> (branch_block_stmt_31/if_stmt_51_eval_test/branch_req) (branch_block_stmt_31/if_stmt_51_else_link/else_choice_transition branch_block_stmt_31/if_stmt_51_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 63
  // 		tmp1 := ($cast ($uint<64>) shr67 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 65
  // shr67
  // ($cast ($uint<64>) shr67 )
  type_cast_60_inst <=> (branch_block_stmt_31/assign_stmt_61/type_cast_60_Sample/rr branch_block_stmt_31/assign_stmt_61/type_cast_60_Update/cr) (branch_block_stmt_31/assign_stmt_61/type_cast_60_Sample/ra branch_block_stmt_31/assign_stmt_61/type_cast_60_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 67
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_70_inst <=> (branch_block_stmt_31/forx_xbody_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_sources/type_cast_70/SplitProtocol/Sample/rr branch_block_stmt_31/forx_xbody_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_sources/type_cast_70/SplitProtocol/Update/cr) (branch_block_stmt_31/forx_xbody_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_sources/type_cast_70/SplitProtocol/Sample/ra branch_block_stmt_31/forx_xbody_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_sources/type_cast_70/SplitProtocol/Update/ca)
  phi_stmt_64 <=> (branch_block_stmt_31/bbx_xnph_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_req branch_block_stmt_31/forx_xbody_forx_xbody_PhiReq/phi_stmt_64/phi_stmt_64_req) (branch_block_stmt_31/merge_stmt_63_PhiAck/phi_stmt_64_ack)
  // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 71
  // indvar
  array_obj_ref_76_index_1_resize <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_index_resize_1/index_resize_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_index_resize_1/index_resize_ack)
  array_obj_ref_76_index_1_rename <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_index_scale_1/scale_rename_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_index_scale_1/scale_rename_ack)
  array_obj_ref_76_index_offset <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_final_index_sum_regn_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_final_index_sum_regn_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_final_index_sum_regn_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_final_index_sum_regn_Update/ack)
  array_obj_ref_76_root_address_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_base_plus_offset/sum_rename_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/array_obj_ref_76_base_plus_offset/sum_rename_ack)
  addr_of_77_final_reg <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/addr_of_77_request/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/addr_of_77_complete/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/addr_of_77_request/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/addr_of_77_complete/ack)
  // 		tmp4 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 72
  // arrayidx
  ptr_deref_81_base_resize <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_base_addr_resize/base_resize_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_base_addr_resize/base_resize_ack)
  ptr_deref_81_root_address_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_base_plus_offset/sum_rename_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_base_plus_offset/sum_rename_ack)
  ptr_deref_81_addr_0 <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_word_addrgen/root_register_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_word_addrgen/root_register_ack)
  ptr_deref_81_gather_scatter <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Update/ptr_deref_81_Merge/merge_req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Update/ptr_deref_81_Merge/merge_ack)
  ptr_deref_81_load_0 <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Sample/word_access_start/word_0/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Update/word_access_complete/word_0/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Sample/word_access_start/word_0/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/ptr_deref_81_Update/word_access_complete/word_0/ca)
  // 		conv := ($cast ($uint<8>) tmp4 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 73
  // tmp4
  // ($cast ($uint<8>) tmp4 )
  type_cast_85_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_85_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_85_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_85_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_85_Update/ca)
  // 		$volatile shr9 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 74
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // tmp4
  // 		conv12 := ($cast ($uint<8>) shr9 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 75
  // shr9
  // ($cast ($uint<8>) shr9 )
  type_cast_95_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_95_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_95_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_95_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_95_Update/ca)
  // 		$volatile shr15 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 76
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  // tmp4
  // 		conv18 := ($cast ($uint<8>) shr15 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 77
  // shr15
  // ($cast ($uint<8>) shr15 )
  type_cast_105_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_105_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_105_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_105_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_105_Update/ca)
  // 		$volatile shr21 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
  //  file prog.linked.opt.aa, line 78
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
  // tmp4
  // 		conv24 := ($cast ($uint<8>) shr21 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 79
  // shr21
  // ($cast ($uint<8>) shr21 )
  type_cast_115_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_115_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_115_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_115_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_115_Update/ca)
  // 		$volatile shr27 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
  //  file prog.linked.opt.aa, line 80
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
  // tmp4
  // 		conv30 := ($cast ($uint<8>) shr27 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 81
  // shr27
  // ($cast ($uint<8>) shr27 )
  type_cast_125_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_125_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_125_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_125_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_125_Update/ca)
  // 		$volatile shr33 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
  //  file prog.linked.opt.aa, line 82
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
  // tmp4
  // 		conv36 := ($cast ($uint<8>) shr33 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 83
  // shr33
  // ($cast ($uint<8>) shr33 )
  type_cast_135_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_135_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_135_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_135_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_135_Update/ca)
  // 		$volatile shr39 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
  //  file prog.linked.opt.aa, line 84
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
  // tmp4
  // 		conv42 := ($cast ($uint<8>) shr39 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 85
  // shr39
  // ($cast ($uint<8>) shr39 )
  type_cast_145_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_145_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_145_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_145_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_145_Update/ca)
  // 		$volatile shr45 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
  //  file prog.linked.opt.aa, line 86
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
  // tmp4
  // 		conv48 := ($cast ($uint<8>) shr45 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 87
  // shr45
  // ($cast ($uint<8>) shr45 )
  type_cast_155_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_155_Sample/rr branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_155_Update/cr) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_155_Sample/ra branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/type_cast_155_Update/ca)
  // 		zeropad_output_pipe := conv48 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 88
  // conv48
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_157_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_157_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_157_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_157_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_157_Update/ack)
  // 		zeropad_output_pipe := conv42 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 89
  // conv42
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_160_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_160_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_160_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_160_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_160_Update/ack)
  // 		zeropad_output_pipe := conv36 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 90
  // conv36
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_163_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_163_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_163_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_163_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_163_Update/ack)
  // 		zeropad_output_pipe := conv30 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 91
  // conv30
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_166_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_166_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_166_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_166_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_166_Update/ack)
  // 		zeropad_output_pipe := conv24 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 92
  // conv24
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_169_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_169_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_169_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_169_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_169_Update/ack)
  // 		zeropad_output_pipe := conv18 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 93
  // conv18
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_172_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_172_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_172_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_172_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_172_Update/ack)
  // 		zeropad_output_pipe := conv12 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 94
  // conv12
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_175_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_175_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_175_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_175_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_175_Update/ack)
  // 		zeropad_output_pipe := conv $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 95
  // conv
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_178_inst <=> (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_178_Sample/req branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_178_Update/req) (branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_178_Sample/ack branch_block_stmt_31/assign_stmt_78_to_assign_stmt_191/WPIPE_zeropad_output_pipe_178_Update/ack)
  // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 96
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  // 		$volatile exitcond2 := (indvarx_xnext == tmp1) $buffering 1
  //  file prog.linked.opt.aa, line 97
  // (indvarx_xnext == tmp1)
  // indvarx_xnext
  // tmp1
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 98
  if_stmt_192_branch <=> (branch_block_stmt_31/if_stmt_192_eval_test/branch_req) (branch_block_stmt_31/if_stmt_192_else_link/else_choice_transition branch_block_stmt_31/if_stmt_192_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 103
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 106
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 109
}
$module [timer] 
{
  $out c:$int<64>
  // can point into 
  // pipe-declarations for block %timer
  //  file prog.linked.opt.aa, line 113
  // memory-space 2 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_209] 
    {
      // start:  	c := count $buffering 1// bits of buffering = 64. 
      //  file prog.linked.opt.aa, line 118
      // Source expression
      // count
      $T[LOAD_count_208_sample_start_] 
      $T[LOAD_count_208_sample_completed_] 
      $T[LOAD_count_208_update_start_] 
      $T[LOAD_count_208_update_completed_] 
      $T[LOAD_count_208_word_address_calculated] 
      $T[LOAD_count_208_root_address_calculated] 
      LOAD_count_208_word_address_calculated <-& (LOAD_count_208_root_address_calculated)
      ;;[LOAD_count_208_Sample] 
      {
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[LOAD_count_208_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        ;;[LOAD_count_208_Merge] 
        {
          $T [merge_req] $T [merge_ack]
        }
      }
      LOAD_count_208_sample_start_ <-& (LOAD_count_208_word_address_calculated)
      LOAD_count_208_sample_start_ &-> (LOAD_count_208_Sample)
      LOAD_count_208_sample_completed_ <-& (LOAD_count_208_Sample)
      LOAD_count_208_sample_completed_ &-> ($null)
      LOAD_count_208_update_start_ &-> (LOAD_count_208_Update)
      LOAD_count_208_update_completed_ <-& (LOAD_count_208_Update)
      // Target expression
      // (as target) c
      // c
      // write to interface object
      // start: WAR dependencies for c
      // done: WAR dependencies for c
      // c
      // write to interface object
      // end:  	c := count $buffering 1// bits of buffering = 64. 
      // load-store dependencies..
      // memory-space  memory_space_2
      //  LOAD_count_208 load
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %timer
    //  file prog.linked.opt.aa, line 113
    // count
    $constant $W[LOAD_count_208_word_address_0] : $pointer<memory_space_2> := _b0
    // 	c := count $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 118
    // count
    $W[LOAD_count_208_data_0] : $int<64>
    // c
    // 	c := count $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 118
    // count
    $load [LOAD_count_208_load_0] $from memory_space_2 (LOAD_count_208_word_address_0) (LOAD_count_208_data_0) 
    $delay LOAD_count_208_load_0 4
    &/ [LOAD_count_208_gather_scatter] (LOAD_count_208_data_0) (c) 
    $flowthrough 
  }
  // end data-path
  // 	c := count $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 118
  // count
  LOAD_count_208_gather_scatter <=> (assign_stmt_209/LOAD_count_208_Update/LOAD_count_208_Merge/merge_req) (assign_stmt_209/LOAD_count_208_Update/LOAD_count_208_Merge/merge_ack)
  LOAD_count_208_load_0 <=> (assign_stmt_209/LOAD_count_208_Sample/word_access_start/word_0/rr assign_stmt_209/LOAD_count_208_Update/word_access_complete/word_0/cr) (assign_stmt_209/LOAD_count_208_Sample/word_access_start/word_0/ra assign_stmt_209/LOAD_count_208_Update/word_access_complete/word_0/ca)
}
$module [timerDaemon] 
{
  // pipe-declarations for block %timerDaemon
  //  file prog.linked.opt.aa, line 120
  // pipe-declarations for block %timerDaemon%body
  //  file prog.linked.opt.aa, line 125
  // memory-space 2 is written into.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_212] // Branch Block  file prog.linked.opt.aa, line 125
    {
      $P [branch_block_stmt_212__entry__]
      branch_block_stmt_212__entry__ <-| ($entry)
      $P [branch_block_stmt_212__exit__]
      branch_block_stmt_212__exit__ |-> ($exit)
      $P [do_while_stmt_213__entry__] 
      $P [do_while_stmt_213__exit__] 
      // do-while-statement  
      //  file prog.linked.opt.aa, line 127
      <o> [do_while_stmt_213]  $depth 3 $buffering 1 
      {
        $P[do_while_stmt_213__entry__] 
        $P[do_while_stmt_213__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_213_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_215
          // 			$phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
          // type of target is $uint<64>
          $T[phi_stmt_215_sample_start_] 
          $T[phi_stmt_215_sample_completed_] 
          $T[phi_stmt_215_update_start_] 
          $T[phi_stmt_215_update_completed_] 
          $T[phi_stmt_215_sample_start__ps] 
          phi_stmt_215_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_215_sample_completed__ps] 
          phi_stmt_215_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_215_update_start__ps] 
          phi_stmt_215_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_215_update_completed__ps] 
          phi_stmt_215_update_completed_ <-& (phi_stmt_215_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_215_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_215_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_215_update_start_)
          $T[phi_stmt_215_loopback_trigger] 
          phi_stmt_215_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_215_loopback_sample_req] 
          $T[phi_stmt_215_loopback_sample_req_ps] 
          phi_stmt_215_loopback_sample_req <-& (phi_stmt_215_loopback_sample_req_ps)
          phi_stmt_215_loopback_sample_req &-> ($null)
          $T[phi_stmt_215_entry_trigger] 
          phi_stmt_215_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_215_entry_sample_req] 
          $T[phi_stmt_215_entry_sample_req_ps] 
          phi_stmt_215_entry_sample_req <-& (phi_stmt_215_entry_sample_req_ps)
          phi_stmt_215_entry_sample_req &-> ($null)
          phi_stmt_215_update_start_ o<-& (phi_stmt_215_update_completed_ 0)
          phi_stmt_215_sample_start_ o<-& (phi_stmt_215_sample_completed_ 1)
          $T[phi_stmt_215_merged_reqs] 
          $T[phi_stmt_215_phi_mux_ack] 
          $T[phi_stmt_215_phi_mux_ack_ps] 
          phi_stmt_215_phi_mux_ack_ps <-& (phi_stmt_215_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_215_update_completed_)
          $T[ADD_u64_u64_219_sample_start__ps] 
          $T[ADD_u64_u64_219_sample_completed__ps] 
          $T[ADD_u64_u64_219_update_start__ps] 
          $T[ADD_u64_u64_219_update_completed__ps] 
          // source expression in Phi alternative 0
          // (ncount + 1 )
          $T[ADD_u64_u64_219_sample_start_] 
          $T[ADD_u64_u64_219_sample_completed_] 
          $T[ADD_u64_u64_219_update_start_] 
          $T[ADD_u64_u64_219_update_completed_] 
          // ncount
          // start: Forward dependencies from ncount to transition ADD_u64_u64_219_sample_start_
          // done: Forward dependencies from ncount to transition ADD_u64_u64_219_sample_start_
          ;;[ADD_u64_u64_219_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u64_u64_219_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u64_u64_219_sample_start_ &-> (ADD_u64_u64_219_Sample)
          ADD_u64_u64_219_sample_completed_ <-& (ADD_u64_u64_219_Sample)
          ADD_u64_u64_219_sample_completed_ &-> ($null)
          ADD_u64_u64_219_update_start_ &-> (ADD_u64_u64_219_Update)
          ADD_u64_u64_219_update_completed_ <-& (ADD_u64_u64_219_Update)
          // RAW reenables for ncount
          // self-release: 
          ADD_u64_u64_219_sample_start_ o<-& (ADD_u64_u64_219_sample_completed_ 1)
          $null &-> (ADD_u64_u64_219_update_start_)
          ADD_u64_u64_219_update_start_ o<-& (ADD_u64_u64_219_update_completed_ 0)
          // Phi start dependency
          ADD_u64_u64_219_sample_start_ <-& (ADD_u64_u64_219_sample_start__ps)
          ADD_u64_u64_219_update_start_ <-& (ADD_u64_u64_219_update_start__ps)
          // RAW reenables for (ncount + 1 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          ADD_u64_u64_219_sample_completed__ps <-& (ADD_u64_u64_219_sample_completed_)
          ADD_u64_u64_219_update_completed__ps <-& (ADD_u64_u64_219_update_completed_)
          $T[type_cast_221_sample_start__ps] 
          $T[type_cast_221_sample_completed__ps] 
          $T[type_cast_221_update_start__ps] 
          $T[type_cast_221_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_221_sample_start_] 
          $T[type_cast_221_sample_completed_] 
          type_cast_221_sample_completed_ <-& (type_cast_221_sample_start_)
          $T[type_cast_221_update_start_] 
          $T [type_cast_221_update_completed_] $delay 
          type_cast_221_update_completed_ <-& (type_cast_221_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_221_sample_start_ <-& (type_cast_221_sample_start__ps)
          type_cast_221_update_start_ <-& (type_cast_221_update_start__ps)
          // Phi complete dependency.
          type_cast_221_sample_completed__ps <-& (type_cast_221_sample_completed_)
          type_cast_221_update_completed__ps <-& (type_cast_221_update_completed_)
          $phisequencer [ phi_stmt_215_phi_seq] : 
          phi_stmt_215_loopback_trigger ADD_u64_u64_219_sample_start__ps ADD_u64_u64_219_sample_completed__ps ADD_u64_u64_219_update_start__ps ADD_u64_u64_219_update_completed__ps phi_stmt_215_entry_trigger type_cast_221_sample_start__ps type_cast_221_sample_completed__ps type_cast_221_update_start__ps type_cast_221_update_completed__ps :
          phi_stmt_215_sample_start__ps phi_stmt_215_sample_completed__ps phi_stmt_215_update_start__ps phi_stmt_215_update_completed__ps :
          phi_stmt_215_loopback_sample_req_ps phi_stmt_215_entry_sample_req_ps : 
          phi_stmt_215_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_215
          // start:  			count := ncount $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 133
          // Source expression
          // ncount
          // Target expression
          // (as target) count
          $T[STORE_count_223_sample_start_] 
          $T[STORE_count_223_sample_completed_] 
          $T[STORE_count_223_update_start_] 
          $T[STORE_count_223_update_completed_] 
          // count
          $T[STORE_count_223_word_address_calculated] 
          $T[STORE_count_223_root_address_calculated] 
          STORE_count_223_word_address_calculated <-& (STORE_count_223_root_address_calculated)
          ;;[STORE_count_223_Sample] 
          {
            ;;[STORE_count_223_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[STORE_count_223_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          STORE_count_223_sample_start_ <-& (STORE_count_223_word_address_calculated)
          // reenable-joins
          STORE_count_223_sample_start_ &-> (STORE_count_223_Sample)
          STORE_count_223_sample_completed_ <-& (STORE_count_223_Sample)
          STORE_count_223_sample_completed_ &-> ($null)
          STORE_count_223_update_start_ &-> (STORE_count_223_Update)
          STORE_count_223_update_completed_ <-& (STORE_count_223_Update)
          // self-release: 
          STORE_count_223_sample_start_ o<-& (STORE_count_223_sample_completed_ 1)
          $null &-> (STORE_count_223_update_start_)
          STORE_count_223_update_start_ o<-& (STORE_count_223_update_completed_ 0)
          // start: Forward dependencies from ncount to transition STORE_count_223_sample_start_
          STORE_count_223_sample_start_ <-& (phi_stmt_215_update_completed_)
          // done: Forward dependencies from ncount to transition STORE_count_223_sample_start_
          // RAW reenables for ncount
          phi_stmt_215_update_start_ o<-& (STORE_count_223_sample_completed_ 0)
          // end:  			count := ncount $buffering 1// bits of buffering = 64. 
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_2
          //  STORE_count_223 store
          // reenable across ring for memory space memory_space_2
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_213__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_213_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_213__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_213_loop_body : condition_evaluated
        $bind do_while_stmt_213__entry__  => do_while_stmt_213_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_213_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_213__exit__)
      }
      do_while_stmt_213__entry__ |-> (do_while_stmt_213)
      do_while_stmt_213__exit__ <-| (do_while_stmt_213)
      do_while_stmt_213__entry__ <-| (branch_block_stmt_212__entry__)
      do_while_stmt_213__exit__ |-> (branch_block_stmt_212__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %timerDaemon%body%
    //  file prog.linked.opt.aa, line 129
    // constant-object-declarations for block %timerDaemon%body
    //  file prog.linked.opt.aa, line 125
    // constant-object-declarations for block %timerDaemon
    //  file prog.linked.opt.aa, line 120
    // constant-declarations for block %timerDaemon%body
    //  file prog.linked.opt.aa, line 125
    // do-while statement  
    //  file prog.linked.opt.aa, line 127
    // 1 
    $constant $W[konst_227_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %timerDaemon%body%
    //  file prog.linked.opt.aa, line 129
    // constant-declarations for phi:  			$phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 130
    // 1 
    $constant $W[konst_218_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) 0  )
    $constant $W[type_cast_221_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // count
    $constant $W[STORE_count_223_word_address_0] : $pointer<memory_space_2> := _b0
    // block %timerDaemon%body
    //  file prog.linked.opt.aa, line 125
    // do-while statement  
    //  file prog.linked.opt.aa, line 127
    // merge-statement  
    //  file prog.linked.opt.aa, line 129
    // 			$phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 130
    // (ncount + 1 )
    $intermediate $W[ADD_u64_u64_219_wire] : $int<64>
    // ncount
    $W[ncount_215] : $int<64>
    // 			count := ncount $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 133
    // count
    $constant $W[STORE_count_223_word_address_0] : $pointer<memory_space_2> := _b0
    $W[STORE_count_223_data_0] : $int<64>
    // datapath-instances for block %timerDaemon%body
    //  file prog.linked.opt.aa, line 125
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 127
    ==0? [do_while_stmt_213_branch] (konst_227_wire_constant)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 129
    // 			$phi ncount := 			  (ncount + 1 ) $on   $loopback 			  ($bitcast ($uint<64>) 0  ) $on   $entry 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 130
    // (ncount + 1 )
    +[ADD_u64_u64_219_inst] (ncount_215 konst_218_wire_constant) (ADD_u64_u64_219_wire)    $fullrate
    $buffering  $out ADD_u64_u64_219_inst ADD_u64_u64_219_wire 1
    $delay ADD_u64_u64_219_inst 1
    # $phi [phi_stmt_215] (ADD_u64_u64_219_wire type_cast_221_wire_constant) ( ncount_215 ) $fullrate
    // $buffering  $out phi_stmt_215 ncount_215 2
    // 			count := ncount $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 133
    // count
    $store [STORE_count_223_store_0] $to memory_space_2 (STORE_count_223_word_address_0 STORE_count_223_data_0) 
    $buffering  $in STORE_count_223_store_0 STORE_count_223_word_address_0 2
    $buffering  $in STORE_count_223_store_0 STORE_count_223_data_0 2
    $delay STORE_count_223_store_0 4
    &/ [STORE_count_223_gather_scatter] (ncount_215) (STORE_count_223_data_0) 
    $flowthrough 
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_213
  //  file prog.linked.opt.aa, line 127
  phi_stmt_215 <=> (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/phi_stmt_215_loopback_sample_req branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/phi_stmt_215_entry_sample_req) (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/phi_stmt_215_phi_mux_ack)
  // (ncount + 1 )
  // ncount
  ADD_u64_u64_219_inst <=> (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/ADD_u64_u64_219_Sample/rr branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/ADD_u64_u64_219_Update/cr) (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/ADD_u64_u64_219_Sample/ra branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/ADD_u64_u64_219_Update/ca)
  // 			count := ncount $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 133
  // ncount
  // count
  STORE_count_223_gather_scatter <=> (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Sample/STORE_count_223_Split/split_req) (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Sample/STORE_count_223_Split/split_ack)
  STORE_count_223_store_0 <=> (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Sample/word_access_start/word_0/rr branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Update/word_access_complete/word_0/cr) (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Sample/word_access_start/word_0/ra branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/STORE_count_223_Update/word_access_complete/word_0/ca)
  do_while_stmt_213_branch <=> (branch_block_stmt_212/do_while_stmt_213/do_while_stmt_213_loop_body/condition_evaluated) (branch_block_stmt_212/do_while_stmt_213/loop_exit/ack branch_block_stmt_212/do_while_stmt_213/loop_taken/ack)
}
$module [zeropad3D] 
{
  // pipe-declarations for block %zeropad3D
  //  file prog.linked.opt.aa, line 137
  // pipe-declarations for block %zeropad3D%body
  //  file prog.linked.opt.aa, line 142
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 165
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 176
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 219
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 222
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 272
  // memory-space 1 is written into.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_231] // Branch Block  file prog.linked.opt.aa, line 142
    {
      $P [branch_block_stmt_231__entry__]
      branch_block_stmt_231__entry__ <-| ($entry)
      $P [branch_block_stmt_231__exit__]
      branch_block_stmt_231__exit__ |-> ($exit)
      $P [assign_stmt_234_to_assign_stmt_292__entry__] 
      $P [assign_stmt_234_to_assign_stmt_292__exit__] 
      $P [if_stmt_293__entry__] 
      $P [if_stmt_293__exit__] 
      $P [merge_stmt_299__entry__] 
      $P [merge_stmt_299__exit__] 
      $P [assign_stmt_303_to_assign_stmt_340__entry__] 
      $P [assign_stmt_303_to_assign_stmt_340__exit__] 
      $P [bbx_xnph_forx_xbody]
      $P [merge_stmt_342__exit__] 
      $P [assign_stmt_357_to_assign_stmt_505__entry__] 
      $P [assign_stmt_357_to_assign_stmt_505__exit__] 
      $P [if_stmt_506__entry__] 
      $P [if_stmt_506__exit__] 
      $P [merge_stmt_512__entry__] 
      $P [merge_stmt_512__exit__] 
      $P [forx_xendx_xloopexit_forx_xend]
      $P [merge_stmt_514__exit__] 
      $P [call_stmt_517_to_assign_stmt_619__entry__] 
      $P [call_stmt_517_to_assign_stmt_619__exit__] 
      $P [call_stmt_622_to_assign_stmt_635__entry__] 
      $P [call_stmt_622_to_assign_stmt_635__exit__] 
      $P [assign_stmt_640_to_call_stmt_660__entry__] 
      $P [assign_stmt_640_to_call_stmt_660__exit__] 
      $P [return__]
      $P [merge_stmt_662__exit__] 
      ::[assign_stmt_234_to_assign_stmt_292] 
      {
        // start:  		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 144
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_233_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_233_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_233_update_start_] 
        $T[RPIPE_zeropad_input_pipe_233_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_233_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_233_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_233_sample_start_ &-> (RPIPE_zeropad_input_pipe_233_Sample)
        RPIPE_zeropad_input_pipe_233_sample_completed_ <-& (RPIPE_zeropad_input_pipe_233_Sample)
        RPIPE_zeropad_input_pipe_233_update_start_ <-& (RPIPE_zeropad_input_pipe_233_sample_completed_)
        RPIPE_zeropad_input_pipe_233_update_start_ &-> (RPIPE_zeropad_input_pipe_233_Update)
        RPIPE_zeropad_input_pipe_233_update_completed_ <-& (RPIPE_zeropad_input_pipe_233_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 145
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_236_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_236_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_236_update_start_] 
        $T[RPIPE_zeropad_input_pipe_236_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_236_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_236_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_236_sample_start_ &-> (RPIPE_zeropad_input_pipe_236_Sample)
        RPIPE_zeropad_input_pipe_236_sample_completed_ <-& (RPIPE_zeropad_input_pipe_236_Sample)
        RPIPE_zeropad_input_pipe_236_update_start_ <-& (RPIPE_zeropad_input_pipe_236_sample_completed_)
        RPIPE_zeropad_input_pipe_236_update_start_ &-> (RPIPE_zeropad_input_pipe_236_Update)
        RPIPE_zeropad_input_pipe_236_update_completed_ <-& (RPIPE_zeropad_input_pipe_236_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 146
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_239_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_239_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_239_update_start_] 
        $T[RPIPE_zeropad_input_pipe_239_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_239_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_239_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_239_sample_start_ &-> (RPIPE_zeropad_input_pipe_239_Sample)
        RPIPE_zeropad_input_pipe_239_sample_completed_ <-& (RPIPE_zeropad_input_pipe_239_Sample)
        RPIPE_zeropad_input_pipe_239_update_start_ <-& (RPIPE_zeropad_input_pipe_239_sample_completed_)
        RPIPE_zeropad_input_pipe_239_update_start_ &-> (RPIPE_zeropad_input_pipe_239_Update)
        RPIPE_zeropad_input_pipe_239_update_completed_ <-& (RPIPE_zeropad_input_pipe_239_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 147
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_242_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_242_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_242_update_start_] 
        $T[RPIPE_zeropad_input_pipe_242_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_242_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_242_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_242_sample_start_ &-> (RPIPE_zeropad_input_pipe_242_Sample)
        RPIPE_zeropad_input_pipe_242_sample_completed_ <-& (RPIPE_zeropad_input_pipe_242_Sample)
        RPIPE_zeropad_input_pipe_242_update_start_ <-& (RPIPE_zeropad_input_pipe_242_sample_completed_)
        RPIPE_zeropad_input_pipe_242_update_start_ &-> (RPIPE_zeropad_input_pipe_242_Update)
        RPIPE_zeropad_input_pipe_242_update_completed_ <-& (RPIPE_zeropad_input_pipe_242_Update)
        // Target expression
        // (as target) call3
        // start: WAR dependencies for call3
        // done: WAR dependencies for call3
        // end:  		call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 148
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_245_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_245_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_245_update_start_] 
        $T[RPIPE_zeropad_input_pipe_245_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_245_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_245_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_245_sample_start_ &-> (RPIPE_zeropad_input_pipe_245_Sample)
        RPIPE_zeropad_input_pipe_245_sample_completed_ <-& (RPIPE_zeropad_input_pipe_245_Sample)
        RPIPE_zeropad_input_pipe_245_update_start_ <-& (RPIPE_zeropad_input_pipe_245_sample_completed_)
        RPIPE_zeropad_input_pipe_245_update_start_ &-> (RPIPE_zeropad_input_pipe_245_Update)
        RPIPE_zeropad_input_pipe_245_update_completed_ <-& (RPIPE_zeropad_input_pipe_245_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 149
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_248_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_248_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_248_update_start_] 
        $T[RPIPE_zeropad_input_pipe_248_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_248_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_248_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_248_sample_start_ &-> (RPIPE_zeropad_input_pipe_248_Sample)
        RPIPE_zeropad_input_pipe_248_sample_completed_ <-& (RPIPE_zeropad_input_pipe_248_Sample)
        RPIPE_zeropad_input_pipe_248_update_start_ <-& (RPIPE_zeropad_input_pipe_248_sample_completed_)
        RPIPE_zeropad_input_pipe_248_update_start_ &-> (RPIPE_zeropad_input_pipe_248_Update)
        RPIPE_zeropad_input_pipe_248_update_completed_ <-& (RPIPE_zeropad_input_pipe_248_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 150
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_251_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_251_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_251_update_start_] 
        $T[RPIPE_zeropad_input_pipe_251_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_251_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_251_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_251_sample_start_ &-> (RPIPE_zeropad_input_pipe_251_Sample)
        RPIPE_zeropad_input_pipe_251_sample_completed_ <-& (RPIPE_zeropad_input_pipe_251_Sample)
        RPIPE_zeropad_input_pipe_251_update_start_ <-& (RPIPE_zeropad_input_pipe_251_sample_completed_)
        RPIPE_zeropad_input_pipe_251_update_start_ &-> (RPIPE_zeropad_input_pipe_251_Update)
        RPIPE_zeropad_input_pipe_251_update_completed_ <-& (RPIPE_zeropad_input_pipe_251_Update)
        // Target expression
        // (as target) call6
        // start: WAR dependencies for call6
        // done: WAR dependencies for call6
        // end:  		call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 151
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_254_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_254_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_254_update_start_] 
        $T[RPIPE_zeropad_input_pipe_254_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_254_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_254_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_254_sample_start_ &-> (RPIPE_zeropad_input_pipe_254_Sample)
        RPIPE_zeropad_input_pipe_254_sample_completed_ <-& (RPIPE_zeropad_input_pipe_254_Sample)
        RPIPE_zeropad_input_pipe_254_update_start_ <-& (RPIPE_zeropad_input_pipe_254_sample_completed_)
        RPIPE_zeropad_input_pipe_254_update_start_ &-> (RPIPE_zeropad_input_pipe_254_Update)
        RPIPE_zeropad_input_pipe_254_update_completed_ <-& (RPIPE_zeropad_input_pipe_254_Update)
        // Target expression
        // (as target) call7
        // start: WAR dependencies for call7
        // done: WAR dependencies for call7
        // end:  		call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 152
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_257_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_257_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_257_update_start_] 
        $T[RPIPE_zeropad_input_pipe_257_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_257_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_257_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_257_sample_start_ &-> (RPIPE_zeropad_input_pipe_257_Sample)
        RPIPE_zeropad_input_pipe_257_sample_completed_ <-& (RPIPE_zeropad_input_pipe_257_Sample)
        RPIPE_zeropad_input_pipe_257_update_start_ <-& (RPIPE_zeropad_input_pipe_257_sample_completed_)
        RPIPE_zeropad_input_pipe_257_update_start_ &-> (RPIPE_zeropad_input_pipe_257_Update)
        RPIPE_zeropad_input_pipe_257_update_completed_ <-& (RPIPE_zeropad_input_pipe_257_Update)
        // Target expression
        // (as target) call8
        // start: WAR dependencies for call8
        // done: WAR dependencies for call8
        // end:  		call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 153
        // Source expression
        // ($cast ($uint<64>) call2 )
        $T[type_cast_261_sample_start_] 
        $T[type_cast_261_sample_completed_] 
        $T[type_cast_261_update_start_] 
        $T[type_cast_261_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_261_sample_start_
        type_cast_261_sample_start_ <-& (RPIPE_zeropad_input_pipe_239_update_completed_)
        // done: Forward dependencies from call2 to transition type_cast_261_sample_start_
        ;;[type_cast_261_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_261_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_261_sample_start_ &-> (type_cast_261_Sample)
        type_cast_261_sample_completed_ <-& (type_cast_261_Sample)
        type_cast_261_sample_completed_ &-> ($null)
        type_cast_261_update_start_ &-> (type_cast_261_Update)
        type_cast_261_update_completed_ <-& (type_cast_261_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        // start:  		conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 154
        // Source expression
        // ($cast ($uint<64>) call3 )
        $T[type_cast_265_sample_start_] 
        $T[type_cast_265_sample_completed_] 
        $T[type_cast_265_update_start_] 
        $T[type_cast_265_update_completed_] 
        // call3
        // start: Forward dependencies from call3 to transition type_cast_265_sample_start_
        type_cast_265_sample_start_ <-& (RPIPE_zeropad_input_pipe_242_update_completed_)
        // done: Forward dependencies from call3 to transition type_cast_265_sample_start_
        ;;[type_cast_265_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_265_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_265_sample_start_ &-> (type_cast_265_Sample)
        type_cast_265_sample_completed_ <-& (type_cast_265_Sample)
        type_cast_265_sample_completed_ &-> ($null)
        type_cast_265_update_start_ &-> (type_cast_265_Update)
        type_cast_265_update_completed_ <-& (type_cast_265_Update)
        // Target expression
        // (as target) conv10
        // start: WAR dependencies for conv10
        // done: WAR dependencies for conv10
        // end:  		conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        // start:  		conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 155
        // Source expression
        // ($cast ($uint<64>) call4 )
        $T[type_cast_269_sample_start_] 
        $T[type_cast_269_sample_completed_] 
        $T[type_cast_269_update_start_] 
        $T[type_cast_269_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_269_sample_start_
        type_cast_269_sample_start_ <-& (RPIPE_zeropad_input_pipe_245_update_completed_)
        // done: Forward dependencies from call4 to transition type_cast_269_sample_start_
        ;;[type_cast_269_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_269_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_269_sample_start_ &-> (type_cast_269_Sample)
        type_cast_269_sample_completed_ <-& (type_cast_269_Sample)
        type_cast_269_sample_completed_ &-> ($null)
        type_cast_269_update_start_ &-> (type_cast_269_Update)
        type_cast_269_update_completed_ <-& (type_cast_269_Update)
        // Target expression
        // (as target) conv12
        // start: WAR dependencies for conv12
        // done: WAR dependencies for conv12
        // end:  		conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (conv10 * conv) $buffering 1
        //  file prog.linked.opt.aa, line 156
        // volatile! 
        // Source expression
        // (conv10 * conv)
        // conv10
        // conv
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (conv10 * conv) $buffering 1
        // start: WAR dependencies for mul13
        // done: WAR dependencies for mul13
        // start:  		$volatile mul13 := (mul * conv12) $buffering 1
        //  file prog.linked.opt.aa, line 157
        // volatile! 
        // Source expression
        // (mul * conv12)
        // mul
        // conv12
        // Target expression
        // (as target) mul13
        // start: WAR dependencies for mul13
        // done: WAR dependencies for mul13
        // end:  		$volatile mul13 := (mul * conv12) $buffering 1
        // start: WAR dependencies for shr125x_xmask
        // done: WAR dependencies for shr125x_xmask
        // start:  		$volatile shr125x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1
        //  file prog.linked.opt.aa, line 158
        // volatile! 
        // Source expression
        // (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  ))
        // mul13
        // Target expression
        // (as target) shr125x_xmask
        // start: WAR dependencies for shr125x_xmask
        // done: WAR dependencies for shr125x_xmask
        // end:  		$volatile shr125x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1
        // start: WAR dependencies for cmp126
        // done: WAR dependencies for cmp126
        // start:  		$volatile cmp126 := (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        //  file prog.linked.opt.aa, line 159
        // volatile! 
        // Source expression
        // (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        // shr125x_xmask
        // Target expression
        // (as target) cmp126
        // start: WAR dependencies for cmp126
        // done: WAR dependencies for cmp126
        // end:  		$volatile cmp126 := (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        // load-store dependencies..
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        RPIPE_zeropad_input_pipe_236_sample_start_ <-& (RPIPE_zeropad_input_pipe_233_update_completed_)
        RPIPE_zeropad_input_pipe_239_sample_start_ <-& (RPIPE_zeropad_input_pipe_236_update_completed_)
        RPIPE_zeropad_input_pipe_242_sample_start_ <-& (RPIPE_zeropad_input_pipe_239_update_completed_)
        RPIPE_zeropad_input_pipe_245_sample_start_ <-& (RPIPE_zeropad_input_pipe_242_update_completed_)
        RPIPE_zeropad_input_pipe_248_sample_start_ <-& (RPIPE_zeropad_input_pipe_245_update_completed_)
        RPIPE_zeropad_input_pipe_251_sample_start_ <-& (RPIPE_zeropad_input_pipe_248_update_completed_)
        RPIPE_zeropad_input_pipe_254_sample_start_ <-& (RPIPE_zeropad_input_pipe_251_update_completed_)
        RPIPE_zeropad_input_pipe_257_sample_start_ <-& (RPIPE_zeropad_input_pipe_254_update_completed_)
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_234_to_assign_stmt_292__entry__ |-> (assign_stmt_234_to_assign_stmt_292)
      assign_stmt_234_to_assign_stmt_292__exit__ <-| (assign_stmt_234_to_assign_stmt_292)
      // if-statement  
      //  file prog.linked.opt.aa, line 160
      ;;[if_stmt_293_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_293__entry__ |-> (if_stmt_293_dead_link)
      if_stmt_293__exit__ <-| (if_stmt_293_dead_link)
      ;;[if_stmt_293_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_293__entry__ |-> (if_stmt_293_eval_test)
      $P [R_cmp126_294_place]
      R_cmp126_294_place <-| (if_stmt_293_eval_test)
      ;;[if_stmt_293_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_293_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp126_294_place |-> (if_stmt_293_if_link if_stmt_293_else_link)
      $P [entry_forx_xend]
      entry_forx_xend <-| (if_stmt_293_if_link)
      $P [entry_bbx_xnph]
      entry_bbx_xnph <-| (if_stmt_293_else_link)
      ::[assign_stmt_303_to_assign_stmt_340] 
      {
        // start:  		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 167
        // Source expression
        // ($cast ($uint<64>) call3 )
        $T[type_cast_302_sample_start_] 
        $T[type_cast_302_sample_completed_] 
        $T[type_cast_302_update_start_] 
        $T[type_cast_302_update_completed_] 
        // call3
        // start: Forward dependencies from call3 to transition type_cast_302_sample_start_
        // done: Forward dependencies from call3 to transition type_cast_302_sample_start_
        ;;[type_cast_302_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_302_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_302_sample_start_ &-> (type_cast_302_Sample)
        type_cast_302_sample_completed_ <-& (type_cast_302_Sample)
        type_cast_302_sample_completed_ &-> ($null)
        type_cast_302_update_start_ &-> (type_cast_302_Update)
        type_cast_302_update_completed_ <-& (type_cast_302_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        // start:  		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 168
        // Source expression
        // ($cast ($uint<64>) call2 )
        $T[type_cast_306_sample_start_] 
        $T[type_cast_306_sample_completed_] 
        $T[type_cast_306_update_start_] 
        $T[type_cast_306_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_306_sample_start_
        // done: Forward dependencies from call2 to transition type_cast_306_sample_start_
        ;;[type_cast_306_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_306_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_306_sample_start_ &-> (type_cast_306_Sample)
        type_cast_306_sample_completed_ <-& (type_cast_306_Sample)
        type_cast_306_sample_completed_ &-> ($null)
        type_cast_306_update_start_ &-> (type_cast_306_Update)
        type_cast_306_update_completed_ <-& (type_cast_306_Update)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // start:  		$volatile tmp2 := (tmp * tmp1) $buffering 1
        //  file prog.linked.opt.aa, line 169
        // volatile! 
        // Source expression
        // (tmp * tmp1)
        // tmp
        // tmp1
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		$volatile tmp2 := (tmp * tmp1) $buffering 1
        // start:  		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 170
        // Source expression
        // ($cast ($uint<64>) call4 )
        $T[type_cast_315_sample_start_] 
        $T[type_cast_315_sample_completed_] 
        $T[type_cast_315_update_start_] 
        $T[type_cast_315_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_315_sample_start_
        // done: Forward dependencies from call4 to transition type_cast_315_sample_start_
        ;;[type_cast_315_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_315_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_315_sample_start_ &-> (type_cast_315_Sample)
        type_cast_315_sample_completed_ <-& (type_cast_315_Sample)
        type_cast_315_sample_completed_ &-> ($null)
        type_cast_315_update_start_ &-> (type_cast_315_Update)
        type_cast_315_update_completed_ <-& (type_cast_315_Update)
        // Target expression
        // (as target) tmp3
        // start: WAR dependencies for tmp3
        // done: WAR dependencies for tmp3
        // end:  		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // start:  		$volatile tmp4 := (tmp2 * tmp3) $buffering 1
        //  file prog.linked.opt.aa, line 171
        // volatile! 
        // Source expression
        // (tmp2 * tmp3)
        // tmp2
        // tmp3
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		$volatile tmp4 := (tmp2 * tmp3) $buffering 1
        // start: WAR dependencies for tmp5
        // done: WAR dependencies for tmp5
        // start:  		$volatile tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        //  file prog.linked.opt.aa, line 172
        // volatile! 
        // Source expression
        // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
        // tmp4
        // Target expression
        // (as target) tmp5
        // start: WAR dependencies for tmp5
        // done: WAR dependencies for tmp5
        // end:  		$volatile tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // start:  		$volatile tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 173
        // volatile! 
        // Source expression
        // (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // tmp5
        // Target expression
        // (as target) tmp6
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // end:  		$volatile tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for umax7
        // done: WAR dependencies for umax7
        // start:  		$volatile umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 174
        // volatile! 
        // Source expression
        // ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp6
        // tmp5
        // Target expression
        // (as target) umax7
        // start: WAR dependencies for umax7
        // done: WAR dependencies for umax7
        // end:  		$volatile umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_303_to_assign_stmt_340__entry__ |-> (assign_stmt_303_to_assign_stmt_340)
      assign_stmt_303_to_assign_stmt_340__exit__ <-| (assign_stmt_303_to_assign_stmt_340)
      ::[assign_stmt_357_to_assign_stmt_505] 
      {
        // start:  		arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 180
        // Source expression
        // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
        $T[addr_of_356_sample_start_] 
        $T[addr_of_356_sample_completed_] 
        $T[addr_of_356_update_start_] 
        $T[addr_of_356_update_completed_] 
        $T[array_obj_ref_355_root_address_calculated] 
        $T[array_obj_ref_355_offset_calculated] 
        $T[array_obj_ref_355_index_resized_1] 
        $T[array_obj_ref_355_index_scaled_1] 
        $T[array_obj_ref_355_index_computed_1] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_355_index_computed_1
        // done: Forward dependencies from indvar to transition array_obj_ref_355_index_computed_1
        ;;[array_obj_ref_355_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_355_index_computed_1 &-> (array_obj_ref_355_index_resize_1)
        array_obj_ref_355_index_resized_1 <-& (array_obj_ref_355_index_resize_1)
        ;;[array_obj_ref_355_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_355_index_resized_1 &-> (array_obj_ref_355_index_scale_1)
        array_obj_ref_355_index_scaled_1 <-& (array_obj_ref_355_index_scale_1)
        $T[array_obj_ref_355_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_355_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_355_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_355_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_355_index_scaled_1 &-> (array_obj_ref_355_final_index_sum_regn_Sample)
        array_obj_ref_355_final_index_sum_regn_sample_complete <-& (array_obj_ref_355_final_index_sum_regn_Sample)
        array_obj_ref_355_final_index_sum_regn_update_start &-> (array_obj_ref_355_final_index_sum_regn_Update)
        array_obj_ref_355_offset_calculated <-& (array_obj_ref_355_final_index_sum_regn_Update)
        ;;[array_obj_ref_355_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_355_offset_calculated &-> (array_obj_ref_355_base_plus_offset)
        array_obj_ref_355_root_address_calculated <-& (array_obj_ref_355_base_plus_offset)
        ;;[addr_of_356_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_356_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_356_sample_start_ <-& (array_obj_ref_355_root_address_calculated)
        addr_of_356_sample_start_ &-> (addr_of_356_request)
        addr_of_356_sample_completed_ <-& (addr_of_356_request)
        addr_of_356_sample_completed_ &-> ($null)
        addr_of_356_update_start_ &-> (addr_of_356_complete)
        addr_of_356_update_completed_ <-& (addr_of_356_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        // start:  		call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 181
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_359_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_359_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_359_update_start_] 
        $T[RPIPE_zeropad_input_pipe_359_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_359_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_359_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_359_sample_start_ &-> (RPIPE_zeropad_input_pipe_359_Sample)
        RPIPE_zeropad_input_pipe_359_sample_completed_ <-& (RPIPE_zeropad_input_pipe_359_Sample)
        RPIPE_zeropad_input_pipe_359_update_start_ <-& (RPIPE_zeropad_input_pipe_359_sample_completed_)
        RPIPE_zeropad_input_pipe_359_update_start_ &-> (RPIPE_zeropad_input_pipe_359_Update)
        RPIPE_zeropad_input_pipe_359_update_completed_ <-& (RPIPE_zeropad_input_pipe_359_Update)
        // Target expression
        // (as target) call20
        // start: WAR dependencies for call20
        // done: WAR dependencies for call20
        // end:  		call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 182
        // Source expression
        // ($cast ($uint<64>) call20 )
        $T[type_cast_363_sample_start_] 
        $T[type_cast_363_sample_completed_] 
        $T[type_cast_363_update_start_] 
        $T[type_cast_363_update_completed_] 
        // call20
        // start: Forward dependencies from call20 to transition type_cast_363_sample_start_
        type_cast_363_sample_start_ <-& (RPIPE_zeropad_input_pipe_359_update_completed_)
        // done: Forward dependencies from call20 to transition type_cast_363_sample_start_
        ;;[type_cast_363_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_363_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_363_sample_start_ &-> (type_cast_363_Sample)
        type_cast_363_sample_completed_ <-& (type_cast_363_Sample)
        type_cast_363_sample_completed_ &-> ($null)
        type_cast_363_update_start_ &-> (type_cast_363_Update)
        type_cast_363_update_completed_ <-& (type_cast_363_Update)
        // Target expression
        // (as target) conv21
        // start: WAR dependencies for conv21
        // done: WAR dependencies for conv21
        // end:  		conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 183
        // volatile! 
        // Source expression
        // (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // conv21
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 184
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_372_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_372_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_372_update_start_] 
        $T[RPIPE_zeropad_input_pipe_372_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_372_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_372_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_372_sample_start_ &-> (RPIPE_zeropad_input_pipe_372_Sample)
        RPIPE_zeropad_input_pipe_372_sample_completed_ <-& (RPIPE_zeropad_input_pipe_372_Sample)
        RPIPE_zeropad_input_pipe_372_update_start_ <-& (RPIPE_zeropad_input_pipe_372_sample_completed_)
        RPIPE_zeropad_input_pipe_372_update_start_ &-> (RPIPE_zeropad_input_pipe_372_Update)
        RPIPE_zeropad_input_pipe_372_update_completed_ <-& (RPIPE_zeropad_input_pipe_372_Update)
        // Target expression
        // (as target) call23
        // start: WAR dependencies for call23
        // done: WAR dependencies for call23
        // end:  		call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 185
        // Source expression
        // ($cast ($uint<64>) call23 )
        $T[type_cast_376_sample_start_] 
        $T[type_cast_376_sample_completed_] 
        $T[type_cast_376_update_start_] 
        $T[type_cast_376_update_completed_] 
        // call23
        // start: Forward dependencies from call23 to transition type_cast_376_sample_start_
        type_cast_376_sample_start_ <-& (RPIPE_zeropad_input_pipe_372_update_completed_)
        // done: Forward dependencies from call23 to transition type_cast_376_sample_start_
        ;;[type_cast_376_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_376_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_376_sample_start_ &-> (type_cast_376_Sample)
        type_cast_376_sample_completed_ <-& (type_cast_376_Sample)
        type_cast_376_sample_completed_ &-> ($null)
        type_cast_376_update_start_ &-> (type_cast_376_Update)
        type_cast_376_update_completed_ <-& (type_cast_376_Update)
        // Target expression
        // (as target) conv25
        // start: WAR dependencies for conv25
        // done: WAR dependencies for conv25
        // end:  		conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // start:  		$volatile add := (shl | conv25) $buffering 1
        //  file prog.linked.opt.aa, line 186
        // volatile! 
        // Source expression
        // (shl | conv25)
        // shl
        // conv25
        // Target expression
        // (as target) add
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // end:  		$volatile add := (shl | conv25) $buffering 1
        // start: WAR dependencies for shl27
        // done: WAR dependencies for shl27
        // start:  		$volatile shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 187
        // volatile! 
        // Source expression
        // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add
        // Target expression
        // (as target) shl27
        // start: WAR dependencies for shl27
        // done: WAR dependencies for shl27
        // end:  		$volatile shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 188
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_390_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_390_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_390_update_start_] 
        $T[RPIPE_zeropad_input_pipe_390_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_390_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_390_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_390_sample_start_ &-> (RPIPE_zeropad_input_pipe_390_Sample)
        RPIPE_zeropad_input_pipe_390_sample_completed_ <-& (RPIPE_zeropad_input_pipe_390_Sample)
        RPIPE_zeropad_input_pipe_390_update_start_ <-& (RPIPE_zeropad_input_pipe_390_sample_completed_)
        RPIPE_zeropad_input_pipe_390_update_start_ &-> (RPIPE_zeropad_input_pipe_390_Update)
        RPIPE_zeropad_input_pipe_390_update_completed_ <-& (RPIPE_zeropad_input_pipe_390_Update)
        // Target expression
        // (as target) call28
        // start: WAR dependencies for call28
        // done: WAR dependencies for call28
        // end:  		call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 189
        // Source expression
        // ($cast ($uint<64>) call28 )
        $T[type_cast_394_sample_start_] 
        $T[type_cast_394_sample_completed_] 
        $T[type_cast_394_update_start_] 
        $T[type_cast_394_update_completed_] 
        // call28
        // start: Forward dependencies from call28 to transition type_cast_394_sample_start_
        type_cast_394_sample_start_ <-& (RPIPE_zeropad_input_pipe_390_update_completed_)
        // done: Forward dependencies from call28 to transition type_cast_394_sample_start_
        ;;[type_cast_394_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_394_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_394_sample_start_ &-> (type_cast_394_Sample)
        type_cast_394_sample_completed_ <-& (type_cast_394_Sample)
        type_cast_394_sample_completed_ &-> ($null)
        type_cast_394_update_start_ &-> (type_cast_394_Update)
        type_cast_394_update_completed_ <-& (type_cast_394_Update)
        // Target expression
        // (as target) conv30
        // start: WAR dependencies for conv30
        // done: WAR dependencies for conv30
        // end:  		conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add31
        // done: WAR dependencies for add31
        // start:  		$volatile add31 := (shl27 | conv30) $buffering 1
        //  file prog.linked.opt.aa, line 190
        // volatile! 
        // Source expression
        // (shl27 | conv30)
        // shl27
        // conv30
        // Target expression
        // (as target) add31
        // start: WAR dependencies for add31
        // done: WAR dependencies for add31
        // end:  		$volatile add31 := (shl27 | conv30) $buffering 1
        // start: WAR dependencies for shl33
        // done: WAR dependencies for shl33
        // start:  		$volatile shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 191
        // volatile! 
        // Source expression
        // (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add31
        // Target expression
        // (as target) shl33
        // start: WAR dependencies for shl33
        // done: WAR dependencies for shl33
        // end:  		$volatile shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 192
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_408_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_408_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_408_update_start_] 
        $T[RPIPE_zeropad_input_pipe_408_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_408_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_408_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_408_sample_start_ &-> (RPIPE_zeropad_input_pipe_408_Sample)
        RPIPE_zeropad_input_pipe_408_sample_completed_ <-& (RPIPE_zeropad_input_pipe_408_Sample)
        RPIPE_zeropad_input_pipe_408_update_start_ <-& (RPIPE_zeropad_input_pipe_408_sample_completed_)
        RPIPE_zeropad_input_pipe_408_update_start_ &-> (RPIPE_zeropad_input_pipe_408_Update)
        RPIPE_zeropad_input_pipe_408_update_completed_ <-& (RPIPE_zeropad_input_pipe_408_Update)
        // Target expression
        // (as target) call34
        // start: WAR dependencies for call34
        // done: WAR dependencies for call34
        // end:  		call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 193
        // Source expression
        // ($cast ($uint<64>) call34 )
        $T[type_cast_412_sample_start_] 
        $T[type_cast_412_sample_completed_] 
        $T[type_cast_412_update_start_] 
        $T[type_cast_412_update_completed_] 
        // call34
        // start: Forward dependencies from call34 to transition type_cast_412_sample_start_
        type_cast_412_sample_start_ <-& (RPIPE_zeropad_input_pipe_408_update_completed_)
        // done: Forward dependencies from call34 to transition type_cast_412_sample_start_
        ;;[type_cast_412_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_412_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_412_sample_start_ &-> (type_cast_412_Sample)
        type_cast_412_sample_completed_ <-& (type_cast_412_Sample)
        type_cast_412_sample_completed_ &-> ($null)
        type_cast_412_update_start_ &-> (type_cast_412_Update)
        type_cast_412_update_completed_ <-& (type_cast_412_Update)
        // Target expression
        // (as target) conv36
        // start: WAR dependencies for conv36
        // done: WAR dependencies for conv36
        // end:  		conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add37
        // done: WAR dependencies for add37
        // start:  		$volatile add37 := (shl33 | conv36) $buffering 1
        //  file prog.linked.opt.aa, line 194
        // volatile! 
        // Source expression
        // (shl33 | conv36)
        // shl33
        // conv36
        // Target expression
        // (as target) add37
        // start: WAR dependencies for add37
        // done: WAR dependencies for add37
        // end:  		$volatile add37 := (shl33 | conv36) $buffering 1
        // start: WAR dependencies for shl39
        // done: WAR dependencies for shl39
        // start:  		$volatile shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 195
        // volatile! 
        // Source expression
        // (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add37
        // Target expression
        // (as target) shl39
        // start: WAR dependencies for shl39
        // done: WAR dependencies for shl39
        // end:  		$volatile shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 196
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_426_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_426_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_426_update_start_] 
        $T[RPIPE_zeropad_input_pipe_426_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_426_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_426_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_426_sample_start_ &-> (RPIPE_zeropad_input_pipe_426_Sample)
        RPIPE_zeropad_input_pipe_426_sample_completed_ <-& (RPIPE_zeropad_input_pipe_426_Sample)
        RPIPE_zeropad_input_pipe_426_update_start_ <-& (RPIPE_zeropad_input_pipe_426_sample_completed_)
        RPIPE_zeropad_input_pipe_426_update_start_ &-> (RPIPE_zeropad_input_pipe_426_Update)
        RPIPE_zeropad_input_pipe_426_update_completed_ <-& (RPIPE_zeropad_input_pipe_426_Update)
        // Target expression
        // (as target) call40
        // start: WAR dependencies for call40
        // done: WAR dependencies for call40
        // end:  		call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 197
        // Source expression
        // ($cast ($uint<64>) call40 )
        $T[type_cast_430_sample_start_] 
        $T[type_cast_430_sample_completed_] 
        $T[type_cast_430_update_start_] 
        $T[type_cast_430_update_completed_] 
        // call40
        // start: Forward dependencies from call40 to transition type_cast_430_sample_start_
        type_cast_430_sample_start_ <-& (RPIPE_zeropad_input_pipe_426_update_completed_)
        // done: Forward dependencies from call40 to transition type_cast_430_sample_start_
        ;;[type_cast_430_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_430_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_430_sample_start_ &-> (type_cast_430_Sample)
        type_cast_430_sample_completed_ <-& (type_cast_430_Sample)
        type_cast_430_sample_completed_ &-> ($null)
        type_cast_430_update_start_ &-> (type_cast_430_Update)
        type_cast_430_update_completed_ <-& (type_cast_430_Update)
        // Target expression
        // (as target) conv42
        // start: WAR dependencies for conv42
        // done: WAR dependencies for conv42
        // end:  		conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add43
        // done: WAR dependencies for add43
        // start:  		$volatile add43 := (shl39 | conv42) $buffering 1
        //  file prog.linked.opt.aa, line 198
        // volatile! 
        // Source expression
        // (shl39 | conv42)
        // shl39
        // conv42
        // Target expression
        // (as target) add43
        // start: WAR dependencies for add43
        // done: WAR dependencies for add43
        // end:  		$volatile add43 := (shl39 | conv42) $buffering 1
        // start: WAR dependencies for shl45
        // done: WAR dependencies for shl45
        // start:  		$volatile shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 199
        // volatile! 
        // Source expression
        // (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add43
        // Target expression
        // (as target) shl45
        // start: WAR dependencies for shl45
        // done: WAR dependencies for shl45
        // end:  		$volatile shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 200
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_444_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_444_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_444_update_start_] 
        $T[RPIPE_zeropad_input_pipe_444_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_444_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_444_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_444_sample_start_ &-> (RPIPE_zeropad_input_pipe_444_Sample)
        RPIPE_zeropad_input_pipe_444_sample_completed_ <-& (RPIPE_zeropad_input_pipe_444_Sample)
        RPIPE_zeropad_input_pipe_444_update_start_ <-& (RPIPE_zeropad_input_pipe_444_sample_completed_)
        RPIPE_zeropad_input_pipe_444_update_start_ &-> (RPIPE_zeropad_input_pipe_444_Update)
        RPIPE_zeropad_input_pipe_444_update_completed_ <-& (RPIPE_zeropad_input_pipe_444_Update)
        // Target expression
        // (as target) call46
        // start: WAR dependencies for call46
        // done: WAR dependencies for call46
        // end:  		call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 201
        // Source expression
        // ($cast ($uint<64>) call46 )
        $T[type_cast_448_sample_start_] 
        $T[type_cast_448_sample_completed_] 
        $T[type_cast_448_update_start_] 
        $T[type_cast_448_update_completed_] 
        // call46
        // start: Forward dependencies from call46 to transition type_cast_448_sample_start_
        type_cast_448_sample_start_ <-& (RPIPE_zeropad_input_pipe_444_update_completed_)
        // done: Forward dependencies from call46 to transition type_cast_448_sample_start_
        ;;[type_cast_448_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_448_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_448_sample_start_ &-> (type_cast_448_Sample)
        type_cast_448_sample_completed_ <-& (type_cast_448_Sample)
        type_cast_448_sample_completed_ &-> ($null)
        type_cast_448_update_start_ &-> (type_cast_448_Update)
        type_cast_448_update_completed_ <-& (type_cast_448_Update)
        // Target expression
        // (as target) conv48
        // start: WAR dependencies for conv48
        // done: WAR dependencies for conv48
        // end:  		conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add49
        // done: WAR dependencies for add49
        // start:  		$volatile add49 := (shl45 | conv48) $buffering 1
        //  file prog.linked.opt.aa, line 202
        // volatile! 
        // Source expression
        // (shl45 | conv48)
        // shl45
        // conv48
        // Target expression
        // (as target) add49
        // start: WAR dependencies for add49
        // done: WAR dependencies for add49
        // end:  		$volatile add49 := (shl45 | conv48) $buffering 1
        // start: WAR dependencies for shl51
        // done: WAR dependencies for shl51
        // start:  		$volatile shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 203
        // volatile! 
        // Source expression
        // (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add49
        // Target expression
        // (as target) shl51
        // start: WAR dependencies for shl51
        // done: WAR dependencies for shl51
        // end:  		$volatile shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 204
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_462_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_462_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_462_update_start_] 
        $T[RPIPE_zeropad_input_pipe_462_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_462_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_462_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_462_sample_start_ &-> (RPIPE_zeropad_input_pipe_462_Sample)
        RPIPE_zeropad_input_pipe_462_sample_completed_ <-& (RPIPE_zeropad_input_pipe_462_Sample)
        RPIPE_zeropad_input_pipe_462_update_start_ <-& (RPIPE_zeropad_input_pipe_462_sample_completed_)
        RPIPE_zeropad_input_pipe_462_update_start_ &-> (RPIPE_zeropad_input_pipe_462_Update)
        RPIPE_zeropad_input_pipe_462_update_completed_ <-& (RPIPE_zeropad_input_pipe_462_Update)
        // Target expression
        // (as target) call52
        // start: WAR dependencies for call52
        // done: WAR dependencies for call52
        // end:  		call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 205
        // Source expression
        // ($cast ($uint<64>) call52 )
        $T[type_cast_466_sample_start_] 
        $T[type_cast_466_sample_completed_] 
        $T[type_cast_466_update_start_] 
        $T[type_cast_466_update_completed_] 
        // call52
        // start: Forward dependencies from call52 to transition type_cast_466_sample_start_
        type_cast_466_sample_start_ <-& (RPIPE_zeropad_input_pipe_462_update_completed_)
        // done: Forward dependencies from call52 to transition type_cast_466_sample_start_
        ;;[type_cast_466_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_466_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_466_sample_start_ &-> (type_cast_466_Sample)
        type_cast_466_sample_completed_ <-& (type_cast_466_Sample)
        type_cast_466_sample_completed_ &-> ($null)
        type_cast_466_update_start_ &-> (type_cast_466_Update)
        type_cast_466_update_completed_ <-& (type_cast_466_Update)
        // Target expression
        // (as target) conv54
        // start: WAR dependencies for conv54
        // done: WAR dependencies for conv54
        // end:  		conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add55
        // done: WAR dependencies for add55
        // start:  		$volatile add55 := (shl51 | conv54) $buffering 1
        //  file prog.linked.opt.aa, line 206
        // volatile! 
        // Source expression
        // (shl51 | conv54)
        // shl51
        // conv54
        // Target expression
        // (as target) add55
        // start: WAR dependencies for add55
        // done: WAR dependencies for add55
        // end:  		$volatile add55 := (shl51 | conv54) $buffering 1
        // start: WAR dependencies for shl57
        // done: WAR dependencies for shl57
        // start:  		$volatile shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 207
        // volatile! 
        // Source expression
        // (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add55
        // Target expression
        // (as target) shl57
        // start: WAR dependencies for shl57
        // done: WAR dependencies for shl57
        // end:  		$volatile shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 208
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_480_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_480_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_480_update_start_] 
        $T[RPIPE_zeropad_input_pipe_480_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_480_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_480_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_480_sample_start_ &-> (RPIPE_zeropad_input_pipe_480_Sample)
        RPIPE_zeropad_input_pipe_480_sample_completed_ <-& (RPIPE_zeropad_input_pipe_480_Sample)
        RPIPE_zeropad_input_pipe_480_update_start_ <-& (RPIPE_zeropad_input_pipe_480_sample_completed_)
        RPIPE_zeropad_input_pipe_480_update_start_ &-> (RPIPE_zeropad_input_pipe_480_Update)
        RPIPE_zeropad_input_pipe_480_update_completed_ <-& (RPIPE_zeropad_input_pipe_480_Update)
        // Target expression
        // (as target) call58
        // start: WAR dependencies for call58
        // done: WAR dependencies for call58
        // end:  		call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 209
        // Source expression
        // ($cast ($uint<64>) call58 )
        $T[type_cast_484_sample_start_] 
        $T[type_cast_484_sample_completed_] 
        $T[type_cast_484_update_start_] 
        $T[type_cast_484_update_completed_] 
        // call58
        // start: Forward dependencies from call58 to transition type_cast_484_sample_start_
        type_cast_484_sample_start_ <-& (RPIPE_zeropad_input_pipe_480_update_completed_)
        // done: Forward dependencies from call58 to transition type_cast_484_sample_start_
        ;;[type_cast_484_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_484_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_484_sample_start_ &-> (type_cast_484_Sample)
        type_cast_484_sample_completed_ <-& (type_cast_484_Sample)
        type_cast_484_sample_completed_ &-> ($null)
        type_cast_484_update_start_ &-> (type_cast_484_Update)
        type_cast_484_update_completed_ <-& (type_cast_484_Update)
        // Target expression
        // (as target) conv60
        // start: WAR dependencies for conv60
        // done: WAR dependencies for conv60
        // end:  		conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add61
        // done: WAR dependencies for add61
        // start:  		$volatile add61 := (shl57 | conv60) $buffering 1
        //  file prog.linked.opt.aa, line 210
        // volatile! 
        // Source expression
        // (shl57 | conv60)
        // shl57
        // conv60
        // Target expression
        // (as target) add61
        // start: WAR dependencies for add61
        // done: WAR dependencies for add61
        // end:  		$volatile add61 := (shl57 | conv60) $buffering 1
        // start:  		->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 211
        // Source expression
        // add61
        // Target expression
        // ->(arrayidx)
        $T[ptr_deref_492_sample_start_] 
        $T[ptr_deref_492_sample_completed_] 
        $T[ptr_deref_492_update_start_] 
        $T[ptr_deref_492_update_completed_] 
        $T[ptr_deref_492_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_492_word_address_calculated] 
        $T[ptr_deref_492_root_address_calculated] 
        $T[ptr_deref_492_base_address_resized] 
        ;;[ptr_deref_492_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_492_base_address_calculated &-> (ptr_deref_492_base_addr_resize)
        ptr_deref_492_base_address_resized <-& (ptr_deref_492_base_addr_resize)
        ;;[ptr_deref_492_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_492_base_address_resized &-> (ptr_deref_492_base_plus_offset)
        ptr_deref_492_root_address_calculated <-& (ptr_deref_492_base_plus_offset)
        ;;[ptr_deref_492_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_492_root_address_calculated &-> (ptr_deref_492_word_addrgen)
        ptr_deref_492_word_address_calculated <-& (ptr_deref_492_word_addrgen)
        ;;[ptr_deref_492_Sample] 
        {
          ;;[ptr_deref_492_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_492_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_492_sample_start_ <-& (ptr_deref_492_word_address_calculated)
        ptr_deref_492_sample_start_ &-> (ptr_deref_492_Sample)
        ptr_deref_492_sample_completed_ <-& (ptr_deref_492_Sample)
        ptr_deref_492_sample_completed_ &-> ($null)
        ptr_deref_492_update_start_ &-> (ptr_deref_492_Update)
        ptr_deref_492_update_completed_ <-& (ptr_deref_492_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_492_base_address_calculated
        ptr_deref_492_base_address_calculated <-& (addr_of_356_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_492_base_address_calculated
        ptr_deref_492_sample_start_ <-& (ptr_deref_492_base_address_calculated)
        // start: Forward dependencies from add61 to transition ptr_deref_492_sample_start_
        ptr_deref_492_sample_start_ <-& (type_cast_363_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_376_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_394_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_412_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_430_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_448_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_466_update_completed_)
        ptr_deref_492_sample_start_ <-& (type_cast_484_update_completed_)
        // done: Forward dependencies from add61 to transition ptr_deref_492_sample_start_
        // end:  		->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // start:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 212
        // volatile! 
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // end:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond8
        // ignored out-of-scope w_root 		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond8
        // start:  		$volatile exitcond8 := (indvarx_xnext == umax7) $buffering 1
        //  file prog.linked.opt.aa, line 213
        // volatile! 
        // Source expression
        // (indvarx_xnext == umax7)
        // indvarx_xnext
        // umax7
        // Target expression
        // (as target) exitcond8
        // start: WAR dependencies for exitcond8
        // ignored out-of-scope w_root 		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond8
        // end:  		$volatile exitcond8 := (indvarx_xnext == umax7) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_1
        //  ptr_deref_492 store
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        RPIPE_zeropad_input_pipe_372_sample_start_ <-& (RPIPE_zeropad_input_pipe_359_update_completed_)
        RPIPE_zeropad_input_pipe_390_sample_start_ <-& (RPIPE_zeropad_input_pipe_372_update_completed_)
        RPIPE_zeropad_input_pipe_408_sample_start_ <-& (RPIPE_zeropad_input_pipe_390_update_completed_)
        RPIPE_zeropad_input_pipe_426_sample_start_ <-& (RPIPE_zeropad_input_pipe_408_update_completed_)
        RPIPE_zeropad_input_pipe_444_sample_start_ <-& (RPIPE_zeropad_input_pipe_426_update_completed_)
        RPIPE_zeropad_input_pipe_462_sample_start_ <-& (RPIPE_zeropad_input_pipe_444_update_completed_)
        RPIPE_zeropad_input_pipe_480_sample_start_ <-& (RPIPE_zeropad_input_pipe_462_update_completed_)
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_357_to_assign_stmt_505__entry__ |-> (assign_stmt_357_to_assign_stmt_505)
      assign_stmt_357_to_assign_stmt_505__exit__ <-| (assign_stmt_357_to_assign_stmt_505)
      // if-statement  
      //  file prog.linked.opt.aa, line 214
      ;;[if_stmt_506_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_506__entry__ |-> (if_stmt_506_dead_link)
      if_stmt_506__exit__ <-| (if_stmt_506_dead_link)
      ;;[if_stmt_506_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_506__entry__ |-> (if_stmt_506_eval_test)
      $P [R_exitcond8_507_place]
      R_exitcond8_507_place <-| (if_stmt_506_eval_test)
      ;;[if_stmt_506_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_506_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond8_507_place |-> (if_stmt_506_if_link if_stmt_506_else_link)
      $P [forx_xbody_forx_xendx_xloopexit]
      forx_xbody_forx_xendx_xloopexit <-| (if_stmt_506_if_link)
      $P [forx_xbody_forx_xbody]
      forx_xbody_forx_xbody <-| (if_stmt_506_else_link)
      ::[call_stmt_517_to_assign_stmt_619] 
      {
        // start: 		$call timer () (call66 ) 
        //  file prog.linked.opt.aa, line 225
        $T[call_stmt_517_sample_start_] 
        $T[call_stmt_517_sample_completed_] 
        $T[call_stmt_517_update_start_] 
        $T[call_stmt_517_update_completed_] 
        ;;[call_stmt_517_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_517_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_517_sample_start_ &-> (call_stmt_517_Sample)
        call_stmt_517_sample_completed_ <-& (call_stmt_517_Sample)
        call_stmt_517_sample_completed_ &-> ($null)
        call_stmt_517_update_start_ &-> (call_stmt_517_Update)
        call_stmt_517_update_completed_ <-& (call_stmt_517_Update)
        // Call output argument 0
        // (as target) call66
        // start: WAR dependencies for call66
        // done: WAR dependencies for call66
        // end: 		$call timer () (call66 ) 
        // start:  		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 226
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) )
        $T[type_cast_522_sample_start_] 
        $T[type_cast_522_sample_completed_] 
        $T[type_cast_522_update_start_] 
        $T[type_cast_522_update_completed_] 
        // ($cast ($int<64>) call66 )
        // call66
        // start: Forward dependencies from ($cast ($int<64>) call66 ) to transition type_cast_522_sample_start_
        type_cast_522_sample_start_ <-& (call_stmt_517_update_completed_)
        // done: Forward dependencies from ($cast ($int<64>) call66 ) to transition type_cast_522_sample_start_
        ;;[type_cast_522_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_522_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_522_sample_start_ &-> (type_cast_522_Sample)
        type_cast_522_sample_completed_ <-& (type_cast_522_Sample)
        type_cast_522_sample_completed_ &-> ($null)
        type_cast_522_update_start_ &-> (type_cast_522_Update)
        type_cast_522_update_completed_ <-& (type_cast_522_Update)
        // Target expression
        // (as target) conv67
        // start: WAR dependencies for conv67
        // done: WAR dependencies for conv67
        // end:  		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
        // start:  		Block0_starting := call2 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 227
        // Source expression
        // call2
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_524_sample_start_] 
        $T[WPIPE_Block0_starting_524_sample_completed_] 
        $T[WPIPE_Block0_starting_524_update_start_] 
        $T[WPIPE_Block0_starting_524_update_completed_] 
        ;;[WPIPE_Block0_starting_524_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_524_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_524_sample_start_ &-> (WPIPE_Block0_starting_524_Sample)
        WPIPE_Block0_starting_524_sample_completed_ <-& (WPIPE_Block0_starting_524_Sample)
        WPIPE_Block0_starting_524_update_start_ <-& (WPIPE_Block0_starting_524_sample_completed_)
        WPIPE_Block0_starting_524_update_start_ &-> (WPIPE_Block0_starting_524_Update)
        WPIPE_Block0_starting_524_update_completed_ <-& (WPIPE_Block0_starting_524_Update)
        // start: Forward dependencies from call2 to transition WPIPE_Block0_starting_524_sample_start_
        // done: Forward dependencies from call2 to transition WPIPE_Block0_starting_524_sample_start_
        // end:  		Block0_starting := call2 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call3 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 228
        // Source expression
        // call3
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_527_sample_start_] 
        $T[WPIPE_Block0_starting_527_sample_completed_] 
        $T[WPIPE_Block0_starting_527_update_start_] 
        $T[WPIPE_Block0_starting_527_update_completed_] 
        ;;[WPIPE_Block0_starting_527_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_527_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_527_sample_start_ &-> (WPIPE_Block0_starting_527_Sample)
        WPIPE_Block0_starting_527_sample_completed_ <-& (WPIPE_Block0_starting_527_Sample)
        WPIPE_Block0_starting_527_update_start_ <-& (WPIPE_Block0_starting_527_sample_completed_)
        WPIPE_Block0_starting_527_update_start_ &-> (WPIPE_Block0_starting_527_Update)
        WPIPE_Block0_starting_527_update_completed_ <-& (WPIPE_Block0_starting_527_Update)
        // start: Forward dependencies from call3 to transition WPIPE_Block0_starting_527_sample_start_
        // done: Forward dependencies from call3 to transition WPIPE_Block0_starting_527_sample_start_
        // end:  		Block0_starting := call3 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call4 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 229
        // Source expression
        // call4
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_530_sample_start_] 
        $T[WPIPE_Block0_starting_530_sample_completed_] 
        $T[WPIPE_Block0_starting_530_update_start_] 
        $T[WPIPE_Block0_starting_530_update_completed_] 
        ;;[WPIPE_Block0_starting_530_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_530_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_530_sample_start_ &-> (WPIPE_Block0_starting_530_Sample)
        WPIPE_Block0_starting_530_sample_completed_ <-& (WPIPE_Block0_starting_530_Sample)
        WPIPE_Block0_starting_530_update_start_ <-& (WPIPE_Block0_starting_530_sample_completed_)
        WPIPE_Block0_starting_530_update_start_ &-> (WPIPE_Block0_starting_530_Update)
        WPIPE_Block0_starting_530_update_completed_ <-& (WPIPE_Block0_starting_530_Update)
        // start: Forward dependencies from call4 to transition WPIPE_Block0_starting_530_sample_start_
        // done: Forward dependencies from call4 to transition WPIPE_Block0_starting_530_sample_start_
        // end:  		Block0_starting := call4 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call6 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 230
        // Source expression
        // call6
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_533_sample_start_] 
        $T[WPIPE_Block0_starting_533_sample_completed_] 
        $T[WPIPE_Block0_starting_533_update_start_] 
        $T[WPIPE_Block0_starting_533_update_completed_] 
        ;;[WPIPE_Block0_starting_533_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_533_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_533_sample_start_ &-> (WPIPE_Block0_starting_533_Sample)
        WPIPE_Block0_starting_533_sample_completed_ <-& (WPIPE_Block0_starting_533_Sample)
        WPIPE_Block0_starting_533_update_start_ <-& (WPIPE_Block0_starting_533_sample_completed_)
        WPIPE_Block0_starting_533_update_start_ &-> (WPIPE_Block0_starting_533_Update)
        WPIPE_Block0_starting_533_update_completed_ <-& (WPIPE_Block0_starting_533_Update)
        // start: Forward dependencies from call6 to transition WPIPE_Block0_starting_533_sample_start_
        // done: Forward dependencies from call6 to transition WPIPE_Block0_starting_533_sample_start_
        // end:  		Block0_starting := call6 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call7 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 231
        // Source expression
        // call7
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_536_sample_start_] 
        $T[WPIPE_Block0_starting_536_sample_completed_] 
        $T[WPIPE_Block0_starting_536_update_start_] 
        $T[WPIPE_Block0_starting_536_update_completed_] 
        ;;[WPIPE_Block0_starting_536_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_536_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_536_sample_start_ &-> (WPIPE_Block0_starting_536_Sample)
        WPIPE_Block0_starting_536_sample_completed_ <-& (WPIPE_Block0_starting_536_Sample)
        WPIPE_Block0_starting_536_update_start_ <-& (WPIPE_Block0_starting_536_sample_completed_)
        WPIPE_Block0_starting_536_update_start_ &-> (WPIPE_Block0_starting_536_Update)
        WPIPE_Block0_starting_536_update_completed_ <-& (WPIPE_Block0_starting_536_Update)
        // start: Forward dependencies from call7 to transition WPIPE_Block0_starting_536_sample_start_
        // done: Forward dependencies from call7 to transition WPIPE_Block0_starting_536_sample_start_
        // end:  		Block0_starting := call7 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call8 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 232
        // Source expression
        // call8
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_539_sample_start_] 
        $T[WPIPE_Block0_starting_539_sample_completed_] 
        $T[WPIPE_Block0_starting_539_update_start_] 
        $T[WPIPE_Block0_starting_539_update_completed_] 
        ;;[WPIPE_Block0_starting_539_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_539_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_539_sample_start_ &-> (WPIPE_Block0_starting_539_Sample)
        WPIPE_Block0_starting_539_sample_completed_ <-& (WPIPE_Block0_starting_539_Sample)
        WPIPE_Block0_starting_539_update_start_ <-& (WPIPE_Block0_starting_539_sample_completed_)
        WPIPE_Block0_starting_539_update_start_ &-> (WPIPE_Block0_starting_539_Update)
        WPIPE_Block0_starting_539_update_completed_ <-& (WPIPE_Block0_starting_539_Update)
        // start: Forward dependencies from call8 to transition WPIPE_Block0_starting_539_sample_start_
        // done: Forward dependencies from call8 to transition WPIPE_Block0_starting_539_sample_start_
        // end:  		Block0_starting := call8 $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := call5 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 233
        // Source expression
        // call5
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_542_sample_start_] 
        $T[WPIPE_Block0_starting_542_sample_completed_] 
        $T[WPIPE_Block0_starting_542_update_start_] 
        $T[WPIPE_Block0_starting_542_update_completed_] 
        ;;[WPIPE_Block0_starting_542_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_542_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_542_sample_start_ &-> (WPIPE_Block0_starting_542_Sample)
        WPIPE_Block0_starting_542_sample_completed_ <-& (WPIPE_Block0_starting_542_Sample)
        WPIPE_Block0_starting_542_update_start_ <-& (WPIPE_Block0_starting_542_sample_completed_)
        WPIPE_Block0_starting_542_update_start_ &-> (WPIPE_Block0_starting_542_Update)
        WPIPE_Block0_starting_542_update_completed_ <-& (WPIPE_Block0_starting_542_Update)
        // start: Forward dependencies from call5 to transition WPIPE_Block0_starting_542_sample_start_
        // done: Forward dependencies from call5 to transition WPIPE_Block0_starting_542_sample_start_
        // end:  		Block0_starting := call5 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call2 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 234
        // Source expression
        // call2
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_545_sample_start_] 
        $T[WPIPE_Block1_starting_545_sample_completed_] 
        $T[WPIPE_Block1_starting_545_update_start_] 
        $T[WPIPE_Block1_starting_545_update_completed_] 
        ;;[WPIPE_Block1_starting_545_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_545_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_545_sample_start_ &-> (WPIPE_Block1_starting_545_Sample)
        WPIPE_Block1_starting_545_sample_completed_ <-& (WPIPE_Block1_starting_545_Sample)
        WPIPE_Block1_starting_545_update_start_ <-& (WPIPE_Block1_starting_545_sample_completed_)
        WPIPE_Block1_starting_545_update_start_ &-> (WPIPE_Block1_starting_545_Update)
        WPIPE_Block1_starting_545_update_completed_ <-& (WPIPE_Block1_starting_545_Update)
        // start: Forward dependencies from call2 to transition WPIPE_Block1_starting_545_sample_start_
        // done: Forward dependencies from call2 to transition WPIPE_Block1_starting_545_sample_start_
        // end:  		Block1_starting := call2 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call3 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 235
        // Source expression
        // call3
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_548_sample_start_] 
        $T[WPIPE_Block1_starting_548_sample_completed_] 
        $T[WPIPE_Block1_starting_548_update_start_] 
        $T[WPIPE_Block1_starting_548_update_completed_] 
        ;;[WPIPE_Block1_starting_548_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_548_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_548_sample_start_ &-> (WPIPE_Block1_starting_548_Sample)
        WPIPE_Block1_starting_548_sample_completed_ <-& (WPIPE_Block1_starting_548_Sample)
        WPIPE_Block1_starting_548_update_start_ <-& (WPIPE_Block1_starting_548_sample_completed_)
        WPIPE_Block1_starting_548_update_start_ &-> (WPIPE_Block1_starting_548_Update)
        WPIPE_Block1_starting_548_update_completed_ <-& (WPIPE_Block1_starting_548_Update)
        // start: Forward dependencies from call3 to transition WPIPE_Block1_starting_548_sample_start_
        // done: Forward dependencies from call3 to transition WPIPE_Block1_starting_548_sample_start_
        // end:  		Block1_starting := call3 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call4 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 236
        // Source expression
        // call4
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_551_sample_start_] 
        $T[WPIPE_Block1_starting_551_sample_completed_] 
        $T[WPIPE_Block1_starting_551_update_start_] 
        $T[WPIPE_Block1_starting_551_update_completed_] 
        ;;[WPIPE_Block1_starting_551_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_551_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_551_sample_start_ &-> (WPIPE_Block1_starting_551_Sample)
        WPIPE_Block1_starting_551_sample_completed_ <-& (WPIPE_Block1_starting_551_Sample)
        WPIPE_Block1_starting_551_update_start_ <-& (WPIPE_Block1_starting_551_sample_completed_)
        WPIPE_Block1_starting_551_update_start_ &-> (WPIPE_Block1_starting_551_Update)
        WPIPE_Block1_starting_551_update_completed_ <-& (WPIPE_Block1_starting_551_Update)
        // start: Forward dependencies from call4 to transition WPIPE_Block1_starting_551_sample_start_
        // done: Forward dependencies from call4 to transition WPIPE_Block1_starting_551_sample_start_
        // end:  		Block1_starting := call4 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call6 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 237
        // Source expression
        // call6
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_554_sample_start_] 
        $T[WPIPE_Block1_starting_554_sample_completed_] 
        $T[WPIPE_Block1_starting_554_update_start_] 
        $T[WPIPE_Block1_starting_554_update_completed_] 
        ;;[WPIPE_Block1_starting_554_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_554_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_554_sample_start_ &-> (WPIPE_Block1_starting_554_Sample)
        WPIPE_Block1_starting_554_sample_completed_ <-& (WPIPE_Block1_starting_554_Sample)
        WPIPE_Block1_starting_554_update_start_ <-& (WPIPE_Block1_starting_554_sample_completed_)
        WPIPE_Block1_starting_554_update_start_ &-> (WPIPE_Block1_starting_554_Update)
        WPIPE_Block1_starting_554_update_completed_ <-& (WPIPE_Block1_starting_554_Update)
        // start: Forward dependencies from call6 to transition WPIPE_Block1_starting_554_sample_start_
        // done: Forward dependencies from call6 to transition WPIPE_Block1_starting_554_sample_start_
        // end:  		Block1_starting := call6 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call7 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 238
        // Source expression
        // call7
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_557_sample_start_] 
        $T[WPIPE_Block1_starting_557_sample_completed_] 
        $T[WPIPE_Block1_starting_557_update_start_] 
        $T[WPIPE_Block1_starting_557_update_completed_] 
        ;;[WPIPE_Block1_starting_557_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_557_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_557_sample_start_ &-> (WPIPE_Block1_starting_557_Sample)
        WPIPE_Block1_starting_557_sample_completed_ <-& (WPIPE_Block1_starting_557_Sample)
        WPIPE_Block1_starting_557_update_start_ <-& (WPIPE_Block1_starting_557_sample_completed_)
        WPIPE_Block1_starting_557_update_start_ &-> (WPIPE_Block1_starting_557_Update)
        WPIPE_Block1_starting_557_update_completed_ <-& (WPIPE_Block1_starting_557_Update)
        // start: Forward dependencies from call7 to transition WPIPE_Block1_starting_557_sample_start_
        // done: Forward dependencies from call7 to transition WPIPE_Block1_starting_557_sample_start_
        // end:  		Block1_starting := call7 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call8 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 239
        // Source expression
        // call8
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_560_sample_start_] 
        $T[WPIPE_Block1_starting_560_sample_completed_] 
        $T[WPIPE_Block1_starting_560_update_start_] 
        $T[WPIPE_Block1_starting_560_update_completed_] 
        ;;[WPIPE_Block1_starting_560_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_560_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_560_sample_start_ &-> (WPIPE_Block1_starting_560_Sample)
        WPIPE_Block1_starting_560_sample_completed_ <-& (WPIPE_Block1_starting_560_Sample)
        WPIPE_Block1_starting_560_update_start_ <-& (WPIPE_Block1_starting_560_sample_completed_)
        WPIPE_Block1_starting_560_update_start_ &-> (WPIPE_Block1_starting_560_Update)
        WPIPE_Block1_starting_560_update_completed_ <-& (WPIPE_Block1_starting_560_Update)
        // start: Forward dependencies from call8 to transition WPIPE_Block1_starting_560_sample_start_
        // done: Forward dependencies from call8 to transition WPIPE_Block1_starting_560_sample_start_
        // end:  		Block1_starting := call8 $buffering 1// bits of buffering = 8. 
        // start:  		Block1_starting := call5 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 240
        // Source expression
        // call5
        // Target expression
        // (as target) Block1_starting
        $T[WPIPE_Block1_starting_563_sample_start_] 
        $T[WPIPE_Block1_starting_563_sample_completed_] 
        $T[WPIPE_Block1_starting_563_update_start_] 
        $T[WPIPE_Block1_starting_563_update_completed_] 
        ;;[WPIPE_Block1_starting_563_Sample] 
        {
          // pipe write sample-start Block1_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_starting_563_Update] 
        {
          // pipe write update (complete) Block1_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block1_starting_563_sample_start_ &-> (WPIPE_Block1_starting_563_Sample)
        WPIPE_Block1_starting_563_sample_completed_ <-& (WPIPE_Block1_starting_563_Sample)
        WPIPE_Block1_starting_563_update_start_ <-& (WPIPE_Block1_starting_563_sample_completed_)
        WPIPE_Block1_starting_563_update_start_ &-> (WPIPE_Block1_starting_563_Update)
        WPIPE_Block1_starting_563_update_completed_ <-& (WPIPE_Block1_starting_563_Update)
        // start: Forward dependencies from call5 to transition WPIPE_Block1_starting_563_sample_start_
        // done: Forward dependencies from call5 to transition WPIPE_Block1_starting_563_sample_start_
        // end:  		Block1_starting := call5 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call2 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 241
        // Source expression
        // call2
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_566_sample_start_] 
        $T[WPIPE_Block2_starting_566_sample_completed_] 
        $T[WPIPE_Block2_starting_566_update_start_] 
        $T[WPIPE_Block2_starting_566_update_completed_] 
        ;;[WPIPE_Block2_starting_566_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_566_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_566_sample_start_ &-> (WPIPE_Block2_starting_566_Sample)
        WPIPE_Block2_starting_566_sample_completed_ <-& (WPIPE_Block2_starting_566_Sample)
        WPIPE_Block2_starting_566_update_start_ <-& (WPIPE_Block2_starting_566_sample_completed_)
        WPIPE_Block2_starting_566_update_start_ &-> (WPIPE_Block2_starting_566_Update)
        WPIPE_Block2_starting_566_update_completed_ <-& (WPIPE_Block2_starting_566_Update)
        // start: Forward dependencies from call2 to transition WPIPE_Block2_starting_566_sample_start_
        // done: Forward dependencies from call2 to transition WPIPE_Block2_starting_566_sample_start_
        // end:  		Block2_starting := call2 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call3 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 242
        // Source expression
        // call3
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_569_sample_start_] 
        $T[WPIPE_Block2_starting_569_sample_completed_] 
        $T[WPIPE_Block2_starting_569_update_start_] 
        $T[WPIPE_Block2_starting_569_update_completed_] 
        ;;[WPIPE_Block2_starting_569_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_569_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_569_sample_start_ &-> (WPIPE_Block2_starting_569_Sample)
        WPIPE_Block2_starting_569_sample_completed_ <-& (WPIPE_Block2_starting_569_Sample)
        WPIPE_Block2_starting_569_update_start_ <-& (WPIPE_Block2_starting_569_sample_completed_)
        WPIPE_Block2_starting_569_update_start_ &-> (WPIPE_Block2_starting_569_Update)
        WPIPE_Block2_starting_569_update_completed_ <-& (WPIPE_Block2_starting_569_Update)
        // start: Forward dependencies from call3 to transition WPIPE_Block2_starting_569_sample_start_
        // done: Forward dependencies from call3 to transition WPIPE_Block2_starting_569_sample_start_
        // end:  		Block2_starting := call3 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call4 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 243
        // Source expression
        // call4
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_572_sample_start_] 
        $T[WPIPE_Block2_starting_572_sample_completed_] 
        $T[WPIPE_Block2_starting_572_update_start_] 
        $T[WPIPE_Block2_starting_572_update_completed_] 
        ;;[WPIPE_Block2_starting_572_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_572_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_572_sample_start_ &-> (WPIPE_Block2_starting_572_Sample)
        WPIPE_Block2_starting_572_sample_completed_ <-& (WPIPE_Block2_starting_572_Sample)
        WPIPE_Block2_starting_572_update_start_ <-& (WPIPE_Block2_starting_572_sample_completed_)
        WPIPE_Block2_starting_572_update_start_ &-> (WPIPE_Block2_starting_572_Update)
        WPIPE_Block2_starting_572_update_completed_ <-& (WPIPE_Block2_starting_572_Update)
        // start: Forward dependencies from call4 to transition WPIPE_Block2_starting_572_sample_start_
        // done: Forward dependencies from call4 to transition WPIPE_Block2_starting_572_sample_start_
        // end:  		Block2_starting := call4 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call6 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 244
        // Source expression
        // call6
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_575_sample_start_] 
        $T[WPIPE_Block2_starting_575_sample_completed_] 
        $T[WPIPE_Block2_starting_575_update_start_] 
        $T[WPIPE_Block2_starting_575_update_completed_] 
        ;;[WPIPE_Block2_starting_575_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_575_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_575_sample_start_ &-> (WPIPE_Block2_starting_575_Sample)
        WPIPE_Block2_starting_575_sample_completed_ <-& (WPIPE_Block2_starting_575_Sample)
        WPIPE_Block2_starting_575_update_start_ <-& (WPIPE_Block2_starting_575_sample_completed_)
        WPIPE_Block2_starting_575_update_start_ &-> (WPIPE_Block2_starting_575_Update)
        WPIPE_Block2_starting_575_update_completed_ <-& (WPIPE_Block2_starting_575_Update)
        // start: Forward dependencies from call6 to transition WPIPE_Block2_starting_575_sample_start_
        // done: Forward dependencies from call6 to transition WPIPE_Block2_starting_575_sample_start_
        // end:  		Block2_starting := call6 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call7 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 245
        // Source expression
        // call7
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_578_sample_start_] 
        $T[WPIPE_Block2_starting_578_sample_completed_] 
        $T[WPIPE_Block2_starting_578_update_start_] 
        $T[WPIPE_Block2_starting_578_update_completed_] 
        ;;[WPIPE_Block2_starting_578_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_578_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_578_sample_start_ &-> (WPIPE_Block2_starting_578_Sample)
        WPIPE_Block2_starting_578_sample_completed_ <-& (WPIPE_Block2_starting_578_Sample)
        WPIPE_Block2_starting_578_update_start_ <-& (WPIPE_Block2_starting_578_sample_completed_)
        WPIPE_Block2_starting_578_update_start_ &-> (WPIPE_Block2_starting_578_Update)
        WPIPE_Block2_starting_578_update_completed_ <-& (WPIPE_Block2_starting_578_Update)
        // start: Forward dependencies from call7 to transition WPIPE_Block2_starting_578_sample_start_
        // done: Forward dependencies from call7 to transition WPIPE_Block2_starting_578_sample_start_
        // end:  		Block2_starting := call7 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call8 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 246
        // Source expression
        // call8
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_581_sample_start_] 
        $T[WPIPE_Block2_starting_581_sample_completed_] 
        $T[WPIPE_Block2_starting_581_update_start_] 
        $T[WPIPE_Block2_starting_581_update_completed_] 
        ;;[WPIPE_Block2_starting_581_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_581_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_581_sample_start_ &-> (WPIPE_Block2_starting_581_Sample)
        WPIPE_Block2_starting_581_sample_completed_ <-& (WPIPE_Block2_starting_581_Sample)
        WPIPE_Block2_starting_581_update_start_ <-& (WPIPE_Block2_starting_581_sample_completed_)
        WPIPE_Block2_starting_581_update_start_ &-> (WPIPE_Block2_starting_581_Update)
        WPIPE_Block2_starting_581_update_completed_ <-& (WPIPE_Block2_starting_581_Update)
        // start: Forward dependencies from call8 to transition WPIPE_Block2_starting_581_sample_start_
        // done: Forward dependencies from call8 to transition WPIPE_Block2_starting_581_sample_start_
        // end:  		Block2_starting := call8 $buffering 1// bits of buffering = 8. 
        // start:  		Block2_starting := call5 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 247
        // Source expression
        // call5
        // Target expression
        // (as target) Block2_starting
        $T[WPIPE_Block2_starting_584_sample_start_] 
        $T[WPIPE_Block2_starting_584_sample_completed_] 
        $T[WPIPE_Block2_starting_584_update_start_] 
        $T[WPIPE_Block2_starting_584_update_completed_] 
        ;;[WPIPE_Block2_starting_584_Sample] 
        {
          // pipe write sample-start Block2_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_starting_584_Update] 
        {
          // pipe write update (complete) Block2_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block2_starting_584_sample_start_ &-> (WPIPE_Block2_starting_584_Sample)
        WPIPE_Block2_starting_584_sample_completed_ <-& (WPIPE_Block2_starting_584_Sample)
        WPIPE_Block2_starting_584_update_start_ <-& (WPIPE_Block2_starting_584_sample_completed_)
        WPIPE_Block2_starting_584_update_start_ &-> (WPIPE_Block2_starting_584_Update)
        WPIPE_Block2_starting_584_update_completed_ <-& (WPIPE_Block2_starting_584_Update)
        // start: Forward dependencies from call5 to transition WPIPE_Block2_starting_584_sample_start_
        // done: Forward dependencies from call5 to transition WPIPE_Block2_starting_584_sample_start_
        // end:  		Block2_starting := call5 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call2 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 248
        // Source expression
        // call2
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_587_sample_start_] 
        $T[WPIPE_Block3_starting_587_sample_completed_] 
        $T[WPIPE_Block3_starting_587_update_start_] 
        $T[WPIPE_Block3_starting_587_update_completed_] 
        ;;[WPIPE_Block3_starting_587_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_587_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_587_sample_start_ &-> (WPIPE_Block3_starting_587_Sample)
        WPIPE_Block3_starting_587_sample_completed_ <-& (WPIPE_Block3_starting_587_Sample)
        WPIPE_Block3_starting_587_update_start_ <-& (WPIPE_Block3_starting_587_sample_completed_)
        WPIPE_Block3_starting_587_update_start_ &-> (WPIPE_Block3_starting_587_Update)
        WPIPE_Block3_starting_587_update_completed_ <-& (WPIPE_Block3_starting_587_Update)
        // start: Forward dependencies from call2 to transition WPIPE_Block3_starting_587_sample_start_
        // done: Forward dependencies from call2 to transition WPIPE_Block3_starting_587_sample_start_
        // end:  		Block3_starting := call2 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call3 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 249
        // Source expression
        // call3
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_590_sample_start_] 
        $T[WPIPE_Block3_starting_590_sample_completed_] 
        $T[WPIPE_Block3_starting_590_update_start_] 
        $T[WPIPE_Block3_starting_590_update_completed_] 
        ;;[WPIPE_Block3_starting_590_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_590_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_590_sample_start_ &-> (WPIPE_Block3_starting_590_Sample)
        WPIPE_Block3_starting_590_sample_completed_ <-& (WPIPE_Block3_starting_590_Sample)
        WPIPE_Block3_starting_590_update_start_ <-& (WPIPE_Block3_starting_590_sample_completed_)
        WPIPE_Block3_starting_590_update_start_ &-> (WPIPE_Block3_starting_590_Update)
        WPIPE_Block3_starting_590_update_completed_ <-& (WPIPE_Block3_starting_590_Update)
        // start: Forward dependencies from call3 to transition WPIPE_Block3_starting_590_sample_start_
        // done: Forward dependencies from call3 to transition WPIPE_Block3_starting_590_sample_start_
        // end:  		Block3_starting := call3 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call4 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 250
        // Source expression
        // call4
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_593_sample_start_] 
        $T[WPIPE_Block3_starting_593_sample_completed_] 
        $T[WPIPE_Block3_starting_593_update_start_] 
        $T[WPIPE_Block3_starting_593_update_completed_] 
        ;;[WPIPE_Block3_starting_593_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_593_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_593_sample_start_ &-> (WPIPE_Block3_starting_593_Sample)
        WPIPE_Block3_starting_593_sample_completed_ <-& (WPIPE_Block3_starting_593_Sample)
        WPIPE_Block3_starting_593_update_start_ <-& (WPIPE_Block3_starting_593_sample_completed_)
        WPIPE_Block3_starting_593_update_start_ &-> (WPIPE_Block3_starting_593_Update)
        WPIPE_Block3_starting_593_update_completed_ <-& (WPIPE_Block3_starting_593_Update)
        // start: Forward dependencies from call4 to transition WPIPE_Block3_starting_593_sample_start_
        // done: Forward dependencies from call4 to transition WPIPE_Block3_starting_593_sample_start_
        // end:  		Block3_starting := call4 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call6 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 251
        // Source expression
        // call6
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_596_sample_start_] 
        $T[WPIPE_Block3_starting_596_sample_completed_] 
        $T[WPIPE_Block3_starting_596_update_start_] 
        $T[WPIPE_Block3_starting_596_update_completed_] 
        ;;[WPIPE_Block3_starting_596_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_596_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_596_sample_start_ &-> (WPIPE_Block3_starting_596_Sample)
        WPIPE_Block3_starting_596_sample_completed_ <-& (WPIPE_Block3_starting_596_Sample)
        WPIPE_Block3_starting_596_update_start_ <-& (WPIPE_Block3_starting_596_sample_completed_)
        WPIPE_Block3_starting_596_update_start_ &-> (WPIPE_Block3_starting_596_Update)
        WPIPE_Block3_starting_596_update_completed_ <-& (WPIPE_Block3_starting_596_Update)
        // start: Forward dependencies from call6 to transition WPIPE_Block3_starting_596_sample_start_
        // done: Forward dependencies from call6 to transition WPIPE_Block3_starting_596_sample_start_
        // end:  		Block3_starting := call6 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call7 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 252
        // Source expression
        // call7
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_599_sample_start_] 
        $T[WPIPE_Block3_starting_599_sample_completed_] 
        $T[WPIPE_Block3_starting_599_update_start_] 
        $T[WPIPE_Block3_starting_599_update_completed_] 
        ;;[WPIPE_Block3_starting_599_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_599_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_599_sample_start_ &-> (WPIPE_Block3_starting_599_Sample)
        WPIPE_Block3_starting_599_sample_completed_ <-& (WPIPE_Block3_starting_599_Sample)
        WPIPE_Block3_starting_599_update_start_ <-& (WPIPE_Block3_starting_599_sample_completed_)
        WPIPE_Block3_starting_599_update_start_ &-> (WPIPE_Block3_starting_599_Update)
        WPIPE_Block3_starting_599_update_completed_ <-& (WPIPE_Block3_starting_599_Update)
        // start: Forward dependencies from call7 to transition WPIPE_Block3_starting_599_sample_start_
        // done: Forward dependencies from call7 to transition WPIPE_Block3_starting_599_sample_start_
        // end:  		Block3_starting := call7 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call8 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 253
        // Source expression
        // call8
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_602_sample_start_] 
        $T[WPIPE_Block3_starting_602_sample_completed_] 
        $T[WPIPE_Block3_starting_602_update_start_] 
        $T[WPIPE_Block3_starting_602_update_completed_] 
        ;;[WPIPE_Block3_starting_602_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_602_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_602_sample_start_ &-> (WPIPE_Block3_starting_602_Sample)
        WPIPE_Block3_starting_602_sample_completed_ <-& (WPIPE_Block3_starting_602_Sample)
        WPIPE_Block3_starting_602_update_start_ <-& (WPIPE_Block3_starting_602_sample_completed_)
        WPIPE_Block3_starting_602_update_start_ &-> (WPIPE_Block3_starting_602_Update)
        WPIPE_Block3_starting_602_update_completed_ <-& (WPIPE_Block3_starting_602_Update)
        // start: Forward dependencies from call8 to transition WPIPE_Block3_starting_602_sample_start_
        // done: Forward dependencies from call8 to transition WPIPE_Block3_starting_602_sample_start_
        // end:  		Block3_starting := call8 $buffering 1// bits of buffering = 8. 
        // start:  		Block3_starting := call5 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 254
        // Source expression
        // call5
        // Target expression
        // (as target) Block3_starting
        $T[WPIPE_Block3_starting_605_sample_start_] 
        $T[WPIPE_Block3_starting_605_sample_completed_] 
        $T[WPIPE_Block3_starting_605_update_start_] 
        $T[WPIPE_Block3_starting_605_update_completed_] 
        ;;[WPIPE_Block3_starting_605_Sample] 
        {
          // pipe write sample-start Block3_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_starting_605_Update] 
        {
          // pipe write update (complete) Block3_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block3_starting_605_sample_start_ &-> (WPIPE_Block3_starting_605_Sample)
        WPIPE_Block3_starting_605_sample_completed_ <-& (WPIPE_Block3_starting_605_Sample)
        WPIPE_Block3_starting_605_update_start_ <-& (WPIPE_Block3_starting_605_sample_completed_)
        WPIPE_Block3_starting_605_update_start_ &-> (WPIPE_Block3_starting_605_Update)
        WPIPE_Block3_starting_605_update_completed_ <-& (WPIPE_Block3_starting_605_Update)
        // start: Forward dependencies from call5 to transition WPIPE_Block3_starting_605_sample_start_
        // done: Forward dependencies from call5 to transition WPIPE_Block3_starting_605_sample_start_
        // end:  		Block3_starting := call5 $buffering 1// bits of buffering = 8. 
        // start:  		call97 := Block0_complete $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 255
        // Source expression
        // Block0_complete
        $T[RPIPE_Block0_complete_609_sample_start_] 
        $T[RPIPE_Block0_complete_609_sample_completed_] 
        $T[RPIPE_Block0_complete_609_update_start_] 
        $T[RPIPE_Block0_complete_609_update_completed_] 
        ;;[RPIPE_Block0_complete_609_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_complete_609_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_complete_609_sample_start_ &-> (RPIPE_Block0_complete_609_Sample)
        RPIPE_Block0_complete_609_sample_completed_ <-& (RPIPE_Block0_complete_609_Sample)
        RPIPE_Block0_complete_609_update_start_ <-& (RPIPE_Block0_complete_609_sample_completed_)
        RPIPE_Block0_complete_609_update_start_ &-> (RPIPE_Block0_complete_609_Update)
        RPIPE_Block0_complete_609_update_completed_ <-& (RPIPE_Block0_complete_609_Update)
        // Target expression
        // (as target) call97
        // start: WAR dependencies for call97
        // done: WAR dependencies for call97
        // end:  		call97 := Block0_complete $buffering 1// bits of buffering = 8. 
        // start:  		call100 := Block1_complete $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 256
        // Source expression
        // Block1_complete
        $T[RPIPE_Block1_complete_612_sample_start_] 
        $T[RPIPE_Block1_complete_612_sample_completed_] 
        $T[RPIPE_Block1_complete_612_update_start_] 
        $T[RPIPE_Block1_complete_612_update_completed_] 
        ;;[RPIPE_Block1_complete_612_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_complete_612_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_complete_612_sample_start_ &-> (RPIPE_Block1_complete_612_Sample)
        RPIPE_Block1_complete_612_sample_completed_ <-& (RPIPE_Block1_complete_612_Sample)
        RPIPE_Block1_complete_612_update_start_ <-& (RPIPE_Block1_complete_612_sample_completed_)
        RPIPE_Block1_complete_612_update_start_ &-> (RPIPE_Block1_complete_612_Update)
        RPIPE_Block1_complete_612_update_completed_ <-& (RPIPE_Block1_complete_612_Update)
        // Target expression
        // (as target) call100
        // start: WAR dependencies for call100
        // done: WAR dependencies for call100
        // end:  		call100 := Block1_complete $buffering 1// bits of buffering = 8. 
        // start:  		call103 := Block2_complete $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 257
        // Source expression
        // Block2_complete
        $T[RPIPE_Block2_complete_615_sample_start_] 
        $T[RPIPE_Block2_complete_615_sample_completed_] 
        $T[RPIPE_Block2_complete_615_update_start_] 
        $T[RPIPE_Block2_complete_615_update_completed_] 
        ;;[RPIPE_Block2_complete_615_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_complete_615_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_complete_615_sample_start_ &-> (RPIPE_Block2_complete_615_Sample)
        RPIPE_Block2_complete_615_sample_completed_ <-& (RPIPE_Block2_complete_615_Sample)
        RPIPE_Block2_complete_615_update_start_ <-& (RPIPE_Block2_complete_615_sample_completed_)
        RPIPE_Block2_complete_615_update_start_ &-> (RPIPE_Block2_complete_615_Update)
        RPIPE_Block2_complete_615_update_completed_ <-& (RPIPE_Block2_complete_615_Update)
        // Target expression
        // (as target) call103
        // start: WAR dependencies for call103
        // done: WAR dependencies for call103
        // end:  		call103 := Block2_complete $buffering 1// bits of buffering = 8. 
        // start:  		call106 := Block3_complete $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 258
        // Source expression
        // Block3_complete
        $T[RPIPE_Block3_complete_618_sample_start_] 
        $T[RPIPE_Block3_complete_618_sample_completed_] 
        $T[RPIPE_Block3_complete_618_update_start_] 
        $T[RPIPE_Block3_complete_618_update_completed_] 
        ;;[RPIPE_Block3_complete_618_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_complete_618_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_complete_618_sample_start_ &-> (RPIPE_Block3_complete_618_Sample)
        RPIPE_Block3_complete_618_sample_completed_ <-& (RPIPE_Block3_complete_618_Sample)
        RPIPE_Block3_complete_618_update_start_ <-& (RPIPE_Block3_complete_618_sample_completed_)
        RPIPE_Block3_complete_618_update_start_ &-> (RPIPE_Block3_complete_618_Update)
        RPIPE_Block3_complete_618_update_completed_ <-& (RPIPE_Block3_complete_618_Update)
        // Target expression
        // (as target) call106
        // start: WAR dependencies for call106
        // done: WAR dependencies for call106
        // end:  		call106 := Block3_complete $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  call_stmt_517 load
        // pipe read/write dependencies for pipe Block0_starting
        // read-dependencies for pipe Block0_starting
        // write-dependencies for pipe Block0_starting
        WPIPE_Block0_starting_527_sample_start_ <-& (WPIPE_Block0_starting_524_update_completed_)
        WPIPE_Block0_starting_530_sample_start_ <-& (WPIPE_Block0_starting_527_update_completed_)
        WPIPE_Block0_starting_533_sample_start_ <-& (WPIPE_Block0_starting_530_update_completed_)
        WPIPE_Block0_starting_536_sample_start_ <-& (WPIPE_Block0_starting_533_update_completed_)
        WPIPE_Block0_starting_539_sample_start_ <-& (WPIPE_Block0_starting_536_update_completed_)
        WPIPE_Block0_starting_542_sample_start_ <-& (WPIPE_Block0_starting_539_update_completed_)
        // signal write dependencies for Block0_starting
        // pipe read/write dependencies for pipe Block0_complete
        // read-dependencies for pipe Block0_complete
        // write-dependencies for pipe Block0_complete
        // signal write dependencies for Block0_complete
        // pipe read/write dependencies for pipe Block2_starting
        // read-dependencies for pipe Block2_starting
        // write-dependencies for pipe Block2_starting
        WPIPE_Block2_starting_569_sample_start_ <-& (WPIPE_Block2_starting_566_update_completed_)
        WPIPE_Block2_starting_572_sample_start_ <-& (WPIPE_Block2_starting_569_update_completed_)
        WPIPE_Block2_starting_575_sample_start_ <-& (WPIPE_Block2_starting_572_update_completed_)
        WPIPE_Block2_starting_578_sample_start_ <-& (WPIPE_Block2_starting_575_update_completed_)
        WPIPE_Block2_starting_581_sample_start_ <-& (WPIPE_Block2_starting_578_update_completed_)
        WPIPE_Block2_starting_584_sample_start_ <-& (WPIPE_Block2_starting_581_update_completed_)
        // signal write dependencies for Block2_starting
        // pipe read/write dependencies for pipe Block1_complete
        // read-dependencies for pipe Block1_complete
        // write-dependencies for pipe Block1_complete
        // signal write dependencies for Block1_complete
        // pipe read/write dependencies for pipe Block1_starting
        // read-dependencies for pipe Block1_starting
        // write-dependencies for pipe Block1_starting
        WPIPE_Block1_starting_548_sample_start_ <-& (WPIPE_Block1_starting_545_update_completed_)
        WPIPE_Block1_starting_551_sample_start_ <-& (WPIPE_Block1_starting_548_update_completed_)
        WPIPE_Block1_starting_554_sample_start_ <-& (WPIPE_Block1_starting_551_update_completed_)
        WPIPE_Block1_starting_557_sample_start_ <-& (WPIPE_Block1_starting_554_update_completed_)
        WPIPE_Block1_starting_560_sample_start_ <-& (WPIPE_Block1_starting_557_update_completed_)
        WPIPE_Block1_starting_563_sample_start_ <-& (WPIPE_Block1_starting_560_update_completed_)
        // signal write dependencies for Block1_starting
        // pipe read/write dependencies for pipe Block2_complete
        // read-dependencies for pipe Block2_complete
        // write-dependencies for pipe Block2_complete
        // signal write dependencies for Block2_complete
        // pipe read/write dependencies for pipe Block3_complete
        // read-dependencies for pipe Block3_complete
        // write-dependencies for pipe Block3_complete
        // signal write dependencies for Block3_complete
        // pipe read/write dependencies for pipe Block3_starting
        // read-dependencies for pipe Block3_starting
        // write-dependencies for pipe Block3_starting
        WPIPE_Block3_starting_590_sample_start_ <-& (WPIPE_Block3_starting_587_update_completed_)
        WPIPE_Block3_starting_593_sample_start_ <-& (WPIPE_Block3_starting_590_update_completed_)
        WPIPE_Block3_starting_596_sample_start_ <-& (WPIPE_Block3_starting_593_update_completed_)
        WPIPE_Block3_starting_599_sample_start_ <-& (WPIPE_Block3_starting_596_update_completed_)
        WPIPE_Block3_starting_602_sample_start_ <-& (WPIPE_Block3_starting_599_update_completed_)
        WPIPE_Block3_starting_605_sample_start_ <-& (WPIPE_Block3_starting_602_update_completed_)
        // signal write dependencies for Block3_starting
      }
      call_stmt_517_to_assign_stmt_619__entry__ |-> (call_stmt_517_to_assign_stmt_619)
      call_stmt_517_to_assign_stmt_619__exit__ <-| (call_stmt_517_to_assign_stmt_619)
      ::[call_stmt_622_to_assign_stmt_635] 
      {
        // start: 		$call timer () (call109 ) 
        //  file prog.linked.opt.aa, line 260
        $T[call_stmt_622_sample_start_] 
        $T[call_stmt_622_sample_completed_] 
        $T[call_stmt_622_update_start_] 
        $T[call_stmt_622_update_completed_] 
        ;;[call_stmt_622_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_622_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_622_sample_start_ &-> (call_stmt_622_Sample)
        call_stmt_622_sample_completed_ <-& (call_stmt_622_Sample)
        call_stmt_622_sample_completed_ &-> ($null)
        call_stmt_622_update_start_ &-> (call_stmt_622_Update)
        call_stmt_622_update_completed_ <-& (call_stmt_622_Update)
        // Call output argument 0
        // (as target) call109
        // start: WAR dependencies for call109
        // done: WAR dependencies for call109
        // end: 		$call timer () (call109 ) 
        // start:  		conv110 := ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 261
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) )
        $T[type_cast_626_sample_start_] 
        $T[type_cast_626_sample_completed_] 
        $T[type_cast_626_update_start_] 
        $T[type_cast_626_update_completed_] 
        // ($cast ($int<64>) call109 )
        // call109
        // start: Forward dependencies from ($cast ($int<64>) call109 ) to transition type_cast_626_sample_start_
        type_cast_626_sample_start_ <-& (call_stmt_622_update_completed_)
        // done: Forward dependencies from ($cast ($int<64>) call109 ) to transition type_cast_626_sample_start_
        ;;[type_cast_626_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_626_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_626_sample_start_ &-> (type_cast_626_Sample)
        type_cast_626_sample_completed_ <-& (type_cast_626_Sample)
        type_cast_626_sample_completed_ &-> ($null)
        type_cast_626_update_start_ &-> (type_cast_626_Update)
        type_cast_626_update_completed_ <-& (type_cast_626_Update)
        // Target expression
        // (as target) conv110
        // start: WAR dependencies for conv110
        // done: WAR dependencies for conv110
        // end:  		conv110 := ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for sub
        // start:  		$volatile sub := (conv110 - conv67) $buffering 1
        //  file prog.linked.opt.aa, line 262
        // volatile! 
        // Source expression
        // (conv110 - conv67)
        // conv110
        // conv67
        // Target expression
        // (as target) sub
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
        // done: WAR dependencies for sub
        // end:  		$volatile sub := (conv110 - conv67) $buffering 1
        // start:  		elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 263
        // Source expression
        // sub
        // Target expression
        // (as target) elapsed_time_pipe
        $T[WPIPE_elapsed_time_pipe_633_sample_start_] 
        $T[WPIPE_elapsed_time_pipe_633_sample_completed_] 
        $T[WPIPE_elapsed_time_pipe_633_update_start_] 
        $T[WPIPE_elapsed_time_pipe_633_update_completed_] 
        ;;[WPIPE_elapsed_time_pipe_633_Sample] 
        {
          // pipe write sample-start elapsed_time_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_elapsed_time_pipe_633_Update] 
        {
          // pipe write update (complete) elapsed_time_pipe
          $T [req] $T [ack] 
        }
        WPIPE_elapsed_time_pipe_633_sample_start_ &-> (WPIPE_elapsed_time_pipe_633_Sample)
        WPIPE_elapsed_time_pipe_633_sample_completed_ <-& (WPIPE_elapsed_time_pipe_633_Sample)
        WPIPE_elapsed_time_pipe_633_update_start_ <-& (WPIPE_elapsed_time_pipe_633_sample_completed_)
        WPIPE_elapsed_time_pipe_633_update_start_ &-> (WPIPE_elapsed_time_pipe_633_Update)
        WPIPE_elapsed_time_pipe_633_update_completed_ <-& (WPIPE_elapsed_time_pipe_633_Update)
        // start: Forward dependencies from sub to transition WPIPE_elapsed_time_pipe_633_sample_start_
        WPIPE_elapsed_time_pipe_633_sample_start_ <-& (type_cast_626_update_completed_)
        // done: Forward dependencies from sub to transition WPIPE_elapsed_time_pipe_633_sample_start_
        // end:  		elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  call_stmt_622 load
        // pipe read/write dependencies for pipe elapsed_time_pipe
        // read-dependencies for pipe elapsed_time_pipe
        // write-dependencies for pipe elapsed_time_pipe
        // signal write dependencies for elapsed_time_pipe
      }
      call_stmt_622_to_assign_stmt_635__entry__ |-> (call_stmt_622_to_assign_stmt_635)
      call_stmt_622_to_assign_stmt_635__exit__ <-| (call_stmt_622_to_assign_stmt_635)
      ::[assign_stmt_640_to_call_stmt_660] 
      {
        // start:  		conv116 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 265
        // Source expression
        // ($cast ($uint<32>) call6 )
        $T[type_cast_639_sample_start_] 
        $T[type_cast_639_sample_completed_] 
        $T[type_cast_639_update_start_] 
        $T[type_cast_639_update_completed_] 
        // call6
        // start: Forward dependencies from call6 to transition type_cast_639_sample_start_
        // done: Forward dependencies from call6 to transition type_cast_639_sample_start_
        ;;[type_cast_639_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_639_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_639_sample_start_ &-> (type_cast_639_Sample)
        type_cast_639_sample_completed_ <-& (type_cast_639_Sample)
        type_cast_639_sample_completed_ &-> ($null)
        type_cast_639_update_start_ &-> (type_cast_639_Update)
        type_cast_639_update_completed_ <-& (type_cast_639_Update)
        // Target expression
        // (as target) conv116
        // start: WAR dependencies for conv116
        // done: WAR dependencies for conv116
        // end:  		conv116 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv118 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 266
        // Source expression
        // ($cast ($uint<32>) call7 )
        $T[type_cast_643_sample_start_] 
        $T[type_cast_643_sample_completed_] 
        $T[type_cast_643_update_start_] 
        $T[type_cast_643_update_completed_] 
        // call7
        // start: Forward dependencies from call7 to transition type_cast_643_sample_start_
        // done: Forward dependencies from call7 to transition type_cast_643_sample_start_
        ;;[type_cast_643_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_643_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_643_sample_start_ &-> (type_cast_643_Sample)
        type_cast_643_sample_completed_ <-& (type_cast_643_Sample)
        type_cast_643_sample_completed_ &-> ($null)
        type_cast_643_update_start_ &-> (type_cast_643_Update)
        type_cast_643_update_completed_ <-& (type_cast_643_Update)
        // Target expression
        // (as target) conv118
        // start: WAR dependencies for conv118
        // done: WAR dependencies for conv118
        // end:  		conv118 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv121 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 267
        // Source expression
        // ($cast ($uint<32>) call8 )
        $T[type_cast_647_sample_start_] 
        $T[type_cast_647_sample_completed_] 
        $T[type_cast_647_update_start_] 
        $T[type_cast_647_update_completed_] 
        // call8
        // start: Forward dependencies from call8 to transition type_cast_647_sample_start_
        // done: Forward dependencies from call8 to transition type_cast_647_sample_start_
        ;;[type_cast_647_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_647_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_647_sample_start_ &-> (type_cast_647_Sample)
        type_cast_647_sample_completed_ <-& (type_cast_647_Sample)
        type_cast_647_sample_completed_ &-> ($null)
        type_cast_647_update_start_ &-> (type_cast_647_Update)
        type_cast_647_update_completed_ <-& (type_cast_647_Update)
        // Target expression
        // (as target) conv121
        // start: WAR dependencies for conv121
        // done: WAR dependencies for conv121
        // end:  		conv121 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul119
        // done: WAR dependencies for mul119
        // start:  		$volatile mul119 := (conv118 * conv116) $buffering 1
        //  file prog.linked.opt.aa, line 268
        // volatile! 
        // Source expression
        // (conv118 * conv116)
        // conv118
        // conv116
        // Target expression
        // (as target) mul119
        // start: WAR dependencies for mul119
        // done: WAR dependencies for mul119
        // end:  		$volatile mul119 := (conv118 * conv116) $buffering 1
        // start: WAR dependencies for mul122
        // done: WAR dependencies for mul122
        // start:  		$volatile mul122 := (mul119 * conv121) $buffering 1
        //  file prog.linked.opt.aa, line 269
        // volatile! 
        // Source expression
        // (mul119 * conv121)
        // mul119
        // conv121
        // Target expression
        // (as target) mul122
        // start: WAR dependencies for mul122
        // done: WAR dependencies for mul122
        // end:  		$volatile mul122 := (mul119 * conv121) $buffering 1
        // start: 		$call sendOutput (mul122 ) () 
        //  file prog.linked.opt.aa, line 270
        $T[call_stmt_660_sample_start_] 
        $T[call_stmt_660_sample_completed_] 
        $T[call_stmt_660_update_start_] 
        $T[call_stmt_660_update_completed_] 
        // Call input argument 0
        // mul122
        // start: Forward dependencies from mul122 to transition call_stmt_660_sample_start_
        call_stmt_660_sample_start_ <-& (type_cast_639_update_completed_)
        call_stmt_660_sample_start_ <-& (type_cast_643_update_completed_)
        call_stmt_660_sample_start_ <-& (type_cast_647_update_completed_)
        // done: Forward dependencies from mul122 to transition call_stmt_660_sample_start_
        ;;[call_stmt_660_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_660_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_660_sample_start_ &-> (call_stmt_660_Sample)
        call_stmt_660_sample_completed_ <-& (call_stmt_660_Sample)
        call_stmt_660_sample_completed_ &-> ($null)
        call_stmt_660_update_start_ &-> (call_stmt_660_Update)
        call_stmt_660_update_completed_ <-& (call_stmt_660_Update)
        // end: 		$call sendOutput (mul122 ) () 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  call_stmt_660 load
        // pipe read/write dependencies for pipe zeropad_output_pipe
        // read-dependencies for pipe zeropad_output_pipe
        // write-dependencies for pipe zeropad_output_pipe
        // signal write dependencies for zeropad_output_pipe
      }
      assign_stmt_640_to_call_stmt_660__entry__ |-> (assign_stmt_640_to_call_stmt_660)
      assign_stmt_640_to_call_stmt_660__exit__ <-| (assign_stmt_640_to_call_stmt_660)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 165
      ;;[merge_stmt_299_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_299__entry__ |-> (merge_stmt_299_dead_link)
      merge_stmt_299__exit__ <-| (merge_stmt_299_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 165  --------------------------
      ||[entry_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_bbx_xnph |-> (entry_bbx_xnph_PhiReq)
      $P [merge_stmt_299_PhiReqMerge] 
      merge_stmt_299_PhiReqMerge <-| ( entry_bbx_xnph_PhiReq )
      ||[merge_stmt_299_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_299_PhiReqMerge |-> (merge_stmt_299_PhiAck)
      merge_stmt_299__exit__  <-| (merge_stmt_299_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 165  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 176
      //---------------------   merge statement  file prog.linked.opt.aa, line 176  --------------------------
      ||[bbx_xnph_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_343] 
        {
          ||[phi_stmt_343_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_347_konst_delay_trans] $delay
          }
          $T [phi_stmt_343_req] 
        }
      }
      bbx_xnph_forx_xbody |-> (bbx_xnph_forx_xbody_PhiReq)
      ||[forx_xbody_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_343] 
        {
          ||[phi_stmt_343_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_349] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_343_req] 
        }
      }
      forx_xbody_forx_xbody |-> (forx_xbody_forx_xbody_PhiReq)
      $P [merge_stmt_342_PhiReqMerge] 
      merge_stmt_342_PhiReqMerge <-| ( bbx_xnph_forx_xbody_PhiReq  forx_xbody_forx_xbody_PhiReq )
      ||[merge_stmt_342_PhiAck] 
      {
        $T [phi_stmt_343_ack] 
      }
      merge_stmt_342_PhiReqMerge |-> (merge_stmt_342_PhiAck)
      merge_stmt_342__exit__  <-| (merge_stmt_342_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 176  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 219
      ;;[merge_stmt_512_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_512__entry__ |-> (merge_stmt_512_dead_link)
      merge_stmt_512__exit__ <-| (merge_stmt_512_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 219  --------------------------
      ||[forx_xbody_forx_xendx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody_forx_xendx_xloopexit |-> (forx_xbody_forx_xendx_xloopexit_PhiReq)
      $P [merge_stmt_512_PhiReqMerge] 
      merge_stmt_512_PhiReqMerge <-| ( forx_xbody_forx_xendx_xloopexit_PhiReq )
      ||[merge_stmt_512_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_512_PhiReqMerge |-> (merge_stmt_512_PhiAck)
      merge_stmt_512__exit__  <-| (merge_stmt_512_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 219  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 222
      //---------------------   merge statement  file prog.linked.opt.aa, line 222  --------------------------
      ||[entry_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_forx_xend |-> (entry_forx_xend_PhiReq)
      ||[forx_xendx_xloopexit_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xendx_xloopexit_forx_xend |-> (forx_xendx_xloopexit_forx_xend_PhiReq)
      $P [merge_stmt_514_PhiReqMerge] 
      merge_stmt_514_PhiReqMerge <-| ( entry_forx_xend_PhiReq  forx_xendx_xloopexit_forx_xend_PhiReq )
      ||[merge_stmt_514_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_514_PhiReqMerge |-> (merge_stmt_514_PhiAck)
      merge_stmt_514__exit__  <-| (merge_stmt_514_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 222  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 272
      //---------------------   merge statement  file prog.linked.opt.aa, line 272  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_662_PhiReqMerge] 
      merge_stmt_662_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_662_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_662_PhiReqMerge |-> (merge_stmt_662_PhiAck)
      merge_stmt_662__exit__  <-| (merge_stmt_662_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 272  --------------------------
      assign_stmt_234_to_assign_stmt_292__entry__ <-| (branch_block_stmt_231__entry__)
      if_stmt_293__entry__ <-| (assign_stmt_234_to_assign_stmt_292__exit__)
      merge_stmt_299__entry__ <-| (if_stmt_293__exit__)
      assign_stmt_303_to_assign_stmt_340__entry__ <-| (merge_stmt_299__exit__)
      bbx_xnph_forx_xbody <-| (assign_stmt_303_to_assign_stmt_340__exit__)
      assign_stmt_357_to_assign_stmt_505__entry__ <-| (merge_stmt_342__exit__)
      if_stmt_506__entry__ <-| (assign_stmt_357_to_assign_stmt_505__exit__)
      merge_stmt_512__entry__ <-| (if_stmt_506__exit__)
      forx_xendx_xloopexit_forx_xend <-| (merge_stmt_512__exit__)
      call_stmt_517_to_assign_stmt_619__entry__ <-| (merge_stmt_514__exit__)
      call_stmt_622_to_assign_stmt_635__entry__ <-| (call_stmt_517_to_assign_stmt_619__exit__)
      assign_stmt_640_to_call_stmt_660__entry__ <-| (call_stmt_622_to_assign_stmt_635__exit__)
      return__ <-| (assign_stmt_640_to_call_stmt_660__exit__)
      merge_stmt_662__exit__ |-> (branch_block_stmt_231__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 165
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 176
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 219
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 222
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 272
    // constant-object-declarations for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 142
    // constant-object-declarations for block %zeropad3D
    //  file prog.linked.opt.aa, line 137
    // constant-declarations for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 142
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )
    $constant $W[type_cast_284_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000111111111111111111111100// 16777212
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_290_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 160
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 165
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )
    $constant $W[type_cast_325_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000010// 2
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_331_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_338_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 176
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 177
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_347_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $constant $W[array_obj_ref_355_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_355_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_355_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_355_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_368_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_386_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_404_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_422_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_440_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_458_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_476_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ->(arrayidx)
    $constant $W[ptr_deref_492_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_498_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 214
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 219
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 222
    // 		$call timer () (call66 ) 
    //  file prog.linked.opt.aa, line 225
    // 		$call timer () (call109 ) 
    //  file prog.linked.opt.aa, line 260
    // 		$call sendOutput (mul122 ) () 
    //  file prog.linked.opt.aa, line 270
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 272
    // block %zeropad3D%body
    //  file prog.linked.opt.aa, line 142
    // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 144
    // call
    $W[call_234] : $int<8>
    // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 145
    // call1
    $W[call1_237] : $int<8>
    // 		call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 146
    // call2
    $W[call2_240] : $int<8>
    // 		call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 147
    // call3
    $W[call3_243] : $int<8>
    // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 148
    // call4
    $W[call4_246] : $int<8>
    // 		call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 149
    // call5
    $W[call5_249] : $int<8>
    // 		call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 150
    // call6
    $W[call6_252] : $int<8>
    // 		call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 151
    // call7
    $W[call7_255] : $int<8>
    // 		call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 152
    // call8
    $W[call8_258] : $int<8>
    // 		conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 153
    // conv
    $W[conv_262] : $int<64>
    // 		conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 154
    // conv10
    $W[conv10_266] : $int<64>
    // 		conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 155
    // conv12
    $W[conv12_270] : $int<64>
    // 		$volatile mul := (conv10 * conv) $buffering 1
    //  file prog.linked.opt.aa, line 156
    // mul
    $W[mul_275] : $int<64>
    // 		$volatile mul13 := (mul * conv12) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // mul13
    $W[mul13_280] : $int<64>
    // 		$volatile shr125x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 158
    // shr125x_xmask
    $W[shr125x_xmask_286] : $int<64>
    // 		$volatile cmp126 := (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 159
    // cmp126
    $W[cmp126_292] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 160
    // 		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 167
    // tmp
    $W[tmp_303] : $int<64>
    // 		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 168
    // tmp1
    $W[tmp1_307] : $int<64>
    // 		$volatile tmp2 := (tmp * tmp1) $buffering 1
    //  file prog.linked.opt.aa, line 169
    // tmp2
    $W[tmp2_312] : $int<64>
    // 		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 170
    // tmp3
    $W[tmp3_316] : $int<64>
    // 		$volatile tmp4 := (tmp2 * tmp3) $buffering 1
    //  file prog.linked.opt.aa, line 171
    // tmp4
    $W[tmp4_321] : $int<64>
    // 		$volatile tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 172
    // tmp5
    $W[tmp5_327] : $int<64>
    // 		$volatile tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 173
    // tmp6
    $W[tmp6_333] : $int<1>
    // 		$volatile umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 174
    // umax7
    $W[umax7_340] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 176
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 177
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_349_wire] : $int<64>
    // indvar
    $W[indvar_343] : $int<64>
    // 		arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 180
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $intermediate $W[R_indvar_354_resized] : $int<14>
    $intermediate $W[R_indvar_354_scaled] : $int<14>
    $intermediate $W[array_obj_ref_355_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_355_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_357] : $int<32>
    // 		call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 181
    // call20
    $W[call20_360] : $int<8>
    // 		conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 182
    // conv21
    $W[conv21_364] : $int<64>
    // 		$volatile shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 183
    // shl
    $W[shl_370] : $int<64>
    // 		call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 184
    // call23
    $W[call23_373] : $int<8>
    // 		conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 185
    // conv25
    $W[conv25_377] : $int<64>
    // 		$volatile add := (shl | conv25) $buffering 1
    //  file prog.linked.opt.aa, line 186
    // add
    $W[add_382] : $int<64>
    // 		$volatile shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 187
    // shl27
    $W[shl27_388] : $int<64>
    // 		call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 188
    // call28
    $W[call28_391] : $int<8>
    // 		conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 189
    // conv30
    $W[conv30_395] : $int<64>
    // 		$volatile add31 := (shl27 | conv30) $buffering 1
    //  file prog.linked.opt.aa, line 190
    // add31
    $W[add31_400] : $int<64>
    // 		$volatile shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 191
    // shl33
    $W[shl33_406] : $int<64>
    // 		call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 192
    // call34
    $W[call34_409] : $int<8>
    // 		conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 193
    // conv36
    $W[conv36_413] : $int<64>
    // 		$volatile add37 := (shl33 | conv36) $buffering 1
    //  file prog.linked.opt.aa, line 194
    // add37
    $W[add37_418] : $int<64>
    // 		$volatile shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // shl39
    $W[shl39_424] : $int<64>
    // 		call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 196
    // call40
    $W[call40_427] : $int<8>
    // 		conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 197
    // conv42
    $W[conv42_431] : $int<64>
    // 		$volatile add43 := (shl39 | conv42) $buffering 1
    //  file prog.linked.opt.aa, line 198
    // add43
    $W[add43_436] : $int<64>
    // 		$volatile shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 199
    // shl45
    $W[shl45_442] : $int<64>
    // 		call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 200
    // call46
    $W[call46_445] : $int<8>
    // 		conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 201
    // conv48
    $W[conv48_449] : $int<64>
    // 		$volatile add49 := (shl45 | conv48) $buffering 1
    //  file prog.linked.opt.aa, line 202
    // add49
    $W[add49_454] : $int<64>
    // 		$volatile shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 203
    // shl51
    $W[shl51_460] : $int<64>
    // 		call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 204
    // call52
    $W[call52_463] : $int<8>
    // 		conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 205
    // conv54
    $W[conv54_467] : $int<64>
    // 		$volatile add55 := (shl51 | conv54) $buffering 1
    //  file prog.linked.opt.aa, line 206
    // add55
    $W[add55_472] : $int<64>
    // 		$volatile shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // shl57
    $W[shl57_478] : $int<64>
    // 		call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 208
    // call58
    $W[call58_481] : $int<8>
    // 		conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 209
    // conv60
    $W[conv60_485] : $int<64>
    // 		$volatile add61 := (shl57 | conv60) $buffering 1
    //  file prog.linked.opt.aa, line 210
    // add61
    $W[add61_490] : $int<64>
    // 		->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 211
    // ->(arrayidx)
    $intermediate $W[ptr_deref_492_wire] : $int<64>
    $intermediate $W[ptr_deref_492_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_492_root_address] : $int<14>
    $W[ptr_deref_492_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_492_data_0] : $int<64>
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 212
    // indvarx_xnext
    $W[indvarx_xnext_500] : $int<64>
    // 		$volatile exitcond8 := (indvarx_xnext == umax7) $buffering 1
    //  file prog.linked.opt.aa, line 213
    // exitcond8
    $W[exitcond8_505] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 214
    // 		$call timer () (call66 ) 
    //  file prog.linked.opt.aa, line 225
    // call66
    $W[call66_517] : $int<64>
    // 		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 226
    // ($cast ($int<64>) call66 )
    $intermediate $W[type_cast_521_wire] : $int<64>
    // conv67
    $W[conv67_523] : $int<64>
    // 		Block0_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 227
    // Block0_starting
    // 		Block0_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 228
    // Block0_starting
    // 		Block0_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 229
    // Block0_starting
    // 		Block0_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 230
    // Block0_starting
    // 		Block0_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 231
    // Block0_starting
    // 		Block0_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 232
    // Block0_starting
    // 		Block0_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 233
    // Block0_starting
    // 		Block1_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 234
    // Block1_starting
    // 		Block1_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 235
    // Block1_starting
    // 		Block1_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 236
    // Block1_starting
    // 		Block1_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 237
    // Block1_starting
    // 		Block1_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 238
    // Block1_starting
    // 		Block1_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 239
    // Block1_starting
    // 		Block1_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 240
    // Block1_starting
    // 		Block2_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 241
    // Block2_starting
    // 		Block2_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 242
    // Block2_starting
    // 		Block2_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 243
    // Block2_starting
    // 		Block2_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 244
    // Block2_starting
    // 		Block2_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 245
    // Block2_starting
    // 		Block2_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 246
    // Block2_starting
    // 		Block2_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 247
    // Block2_starting
    // 		Block3_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 248
    // Block3_starting
    // 		Block3_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 249
    // Block3_starting
    // 		Block3_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 250
    // Block3_starting
    // 		Block3_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 251
    // Block3_starting
    // 		Block3_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 252
    // Block3_starting
    // 		Block3_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 253
    // Block3_starting
    // 		Block3_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 254
    // Block3_starting
    // 		call97 := Block0_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 255
    // call97
    $W[call97_610] : $int<8>
    // 		call100 := Block1_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 256
    // call100
    $W[call100_613] : $int<8>
    // 		call103 := Block2_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 257
    // call103
    $W[call103_616] : $int<8>
    // 		call106 := Block3_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 258
    // call106
    $W[call106_619] : $int<8>
    // 		$call timer () (call109 ) 
    //  file prog.linked.opt.aa, line 260
    // call109
    $W[call109_622] : $int<64>
    // 		conv110 := ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 261
    // ($cast ($int<64>) call109 )
    $intermediate $W[type_cast_625_wire] : $int<64>
    // conv110
    $W[conv110_627] : $int<64>
    // 		$volatile sub := (conv110 - conv67) $buffering 1
    //  file prog.linked.opt.aa, line 262
    // sub
    $W[sub_632] : $int<64>
    // 		elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 263
    // elapsed_time_pipe
    // 		conv116 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 265
    // conv116
    $W[conv116_640] : $int<32>
    // 		conv118 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 266
    // conv118
    $W[conv118_644] : $int<32>
    // 		conv121 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 267
    // conv121
    $W[conv121_648] : $int<32>
    // 		$volatile mul119 := (conv118 * conv116) $buffering 1
    //  file prog.linked.opt.aa, line 268
    // mul119
    $W[mul119_653] : $int<32>
    // 		$volatile mul122 := (mul119 * conv121) $buffering 1
    //  file prog.linked.opt.aa, line 269
    // mul122
    $W[mul122_658] : $int<32>
    // 		$call sendOutput (mul122 ) () 
    //  file prog.linked.opt.aa, line 270
    // datapath-instances for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 142
    // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 144
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_233_inst] (zeropad_input_pipe) (call_234) 
    $buffering $out RPIPE_zeropad_input_pipe_233_inst call_234 1
    // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 145
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_236_inst] (zeropad_input_pipe) (call1_237) 
    $buffering $out RPIPE_zeropad_input_pipe_236_inst call1_237 1
    // 		call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 146
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_239_inst] (zeropad_input_pipe) (call2_240) 
    $buffering $out RPIPE_zeropad_input_pipe_239_inst call2_240 1
    // 		call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 147
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_242_inst] (zeropad_input_pipe) (call3_243) 
    $buffering $out RPIPE_zeropad_input_pipe_242_inst call3_243 1
    // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 148
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_245_inst] (zeropad_input_pipe) (call4_246) 
    $buffering $out RPIPE_zeropad_input_pipe_245_inst call4_246 1
    // 		call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 149
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_248_inst] (zeropad_input_pipe) (call5_249) 
    $buffering $out RPIPE_zeropad_input_pipe_248_inst call5_249 1
    // 		call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 150
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_251_inst] (zeropad_input_pipe) (call6_252) 
    $buffering $out RPIPE_zeropad_input_pipe_251_inst call6_252 1
    // 		call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 151
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_254_inst] (zeropad_input_pipe) (call7_255) 
    $buffering $out RPIPE_zeropad_input_pipe_254_inst call7_255 1
    // 		call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 152
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_257_inst] (zeropad_input_pipe) (call8_258) 
    $buffering $out RPIPE_zeropad_input_pipe_257_inst call8_258 1
    // 		conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 153
    // ($cast ($uint<64>) call2 )
    # := [type_cast_261_inst] (call2_240) (conv_262)    
    $buffering  $out type_cast_261_inst conv_262 1
    $delay type_cast_261_inst 1
    // 		conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 154
    // ($cast ($uint<64>) call3 )
    # := [type_cast_265_inst] (call3_243) (conv10_266)    
    $buffering  $out type_cast_265_inst conv10_266 1
    $delay type_cast_265_inst 1
    // 		conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 155
    // ($cast ($uint<64>) call4 )
    # := [type_cast_269_inst] (call4_246) (conv12_270)    
    $buffering  $out type_cast_269_inst conv12_270 1
    $delay type_cast_269_inst 1
    // 		$volatile mul := (conv10 * conv) $buffering 1
    //  file prog.linked.opt.aa, line 156
    // (conv10 * conv)
    *[MUL_u64_u64_274_inst] (conv10_266 conv_262) (mul_275)   $flowthrough 
    $delay MUL_u64_u64_274_inst 0
    // 		$volatile mul13 := (mul * conv12) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // (mul * conv12)
    *[MUL_u64_u64_279_inst] (mul_275 conv12_270) (mul13_280)   $flowthrough 
    $delay MUL_u64_u64_279_inst 0
    // 		$volatile shr125x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 158
    // (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  ))
    &[AND_u64_u64_285_inst] (mul13_280 type_cast_284_wire_constant) (shr125x_xmask_286)   $flowthrough 
    $delay AND_u64_u64_285_inst 0
    // 		$volatile cmp126 := (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 159
    // (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_291_inst] (shr125x_xmask_286 type_cast_290_wire_constant) (cmp126_292)   $flowthrough 
    $delay EQ_u64_u1_291_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 160
    ==0? [if_stmt_293_branch] (cmp126_292)
    // 		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 167
    // ($cast ($uint<64>) call3 )
    # := [type_cast_302_inst] (call3_243) (tmp_303)    
    $buffering  $out type_cast_302_inst tmp_303 1
    $delay type_cast_302_inst 1
    // 		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 168
    // ($cast ($uint<64>) call2 )
    # := [type_cast_306_inst] (call2_240) (tmp1_307)    
    $buffering  $out type_cast_306_inst tmp1_307 1
    $delay type_cast_306_inst 1
    // 		$volatile tmp2 := (tmp * tmp1) $buffering 1
    //  file prog.linked.opt.aa, line 169
    // (tmp * tmp1)
    *[MUL_u64_u64_311_inst] (tmp_303 tmp1_307) (tmp2_312)   $flowthrough 
    $delay MUL_u64_u64_311_inst 0
    // 		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 170
    // ($cast ($uint<64>) call4 )
    # := [type_cast_315_inst] (call4_246) (tmp3_316)    
    $buffering  $out type_cast_315_inst tmp3_316 1
    $delay type_cast_315_inst 1
    // 		$volatile tmp4 := (tmp2 * tmp3) $buffering 1
    //  file prog.linked.opt.aa, line 171
    // (tmp2 * tmp3)
    *[MUL_u64_u64_320_inst] (tmp2_312 tmp3_316) (tmp4_321)   $flowthrough 
    $delay MUL_u64_u64_320_inst 0
    // 		$volatile tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 172
    // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
    >>[LSHR_u64_u64_326_inst] (tmp4_321 type_cast_325_wire_constant) (tmp5_327)   $flowthrough 
    $delay LSHR_u64_u64_326_inst 0
    // 		$volatile tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 173
    // (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >[UGT_u64_u1_332_inst] (tmp5_327 type_cast_331_wire_constant) (tmp6_333)   $flowthrough 
    $delay UGT_u64_u1_332_inst 0
    // 		$volatile umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 174
    // ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_339_inst] (tmp6_333 tmp5_327 type_cast_338_wire_constant) (umax7_340)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 176
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 177
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_349_inst] (indvarx_xnext_500) (type_cast_349_wire)    
    $buffering  $out type_cast_349_inst type_cast_349_wire 1
    $delay type_cast_349_inst 1
    $phi [phi_stmt_343] (type_cast_347_wire_constant type_cast_349_wire) ( indvar_343 ) 
    // 		arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 180
    &/ [array_obj_ref_355_index_1_resize] (indvar_343) (R_indvar_354_resized) 
    $flowthrough 
    &/ [array_obj_ref_355_index_1_rename] (R_indvar_354_resized) (R_indvar_354_scaled) 
    $flowthrough 
    +[array_obj_ref_355_index_offset] (R_indvar_354_scaled array_obj_ref_355_constant_part_of_offset) (array_obj_ref_355_final_offset)   
    $delay array_obj_ref_355_index_offset 2
    &/ [array_obj_ref_355_root_address_inst] (array_obj_ref_355_final_offset) (array_obj_ref_355_root_address) 
    $flowthrough 
    # := [addr_of_356_final_reg] (array_obj_ref_355_root_address) (arrayidx_357)    
    $buffering  $out addr_of_356_final_reg arrayidx_357 1
    // 		call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 181
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_359_inst] (zeropad_input_pipe) (call20_360) 
    $buffering $out RPIPE_zeropad_input_pipe_359_inst call20_360 1
    // 		conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 182
    // ($cast ($uint<64>) call20 )
    # := [type_cast_363_inst] (call20_360) (conv21_364)    
    $buffering  $out type_cast_363_inst conv21_364 1
    $delay type_cast_363_inst 1
    // 		$volatile shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 183
    // (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_369_inst] (conv21_364 type_cast_368_wire_constant) (shl_370)   $flowthrough 
    $delay SHL_u64_u64_369_inst 0
    // 		call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 184
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_372_inst] (zeropad_input_pipe) (call23_373) 
    $buffering $out RPIPE_zeropad_input_pipe_372_inst call23_373 1
    // 		conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 185
    // ($cast ($uint<64>) call23 )
    # := [type_cast_376_inst] (call23_373) (conv25_377)    
    $buffering  $out type_cast_376_inst conv25_377 1
    $delay type_cast_376_inst 1
    // 		$volatile add := (shl | conv25) $buffering 1
    //  file prog.linked.opt.aa, line 186
    // (shl | conv25)
    |[OR_u64_u64_381_inst] (shl_370 conv25_377) (add_382)   $flowthrough 
    $delay OR_u64_u64_381_inst 0
    // 		$volatile shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 187
    // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_387_inst] (add_382 type_cast_386_wire_constant) (shl27_388)   $flowthrough 
    $delay SHL_u64_u64_387_inst 0
    // 		call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 188
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_390_inst] (zeropad_input_pipe) (call28_391) 
    $buffering $out RPIPE_zeropad_input_pipe_390_inst call28_391 1
    // 		conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 189
    // ($cast ($uint<64>) call28 )
    # := [type_cast_394_inst] (call28_391) (conv30_395)    
    $buffering  $out type_cast_394_inst conv30_395 1
    $delay type_cast_394_inst 1
    // 		$volatile add31 := (shl27 | conv30) $buffering 1
    //  file prog.linked.opt.aa, line 190
    // (shl27 | conv30)
    |[OR_u64_u64_399_inst] (shl27_388 conv30_395) (add31_400)   $flowthrough 
    $delay OR_u64_u64_399_inst 0
    // 		$volatile shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 191
    // (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_405_inst] (add31_400 type_cast_404_wire_constant) (shl33_406)   $flowthrough 
    $delay SHL_u64_u64_405_inst 0
    // 		call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 192
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_408_inst] (zeropad_input_pipe) (call34_409) 
    $buffering $out RPIPE_zeropad_input_pipe_408_inst call34_409 1
    // 		conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 193
    // ($cast ($uint<64>) call34 )
    # := [type_cast_412_inst] (call34_409) (conv36_413)    
    $buffering  $out type_cast_412_inst conv36_413 1
    $delay type_cast_412_inst 1
    // 		$volatile add37 := (shl33 | conv36) $buffering 1
    //  file prog.linked.opt.aa, line 194
    // (shl33 | conv36)
    |[OR_u64_u64_417_inst] (shl33_406 conv36_413) (add37_418)   $flowthrough 
    $delay OR_u64_u64_417_inst 0
    // 		$volatile shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_423_inst] (add37_418 type_cast_422_wire_constant) (shl39_424)   $flowthrough 
    $delay SHL_u64_u64_423_inst 0
    // 		call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 196
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_426_inst] (zeropad_input_pipe) (call40_427) 
    $buffering $out RPIPE_zeropad_input_pipe_426_inst call40_427 1
    // 		conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 197
    // ($cast ($uint<64>) call40 )
    # := [type_cast_430_inst] (call40_427) (conv42_431)    
    $buffering  $out type_cast_430_inst conv42_431 1
    $delay type_cast_430_inst 1
    // 		$volatile add43 := (shl39 | conv42) $buffering 1
    //  file prog.linked.opt.aa, line 198
    // (shl39 | conv42)
    |[OR_u64_u64_435_inst] (shl39_424 conv42_431) (add43_436)   $flowthrough 
    $delay OR_u64_u64_435_inst 0
    // 		$volatile shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 199
    // (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_441_inst] (add43_436 type_cast_440_wire_constant) (shl45_442)   $flowthrough 
    $delay SHL_u64_u64_441_inst 0
    // 		call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 200
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_444_inst] (zeropad_input_pipe) (call46_445) 
    $buffering $out RPIPE_zeropad_input_pipe_444_inst call46_445 1
    // 		conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 201
    // ($cast ($uint<64>) call46 )
    # := [type_cast_448_inst] (call46_445) (conv48_449)    
    $buffering  $out type_cast_448_inst conv48_449 1
    $delay type_cast_448_inst 1
    // 		$volatile add49 := (shl45 | conv48) $buffering 1
    //  file prog.linked.opt.aa, line 202
    // (shl45 | conv48)
    |[OR_u64_u64_453_inst] (shl45_442 conv48_449) (add49_454)   $flowthrough 
    $delay OR_u64_u64_453_inst 0
    // 		$volatile shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 203
    // (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_459_inst] (add49_454 type_cast_458_wire_constant) (shl51_460)   $flowthrough 
    $delay SHL_u64_u64_459_inst 0
    // 		call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 204
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_462_inst] (zeropad_input_pipe) (call52_463) 
    $buffering $out RPIPE_zeropad_input_pipe_462_inst call52_463 1
    // 		conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 205
    // ($cast ($uint<64>) call52 )
    # := [type_cast_466_inst] (call52_463) (conv54_467)    
    $buffering  $out type_cast_466_inst conv54_467 1
    $delay type_cast_466_inst 1
    // 		$volatile add55 := (shl51 | conv54) $buffering 1
    //  file prog.linked.opt.aa, line 206
    // (shl51 | conv54)
    |[OR_u64_u64_471_inst] (shl51_460 conv54_467) (add55_472)   $flowthrough 
    $delay OR_u64_u64_471_inst 0
    // 		$volatile shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_477_inst] (add55_472 type_cast_476_wire_constant) (shl57_478)   $flowthrough 
    $delay SHL_u64_u64_477_inst 0
    // 		call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 208
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_480_inst] (zeropad_input_pipe) (call58_481) 
    $buffering $out RPIPE_zeropad_input_pipe_480_inst call58_481 1
    // 		conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 209
    // ($cast ($uint<64>) call58 )
    # := [type_cast_484_inst] (call58_481) (conv60_485)    
    $buffering  $out type_cast_484_inst conv60_485 1
    $delay type_cast_484_inst 1
    // 		$volatile add61 := (shl57 | conv60) $buffering 1
    //  file prog.linked.opt.aa, line 210
    // (shl57 | conv60)
    |[OR_u64_u64_489_inst] (shl57_478 conv60_485) (add61_490)   $flowthrough 
    $delay OR_u64_u64_489_inst 0
    // 		->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 211
    // ->(arrayidx)
    &/ [ptr_deref_492_base_resize] (arrayidx_357) (ptr_deref_492_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_492_root_address_inst] (ptr_deref_492_resized_base_address) (ptr_deref_492_root_address) 
    $flowthrough 
    &/ [ptr_deref_492_addr_0] (ptr_deref_492_root_address) (ptr_deref_492_word_address_0) 
    $flowthrough 
    $store [ptr_deref_492_store_0] $to memory_space_1 (ptr_deref_492_word_address_0 ptr_deref_492_data_0) 
    $delay ptr_deref_492_store_0 6
    &/ [ptr_deref_492_gather_scatter] (add61_490) (ptr_deref_492_data_0) 
    $flowthrough 
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 212
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_499_inst] (indvar_343 type_cast_498_wire_constant) (indvarx_xnext_500)   $flowthrough 
    $delay ADD_u64_u64_499_inst 0
    // 		$volatile exitcond8 := (indvarx_xnext == umax7) $buffering 1
    //  file prog.linked.opt.aa, line 213
    // (indvarx_xnext == umax7)
    ==[EQ_u64_u1_504_inst] (indvarx_xnext_500 umax7_340) (exitcond8_505)   $flowthrough 
    $delay EQ_u64_u1_504_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 214
    ==0? [if_stmt_506_branch] (exitcond8_505)
    // 		$call timer () (call66 ) 
    //  file prog.linked.opt.aa, line 225
    $call [call_stmt_517_call] $module timer() (call66_517)  
    $delay call_stmt_517_call 4
    $buffering  $out call_stmt_517_call call66_517 1
    // 		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 226
    // ($cast ($int<64>) call66 )
    $S:=$U [type_cast_521_inst] (call66_517) (type_cast_521_wire)   $flowthrough
    $delay type_cast_521_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) )
    # := [type_cast_522_inst] (type_cast_521_wire) (conv67_523)    
    $buffering  $out type_cast_522_inst conv67_523 1
    $delay type_cast_522_inst 1
    // 		Block0_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 227
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_524_inst]  (call2_240) (Block0_starting) 
    // 		Block0_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 228
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_527_inst]  (call3_243) (Block0_starting) 
    // 		Block0_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 229
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_530_inst]  (call4_246) (Block0_starting) 
    // 		Block0_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 230
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_533_inst]  (call6_252) (Block0_starting) 
    // 		Block0_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 231
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_536_inst]  (call7_255) (Block0_starting) 
    // 		Block0_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 232
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_539_inst]  (call8_258) (Block0_starting) 
    // 		Block0_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 233
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_542_inst]  (call5_249) (Block0_starting) 
    // 		Block1_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 234
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_545_inst]  (call2_240) (Block1_starting) 
    // 		Block1_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 235
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_548_inst]  (call3_243) (Block1_starting) 
    // 		Block1_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 236
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_551_inst]  (call4_246) (Block1_starting) 
    // 		Block1_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 237
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_554_inst]  (call6_252) (Block1_starting) 
    // 		Block1_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 238
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_557_inst]  (call7_255) (Block1_starting) 
    // 		Block1_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 239
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_560_inst]  (call8_258) (Block1_starting) 
    // 		Block1_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 240
    // Block1_starting
    $ioport $out [WPIPE_Block1_starting_563_inst]  (call5_249) (Block1_starting) 
    // 		Block2_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 241
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_566_inst]  (call2_240) (Block2_starting) 
    // 		Block2_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 242
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_569_inst]  (call3_243) (Block2_starting) 
    // 		Block2_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 243
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_572_inst]  (call4_246) (Block2_starting) 
    // 		Block2_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 244
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_575_inst]  (call6_252) (Block2_starting) 
    // 		Block2_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 245
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_578_inst]  (call7_255) (Block2_starting) 
    // 		Block2_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 246
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_581_inst]  (call8_258) (Block2_starting) 
    // 		Block2_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 247
    // Block2_starting
    $ioport $out [WPIPE_Block2_starting_584_inst]  (call5_249) (Block2_starting) 
    // 		Block3_starting := call2 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 248
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_587_inst]  (call2_240) (Block3_starting) 
    // 		Block3_starting := call3 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 249
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_590_inst]  (call3_243) (Block3_starting) 
    // 		Block3_starting := call4 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 250
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_593_inst]  (call4_246) (Block3_starting) 
    // 		Block3_starting := call6 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 251
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_596_inst]  (call6_252) (Block3_starting) 
    // 		Block3_starting := call7 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 252
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_599_inst]  (call7_255) (Block3_starting) 
    // 		Block3_starting := call8 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 253
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_602_inst]  (call8_258) (Block3_starting) 
    // 		Block3_starting := call5 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 254
    // Block3_starting
    $ioport $out [WPIPE_Block3_starting_605_inst]  (call5_249) (Block3_starting) 
    // 		call97 := Block0_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 255
    // Block0_complete
    $ioport $in [RPIPE_Block0_complete_609_inst] (Block0_complete) (call97_610) 
    $buffering $out RPIPE_Block0_complete_609_inst call97_610 1
    // 		call100 := Block1_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 256
    // Block1_complete
    $ioport $in [RPIPE_Block1_complete_612_inst] (Block1_complete) (call100_613) 
    $buffering $out RPIPE_Block1_complete_612_inst call100_613 1
    // 		call103 := Block2_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 257
    // Block2_complete
    $ioport $in [RPIPE_Block2_complete_615_inst] (Block2_complete) (call103_616) 
    $buffering $out RPIPE_Block2_complete_615_inst call103_616 1
    // 		call106 := Block3_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 258
    // Block3_complete
    $ioport $in [RPIPE_Block3_complete_618_inst] (Block3_complete) (call106_619) 
    $buffering $out RPIPE_Block3_complete_618_inst call106_619 1
    // 		$call timer () (call109 ) 
    //  file prog.linked.opt.aa, line 260
    $call [call_stmt_622_call] $module timer() (call109_622)  
    $delay call_stmt_622_call 4
    $buffering  $out call_stmt_622_call call109_622 1
    // 		conv110 := ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 261
    // ($cast ($int<64>) call109 )
    $S:=$U [type_cast_625_inst] (call109_622) (type_cast_625_wire)   $flowthrough
    $delay type_cast_625_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) )
    # := [type_cast_626_inst] (type_cast_625_wire) (conv110_627)    
    $buffering  $out type_cast_626_inst conv110_627 1
    $delay type_cast_626_inst 1
    // 		$volatile sub := (conv110 - conv67) $buffering 1
    //  file prog.linked.opt.aa, line 262
    // (conv110 - conv67)
    -[SUB_u64_u64_631_inst] (conv110_627 conv67_523) (sub_632)   $flowthrough 
    $delay SUB_u64_u64_631_inst 0
    // 		elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 263
    // elapsed_time_pipe
    $ioport $out [WPIPE_elapsed_time_pipe_633_inst]  (sub_632) (elapsed_time_pipe) 
    // 		conv116 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 265
    // ($cast ($uint<32>) call6 )
    # := [type_cast_639_inst] (call6_252) (conv116_640)    
    $buffering  $out type_cast_639_inst conv116_640 1
    $delay type_cast_639_inst 1
    // 		conv118 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 266
    // ($cast ($uint<32>) call7 )
    # := [type_cast_643_inst] (call7_255) (conv118_644)    
    $buffering  $out type_cast_643_inst conv118_644 1
    $delay type_cast_643_inst 1
    // 		conv121 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 267
    // ($cast ($uint<32>) call8 )
    # := [type_cast_647_inst] (call8_258) (conv121_648)    
    $buffering  $out type_cast_647_inst conv121_648 1
    $delay type_cast_647_inst 1
    // 		$volatile mul119 := (conv118 * conv116) $buffering 1
    //  file prog.linked.opt.aa, line 268
    // (conv118 * conv116)
    *[MUL_u32_u32_652_inst] (conv118_644 conv116_640) (mul119_653)   $flowthrough 
    $delay MUL_u32_u32_652_inst 0
    // 		$volatile mul122 := (mul119 * conv121) $buffering 1
    //  file prog.linked.opt.aa, line 269
    // (mul119 * conv121)
    *[MUL_u32_u32_657_inst] (mul119_653 conv121_648) (mul122_658)   $flowthrough 
    $delay MUL_u32_u32_657_inst 0
    // 		$call sendOutput (mul122 ) () 
    //  file prog.linked.opt.aa, line 270
    $call [call_stmt_660_call] $module sendOutput(mul122_658) ()  
    $delay call_stmt_660_call 4
    $buffering  $in call_stmt_660_call mul122_658 1
  }
  // end data-path
  // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 144
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_233_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_233_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_233_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_233_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_233_Update/ca)
  // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 145
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_236_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_236_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_236_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_236_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_236_Update/ca)
  // 		call2 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 146
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_239_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_239_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_239_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_239_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_239_Update/ca)
  // 		call3 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 147
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_242_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_242_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_242_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_242_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_242_Update/ca)
  // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 148
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_245_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_245_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_245_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_245_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_245_Update/ca)
  // 		call5 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 149
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_248_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_248_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_248_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_248_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_248_Update/ca)
  // 		call6 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 150
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_251_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_251_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_251_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_251_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_251_Update/ca)
  // 		call7 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 151
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_254_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_254_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_254_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_254_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_254_Update/ca)
  // 		call8 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 152
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_257_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_257_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_257_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_257_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/RPIPE_zeropad_input_pipe_257_Update/ca)
  // 		conv := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 153
  // call2
  // ($cast ($uint<64>) call2 )
  type_cast_261_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_261_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_261_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_261_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_261_Update/ca)
  // 		conv10 := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 154
  // call3
  // ($cast ($uint<64>) call3 )
  type_cast_265_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_265_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_265_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_265_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_265_Update/ca)
  // 		conv12 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 155
  // call4
  // ($cast ($uint<64>) call4 )
  type_cast_269_inst <=> (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_269_Sample/rr branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_269_Update/cr) (branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_269_Sample/ra branch_block_stmt_231/assign_stmt_234_to_assign_stmt_292/type_cast_269_Update/ca)
  // 		$volatile mul := (conv10 * conv) $buffering 1
  //  file prog.linked.opt.aa, line 156
  // (conv10 * conv)
  // conv10
  // conv
  // 		$volatile mul13 := (mul * conv12) $buffering 1
  //  file prog.linked.opt.aa, line 157
  // (mul * conv12)
  // mul
  // conv12
  // 		$volatile shr125x_xmask := (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  )) $buffering 1
  //  file prog.linked.opt.aa, line 158
  // (mul13 & ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000111111111111111111111100  ))
  // mul13
  // 		$volatile cmp126 := (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 159
  // (shr125x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  // shr125x_xmask
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 160
  if_stmt_293_branch <=> (branch_block_stmt_231/if_stmt_293_eval_test/branch_req) (branch_block_stmt_231/if_stmt_293_else_link/else_choice_transition branch_block_stmt_231/if_stmt_293_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 165
  // 		tmp := ($cast ($uint<64>) call3 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 167
  // call3
  // ($cast ($uint<64>) call3 )
  type_cast_302_inst <=> (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_302_Sample/rr branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_302_Update/cr) (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_302_Sample/ra branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_302_Update/ca)
  // 		tmp1 := ($cast ($uint<64>) call2 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 168
  // call2
  // ($cast ($uint<64>) call2 )
  type_cast_306_inst <=> (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_306_Sample/rr branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_306_Update/cr) (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_306_Sample/ra branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_306_Update/ca)
  // 		$volatile tmp2 := (tmp * tmp1) $buffering 1
  //  file prog.linked.opt.aa, line 169
  // (tmp * tmp1)
  // tmp
  // tmp1
  // 		tmp3 := ($cast ($uint<64>) call4 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 170
  // call4
  // ($cast ($uint<64>) call4 )
  type_cast_315_inst <=> (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_315_Sample/rr branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_315_Update/cr) (branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_315_Sample/ra branch_block_stmt_231/assign_stmt_303_to_assign_stmt_340/type_cast_315_Update/ca)
  // 		$volatile tmp4 := (tmp2 * tmp3) $buffering 1
  //  file prog.linked.opt.aa, line 171
  // (tmp2 * tmp3)
  // tmp2
  // tmp3
  // 		$volatile tmp5 := (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
  //  file prog.linked.opt.aa, line 172
  // (tmp4 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
  // tmp4
  // 		$volatile tmp6 := (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 173
  // (tmp5 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // tmp5
  // 		$volatile umax7 := ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 174
  // tmp6
  // tmp5
  // ( $mux tmp6 tmp5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 176
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_349_inst <=> (branch_block_stmt_231/forx_xbody_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_sources/type_cast_349/SplitProtocol/Sample/rr branch_block_stmt_231/forx_xbody_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_sources/type_cast_349/SplitProtocol/Update/cr) (branch_block_stmt_231/forx_xbody_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_sources/type_cast_349/SplitProtocol/Sample/ra branch_block_stmt_231/forx_xbody_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_sources/type_cast_349/SplitProtocol/Update/ca)
  phi_stmt_343 <=> (branch_block_stmt_231/bbx_xnph_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_req branch_block_stmt_231/forx_xbody_forx_xbody_PhiReq/phi_stmt_343/phi_stmt_343_req) (branch_block_stmt_231/merge_stmt_342_PhiAck/phi_stmt_343_ack)
  // 		arrayidx := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 180
  // indvar
  array_obj_ref_355_index_1_resize <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_index_resize_1/index_resize_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_index_resize_1/index_resize_ack)
  array_obj_ref_355_index_1_rename <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_index_scale_1/scale_rename_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_index_scale_1/scale_rename_ack)
  array_obj_ref_355_index_offset <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_final_index_sum_regn_Sample/req branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_final_index_sum_regn_Update/req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_final_index_sum_regn_Sample/ack branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_final_index_sum_regn_Update/ack)
  array_obj_ref_355_root_address_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_base_plus_offset/sum_rename_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/array_obj_ref_355_base_plus_offset/sum_rename_ack)
  addr_of_356_final_reg <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/addr_of_356_request/req branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/addr_of_356_complete/req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/addr_of_356_request/ack branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/addr_of_356_complete/ack)
  // 		call20 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 181
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_359_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_359_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_359_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_359_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_359_Update/ca)
  // 		conv21 := ($cast ($uint<64>) call20 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 182
  // call20
  // ($cast ($uint<64>) call20 )
  type_cast_363_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_363_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_363_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_363_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_363_Update/ca)
  // 		$volatile shl := (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 183
  // (conv21 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // conv21
  // 		call23 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 184
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_372_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_372_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_372_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_372_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_372_Update/ca)
  // 		conv25 := ($cast ($uint<64>) call23 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 185
  // call23
  // ($cast ($uint<64>) call23 )
  type_cast_376_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_376_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_376_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_376_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_376_Update/ca)
  // 		$volatile add := (shl | conv25) $buffering 1
  //  file prog.linked.opt.aa, line 186
  // (shl | conv25)
  // shl
  // conv25
  // 		$volatile shl27 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 187
  // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add
  // 		call28 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 188
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_390_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_390_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_390_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_390_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_390_Update/ca)
  // 		conv30 := ($cast ($uint<64>) call28 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 189
  // call28
  // ($cast ($uint<64>) call28 )
  type_cast_394_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_394_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_394_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_394_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_394_Update/ca)
  // 		$volatile add31 := (shl27 | conv30) $buffering 1
  //  file prog.linked.opt.aa, line 190
  // (shl27 | conv30)
  // shl27
  // conv30
  // 		$volatile shl33 := (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 191
  // (add31 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add31
  // 		call34 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 192
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_408_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_408_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_408_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_408_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_408_Update/ca)
  // 		conv36 := ($cast ($uint<64>) call34 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 193
  // call34
  // ($cast ($uint<64>) call34 )
  type_cast_412_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_412_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_412_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_412_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_412_Update/ca)
  // 		$volatile add37 := (shl33 | conv36) $buffering 1
  //  file prog.linked.opt.aa, line 194
  // (shl33 | conv36)
  // shl33
  // conv36
  // 		$volatile shl39 := (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 195
  // (add37 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add37
  // 		call40 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 196
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_426_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_426_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_426_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_426_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_426_Update/ca)
  // 		conv42 := ($cast ($uint<64>) call40 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 197
  // call40
  // ($cast ($uint<64>) call40 )
  type_cast_430_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_430_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_430_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_430_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_430_Update/ca)
  // 		$volatile add43 := (shl39 | conv42) $buffering 1
  //  file prog.linked.opt.aa, line 198
  // (shl39 | conv42)
  // shl39
  // conv42
  // 		$volatile shl45 := (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 199
  // (add43 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add43
  // 		call46 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 200
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_444_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_444_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_444_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_444_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_444_Update/ca)
  // 		conv48 := ($cast ($uint<64>) call46 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 201
  // call46
  // ($cast ($uint<64>) call46 )
  type_cast_448_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_448_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_448_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_448_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_448_Update/ca)
  // 		$volatile add49 := (shl45 | conv48) $buffering 1
  //  file prog.linked.opt.aa, line 202
  // (shl45 | conv48)
  // shl45
  // conv48
  // 		$volatile shl51 := (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 203
  // (add49 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add49
  // 		call52 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 204
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_462_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_462_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_462_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_462_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_462_Update/ca)
  // 		conv54 := ($cast ($uint<64>) call52 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 205
  // call52
  // ($cast ($uint<64>) call52 )
  type_cast_466_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_466_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_466_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_466_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_466_Update/ca)
  // 		$volatile add55 := (shl51 | conv54) $buffering 1
  //  file prog.linked.opt.aa, line 206
  // (shl51 | conv54)
  // shl51
  // conv54
  // 		$volatile shl57 := (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 207
  // (add55 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add55
  // 		call58 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 208
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_480_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_480_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_480_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_480_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/RPIPE_zeropad_input_pipe_480_Update/ca)
  // 		conv60 := ($cast ($uint<64>) call58 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 209
  // call58
  // ($cast ($uint<64>) call58 )
  type_cast_484_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_484_Sample/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_484_Update/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_484_Sample/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/type_cast_484_Update/ca)
  // 		$volatile add61 := (shl57 | conv60) $buffering 1
  //  file prog.linked.opt.aa, line 210
  // (shl57 | conv60)
  // shl57
  // conv60
  // 		->(arrayidx) := add61 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 211
  // add61
  // arrayidx
  ptr_deref_492_base_resize <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_base_addr_resize/base_resize_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_base_addr_resize/base_resize_ack)
  ptr_deref_492_root_address_inst <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_base_plus_offset/sum_rename_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_base_plus_offset/sum_rename_ack)
  ptr_deref_492_addr_0 <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_word_addrgen/root_register_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_word_addrgen/root_register_ack)
  ptr_deref_492_gather_scatter <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Sample/ptr_deref_492_Split/split_req) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Sample/ptr_deref_492_Split/split_ack)
  ptr_deref_492_store_0 <=> (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Sample/word_access_start/word_0/rr branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Update/word_access_complete/word_0/cr) (branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Sample/word_access_start/word_0/ra branch_block_stmt_231/assign_stmt_357_to_assign_stmt_505/ptr_deref_492_Update/word_access_complete/word_0/ca)
  // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 212
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  // 		$volatile exitcond8 := (indvarx_xnext == umax7) $buffering 1
  //  file prog.linked.opt.aa, line 213
  // (indvarx_xnext == umax7)
  // indvarx_xnext
  // umax7
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 214
  if_stmt_506_branch <=> (branch_block_stmt_231/if_stmt_506_eval_test/branch_req) (branch_block_stmt_231/if_stmt_506_else_link/else_choice_transition branch_block_stmt_231/if_stmt_506_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 219
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 222
  // 		$call timer () (call66 ) 
  //  file prog.linked.opt.aa, line 225
  call_stmt_517_call <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/call_stmt_517_Sample/crr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/call_stmt_517_Update/ccr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/call_stmt_517_Sample/cra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/call_stmt_517_Update/cca)
  // 		conv67 := ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 226
  // call66
  // ($bitcast ($uint<64>) ($cast ($int<64>) call66 ) )
  type_cast_522_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/type_cast_522_Sample/rr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/type_cast_522_Update/cr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/type_cast_522_Sample/ra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/type_cast_522_Update/ca)
  // 		Block0_starting := call2 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 227
  // call2
  // Block0_starting
  WPIPE_Block0_starting_524_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_524_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_524_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_524_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_524_Update/ack)
  // 		Block0_starting := call3 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 228
  // call3
  // Block0_starting
  WPIPE_Block0_starting_527_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_527_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_527_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_527_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_527_Update/ack)
  // 		Block0_starting := call4 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 229
  // call4
  // Block0_starting
  WPIPE_Block0_starting_530_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_530_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_530_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_530_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_530_Update/ack)
  // 		Block0_starting := call6 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 230
  // call6
  // Block0_starting
  WPIPE_Block0_starting_533_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_533_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_533_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_533_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_533_Update/ack)
  // 		Block0_starting := call7 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 231
  // call7
  // Block0_starting
  WPIPE_Block0_starting_536_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_536_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_536_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_536_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_536_Update/ack)
  // 		Block0_starting := call8 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 232
  // call8
  // Block0_starting
  WPIPE_Block0_starting_539_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_539_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_539_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_539_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_539_Update/ack)
  // 		Block0_starting := call5 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 233
  // call5
  // Block0_starting
  WPIPE_Block0_starting_542_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_542_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_542_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_542_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block0_starting_542_Update/ack)
  // 		Block1_starting := call2 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 234
  // call2
  // Block1_starting
  WPIPE_Block1_starting_545_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_545_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_545_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_545_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_545_Update/ack)
  // 		Block1_starting := call3 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 235
  // call3
  // Block1_starting
  WPIPE_Block1_starting_548_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_548_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_548_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_548_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_548_Update/ack)
  // 		Block1_starting := call4 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 236
  // call4
  // Block1_starting
  WPIPE_Block1_starting_551_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_551_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_551_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_551_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_551_Update/ack)
  // 		Block1_starting := call6 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 237
  // call6
  // Block1_starting
  WPIPE_Block1_starting_554_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_554_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_554_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_554_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_554_Update/ack)
  // 		Block1_starting := call7 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 238
  // call7
  // Block1_starting
  WPIPE_Block1_starting_557_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_557_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_557_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_557_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_557_Update/ack)
  // 		Block1_starting := call8 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 239
  // call8
  // Block1_starting
  WPIPE_Block1_starting_560_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_560_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_560_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_560_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_560_Update/ack)
  // 		Block1_starting := call5 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 240
  // call5
  // Block1_starting
  WPIPE_Block1_starting_563_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_563_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_563_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_563_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block1_starting_563_Update/ack)
  // 		Block2_starting := call2 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 241
  // call2
  // Block2_starting
  WPIPE_Block2_starting_566_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_566_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_566_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_566_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_566_Update/ack)
  // 		Block2_starting := call3 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 242
  // call3
  // Block2_starting
  WPIPE_Block2_starting_569_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_569_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_569_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_569_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_569_Update/ack)
  // 		Block2_starting := call4 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 243
  // call4
  // Block2_starting
  WPIPE_Block2_starting_572_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_572_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_572_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_572_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_572_Update/ack)
  // 		Block2_starting := call6 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 244
  // call6
  // Block2_starting
  WPIPE_Block2_starting_575_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_575_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_575_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_575_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_575_Update/ack)
  // 		Block2_starting := call7 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 245
  // call7
  // Block2_starting
  WPIPE_Block2_starting_578_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_578_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_578_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_578_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_578_Update/ack)
  // 		Block2_starting := call8 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 246
  // call8
  // Block2_starting
  WPIPE_Block2_starting_581_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_581_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_581_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_581_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_581_Update/ack)
  // 		Block2_starting := call5 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 247
  // call5
  // Block2_starting
  WPIPE_Block2_starting_584_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_584_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_584_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_584_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block2_starting_584_Update/ack)
  // 		Block3_starting := call2 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 248
  // call2
  // Block3_starting
  WPIPE_Block3_starting_587_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_587_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_587_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_587_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_587_Update/ack)
  // 		Block3_starting := call3 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 249
  // call3
  // Block3_starting
  WPIPE_Block3_starting_590_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_590_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_590_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_590_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_590_Update/ack)
  // 		Block3_starting := call4 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 250
  // call4
  // Block3_starting
  WPIPE_Block3_starting_593_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_593_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_593_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_593_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_593_Update/ack)
  // 		Block3_starting := call6 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 251
  // call6
  // Block3_starting
  WPIPE_Block3_starting_596_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_596_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_596_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_596_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_596_Update/ack)
  // 		Block3_starting := call7 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 252
  // call7
  // Block3_starting
  WPIPE_Block3_starting_599_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_599_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_599_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_599_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_599_Update/ack)
  // 		Block3_starting := call8 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 253
  // call8
  // Block3_starting
  WPIPE_Block3_starting_602_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_602_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_602_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_602_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_602_Update/ack)
  // 		Block3_starting := call5 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 254
  // call5
  // Block3_starting
  WPIPE_Block3_starting_605_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_605_Sample/req branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_605_Update/req) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_605_Sample/ack branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/WPIPE_Block3_starting_605_Update/ack)
  // 		call97 := Block0_complete $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 255
  // Block0_complete
  RPIPE_Block0_complete_609_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block0_complete_609_Sample/rr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block0_complete_609_Update/cr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block0_complete_609_Sample/ra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block0_complete_609_Update/ca)
  // 		call100 := Block1_complete $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 256
  // Block1_complete
  RPIPE_Block1_complete_612_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block1_complete_612_Sample/rr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block1_complete_612_Update/cr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block1_complete_612_Sample/ra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block1_complete_612_Update/ca)
  // 		call103 := Block2_complete $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 257
  // Block2_complete
  RPIPE_Block2_complete_615_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block2_complete_615_Sample/rr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block2_complete_615_Update/cr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block2_complete_615_Sample/ra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block2_complete_615_Update/ca)
  // 		call106 := Block3_complete $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 258
  // Block3_complete
  RPIPE_Block3_complete_618_inst <=> (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block3_complete_618_Sample/rr branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block3_complete_618_Update/cr) (branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block3_complete_618_Sample/ra branch_block_stmt_231/call_stmt_517_to_assign_stmt_619/RPIPE_Block3_complete_618_Update/ca)
  // 		$call timer () (call109 ) 
  //  file prog.linked.opt.aa, line 260
  call_stmt_622_call <=> (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/call_stmt_622_Sample/crr branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/call_stmt_622_Update/ccr) (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/call_stmt_622_Sample/cra branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/call_stmt_622_Update/cca)
  // 		conv110 := ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 261
  // call109
  // ($bitcast ($uint<64>) ($cast ($int<64>) call109 ) )
  type_cast_626_inst <=> (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/type_cast_626_Sample/rr branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/type_cast_626_Update/cr) (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/type_cast_626_Sample/ra branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/type_cast_626_Update/ca)
  // 		$volatile sub := (conv110 - conv67) $buffering 1
  //  file prog.linked.opt.aa, line 262
  // (conv110 - conv67)
  // conv110
  // conv67
  // 		elapsed_time_pipe := sub $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 263
  // sub
  // elapsed_time_pipe
  WPIPE_elapsed_time_pipe_633_inst <=> (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/WPIPE_elapsed_time_pipe_633_Sample/req branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/WPIPE_elapsed_time_pipe_633_Update/req) (branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/WPIPE_elapsed_time_pipe_633_Sample/ack branch_block_stmt_231/call_stmt_622_to_assign_stmt_635/WPIPE_elapsed_time_pipe_633_Update/ack)
  // 		conv116 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 265
  // call6
  // ($cast ($uint<32>) call6 )
  type_cast_639_inst <=> (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_639_Sample/rr branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_639_Update/cr) (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_639_Sample/ra branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_639_Update/ca)
  // 		conv118 := ($cast ($uint<32>) call7 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 266
  // call7
  // ($cast ($uint<32>) call7 )
  type_cast_643_inst <=> (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_643_Sample/rr branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_643_Update/cr) (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_643_Sample/ra branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_643_Update/ca)
  // 		conv121 := ($cast ($uint<32>) call8 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 267
  // call8
  // ($cast ($uint<32>) call8 )
  type_cast_647_inst <=> (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_647_Sample/rr branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_647_Update/cr) (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_647_Sample/ra branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/type_cast_647_Update/ca)
  // 		$volatile mul119 := (conv118 * conv116) $buffering 1
  //  file prog.linked.opt.aa, line 268
  // (conv118 * conv116)
  // conv118
  // conv116
  // 		$volatile mul122 := (mul119 * conv121) $buffering 1
  //  file prog.linked.opt.aa, line 269
  // (mul119 * conv121)
  // mul119
  // conv121
  // 		$call sendOutput (mul122 ) () 
  //  file prog.linked.opt.aa, line 270
  // mul122
  call_stmt_660_call <=> (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/call_stmt_660_Sample/crr branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/call_stmt_660_Update/ccr) (branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/call_stmt_660_Sample/cra branch_block_stmt_231/assign_stmt_640_to_call_stmt_660/call_stmt_660_Update/cca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 272
}
$module [zeropad3D_A] 
{
  // pipe-declarations for block %zeropad3D_A
  //  file prog.linked.opt.aa, line 276
  // pipe-declarations for block %zeropad3D_A%body
  //  file prog.linked.opt.aa, line 281
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 311
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 465
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 470
  // memory-space 0 is written into.
  // memory-space 0 is read from.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_666] // Branch Block  file prog.linked.opt.aa, line 281
    {
      $P [branch_block_stmt_666__entry__]
      branch_block_stmt_666__entry__ <-| ($entry)
      $P [branch_block_stmt_666__exit__]
      branch_block_stmt_666__exit__ |-> ($exit)
      $P [assign_stmt_669_to_assign_stmt_687__entry__] 
      $P [assign_stmt_669_to_assign_stmt_687__exit__] 
      $P [assign_stmt_692_to_assign_stmt_790__entry__] 
      $P [assign_stmt_692_to_assign_stmt_790__exit__] 
      $P [entry_whilex_xbody]
      $P [merge_stmt_792__exit__] 
      $P [do_while_stmt_810__entry__] 
      $P [do_while_stmt_810__exit__] 
      $P [if_stmt_1481__entry__] 
      $P [if_stmt_1481__exit__] 
      $P [merge_stmt_1485__entry__] 
      $P [merge_stmt_1485__exit__] 
      $P [assign_stmt_1490__entry__] 
      $P [assign_stmt_1490__exit__] 
      $P [return__]
      $P [merge_stmt_1492__exit__] 
      ::[assign_stmt_669_to_assign_stmt_687] 
      {
        // start:  		call := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 283
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_668_sample_start_] 
        $T[RPIPE_Block0_starting_668_sample_completed_] 
        $T[RPIPE_Block0_starting_668_update_start_] 
        $T[RPIPE_Block0_starting_668_update_completed_] 
        ;;[RPIPE_Block0_starting_668_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_668_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_668_sample_start_ &-> (RPIPE_Block0_starting_668_Sample)
        RPIPE_Block0_starting_668_sample_completed_ <-& (RPIPE_Block0_starting_668_Sample)
        RPIPE_Block0_starting_668_update_start_ <-& (RPIPE_Block0_starting_668_sample_completed_)
        RPIPE_Block0_starting_668_update_start_ &-> (RPIPE_Block0_starting_668_Update)
        RPIPE_Block0_starting_668_update_completed_ <-& (RPIPE_Block0_starting_668_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call1 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 284
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_671_sample_start_] 
        $T[RPIPE_Block0_starting_671_sample_completed_] 
        $T[RPIPE_Block0_starting_671_update_start_] 
        $T[RPIPE_Block0_starting_671_update_completed_] 
        ;;[RPIPE_Block0_starting_671_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_671_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_671_sample_start_ &-> (RPIPE_Block0_starting_671_Sample)
        RPIPE_Block0_starting_671_sample_completed_ <-& (RPIPE_Block0_starting_671_Sample)
        RPIPE_Block0_starting_671_update_start_ <-& (RPIPE_Block0_starting_671_sample_completed_)
        RPIPE_Block0_starting_671_update_start_ &-> (RPIPE_Block0_starting_671_Update)
        RPIPE_Block0_starting_671_update_completed_ <-& (RPIPE_Block0_starting_671_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call2 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 285
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_674_sample_start_] 
        $T[RPIPE_Block0_starting_674_sample_completed_] 
        $T[RPIPE_Block0_starting_674_update_start_] 
        $T[RPIPE_Block0_starting_674_update_completed_] 
        ;;[RPIPE_Block0_starting_674_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_674_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_674_sample_start_ &-> (RPIPE_Block0_starting_674_Sample)
        RPIPE_Block0_starting_674_sample_completed_ <-& (RPIPE_Block0_starting_674_Sample)
        RPIPE_Block0_starting_674_update_start_ <-& (RPIPE_Block0_starting_674_sample_completed_)
        RPIPE_Block0_starting_674_update_start_ &-> (RPIPE_Block0_starting_674_Update)
        RPIPE_Block0_starting_674_update_completed_ <-& (RPIPE_Block0_starting_674_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call3 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 286
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_677_sample_start_] 
        $T[RPIPE_Block0_starting_677_sample_completed_] 
        $T[RPIPE_Block0_starting_677_update_start_] 
        $T[RPIPE_Block0_starting_677_update_completed_] 
        ;;[RPIPE_Block0_starting_677_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_677_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_677_sample_start_ &-> (RPIPE_Block0_starting_677_Sample)
        RPIPE_Block0_starting_677_sample_completed_ <-& (RPIPE_Block0_starting_677_Sample)
        RPIPE_Block0_starting_677_update_start_ <-& (RPIPE_Block0_starting_677_sample_completed_)
        RPIPE_Block0_starting_677_update_start_ &-> (RPIPE_Block0_starting_677_Update)
        RPIPE_Block0_starting_677_update_completed_ <-& (RPIPE_Block0_starting_677_Update)
        // Target expression
        // (as target) call3
        // start: WAR dependencies for call3
        // done: WAR dependencies for call3
        // end:  		call3 := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call4 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 287
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_680_sample_start_] 
        $T[RPIPE_Block0_starting_680_sample_completed_] 
        $T[RPIPE_Block0_starting_680_update_start_] 
        $T[RPIPE_Block0_starting_680_update_completed_] 
        ;;[RPIPE_Block0_starting_680_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_680_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_680_sample_start_ &-> (RPIPE_Block0_starting_680_Sample)
        RPIPE_Block0_starting_680_sample_completed_ <-& (RPIPE_Block0_starting_680_Sample)
        RPIPE_Block0_starting_680_update_start_ <-& (RPIPE_Block0_starting_680_sample_completed_)
        RPIPE_Block0_starting_680_update_start_ &-> (RPIPE_Block0_starting_680_Update)
        RPIPE_Block0_starting_680_update_completed_ <-& (RPIPE_Block0_starting_680_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call5 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 288
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_683_sample_start_] 
        $T[RPIPE_Block0_starting_683_sample_completed_] 
        $T[RPIPE_Block0_starting_683_update_start_] 
        $T[RPIPE_Block0_starting_683_update_completed_] 
        ;;[RPIPE_Block0_starting_683_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_683_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_683_sample_start_ &-> (RPIPE_Block0_starting_683_Sample)
        RPIPE_Block0_starting_683_sample_completed_ <-& (RPIPE_Block0_starting_683_Sample)
        RPIPE_Block0_starting_683_update_start_ <-& (RPIPE_Block0_starting_683_sample_completed_)
        RPIPE_Block0_starting_683_update_start_ &-> (RPIPE_Block0_starting_683_Update)
        RPIPE_Block0_starting_683_update_completed_ <-& (RPIPE_Block0_starting_683_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := Block0_starting $buffering 1// bits of buffering = 8. 
        // start:  		call6 := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 289
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_686_sample_start_] 
        $T[RPIPE_Block0_starting_686_sample_completed_] 
        $T[RPIPE_Block0_starting_686_update_start_] 
        $T[RPIPE_Block0_starting_686_update_completed_] 
        ;;[RPIPE_Block0_starting_686_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_686_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_686_sample_start_ &-> (RPIPE_Block0_starting_686_Sample)
        RPIPE_Block0_starting_686_sample_completed_ <-& (RPIPE_Block0_starting_686_Sample)
        RPIPE_Block0_starting_686_update_start_ <-& (RPIPE_Block0_starting_686_sample_completed_)
        RPIPE_Block0_starting_686_update_start_ &-> (RPIPE_Block0_starting_686_Update)
        RPIPE_Block0_starting_686_update_completed_ <-& (RPIPE_Block0_starting_686_Update)
        // Target expression
        // (as target) call6
        // start: WAR dependencies for call6
        // done: WAR dependencies for call6
        // end:  		call6 := Block0_starting $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block0_starting
        // read-dependencies for pipe Block0_starting
        RPIPE_Block0_starting_671_sample_start_ <-& (RPIPE_Block0_starting_668_update_completed_)
        RPIPE_Block0_starting_674_sample_start_ <-& (RPIPE_Block0_starting_671_update_completed_)
        RPIPE_Block0_starting_677_sample_start_ <-& (RPIPE_Block0_starting_674_update_completed_)
        RPIPE_Block0_starting_680_sample_start_ <-& (RPIPE_Block0_starting_677_update_completed_)
        RPIPE_Block0_starting_683_sample_start_ <-& (RPIPE_Block0_starting_680_update_completed_)
        RPIPE_Block0_starting_686_sample_start_ <-& (RPIPE_Block0_starting_683_update_completed_)
        // write-dependencies for pipe Block0_starting
        // signal write dependencies for Block0_starting
      }
      assign_stmt_669_to_assign_stmt_687__entry__ |-> (assign_stmt_669_to_assign_stmt_687)
      assign_stmt_669_to_assign_stmt_687__exit__ <-| (assign_stmt_669_to_assign_stmt_687)
      ::[assign_stmt_692_to_assign_stmt_790] 
      {
        // start:  		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 291
        // Source expression
        // ($cast ($uint<32>) call2 )
        $T[type_cast_691_sample_start_] 
        $T[type_cast_691_sample_completed_] 
        $T[type_cast_691_update_start_] 
        $T[type_cast_691_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_691_sample_start_
        // done: Forward dependencies from call2 to transition type_cast_691_sample_start_
        ;;[type_cast_691_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_691_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_691_sample_start_ &-> (type_cast_691_Sample)
        type_cast_691_sample_completed_ <-& (type_cast_691_Sample)
        type_cast_691_sample_completed_ &-> ($null)
        type_cast_691_update_start_ &-> (type_cast_691_Update)
        type_cast_691_update_completed_ <-& (type_cast_691_Update)
        // Target expression
        // (as target) conv27
        // start: WAR dependencies for conv27
        // done: WAR dependencies for conv27
        // end:  		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 292
        // Source expression
        // ($cast ($uint<32>) call1 )
        $T[type_cast_695_sample_start_] 
        $T[type_cast_695_sample_completed_] 
        $T[type_cast_695_update_start_] 
        $T[type_cast_695_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_695_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_695_sample_start_
        ;;[type_cast_695_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_695_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_695_sample_start_ &-> (type_cast_695_Sample)
        type_cast_695_sample_completed_ <-& (type_cast_695_Sample)
        type_cast_695_sample_completed_ &-> ($null)
        type_cast_695_update_start_ &-> (type_cast_695_Update)
        type_cast_695_update_completed_ <-& (type_cast_695_Update)
        // Target expression
        // (as target) conv29
        // start: WAR dependencies for conv29
        // done: WAR dependencies for conv29
        // end:  		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 293
        // Source expression
        // ($cast ($uint<32>) call5 )
        $T[type_cast_699_sample_start_] 
        $T[type_cast_699_sample_completed_] 
        $T[type_cast_699_update_start_] 
        $T[type_cast_699_update_completed_] 
        // call5
        // start: Forward dependencies from call5 to transition type_cast_699_sample_start_
        // done: Forward dependencies from call5 to transition type_cast_699_sample_start_
        ;;[type_cast_699_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_699_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_699_sample_start_ &-> (type_cast_699_Sample)
        type_cast_699_sample_completed_ <-& (type_cast_699_Sample)
        type_cast_699_sample_completed_ &-> ($null)
        type_cast_699_update_start_ &-> (type_cast_699_Update)
        type_cast_699_update_completed_ <-& (type_cast_699_Update)
        // Target expression
        // (as target) conv33
        // start: WAR dependencies for conv33
        // done: WAR dependencies for conv33
        // end:  		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 294
        // Source expression
        // ($cast ($uint<32>) call4 )
        $T[type_cast_703_sample_start_] 
        $T[type_cast_703_sample_completed_] 
        $T[type_cast_703_update_start_] 
        $T[type_cast_703_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_703_sample_start_
        // done: Forward dependencies from call4 to transition type_cast_703_sample_start_
        ;;[type_cast_703_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_703_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_703_sample_start_ &-> (type_cast_703_Sample)
        type_cast_703_sample_completed_ <-& (type_cast_703_Sample)
        type_cast_703_sample_completed_ &-> ($null)
        type_cast_703_update_start_ &-> (type_cast_703_Update)
        type_cast_703_update_completed_ <-& (type_cast_703_Update)
        // Target expression
        // (as target) conv35
        // start: WAR dependencies for conv35
        // done: WAR dependencies for conv35
        // end:  		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul36
        // done: WAR dependencies for mul36
        // start:  		$volatile mul36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 295
        // volatile! 
        // Source expression
        // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv35
        // Target expression
        // (as target) mul36
        // start: WAR dependencies for mul36
        // done: WAR dependencies for mul36
        // end:  		$volatile mul36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // start:  		$volatile sext := (mul36 * conv33) $buffering 1
        //  file prog.linked.opt.aa, line 296
        // volatile! 
        // Source expression
        // (mul36 * conv33)
        // mul36
        // conv33
        // Target expression
        // (as target) sext
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // end:  		$volatile sext := (mul36 * conv33) $buffering 1
        // start: WAR dependencies for conv90
        // done: WAR dependencies for conv90
        // start:  		$volatile conv90 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 297
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext )
        // sext
        // Target expression
        // (as target) conv90
        // start: WAR dependencies for conv90
        // done: WAR dependencies for conv90
        // end:  		$volatile conv90 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 298
        // Source expression
        // ($cast ($uint<32>) call6 )
        $T[type_cast_727_sample_start_] 
        $T[type_cast_727_sample_completed_] 
        $T[type_cast_727_update_start_] 
        $T[type_cast_727_update_completed_] 
        // call6
        // start: Forward dependencies from call6 to transition type_cast_727_sample_start_
        // done: Forward dependencies from call6 to transition type_cast_727_sample_start_
        ;;[type_cast_727_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_727_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_727_sample_start_ &-> (type_cast_727_Sample)
        type_cast_727_sample_completed_ <-& (type_cast_727_Sample)
        type_cast_727_sample_completed_ &-> ($null)
        type_cast_727_update_start_ &-> (type_cast_727_Update)
        type_cast_727_update_completed_ <-& (type_cast_727_Update)
        // Target expression
        // (as target) conv104
        // start: WAR dependencies for conv104
        // done: WAR dependencies for conv104
        // end:  		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 299
        // volatile! 
        // Source expression
        // (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv29
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext171
        // done: WAR dependencies for sext171
        // start:  		$volatile sext171 := (mul * conv27) $buffering 1
        //  file prog.linked.opt.aa, line 300
        // volatile! 
        // Source expression
        // (mul * conv27)
        // mul
        // conv27
        // Target expression
        // (as target) sext171
        // start: WAR dependencies for sext171
        // done: WAR dependencies for sext171
        // end:  		$volatile sext171 := (mul * conv27) $buffering 1
        // start: WAR dependencies for conv108
        // done: WAR dependencies for conv108
        // start:  		$volatile conv108 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 301
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext171 )
        // sext171
        // Target expression
        // (as target) conv108
        // start: WAR dependencies for conv108
        // done: WAR dependencies for conv108
        // end:  		$volatile conv108 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 302
        // Source expression
        // ($cast ($uint<32>) call )
        $T[type_cast_751_sample_start_] 
        $T[type_cast_751_sample_completed_] 
        $T[type_cast_751_update_start_] 
        $T[type_cast_751_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_751_sample_start_
        // done: Forward dependencies from call to transition type_cast_751_sample_start_
        ;;[type_cast_751_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_751_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_751_sample_start_ &-> (type_cast_751_Sample)
        type_cast_751_sample_completed_ <-& (type_cast_751_Sample)
        type_cast_751_sample_completed_ &-> ($null)
        type_cast_751_update_start_ &-> (type_cast_751_Update)
        type_cast_751_update_completed_ <-& (type_cast_751_Update)
        // Target expression
        // (as target) conv126
        // start: WAR dependencies for conv126
        // done: WAR dependencies for conv126
        // end:  		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for div127
        // done: WAR dependencies for div127
        // start:  		$volatile div127 := (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 303
        // volatile! 
        // Source expression
        // (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv126
        // Target expression
        // (as target) div127
        // start: WAR dependencies for div127
        // done: WAR dependencies for div127
        // end:  		$volatile div127 := (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add130
        // done: WAR dependencies for add130
        // start:  		$volatile add130 := (conv104 + div127) $buffering 1
        //  file prog.linked.opt.aa, line 304
        // volatile! 
        // Source expression
        // (conv104 + div127)
        // conv104
        // div127
        // Target expression
        // (as target) add130
        // start: WAR dependencies for add130
        // done: WAR dependencies for add130
        // end:  		$volatile add130 := (conv104 + div127) $buffering 1
        // start: WAR dependencies for div145
        // done: WAR dependencies for div145
        // start:  		$volatile div145 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 305
        // volatile! 
        // Source expression
        // (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv29
        // Target expression
        // (as target) div145
        // start: WAR dependencies for div145
        // done: WAR dependencies for div145
        // end:  		$volatile div145 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add148
        // done: WAR dependencies for add148
        // start:  		$volatile add148 := (conv104 + div145) $buffering 1
        //  file prog.linked.opt.aa, line 306
        // volatile! 
        // Source expression
        // (conv104 + div145)
        // conv104
        // div145
        // Target expression
        // (as target) add148
        // start: WAR dependencies for add148
        // done: WAR dependencies for add148
        // end:  		$volatile add148 := (conv104 + div145) $buffering 1
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 307
        // volatile! 
        // Source expression
        // (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv104
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add58
        // done: WAR dependencies for add58
        // start:  		$volatile add58 := (shl + div145) $buffering 1
        //  file prog.linked.opt.aa, line 308
        // volatile! 
        // Source expression
        // (shl + div145)
        // shl
        // div145
        // Target expression
        // (as target) add58
        // start: WAR dependencies for add58
        // done: WAR dependencies for add58
        // end:  		$volatile add58 := (shl + div145) $buffering 1
        // start: WAR dependencies for add73
        // done: WAR dependencies for add73
        // start:  		$volatile add73 := (shl + div127) $buffering 1
        //  file prog.linked.opt.aa, line 309
        // volatile! 
        // Source expression
        // (shl + div127)
        // shl
        // div127
        // Target expression
        // (as target) add73
        // start: WAR dependencies for add73
        // done: WAR dependencies for add73
        // end:  		$volatile add73 := (shl + div127) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_692_to_assign_stmt_790__entry__ |-> (assign_stmt_692_to_assign_stmt_790)
      assign_stmt_692_to_assign_stmt_790__exit__ <-| (assign_stmt_692_to_assign_stmt_790)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 319
      <o> [do_while_stmt_810]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_810__entry__] 
        $P[do_while_stmt_810__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_810_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_812
          // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_812_sample_start_] 
          $T[phi_stmt_812_sample_completed_] 
          $T[phi_stmt_812_update_start_] 
          $T[phi_stmt_812_update_completed_] 
          $T[phi_stmt_812_sample_start__ps] 
          phi_stmt_812_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_812_sample_completed__ps] 
          phi_stmt_812_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_812_update_start__ps] 
          phi_stmt_812_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_812_update_completed__ps] 
          phi_stmt_812_update_completed_ <-& (phi_stmt_812_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_812_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_812_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_812_update_start_)
          $T[phi_stmt_812_loopback_trigger] 
          phi_stmt_812_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_812_loopback_sample_req] 
          $T[phi_stmt_812_loopback_sample_req_ps] 
          phi_stmt_812_loopback_sample_req <-& (phi_stmt_812_loopback_sample_req_ps)
          phi_stmt_812_loopback_sample_req &-> ($null)
          $T[phi_stmt_812_entry_trigger] 
          phi_stmt_812_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_812_entry_sample_req] 
          $T[phi_stmt_812_entry_sample_req_ps] 
          phi_stmt_812_entry_sample_req <-& (phi_stmt_812_entry_sample_req_ps)
          phi_stmt_812_entry_sample_req &-> ($null)
          phi_stmt_812_update_start_ o<-& (phi_stmt_812_update_completed_ 0)
          phi_stmt_812_sample_start_ o<-& (phi_stmt_812_sample_completed_ 1)
          $T[phi_stmt_812_merged_reqs] 
          $T[phi_stmt_812_phi_mux_ack] 
          $T[phi_stmt_812_phi_mux_ack_ps] 
          phi_stmt_812_phi_mux_ack_ps <-& (phi_stmt_812_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_812_update_completed_)
          $T[type_cast_815_sample_start__ps] 
          $T[type_cast_815_sample_completed__ps] 
          $T[type_cast_815_update_start__ps] 
          $T[type_cast_815_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) kx_x0 )
          $T[type_cast_815_sample_start_] 
          $T[type_cast_815_sample_completed_] 
          $T[type_cast_815_update_start_] 
          $T[type_cast_815_update_completed_] 
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_815_sample_start_
          // done: Forward dependencies from kx_x0 to transition type_cast_815_sample_start_
          ;;[type_cast_815_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_815_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_815_sample_start_ &-> (type_cast_815_Sample)
          type_cast_815_sample_completed_ <-& (type_cast_815_Sample)
          type_cast_815_sample_completed_ &-> ($null)
          type_cast_815_update_start_ &-> (type_cast_815_Update)
          type_cast_815_update_completed_ <-& (type_cast_815_Update)
          // RAW reenables for kx_x0
          // self-release: 
          type_cast_815_sample_start_ o<-& (type_cast_815_sample_completed_ 1)
          $null &-> (type_cast_815_update_start_)
          type_cast_815_update_start_ o<-& (type_cast_815_update_completed_ 0)
          // Phi start dependency
          type_cast_815_sample_start_ <-& (type_cast_815_sample_start__ps)
          type_cast_815_update_start_ <-& (type_cast_815_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) kx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_815_sample_completed__ps <-& (type_cast_815_sample_completed_)
          type_cast_815_update_completed__ps <-& (type_cast_815_update_completed_)
          $T[R_kx_x1_at_entry_816_sample_start__ps] 
          $T[R_kx_x1_at_entry_816_sample_completed__ps] 
          $T[R_kx_x1_at_entry_816_update_start__ps] 
          $T[R_kx_x1_at_entry_816_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_kx_x1_at_entry_816_sample_start_] 
          $T[R_kx_x1_at_entry_816_sample_completed_] 
          R_kx_x1_at_entry_816_sample_completed_ <-& (R_kx_x1_at_entry_816_sample_start_)
          $T[R_kx_x1_at_entry_816_update_start_] 
          $T [R_kx_x1_at_entry_816_update_completed_] $delay 
          R_kx_x1_at_entry_816_update_completed_ <-& (R_kx_x1_at_entry_816_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_kx_x1_at_entry_816_sample_start_ <-& (R_kx_x1_at_entry_816_sample_start__ps)
          R_kx_x1_at_entry_816_update_start_ <-& (R_kx_x1_at_entry_816_update_start__ps)
          // Phi complete dependency.
          R_kx_x1_at_entry_816_sample_completed__ps <-& (R_kx_x1_at_entry_816_sample_completed_)
          R_kx_x1_at_entry_816_update_completed__ps <-& (R_kx_x1_at_entry_816_update_completed_)
          $phisequencer [ phi_stmt_812_phi_seq] : 
          phi_stmt_812_loopback_trigger type_cast_815_sample_start__ps type_cast_815_sample_completed__ps type_cast_815_update_start__ps type_cast_815_update_completed__ps phi_stmt_812_entry_trigger R_kx_x1_at_entry_816_sample_start__ps R_kx_x1_at_entry_816_sample_completed__ps R_kx_x1_at_entry_816_update_start__ps R_kx_x1_at_entry_816_update_completed__ps :
          phi_stmt_812_sample_start__ps phi_stmt_812_sample_completed__ps phi_stmt_812_update_start__ps phi_stmt_812_update_completed__ps :
          phi_stmt_812_loopback_sample_req_ps phi_stmt_812_entry_sample_req_ps : 
          phi_stmt_812_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_812
          // start:  PHI statement phi_stmt_817
          // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_817_sample_start_] 
          $T[phi_stmt_817_sample_completed_] 
          $T[phi_stmt_817_update_start_] 
          $T[phi_stmt_817_update_completed_] 
          $T[phi_stmt_817_sample_start__ps] 
          phi_stmt_817_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_817_sample_completed__ps] 
          phi_stmt_817_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_817_update_start__ps] 
          phi_stmt_817_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_817_update_completed__ps] 
          phi_stmt_817_update_completed_ <-& (phi_stmt_817_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_817_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_817_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_817_update_start_)
          $T[phi_stmt_817_loopback_trigger] 
          phi_stmt_817_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_817_loopback_sample_req] 
          $T[phi_stmt_817_loopback_sample_req_ps] 
          phi_stmt_817_loopback_sample_req <-& (phi_stmt_817_loopback_sample_req_ps)
          phi_stmt_817_loopback_sample_req &-> ($null)
          $T[phi_stmt_817_entry_trigger] 
          phi_stmt_817_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_817_entry_sample_req] 
          $T[phi_stmt_817_entry_sample_req_ps] 
          phi_stmt_817_entry_sample_req <-& (phi_stmt_817_entry_sample_req_ps)
          phi_stmt_817_entry_sample_req &-> ($null)
          phi_stmt_817_update_start_ o<-& (phi_stmt_817_update_completed_ 0)
          phi_stmt_817_sample_start_ o<-& (phi_stmt_817_sample_completed_ 1)
          $T[phi_stmt_817_merged_reqs] 
          $T[phi_stmt_817_phi_mux_ack] 
          $T[phi_stmt_817_phi_mux_ack_ps] 
          phi_stmt_817_phi_mux_ack_ps <-& (phi_stmt_817_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_817_update_completed_)
          $T[type_cast_820_sample_start__ps] 
          $T[type_cast_820_sample_completed__ps] 
          $T[type_cast_820_update_start__ps] 
          $T[type_cast_820_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) ix_x1 )
          $T[type_cast_820_sample_start_] 
          $T[type_cast_820_sample_completed_] 
          $T[type_cast_820_update_start_] 
          $T[type_cast_820_update_completed_] 
          // ix_x1
          // start: Forward dependencies from ix_x1 to transition type_cast_820_sample_start_
          // done: Forward dependencies from ix_x1 to transition type_cast_820_sample_start_
          ;;[type_cast_820_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_820_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_820_sample_start_ &-> (type_cast_820_Sample)
          type_cast_820_sample_completed_ <-& (type_cast_820_Sample)
          type_cast_820_sample_completed_ &-> ($null)
          type_cast_820_update_start_ &-> (type_cast_820_Update)
          type_cast_820_update_completed_ <-& (type_cast_820_Update)
          // RAW reenables for ix_x1
          // self-release: 
          type_cast_820_sample_start_ o<-& (type_cast_820_sample_completed_ 1)
          $null &-> (type_cast_820_update_start_)
          type_cast_820_update_start_ o<-& (type_cast_820_update_completed_ 0)
          // Phi start dependency
          type_cast_820_sample_start_ <-& (type_cast_820_sample_start__ps)
          type_cast_820_update_start_ <-& (type_cast_820_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) ix_x1 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_820_sample_completed__ps <-& (type_cast_820_sample_completed_)
          type_cast_820_update_completed__ps <-& (type_cast_820_update_completed_)
          $T[R_ix_x2_at_entry_821_sample_start__ps] 
          $T[R_ix_x2_at_entry_821_sample_completed__ps] 
          $T[R_ix_x2_at_entry_821_update_start__ps] 
          $T[R_ix_x2_at_entry_821_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_ix_x2_at_entry_821_sample_start_] 
          $T[R_ix_x2_at_entry_821_sample_completed_] 
          R_ix_x2_at_entry_821_sample_completed_ <-& (R_ix_x2_at_entry_821_sample_start_)
          $T[R_ix_x2_at_entry_821_update_start_] 
          $T [R_ix_x2_at_entry_821_update_completed_] $delay 
          R_ix_x2_at_entry_821_update_completed_ <-& (R_ix_x2_at_entry_821_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_ix_x2_at_entry_821_sample_start_ <-& (R_ix_x2_at_entry_821_sample_start__ps)
          R_ix_x2_at_entry_821_update_start_ <-& (R_ix_x2_at_entry_821_update_start__ps)
          // Phi complete dependency.
          R_ix_x2_at_entry_821_sample_completed__ps <-& (R_ix_x2_at_entry_821_sample_completed_)
          R_ix_x2_at_entry_821_update_completed__ps <-& (R_ix_x2_at_entry_821_update_completed_)
          $phisequencer [ phi_stmt_817_phi_seq] : 
          phi_stmt_817_loopback_trigger type_cast_820_sample_start__ps type_cast_820_sample_completed__ps type_cast_820_update_start__ps type_cast_820_update_completed__ps phi_stmt_817_entry_trigger R_ix_x2_at_entry_821_sample_start__ps R_ix_x2_at_entry_821_sample_completed__ps R_ix_x2_at_entry_821_update_start__ps R_ix_x2_at_entry_821_update_completed__ps :
          phi_stmt_817_sample_start__ps phi_stmt_817_sample_completed__ps phi_stmt_817_update_start__ps phi_stmt_817_update_completed__ps :
          phi_stmt_817_loopback_sample_req_ps phi_stmt_817_entry_sample_req_ps : 
          phi_stmt_817_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_817
          // start:  PHI statement phi_stmt_822
          // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_822_sample_start_] 
          $T[phi_stmt_822_sample_completed_] 
          $T[phi_stmt_822_update_start_] 
          $T[phi_stmt_822_update_completed_] 
          $T[phi_stmt_822_sample_start__ps] 
          phi_stmt_822_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_822_sample_completed__ps] 
          phi_stmt_822_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_822_update_start__ps] 
          phi_stmt_822_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_822_update_completed__ps] 
          phi_stmt_822_update_completed_ <-& (phi_stmt_822_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_822_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_822_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_822_update_start_)
          $T[phi_stmt_822_loopback_trigger] 
          phi_stmt_822_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_822_loopback_sample_req] 
          $T[phi_stmt_822_loopback_sample_req_ps] 
          phi_stmt_822_loopback_sample_req <-& (phi_stmt_822_loopback_sample_req_ps)
          phi_stmt_822_loopback_sample_req &-> ($null)
          $T[phi_stmt_822_entry_trigger] 
          phi_stmt_822_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_822_entry_sample_req] 
          $T[phi_stmt_822_entry_sample_req_ps] 
          phi_stmt_822_entry_sample_req <-& (phi_stmt_822_entry_sample_req_ps)
          phi_stmt_822_entry_sample_req &-> ($null)
          phi_stmt_822_update_start_ o<-& (phi_stmt_822_update_completed_ 0)
          phi_stmt_822_sample_start_ o<-& (phi_stmt_822_sample_completed_ 1)
          $T[phi_stmt_822_merged_reqs] 
          $T[phi_stmt_822_phi_mux_ack] 
          $T[phi_stmt_822_phi_mux_ack_ps] 
          phi_stmt_822_phi_mux_ack_ps <-& (phi_stmt_822_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_822_update_completed_)
          $T[type_cast_825_sample_start__ps] 
          $T[type_cast_825_sample_completed__ps] 
          $T[type_cast_825_update_start__ps] 
          $T[type_cast_825_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) jx_x0 )
          $T[type_cast_825_sample_start_] 
          $T[type_cast_825_sample_completed_] 
          $T[type_cast_825_update_start_] 
          $T[type_cast_825_update_completed_] 
          // jx_x0
          // start: Forward dependencies from jx_x0 to transition type_cast_825_sample_start_
          // done: Forward dependencies from jx_x0 to transition type_cast_825_sample_start_
          ;;[type_cast_825_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_825_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_825_sample_start_ &-> (type_cast_825_Sample)
          type_cast_825_sample_completed_ <-& (type_cast_825_Sample)
          type_cast_825_sample_completed_ &-> ($null)
          type_cast_825_update_start_ &-> (type_cast_825_Update)
          type_cast_825_update_completed_ <-& (type_cast_825_Update)
          // RAW reenables for jx_x0
          // self-release: 
          type_cast_825_sample_start_ o<-& (type_cast_825_sample_completed_ 1)
          $null &-> (type_cast_825_update_start_)
          type_cast_825_update_start_ o<-& (type_cast_825_update_completed_ 0)
          // Phi start dependency
          type_cast_825_sample_start_ <-& (type_cast_825_sample_start__ps)
          type_cast_825_update_start_ <-& (type_cast_825_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) jx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_825_sample_completed__ps <-& (type_cast_825_sample_completed_)
          type_cast_825_update_completed__ps <-& (type_cast_825_update_completed_)
          $T[R_jx_x1_at_entry_826_sample_start__ps] 
          $T[R_jx_x1_at_entry_826_sample_completed__ps] 
          $T[R_jx_x1_at_entry_826_update_start__ps] 
          $T[R_jx_x1_at_entry_826_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_jx_x1_at_entry_826_sample_start_] 
          $T[R_jx_x1_at_entry_826_sample_completed_] 
          R_jx_x1_at_entry_826_sample_completed_ <-& (R_jx_x1_at_entry_826_sample_start_)
          $T[R_jx_x1_at_entry_826_update_start_] 
          $T [R_jx_x1_at_entry_826_update_completed_] $delay 
          R_jx_x1_at_entry_826_update_completed_ <-& (R_jx_x1_at_entry_826_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_jx_x1_at_entry_826_sample_start_ <-& (R_jx_x1_at_entry_826_sample_start__ps)
          R_jx_x1_at_entry_826_update_start_ <-& (R_jx_x1_at_entry_826_update_start__ps)
          // Phi complete dependency.
          R_jx_x1_at_entry_826_sample_completed__ps <-& (R_jx_x1_at_entry_826_sample_completed_)
          R_jx_x1_at_entry_826_update_completed__ps <-& (R_jx_x1_at_entry_826_update_completed_)
          $phisequencer [ phi_stmt_822_phi_seq] : 
          phi_stmt_822_loopback_trigger type_cast_825_sample_start__ps type_cast_825_sample_completed__ps type_cast_825_update_start__ps type_cast_825_update_completed__ps phi_stmt_822_entry_trigger R_jx_x1_at_entry_826_sample_start__ps R_jx_x1_at_entry_826_sample_completed__ps R_jx_x1_at_entry_826_update_start__ps R_jx_x1_at_entry_826_update_completed__ps :
          phi_stmt_822_sample_start__ps phi_stmt_822_sample_completed__ps phi_stmt_822_update_start__ps phi_stmt_822_update_completed__ps :
          phi_stmt_822_loopback_sample_req_ps phi_stmt_822_entry_sample_req_ps : 
          phi_stmt_822_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_822
          // start:  			conv43 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 329
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
          $T[type_cast_831_sample_start_] 
          $T[type_cast_831_sample_completed_] 
          $T[type_cast_831_update_start_] 
          $T[type_cast_831_update_completed_] 
          // ($cast ($int<32>) kx_x1 )
          // kx_x1
          // start: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_831_sample_start_
          type_cast_831_sample_start_ <-& (phi_stmt_812_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_831_sample_start_
          ;;[type_cast_831_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_831_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_831_sample_start_ &-> (type_cast_831_Sample)
          type_cast_831_sample_completed_ <-& (type_cast_831_Sample)
          type_cast_831_sample_completed_ &-> ($null)
          type_cast_831_update_start_ &-> (type_cast_831_Update)
          type_cast_831_update_completed_ <-& (type_cast_831_Update)
          // RAW reenables for ($cast ($int<32>) kx_x1 )
          phi_stmt_812_update_start_ o<-& (type_cast_831_sample_completed_ 0)
          // self-release: 
          type_cast_831_sample_start_ o<-& (type_cast_831_sample_completed_ 1)
          $null &-> (type_cast_831_update_start_)
          type_cast_831_update_start_ o<-& (type_cast_831_update_completed_ 0)
          // Target expression
          // (as target) conv43
          // start: WAR dependencies for conv43
          // done: WAR dependencies for conv43
          // end:  			conv43 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // start:  			$volatile add := (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 330
          // volatile! 
          // Source expression
          // (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
          // conv43
          // Target expression
          // (as target) add
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // end:  			$volatile add := (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          // start:  			type_cast_843_843_delayed_2_0 := ($bitcast ($int<32>) conv27 ) $buffering 2 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 331
          // Source expression
          // ($bitcast ($int<32>) conv27 )
          $T[type_cast_841_sample_start_] 
          $T[type_cast_841_sample_completed_] 
          $T[type_cast_841_update_start_] 
          $T[type_cast_841_update_completed_] 
          // conv27
          // start: Forward dependencies from conv27 to transition type_cast_841_sample_start_
          // done: Forward dependencies from conv27 to transition type_cast_841_sample_start_
          ;;[type_cast_841_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_841_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_841_sample_start_ &-> (type_cast_841_Sample)
          type_cast_841_sample_completed_ <-& (type_cast_841_Sample)
          type_cast_841_sample_completed_ &-> ($null)
          type_cast_841_update_start_ &-> (type_cast_841_Update)
          type_cast_841_update_completed_ <-& (type_cast_841_Update)
          // RAW reenables for conv27
          // self-release: 
          type_cast_841_sample_start_ o<-& (type_cast_841_sample_completed_ 1)
          $null &-> (type_cast_841_update_start_)
          type_cast_841_update_start_ o<-& (type_cast_841_update_completed_ 0)
          // Target expression
          // (as target) type_cast_843_843_delayed_2_0
          // start: WAR dependencies for type_cast_843_843_delayed_2_0
          // done: WAR dependencies for type_cast_843_843_delayed_2_0
          // end:  			type_cast_843_843_delayed_2_0 := ($bitcast ($int<32>) conv27 ) $buffering 2 $cut_through // bits of buffering = 64. 
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // start:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0) $buffering 1
          //  file prog.linked.opt.aa, line 332
          // volatile! 
          // Source expression
          // (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0)
          // ($bitcast ($int<32>) add )
          // add
          // type_cast_843_843_delayed_2_0
          // Target expression
          // (as target) cmp
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // end:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0) $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // start:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          //  file prog.linked.opt.aa, line 333
          // volatile! 
          // Source expression
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xthen_taken
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // end:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // start:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          //  file prog.linked.opt.aa, line 334
          // volatile! 
          // Source expression
          // ( ~ cmp )
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xelse_taken
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // end:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // start:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          //  file prog.linked.opt.aa, line 335
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xelse_taken
          // Target expression
          // (as target) ifx_xelse_exec_guard
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // end:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          // start:  			jx_x1_858_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 336
          $T[assign_stmt_861_sample_start_] 
          $T[assign_stmt_861_sample_completed_] 
          $T[assign_stmt_861_update_start_] 
          $T[assign_stmt_861_update_completed_] 
          // Source expression
          // jx_x1
          // Target expression
          // (as target) jx_x1_858_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_861_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_861_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_861_sample_start_ &-> (assign_stmt_861_Sample)
          assign_stmt_861_sample_completed_ <-& (assign_stmt_861_Sample)
          assign_stmt_861_sample_completed_ &-> ($null)
          assign_stmt_861_update_start_ &-> (assign_stmt_861_Update)
          assign_stmt_861_update_completed_ <-& (assign_stmt_861_Update)
          // start: Forward dependencies from jx_x1 to transition assign_stmt_861_sample_start_
          assign_stmt_861_sample_start_ <-& (phi_stmt_822_update_completed_)
          // done: Forward dependencies from jx_x1 to transition assign_stmt_861_sample_start_
          // RAW reenables for jx_x1
          phi_stmt_822_update_start_ o<-& (assign_stmt_861_sample_completed_ 0)
          // self-release: 
          assign_stmt_861_sample_start_ o<-& (assign_stmt_861_sample_completed_ 1)
          $null &-> (assign_stmt_861_update_start_)
          assign_stmt_861_update_start_ o<-& (assign_stmt_861_update_completed_ 0)
          // start: WAR dependencies for jx_x1_858_delayed_1_0
          // done: WAR dependencies for jx_x1_858_delayed_1_0
          // end:  			jx_x1_858_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // start:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 337
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // jx_x1_858_delayed_1_0
          // Target expression
          // (as target) inc
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // end:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			$guard (ifx_xelse_exec_guard) conv53 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 338
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
          $T[type_cast_873_sample_start_] 
          $T[type_cast_873_sample_completed_] 
          $T[type_cast_873_update_start_] 
          $T[type_cast_873_update_completed_] 
          // Guard dependency for expression type_cast_873 with guard R_ifx_xelse_exec_guard_869
          type_cast_873_sample_start_ <-& (type_cast_831_update_completed_)
          type_cast_873_sample_start_ <-& (type_cast_841_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (type_cast_873_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (type_cast_873_sample_completed_ 0)
          // ($cast ($int<32>) inc )
          // inc
          // start: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_873_sample_start_
          type_cast_873_sample_start_ <-& (assign_stmt_861_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_873_sample_start_
          ;;[type_cast_873_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_873_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_873_sample_start_ &-> (type_cast_873_Sample)
          type_cast_873_sample_completed_ <-& (type_cast_873_Sample)
          type_cast_873_sample_completed_ &-> ($null)
          type_cast_873_update_start_ &-> (type_cast_873_Update)
          type_cast_873_update_completed_ <-& (type_cast_873_Update)
          // RAW reenables for ($cast ($int<32>) inc )
          assign_stmt_861_update_start_ o<-& (type_cast_873_sample_completed_ 0)
          // self-release: 
          type_cast_873_sample_start_ o<-& (type_cast_873_sample_completed_ 1)
          $null &-> (type_cast_873_update_start_)
          type_cast_873_update_start_ o<-& (type_cast_873_update_completed_ 0)
          // Target expression
          // (as target) conv53
          // start: WAR dependencies for conv53
          // done: WAR dependencies for conv53
          // end:  			$guard (ifx_xelse_exec_guard) conv53 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_869_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 339
          $T[assign_stmt_877_sample_start_] 
          $T[assign_stmt_877_sample_completed_] 
          $T[assign_stmt_877_update_start_] 
          $T[assign_stmt_877_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_869_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_877_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_877_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_877_sample_start_ &-> (assign_stmt_877_Sample)
          assign_stmt_877_sample_completed_ <-& (assign_stmt_877_Sample)
          assign_stmt_877_sample_completed_ &-> ($null)
          assign_stmt_877_update_start_ &-> (assign_stmt_877_Update)
          assign_stmt_877_update_completed_ <-& (assign_stmt_877_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_877_sample_start_
          assign_stmt_877_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_877_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_877_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_877_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_877_sample_completed_ 0)
          // self-release: 
          assign_stmt_877_sample_start_ o<-& (assign_stmt_877_sample_completed_ 1)
          $null &-> (assign_stmt_877_update_start_)
          assign_stmt_877_update_start_ o<-& (assign_stmt_877_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_869_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_869_delayed_1_0
          // end:  			ifx_xelse_exec_guard_869_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp59
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp59
          // start:  			$guard (ifx_xelse_exec_guard_869_delayed_1_0) $volatile cmp59 := (conv53 == add58) $buffering 1
          //  file prog.linked.opt.aa, line 340
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_869_delayed_1_0
          // Source expression
          // (conv53 == add58)
          // conv53
          // add58
          // Target expression
          // (as target) cmp59
          // start: WAR dependencies for cmp59
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp59
          // end:  			$guard (ifx_xelse_exec_guard_869_delayed_1_0) $volatile cmp59 := (conv53 == add58) $buffering 1
          // start:  			ifx_xelse_exec_guard_875_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 341
          $T[assign_stmt_886_sample_start_] 
          $T[assign_stmt_886_sample_completed_] 
          $T[assign_stmt_886_update_start_] 
          $T[assign_stmt_886_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_875_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_886_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_886_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_886_sample_start_ &-> (assign_stmt_886_Sample)
          assign_stmt_886_sample_completed_ <-& (assign_stmt_886_Sample)
          assign_stmt_886_sample_completed_ &-> ($null)
          assign_stmt_886_update_start_ &-> (assign_stmt_886_Update)
          assign_stmt_886_update_completed_ <-& (assign_stmt_886_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_886_sample_start_
          assign_stmt_886_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_886_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_886_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_886_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_886_sample_completed_ 0)
          // self-release: 
          assign_stmt_886_sample_start_ o<-& (assign_stmt_886_sample_completed_ 1)
          $null &-> (assign_stmt_886_update_start_)
          assign_stmt_886_update_start_ o<-& (assign_stmt_886_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_875_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_875_delayed_1_0
          // end:  			ifx_xelse_exec_guard_875_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse_exec_guard_875_delayed_1_0) inc64 := ($cast ($uint<16>) cmp59 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 342
          // Guard expression 
          // ifx_xelse_exec_guard_875_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) cmp59 )
          $T[type_cast_890_sample_start_] 
          $T[type_cast_890_sample_completed_] 
          $T[type_cast_890_update_start_] 
          $T[type_cast_890_update_completed_] 
          // Guard dependency for expression type_cast_890 with guard R_ifx_xelse_exec_guard_875_delayed_1_0_887
          type_cast_890_sample_start_ <-& (assign_stmt_886_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_875_delayed_1_0
          assign_stmt_886_update_start_ o<-& (type_cast_890_sample_completed_ 0)
          // cmp59
          // start: Forward dependencies from cmp59 to transition type_cast_890_sample_start_
          type_cast_890_sample_start_ <-& (type_cast_873_update_completed_)
          // done: Forward dependencies from cmp59 to transition type_cast_890_sample_start_
          ;;[type_cast_890_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_890_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_890_sample_start_ &-> (type_cast_890_Sample)
          type_cast_890_sample_completed_ <-& (type_cast_890_Sample)
          type_cast_890_sample_completed_ &-> ($null)
          type_cast_890_update_start_ &-> (type_cast_890_Update)
          type_cast_890_update_completed_ <-& (type_cast_890_Update)
          // RAW reenables for cmp59
          type_cast_873_update_start_ o<-& (type_cast_890_sample_completed_ 0)
          // self-release: 
          type_cast_890_sample_start_ o<-& (type_cast_890_sample_completed_ 1)
          $null &-> (type_cast_890_update_start_)
          type_cast_890_update_start_ o<-& (type_cast_890_update_completed_ 0)
          // Target expression
          // (as target) inc64
          // start: WAR dependencies for inc64
          // done: WAR dependencies for inc64
          // end:  			$guard (ifx_xelse_exec_guard_875_delayed_1_0) inc64 := ($cast ($uint<16>) cmp59 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xelse_exec_guard_880_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 343
          $T[assign_stmt_894_sample_start_] 
          $T[assign_stmt_894_sample_completed_] 
          $T[assign_stmt_894_update_start_] 
          $T[assign_stmt_894_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_880_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_894_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_894_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_894_sample_start_ &-> (assign_stmt_894_Sample)
          assign_stmt_894_sample_completed_ <-& (assign_stmt_894_Sample)
          assign_stmt_894_sample_completed_ &-> ($null)
          assign_stmt_894_update_start_ &-> (assign_stmt_894_Update)
          assign_stmt_894_update_completed_ <-& (assign_stmt_894_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_894_sample_start_
          assign_stmt_894_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_894_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_894_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_894_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_894_sample_completed_ 0)
          // self-release: 
          assign_stmt_894_sample_start_ o<-& (assign_stmt_894_sample_completed_ 1)
          $null &-> (assign_stmt_894_update_start_)
          assign_stmt_894_update_start_ o<-& (assign_stmt_894_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_880_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_880_delayed_2_0
          // end:  			ifx_xelse_exec_guard_880_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			ix_x2_883_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 344
          $T[assign_stmt_897_sample_start_] 
          $T[assign_stmt_897_sample_completed_] 
          $T[assign_stmt_897_update_start_] 
          $T[assign_stmt_897_update_completed_] 
          // Source expression
          // ix_x2
          // Target expression
          // (as target) ix_x2_883_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_897_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_897_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_897_sample_start_ &-> (assign_stmt_897_Sample)
          assign_stmt_897_sample_completed_ <-& (assign_stmt_897_Sample)
          assign_stmt_897_sample_completed_ &-> ($null)
          assign_stmt_897_update_start_ &-> (assign_stmt_897_Update)
          assign_stmt_897_update_completed_ <-& (assign_stmt_897_Update)
          // start: Forward dependencies from ix_x2 to transition assign_stmt_897_sample_start_
          assign_stmt_897_sample_start_ <-& (phi_stmt_817_update_completed_)
          // done: Forward dependencies from ix_x2 to transition assign_stmt_897_sample_start_
          // RAW reenables for ix_x2
          phi_stmt_817_update_start_ o<-& (assign_stmt_897_sample_completed_ 0)
          // self-release: 
          assign_stmt_897_sample_start_ o<-& (assign_stmt_897_sample_completed_ 1)
          $null &-> (assign_stmt_897_update_start_)
          assign_stmt_897_update_start_ o<-& (assign_stmt_897_update_completed_ 0)
          // start: WAR dependencies for ix_x2_883_delayed_3_0
          // done: WAR dependencies for ix_x2_883_delayed_3_0
          // end:  			ix_x2_883_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc64x_xix_x2
          // done: WAR dependencies for inc64x_xix_x2
          // start:  			$guard (ifx_xelse_exec_guard_880_delayed_2_0) $volatile inc64x_xix_x2 := (inc64 + ix_x2_883_delayed_3_0) $buffering 1
          //  file prog.linked.opt.aa, line 345
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_880_delayed_2_0
          // Source expression
          // (inc64 + ix_x2_883_delayed_3_0)
          // inc64
          // ix_x2_883_delayed_3_0
          // Target expression
          // (as target) inc64x_xix_x2
          // start: WAR dependencies for inc64x_xix_x2
          // done: WAR dependencies for inc64x_xix_x2
          // end:  			$guard (ifx_xelse_exec_guard_880_delayed_2_0) $volatile inc64x_xix_x2 := (inc64 + ix_x2_883_delayed_3_0) $buffering 1
          // start:  			ifx_xelse_exec_guard_886_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 346
          $T[assign_stmt_906_sample_start_] 
          $T[assign_stmt_906_sample_completed_] 
          $T[assign_stmt_906_update_start_] 
          $T[assign_stmt_906_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_886_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_906_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_906_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_906_sample_start_ &-> (assign_stmt_906_Sample)
          assign_stmt_906_sample_completed_ <-& (assign_stmt_906_Sample)
          assign_stmt_906_sample_completed_ &-> ($null)
          assign_stmt_906_update_start_ &-> (assign_stmt_906_Update)
          assign_stmt_906_update_completed_ <-& (assign_stmt_906_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_906_sample_start_
          assign_stmt_906_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_906_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_906_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_906_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_906_sample_completed_ 0)
          // self-release: 
          assign_stmt_906_sample_start_ o<-& (assign_stmt_906_sample_completed_ 1)
          $null &-> (assign_stmt_906_update_start_)
          assign_stmt_906_update_start_ o<-& (assign_stmt_906_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_886_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_886_delayed_1_0
          // end:  			ifx_xelse_exec_guard_886_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			inc_891_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 347
          $T[assign_stmt_909_sample_start_] 
          $T[assign_stmt_909_sample_completed_] 
          $T[assign_stmt_909_update_start_] 
          $T[assign_stmt_909_update_completed_] 
          // Source expression
          // inc
          // Target expression
          // (as target) inc_891_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_909_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_909_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_909_sample_start_ &-> (assign_stmt_909_Sample)
          assign_stmt_909_sample_completed_ <-& (assign_stmt_909_Sample)
          assign_stmt_909_sample_completed_ &-> ($null)
          assign_stmt_909_update_start_ &-> (assign_stmt_909_Update)
          assign_stmt_909_update_completed_ <-& (assign_stmt_909_Update)
          // start: Forward dependencies from inc to transition assign_stmt_909_sample_start_
          assign_stmt_909_sample_start_ <-& (assign_stmt_861_update_completed_)
          // done: Forward dependencies from inc to transition assign_stmt_909_sample_start_
          // RAW reenables for inc
          assign_stmt_861_update_start_ o<-& (assign_stmt_909_sample_completed_ 0)
          // self-release: 
          assign_stmt_909_sample_start_ o<-& (assign_stmt_909_sample_completed_ 1)
          $null &-> (assign_stmt_909_update_start_)
          assign_stmt_909_update_start_ o<-& (assign_stmt_909_update_completed_ 0)
          // start: WAR dependencies for inc_891_delayed_1_0
          // done: WAR dependencies for inc_891_delayed_1_0
          // end:  			inc_891_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // start:  			$guard (ifx_xelse_exec_guard_886_delayed_1_0) $volatile jx_x2 := ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 )  $buffering 1
          //  file prog.linked.opt.aa, line 348
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_886_delayed_1_0
          // Source expression
          // ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 ) 
          // cmp59
          // inc_891_delayed_1_0
          // Target expression
          // (as target) jx_x2
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // end:  			$guard (ifx_xelse_exec_guard_886_delayed_1_0) $volatile jx_x2 := ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 )  $buffering 1
          // start:  			ifx_xelse_exec_guard_894_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 349
          $T[assign_stmt_920_sample_start_] 
          $T[assign_stmt_920_sample_completed_] 
          $T[assign_stmt_920_update_start_] 
          $T[assign_stmt_920_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_894_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_920_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_920_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_920_sample_start_ &-> (assign_stmt_920_Sample)
          assign_stmt_920_sample_completed_ <-& (assign_stmt_920_Sample)
          assign_stmt_920_sample_completed_ &-> ($null)
          assign_stmt_920_update_start_ &-> (assign_stmt_920_Update)
          assign_stmt_920_update_completed_ <-& (assign_stmt_920_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_920_sample_start_
          assign_stmt_920_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_920_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_920_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_920_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_920_sample_completed_ 0)
          // self-release: 
          assign_stmt_920_sample_start_ o<-& (assign_stmt_920_sample_completed_ 1)
          $null &-> (assign_stmt_920_update_start_)
          assign_stmt_920_update_start_ o<-& (assign_stmt_920_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_894_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_894_delayed_2_0
          // end:  			ifx_xelse_exec_guard_894_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 350
          // Guard expression 
          // ifx_xelse_exec_guard_894_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) )
          $T[type_cast_925_sample_start_] 
          $T[type_cast_925_sample_completed_] 
          $T[type_cast_925_update_start_] 
          $T[type_cast_925_update_completed_] 
          // Guard dependency for expression type_cast_925 with guard R_ifx_xelse_exec_guard_894_delayed_2_0_921
          type_cast_925_sample_start_ <-& (assign_stmt_920_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_894_delayed_2_0
          assign_stmt_920_update_start_ o<-& (type_cast_925_sample_completed_ 0)
          // ($cast ($int<32>) inc64x_xix_x2 )
          // inc64x_xix_x2
          // start: Forward dependencies from ($cast ($int<32>) inc64x_xix_x2 ) to transition type_cast_925_sample_start_
          type_cast_925_sample_start_ <-& (type_cast_890_update_completed_)
          type_cast_925_sample_start_ <-& (assign_stmt_897_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc64x_xix_x2 ) to transition type_cast_925_sample_start_
          ;;[type_cast_925_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_925_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_925_sample_start_ &-> (type_cast_925_Sample)
          type_cast_925_sample_completed_ <-& (type_cast_925_Sample)
          type_cast_925_sample_completed_ &-> ($null)
          type_cast_925_update_start_ &-> (type_cast_925_Update)
          type_cast_925_update_completed_ <-& (type_cast_925_Update)
          // RAW reenables for ($cast ($int<32>) inc64x_xix_x2 )
          type_cast_890_update_start_ o<-& (type_cast_925_sample_completed_ 0)
          assign_stmt_897_update_start_ o<-& (type_cast_925_sample_completed_ 0)
          // self-release: 
          type_cast_925_sample_start_ o<-& (type_cast_925_sample_completed_ 1)
          $null &-> (type_cast_925_update_start_)
          type_cast_925_update_start_ o<-& (type_cast_925_update_completed_ 0)
          // Target expression
          // (as target) conv66
          // start: WAR dependencies for conv66
          // done: WAR dependencies for conv66
          // end:  			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_900_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 351
          $T[assign_stmt_929_sample_start_] 
          $T[assign_stmt_929_sample_completed_] 
          $T[assign_stmt_929_update_start_] 
          $T[assign_stmt_929_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_900_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_929_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_929_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_929_sample_start_ &-> (assign_stmt_929_Sample)
          assign_stmt_929_sample_completed_ <-& (assign_stmt_929_Sample)
          assign_stmt_929_sample_completed_ &-> ($null)
          assign_stmt_929_update_start_ &-> (assign_stmt_929_Update)
          assign_stmt_929_update_completed_ <-& (assign_stmt_929_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_929_sample_start_
          assign_stmt_929_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_929_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_929_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_929_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_929_sample_completed_ 0)
          // self-release: 
          assign_stmt_929_sample_start_ o<-& (assign_stmt_929_sample_completed_ 1)
          $null &-> (assign_stmt_929_update_start_)
          assign_stmt_929_update_start_ o<-& (assign_stmt_929_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_900_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_900_delayed_3_0
          // end:  			ifx_xelse_exec_guard_900_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for cmp74
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp74
          // start:  			$guard (ifx_xelse_exec_guard_900_delayed_3_0) $volatile cmp74 := (conv66 == add73) $buffering 1
          //  file prog.linked.opt.aa, line 352
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_900_delayed_3_0
          // Source expression
          // (conv66 == add73)
          // conv66
          // add73
          // Target expression
          // (as target) cmp74
          // start: WAR dependencies for cmp74
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp74
          // end:  			$guard (ifx_xelse_exec_guard_900_delayed_3_0) $volatile cmp74 := (conv66 == add73) $buffering 1
          // start:  			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 353
          $T[assign_stmt_938_sample_start_] 
          $T[assign_stmt_938_sample_completed_] 
          $T[assign_stmt_938_update_start_] 
          $T[assign_stmt_938_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_907_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_938_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_938_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_938_sample_start_ &-> (assign_stmt_938_Sample)
          assign_stmt_938_sample_completed_ <-& (assign_stmt_938_Sample)
          assign_stmt_938_sample_completed_ &-> ($null)
          assign_stmt_938_update_start_ &-> (assign_stmt_938_Update)
          assign_stmt_938_update_completed_ <-& (assign_stmt_938_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_938_sample_start_
          assign_stmt_938_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_938_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_938_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_938_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_938_sample_completed_ 0)
          // self-release: 
          assign_stmt_938_sample_start_ o<-& (assign_stmt_938_sample_completed_ 1)
          $null &-> (assign_stmt_938_update_start_)
          assign_stmt_938_update_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_907_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_907_delayed_3_0
          // end:  			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xthen76_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen76_taken
          // start:  			$volatile ifx_xelse_ifx_xthen76_taken := (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74) $buffering 1
          //  file prog.linked.opt.aa, line 354
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74)
          // ifx_xelse_exec_guard_907_delayed_3_0
          // cmp74
          // Target expression
          // (as target) ifx_xelse_ifx_xthen76_taken
          // start: WAR dependencies for ifx_xelse_ifx_xthen76_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen76_taken
          // end:  			$volatile ifx_xelse_ifx_xthen76_taken := (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74) $buffering 1
          // start:  			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 355
          $T[assign_stmt_946_sample_start_] 
          $T[assign_stmt_946_sample_completed_] 
          $T[assign_stmt_946_update_start_] 
          $T[assign_stmt_946_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_912_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_946_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_946_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_946_sample_start_ &-> (assign_stmt_946_Sample)
          assign_stmt_946_sample_completed_ <-& (assign_stmt_946_Sample)
          assign_stmt_946_sample_completed_ &-> ($null)
          assign_stmt_946_update_start_ &-> (assign_stmt_946_Update)
          assign_stmt_946_update_completed_ <-& (assign_stmt_946_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_946_sample_start_
          assign_stmt_946_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_946_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_946_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_831_update_start_ o<-& (assign_stmt_946_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_946_sample_completed_ 0)
          // self-release: 
          assign_stmt_946_sample_start_ o<-& (assign_stmt_946_sample_completed_ 1)
          $null &-> (assign_stmt_946_update_start_)
          assign_stmt_946_update_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_912_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_912_delayed_3_0
          // end:  			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xend78_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend78_taken
          // start:  			$volatile ifx_xelse_ifx_xend78_taken := (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 )) $buffering 1
          //  file prog.linked.opt.aa, line 356
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 ))
          // ifx_xelse_exec_guard_912_delayed_3_0
          // ( ~ cmp74 )
          // cmp74
          // Target expression
          // (as target) ifx_xelse_ifx_xend78_taken
          // start: WAR dependencies for ifx_xelse_ifx_xend78_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend78_taken
          // end:  			$volatile ifx_xelse_ifx_xend78_taken := (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 )) $buffering 1
          // start: WAR dependencies for ifx_xthen76_exec_guard
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen76_exec_guard
          // start:  			$volatile ifx_xthen76_exec_guard := ifx_xelse_ifx_xthen76_taken $buffering 1
          //  file prog.linked.opt.aa, line 357
          // volatile! 
          // Source expression
          // ifx_xelse_ifx_xthen76_taken
          // Target expression
          // (as target) ifx_xthen76_exec_guard
          // start: WAR dependencies for ifx_xthen76_exec_guard
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen76_exec_guard
          // end:  			$volatile ifx_xthen76_exec_guard := ifx_xelse_ifx_xthen76_taken $buffering 1
          // start: WAR dependencies for ifx_xthen76_ifx_xend78_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen76_ifx_xend78_taken
          // start:  			$volatile ifx_xthen76_ifx_xend78_taken := ifx_xthen76_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 358
          // volatile! 
          // Source expression
          // ifx_xthen76_exec_guard
          // Target expression
          // (as target) ifx_xthen76_ifx_xend78_taken
          // start: WAR dependencies for ifx_xthen76_ifx_xend78_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen76_ifx_xend78_taken
          // end:  			$volatile ifx_xthen76_ifx_xend78_taken := ifx_xthen76_exec_guard $buffering 1
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // start:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          //  file prog.linked.opt.aa, line 359
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xthen_taken
          // Target expression
          // (as target) ifx_xthen_exec_guard
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // end:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          // start:  			kx_x1_928_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 360
          $T[assign_stmt_964_sample_start_] 
          $T[assign_stmt_964_sample_completed_] 
          $T[assign_stmt_964_update_start_] 
          $T[assign_stmt_964_update_completed_] 
          // Source expression
          // kx_x1
          // Target expression
          // (as target) kx_x1_928_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_964_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_964_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_964_sample_start_ &-> (assign_stmt_964_Sample)
          assign_stmt_964_sample_completed_ <-& (assign_stmt_964_Sample)
          assign_stmt_964_sample_completed_ &-> ($null)
          assign_stmt_964_update_start_ &-> (assign_stmt_964_Update)
          assign_stmt_964_update_completed_ <-& (assign_stmt_964_Update)
          // start: Forward dependencies from kx_x1 to transition assign_stmt_964_sample_start_
          assign_stmt_964_sample_start_ <-& (phi_stmt_812_update_completed_)
          // done: Forward dependencies from kx_x1 to transition assign_stmt_964_sample_start_
          // RAW reenables for kx_x1
          phi_stmt_812_update_start_ o<-& (assign_stmt_964_sample_completed_ 0)
          // self-release: 
          assign_stmt_964_sample_start_ o<-& (assign_stmt_964_sample_completed_ 1)
          $null &-> (assign_stmt_964_update_start_)
          assign_stmt_964_update_start_ o<-& (assign_stmt_964_update_completed_ 0)
          // start: WAR dependencies for kx_x1_928_delayed_1_0
          // done: WAR dependencies for kx_x1_928_delayed_1_0
          // end:  			kx_x1_928_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add49
          // done: WAR dependencies for add49
          // start:  			$guard (ifx_xthen_exec_guard) $volatile add49 := (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 361
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
          // kx_x1_928_delayed_1_0
          // Target expression
          // (as target) add49
          // start: WAR dependencies for add49
          // done: WAR dependencies for add49
          // end:  			$guard (ifx_xthen_exec_guard) $volatile add49 := (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken
          // start:  			$volatile ifx_xthen_ifx_xend78_taken := ifx_xthen_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 362
          // volatile! 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken
          // end:  			$volatile ifx_xthen_ifx_xend78_taken := ifx_xthen_exec_guard $buffering 1
          // start:  			ifx_xthen_ifx_xend78_taken_938_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 363
          $T[assign_stmt_977_sample_start_] 
          $T[assign_stmt_977_sample_completed_] 
          $T[assign_stmt_977_update_start_] 
          $T[assign_stmt_977_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken_938_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_977_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_977_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_977_sample_start_ &-> (assign_stmt_977_Sample)
          assign_stmt_977_sample_completed_ <-& (assign_stmt_977_Sample)
          assign_stmt_977_sample_completed_ &-> ($null)
          assign_stmt_977_update_start_ &-> (assign_stmt_977_Update)
          assign_stmt_977_update_completed_ <-& (assign_stmt_977_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_977_sample_start_
          assign_stmt_977_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_977_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_977_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend78_taken
          type_cast_831_update_start_ o<-& (assign_stmt_977_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_977_sample_completed_ 0)
          // self-release: 
          assign_stmt_977_sample_start_ o<-& (assign_stmt_977_sample_completed_ 1)
          $null &-> (assign_stmt_977_update_start_)
          assign_stmt_977_update_start_ o<-& (assign_stmt_977_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken_938_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken_938_delayed_3_0
          // end:  			ifx_xthen_ifx_xend78_taken_938_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xend78_exec_guard
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend78_exec_guard
          // start:  			$volatile ifx_xend78_exec_guard := (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)) $buffering 1
          //  file prog.linked.opt.aa, line 364
          // volatile! 
          // Source expression
          // (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken))
          // ifx_xelse_ifx_xend78_taken
          // (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)
          // ifx_xthen_ifx_xend78_taken_938_delayed_3_0
          // ifx_xthen76_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xend78_exec_guard
          // start: WAR dependencies for ifx_xend78_exec_guard
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend78_exec_guard
          // end:  			$volatile ifx_xend78_exec_guard := (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)) $buffering 1
          // start:  			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 365
          $T[assign_stmt_987_sample_start_] 
          $T[assign_stmt_987_sample_completed_] 
          $T[assign_stmt_987_update_start_] 
          $T[assign_stmt_987_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken_944_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_987_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_987_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_987_sample_start_ &-> (assign_stmt_987_Sample)
          assign_stmt_987_sample_completed_ <-& (assign_stmt_987_Sample)
          assign_stmt_987_sample_completed_ &-> ($null)
          assign_stmt_987_update_start_ &-> (assign_stmt_987_Update)
          assign_stmt_987_update_completed_ <-& (assign_stmt_987_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_987_sample_start_
          assign_stmt_987_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_987_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_987_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend78_taken
          type_cast_831_update_start_ o<-& (assign_stmt_987_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_987_sample_completed_ 0)
          // self-release: 
          assign_stmt_987_sample_start_ o<-& (assign_stmt_987_sample_completed_ 1)
          $null &-> (assign_stmt_987_update_start_)
          assign_stmt_987_update_start_ o<-& (assign_stmt_987_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken_944_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken_944_delayed_3_0
          // end:  			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 366
          // Source expression
          // ($bitcast ($uint<16>) add49 )
          $T[type_cast_990_sample_start_] 
          $T[type_cast_990_sample_completed_] 
          $T[type_cast_990_update_start_] 
          $T[type_cast_990_update_completed_] 
          // add49
          // start: Forward dependencies from add49 to transition type_cast_990_sample_start_
          type_cast_990_sample_start_ <-& (assign_stmt_964_update_completed_)
          // done: Forward dependencies from add49 to transition type_cast_990_sample_start_
          ;;[type_cast_990_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_990_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_990_sample_start_ &-> (type_cast_990_Sample)
          type_cast_990_sample_completed_ <-& (type_cast_990_Sample)
          type_cast_990_sample_completed_ &-> ($null)
          type_cast_990_update_start_ &-> (type_cast_990_Update)
          type_cast_990_update_completed_ <-& (type_cast_990_Update)
          // RAW reenables for add49
          assign_stmt_964_update_start_ o<-& (type_cast_990_sample_completed_ 0)
          // self-release: 
          type_cast_990_sample_start_ o<-& (type_cast_990_sample_completed_ 1)
          $null &-> (type_cast_990_update_start_)
          type_cast_990_update_start_ o<-& (type_cast_990_update_completed_ 0)
          // Target expression
          // (as target) type_cast_946_946_delayed_3_0
          // start: WAR dependencies for type_cast_946_946_delayed_3_0
          // done: WAR dependencies for type_cast_946_946_delayed_3_0
          // end:  			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          assign_stmt_938_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_987_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_987_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_990_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (type_cast_990_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // done: WAR dependencies for kx_x0
          // start:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 367
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend78_taken_944_delayed_3_0
          // type_cast_946_946_delayed_3_0
          // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen76_ifx_xend78_taken
          // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend78_taken
          // Target expression
          // (as target) kx_x0
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_938_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_987_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (assign_stmt_987_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_990_update_start_ <-& (phi_stmt_812_sample_completed_)
          phi_stmt_812_sample_start_ o<-& (type_cast_990_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // done: WAR dependencies for kx_x0
          // end:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 368
          $T[assign_stmt_1011_sample_start_] 
          $T[assign_stmt_1011_sample_completed_] 
          $T[assign_stmt_1011_update_start_] 
          $T[assign_stmt_1011_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken_962_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1011_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1011_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1011_sample_start_ &-> (assign_stmt_1011_Sample)
          assign_stmt_1011_sample_completed_ <-& (assign_stmt_1011_Sample)
          assign_stmt_1011_sample_completed_ &-> ($null)
          assign_stmt_1011_update_start_ &-> (assign_stmt_1011_Update)
          assign_stmt_1011_update_completed_ <-& (assign_stmt_1011_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1011_sample_start_
          assign_stmt_1011_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_1011_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1011_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend78_taken
          type_cast_831_update_start_ o<-& (assign_stmt_1011_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_1011_sample_completed_ 0)
          // self-release: 
          assign_stmt_1011_sample_start_ o<-& (assign_stmt_1011_sample_completed_ 1)
          $null &-> (assign_stmt_1011_update_start_)
          assign_stmt_1011_update_start_ o<-& (assign_stmt_1011_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken_962_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken_962_delayed_3_0
          // end:  			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 369
          // Source expression
          // ($bitcast ($uint<16>) ix_x2 )
          $T[type_cast_1014_sample_start_] 
          $T[type_cast_1014_sample_completed_] 
          $T[type_cast_1014_update_start_] 
          $T[type_cast_1014_update_completed_] 
          // ix_x2
          // start: Forward dependencies from ix_x2 to transition type_cast_1014_sample_start_
          type_cast_1014_sample_start_ <-& (phi_stmt_817_update_completed_)
          // done: Forward dependencies from ix_x2 to transition type_cast_1014_sample_start_
          ;;[type_cast_1014_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1014_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1014_sample_start_ &-> (type_cast_1014_Sample)
          type_cast_1014_sample_completed_ <-& (type_cast_1014_Sample)
          type_cast_1014_sample_completed_ &-> ($null)
          type_cast_1014_update_start_ &-> (type_cast_1014_Update)
          type_cast_1014_update_completed_ <-& (type_cast_1014_Update)
          // RAW reenables for ix_x2
          phi_stmt_817_update_start_ o<-& (type_cast_1014_sample_completed_ 0)
          // self-release: 
          type_cast_1014_sample_start_ o<-& (type_cast_1014_sample_completed_ 1)
          $null &-> (type_cast_1014_update_start_)
          type_cast_1014_update_start_ o<-& (type_cast_1014_update_completed_ 0)
          // Target expression
          // (as target) type_cast_964_964_delayed_4_0
          // start: WAR dependencies for type_cast_964_964_delayed_4_0
          // done: WAR dependencies for type_cast_964_964_delayed_4_0
          // end:  			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 370
          // Source expression
          // ($bitcast ($uint<16>) inc64x_xix_x2 )
          $T[type_cast_1018_sample_start_] 
          $T[type_cast_1018_sample_completed_] 
          $T[type_cast_1018_update_start_] 
          $T[type_cast_1018_update_completed_] 
          // inc64x_xix_x2
          // start: Forward dependencies from inc64x_xix_x2 to transition type_cast_1018_sample_start_
          type_cast_1018_sample_start_ <-& (type_cast_890_update_completed_)
          type_cast_1018_sample_start_ <-& (assign_stmt_897_update_completed_)
          // done: Forward dependencies from inc64x_xix_x2 to transition type_cast_1018_sample_start_
          ;;[type_cast_1018_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1018_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1018_sample_start_ &-> (type_cast_1018_Sample)
          type_cast_1018_sample_completed_ <-& (type_cast_1018_Sample)
          type_cast_1018_sample_completed_ &-> ($null)
          type_cast_1018_update_start_ &-> (type_cast_1018_Update)
          type_cast_1018_update_completed_ <-& (type_cast_1018_Update)
          // RAW reenables for inc64x_xix_x2
          type_cast_890_update_start_ o<-& (type_cast_1018_sample_completed_ 0)
          assign_stmt_897_update_start_ o<-& (type_cast_1018_sample_completed_ 0)
          // self-release: 
          type_cast_1018_sample_start_ o<-& (type_cast_1018_sample_completed_ 1)
          $null &-> (type_cast_1018_update_start_)
          type_cast_1018_update_start_ o<-& (type_cast_1018_update_completed_ 0)
          // Target expression
          // (as target) type_cast_967_967_delayed_1_0
          // start: WAR dependencies for type_cast_967_967_delayed_1_0
          // done: WAR dependencies for type_cast_967_967_delayed_1_0
          // end:  			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 371
          // Source expression
          // ($bitcast ($uint<16>) inc64x_xix_x2 )
          $T[type_cast_1022_sample_start_] 
          $T[type_cast_1022_sample_completed_] 
          $T[type_cast_1022_update_start_] 
          $T[type_cast_1022_update_completed_] 
          // inc64x_xix_x2
          // start: Forward dependencies from inc64x_xix_x2 to transition type_cast_1022_sample_start_
          type_cast_1022_sample_start_ <-& (type_cast_890_update_completed_)
          type_cast_1022_sample_start_ <-& (assign_stmt_897_update_completed_)
          // done: Forward dependencies from inc64x_xix_x2 to transition type_cast_1022_sample_start_
          ;;[type_cast_1022_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1022_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1022_sample_start_ &-> (type_cast_1022_Sample)
          type_cast_1022_sample_completed_ <-& (type_cast_1022_Sample)
          type_cast_1022_sample_completed_ &-> ($null)
          type_cast_1022_update_start_ &-> (type_cast_1022_Update)
          type_cast_1022_update_completed_ <-& (type_cast_1022_Update)
          // RAW reenables for inc64x_xix_x2
          type_cast_890_update_start_ o<-& (type_cast_1022_sample_completed_ 0)
          assign_stmt_897_update_start_ o<-& (type_cast_1022_sample_completed_ 0)
          // self-release: 
          type_cast_1022_sample_start_ o<-& (type_cast_1022_sample_completed_ 1)
          $null &-> (type_cast_1022_update_start_)
          type_cast_1022_update_start_ o<-& (type_cast_1022_update_completed_ 0)
          // Target expression
          // (as target) type_cast_970_970_delayed_1_0
          // start: WAR dependencies for type_cast_970_970_delayed_1_0
          // done: WAR dependencies for type_cast_970_970_delayed_1_0
          // end:  			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_938_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1011_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_1011_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1014_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1014_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1018_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1018_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_1022_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1022_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // done: WAR dependencies for ix_x1
          // start:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 372
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend78_taken_962_delayed_3_0
          // type_cast_964_964_delayed_4_0
          // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen76_ifx_xend78_taken
          // type_cast_967_967_delayed_1_0
          // ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend78_taken
          // type_cast_970_970_delayed_1_0
          // Target expression
          // (as target) ix_x1
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_938_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1011_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (assign_stmt_1011_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1014_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1014_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1018_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1018_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1022_update_start_ <-& (phi_stmt_817_sample_completed_)
          phi_stmt_817_sample_start_ o<-& (type_cast_1022_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for ix_x1
          // end:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 373
          $T[assign_stmt_1039_sample_start_] 
          $T[assign_stmt_1039_sample_completed_] 
          $T[assign_stmt_1039_update_start_] 
          $T[assign_stmt_1039_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken_978_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1039_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1039_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1039_sample_start_ &-> (assign_stmt_1039_Sample)
          assign_stmt_1039_sample_completed_ <-& (assign_stmt_1039_Sample)
          assign_stmt_1039_sample_completed_ &-> ($null)
          assign_stmt_1039_update_start_ &-> (assign_stmt_1039_Update)
          assign_stmt_1039_update_completed_ <-& (assign_stmt_1039_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1039_sample_start_
          assign_stmt_1039_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_1039_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1039_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend78_taken
          type_cast_831_update_start_ o<-& (assign_stmt_1039_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_1039_sample_completed_ 0)
          // self-release: 
          assign_stmt_1039_sample_start_ o<-& (assign_stmt_1039_sample_completed_ 1)
          $null &-> (assign_stmt_1039_update_start_)
          assign_stmt_1039_update_start_ o<-& (assign_stmt_1039_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken_978_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken_978_delayed_3_0
          // end:  			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 374
          // Source expression
          // ($bitcast ($uint<16>) jx_x1 )
          $T[type_cast_1042_sample_start_] 
          $T[type_cast_1042_sample_completed_] 
          $T[type_cast_1042_update_start_] 
          $T[type_cast_1042_update_completed_] 
          // jx_x1
          // start: Forward dependencies from jx_x1 to transition type_cast_1042_sample_start_
          type_cast_1042_sample_start_ <-& (phi_stmt_822_update_completed_)
          // done: Forward dependencies from jx_x1 to transition type_cast_1042_sample_start_
          ;;[type_cast_1042_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1042_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1042_sample_start_ &-> (type_cast_1042_Sample)
          type_cast_1042_sample_completed_ <-& (type_cast_1042_Sample)
          type_cast_1042_sample_completed_ &-> ($null)
          type_cast_1042_update_start_ &-> (type_cast_1042_Update)
          type_cast_1042_update_completed_ <-& (type_cast_1042_Update)
          // RAW reenables for jx_x1
          phi_stmt_822_update_start_ o<-& (type_cast_1042_sample_completed_ 0)
          // self-release: 
          type_cast_1042_sample_start_ o<-& (type_cast_1042_sample_completed_ 1)
          $null &-> (type_cast_1042_update_start_)
          type_cast_1042_update_start_ o<-& (type_cast_1042_update_completed_ 0)
          // Target expression
          // (as target) type_cast_980_980_delayed_4_0
          // start: WAR dependencies for type_cast_980_980_delayed_4_0
          // done: WAR dependencies for type_cast_980_980_delayed_4_0
          // end:  			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 375
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_1046_sample_start_] 
          $T[type_cast_1046_sample_completed_] 
          $T[type_cast_1046_update_start_] 
          $T[type_cast_1046_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_1046_sample_start_
          type_cast_1046_sample_start_ <-& (type_cast_873_update_completed_)
          type_cast_1046_sample_start_ <-& (assign_stmt_909_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_1046_sample_start_
          ;;[type_cast_1046_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1046_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1046_sample_start_ &-> (type_cast_1046_Sample)
          type_cast_1046_sample_completed_ <-& (type_cast_1046_Sample)
          type_cast_1046_sample_completed_ &-> ($null)
          type_cast_1046_update_start_ &-> (type_cast_1046_Update)
          type_cast_1046_update_completed_ <-& (type_cast_1046_Update)
          // RAW reenables for jx_x2
          type_cast_873_update_start_ o<-& (type_cast_1046_sample_completed_ 0)
          assign_stmt_909_update_start_ o<-& (type_cast_1046_sample_completed_ 0)
          // self-release: 
          type_cast_1046_sample_start_ o<-& (type_cast_1046_sample_completed_ 1)
          $null &-> (type_cast_1046_update_start_)
          type_cast_1046_update_start_ o<-& (type_cast_1046_update_completed_ 0)
          // Target expression
          // (as target) type_cast_983_983_delayed_2_0
          // start: WAR dependencies for type_cast_983_983_delayed_2_0
          // done: WAR dependencies for type_cast_983_983_delayed_2_0
          // end:  			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 376
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_1050_sample_start_] 
          $T[type_cast_1050_sample_completed_] 
          $T[type_cast_1050_update_start_] 
          $T[type_cast_1050_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_1050_sample_start_
          type_cast_1050_sample_start_ <-& (type_cast_873_update_completed_)
          type_cast_1050_sample_start_ <-& (assign_stmt_909_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_1050_sample_start_
          ;;[type_cast_1050_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1050_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1050_sample_start_ &-> (type_cast_1050_Sample)
          type_cast_1050_sample_completed_ <-& (type_cast_1050_Sample)
          type_cast_1050_sample_completed_ &-> ($null)
          type_cast_1050_update_start_ &-> (type_cast_1050_Update)
          type_cast_1050_update_completed_ <-& (type_cast_1050_Update)
          // RAW reenables for jx_x2
          type_cast_873_update_start_ o<-& (type_cast_1050_sample_completed_ 0)
          assign_stmt_909_update_start_ o<-& (type_cast_1050_sample_completed_ 0)
          // self-release: 
          type_cast_1050_sample_start_ o<-& (type_cast_1050_sample_completed_ 1)
          $null &-> (type_cast_1050_update_start_)
          type_cast_1050_update_start_ o<-& (type_cast_1050_update_completed_ 0)
          // Target expression
          // (as target) type_cast_986_986_delayed_2_0
          // start: WAR dependencies for type_cast_986_986_delayed_2_0
          // done: WAR dependencies for type_cast_986_986_delayed_2_0
          // end:  			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_938_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1039_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_1039_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1042_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1042_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1046_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1046_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1050_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1050_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for jx_x0
          // start:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 377
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend78_taken_978_delayed_3_0
          // type_cast_980_980_delayed_4_0
          // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen76_ifx_xend78_taken
          // type_cast_983_983_delayed_2_0
          // ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend78_taken
          // type_cast_986_986_delayed_2_0
          // Target expression
          // (as target) jx_x0
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_925_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_925_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_938_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_938_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_946_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_946_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1039_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (assign_stmt_1039_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1042_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1042_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1046_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1046_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1050_update_start_ <-& (phi_stmt_822_sample_completed_)
          phi_stmt_822_sample_start_ o<-& (type_cast_1050_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for jx_x0
          // end:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend78_taken_994_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 378
          $T[assign_stmt_1067_sample_start_] 
          $T[assign_stmt_1067_sample_completed_] 
          $T[assign_stmt_1067_update_start_] 
          $T[assign_stmt_1067_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend78_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend78_taken_994_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1067_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1067_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1067_sample_start_ &-> (assign_stmt_1067_Sample)
          assign_stmt_1067_sample_completed_ <-& (assign_stmt_1067_Sample)
          assign_stmt_1067_sample_completed_ &-> ($null)
          assign_stmt_1067_update_start_ &-> (assign_stmt_1067_Update)
          assign_stmt_1067_update_completed_ <-& (assign_stmt_1067_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1067_sample_start_
          assign_stmt_1067_sample_start_ <-& (type_cast_831_update_completed_)
          assign_stmt_1067_sample_start_ <-& (type_cast_841_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend78_taken to transition assign_stmt_1067_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend78_taken
          type_cast_831_update_start_ o<-& (assign_stmt_1067_sample_completed_ 0)
          type_cast_841_update_start_ o<-& (assign_stmt_1067_sample_completed_ 0)
          // self-release: 
          assign_stmt_1067_sample_start_ o<-& (assign_stmt_1067_sample_completed_ 1)
          $null &-> (assign_stmt_1067_update_start_)
          assign_stmt_1067_update_start_ o<-& (assign_stmt_1067_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend78_taken_994_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend78_taken_994_delayed_3_0
          // end:  			ifx_xthen_ifx_xend78_taken_994_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // start:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 379
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend78_taken_994_delayed_3_0
          // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen76_ifx_xend78_taken
          // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend78_taken
          // Target expression
          // (as target) flagx_x0
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // end:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			$guard (ifx_xend78_exec_guard) conv82170 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 380
          // Guard expression 
          // ifx_xend78_exec_guard
          // Source expression
          // ($cast ($uint<32>) kx_x0 )
          $T[type_cast_1090_sample_start_] 
          $T[type_cast_1090_sample_completed_] 
          $T[type_cast_1090_update_start_] 
          $T[type_cast_1090_update_completed_] 
          // Guard dependency for expression type_cast_1090 with guard R_ifx_xend78_exec_guard_1087
          // root assign_stmt_728 of guard-expression not in visited elements.
          // root assign_stmt_752 of guard-expression not in visited elements.
          type_cast_1090_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_977_update_completed_)
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_1090_sample_start_
          type_cast_1090_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1090_sample_start_ <-& (assign_stmt_987_update_completed_)
          type_cast_1090_sample_start_ <-& (type_cast_990_update_completed_)
          // done: Forward dependencies from kx_x0 to transition type_cast_1090_sample_start_
          ;;[type_cast_1090_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1090_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1090_sample_start_ &-> (type_cast_1090_Sample)
          type_cast_1090_sample_completed_ <-& (type_cast_1090_Sample)
          type_cast_1090_sample_completed_ &-> ($null)
          type_cast_1090_update_start_ &-> (type_cast_1090_Update)
          type_cast_1090_update_completed_ <-& (type_cast_1090_Update)
          // RAW reenables for kx_x0
          type_cast_925_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          assign_stmt_987_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          type_cast_990_update_start_ o<-& (type_cast_1090_sample_completed_ 0)
          // self-release: 
          type_cast_1090_sample_start_ o<-& (type_cast_1090_sample_completed_ 1)
          $null &-> (type_cast_1090_update_start_)
          type_cast_1090_update_start_ o<-& (type_cast_1090_update_completed_ 0)
          // Target expression
          // (as target) conv82170
          // start: WAR dependencies for conv82170
          // done: WAR dependencies for conv82170
          // end:  			$guard (ifx_xend78_exec_guard) conv82170 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xend78_exec_guard) conv86 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 381
          // Guard expression 
          // ifx_xend78_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
          $T[type_cast_1096_sample_start_] 
          $T[type_cast_1096_sample_completed_] 
          $T[type_cast_1096_update_start_] 
          $T[type_cast_1096_update_completed_] 
          // Guard dependency for expression type_cast_1096 with guard R_ifx_xend78_exec_guard_1092
          // root assign_stmt_728 of guard-expression not in visited elements.
          // root assign_stmt_752 of guard-expression not in visited elements.
          type_cast_1096_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_977_update_completed_)
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          // ($cast ($int<32>) jx_x0 )
          // jx_x0
          // start: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_1096_sample_start_
          type_cast_1096_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1096_sample_start_ <-& (assign_stmt_1039_update_completed_)
          type_cast_1096_sample_start_ <-& (type_cast_1042_update_completed_)
          type_cast_1096_sample_start_ <-& (type_cast_1046_update_completed_)
          type_cast_1096_sample_start_ <-& (type_cast_1050_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_1096_sample_start_
          ;;[type_cast_1096_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1096_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1096_sample_start_ &-> (type_cast_1096_Sample)
          type_cast_1096_sample_completed_ <-& (type_cast_1096_Sample)
          type_cast_1096_sample_completed_ &-> ($null)
          type_cast_1096_update_start_ &-> (type_cast_1096_Update)
          type_cast_1096_update_completed_ <-& (type_cast_1096_Update)
          // RAW reenables for ($cast ($int<32>) jx_x0 )
          type_cast_925_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          assign_stmt_1039_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          type_cast_1042_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          type_cast_1046_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          type_cast_1050_update_start_ o<-& (type_cast_1096_sample_completed_ 0)
          // self-release: 
          type_cast_1096_sample_start_ o<-& (type_cast_1096_sample_completed_ 1)
          $null &-> (type_cast_1096_update_start_)
          type_cast_1096_update_start_ o<-& (type_cast_1096_update_completed_ 0)
          // Target expression
          // (as target) conv86
          // start: WAR dependencies for conv86
          // done: WAR dependencies for conv86
          // end:  			$guard (ifx_xend78_exec_guard) conv86 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend78_exec_guard_1023_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 382
          $T[assign_stmt_1100_sample_start_] 
          $T[assign_stmt_1100_sample_completed_] 
          $T[assign_stmt_1100_update_start_] 
          $T[assign_stmt_1100_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1023_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1100_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1100_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1100_sample_start_ &-> (assign_stmt_1100_Sample)
          assign_stmt_1100_sample_completed_ <-& (assign_stmt_1100_Sample)
          assign_stmt_1100_sample_completed_ &-> ($null)
          assign_stmt_1100_update_start_ &-> (assign_stmt_1100_Update)
          assign_stmt_1100_update_completed_ <-& (assign_stmt_1100_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1100_sample_start_
          assign_stmt_1100_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1100_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1100_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1100_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1100_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1100_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1100_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1100_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1100_sample_completed_ 0)
          // self-release: 
          assign_stmt_1100_sample_start_ o<-& (assign_stmt_1100_sample_completed_ 1)
          $null &-> (assign_stmt_1100_update_start_)
          assign_stmt_1100_update_start_ o<-& (assign_stmt_1100_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1023_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1023_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1023_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul87
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul87
          // start:  			$guard (ifx_xend78_exec_guard_1023_delayed_1_0) $volatile mul87 := (conv86 * conv33) $buffering 1
          //  file prog.linked.opt.aa, line 383
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1023_delayed_1_0
          // Source expression
          // (conv86 * conv33)
          // conv86
          // conv33
          // Target expression
          // (as target) mul87
          // start: WAR dependencies for mul87
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul87
          // end:  			$guard (ifx_xend78_exec_guard_1023_delayed_1_0) $volatile mul87 := (conv86 * conv33) $buffering 1
          // start:  			$guard (ifx_xend78_exec_guard) conv92 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 384
          // Guard expression 
          // ifx_xend78_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
          $T[type_cast_1111_sample_start_] 
          $T[type_cast_1111_sample_completed_] 
          $T[type_cast_1111_update_start_] 
          $T[type_cast_1111_update_completed_] 
          // Guard dependency for expression type_cast_1111 with guard R_ifx_xend78_exec_guard_1107
          // root assign_stmt_728 of guard-expression not in visited elements.
          // root assign_stmt_752 of guard-expression not in visited elements.
          type_cast_1111_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_977_update_completed_)
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          // ($cast ($int<32>) ix_x1 )
          // ix_x1
          // start: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_1111_sample_start_
          type_cast_1111_sample_start_ <-& (type_cast_925_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_938_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_946_update_completed_)
          type_cast_1111_sample_start_ <-& (assign_stmt_1011_update_completed_)
          type_cast_1111_sample_start_ <-& (type_cast_1014_update_completed_)
          type_cast_1111_sample_start_ <-& (type_cast_1018_update_completed_)
          type_cast_1111_sample_start_ <-& (type_cast_1022_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_1111_sample_start_
          ;;[type_cast_1111_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1111_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1111_sample_start_ &-> (type_cast_1111_Sample)
          type_cast_1111_sample_completed_ <-& (type_cast_1111_Sample)
          type_cast_1111_sample_completed_ &-> ($null)
          type_cast_1111_update_start_ &-> (type_cast_1111_Update)
          type_cast_1111_update_completed_ <-& (type_cast_1111_Update)
          // RAW reenables for ($cast ($int<32>) ix_x1 )
          type_cast_925_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          assign_stmt_1011_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          type_cast_1014_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          type_cast_1018_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          type_cast_1022_update_start_ o<-& (type_cast_1111_sample_completed_ 0)
          // self-release: 
          type_cast_1111_sample_start_ o<-& (type_cast_1111_sample_completed_ 1)
          $null &-> (type_cast_1111_update_start_)
          type_cast_1111_update_start_ o<-& (type_cast_1111_update_completed_ 0)
          // Target expression
          // (as target) conv92
          // start: WAR dependencies for conv92
          // done: WAR dependencies for conv92
          // end:  			$guard (ifx_xend78_exec_guard) conv92 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend78_exec_guard_1035_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 385
          $T[assign_stmt_1115_sample_start_] 
          $T[assign_stmt_1115_sample_completed_] 
          $T[assign_stmt_1115_update_start_] 
          $T[assign_stmt_1115_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1035_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1115_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1115_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1115_sample_start_ &-> (assign_stmt_1115_Sample)
          assign_stmt_1115_sample_completed_ <-& (assign_stmt_1115_Sample)
          assign_stmt_1115_sample_completed_ &-> ($null)
          assign_stmt_1115_update_start_ &-> (assign_stmt_1115_Update)
          assign_stmt_1115_update_completed_ <-& (assign_stmt_1115_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1115_sample_start_
          assign_stmt_1115_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1115_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1115_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1115_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1115_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1115_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1115_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1115_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1115_sample_completed_ 0)
          // self-release: 
          assign_stmt_1115_sample_start_ o<-& (assign_stmt_1115_sample_completed_ 1)
          $null &-> (assign_stmt_1115_update_start_)
          assign_stmt_1115_update_start_ o<-& (assign_stmt_1115_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1035_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1035_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1035_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul93
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul93
          // start:  			$guard (ifx_xend78_exec_guard_1035_delayed_1_0) $volatile mul93 := (conv92 * conv90) $buffering 1
          //  file prog.linked.opt.aa, line 386
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1035_delayed_1_0
          // Source expression
          // (conv92 * conv90)
          // conv92
          // conv90
          // Target expression
          // (as target) mul93
          // start: WAR dependencies for mul93
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul93
          // end:  			$guard (ifx_xend78_exec_guard_1035_delayed_1_0) $volatile mul93 := (conv92 * conv90) $buffering 1
          // start:  			ifx_xend78_exec_guard_1041_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 387
          $T[assign_stmt_1124_sample_start_] 
          $T[assign_stmt_1124_sample_completed_] 
          $T[assign_stmt_1124_update_start_] 
          $T[assign_stmt_1124_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1041_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1124_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1124_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1124_sample_start_ &-> (assign_stmt_1124_Sample)
          assign_stmt_1124_sample_completed_ <-& (assign_stmt_1124_Sample)
          assign_stmt_1124_sample_completed_ &-> ($null)
          assign_stmt_1124_update_start_ &-> (assign_stmt_1124_Update)
          assign_stmt_1124_update_completed_ <-& (assign_stmt_1124_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1124_sample_start_
          assign_stmt_1124_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1124_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1124_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1124_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1124_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1124_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1124_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1124_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1124_sample_completed_ 0)
          // self-release: 
          assign_stmt_1124_sample_start_ o<-& (assign_stmt_1124_sample_completed_ 1)
          $null &-> (assign_stmt_1124_update_start_)
          assign_stmt_1124_update_start_ o<-& (assign_stmt_1124_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1041_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1041_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1041_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add88
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add88
          // start:  			$guard (ifx_xend78_exec_guard_1041_delayed_1_0) $volatile add88 := (mul93 + conv82170) $buffering 1
          //  file prog.linked.opt.aa, line 388
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1041_delayed_1_0
          // Source expression
          // (mul93 + conv82170)
          // mul93
          // conv82170
          // Target expression
          // (as target) add88
          // start: WAR dependencies for add88
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add88
          // end:  			$guard (ifx_xend78_exec_guard_1041_delayed_1_0) $volatile add88 := (mul93 + conv82170) $buffering 1
          // start:  			ifx_xend78_exec_guard_1047_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 389
          $T[assign_stmt_1133_sample_start_] 
          $T[assign_stmt_1133_sample_completed_] 
          $T[assign_stmt_1133_update_start_] 
          $T[assign_stmt_1133_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1047_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1133_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1133_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1133_sample_start_ &-> (assign_stmt_1133_Sample)
          assign_stmt_1133_sample_completed_ <-& (assign_stmt_1133_Sample)
          assign_stmt_1133_sample_completed_ &-> ($null)
          assign_stmt_1133_update_start_ &-> (assign_stmt_1133_Update)
          assign_stmt_1133_update_completed_ <-& (assign_stmt_1133_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1133_sample_start_
          assign_stmt_1133_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1133_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1133_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1133_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1133_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1133_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1133_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1133_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1133_sample_completed_ 0)
          // self-release: 
          assign_stmt_1133_sample_start_ o<-& (assign_stmt_1133_sample_completed_ 1)
          $null &-> (assign_stmt_1133_update_start_)
          assign_stmt_1133_update_start_ o<-& (assign_stmt_1133_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1047_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1047_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1047_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add94
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add94
          // start:  			$guard (ifx_xend78_exec_guard_1047_delayed_1_0) $volatile add94 := (add88 + mul87) $buffering 1
          //  file prog.linked.opt.aa, line 390
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1047_delayed_1_0
          // Source expression
          // (add88 + mul87)
          // add88
          // mul87
          // Target expression
          // (as target) add94
          // start: WAR dependencies for add94
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add94
          // end:  			$guard (ifx_xend78_exec_guard_1047_delayed_1_0) $volatile add94 := (add88 + mul87) $buffering 1
          // start:  			ifx_xend78_exec_guard_1053_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 391
          $T[assign_stmt_1142_sample_start_] 
          $T[assign_stmt_1142_sample_completed_] 
          $T[assign_stmt_1142_update_start_] 
          $T[assign_stmt_1142_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1053_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1142_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1142_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1142_sample_start_ &-> (assign_stmt_1142_Sample)
          assign_stmt_1142_sample_completed_ <-& (assign_stmt_1142_Sample)
          assign_stmt_1142_sample_completed_ &-> ($null)
          assign_stmt_1142_update_start_ &-> (assign_stmt_1142_Update)
          assign_stmt_1142_update_completed_ <-& (assign_stmt_1142_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1142_sample_start_
          assign_stmt_1142_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1142_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1142_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1142_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1142_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1142_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1142_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1142_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1142_sample_completed_ 0)
          // self-release: 
          assign_stmt_1142_sample_start_ o<-& (assign_stmt_1142_sample_completed_ 1)
          $null &-> (assign_stmt_1142_update_start_)
          assign_stmt_1142_update_start_ o<-& (assign_stmt_1142_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1053_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1053_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1053_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xend78_exec_guard_1053_delayed_1_0) conv95 := ($cast ($uint<16>) add94 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 392
          // Guard expression 
          // ifx_xend78_exec_guard_1053_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) add94 )
          $T[type_cast_1146_sample_start_] 
          $T[type_cast_1146_sample_completed_] 
          $T[type_cast_1146_update_start_] 
          $T[type_cast_1146_update_completed_] 
          // Guard dependency for expression type_cast_1146 with guard R_ifx_xend78_exec_guard_1053_delayed_1_0_1143
          type_cast_1146_sample_start_ <-& (assign_stmt_1142_update_completed_)
          // RAW reenables for ifx_xend78_exec_guard_1053_delayed_1_0
          assign_stmt_1142_update_start_ o<-& (type_cast_1146_sample_completed_ 0)
          // add94
          // start: Forward dependencies from add94 to transition type_cast_1146_sample_start_
          type_cast_1146_sample_start_ <-& (type_cast_1090_update_completed_)
          type_cast_1146_sample_start_ <-& (type_cast_1096_update_completed_)
          type_cast_1146_sample_start_ <-& (type_cast_1111_update_completed_)
          // done: Forward dependencies from add94 to transition type_cast_1146_sample_start_
          ;;[type_cast_1146_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1146_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1146_sample_start_ &-> (type_cast_1146_Sample)
          type_cast_1146_sample_completed_ <-& (type_cast_1146_Sample)
          type_cast_1146_sample_completed_ &-> ($null)
          type_cast_1146_update_start_ &-> (type_cast_1146_Update)
          type_cast_1146_update_completed_ <-& (type_cast_1146_Update)
          // RAW reenables for add94
          type_cast_1090_update_start_ o<-& (type_cast_1146_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (type_cast_1146_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (type_cast_1146_sample_completed_ 0)
          // self-release: 
          type_cast_1146_sample_start_ o<-& (type_cast_1146_sample_completed_ 1)
          $null &-> (type_cast_1146_update_start_)
          type_cast_1146_update_start_ o<-& (type_cast_1146_update_completed_ 0)
          // Target expression
          // (as target) conv95
          // start: WAR dependencies for conv95
          // done: WAR dependencies for conv95
          // end:  			$guard (ifx_xend78_exec_guard_1053_delayed_1_0) conv95 := ($cast ($uint<16>) add94 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xend78_exec_guard_1058_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 393
          $T[assign_stmt_1150_sample_start_] 
          $T[assign_stmt_1150_sample_completed_] 
          $T[assign_stmt_1150_update_start_] 
          $T[assign_stmt_1150_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1058_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1150_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1150_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1150_sample_start_ &-> (assign_stmt_1150_Sample)
          assign_stmt_1150_sample_completed_ <-& (assign_stmt_1150_Sample)
          assign_stmt_1150_sample_completed_ &-> ($null)
          assign_stmt_1150_update_start_ &-> (assign_stmt_1150_Update)
          assign_stmt_1150_update_completed_ <-& (assign_stmt_1150_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1150_sample_start_
          assign_stmt_1150_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1150_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1150_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1150_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1150_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1150_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1150_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1150_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1150_sample_completed_ 0)
          // self-release: 
          assign_stmt_1150_sample_start_ o<-& (assign_stmt_1150_sample_completed_ 1)
          $null &-> (assign_stmt_1150_update_start_)
          assign_stmt_1150_update_start_ o<-& (assign_stmt_1150_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1058_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1058_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1058_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // start:  			$guard (ifx_xend78_exec_guard_1058_delayed_1_0) $volatile sub := (conv86 - conv104) $buffering 1
          //  file prog.linked.opt.aa, line 394
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1058_delayed_1_0
          // Source expression
          // (conv86 - conv104)
          // conv86
          // conv104
          // Target expression
          // (as target) sub
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // end:  			$guard (ifx_xend78_exec_guard_1058_delayed_1_0) $volatile sub := (conv86 - conv104) $buffering 1
          // start:  			ifx_xend78_exec_guard_1064_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 395
          $T[assign_stmt_1159_sample_start_] 
          $T[assign_stmt_1159_sample_completed_] 
          $T[assign_stmt_1159_update_start_] 
          $T[assign_stmt_1159_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1064_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1159_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1159_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1159_sample_start_ &-> (assign_stmt_1159_Sample)
          assign_stmt_1159_sample_completed_ <-& (assign_stmt_1159_Sample)
          assign_stmt_1159_sample_completed_ &-> ($null)
          assign_stmt_1159_update_start_ &-> (assign_stmt_1159_Update)
          assign_stmt_1159_update_completed_ <-& (assign_stmt_1159_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1159_sample_start_
          assign_stmt_1159_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1159_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1159_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1159_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1159_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1159_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1159_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1159_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1159_sample_completed_ 0)
          // self-release: 
          assign_stmt_1159_sample_start_ o<-& (assign_stmt_1159_sample_completed_ 1)
          $null &-> (assign_stmt_1159_update_start_)
          assign_stmt_1159_update_start_ o<-& (assign_stmt_1159_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1064_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1064_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1064_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul105
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul105
          // start:  			$guard (ifx_xend78_exec_guard_1064_delayed_1_0) $volatile mul105 := (sub * conv27) $buffering 1
          //  file prog.linked.opt.aa, line 396
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1064_delayed_1_0
          // Source expression
          // (sub * conv27)
          // sub
          // conv27
          // Target expression
          // (as target) mul105
          // start: WAR dependencies for mul105
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul105
          // end:  			$guard (ifx_xend78_exec_guard_1064_delayed_1_0) $volatile mul105 := (sub * conv27) $buffering 1
          // start:  			ifx_xend78_exec_guard_1070_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 397
          $T[assign_stmt_1168_sample_start_] 
          $T[assign_stmt_1168_sample_completed_] 
          $T[assign_stmt_1168_update_start_] 
          $T[assign_stmt_1168_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1070_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1168_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1168_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1168_sample_start_ &-> (assign_stmt_1168_Sample)
          assign_stmt_1168_sample_completed_ <-& (assign_stmt_1168_Sample)
          assign_stmt_1168_sample_completed_ &-> ($null)
          assign_stmt_1168_update_start_ &-> (assign_stmt_1168_Update)
          assign_stmt_1168_update_completed_ <-& (assign_stmt_1168_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1168_sample_start_
          assign_stmt_1168_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1168_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1168_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1168_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1168_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1168_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1168_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1168_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1168_sample_completed_ 0)
          // self-release: 
          assign_stmt_1168_sample_start_ o<-& (assign_stmt_1168_sample_completed_ 1)
          $null &-> (assign_stmt_1168_update_start_)
          assign_stmt_1168_update_start_ o<-& (assign_stmt_1168_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1070_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1070_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1070_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub113
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub113
          // start:  			$guard (ifx_xend78_exec_guard_1070_delayed_1_0) $volatile sub113 := (conv92 - conv104) $buffering 1
          //  file prog.linked.opt.aa, line 398
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1070_delayed_1_0
          // Source expression
          // (conv92 - conv104)
          // conv92
          // conv104
          // Target expression
          // (as target) sub113
          // start: WAR dependencies for sub113
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub113
          // end:  			$guard (ifx_xend78_exec_guard_1070_delayed_1_0) $volatile sub113 := (conv92 - conv104) $buffering 1
          // start:  			ifx_xend78_exec_guard_1076_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 399
          $T[assign_stmt_1177_sample_start_] 
          $T[assign_stmt_1177_sample_completed_] 
          $T[assign_stmt_1177_update_start_] 
          $T[assign_stmt_1177_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1076_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1177_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1177_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1177_sample_start_ &-> (assign_stmt_1177_Sample)
          assign_stmt_1177_sample_completed_ <-& (assign_stmt_1177_Sample)
          assign_stmt_1177_sample_completed_ &-> ($null)
          assign_stmt_1177_update_start_ &-> (assign_stmt_1177_Update)
          assign_stmt_1177_update_completed_ <-& (assign_stmt_1177_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1177_sample_start_
          assign_stmt_1177_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1177_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1177_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1177_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1177_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1177_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1177_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1177_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1177_sample_completed_ 0)
          // self-release: 
          assign_stmt_1177_sample_start_ o<-& (assign_stmt_1177_sample_completed_ 1)
          $null &-> (assign_stmt_1177_update_start_)
          assign_stmt_1177_update_start_ o<-& (assign_stmt_1177_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1076_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1076_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1076_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul114
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul114
          // start:  			$guard (ifx_xend78_exec_guard_1076_delayed_1_0) $volatile mul114 := (sub113 * conv108) $buffering 1
          //  file prog.linked.opt.aa, line 400
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1076_delayed_1_0
          // Source expression
          // (sub113 * conv108)
          // sub113
          // conv108
          // Target expression
          // (as target) mul114
          // start: WAR dependencies for mul114
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul114
          // end:  			$guard (ifx_xend78_exec_guard_1076_delayed_1_0) $volatile mul114 := (sub113 * conv108) $buffering 1
          // start:  			ifx_xend78_exec_guard_1082_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 401
          $T[assign_stmt_1186_sample_start_] 
          $T[assign_stmt_1186_sample_completed_] 
          $T[assign_stmt_1186_update_start_] 
          $T[assign_stmt_1186_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1082_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1186_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1186_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1186_sample_start_ &-> (assign_stmt_1186_Sample)
          assign_stmt_1186_sample_completed_ <-& (assign_stmt_1186_Sample)
          assign_stmt_1186_sample_completed_ &-> ($null)
          assign_stmt_1186_update_start_ &-> (assign_stmt_1186_Update)
          assign_stmt_1186_update_completed_ <-& (assign_stmt_1186_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1186_sample_start_
          assign_stmt_1186_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1186_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1186_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1186_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1186_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1186_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1186_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1186_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1186_sample_completed_ 0)
          // self-release: 
          assign_stmt_1186_sample_start_ o<-& (assign_stmt_1186_sample_completed_ 1)
          $null &-> (assign_stmt_1186_update_start_)
          assign_stmt_1186_update_start_ o<-& (assign_stmt_1186_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1082_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1082_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1082_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add106
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add106
          // start:  			$guard (ifx_xend78_exec_guard_1082_delayed_1_0) $volatile add106 := (mul114 + conv82170) $buffering 1
          //  file prog.linked.opt.aa, line 402
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1082_delayed_1_0
          // Source expression
          // (mul114 + conv82170)
          // mul114
          // conv82170
          // Target expression
          // (as target) add106
          // start: WAR dependencies for add106
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add106
          // end:  			$guard (ifx_xend78_exec_guard_1082_delayed_1_0) $volatile add106 := (mul114 + conv82170) $buffering 1
          // start:  			ifx_xend78_exec_guard_1088_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 403
          $T[assign_stmt_1195_sample_start_] 
          $T[assign_stmt_1195_sample_completed_] 
          $T[assign_stmt_1195_update_start_] 
          $T[assign_stmt_1195_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1088_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1195_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1195_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1195_sample_start_ &-> (assign_stmt_1195_Sample)
          assign_stmt_1195_sample_completed_ <-& (assign_stmt_1195_Sample)
          assign_stmt_1195_sample_completed_ &-> ($null)
          assign_stmt_1195_update_start_ &-> (assign_stmt_1195_Update)
          assign_stmt_1195_update_completed_ <-& (assign_stmt_1195_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1195_sample_start_
          assign_stmt_1195_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1195_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1195_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1195_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1195_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1195_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1195_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1195_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1195_sample_completed_ 0)
          // self-release: 
          assign_stmt_1195_sample_start_ o<-& (assign_stmt_1195_sample_completed_ 1)
          $null &-> (assign_stmt_1195_update_start_)
          assign_stmt_1195_update_start_ o<-& (assign_stmt_1195_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1088_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1088_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1088_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add115
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add115
          // start:  			$guard (ifx_xend78_exec_guard_1088_delayed_1_0) $volatile add115 := (add106 + mul105) $buffering 1
          //  file prog.linked.opt.aa, line 404
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1088_delayed_1_0
          // Source expression
          // (add106 + mul105)
          // add106
          // mul105
          // Target expression
          // (as target) add115
          // start: WAR dependencies for add115
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add115
          // end:  			$guard (ifx_xend78_exec_guard_1088_delayed_1_0) $volatile add115 := (add106 + mul105) $buffering 1
          // start:  			ifx_xend78_exec_guard_1094_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 405
          $T[assign_stmt_1204_sample_start_] 
          $T[assign_stmt_1204_sample_completed_] 
          $T[assign_stmt_1204_update_start_] 
          $T[assign_stmt_1204_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1094_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1204_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1204_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1204_sample_start_ &-> (assign_stmt_1204_Sample)
          assign_stmt_1204_sample_completed_ <-& (assign_stmt_1204_Sample)
          assign_stmt_1204_sample_completed_ &-> ($null)
          assign_stmt_1204_update_start_ &-> (assign_stmt_1204_Update)
          assign_stmt_1204_update_completed_ <-& (assign_stmt_1204_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1204_sample_start_
          assign_stmt_1204_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1204_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1204_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1204_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1204_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1204_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1204_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1204_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1204_sample_completed_ 0)
          // self-release: 
          assign_stmt_1204_sample_start_ o<-& (assign_stmt_1204_sample_completed_ 1)
          $null &-> (assign_stmt_1204_update_start_)
          assign_stmt_1204_update_start_ o<-& (assign_stmt_1204_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1094_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1094_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1094_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1099_1099_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 406
          // Source expression
          // ($bitcast ($int<32>) conv104 )
          $T[type_cast_1207_sample_start_] 
          $T[type_cast_1207_sample_completed_] 
          $T[type_cast_1207_update_start_] 
          $T[type_cast_1207_update_completed_] 
          // conv104
          // start: Forward dependencies from conv104 to transition type_cast_1207_sample_start_
          // done: Forward dependencies from conv104 to transition type_cast_1207_sample_start_
          ;;[type_cast_1207_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1207_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1207_sample_start_ &-> (type_cast_1207_Sample)
          type_cast_1207_sample_completed_ <-& (type_cast_1207_Sample)
          type_cast_1207_sample_completed_ &-> ($null)
          type_cast_1207_update_start_ &-> (type_cast_1207_Update)
          type_cast_1207_update_completed_ <-& (type_cast_1207_Update)
          // RAW reenables for conv104
          // self-release: 
          type_cast_1207_sample_start_ o<-& (type_cast_1207_sample_completed_ 1)
          $null &-> (type_cast_1207_update_start_)
          type_cast_1207_update_start_ o<-& (type_cast_1207_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1099_1099_delayed_1_0
          // start: WAR dependencies for type_cast_1099_1099_delayed_1_0
          // done: WAR dependencies for type_cast_1099_1099_delayed_1_0
          // end:  			type_cast_1099_1099_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp121
          // done: WAR dependencies for cmp121
          // start:  			$guard (ifx_xend78_exec_guard_1094_delayed_1_0) $volatile cmp121 := (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 407
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1094_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0)
          // ($bitcast ($int<32>) conv92 )
          // conv92
          // type_cast_1099_1099_delayed_1_0
          // Target expression
          // (as target) cmp121
          // start: WAR dependencies for cmp121
          // done: WAR dependencies for cmp121
          // end:  			$guard (ifx_xend78_exec_guard_1094_delayed_1_0) $volatile cmp121 := (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0) $buffering 1
          // start:  			ifx_xend78_exec_guard_1102_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 408
          $T[assign_stmt_1218_sample_start_] 
          $T[assign_stmt_1218_sample_completed_] 
          $T[assign_stmt_1218_update_start_] 
          $T[assign_stmt_1218_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1102_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1218_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1218_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1218_sample_start_ &-> (assign_stmt_1218_Sample)
          assign_stmt_1218_sample_completed_ <-& (assign_stmt_1218_Sample)
          assign_stmt_1218_sample_completed_ &-> ($null)
          assign_stmt_1218_update_start_ &-> (assign_stmt_1218_Update)
          assign_stmt_1218_update_completed_ <-& (assign_stmt_1218_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1218_sample_start_
          assign_stmt_1218_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1218_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1218_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1218_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1218_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1218_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1218_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1218_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1218_sample_completed_ 0)
          // self-release: 
          assign_stmt_1218_sample_start_ o<-& (assign_stmt_1218_sample_completed_ 1)
          $null &-> (assign_stmt_1218_update_start_)
          assign_stmt_1218_update_start_ o<-& (assign_stmt_1218_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1102_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1102_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1102_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp121x_xnot
          // done: WAR dependencies for cmp121x_xnot
          // start:  			$guard (ifx_xend78_exec_guard_1102_delayed_1_0) $volatile cmp121x_xnot := (cmp121 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 409
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1102_delayed_1_0
          // Source expression
          // (cmp121 ^ ($bitcast ($uint<1>) _b1  ))
          // cmp121
          // Target expression
          // (as target) cmp121x_xnot
          // start: WAR dependencies for cmp121x_xnot
          // done: WAR dependencies for cmp121x_xnot
          // end:  			$guard (ifx_xend78_exec_guard_1102_delayed_1_0) $volatile cmp121x_xnot := (cmp121 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend78_exec_guard_1109_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 410
          $T[assign_stmt_1228_sample_start_] 
          $T[assign_stmt_1228_sample_completed_] 
          $T[assign_stmt_1228_update_start_] 
          $T[assign_stmt_1228_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1109_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1228_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1228_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1228_sample_start_ &-> (assign_stmt_1228_Sample)
          assign_stmt_1228_sample_completed_ <-& (assign_stmt_1228_Sample)
          assign_stmt_1228_sample_completed_ &-> ($null)
          assign_stmt_1228_update_start_ &-> (assign_stmt_1228_Update)
          assign_stmt_1228_update_completed_ <-& (assign_stmt_1228_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1228_sample_start_
          assign_stmt_1228_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1228_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1228_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1228_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1228_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1228_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1228_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1228_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1228_sample_completed_ 0)
          // self-release: 
          assign_stmt_1228_sample_start_ o<-& (assign_stmt_1228_sample_completed_ 1)
          $null &-> (assign_stmt_1228_update_start_)
          assign_stmt_1228_update_start_ o<-& (assign_stmt_1228_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1109_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1109_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1109_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1114_1114_delayed_1_0 := ($bitcast ($int<32>) add130 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 411
          // Source expression
          // ($bitcast ($int<32>) add130 )
          $T[type_cast_1231_sample_start_] 
          $T[type_cast_1231_sample_completed_] 
          $T[type_cast_1231_update_start_] 
          $T[type_cast_1231_update_completed_] 
          // add130
          // start: Forward dependencies from add130 to transition type_cast_1231_sample_start_
          // done: Forward dependencies from add130 to transition type_cast_1231_sample_start_
          ;;[type_cast_1231_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1231_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1231_sample_start_ &-> (type_cast_1231_Sample)
          type_cast_1231_sample_completed_ <-& (type_cast_1231_Sample)
          type_cast_1231_sample_completed_ &-> ($null)
          type_cast_1231_update_start_ &-> (type_cast_1231_Update)
          type_cast_1231_update_completed_ <-& (type_cast_1231_Update)
          // RAW reenables for add130
          // self-release: 
          type_cast_1231_sample_start_ o<-& (type_cast_1231_sample_completed_ 1)
          $null &-> (type_cast_1231_update_start_)
          type_cast_1231_update_start_ o<-& (type_cast_1231_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1114_1114_delayed_1_0
          // start: WAR dependencies for type_cast_1114_1114_delayed_1_0
          // done: WAR dependencies for type_cast_1114_1114_delayed_1_0
          // end:  			type_cast_1114_1114_delayed_1_0 := ($bitcast ($int<32>) add130 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp131
          // done: WAR dependencies for cmp131
          // start:  			$guard (ifx_xend78_exec_guard_1109_delayed_1_0) $volatile cmp131 := (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 412
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1109_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0)
          // ($bitcast ($int<32>) conv92 )
          // conv92
          // type_cast_1114_1114_delayed_1_0
          // Target expression
          // (as target) cmp131
          // start: WAR dependencies for cmp131
          // done: WAR dependencies for cmp131
          // end:  			$guard (ifx_xend78_exec_guard_1109_delayed_1_0) $volatile cmp131 := (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0) $buffering 1
          // start:  			ifx_xend78_exec_guard_1117_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 413
          $T[assign_stmt_1242_sample_start_] 
          $T[assign_stmt_1242_sample_completed_] 
          $T[assign_stmt_1242_update_start_] 
          $T[assign_stmt_1242_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1117_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1242_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1242_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1242_sample_start_ &-> (assign_stmt_1242_Sample)
          assign_stmt_1242_sample_completed_ <-& (assign_stmt_1242_Sample)
          assign_stmt_1242_sample_completed_ &-> ($null)
          assign_stmt_1242_update_start_ &-> (assign_stmt_1242_Update)
          assign_stmt_1242_update_completed_ <-& (assign_stmt_1242_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1242_sample_start_
          assign_stmt_1242_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1242_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1242_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1242_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1242_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1242_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1242_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1242_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1242_sample_completed_ 0)
          // self-release: 
          assign_stmt_1242_sample_start_ o<-& (assign_stmt_1242_sample_completed_ 1)
          $null &-> (assign_stmt_1242_update_start_)
          assign_stmt_1242_update_start_ o<-& (assign_stmt_1242_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1117_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1117_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1117_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // start:  			$guard (ifx_xend78_exec_guard_1117_delayed_1_0) $volatile orx_xcond := (cmp121x_xnot & cmp131) $buffering 1
          //  file prog.linked.opt.aa, line 414
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1117_delayed_1_0
          // Source expression
          // (cmp121x_xnot & cmp131)
          // cmp121x_xnot
          // cmp131
          // Target expression
          // (as target) orx_xcond
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // end:  			$guard (ifx_xend78_exec_guard_1117_delayed_1_0) $volatile orx_xcond := (cmp121x_xnot & cmp131) $buffering 1
          // start:  			ifx_xend78_exec_guard_1123_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 415
          $T[assign_stmt_1251_sample_start_] 
          $T[assign_stmt_1251_sample_completed_] 
          $T[assign_stmt_1251_update_start_] 
          $T[assign_stmt_1251_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1123_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1251_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1251_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1251_sample_start_ &-> (assign_stmt_1251_Sample)
          assign_stmt_1251_sample_completed_ <-& (assign_stmt_1251_Sample)
          assign_stmt_1251_sample_completed_ &-> ($null)
          assign_stmt_1251_update_start_ &-> (assign_stmt_1251_Update)
          assign_stmt_1251_update_completed_ <-& (assign_stmt_1251_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1251_sample_start_
          assign_stmt_1251_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1251_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1251_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1251_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1251_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1251_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1251_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1251_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1251_sample_completed_ 0)
          // self-release: 
          assign_stmt_1251_sample_start_ o<-& (assign_stmt_1251_sample_completed_ 1)
          $null &-> (assign_stmt_1251_update_start_)
          assign_stmt_1251_update_start_ o<-& (assign_stmt_1251_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1123_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1123_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1123_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // start:  			$guard (ifx_xend78_exec_guard_1123_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 416
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1123_delayed_1_0
          // Source expression
          // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond
          // Target expression
          // (as target) orx_xcondx_xnot
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // end:  			$guard (ifx_xend78_exec_guard_1123_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend78_exec_guard_1130_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 417
          $T[assign_stmt_1261_sample_start_] 
          $T[assign_stmt_1261_sample_completed_] 
          $T[assign_stmt_1261_update_start_] 
          $T[assign_stmt_1261_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1130_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1261_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1261_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1261_sample_start_ &-> (assign_stmt_1261_Sample)
          assign_stmt_1261_sample_completed_ <-& (assign_stmt_1261_Sample)
          assign_stmt_1261_sample_completed_ &-> ($null)
          assign_stmt_1261_update_start_ &-> (assign_stmt_1261_Update)
          assign_stmt_1261_update_completed_ <-& (assign_stmt_1261_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1261_sample_start_
          assign_stmt_1261_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1261_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1261_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1261_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1261_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1261_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1261_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1261_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1261_sample_completed_ 0)
          // self-release: 
          assign_stmt_1261_sample_start_ o<-& (assign_stmt_1261_sample_completed_ 1)
          $null &-> (assign_stmt_1261_update_start_)
          assign_stmt_1261_update_start_ o<-& (assign_stmt_1261_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1130_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1130_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1130_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1135_1135_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 418
          // Source expression
          // ($bitcast ($int<32>) conv104 )
          $T[type_cast_1264_sample_start_] 
          $T[type_cast_1264_sample_completed_] 
          $T[type_cast_1264_update_start_] 
          $T[type_cast_1264_update_completed_] 
          // conv104
          // start: Forward dependencies from conv104 to transition type_cast_1264_sample_start_
          // done: Forward dependencies from conv104 to transition type_cast_1264_sample_start_
          ;;[type_cast_1264_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1264_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1264_sample_start_ &-> (type_cast_1264_Sample)
          type_cast_1264_sample_completed_ <-& (type_cast_1264_Sample)
          type_cast_1264_sample_completed_ &-> ($null)
          type_cast_1264_update_start_ &-> (type_cast_1264_Update)
          type_cast_1264_update_completed_ <-& (type_cast_1264_Update)
          // RAW reenables for conv104
          // self-release: 
          type_cast_1264_sample_start_ o<-& (type_cast_1264_sample_completed_ 1)
          $null &-> (type_cast_1264_update_start_)
          type_cast_1264_update_start_ o<-& (type_cast_1264_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1135_1135_delayed_1_0
          // start: WAR dependencies for type_cast_1135_1135_delayed_1_0
          // done: WAR dependencies for type_cast_1135_1135_delayed_1_0
          // end:  			type_cast_1135_1135_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp138
          // done: WAR dependencies for cmp138
          // start:  			$guard (ifx_xend78_exec_guard_1130_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 419
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1130_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0)
          // ($bitcast ($int<32>) conv86 )
          // conv86
          // type_cast_1135_1135_delayed_1_0
          // Target expression
          // (as target) cmp138
          // start: WAR dependencies for cmp138
          // done: WAR dependencies for cmp138
          // end:  			$guard (ifx_xend78_exec_guard_1130_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0) $buffering 1
          // start:  			ifx_xend78_exec_guard_1138_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 420
          $T[assign_stmt_1275_sample_start_] 
          $T[assign_stmt_1275_sample_completed_] 
          $T[assign_stmt_1275_update_start_] 
          $T[assign_stmt_1275_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1138_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1275_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1275_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1275_sample_start_ &-> (assign_stmt_1275_Sample)
          assign_stmt_1275_sample_completed_ <-& (assign_stmt_1275_Sample)
          assign_stmt_1275_sample_completed_ &-> ($null)
          assign_stmt_1275_update_start_ &-> (assign_stmt_1275_Update)
          assign_stmt_1275_update_completed_ <-& (assign_stmt_1275_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1275_sample_start_
          assign_stmt_1275_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1275_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1275_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1275_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1275_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1275_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1275_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1275_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1275_sample_completed_ 0)
          // self-release: 
          assign_stmt_1275_sample_start_ o<-& (assign_stmt_1275_sample_completed_ 1)
          $null &-> (assign_stmt_1275_update_start_)
          assign_stmt_1275_update_start_ o<-& (assign_stmt_1275_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1138_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1138_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1138_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond175
          // done: WAR dependencies for orx_xcond175
          // start:  			$guard (ifx_xend78_exec_guard_1138_delayed_1_0) $volatile orx_xcond175 := (orx_xcondx_xnot | cmp138) $buffering 1
          //  file prog.linked.opt.aa, line 421
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1138_delayed_1_0
          // Source expression
          // (orx_xcondx_xnot | cmp138)
          // orx_xcondx_xnot
          // cmp138
          // Target expression
          // (as target) orx_xcond175
          // start: WAR dependencies for orx_xcond175
          // done: WAR dependencies for orx_xcond175
          // end:  			$guard (ifx_xend78_exec_guard_1138_delayed_1_0) $volatile orx_xcond175 := (orx_xcondx_xnot | cmp138) $buffering 1
          // start:  			ifx_xend78_exec_guard_1144_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 422
          $T[assign_stmt_1284_sample_start_] 
          $T[assign_stmt_1284_sample_completed_] 
          $T[assign_stmt_1284_update_start_] 
          $T[assign_stmt_1284_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1144_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1284_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1284_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1284_sample_start_ &-> (assign_stmt_1284_Sample)
          assign_stmt_1284_sample_completed_ <-& (assign_stmt_1284_Sample)
          assign_stmt_1284_sample_completed_ &-> ($null)
          assign_stmt_1284_update_start_ &-> (assign_stmt_1284_Update)
          assign_stmt_1284_update_completed_ <-& (assign_stmt_1284_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1284_sample_start_
          assign_stmt_1284_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1284_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1284_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1284_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1284_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1284_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1284_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1284_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1284_sample_completed_ 0)
          // self-release: 
          assign_stmt_1284_sample_start_ o<-& (assign_stmt_1284_sample_completed_ 1)
          $null &-> (assign_stmt_1284_update_start_)
          assign_stmt_1284_update_start_ o<-& (assign_stmt_1284_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1144_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1144_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1144_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond175x_xnot
          // done: WAR dependencies for orx_xcond175x_xnot
          // start:  			$guard (ifx_xend78_exec_guard_1144_delayed_1_0) $volatile orx_xcond175x_xnot := (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 423
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1144_delayed_1_0
          // Source expression
          // (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond175
          // Target expression
          // (as target) orx_xcond175x_xnot
          // start: WAR dependencies for orx_xcond175x_xnot
          // done: WAR dependencies for orx_xcond175x_xnot
          // end:  			$guard (ifx_xend78_exec_guard_1144_delayed_1_0) $volatile orx_xcond175x_xnot := (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend78_exec_guard_1151_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 424
          $T[assign_stmt_1294_sample_start_] 
          $T[assign_stmt_1294_sample_completed_] 
          $T[assign_stmt_1294_update_start_] 
          $T[assign_stmt_1294_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1151_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1294_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1294_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1294_sample_start_ &-> (assign_stmt_1294_Sample)
          assign_stmt_1294_sample_completed_ <-& (assign_stmt_1294_Sample)
          assign_stmt_1294_sample_completed_ &-> ($null)
          assign_stmt_1294_update_start_ &-> (assign_stmt_1294_Update)
          assign_stmt_1294_update_completed_ <-& (assign_stmt_1294_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1294_sample_start_
          assign_stmt_1294_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1294_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1294_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1294_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1294_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1294_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1294_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1294_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1294_sample_completed_ 0)
          // self-release: 
          assign_stmt_1294_sample_start_ o<-& (assign_stmt_1294_sample_completed_ 1)
          $null &-> (assign_stmt_1294_update_start_)
          assign_stmt_1294_update_start_ o<-& (assign_stmt_1294_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1151_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1151_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1151_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1156_1156_delayed_1_0 := ($bitcast ($int<32>) add148 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 425
          // Source expression
          // ($bitcast ($int<32>) add148 )
          $T[type_cast_1297_sample_start_] 
          $T[type_cast_1297_sample_completed_] 
          $T[type_cast_1297_update_start_] 
          $T[type_cast_1297_update_completed_] 
          // add148
          // start: Forward dependencies from add148 to transition type_cast_1297_sample_start_
          // done: Forward dependencies from add148 to transition type_cast_1297_sample_start_
          ;;[type_cast_1297_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1297_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1297_sample_start_ &-> (type_cast_1297_Sample)
          type_cast_1297_sample_completed_ <-& (type_cast_1297_Sample)
          type_cast_1297_sample_completed_ &-> ($null)
          type_cast_1297_update_start_ &-> (type_cast_1297_Update)
          type_cast_1297_update_completed_ <-& (type_cast_1297_Update)
          // RAW reenables for add148
          // self-release: 
          type_cast_1297_sample_start_ o<-& (type_cast_1297_sample_completed_ 1)
          $null &-> (type_cast_1297_update_start_)
          type_cast_1297_update_start_ o<-& (type_cast_1297_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1156_1156_delayed_1_0
          // start: WAR dependencies for type_cast_1156_1156_delayed_1_0
          // done: WAR dependencies for type_cast_1156_1156_delayed_1_0
          // end:  			type_cast_1156_1156_delayed_1_0 := ($bitcast ($int<32>) add148 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp149
          // done: WAR dependencies for cmp149
          // start:  			$guard (ifx_xend78_exec_guard_1151_delayed_1_0) $volatile cmp149 := (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 426
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1151_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0)
          // ($bitcast ($int<32>) conv86 )
          // conv86
          // type_cast_1156_1156_delayed_1_0
          // Target expression
          // (as target) cmp149
          // start: WAR dependencies for cmp149
          // done: WAR dependencies for cmp149
          // end:  			$guard (ifx_xend78_exec_guard_1151_delayed_1_0) $volatile cmp149 := (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0) $buffering 1
          // start:  			ifx_xend78_exec_guard_1159_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 427
          $T[assign_stmt_1308_sample_start_] 
          $T[assign_stmt_1308_sample_completed_] 
          $T[assign_stmt_1308_update_start_] 
          $T[assign_stmt_1308_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1159_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1308_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1308_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1308_sample_start_ &-> (assign_stmt_1308_Sample)
          assign_stmt_1308_sample_completed_ <-& (assign_stmt_1308_Sample)
          assign_stmt_1308_sample_completed_ &-> ($null)
          assign_stmt_1308_update_start_ &-> (assign_stmt_1308_Update)
          assign_stmt_1308_update_completed_ <-& (assign_stmt_1308_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1308_sample_start_
          assign_stmt_1308_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1308_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1308_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1308_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1308_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1308_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1308_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1308_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1308_sample_completed_ 0)
          // self-release: 
          assign_stmt_1308_sample_start_ o<-& (assign_stmt_1308_sample_completed_ 1)
          $null &-> (assign_stmt_1308_update_start_)
          assign_stmt_1308_update_start_ o<-& (assign_stmt_1308_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1159_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1159_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1159_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond176
          // done: WAR dependencies for orx_xcond176
          // start:  			$guard (ifx_xend78_exec_guard_1159_delayed_1_0) $volatile orx_xcond176 := (orx_xcond175x_xnot & cmp149) $buffering 1
          //  file prog.linked.opt.aa, line 428
          // volatile! 
          // Guard expression 
          // ifx_xend78_exec_guard_1159_delayed_1_0
          // Source expression
          // (orx_xcond175x_xnot & cmp149)
          // orx_xcond175x_xnot
          // cmp149
          // Target expression
          // (as target) orx_xcond176
          // start: WAR dependencies for orx_xcond176
          // done: WAR dependencies for orx_xcond176
          // end:  			$guard (ifx_xend78_exec_guard_1159_delayed_1_0) $volatile orx_xcond176 := (orx_xcond175x_xnot & cmp149) $buffering 1
          // start:  			ifx_xend78_exec_guard_1166_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 429
          $T[assign_stmt_1317_sample_start_] 
          $T[assign_stmt_1317_sample_completed_] 
          $T[assign_stmt_1317_update_start_] 
          $T[assign_stmt_1317_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1166_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1317_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1317_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1317_sample_start_ &-> (assign_stmt_1317_Sample)
          assign_stmt_1317_sample_completed_ <-& (assign_stmt_1317_Sample)
          assign_stmt_1317_sample_completed_ &-> ($null)
          assign_stmt_1317_update_start_ &-> (assign_stmt_1317_Update)
          assign_stmt_1317_update_completed_ <-& (assign_stmt_1317_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1317_sample_start_
          assign_stmt_1317_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1317_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1317_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1317_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1317_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1317_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1317_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1317_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1317_sample_completed_ 0)
          // self-release: 
          assign_stmt_1317_sample_start_ o<-& (assign_stmt_1317_sample_completed_ 1)
          $null &-> (assign_stmt_1317_update_start_)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1317_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1166_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1166_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1166_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend78_ifx_xelse154_taken
          // done: WAR dependencies for ifx_xend78_ifx_xelse154_taken
          // start:  			$volatile ifx_xend78_ifx_xelse154_taken := (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176) $buffering 1
          //  file prog.linked.opt.aa, line 430
          // volatile! 
          // Source expression
          // (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176)
          // ifx_xend78_exec_guard_1166_delayed_1_0
          // orx_xcond176
          // Target expression
          // (as target) ifx_xend78_ifx_xelse154_taken
          // start: WAR dependencies for ifx_xend78_ifx_xelse154_taken
          // done: WAR dependencies for ifx_xend78_ifx_xelse154_taken
          // end:  			$volatile ifx_xend78_ifx_xelse154_taken := (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176) $buffering 1
          // start:  			ifx_xend78_exec_guard_1171_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 431
          $T[assign_stmt_1325_sample_start_] 
          $T[assign_stmt_1325_sample_completed_] 
          $T[assign_stmt_1325_update_start_] 
          $T[assign_stmt_1325_update_completed_] 
          // Source expression
          // ifx_xend78_exec_guard
          // Target expression
          // (as target) ifx_xend78_exec_guard_1171_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1325_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1325_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1325_sample_start_ &-> (assign_stmt_1325_Sample)
          assign_stmt_1325_sample_completed_ <-& (assign_stmt_1325_Sample)
          assign_stmt_1325_sample_completed_ &-> ($null)
          assign_stmt_1325_update_start_ &-> (assign_stmt_1325_Update)
          assign_stmt_1325_update_completed_ <-& (assign_stmt_1325_Update)
          // start: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1325_sample_start_
          assign_stmt_1325_sample_start_ <-& (type_cast_925_update_completed_)
          assign_stmt_1325_sample_start_ <-& (assign_stmt_938_update_completed_)
          assign_stmt_1325_sample_start_ <-& (assign_stmt_946_update_completed_)
          assign_stmt_1325_sample_start_ <-& (assign_stmt_977_update_completed_)
          // done: Forward dependencies from ifx_xend78_exec_guard to transition assign_stmt_1325_sample_start_
          // RAW reenables for ifx_xend78_exec_guard
          type_cast_925_update_start_ o<-& (assign_stmt_1325_sample_completed_ 0)
          assign_stmt_938_update_start_ o<-& (assign_stmt_1325_sample_completed_ 0)
          assign_stmt_946_update_start_ o<-& (assign_stmt_1325_sample_completed_ 0)
          assign_stmt_977_update_start_ o<-& (assign_stmt_1325_sample_completed_ 0)
          // self-release: 
          assign_stmt_1325_sample_start_ o<-& (assign_stmt_1325_sample_completed_ 1)
          $null &-> (assign_stmt_1325_update_start_)
          assign_stmt_1325_update_start_ o<-& (assign_stmt_1325_update_completed_ 0)
          // start: WAR dependencies for ifx_xend78_exec_guard_1171_delayed_1_0
          // done: WAR dependencies for ifx_xend78_exec_guard_1171_delayed_1_0
          // end:  			ifx_xend78_exec_guard_1171_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend78_ifx_xthen151_taken
          // done: WAR dependencies for ifx_xend78_ifx_xthen151_taken
          // start:  			$volatile ifx_xend78_ifx_xthen151_taken := (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 )) $buffering 1
          //  file prog.linked.opt.aa, line 432
          // volatile! 
          // Source expression
          // (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 ))
          // ifx_xend78_exec_guard_1171_delayed_1_0
          // ( ~ orx_xcond176 )
          // orx_xcond176
          // Target expression
          // (as target) ifx_xend78_ifx_xthen151_taken
          // start: WAR dependencies for ifx_xend78_ifx_xthen151_taken
          // done: WAR dependencies for ifx_xend78_ifx_xthen151_taken
          // end:  			$volatile ifx_xend78_ifx_xthen151_taken := (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 )) $buffering 1
          // start: WAR dependencies for ifx_xthen151_exec_guard
          // done: WAR dependencies for ifx_xthen151_exec_guard
          // start:  			$volatile ifx_xthen151_exec_guard := ifx_xend78_ifx_xthen151_taken $buffering 1
          //  file prog.linked.opt.aa, line 433
          // volatile! 
          // Source expression
          // ifx_xend78_ifx_xthen151_taken
          // Target expression
          // (as target) ifx_xthen151_exec_guard
          // start: WAR dependencies for ifx_xthen151_exec_guard
          // done: WAR dependencies for ifx_xthen151_exec_guard
          // end:  			$volatile ifx_xthen151_exec_guard := ifx_xend78_ifx_xthen151_taken $buffering 1
          // start:  			ifx_xthen151_exec_guard_1179_delayed_1_0 := ifx_xthen151_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 434
          $T[assign_stmt_1337_sample_start_] 
          $T[assign_stmt_1337_sample_completed_] 
          $T[assign_stmt_1337_update_start_] 
          $T[assign_stmt_1337_update_completed_] 
          // Source expression
          // ifx_xthen151_exec_guard
          // Target expression
          // (as target) ifx_xthen151_exec_guard_1179_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1337_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1337_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1337_sample_start_ &-> (assign_stmt_1337_Sample)
          assign_stmt_1337_sample_completed_ <-& (assign_stmt_1337_Sample)
          assign_stmt_1337_sample_completed_ &-> ($null)
          assign_stmt_1337_update_start_ &-> (assign_stmt_1337_Update)
          assign_stmt_1337_update_completed_ <-& (assign_stmt_1337_Update)
          // start: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1337_sample_start_
          assign_stmt_1337_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1337_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1337_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1337_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1337_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1337_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1337_sample_start_ <-& (assign_stmt_1325_update_completed_)
          // done: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1337_sample_start_
          // RAW reenables for ifx_xthen151_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          assign_stmt_1325_update_start_ o<-& (assign_stmt_1337_sample_completed_ 0)
          // self-release: 
          assign_stmt_1337_sample_start_ o<-& (assign_stmt_1337_sample_completed_ 1)
          $null &-> (assign_stmt_1337_update_start_)
          assign_stmt_1337_update_start_ o<-& (assign_stmt_1337_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen151_exec_guard_1179_delayed_1_0
          // done: WAR dependencies for ifx_xthen151_exec_guard_1179_delayed_1_0
          // end:  			ifx_xthen151_exec_guard_1179_delayed_1_0 := ifx_xthen151_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xthen151_exec_guard_1179_delayed_1_0) conv153 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 435
          // Guard expression 
          // ifx_xthen151_exec_guard_1179_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
          $T[type_cast_1342_sample_start_] 
          $T[type_cast_1342_sample_completed_] 
          $T[type_cast_1342_update_start_] 
          $T[type_cast_1342_update_completed_] 
          // Guard dependency for expression type_cast_1342 with guard R_ifx_xthen151_exec_guard_1179_delayed_1_0_1338
          type_cast_1342_sample_start_ <-& (assign_stmt_1337_update_completed_)
          // RAW reenables for ifx_xthen151_exec_guard_1179_delayed_1_0
          assign_stmt_1337_update_start_ o<-& (type_cast_1342_sample_completed_ 0)
          // ($cast ($int<32>) conv95 )
          // conv95
          // start: Forward dependencies from ($cast ($int<32>) conv95 ) to transition type_cast_1342_sample_start_
          type_cast_1342_sample_start_ <-& (type_cast_1146_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv95 ) to transition type_cast_1342_sample_start_
          ;;[type_cast_1342_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1342_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1342_sample_start_ &-> (type_cast_1342_Sample)
          type_cast_1342_sample_completed_ <-& (type_cast_1342_Sample)
          type_cast_1342_sample_completed_ &-> ($null)
          type_cast_1342_update_start_ &-> (type_cast_1342_Update)
          type_cast_1342_update_completed_ <-& (type_cast_1342_Update)
          // RAW reenables for ($cast ($int<32>) conv95 )
          type_cast_1146_update_start_ o<-& (type_cast_1342_sample_completed_ 0)
          // self-release: 
          type_cast_1342_sample_start_ o<-& (type_cast_1342_sample_completed_ 1)
          $null &-> (type_cast_1342_update_start_)
          type_cast_1342_update_start_ o<-& (type_cast_1342_update_completed_ 0)
          // Target expression
          // (as target) conv153
          // start: WAR dependencies for conv153
          // done: WAR dependencies for conv153
          // end:  			$guard (ifx_xthen151_exec_guard_1179_delayed_1_0) conv153 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen151_exec_guard_1185_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 436
          $T[assign_stmt_1346_sample_start_] 
          $T[assign_stmt_1346_sample_completed_] 
          $T[assign_stmt_1346_update_start_] 
          $T[assign_stmt_1346_update_completed_] 
          // Source expression
          // ifx_xthen151_exec_guard
          // Target expression
          // (as target) ifx_xthen151_exec_guard_1185_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1346_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1346_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1346_sample_start_ &-> (assign_stmt_1346_Sample)
          assign_stmt_1346_sample_completed_ <-& (assign_stmt_1346_Sample)
          assign_stmt_1346_sample_completed_ &-> ($null)
          assign_stmt_1346_update_start_ &-> (assign_stmt_1346_Update)
          assign_stmt_1346_update_completed_ <-& (assign_stmt_1346_Update)
          // start: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1346_sample_start_
          assign_stmt_1346_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1346_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1346_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1346_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1346_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1346_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1346_sample_start_ <-& (assign_stmt_1325_update_completed_)
          // done: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1346_sample_start_
          // RAW reenables for ifx_xthen151_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          assign_stmt_1325_update_start_ o<-& (assign_stmt_1346_sample_completed_ 0)
          // self-release: 
          assign_stmt_1346_sample_start_ o<-& (assign_stmt_1346_sample_completed_ 1)
          $null &-> (assign_stmt_1346_update_start_)
          assign_stmt_1346_update_start_ o<-& (assign_stmt_1346_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen151_exec_guard_1185_delayed_2_0
          // done: WAR dependencies for ifx_xthen151_exec_guard_1185_delayed_2_0
          // end:  			ifx_xthen151_exec_guard_1185_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // start:  			$guard (ifx_xthen151_exec_guard_1185_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 437
          // volatile! 
          // Guard expression 
          // ifx_xthen151_exec_guard_1185_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv153 )
          // conv153
          // Target expression
          // (as target) shr
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // end:  			$guard (ifx_xthen151_exec_guard_1185_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xthen151_exec_guard_1195_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 438
          $T[assign_stmt_1359_sample_start_] 
          $T[assign_stmt_1359_sample_completed_] 
          $T[assign_stmt_1359_update_start_] 
          $T[assign_stmt_1359_update_completed_] 
          // Source expression
          // ifx_xthen151_exec_guard
          // Target expression
          // (as target) ifx_xthen151_exec_guard_1195_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1359_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1359_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1359_sample_start_ &-> (assign_stmt_1359_Sample)
          assign_stmt_1359_sample_completed_ <-& (assign_stmt_1359_Sample)
          assign_stmt_1359_sample_completed_ &-> ($null)
          assign_stmt_1359_update_start_ &-> (assign_stmt_1359_Update)
          assign_stmt_1359_update_completed_ <-& (assign_stmt_1359_Update)
          // start: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1359_sample_start_
          assign_stmt_1359_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1359_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1359_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1359_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1359_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1359_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1359_sample_start_ <-& (assign_stmt_1325_update_completed_)
          // done: Forward dependencies from ifx_xthen151_exec_guard to transition assign_stmt_1359_sample_start_
          // RAW reenables for ifx_xthen151_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          assign_stmt_1325_update_start_ o<-& (assign_stmt_1359_sample_completed_ 0)
          // self-release: 
          assign_stmt_1359_sample_start_ o<-& (assign_stmt_1359_sample_completed_ 1)
          $null &-> (assign_stmt_1359_update_start_)
          assign_stmt_1359_update_start_ o<-& (assign_stmt_1359_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen151_exec_guard_1195_delayed_2_0
          // done: WAR dependencies for ifx_xthen151_exec_guard_1195_delayed_2_0
          // end:  			ifx_xthen151_exec_guard_1195_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xthen151_exec_guard_1195_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 439
          // Guard expression 
          // ifx_xthen151_exec_guard_1195_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
          $T[type_cast_1364_sample_start_] 
          $T[type_cast_1364_sample_completed_] 
          $T[type_cast_1364_update_start_] 
          $T[type_cast_1364_update_completed_] 
          // Guard dependency for expression type_cast_1364 with guard R_ifx_xthen151_exec_guard_1195_delayed_2_0_1360
          type_cast_1364_sample_start_ <-& (assign_stmt_1359_update_completed_)
          // RAW reenables for ifx_xthen151_exec_guard_1195_delayed_2_0
          assign_stmt_1359_update_start_ o<-& (type_cast_1364_sample_completed_ 0)
          // ($cast ($int<64>) shr )
          // shr
          // start: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_1364_sample_start_
          type_cast_1364_sample_start_ <-& (type_cast_1342_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_1364_sample_start_
          ;;[type_cast_1364_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1364_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1364_sample_start_ &-> (type_cast_1364_Sample)
          type_cast_1364_sample_completed_ <-& (type_cast_1364_Sample)
          type_cast_1364_sample_completed_ &-> ($null)
          type_cast_1364_update_start_ &-> (type_cast_1364_Update)
          type_cast_1364_update_completed_ <-& (type_cast_1364_Update)
          // RAW reenables for ($cast ($int<64>) shr )
          type_cast_1342_update_start_ o<-& (type_cast_1364_sample_completed_ 0)
          // self-release: 
          type_cast_1364_sample_start_ o<-& (type_cast_1364_sample_completed_ 1)
          $null &-> (type_cast_1364_update_start_)
          type_cast_1364_update_start_ o<-& (type_cast_1364_update_completed_ 0)
          // Target expression
          // (as target) idxprom
          // start: WAR dependencies for idxprom
          // done: WAR dependencies for idxprom
          // end:  			$guard (ifx_xthen151_exec_guard_1195_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 440
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
          $T[addr_of_1371_sample_start_] 
          $T[addr_of_1371_sample_completed_] 
          $T[addr_of_1371_update_start_] 
          $T[addr_of_1371_update_completed_] 
          $T[array_obj_ref_1370_root_address_calculated] 
          $T[array_obj_ref_1370_offset_calculated] 
          $T[array_obj_ref_1370_index_resized_1] 
          $T[array_obj_ref_1370_index_scaled_1] 
          $T[array_obj_ref_1370_index_computed_1] 
          // idxprom
          // start: Forward dependencies from idxprom to transition array_obj_ref_1370_index_computed_1
          array_obj_ref_1370_index_computed_1 <-& (type_cast_1364_update_completed_)
          // done: Forward dependencies from idxprom to transition array_obj_ref_1370_index_computed_1
          ;;[array_obj_ref_1370_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1370_index_computed_1 &-> (array_obj_ref_1370_index_resize_1)
          array_obj_ref_1370_index_resized_1 <-& (array_obj_ref_1370_index_resize_1)
          ;;[array_obj_ref_1370_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1370_index_resized_1 &-> (array_obj_ref_1370_index_scale_1)
          array_obj_ref_1370_index_scaled_1 <-& (array_obj_ref_1370_index_scale_1)
          $T[array_obj_ref_1370_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_1370_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_1370_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_1370_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_1370_index_scaled_1 &-> (array_obj_ref_1370_final_index_sum_regn_Sample)
          array_obj_ref_1370_final_index_sum_regn_sample_complete <-& (array_obj_ref_1370_final_index_sum_regn_Sample)
          array_obj_ref_1370_final_index_sum_regn_update_start &-> (array_obj_ref_1370_final_index_sum_regn_Update)
          array_obj_ref_1370_offset_calculated <-& (array_obj_ref_1370_final_index_sum_regn_Update)
          type_cast_1364_update_start_ o<-& (array_obj_ref_1370_final_index_sum_regn_sample_complete 1)
          array_obj_ref_1370_final_index_sum_regn_update_start o<-& (array_obj_ref_1370_offset_calculated 0)
          ;;[array_obj_ref_1370_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1370_offset_calculated &-> (array_obj_ref_1370_base_plus_offset)
          array_obj_ref_1370_root_address_calculated <-& (array_obj_ref_1370_base_plus_offset)
          ;;[addr_of_1371_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1371_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1371_sample_start_ <-& (array_obj_ref_1370_root_address_calculated)
          addr_of_1371_sample_start_ &-> (addr_of_1371_request)
          addr_of_1371_sample_completed_ <-& (addr_of_1371_request)
          addr_of_1371_sample_completed_ &-> ($null)
          addr_of_1371_update_start_ &-> (addr_of_1371_complete)
          addr_of_1371_update_completed_ <-& (addr_of_1371_complete)
          // reenables .
          array_obj_ref_1370_final_index_sum_regn_update_start o<-& (addr_of_1371_sample_completed_ 0)
          // self-release 
          addr_of_1371_sample_start_ o<-& (addr_of_1371_sample_completed_ 1)
          addr_of_1371_update_start_ o<-& (addr_of_1371_update_completed_ 0)
          // Target expression
          // (as target) arrayidx
          // start: WAR dependencies for arrayidx
          // done: WAR dependencies for arrayidx
          // end:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xthen151_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 441
          // Guard expression 
          // ifx_xthen151_exec_guard
          // Target expression
          // ->(arrayidx)
          $T[ptr_deref_1375_sample_start_] 
          $T[ptr_deref_1375_sample_completed_] 
          $T[ptr_deref_1375_update_start_] 
          $T[ptr_deref_1375_update_completed_] 
          $T[ptr_deref_1375_base_address_calculated] 
          // arrayidx
          $T[ptr_deref_1375_word_address_calculated] 
          $T[ptr_deref_1375_root_address_calculated] 
          $T[ptr_deref_1375_base_address_resized] 
          ;;[ptr_deref_1375_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1375_base_address_calculated &-> (ptr_deref_1375_base_addr_resize)
          ptr_deref_1375_base_address_resized <-& (ptr_deref_1375_base_addr_resize)
          ;;[ptr_deref_1375_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1375_base_address_resized &-> (ptr_deref_1375_base_plus_offset)
          ptr_deref_1375_root_address_calculated <-& (ptr_deref_1375_base_plus_offset)
          ;;[ptr_deref_1375_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1375_root_address_calculated &-> (ptr_deref_1375_word_addrgen)
          ptr_deref_1375_word_address_calculated <-& (ptr_deref_1375_word_addrgen)
          ;;[ptr_deref_1375_Sample] 
          {
            ;;[ptr_deref_1375_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1375_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_1375_sample_start_ <-& (ptr_deref_1375_word_address_calculated)
          // reenable-joins
          addr_of_1371_update_start_ o<-& (ptr_deref_1375_sample_completed_ 0)
          ptr_deref_1375_sample_start_ &-> (ptr_deref_1375_Sample)
          ptr_deref_1375_sample_completed_ <-& (ptr_deref_1375_Sample)
          ptr_deref_1375_sample_completed_ &-> ($null)
          ptr_deref_1375_update_start_ &-> (ptr_deref_1375_Update)
          ptr_deref_1375_update_completed_ <-& (ptr_deref_1375_Update)
          // start: Forward dependencies from arrayidx to transition ptr_deref_1375_base_address_calculated
          ptr_deref_1375_base_address_calculated <-& (addr_of_1371_update_completed_)
          // done: Forward dependencies from arrayidx to transition ptr_deref_1375_base_address_calculated
          ptr_deref_1375_sample_start_ <-& (ptr_deref_1375_base_address_calculated)
          // RAW reenables for arrayidx
          addr_of_1371_update_start_ o<-& (ptr_deref_1375_sample_completed_ 0)
          // self-release: 
          ptr_deref_1375_sample_start_ o<-& (ptr_deref_1375_sample_completed_ 1)
          $null &-> (ptr_deref_1375_update_start_)
          ptr_deref_1375_update_start_ o<-& (ptr_deref_1375_update_completed_ 0)
          // end:  			$guard (ifx_xthen151_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for ifx_xelse154_exec_guard
          // done: WAR dependencies for ifx_xelse154_exec_guard
          // start:  			$volatile ifx_xelse154_exec_guard := ifx_xend78_ifx_xelse154_taken $buffering 1
          //  file prog.linked.opt.aa, line 442
          // volatile! 
          // Source expression
          // ifx_xend78_ifx_xelse154_taken
          // Target expression
          // (as target) ifx_xelse154_exec_guard
          // start: WAR dependencies for ifx_xelse154_exec_guard
          // done: WAR dependencies for ifx_xelse154_exec_guard
          // end:  			$volatile ifx_xelse154_exec_guard := ifx_xend78_ifx_xelse154_taken $buffering 1
          // start: WAR dependencies for sext173
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext173
          // start:  			$guard (ifx_xelse154_exec_guard) $volatile sext173 := (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          //  file prog.linked.opt.aa, line 443
          // volatile! 
          // Guard expression 
          // ifx_xelse154_exec_guard
          // Source expression
          // (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
          // add115
          // Target expression
          // (as target) sext173
          // start: WAR dependencies for sext173
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext173
          // end:  			$guard (ifx_xelse154_exec_guard) $volatile sext173 := (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          // start: WAR dependencies for shr157
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr157
          // start:  			$guard (ifx_xelse154_exec_guard) $volatile shr157 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 444
          // volatile! 
          // Guard expression 
          // ifx_xelse154_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
          // (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
          // ($bitcast ($int<32>) sext173 )
          // sext173
          // Target expression
          // (as target) shr157
          // start: WAR dependencies for shr157
          // ignored out-of-scope w_root 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr157
          // end:  			$guard (ifx_xelse154_exec_guard) $volatile shr157 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          // start:  			$guard (ifx_xelse154_exec_guard) idxprom158 := ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 445
          // Guard expression 
          // ifx_xelse154_exec_guard
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) )
          $T[type_cast_1403_sample_start_] 
          $T[type_cast_1403_sample_completed_] 
          $T[type_cast_1403_update_start_] 
          $T[type_cast_1403_update_completed_] 
          // Guard dependency for expression type_cast_1403 with guard R_ifx_xelse154_exec_guard_1399
          type_cast_1403_sample_start_ <-& (type_cast_1264_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1096_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1111_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1207_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1231_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1297_update_completed_)
          type_cast_1403_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          // ($cast ($int<64>) shr157 )
          // shr157
          // start: Forward dependencies from ($cast ($int<64>) shr157 ) to transition type_cast_1403_sample_start_
          type_cast_1403_sample_start_ <-& (type_cast_1090_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1096_update_completed_)
          type_cast_1403_sample_start_ <-& (type_cast_1111_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr157 ) to transition type_cast_1403_sample_start_
          ;;[type_cast_1403_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1403_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1403_sample_start_ &-> (type_cast_1403_Sample)
          type_cast_1403_sample_completed_ <-& (type_cast_1403_Sample)
          type_cast_1403_sample_completed_ &-> ($null)
          type_cast_1403_update_start_ &-> (type_cast_1403_Update)
          type_cast_1403_update_completed_ <-& (type_cast_1403_Update)
          // RAW reenables for ($cast ($int<64>) shr157 )
          type_cast_1090_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (type_cast_1403_sample_completed_ 0)
          // self-release: 
          type_cast_1403_sample_start_ o<-& (type_cast_1403_sample_completed_ 1)
          $null &-> (type_cast_1403_update_start_)
          type_cast_1403_update_start_ o<-& (type_cast_1403_update_completed_ 0)
          // Target expression
          // (as target) idxprom158
          // start: WAR dependencies for idxprom158
          // done: WAR dependencies for idxprom158
          // end:  			$guard (ifx_xelse154_exec_guard) idxprom158 := ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx159 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 446
          // Source expression
          // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158])
          $T[addr_of_1410_sample_start_] 
          $T[addr_of_1410_sample_completed_] 
          $T[addr_of_1410_update_start_] 
          $T[addr_of_1410_update_completed_] 
          $T[array_obj_ref_1409_root_address_calculated] 
          $T[array_obj_ref_1409_offset_calculated] 
          $T[array_obj_ref_1409_index_resized_1] 
          $T[array_obj_ref_1409_index_scaled_1] 
          $T[array_obj_ref_1409_index_computed_1] 
          // idxprom158
          // start: Forward dependencies from idxprom158 to transition array_obj_ref_1409_index_computed_1
          array_obj_ref_1409_index_computed_1 <-& (type_cast_1403_update_completed_)
          // done: Forward dependencies from idxprom158 to transition array_obj_ref_1409_index_computed_1
          ;;[array_obj_ref_1409_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1409_index_computed_1 &-> (array_obj_ref_1409_index_resize_1)
          array_obj_ref_1409_index_resized_1 <-& (array_obj_ref_1409_index_resize_1)
          ;;[array_obj_ref_1409_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1409_index_resized_1 &-> (array_obj_ref_1409_index_scale_1)
          array_obj_ref_1409_index_scaled_1 <-& (array_obj_ref_1409_index_scale_1)
          $T[array_obj_ref_1409_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_1409_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_1409_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_1409_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_1409_index_scaled_1 &-> (array_obj_ref_1409_final_index_sum_regn_Sample)
          array_obj_ref_1409_final_index_sum_regn_sample_complete <-& (array_obj_ref_1409_final_index_sum_regn_Sample)
          array_obj_ref_1409_final_index_sum_regn_update_start &-> (array_obj_ref_1409_final_index_sum_regn_Update)
          array_obj_ref_1409_offset_calculated <-& (array_obj_ref_1409_final_index_sum_regn_Update)
          type_cast_1403_update_start_ o<-& (array_obj_ref_1409_final_index_sum_regn_sample_complete 1)
          array_obj_ref_1409_final_index_sum_regn_update_start o<-& (array_obj_ref_1409_offset_calculated 0)
          ;;[array_obj_ref_1409_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1409_offset_calculated &-> (array_obj_ref_1409_base_plus_offset)
          array_obj_ref_1409_root_address_calculated <-& (array_obj_ref_1409_base_plus_offset)
          ;;[addr_of_1410_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1410_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1410_sample_start_ <-& (array_obj_ref_1409_root_address_calculated)
          addr_of_1410_sample_start_ &-> (addr_of_1410_request)
          addr_of_1410_sample_completed_ <-& (addr_of_1410_request)
          addr_of_1410_sample_completed_ &-> ($null)
          addr_of_1410_update_start_ &-> (addr_of_1410_complete)
          addr_of_1410_update_completed_ <-& (addr_of_1410_complete)
          // reenables .
          array_obj_ref_1409_final_index_sum_regn_update_start o<-& (addr_of_1410_sample_completed_ 0)
          // self-release 
          addr_of_1410_sample_start_ o<-& (addr_of_1410_sample_completed_ 1)
          addr_of_1410_update_start_ o<-& (addr_of_1410_update_completed_ 0)
          // Target expression
          // (as target) arrayidx159
          // start: WAR dependencies for arrayidx159
          // done: WAR dependencies for arrayidx159
          // end:  			arrayidx159 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse154_exec_guard_1247_delayed_8_0 := ifx_xelse154_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          //  file prog.linked.opt.aa, line 447
          $T[assign_stmt_1414_sample_start_] 
          $T[assign_stmt_1414_sample_completed_] 
          $T[assign_stmt_1414_update_start_] 
          $T[assign_stmt_1414_update_completed_] 
          // Source expression
          // ifx_xelse154_exec_guard
          // Target expression
          // (as target) ifx_xelse154_exec_guard_1247_delayed_8_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1414_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1414_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1414_sample_start_ &-> (assign_stmt_1414_Sample)
          assign_stmt_1414_sample_completed_ <-& (assign_stmt_1414_Sample)
          assign_stmt_1414_sample_completed_ &-> ($null)
          assign_stmt_1414_update_start_ &-> (assign_stmt_1414_Update)
          assign_stmt_1414_update_completed_ <-& (assign_stmt_1414_Update)
          // start: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1414_sample_start_
          assign_stmt_1414_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1414_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1414_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1414_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1414_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1414_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1414_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // done: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1414_sample_start_
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1414_sample_completed_ 0)
          // self-release: 
          assign_stmt_1414_sample_start_ o<-& (assign_stmt_1414_sample_completed_ 1)
          $null &-> (assign_stmt_1414_update_start_)
          assign_stmt_1414_update_start_ o<-& (assign_stmt_1414_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse154_exec_guard_1247_delayed_8_0
          // done: WAR dependencies for ifx_xelse154_exec_guard_1247_delayed_8_0
          // end:  			ifx_xelse154_exec_guard_1247_delayed_8_0 := ifx_xelse154_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          // start:  			$guard (ifx_xelse154_exec_guard_1247_delayed_8_0) tmp160 := ->(arrayidx159) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 448
          // Guard expression 
          // ifx_xelse154_exec_guard_1247_delayed_8_0
          // Source expression
          // ->(arrayidx159)
          $T[ptr_deref_1418_sample_start_] 
          $T[ptr_deref_1418_sample_completed_] 
          $T[ptr_deref_1418_update_start_] 
          $T[ptr_deref_1418_update_completed_] 
          // Guard dependency for expression ptr_deref_1418 with guard R_ifx_xelse154_exec_guard_1247_delayed_8_0_1415
          ptr_deref_1418_sample_start_ <-& (assign_stmt_1414_update_completed_)
          // RAW reenables for ifx_xelse154_exec_guard_1247_delayed_8_0
          assign_stmt_1414_update_start_ o<-& (ptr_deref_1418_sample_completed_ 0)
          $T[ptr_deref_1418_base_address_calculated] 
          // arrayidx159
          $T[ptr_deref_1418_word_address_calculated] 
          $T[ptr_deref_1418_root_address_calculated] 
          $T[ptr_deref_1418_base_address_resized] 
          ;;[ptr_deref_1418_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1418_base_address_calculated &-> (ptr_deref_1418_base_addr_resize)
          ptr_deref_1418_base_address_resized <-& (ptr_deref_1418_base_addr_resize)
          ;;[ptr_deref_1418_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1418_base_address_resized &-> (ptr_deref_1418_base_plus_offset)
          ptr_deref_1418_root_address_calculated <-& (ptr_deref_1418_base_plus_offset)
          ;;[ptr_deref_1418_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1418_root_address_calculated &-> (ptr_deref_1418_word_addrgen)
          ptr_deref_1418_word_address_calculated <-& (ptr_deref_1418_word_addrgen)
          ;;[ptr_deref_1418_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1418_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_1418_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_1418_sample_start_ <-& (ptr_deref_1418_word_address_calculated)
          // reenable-joins
          addr_of_1410_update_start_ o<-& (ptr_deref_1418_sample_completed_ 0)
          ptr_deref_1418_sample_start_ &-> (ptr_deref_1418_Sample)
          ptr_deref_1418_sample_completed_ <-& (ptr_deref_1418_Sample)
          ptr_deref_1418_sample_completed_ &-> ($null)
          ptr_deref_1418_update_start_ &-> (ptr_deref_1418_Update)
          ptr_deref_1418_update_completed_ <-& (ptr_deref_1418_Update)
          // start: Forward dependencies from arrayidx159 to transition ptr_deref_1418_base_address_calculated
          ptr_deref_1418_base_address_calculated <-& (addr_of_1410_update_completed_)
          // done: Forward dependencies from arrayidx159 to transition ptr_deref_1418_base_address_calculated
          ptr_deref_1418_sample_start_ <-& (ptr_deref_1418_base_address_calculated)
          // RAW reenables for arrayidx159
          addr_of_1410_update_start_ o<-& (ptr_deref_1418_sample_completed_ 0)
          // self-release: 
          ptr_deref_1418_sample_start_ o<-& (ptr_deref_1418_sample_completed_ 1)
          $null &-> (ptr_deref_1418_update_start_)
          ptr_deref_1418_update_start_ o<-& (ptr_deref_1418_update_completed_ 0)
          // Target expression
          // (as target) tmp160
          // start: WAR dependencies for tmp160
          // done: WAR dependencies for tmp160
          // end:  			$guard (ifx_xelse154_exec_guard_1247_delayed_8_0) tmp160 := ->(arrayidx159) $buffering 1// bits of buffering = 64. 
          // start:  			ifx_xelse154_exec_guard_1252_delayed_1_0 := ifx_xelse154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 449
          $T[assign_stmt_1422_sample_start_] 
          $T[assign_stmt_1422_sample_completed_] 
          $T[assign_stmt_1422_update_start_] 
          $T[assign_stmt_1422_update_completed_] 
          // Source expression
          // ifx_xelse154_exec_guard
          // Target expression
          // (as target) ifx_xelse154_exec_guard_1252_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1422_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1422_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1422_sample_start_ &-> (assign_stmt_1422_Sample)
          assign_stmt_1422_sample_completed_ <-& (assign_stmt_1422_Sample)
          assign_stmt_1422_sample_completed_ &-> ($null)
          assign_stmt_1422_update_start_ &-> (assign_stmt_1422_Update)
          assign_stmt_1422_update_completed_ <-& (assign_stmt_1422_Update)
          // start: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1422_sample_start_
          assign_stmt_1422_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1422_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1422_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1422_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1422_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1422_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1422_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // done: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1422_sample_start_
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1422_sample_completed_ 0)
          // self-release: 
          assign_stmt_1422_sample_start_ o<-& (assign_stmt_1422_sample_completed_ 1)
          $null &-> (assign_stmt_1422_update_start_)
          assign_stmt_1422_update_start_ o<-& (assign_stmt_1422_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse154_exec_guard_1252_delayed_1_0
          // done: WAR dependencies for ifx_xelse154_exec_guard_1252_delayed_1_0
          // end:  			ifx_xelse154_exec_guard_1252_delayed_1_0 := ifx_xelse154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse154_exec_guard_1252_delayed_1_0) conv162 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 450
          // Guard expression 
          // ifx_xelse154_exec_guard_1252_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
          $T[type_cast_1427_sample_start_] 
          $T[type_cast_1427_sample_completed_] 
          $T[type_cast_1427_update_start_] 
          $T[type_cast_1427_update_completed_] 
          // Guard dependency for expression type_cast_1427 with guard R_ifx_xelse154_exec_guard_1252_delayed_1_0_1423
          type_cast_1427_sample_start_ <-& (assign_stmt_1422_update_completed_)
          // RAW reenables for ifx_xelse154_exec_guard_1252_delayed_1_0
          assign_stmt_1422_update_start_ o<-& (type_cast_1427_sample_completed_ 0)
          // ($cast ($int<32>) conv95 )
          // conv95
          // start: Forward dependencies from ($cast ($int<32>) conv95 ) to transition type_cast_1427_sample_start_
          type_cast_1427_sample_start_ <-& (type_cast_1146_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv95 ) to transition type_cast_1427_sample_start_
          ;;[type_cast_1427_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1427_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1427_sample_start_ &-> (type_cast_1427_Sample)
          type_cast_1427_sample_completed_ <-& (type_cast_1427_Sample)
          type_cast_1427_sample_completed_ &-> ($null)
          type_cast_1427_update_start_ &-> (type_cast_1427_Update)
          type_cast_1427_update_completed_ <-& (type_cast_1427_Update)
          // RAW reenables for ($cast ($int<32>) conv95 )
          type_cast_1146_update_start_ o<-& (type_cast_1427_sample_completed_ 0)
          // self-release: 
          type_cast_1427_sample_start_ o<-& (type_cast_1427_sample_completed_ 1)
          $null &-> (type_cast_1427_update_start_)
          type_cast_1427_update_start_ o<-& (type_cast_1427_update_completed_ 0)
          // Target expression
          // (as target) conv162
          // start: WAR dependencies for conv162
          // done: WAR dependencies for conv162
          // end:  			$guard (ifx_xelse154_exec_guard_1252_delayed_1_0) conv162 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse154_exec_guard_1258_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 451
          $T[assign_stmt_1431_sample_start_] 
          $T[assign_stmt_1431_sample_completed_] 
          $T[assign_stmt_1431_update_start_] 
          $T[assign_stmt_1431_update_completed_] 
          // Source expression
          // ifx_xelse154_exec_guard
          // Target expression
          // (as target) ifx_xelse154_exec_guard_1258_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1431_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1431_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1431_sample_start_ &-> (assign_stmt_1431_Sample)
          assign_stmt_1431_sample_completed_ <-& (assign_stmt_1431_Sample)
          assign_stmt_1431_sample_completed_ &-> ($null)
          assign_stmt_1431_update_start_ &-> (assign_stmt_1431_Update)
          assign_stmt_1431_update_completed_ <-& (assign_stmt_1431_Update)
          // start: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1431_sample_start_
          assign_stmt_1431_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1431_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1431_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1431_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1431_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1431_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1431_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // done: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1431_sample_start_
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1431_sample_completed_ 0)
          // self-release: 
          assign_stmt_1431_sample_start_ o<-& (assign_stmt_1431_sample_completed_ 1)
          $null &-> (assign_stmt_1431_update_start_)
          assign_stmt_1431_update_start_ o<-& (assign_stmt_1431_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse154_exec_guard_1258_delayed_2_0
          // done: WAR dependencies for ifx_xelse154_exec_guard_1258_delayed_2_0
          // end:  			ifx_xelse154_exec_guard_1258_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr163
          // done: WAR dependencies for shr163
          // start:  			$guard (ifx_xelse154_exec_guard_1258_delayed_2_0) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 452
          // volatile! 
          // Guard expression 
          // ifx_xelse154_exec_guard_1258_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv162 )
          // conv162
          // Target expression
          // (as target) shr163
          // start: WAR dependencies for shr163
          // done: WAR dependencies for shr163
          // end:  			$guard (ifx_xelse154_exec_guard_1258_delayed_2_0) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xelse154_exec_guard_1268_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 453
          $T[assign_stmt_1444_sample_start_] 
          $T[assign_stmt_1444_sample_completed_] 
          $T[assign_stmt_1444_update_start_] 
          $T[assign_stmt_1444_update_completed_] 
          // Source expression
          // ifx_xelse154_exec_guard
          // Target expression
          // (as target) ifx_xelse154_exec_guard_1268_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1444_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1444_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1444_sample_start_ &-> (assign_stmt_1444_Sample)
          assign_stmt_1444_sample_completed_ <-& (assign_stmt_1444_Sample)
          assign_stmt_1444_sample_completed_ &-> ($null)
          assign_stmt_1444_update_start_ &-> (assign_stmt_1444_Update)
          assign_stmt_1444_update_completed_ <-& (assign_stmt_1444_Update)
          // start: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1444_sample_start_
          assign_stmt_1444_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1444_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1444_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1444_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1444_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1444_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1444_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // done: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1444_sample_start_
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1444_sample_completed_ 0)
          // self-release: 
          assign_stmt_1444_sample_start_ o<-& (assign_stmt_1444_sample_completed_ 1)
          $null &-> (assign_stmt_1444_update_start_)
          assign_stmt_1444_update_start_ o<-& (assign_stmt_1444_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse154_exec_guard_1268_delayed_2_0
          // done: WAR dependencies for ifx_xelse154_exec_guard_1268_delayed_2_0
          // end:  			ifx_xelse154_exec_guard_1268_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse154_exec_guard_1268_delayed_2_0) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 454
          // Guard expression 
          // ifx_xelse154_exec_guard_1268_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
          $T[type_cast_1449_sample_start_] 
          $T[type_cast_1449_sample_completed_] 
          $T[type_cast_1449_update_start_] 
          $T[type_cast_1449_update_completed_] 
          // Guard dependency for expression type_cast_1449 with guard R_ifx_xelse154_exec_guard_1268_delayed_2_0_1445
          type_cast_1449_sample_start_ <-& (assign_stmt_1444_update_completed_)
          // RAW reenables for ifx_xelse154_exec_guard_1268_delayed_2_0
          assign_stmt_1444_update_start_ o<-& (type_cast_1449_sample_completed_ 0)
          // ($cast ($int<64>) shr163 )
          // shr163
          // start: Forward dependencies from ($cast ($int<64>) shr163 ) to transition type_cast_1449_sample_start_
          type_cast_1449_sample_start_ <-& (type_cast_1427_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr163 ) to transition type_cast_1449_sample_start_
          ;;[type_cast_1449_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1449_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1449_sample_start_ &-> (type_cast_1449_Sample)
          type_cast_1449_sample_completed_ <-& (type_cast_1449_Sample)
          type_cast_1449_sample_completed_ &-> ($null)
          type_cast_1449_update_start_ &-> (type_cast_1449_Update)
          type_cast_1449_update_completed_ <-& (type_cast_1449_Update)
          // RAW reenables for ($cast ($int<64>) shr163 )
          type_cast_1427_update_start_ o<-& (type_cast_1449_sample_completed_ 0)
          // self-release: 
          type_cast_1449_sample_start_ o<-& (type_cast_1449_sample_completed_ 1)
          $null &-> (type_cast_1449_update_start_)
          type_cast_1449_update_start_ o<-& (type_cast_1449_update_completed_ 0)
          // Target expression
          // (as target) idxprom164
          // start: WAR dependencies for idxprom164
          // done: WAR dependencies for idxprom164
          // end:  			$guard (ifx_xelse154_exec_guard_1268_delayed_2_0) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx165 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 455
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
          $T[addr_of_1456_sample_start_] 
          $T[addr_of_1456_sample_completed_] 
          $T[addr_of_1456_update_start_] 
          $T[addr_of_1456_update_completed_] 
          $T[array_obj_ref_1455_root_address_calculated] 
          $T[array_obj_ref_1455_offset_calculated] 
          $T[array_obj_ref_1455_index_resized_1] 
          $T[array_obj_ref_1455_index_scaled_1] 
          $T[array_obj_ref_1455_index_computed_1] 
          // idxprom164
          // start: Forward dependencies from idxprom164 to transition array_obj_ref_1455_index_computed_1
          array_obj_ref_1455_index_computed_1 <-& (type_cast_1449_update_completed_)
          // done: Forward dependencies from idxprom164 to transition array_obj_ref_1455_index_computed_1
          ;;[array_obj_ref_1455_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1455_index_computed_1 &-> (array_obj_ref_1455_index_resize_1)
          array_obj_ref_1455_index_resized_1 <-& (array_obj_ref_1455_index_resize_1)
          ;;[array_obj_ref_1455_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1455_index_resized_1 &-> (array_obj_ref_1455_index_scale_1)
          array_obj_ref_1455_index_scaled_1 <-& (array_obj_ref_1455_index_scale_1)
          $T[array_obj_ref_1455_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_1455_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_1455_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_1455_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_1455_index_scaled_1 &-> (array_obj_ref_1455_final_index_sum_regn_Sample)
          array_obj_ref_1455_final_index_sum_regn_sample_complete <-& (array_obj_ref_1455_final_index_sum_regn_Sample)
          array_obj_ref_1455_final_index_sum_regn_update_start &-> (array_obj_ref_1455_final_index_sum_regn_Update)
          array_obj_ref_1455_offset_calculated <-& (array_obj_ref_1455_final_index_sum_regn_Update)
          type_cast_1449_update_start_ o<-& (array_obj_ref_1455_final_index_sum_regn_sample_complete 1)
          array_obj_ref_1455_final_index_sum_regn_update_start o<-& (array_obj_ref_1455_offset_calculated 0)
          ;;[array_obj_ref_1455_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1455_offset_calculated &-> (array_obj_ref_1455_base_plus_offset)
          array_obj_ref_1455_root_address_calculated <-& (array_obj_ref_1455_base_plus_offset)
          ;;[addr_of_1456_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1456_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1456_sample_start_ <-& (array_obj_ref_1455_root_address_calculated)
          addr_of_1456_sample_start_ &-> (addr_of_1456_request)
          addr_of_1456_sample_completed_ <-& (addr_of_1456_request)
          addr_of_1456_sample_completed_ &-> ($null)
          addr_of_1456_update_start_ &-> (addr_of_1456_complete)
          addr_of_1456_update_completed_ <-& (addr_of_1456_complete)
          // reenables .
          array_obj_ref_1455_final_index_sum_regn_update_start o<-& (addr_of_1456_sample_completed_ 0)
          // self-release 
          addr_of_1456_sample_start_ o<-& (addr_of_1456_sample_completed_ 1)
          addr_of_1456_update_start_ o<-& (addr_of_1456_update_completed_ 0)
          // Target expression
          // (as target) arrayidx165
          // start: WAR dependencies for arrayidx165
          // done: WAR dependencies for arrayidx165
          // end:  			arrayidx165 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse154_exec_guard_1281_delayed_14_0 := ifx_xelse154_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          //  file prog.linked.opt.aa, line 456
          $T[assign_stmt_1460_sample_start_] 
          $T[assign_stmt_1460_sample_completed_] 
          $T[assign_stmt_1460_update_start_] 
          $T[assign_stmt_1460_update_completed_] 
          // Source expression
          // ifx_xelse154_exec_guard
          // Target expression
          // (as target) ifx_xelse154_exec_guard_1281_delayed_14_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1460_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1460_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1460_sample_start_ &-> (assign_stmt_1460_Sample)
          assign_stmt_1460_sample_completed_ <-& (assign_stmt_1460_Sample)
          assign_stmt_1460_sample_completed_ &-> ($null)
          assign_stmt_1460_update_start_ &-> (assign_stmt_1460_Update)
          assign_stmt_1460_update_completed_ <-& (assign_stmt_1460_Update)
          // start: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1460_sample_start_
          assign_stmt_1460_sample_start_ <-& (type_cast_1264_update_completed_)
          assign_stmt_1460_sample_start_ <-& (type_cast_1096_update_completed_)
          assign_stmt_1460_sample_start_ <-& (type_cast_1111_update_completed_)
          assign_stmt_1460_sample_start_ <-& (type_cast_1207_update_completed_)
          assign_stmt_1460_sample_start_ <-& (type_cast_1231_update_completed_)
          assign_stmt_1460_sample_start_ <-& (type_cast_1297_update_completed_)
          assign_stmt_1460_sample_start_ <-& (assign_stmt_1317_update_completed_)
          // done: Forward dependencies from ifx_xelse154_exec_guard to transition assign_stmt_1460_sample_start_
          // RAW reenables for ifx_xelse154_exec_guard
          type_cast_1264_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          type_cast_1096_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          type_cast_1111_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          type_cast_1207_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          type_cast_1231_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          type_cast_1297_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          assign_stmt_1317_update_start_ o<-& (assign_stmt_1460_sample_completed_ 0)
          // self-release: 
          assign_stmt_1460_sample_start_ o<-& (assign_stmt_1460_sample_completed_ 1)
          $null &-> (assign_stmt_1460_update_start_)
          assign_stmt_1460_update_start_ o<-& (assign_stmt_1460_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse154_exec_guard_1281_delayed_14_0
          // done: WAR dependencies for ifx_xelse154_exec_guard_1281_delayed_14_0
          // end:  			ifx_xelse154_exec_guard_1281_delayed_14_0 := ifx_xelse154_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          // start:  			arrayidx165_1282_delayed_4_0 := arrayidx165 $buffering 4 $cut_through // bits of buffering = 128. 
          //  file prog.linked.opt.aa, line 457
          $T[assign_stmt_1463_sample_start_] 
          $T[assign_stmt_1463_sample_completed_] 
          $T[assign_stmt_1463_update_start_] 
          $T[assign_stmt_1463_update_completed_] 
          // Source expression
          // arrayidx165
          // Target expression
          // (as target) arrayidx165_1282_delayed_4_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1463_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1463_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1463_sample_start_ &-> (assign_stmt_1463_Sample)
          assign_stmt_1463_sample_completed_ <-& (assign_stmt_1463_Sample)
          assign_stmt_1463_sample_completed_ &-> ($null)
          assign_stmt_1463_update_start_ &-> (assign_stmt_1463_Update)
          assign_stmt_1463_update_completed_ <-& (assign_stmt_1463_Update)
          // start: Forward dependencies from arrayidx165 to transition assign_stmt_1463_sample_start_
          assign_stmt_1463_sample_start_ <-& (addr_of_1456_update_completed_)
          // done: Forward dependencies from arrayidx165 to transition assign_stmt_1463_sample_start_
          // RAW reenables for arrayidx165
          addr_of_1456_update_start_ o<-& (assign_stmt_1463_sample_completed_ 0)
          // self-release: 
          assign_stmt_1463_sample_start_ o<-& (assign_stmt_1463_sample_completed_ 1)
          $null &-> (assign_stmt_1463_update_start_)
          assign_stmt_1463_update_start_ o<-& (assign_stmt_1463_update_completed_ 0)
          // start: WAR dependencies for arrayidx165_1282_delayed_4_0
          // done: WAR dependencies for arrayidx165_1282_delayed_4_0
          // end:  			arrayidx165_1282_delayed_4_0 := arrayidx165 $buffering 4 $cut_through // bits of buffering = 128. 
          // start:  			$guard (ifx_xelse154_exec_guard_1281_delayed_14_0) ->(arrayidx165_1282_delayed_4_0) := tmp160 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 458
          // Guard expression 
          // ifx_xelse154_exec_guard_1281_delayed_14_0
          // Source expression
          // tmp160
          // Target expression
          // ->(arrayidx165_1282_delayed_4_0)
          $T[ptr_deref_1466_sample_start_] 
          $T[ptr_deref_1466_sample_completed_] 
          $T[ptr_deref_1466_update_start_] 
          $T[ptr_deref_1466_update_completed_] 
          $T[ptr_deref_1466_base_address_calculated] 
          // arrayidx165_1282_delayed_4_0
          $T[ptr_deref_1466_word_address_calculated] 
          $T[ptr_deref_1466_root_address_calculated] 
          $T[ptr_deref_1466_base_address_resized] 
          ;;[ptr_deref_1466_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1466_base_address_calculated &-> (ptr_deref_1466_base_addr_resize)
          ptr_deref_1466_base_address_resized <-& (ptr_deref_1466_base_addr_resize)
          ;;[ptr_deref_1466_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1466_base_address_resized &-> (ptr_deref_1466_base_plus_offset)
          ptr_deref_1466_root_address_calculated <-& (ptr_deref_1466_base_plus_offset)
          ;;[ptr_deref_1466_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1466_root_address_calculated &-> (ptr_deref_1466_word_addrgen)
          ptr_deref_1466_word_address_calculated <-& (ptr_deref_1466_word_addrgen)
          ;;[ptr_deref_1466_Sample] 
          {
            ;;[ptr_deref_1466_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1466_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_1466_sample_start_ <-& (ptr_deref_1466_word_address_calculated)
          // reenable-joins
          assign_stmt_1463_update_start_ o<-& (ptr_deref_1466_sample_completed_ 0)
          ptr_deref_1466_sample_start_ &-> (ptr_deref_1466_Sample)
          ptr_deref_1466_sample_completed_ <-& (ptr_deref_1466_Sample)
          ptr_deref_1466_sample_completed_ &-> ($null)
          ptr_deref_1466_update_start_ &-> (ptr_deref_1466_Update)
          ptr_deref_1466_update_completed_ <-& (ptr_deref_1466_Update)
          // start: Forward dependencies from arrayidx165_1282_delayed_4_0 to transition ptr_deref_1466_base_address_calculated
          ptr_deref_1466_base_address_calculated <-& (assign_stmt_1463_update_completed_)
          // done: Forward dependencies from arrayidx165_1282_delayed_4_0 to transition ptr_deref_1466_base_address_calculated
          ptr_deref_1466_sample_start_ <-& (ptr_deref_1466_base_address_calculated)
          // RAW reenables for arrayidx165_1282_delayed_4_0
          assign_stmt_1463_update_start_ o<-& (ptr_deref_1466_sample_completed_ 0)
          // self-release: 
          ptr_deref_1466_sample_start_ o<-& (ptr_deref_1466_sample_completed_ 1)
          $null &-> (ptr_deref_1466_update_start_)
          ptr_deref_1466_update_start_ o<-& (ptr_deref_1466_update_completed_ 0)
          // start: Forward dependencies from tmp160 to transition ptr_deref_1466_sample_start_
          ptr_deref_1466_sample_start_ <-& (ptr_deref_1418_update_completed_)
          // done: Forward dependencies from tmp160 to transition ptr_deref_1466_sample_start_
          // RAW reenables for tmp160
          ptr_deref_1418_update_start_ o<-& (ptr_deref_1466_sample_completed_ 0)
          // end:  			$guard (ifx_xelse154_exec_guard_1281_delayed_14_0) ->(arrayidx165_1282_delayed_4_0) := tmp160 $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // start:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          //  file prog.linked.opt.aa, line 459
          // volatile! 
          // Source expression
          // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
          // flagx_x0
          // Target expression
          // (as target) tobool
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // end:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          // start: WAR dependencies for ifx_xend166_whilex_xend_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend166_whilex_xend_taken
          // start:  			$volatile ifx_xend166_whilex_xend_taken := ( ~ tobool ) $buffering 1
          //  file prog.linked.opt.aa, line 460
          // volatile! 
          // Source expression
          // ( ~ tobool )
          // tobool
          // Target expression
          // (as target) ifx_xend166_whilex_xend_taken
          // start: WAR dependencies for ifx_xend166_whilex_xend_taken
          // ignored out-of-scope w_root 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend166_whilex_xend_taken
          // end:  			$volatile ifx_xend166_whilex_xend_taken := ( ~ tobool ) $buffering 1
          // tobool
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated <-& (type_cast_925_update_completed_)
          condition_evaluated <-& (assign_stmt_938_update_completed_)
          condition_evaluated <-& (assign_stmt_946_update_completed_)
          condition_evaluated <-& (assign_stmt_1067_update_completed_)
          // done: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  ptr_deref_1375 store
          //  ptr_deref_1466 store
          $T [ptr_deref_1375_ptr_deref_1466_delay] $delay
          // ptr_deref_1375(store) -> ptr_deref_1466(store)
          ptr_deref_1466_sample_start_ <-& (ptr_deref_1375_ptr_deref_1466_delay)
          ptr_deref_1375_ptr_deref_1466_delay <-& (ptr_deref_1375_sample_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          // ordered memory-subsystem.
          ring_reenable_memory_space_0 <-& (ptr_deref_1466_sample_completed_)
          ptr_deref_1375_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // memory-space  memory_space_1
          //  ptr_deref_1418 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_810__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_810_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_810__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_810_loop_body : condition_evaluated
        $bind do_while_stmt_810__entry__  => do_while_stmt_810_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_810_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_810__exit__)
      }
      do_while_stmt_810__entry__ |-> (do_while_stmt_810)
      do_while_stmt_810__exit__ <-| (do_while_stmt_810)
      // if-statement  
      //  file prog.linked.opt.aa, line 118164344
      ;;[if_stmt_1481_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1481__entry__ |-> (if_stmt_1481_dead_link)
      if_stmt_1481__exit__ <-| (if_stmt_1481_dead_link)
      ;;[if_stmt_1481_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1481__entry__ |-> (if_stmt_1481_eval_test)
      $P [R_ifx_xend166_whilex_xend_taken_1482_place]
      R_ifx_xend166_whilex_xend_taken_1482_place <-| (if_stmt_1481_eval_test)
      ;;[if_stmt_1481_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1481_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_ifx_xend166_whilex_xend_taken_1482_place |-> (if_stmt_1481_if_link if_stmt_1481_else_link)
      $P [ifx_xend166_whilex_xend]
      ifx_xend166_whilex_xend <-| (if_stmt_1481_if_link)
      if_stmt_1481__exit__ <-| (if_stmt_1481_else_link)
      ::[assign_stmt_1490] 
      {
        // start:  		Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 468
        // Target expression
        // (as target) Block0_complete
        $T[WPIPE_Block0_complete_1487_sample_start_] 
        $T[WPIPE_Block0_complete_1487_sample_completed_] 
        $T[WPIPE_Block0_complete_1487_update_start_] 
        $T[WPIPE_Block0_complete_1487_update_completed_] 
        ;;[WPIPE_Block0_complete_1487_Sample] 
        {
          // pipe write sample-start Block0_complete
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_complete_1487_Update] 
        {
          // pipe write update (complete) Block0_complete
          $T [req] $T [ack] 
        }
        WPIPE_Block0_complete_1487_sample_start_ &-> (WPIPE_Block0_complete_1487_Sample)
        WPIPE_Block0_complete_1487_sample_completed_ <-& (WPIPE_Block0_complete_1487_Sample)
        WPIPE_Block0_complete_1487_update_start_ <-& (WPIPE_Block0_complete_1487_sample_completed_)
        WPIPE_Block0_complete_1487_update_start_ &-> (WPIPE_Block0_complete_1487_Update)
        WPIPE_Block0_complete_1487_update_completed_ <-& (WPIPE_Block0_complete_1487_Update)
        // end:  		Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block0_complete
        // read-dependencies for pipe Block0_complete
        // write-dependencies for pipe Block0_complete
        // signal write dependencies for Block0_complete
      }
      assign_stmt_1490__entry__ |-> (assign_stmt_1490)
      assign_stmt_1490__exit__ <-| (assign_stmt_1490)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 311
      //---------------------   merge statement  file prog.linked.opt.aa, line 311  --------------------------
      ||[entry_whilex_xbody_PhiReq] 
      {
        // skipped constant phi phi_stmt_793
        // skipped constant phi phi_stmt_799
        // skipped constant phi phi_stmt_804
      }
      entry_whilex_xbody |-> (entry_whilex_xbody_PhiReq)
      $P [merge_stmt_792_PhiReqMerge] 
      merge_stmt_792_PhiReqMerge <-| ( entry_whilex_xbody_PhiReq )
      ||[merge_stmt_792_PhiAck] 
      {
        // skipped constant phi phi_stmt_793
        // skipped constant phi phi_stmt_799
        // skipped constant phi phi_stmt_804
      }
      merge_stmt_792_PhiReqMerge |-> (merge_stmt_792_PhiAck)
      merge_stmt_792__exit__  <-| (merge_stmt_792_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 311  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 465
      ;;[merge_stmt_1485_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1485__entry__ |-> (merge_stmt_1485_dead_link)
      merge_stmt_1485__exit__ <-| (merge_stmt_1485_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 465  --------------------------
      ||[ifx_xend166_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend166_whilex_xend |-> (ifx_xend166_whilex_xend_PhiReq)
      $P [merge_stmt_1485_PhiReqMerge] 
      merge_stmt_1485_PhiReqMerge <-| ( ifx_xend166_whilex_xend_PhiReq )
      ||[merge_stmt_1485_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1485_PhiReqMerge |-> (merge_stmt_1485_PhiAck)
      merge_stmt_1485__exit__  <-| (merge_stmt_1485_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 465  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 470
      //---------------------   merge statement  file prog.linked.opt.aa, line 470  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1492_PhiReqMerge] 
      merge_stmt_1492_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1492_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1492_PhiReqMerge |-> (merge_stmt_1492_PhiAck)
      merge_stmt_1492__exit__  <-| (merge_stmt_1492_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 470  --------------------------
      assign_stmt_669_to_assign_stmt_687__entry__ <-| (branch_block_stmt_666__entry__)
      assign_stmt_692_to_assign_stmt_790__entry__ <-| (assign_stmt_669_to_assign_stmt_687__exit__)
      entry_whilex_xbody <-| (assign_stmt_692_to_assign_stmt_790__exit__)
      do_while_stmt_810__entry__ <-| (merge_stmt_792__exit__)
      if_stmt_1481__entry__ <-| (do_while_stmt_810__exit__)
      merge_stmt_1485__entry__ <-| (if_stmt_1481__exit__)
      assign_stmt_1490__entry__ <-| (merge_stmt_1485__exit__)
      return__ <-| (assign_stmt_1490__exit__)
      merge_stmt_1492__exit__ |-> (branch_block_stmt_666__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 311
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 321
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 465
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 470
    // constant-object-declarations for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 281
    // constant-object-declarations for block %zeropad3D_A
    //  file prog.linked.opt.aa, line 276
    // constant-declarations for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 281
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_708_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_721_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_732_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_745_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_756_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_767_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_778_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 311
    // constant-declarations for phi:  			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 312
    $constant $W[kx_x1_at_entry_793] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 314
    $constant $W[ix_x2_at_entry_799] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 316
    $constant $W[jx_x1_at_entry_804] : $int<16> := _b0000000000000000 // 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 319
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 321
    // constant-declarations for phi:  			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 322
    // constant-declarations for phi:  			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 324
    // constant-declarations for phi:  			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 326
    // ($bitcast ($uint<32>) _b00000000000000000000000000000100  )
    $constant $W[type_cast_836_wire_constant] : $int<32> := _b00000000000000000000000000000100// 4
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_866_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 ) 
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_914_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000100  )
    $constant $W[type_cast_969_wire_constant] : $int<16> := _b0000000000000100// 4
    // ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_998_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1002_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1004_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1032_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1060_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1072_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )
    $constant $W[type_cast_1076_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1080_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1082_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1223_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1256_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1289_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_1353_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $constant $W[array_obj_ref_1370_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1370_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1370_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1370_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1377_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ->(arrayidx)
    $constant $W[ptr_deref_1375_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_1386_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )
    $constant $W[type_cast_1395_wire_constant] : $int<32> := _b00000000000000000000000000010010// 18
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158])
    $constant $W[array_obj_ref_1409_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1409_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1409_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1409_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx159)
    $constant $W[ptr_deref_1418_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_1438_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
    $constant $W[array_obj_ref_1455_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1455_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1455_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1455_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx165_1282_delayed_4_0)
    $constant $W[ptr_deref_1466_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1472_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 118164344
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 465
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_1489_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 470
    // block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 281
    // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 283
    // call
    $W[call_669] : $int<8>
    // 		call1 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 284
    // call1
    $W[call1_672] : $int<8>
    // 		call2 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 285
    // call2
    $W[call2_675] : $int<8>
    // 		call3 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 286
    // call3
    $W[call3_678] : $int<8>
    // 		call4 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 287
    // call4
    $W[call4_681] : $int<8>
    // 		call5 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 288
    // call5
    $W[call5_684] : $int<8>
    // 		call6 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 289
    // call6
    $W[call6_687] : $int<8>
    // 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 291
    // conv27
    $W[conv27_692] : $int<32>
    // 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 292
    // conv29
    $W[conv29_696] : $int<32>
    // 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 293
    // conv33
    $W[conv33_700] : $int<32>
    // 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 294
    // conv35
    $W[conv35_704] : $int<32>
    // 		$volatile mul36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 295
    // mul36
    $W[mul36_710] : $int<32>
    // 		$volatile sext := (mul36 * conv33) $buffering 1
    //  file prog.linked.opt.aa, line 296
    // sext
    $W[sext_715] : $int<32>
    // 		$volatile conv90 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 297
    // ($bitcast ($int<32>) sext )
    $intermediate $W[type_cast_718_wire] : $int<32>
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_722_wire] : $int<32>
    // conv90
    $W[conv90_724] : $int<32>
    // 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 298
    // conv104
    $W[conv104_728] : $int<32>
    // 		$volatile mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 299
    // mul
    $W[mul_734] : $int<32>
    // 		$volatile sext171 := (mul * conv27) $buffering 1
    //  file prog.linked.opt.aa, line 300
    // sext171
    $W[sext171_739] : $int<32>
    // 		$volatile conv108 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 301
    // ($bitcast ($int<32>) sext171 )
    $intermediate $W[type_cast_742_wire] : $int<32>
    // (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_746_wire] : $int<32>
    // conv108
    $W[conv108_748] : $int<32>
    // 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 302
    // conv126
    $W[conv126_752] : $int<32>
    // 		$volatile div127 := (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 303
    // div127
    $W[div127_758] : $int<32>
    // 		$volatile add130 := (conv104 + div127) $buffering 1
    //  file prog.linked.opt.aa, line 304
    // add130
    $W[add130_763] : $int<32>
    // 		$volatile div145 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 305
    // div145
    $W[div145_769] : $int<32>
    // 		$volatile add148 := (conv104 + div145) $buffering 1
    //  file prog.linked.opt.aa, line 306
    // add148
    $W[add148_774] : $int<32>
    // 		$volatile shl := (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 307
    // shl
    $W[shl_780] : $int<32>
    // 		$volatile add58 := (shl + div145) $buffering 1
    //  file prog.linked.opt.aa, line 308
    // add58
    $W[add58_785] : $int<32>
    // 		$volatile add73 := (shl + div127) $buffering 1
    //  file prog.linked.opt.aa, line 309
    // add73
    $W[add73_790] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 311
    // do-while statement  
    //  file prog.linked.opt.aa, line 319
    // merge-statement  
    //  file prog.linked.opt.aa, line 321
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 322
    // ($cast ($uint<16>) kx_x0 )
    $intermediate $W[type_cast_815_wire] : $int<16>
    // kx_x1
    $W[kx_x1_812] : $int<16>
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 324
    // ($cast ($uint<16>) ix_x1 )
    $intermediate $W[type_cast_820_wire] : $int<16>
    // ix_x2
    $W[ix_x2_817] : $int<16>
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<16>) jx_x0 )
    $intermediate $W[type_cast_825_wire] : $int<16>
    // jx_x1
    $W[jx_x1_822] : $int<16>
    // 			conv43 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 329
    // ($cast ($int<32>) kx_x1 )
    $intermediate $W[type_cast_830_wire] : $int<32>
    // conv43
    $W[conv43_832] : $int<32>
    // 			$volatile add := (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 330
    // add
    $W[add_838] : $int<32>
    // 			type_cast_843_843_delayed_2_0 := ($bitcast ($int<32>) conv27 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 331
    // type_cast_843_843_delayed_2_0
    $W[type_cast_843_843_delayed_2_0_842] : $int<32>
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 332
    // ($bitcast ($int<32>) add )
    $intermediate $W[type_cast_845_wire] : $int<32>
    // cmp
    $W[cmp_848] : $int<1>
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 333
    // whilex_xbody_ifx_xthen_taken
    $W[whilex_xbody_ifx_xthen_taken_851] : $int<1>
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 334
    // whilex_xbody_ifx_xelse_taken
    $W[whilex_xbody_ifx_xelse_taken_855] : $int<1>
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 335
    // ifx_xelse_exec_guard
    $W[ifx_xelse_exec_guard_858] : $int<1>
    // 			jx_x1_858_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 336
    // jx_x1_858_delayed_1_0
    $W[jx_x1_858_delayed_1_0_861] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 337
    // inc
    $W[inc_868] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) conv53 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 338
    // ($cast ($int<32>) inc )
    $intermediate $W[type_cast_872_wire] : $int<32>
    // conv53
    $W[conv53_874] : $int<32>
    // 			ifx_xelse_exec_guard_869_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 339
    // ifx_xelse_exec_guard_869_delayed_1_0
    $W[ifx_xelse_exec_guard_869_delayed_1_0_877] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_869_delayed_1_0) $volatile cmp59 := (conv53 == add58) $buffering 1
    //  file prog.linked.opt.aa, line 340
    // cmp59
    $W[cmp59_883] : $int<1>
    // 			ifx_xelse_exec_guard_875_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 341
    // ifx_xelse_exec_guard_875_delayed_1_0
    $W[ifx_xelse_exec_guard_875_delayed_1_0_886] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_875_delayed_1_0) inc64 := ($cast ($uint<16>) cmp59 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 342
    // inc64
    $W[inc64_891] : $int<16>
    // 			ifx_xelse_exec_guard_880_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 343
    // ifx_xelse_exec_guard_880_delayed_2_0
    $W[ifx_xelse_exec_guard_880_delayed_2_0_894] : $int<1>
    // 			ix_x2_883_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 344
    // ix_x2_883_delayed_3_0
    $W[ix_x2_883_delayed_3_0_897] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_880_delayed_2_0) $volatile inc64x_xix_x2 := (inc64 + ix_x2_883_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 345
    // inc64x_xix_x2
    $W[inc64x_xix_x2_903] : $int<16>
    // 			ifx_xelse_exec_guard_886_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 346
    // ifx_xelse_exec_guard_886_delayed_1_0
    $W[ifx_xelse_exec_guard_886_delayed_1_0_906] : $int<1>
    // 			inc_891_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 347
    // inc_891_delayed_1_0
    $W[inc_891_delayed_1_0_909] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_886_delayed_1_0) $volatile jx_x2 := ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 348
    // jx_x2
    $W[jx_x2_917] : $int<16>
    // 			ifx_xelse_exec_guard_894_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 349
    // ifx_xelse_exec_guard_894_delayed_2_0
    $W[ifx_xelse_exec_guard_894_delayed_2_0_920] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 350
    // ($cast ($int<32>) inc64x_xix_x2 )
    $intermediate $W[type_cast_924_wire] : $int<32>
    // conv66
    $W[conv66_926] : $int<32>
    // 			ifx_xelse_exec_guard_900_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 351
    // ifx_xelse_exec_guard_900_delayed_3_0
    $W[ifx_xelse_exec_guard_900_delayed_3_0_929] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_900_delayed_3_0) $volatile cmp74 := (conv66 == add73) $buffering 1
    //  file prog.linked.opt.aa, line 352
    // cmp74
    $W[cmp74_935] : $int<1>
    // 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 353
    // ifx_xelse_exec_guard_907_delayed_3_0
    $W[ifx_xelse_exec_guard_907_delayed_3_0_938] : $int<1>
    // 			$volatile ifx_xelse_ifx_xthen76_taken := (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74) $buffering 1
    //  file prog.linked.opt.aa, line 354
    // ifx_xelse_ifx_xthen76_taken
    $W[ifx_xelse_ifx_xthen76_taken_943] : $int<1>
    // 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 355
    // ifx_xelse_exec_guard_912_delayed_3_0
    $W[ifx_xelse_exec_guard_912_delayed_3_0_946] : $int<1>
    // 			$volatile ifx_xelse_ifx_xend78_taken := (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 )) $buffering 1
    //  file prog.linked.opt.aa, line 356
    // ( ~ cmp74 )
    $intermediate $W[NOT_u1_u1_950_wire] : $int<1>
    // ifx_xelse_ifx_xend78_taken
    $W[ifx_xelse_ifx_xend78_taken_952] : $int<1>
    // 			$volatile ifx_xthen76_exec_guard := ifx_xelse_ifx_xthen76_taken $buffering 1
    //  file prog.linked.opt.aa, line 357
    // ifx_xthen76_exec_guard
    $W[ifx_xthen76_exec_guard_955] : $int<1>
    // 			$volatile ifx_xthen76_ifx_xend78_taken := ifx_xthen76_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 358
    // ifx_xthen76_ifx_xend78_taken
    $W[ifx_xthen76_ifx_xend78_taken_958] : $int<1>
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 359
    // ifx_xthen_exec_guard
    $W[ifx_xthen_exec_guard_961] : $int<1>
    // 			kx_x1_928_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 360
    // kx_x1_928_delayed_1_0
    $W[kx_x1_928_delayed_1_0_964] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile add49 := (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 361
    // add49
    $W[add49_971] : $int<16>
    // 			$volatile ifx_xthen_ifx_xend78_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 362
    // ifx_xthen_ifx_xend78_taken
    $W[ifx_xthen_ifx_xend78_taken_974] : $int<1>
    // 			ifx_xthen_ifx_xend78_taken_938_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 363
    // ifx_xthen_ifx_xend78_taken_938_delayed_3_0
    $W[ifx_xthen_ifx_xend78_taken_938_delayed_3_0_977] : $int<1>
    // 			$volatile ifx_xend78_exec_guard := (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 364
    // (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)
    $intermediate $W[OR_u1_u1_982_wire] : $int<1>
    // ifx_xend78_exec_guard
    $W[ifx_xend78_exec_guard_984] : $int<1>
    // 			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 365
    // ifx_xthen_ifx_xend78_taken_944_delayed_3_0
    $W[ifx_xthen_ifx_xend78_taken_944_delayed_3_0_987] : $int<1>
    // 			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 366
    // type_cast_946_946_delayed_3_0
    $W[type_cast_946_946_delayed_3_0_991] : $int<16>
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 367
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1005_wire] : $int<16>
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1006_wire] : $int<16>
    // kx_x0
    $W[kx_x0_1008] : $int<16>
    // 			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 368
    // ifx_xthen_ifx_xend78_taken_962_delayed_3_0
    $W[ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1011] : $int<1>
    // 			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 369
    // type_cast_964_964_delayed_4_0
    $W[type_cast_964_964_delayed_4_0_1015] : $int<16>
    // 			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 370
    // type_cast_967_967_delayed_1_0
    $W[type_cast_967_967_delayed_1_0_1019] : $int<16>
    // 			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 371
    // type_cast_970_970_delayed_1_0
    $W[type_cast_970_970_delayed_1_0_1023] : $int<16>
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 372
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1033_wire] : $int<16>
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1034_wire] : $int<16>
    // ix_x1
    $W[ix_x1_1036] : $int<16>
    // 			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 373
    // ifx_xthen_ifx_xend78_taken_978_delayed_3_0
    $W[ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1039] : $int<1>
    // 			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 374
    // type_cast_980_980_delayed_4_0
    $W[type_cast_980_980_delayed_4_0_1043] : $int<16>
    // 			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 375
    // type_cast_983_983_delayed_2_0
    $W[type_cast_983_983_delayed_2_0_1047] : $int<16>
    // 			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 376
    // type_cast_986_986_delayed_2_0
    $W[type_cast_986_986_delayed_2_0_1051] : $int<16>
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 377
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1061_wire] : $int<16>
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1062_wire] : $int<16>
    // jx_x0
    $W[jx_x0_1064] : $int<16>
    // 			ifx_xthen_ifx_xend78_taken_994_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 378
    // ifx_xthen_ifx_xend78_taken_994_delayed_3_0
    $W[ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1067] : $int<1>
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 379
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1083_wire] : $int<16>
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1084_wire] : $int<16>
    // flagx_x0
    $W[flagx_x0_1086] : $int<16>
    // 			$guard (ifx_xend78_exec_guard) conv82170 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 380
    // conv82170
    $W[conv82170_1091] : $int<32>
    // 			$guard (ifx_xend78_exec_guard) conv86 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 381
    // ($cast ($int<32>) jx_x0 )
    $intermediate $W[type_cast_1095_wire] : $int<32>
    // conv86
    $W[conv86_1097] : $int<32>
    // 			ifx_xend78_exec_guard_1023_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 382
    // ifx_xend78_exec_guard_1023_delayed_1_0
    $W[ifx_xend78_exec_guard_1023_delayed_1_0_1100] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1023_delayed_1_0) $volatile mul87 := (conv86 * conv33) $buffering 1
    //  file prog.linked.opt.aa, line 383
    // mul87
    $W[mul87_1106] : $int<32>
    // 			$guard (ifx_xend78_exec_guard) conv92 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 384
    // ($cast ($int<32>) ix_x1 )
    $intermediate $W[type_cast_1110_wire] : $int<32>
    // conv92
    $W[conv92_1112] : $int<32>
    // 			ifx_xend78_exec_guard_1035_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 385
    // ifx_xend78_exec_guard_1035_delayed_1_0
    $W[ifx_xend78_exec_guard_1035_delayed_1_0_1115] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1035_delayed_1_0) $volatile mul93 := (conv92 * conv90) $buffering 1
    //  file prog.linked.opt.aa, line 386
    // mul93
    $W[mul93_1121] : $int<32>
    // 			ifx_xend78_exec_guard_1041_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 387
    // ifx_xend78_exec_guard_1041_delayed_1_0
    $W[ifx_xend78_exec_guard_1041_delayed_1_0_1124] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1041_delayed_1_0) $volatile add88 := (mul93 + conv82170) $buffering 1
    //  file prog.linked.opt.aa, line 388
    // add88
    $W[add88_1130] : $int<32>
    // 			ifx_xend78_exec_guard_1047_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 389
    // ifx_xend78_exec_guard_1047_delayed_1_0
    $W[ifx_xend78_exec_guard_1047_delayed_1_0_1133] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1047_delayed_1_0) $volatile add94 := (add88 + mul87) $buffering 1
    //  file prog.linked.opt.aa, line 390
    // add94
    $W[add94_1139] : $int<32>
    // 			ifx_xend78_exec_guard_1053_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 391
    // ifx_xend78_exec_guard_1053_delayed_1_0
    $W[ifx_xend78_exec_guard_1053_delayed_1_0_1142] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1053_delayed_1_0) conv95 := ($cast ($uint<16>) add94 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 392
    // conv95
    $W[conv95_1147] : $int<16>
    // 			ifx_xend78_exec_guard_1058_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 393
    // ifx_xend78_exec_guard_1058_delayed_1_0
    $W[ifx_xend78_exec_guard_1058_delayed_1_0_1150] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1058_delayed_1_0) $volatile sub := (conv86 - conv104) $buffering 1
    //  file prog.linked.opt.aa, line 394
    // sub
    $W[sub_1156] : $int<32>
    // 			ifx_xend78_exec_guard_1064_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 395
    // ifx_xend78_exec_guard_1064_delayed_1_0
    $W[ifx_xend78_exec_guard_1064_delayed_1_0_1159] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1064_delayed_1_0) $volatile mul105 := (sub * conv27) $buffering 1
    //  file prog.linked.opt.aa, line 396
    // mul105
    $W[mul105_1165] : $int<32>
    // 			ifx_xend78_exec_guard_1070_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 397
    // ifx_xend78_exec_guard_1070_delayed_1_0
    $W[ifx_xend78_exec_guard_1070_delayed_1_0_1168] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1070_delayed_1_0) $volatile sub113 := (conv92 - conv104) $buffering 1
    //  file prog.linked.opt.aa, line 398
    // sub113
    $W[sub113_1174] : $int<32>
    // 			ifx_xend78_exec_guard_1076_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 399
    // ifx_xend78_exec_guard_1076_delayed_1_0
    $W[ifx_xend78_exec_guard_1076_delayed_1_0_1177] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1076_delayed_1_0) $volatile mul114 := (sub113 * conv108) $buffering 1
    //  file prog.linked.opt.aa, line 400
    // mul114
    $W[mul114_1183] : $int<32>
    // 			ifx_xend78_exec_guard_1082_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 401
    // ifx_xend78_exec_guard_1082_delayed_1_0
    $W[ifx_xend78_exec_guard_1082_delayed_1_0_1186] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1082_delayed_1_0) $volatile add106 := (mul114 + conv82170) $buffering 1
    //  file prog.linked.opt.aa, line 402
    // add106
    $W[add106_1192] : $int<32>
    // 			ifx_xend78_exec_guard_1088_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 403
    // ifx_xend78_exec_guard_1088_delayed_1_0
    $W[ifx_xend78_exec_guard_1088_delayed_1_0_1195] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1088_delayed_1_0) $volatile add115 := (add106 + mul105) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // add115
    $W[add115_1201] : $int<32>
    // 			ifx_xend78_exec_guard_1094_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 405
    // ifx_xend78_exec_guard_1094_delayed_1_0
    $W[ifx_xend78_exec_guard_1094_delayed_1_0_1204] : $int<1>
    // 			type_cast_1099_1099_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 406
    // type_cast_1099_1099_delayed_1_0
    $W[type_cast_1099_1099_delayed_1_0_1208] : $int<32>
    // 			$guard (ifx_xend78_exec_guard_1094_delayed_1_0) $volatile cmp121 := (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 407
    // ($bitcast ($int<32>) conv92 )
    $intermediate $W[type_cast_1212_wire] : $int<32>
    // cmp121
    $W[cmp121_1215] : $int<1>
    // 			ifx_xend78_exec_guard_1102_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 408
    // ifx_xend78_exec_guard_1102_delayed_1_0
    $W[ifx_xend78_exec_guard_1102_delayed_1_0_1218] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1102_delayed_1_0) $volatile cmp121x_xnot := (cmp121 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 409
    // cmp121x_xnot
    $W[cmp121x_xnot_1225] : $int<1>
    // 			ifx_xend78_exec_guard_1109_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 410
    // ifx_xend78_exec_guard_1109_delayed_1_0
    $W[ifx_xend78_exec_guard_1109_delayed_1_0_1228] : $int<1>
    // 			type_cast_1114_1114_delayed_1_0 := ($bitcast ($int<32>) add130 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 411
    // type_cast_1114_1114_delayed_1_0
    $W[type_cast_1114_1114_delayed_1_0_1232] : $int<32>
    // 			$guard (ifx_xend78_exec_guard_1109_delayed_1_0) $volatile cmp131 := (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 412
    // ($bitcast ($int<32>) conv92 )
    $intermediate $W[type_cast_1236_wire] : $int<32>
    // cmp131
    $W[cmp131_1239] : $int<1>
    // 			ifx_xend78_exec_guard_1117_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 413
    // ifx_xend78_exec_guard_1117_delayed_1_0
    $W[ifx_xend78_exec_guard_1117_delayed_1_0_1242] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1117_delayed_1_0) $volatile orx_xcond := (cmp121x_xnot & cmp131) $buffering 1
    //  file prog.linked.opt.aa, line 414
    // orx_xcond
    $W[orx_xcond_1248] : $int<1>
    // 			ifx_xend78_exec_guard_1123_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 415
    // ifx_xend78_exec_guard_1123_delayed_1_0
    $W[ifx_xend78_exec_guard_1123_delayed_1_0_1251] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1123_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 416
    // orx_xcondx_xnot
    $W[orx_xcondx_xnot_1258] : $int<1>
    // 			ifx_xend78_exec_guard_1130_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 417
    // ifx_xend78_exec_guard_1130_delayed_1_0
    $W[ifx_xend78_exec_guard_1130_delayed_1_0_1261] : $int<1>
    // 			type_cast_1135_1135_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 418
    // type_cast_1135_1135_delayed_1_0
    $W[type_cast_1135_1135_delayed_1_0_1265] : $int<32>
    // 			$guard (ifx_xend78_exec_guard_1130_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 419
    // ($bitcast ($int<32>) conv86 )
    $intermediate $W[type_cast_1269_wire] : $int<32>
    // cmp138
    $W[cmp138_1272] : $int<1>
    // 			ifx_xend78_exec_guard_1138_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 420
    // ifx_xend78_exec_guard_1138_delayed_1_0
    $W[ifx_xend78_exec_guard_1138_delayed_1_0_1275] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1138_delayed_1_0) $volatile orx_xcond175 := (orx_xcondx_xnot | cmp138) $buffering 1
    //  file prog.linked.opt.aa, line 421
    // orx_xcond175
    $W[orx_xcond175_1281] : $int<1>
    // 			ifx_xend78_exec_guard_1144_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 422
    // ifx_xend78_exec_guard_1144_delayed_1_0
    $W[ifx_xend78_exec_guard_1144_delayed_1_0_1284] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1144_delayed_1_0) $volatile orx_xcond175x_xnot := (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 423
    // orx_xcond175x_xnot
    $W[orx_xcond175x_xnot_1291] : $int<1>
    // 			ifx_xend78_exec_guard_1151_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 424
    // ifx_xend78_exec_guard_1151_delayed_1_0
    $W[ifx_xend78_exec_guard_1151_delayed_1_0_1294] : $int<1>
    // 			type_cast_1156_1156_delayed_1_0 := ($bitcast ($int<32>) add148 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 425
    // type_cast_1156_1156_delayed_1_0
    $W[type_cast_1156_1156_delayed_1_0_1298] : $int<32>
    // 			$guard (ifx_xend78_exec_guard_1151_delayed_1_0) $volatile cmp149 := (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // ($bitcast ($int<32>) conv86 )
    $intermediate $W[type_cast_1302_wire] : $int<32>
    // cmp149
    $W[cmp149_1305] : $int<1>
    // 			ifx_xend78_exec_guard_1159_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 427
    // ifx_xend78_exec_guard_1159_delayed_1_0
    $W[ifx_xend78_exec_guard_1159_delayed_1_0_1308] : $int<1>
    // 			$guard (ifx_xend78_exec_guard_1159_delayed_1_0) $volatile orx_xcond176 := (orx_xcond175x_xnot & cmp149) $buffering 1
    //  file prog.linked.opt.aa, line 428
    // orx_xcond176
    $W[orx_xcond176_1314] : $int<1>
    // 			ifx_xend78_exec_guard_1166_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 429
    // ifx_xend78_exec_guard_1166_delayed_1_0
    $W[ifx_xend78_exec_guard_1166_delayed_1_0_1317] : $int<1>
    // 			$volatile ifx_xend78_ifx_xelse154_taken := (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176) $buffering 1
    //  file prog.linked.opt.aa, line 430
    // ifx_xend78_ifx_xelse154_taken
    $W[ifx_xend78_ifx_xelse154_taken_1322] : $int<1>
    // 			ifx_xend78_exec_guard_1171_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 431
    // ifx_xend78_exec_guard_1171_delayed_1_0
    $W[ifx_xend78_exec_guard_1171_delayed_1_0_1325] : $int<1>
    // 			$volatile ifx_xend78_ifx_xthen151_taken := (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 )) $buffering 1
    //  file prog.linked.opt.aa, line 432
    // ( ~ orx_xcond176 )
    $intermediate $W[NOT_u1_u1_1329_wire] : $int<1>
    // ifx_xend78_ifx_xthen151_taken
    $W[ifx_xend78_ifx_xthen151_taken_1331] : $int<1>
    // 			$volatile ifx_xthen151_exec_guard := ifx_xend78_ifx_xthen151_taken $buffering 1
    //  file prog.linked.opt.aa, line 433
    // ifx_xthen151_exec_guard
    $W[ifx_xthen151_exec_guard_1334] : $int<1>
    // 			ifx_xthen151_exec_guard_1179_delayed_1_0 := ifx_xthen151_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 434
    // ifx_xthen151_exec_guard_1179_delayed_1_0
    $W[ifx_xthen151_exec_guard_1179_delayed_1_0_1337] : $int<1>
    // 			$guard (ifx_xthen151_exec_guard_1179_delayed_1_0) conv153 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 435
    // ($cast ($int<32>) conv95 )
    $intermediate $W[type_cast_1341_wire] : $int<32>
    // conv153
    $W[conv153_1343] : $int<32>
    // 			ifx_xthen151_exec_guard_1185_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 436
    // ifx_xthen151_exec_guard_1185_delayed_2_0
    $W[ifx_xthen151_exec_guard_1185_delayed_2_0_1346] : $int<1>
    // 			$guard (ifx_xthen151_exec_guard_1185_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 437
    // ($bitcast ($int<32>) conv153 )
    $intermediate $W[type_cast_1350_wire] : $int<32>
    // (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_1354_wire] : $int<32>
    // shr
    $W[shr_1356] : $int<32>
    // 			ifx_xthen151_exec_guard_1195_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 438
    // ifx_xthen151_exec_guard_1195_delayed_2_0
    $W[ifx_xthen151_exec_guard_1195_delayed_2_0_1359] : $int<1>
    // 			$guard (ifx_xthen151_exec_guard_1195_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 439
    // ($cast ($int<64>) shr )
    $intermediate $W[type_cast_1363_wire] : $int<64>
    // idxprom
    $W[idxprom_1365] : $int<64>
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 440
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $intermediate $W[R_idxprom_1369_resized] : $int<14>
    $intermediate $W[R_idxprom_1369_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1370_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1370_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_1372] : $int<32>
    // 			$guard (ifx_xthen151_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 441
    // ->(arrayidx)
    $intermediate $W[ptr_deref_1375_wire] : $int<64>
    $intermediate $W[ptr_deref_1375_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1375_root_address] : $int<14>
    $W[ptr_deref_1375_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1375_data_0] : $int<64>
    // 			$volatile ifx_xelse154_exec_guard := ifx_xend78_ifx_xelse154_taken $buffering 1
    //  file prog.linked.opt.aa, line 442
    // ifx_xelse154_exec_guard
    $W[ifx_xelse154_exec_guard_1381] : $int<1>
    // 			$guard (ifx_xelse154_exec_guard) $volatile sext173 := (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 443
    // sext173
    $W[sext173_1388] : $int<32>
    // 			$guard (ifx_xelse154_exec_guard) $volatile shr157 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 444
    // ($bitcast ($int<32>) sext173 )
    $intermediate $W[type_cast_1392_wire] : $int<32>
    // (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $intermediate $W[ASHR_i32_i32_1396_wire] : $int<32>
    // shr157
    $W[shr157_1398] : $int<32>
    // 			$guard (ifx_xelse154_exec_guard) idxprom158 := ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 445
    // ($cast ($int<64>) shr157 )
    $intermediate $W[type_cast_1402_wire] : $int<64>
    // idxprom158
    $W[idxprom158_1404] : $int<64>
    // 			arrayidx159 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 446
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158])
    $intermediate $W[R_idxprom158_1408_resized] : $int<14>
    $intermediate $W[R_idxprom158_1408_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1409_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1409_root_address] : $int<14>
    // arrayidx159
    $W[arrayidx159_1411] : $int<32>
    // 			ifx_xelse154_exec_guard_1247_delayed_8_0 := ifx_xelse154_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 447
    // ifx_xelse154_exec_guard_1247_delayed_8_0
    $W[ifx_xelse154_exec_guard_1247_delayed_8_0_1414] : $int<1>
    // 			$guard (ifx_xelse154_exec_guard_1247_delayed_8_0) tmp160 := ->(arrayidx159) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 448
    // ->(arrayidx159)
    $intermediate $W[ptr_deref_1418_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1418_root_address] : $int<14>
    $W[ptr_deref_1418_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_1418_data_0] : $int<64>
    // tmp160
    $W[tmp160_1419] : $int<64>
    // 			ifx_xelse154_exec_guard_1252_delayed_1_0 := ifx_xelse154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 449
    // ifx_xelse154_exec_guard_1252_delayed_1_0
    $W[ifx_xelse154_exec_guard_1252_delayed_1_0_1422] : $int<1>
    // 			$guard (ifx_xelse154_exec_guard_1252_delayed_1_0) conv162 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 450
    // ($cast ($int<32>) conv95 )
    $intermediate $W[type_cast_1426_wire] : $int<32>
    // conv162
    $W[conv162_1428] : $int<32>
    // 			ifx_xelse154_exec_guard_1258_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 451
    // ifx_xelse154_exec_guard_1258_delayed_2_0
    $W[ifx_xelse154_exec_guard_1258_delayed_2_0_1431] : $int<1>
    // 			$guard (ifx_xelse154_exec_guard_1258_delayed_2_0) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 452
    // ($bitcast ($int<32>) conv162 )
    $intermediate $W[type_cast_1435_wire] : $int<32>
    // (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_1439_wire] : $int<32>
    // shr163
    $W[shr163_1441] : $int<32>
    // 			ifx_xelse154_exec_guard_1268_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 453
    // ifx_xelse154_exec_guard_1268_delayed_2_0
    $W[ifx_xelse154_exec_guard_1268_delayed_2_0_1444] : $int<1>
    // 			$guard (ifx_xelse154_exec_guard_1268_delayed_2_0) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 454
    // ($cast ($int<64>) shr163 )
    $intermediate $W[type_cast_1448_wire] : $int<64>
    // idxprom164
    $W[idxprom164_1450] : $int<64>
    // 			arrayidx165 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 455
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
    $intermediate $W[R_idxprom164_1454_resized] : $int<14>
    $intermediate $W[R_idxprom164_1454_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1455_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1455_root_address] : $int<14>
    // arrayidx165
    $W[arrayidx165_1457] : $int<32>
    // 			ifx_xelse154_exec_guard_1281_delayed_14_0 := ifx_xelse154_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 456
    // ifx_xelse154_exec_guard_1281_delayed_14_0
    $W[ifx_xelse154_exec_guard_1281_delayed_14_0_1460] : $int<1>
    // 			arrayidx165_1282_delayed_4_0 := arrayidx165 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 457
    // arrayidx165_1282_delayed_4_0
    $W[arrayidx165_1282_delayed_4_0_1463] : $int<32>
    // 			$guard (ifx_xelse154_exec_guard_1281_delayed_14_0) ->(arrayidx165_1282_delayed_4_0) := tmp160 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 458
    // ->(arrayidx165_1282_delayed_4_0)
    $intermediate $W[ptr_deref_1466_wire] : $int<64>
    $intermediate $W[ptr_deref_1466_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1466_root_address] : $int<14>
    $W[ptr_deref_1466_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1466_data_0] : $int<64>
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 459
    // tobool
    $W[tobool_1474] : $int<1>
    // 			$volatile ifx_xend166_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 460
    // ifx_xend166_whilex_xend_taken
    $W[ifx_xend166_whilex_xend_taken_1478] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 118164344
    // 		Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 468
    // Block0_complete
    // datapath-instances for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 281
    // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 283
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_668_inst] (Block0_starting) (call_669) 
    $buffering $out RPIPE_Block0_starting_668_inst call_669 1
    // 		call1 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 284
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_671_inst] (Block0_starting) (call1_672) 
    $buffering $out RPIPE_Block0_starting_671_inst call1_672 1
    // 		call2 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 285
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_674_inst] (Block0_starting) (call2_675) 
    $buffering $out RPIPE_Block0_starting_674_inst call2_675 1
    // 		call3 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 286
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_677_inst] (Block0_starting) (call3_678) 
    $buffering $out RPIPE_Block0_starting_677_inst call3_678 1
    // 		call4 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 287
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_680_inst] (Block0_starting) (call4_681) 
    $buffering $out RPIPE_Block0_starting_680_inst call4_681 1
    // 		call5 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 288
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_683_inst] (Block0_starting) (call5_684) 
    $buffering $out RPIPE_Block0_starting_683_inst call5_684 1
    // 		call6 := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 289
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_686_inst] (Block0_starting) (call6_687) 
    $buffering $out RPIPE_Block0_starting_686_inst call6_687 1
    // 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 291
    // ($cast ($uint<32>) call2 )
    # := [type_cast_691_inst] (call2_675) (conv27_692)    
    $buffering  $out type_cast_691_inst conv27_692 1
    $delay type_cast_691_inst 1
    // 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 292
    // ($cast ($uint<32>) call1 )
    # := [type_cast_695_inst] (call1_672) (conv29_696)    
    $buffering  $out type_cast_695_inst conv29_696 1
    $delay type_cast_695_inst 1
    // 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 293
    // ($cast ($uint<32>) call5 )
    # := [type_cast_699_inst] (call5_684) (conv33_700)    
    $buffering  $out type_cast_699_inst conv33_700 1
    $delay type_cast_699_inst 1
    // 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 294
    // ($cast ($uint<32>) call4 )
    # := [type_cast_703_inst] (call4_681) (conv35_704)    
    $buffering  $out type_cast_703_inst conv35_704 1
    $delay type_cast_703_inst 1
    // 		$volatile mul36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 295
    // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_709_inst] (conv35_704 type_cast_708_wire_constant) (mul36_710)   $flowthrough 
    $delay SHL_u32_u32_709_inst 0
    // 		$volatile sext := (mul36 * conv33) $buffering 1
    //  file prog.linked.opt.aa, line 296
    // (mul36 * conv33)
    *[MUL_u32_u32_714_inst] (mul36_710 conv33_700) (sext_715)   $flowthrough 
    $delay MUL_u32_u32_714_inst 0
    // 		$volatile conv90 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 297
    // ($bitcast ($int<32>) sext )
    # := [type_cast_718_inst] (sext_715) (type_cast_718_wire)   $flowthrough
    $delay type_cast_718_inst 0
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_722_inst] (type_cast_718_wire type_cast_721_wire_constant) (ASHR_i32_i32_722_wire)   $flowthrough 
    $delay ASHR_i32_i32_722_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_723_inst] (ASHR_i32_i32_722_wire) (conv90_724)   $flowthrough
    $delay type_cast_723_inst 0
    // 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 298
    // ($cast ($uint<32>) call6 )
    # := [type_cast_727_inst] (call6_687) (conv104_728)    
    $buffering  $out type_cast_727_inst conv104_728 1
    $delay type_cast_727_inst 1
    // 		$volatile mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 299
    // (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_733_inst] (conv29_696 type_cast_732_wire_constant) (mul_734)   $flowthrough 
    $delay SHL_u32_u32_733_inst 0
    // 		$volatile sext171 := (mul * conv27) $buffering 1
    //  file prog.linked.opt.aa, line 300
    // (mul * conv27)
    *[MUL_u32_u32_738_inst] (mul_734 conv27_692) (sext171_739)   $flowthrough 
    $delay MUL_u32_u32_738_inst 0
    // 		$volatile conv108 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 301
    // ($bitcast ($int<32>) sext171 )
    # := [type_cast_742_inst] (sext171_739) (type_cast_742_wire)   $flowthrough
    $delay type_cast_742_inst 0
    // (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_746_inst] (type_cast_742_wire type_cast_745_wire_constant) (ASHR_i32_i32_746_wire)   $flowthrough 
    $delay ASHR_i32_i32_746_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_747_inst] (ASHR_i32_i32_746_wire) (conv108_748)   $flowthrough
    $delay type_cast_747_inst 0
    // 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 302
    // ($cast ($uint<32>) call )
    # := [type_cast_751_inst] (call_669) (conv126_752)    
    $buffering  $out type_cast_751_inst conv126_752 1
    $delay type_cast_751_inst 1
    // 		$volatile div127 := (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 303
    // (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_757_inst] (conv126_752 type_cast_756_wire_constant) (div127_758)   $flowthrough 
    $delay LSHR_u32_u32_757_inst 0
    // 		$volatile add130 := (conv104 + div127) $buffering 1
    //  file prog.linked.opt.aa, line 304
    // (conv104 + div127)
    +[ADD_u32_u32_762_inst] (conv104_728 div127_758) (add130_763)   $flowthrough 
    $delay ADD_u32_u32_762_inst 0
    // 		$volatile div145 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 305
    // (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_768_inst] (conv29_696 type_cast_767_wire_constant) (div145_769)   $flowthrough 
    $delay LSHR_u32_u32_768_inst 0
    // 		$volatile add148 := (conv104 + div145) $buffering 1
    //  file prog.linked.opt.aa, line 306
    // (conv104 + div145)
    +[ADD_u32_u32_773_inst] (conv104_728 div145_769) (add148_774)   $flowthrough 
    $delay ADD_u32_u32_773_inst 0
    // 		$volatile shl := (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 307
    // (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_779_inst] (conv104_728 type_cast_778_wire_constant) (shl_780)   $flowthrough 
    $delay SHL_u32_u32_779_inst 0
    // 		$volatile add58 := (shl + div145) $buffering 1
    //  file prog.linked.opt.aa, line 308
    // (shl + div145)
    +[ADD_u32_u32_784_inst] (shl_780 div145_769) (add58_785)   $flowthrough 
    $delay ADD_u32_u32_784_inst 0
    // 		$volatile add73 := (shl + div127) $buffering 1
    //  file prog.linked.opt.aa, line 309
    // (shl + div127)
    +[ADD_u32_u32_789_inst] (shl_780 div127_758) (add73_790)   $flowthrough 
    $delay ADD_u32_u32_789_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 311
    // 			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 312
    // constant phi data-path element skipped phi_stmt_793
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 314
    // constant phi data-path element skipped phi_stmt_799
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 316
    // constant phi data-path element skipped phi_stmt_804
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 319
    ==0? [do_while_stmt_810_branch] (tobool_1474)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 321
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 322
    // ($cast ($uint<16>) kx_x0 )
    # := [type_cast_815_inst] (kx_x0_1008) (type_cast_815_wire)     $fullrate
    $buffering  $out type_cast_815_inst type_cast_815_wire 1
    $delay type_cast_815_inst 1
    # $phi [phi_stmt_812] (type_cast_815_wire kx_x1_at_entry_793) ( kx_x1_812 ) $fullrate
    // $buffering  $out phi_stmt_812 kx_x1_812 2
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 324
    // ($cast ($uint<16>) ix_x1 )
    # := [type_cast_820_inst] (ix_x1_1036) (type_cast_820_wire)     $fullrate
    $buffering  $out type_cast_820_inst type_cast_820_wire 1
    $delay type_cast_820_inst 1
    # $phi [phi_stmt_817] (type_cast_820_wire ix_x2_at_entry_799) ( ix_x2_817 ) $fullrate
    // $buffering  $out phi_stmt_817 ix_x2_817 2
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<16>) jx_x0 )
    # := [type_cast_825_inst] (jx_x0_1064) (type_cast_825_wire)     $fullrate
    $buffering  $out type_cast_825_inst type_cast_825_wire 1
    $delay type_cast_825_inst 1
    # $phi [phi_stmt_822] (type_cast_825_wire jx_x1_at_entry_804) ( jx_x1_822 ) $fullrate
    // $buffering  $out phi_stmt_822 jx_x1_822 2
    // 			conv43 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 329
    // ($cast ($int<32>) kx_x1 )
    $S:=$U [type_cast_830_inst] (kx_x1_812) (type_cast_830_wire)   $flowthrough
    $delay type_cast_830_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
    # := [type_cast_831_inst] (type_cast_830_wire) (conv43_832)     $fullrate
    $buffering  $out type_cast_831_inst conv43_832 1
    $delay type_cast_831_inst 1
    // 			$volatile add := (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 330
    // (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
    +[ADD_u32_u32_837_inst] (conv43_832 type_cast_836_wire_constant) (add_838)   $flowthrough 
    $delay ADD_u32_u32_837_inst 0
    // 			type_cast_843_843_delayed_2_0 := ($bitcast ($int<32>) conv27 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 331
    // ($bitcast ($int<32>) conv27 )
    # := [type_cast_841_inst] (conv27_692) (type_cast_843_843_delayed_2_0_842)     $fullrate
    $buffering  $out type_cast_841_inst type_cast_843_843_delayed_2_0_842 2
    $delay type_cast_841_inst 1
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 332
    // ($bitcast ($int<32>) add )
    # := [type_cast_845_inst] (add_838) (type_cast_845_wire)   $flowthrough
    $delay type_cast_845_inst 0
    // (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0)
    $S<$S[SLT_i32_u1_847_inst] (type_cast_845_wire type_cast_843_843_delayed_2_0_842) (cmp_848)   $flowthrough 
    $delay SLT_i32_u1_847_inst 0
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 333
    # := [W_whilex_xbody_ifx_xthen_taken_849_inst] (cmp_848) (whilex_xbody_ifx_xthen_taken_851)    $flowthrough 
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 334
    // ( ~ cmp )
    ~ [NOT_u1_u1_854_inst] (cmp_848) (whilex_xbody_ifx_xelse_taken_855)   $flowthrough
    $delay NOT_u1_u1_854_inst 0
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 335
    # := [W_ifx_xelse_exec_guard_856_inst] (whilex_xbody_ifx_xelse_taken_855) (ifx_xelse_exec_guard_858)    $flowthrough 
    // 			jx_x1_858_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 336
    # := [W_jx_x1_858_delayed_1_0_859_inst] (jx_x1_822) (jx_x1_858_delayed_1_0_861)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 337
    // (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_867_inst] (jx_x1_858_delayed_1_0_861 type_cast_866_wire_constant) (inc_868) $guard ( ifx_xelse_exec_guard_858 )   $flowthrough 
    $delay ADD_u16_u16_867_inst 0
    // 			$guard (ifx_xelse_exec_guard) conv53 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 338
    // ($cast ($int<32>) inc )
    $S:=$U [type_cast_872_inst] (inc_868) (type_cast_872_wire)  $guard ( ifx_xelse_exec_guard_858 )  $flowthrough
    $delay type_cast_872_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
    # := [type_cast_873_inst] (type_cast_872_wire) (conv53_874)  $guard ( ifx_xelse_exec_guard_858 )    $fullrate
    $buffering  $out type_cast_873_inst conv53_874 1
    $delay type_cast_873_inst 1
    // 			ifx_xelse_exec_guard_869_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 339
    # := [W_ifx_xelse_exec_guard_869_delayed_1_0_875_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_869_delayed_1_0_877)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_869_delayed_1_0) $volatile cmp59 := (conv53 == add58) $buffering 1
    //  file prog.linked.opt.aa, line 340
    // (conv53 == add58)
    ==[EQ_u32_u1_882_inst] (conv53_874 add58_785) (cmp59_883) $guard ( ifx_xelse_exec_guard_869_delayed_1_0_877 )   $flowthrough 
    $delay EQ_u32_u1_882_inst 0
    // 			ifx_xelse_exec_guard_875_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 341
    # := [W_ifx_xelse_exec_guard_875_delayed_1_0_884_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_875_delayed_1_0_886)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_875_delayed_1_0) inc64 := ($cast ($uint<16>) cmp59 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 342
    // ($cast ($uint<16>) cmp59 )
    # := [type_cast_890_inst] (cmp59_883) (inc64_891)  $guard ( ifx_xelse_exec_guard_875_delayed_1_0_886 )    $fullrate
    $buffering  $out type_cast_890_inst inc64_891 1
    $delay type_cast_890_inst 1
    // 			ifx_xelse_exec_guard_880_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 343
    # := [W_ifx_xelse_exec_guard_880_delayed_2_0_892_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_880_delayed_2_0_894)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_880_delayed_2_0_892_inst ifx_xelse_exec_guard_880_delayed_2_0_894 2
    // 			ix_x2_883_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 344
    # := [W_ix_x2_883_delayed_3_0_895_inst] (ix_x2_817) (ix_x2_883_delayed_3_0_897)  $cut_through    $fullrate
    $buffering  $out W_ix_x2_883_delayed_3_0_895_inst ix_x2_883_delayed_3_0_897 3
    // 			$guard (ifx_xelse_exec_guard_880_delayed_2_0) $volatile inc64x_xix_x2 := (inc64 + ix_x2_883_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 345
    // (inc64 + ix_x2_883_delayed_3_0)
    +[ADD_u16_u16_902_inst] (inc64_891 ix_x2_883_delayed_3_0_897) (inc64x_xix_x2_903) $guard ( ifx_xelse_exec_guard_880_delayed_2_0_894 )   $flowthrough 
    $delay ADD_u16_u16_902_inst 0
    // 			ifx_xelse_exec_guard_886_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 346
    # := [W_ifx_xelse_exec_guard_886_delayed_1_0_904_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_886_delayed_1_0_906)  $cut_through    $fullrate
    // 			inc_891_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 347
    # := [W_inc_891_delayed_1_0_907_inst] (inc_868) (inc_891_delayed_1_0_909)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_886_delayed_1_0) $volatile jx_x2 := ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 348
    // ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 ) 
    ? [MUX_916_inst] (cmp59_883 type_cast_914_wire_constant inc_891_delayed_1_0_909) (jx_x2_917) $guard ( ifx_xelse_exec_guard_886_delayed_1_0_906 )  $flowthrough
    // 			ifx_xelse_exec_guard_894_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 349
    # := [W_ifx_xelse_exec_guard_894_delayed_2_0_918_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_894_delayed_2_0_920)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_894_delayed_2_0_918_inst ifx_xelse_exec_guard_894_delayed_2_0_920 2
    // 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 350
    // ($cast ($int<32>) inc64x_xix_x2 )
    $S:=$U [type_cast_924_inst] (inc64x_xix_x2_903) (type_cast_924_wire)  $guard ( ifx_xelse_exec_guard_894_delayed_2_0_920 )  $flowthrough
    $delay type_cast_924_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) )
    # := [type_cast_925_inst] (type_cast_924_wire) (conv66_926)  $guard ( ifx_xelse_exec_guard_894_delayed_2_0_920 )    $fullrate
    $buffering  $out type_cast_925_inst conv66_926 2
    $delay type_cast_925_inst 1
    // 			ifx_xelse_exec_guard_900_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 351
    # := [W_ifx_xelse_exec_guard_900_delayed_3_0_927_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_900_delayed_3_0_929)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_900_delayed_3_0_927_inst ifx_xelse_exec_guard_900_delayed_3_0_929 3
    // 			$guard (ifx_xelse_exec_guard_900_delayed_3_0) $volatile cmp74 := (conv66 == add73) $buffering 1
    //  file prog.linked.opt.aa, line 352
    // (conv66 == add73)
    ==[EQ_u32_u1_934_inst] (conv66_926 add73_790) (cmp74_935) $guard ( ifx_xelse_exec_guard_900_delayed_3_0_929 )   $flowthrough 
    $delay EQ_u32_u1_934_inst 0
    // 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 353
    # := [W_ifx_xelse_exec_guard_907_delayed_3_0_936_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_907_delayed_3_0_938)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_907_delayed_3_0_936_inst ifx_xelse_exec_guard_907_delayed_3_0_938 3
    // 			$volatile ifx_xelse_ifx_xthen76_taken := (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74) $buffering 1
    //  file prog.linked.opt.aa, line 354
    // (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74)
    &[AND_u1_u1_942_inst] (ifx_xelse_exec_guard_907_delayed_3_0_938 cmp74_935) (ifx_xelse_ifx_xthen76_taken_943)   $flowthrough 
    $delay AND_u1_u1_942_inst 0
    // 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 355
    # := [W_ifx_xelse_exec_guard_912_delayed_3_0_944_inst] (ifx_xelse_exec_guard_858) (ifx_xelse_exec_guard_912_delayed_3_0_946)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_912_delayed_3_0_944_inst ifx_xelse_exec_guard_912_delayed_3_0_946 3
    // 			$volatile ifx_xelse_ifx_xend78_taken := (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 )) $buffering 1
    //  file prog.linked.opt.aa, line 356
    // ( ~ cmp74 )
    ~ [NOT_u1_u1_950_inst] (cmp74_935) (NOT_u1_u1_950_wire)   $flowthrough
    $delay NOT_u1_u1_950_inst 0
    // (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 ))
    &[AND_u1_u1_951_inst] (ifx_xelse_exec_guard_912_delayed_3_0_946 NOT_u1_u1_950_wire) (ifx_xelse_ifx_xend78_taken_952)   $flowthrough 
    $delay AND_u1_u1_951_inst 0
    // 			$volatile ifx_xthen76_exec_guard := ifx_xelse_ifx_xthen76_taken $buffering 1
    //  file prog.linked.opt.aa, line 357
    # := [W_ifx_xthen76_exec_guard_953_inst] (ifx_xelse_ifx_xthen76_taken_943) (ifx_xthen76_exec_guard_955)    $flowthrough 
    // 			$volatile ifx_xthen76_ifx_xend78_taken := ifx_xthen76_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 358
    # := [W_ifx_xthen76_ifx_xend78_taken_956_inst] (ifx_xthen76_exec_guard_955) (ifx_xthen76_ifx_xend78_taken_958)    $flowthrough 
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 359
    # := [W_ifx_xthen_exec_guard_959_inst] (whilex_xbody_ifx_xthen_taken_851) (ifx_xthen_exec_guard_961)    $flowthrough 
    // 			kx_x1_928_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 360
    # := [W_kx_x1_928_delayed_1_0_962_inst] (kx_x1_812) (kx_x1_928_delayed_1_0_964)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile add49 := (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 361
    // (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
    +[ADD_u16_u16_970_inst] (kx_x1_928_delayed_1_0_964 type_cast_969_wire_constant) (add49_971) $guard ( ifx_xthen_exec_guard_961 )   $flowthrough 
    $delay ADD_u16_u16_970_inst 0
    // 			$volatile ifx_xthen_ifx_xend78_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 362
    # := [W_ifx_xthen_ifx_xend78_taken_972_inst] (ifx_xthen_exec_guard_961) (ifx_xthen_ifx_xend78_taken_974)    $flowthrough 
    // 			ifx_xthen_ifx_xend78_taken_938_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 363
    # := [W_ifx_xthen_ifx_xend78_taken_938_delayed_3_0_975_inst] (ifx_xthen_ifx_xend78_taken_974) (ifx_xthen_ifx_xend78_taken_938_delayed_3_0_977)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend78_taken_938_delayed_3_0_975_inst ifx_xthen_ifx_xend78_taken_938_delayed_3_0_977 3
    // 			$volatile ifx_xend78_exec_guard := (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 364
    // (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)
    |[OR_u1_u1_982_inst] (ifx_xthen_ifx_xend78_taken_938_delayed_3_0_977 ifx_xthen76_ifx_xend78_taken_958) (OR_u1_u1_982_wire)   $flowthrough 
    $delay OR_u1_u1_982_inst 0
    // (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken))
    |[OR_u1_u1_983_inst] (ifx_xelse_ifx_xend78_taken_952 OR_u1_u1_982_wire) (ifx_xend78_exec_guard_984)   $flowthrough 
    $delay OR_u1_u1_983_inst 0
    // 			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 365
    # := [W_ifx_xthen_ifx_xend78_taken_944_delayed_3_0_985_inst] (ifx_xthen_ifx_xend78_taken_974) (ifx_xthen_ifx_xend78_taken_944_delayed_3_0_987)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend78_taken_944_delayed_3_0_985_inst ifx_xthen_ifx_xend78_taken_944_delayed_3_0_987 3
    // 			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 366
    // ($bitcast ($uint<16>) add49 )
    # := [type_cast_990_inst] (add49_971) (type_cast_946_946_delayed_3_0_991)     $fullrate
    $buffering  $out type_cast_990_inst type_cast_946_946_delayed_3_0_991 3
    $delay type_cast_990_inst 1
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 367
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1005_inst] (ifx_xelse_ifx_xend78_taken_952 type_cast_1002_wire_constant type_cast_1004_wire_constant) (MUX_1005_wire)  $flowthrough
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1006_inst] (ifx_xthen76_ifx_xend78_taken_958 type_cast_998_wire_constant MUX_1005_wire) (MUX_1006_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1007_inst] (ifx_xthen_ifx_xend78_taken_944_delayed_3_0_987 type_cast_946_946_delayed_3_0_991 MUX_1006_wire) (kx_x0_1008)  $flowthrough
    // 			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 368
    # := [W_ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1009_inst] (ifx_xthen_ifx_xend78_taken_974) (ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1011)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1009_inst ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1011 3
    // 			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 369
    // ($bitcast ($uint<16>) ix_x2 )
    # := [type_cast_1014_inst] (ix_x2_817) (type_cast_964_964_delayed_4_0_1015)     $fullrate
    $buffering  $out type_cast_1014_inst type_cast_964_964_delayed_4_0_1015 4
    $delay type_cast_1014_inst 1
    // 			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 370
    // ($bitcast ($uint<16>) inc64x_xix_x2 )
    # := [type_cast_1018_inst] (inc64x_xix_x2_903) (type_cast_967_967_delayed_1_0_1019)     $fullrate
    $buffering  $out type_cast_1018_inst type_cast_967_967_delayed_1_0_1019 2
    $delay type_cast_1018_inst 1
    // 			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 371
    // ($bitcast ($uint<16>) inc64x_xix_x2 )
    # := [type_cast_1022_inst] (inc64x_xix_x2_903) (type_cast_970_970_delayed_1_0_1023)     $fullrate
    $buffering  $out type_cast_1022_inst type_cast_970_970_delayed_1_0_1023 2
    $delay type_cast_1022_inst 1
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 372
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1033_inst] (ifx_xelse_ifx_xend78_taken_952 type_cast_970_970_delayed_1_0_1023 type_cast_1032_wire_constant) (MUX_1033_wire)  $flowthrough
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1034_inst] (ifx_xthen76_ifx_xend78_taken_958 type_cast_967_967_delayed_1_0_1019 MUX_1033_wire) (MUX_1034_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1035_inst] (ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1011 type_cast_964_964_delayed_4_0_1015 MUX_1034_wire) (ix_x1_1036)  $flowthrough
    // 			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 373
    # := [W_ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1037_inst] (ifx_xthen_ifx_xend78_taken_974) (ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1039)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1037_inst ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1039 3
    // 			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 374
    // ($bitcast ($uint<16>) jx_x1 )
    # := [type_cast_1042_inst] (jx_x1_822) (type_cast_980_980_delayed_4_0_1043)     $fullrate
    $buffering  $out type_cast_1042_inst type_cast_980_980_delayed_4_0_1043 4
    $delay type_cast_1042_inst 1
    // 			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 375
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_1046_inst] (jx_x2_917) (type_cast_983_983_delayed_2_0_1047)     $fullrate
    $buffering  $out type_cast_1046_inst type_cast_983_983_delayed_2_0_1047 2
    $delay type_cast_1046_inst 1
    // 			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 376
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_1050_inst] (jx_x2_917) (type_cast_986_986_delayed_2_0_1051)     $fullrate
    $buffering  $out type_cast_1050_inst type_cast_986_986_delayed_2_0_1051 2
    $delay type_cast_1050_inst 1
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 377
    // ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1061_inst] (ifx_xelse_ifx_xend78_taken_952 type_cast_986_986_delayed_2_0_1051 type_cast_1060_wire_constant) (MUX_1061_wire)  $flowthrough
    // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1062_inst] (ifx_xthen76_ifx_xend78_taken_958 type_cast_983_983_delayed_2_0_1047 MUX_1061_wire) (MUX_1062_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1063_inst] (ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1039 type_cast_980_980_delayed_4_0_1043 MUX_1062_wire) (jx_x0_1064)  $flowthrough
    // 			ifx_xthen_ifx_xend78_taken_994_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 378
    # := [W_ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1065_inst] (ifx_xthen_ifx_xend78_taken_974) (ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1067)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1065_inst ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1067 3
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 379
    // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1083_inst] (ifx_xelse_ifx_xend78_taken_952 type_cast_1080_wire_constant type_cast_1082_wire_constant) (MUX_1083_wire)  $flowthrough
    // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1084_inst] (ifx_xthen76_ifx_xend78_taken_958 type_cast_1076_wire_constant MUX_1083_wire) (MUX_1084_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1085_inst] (ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1067 type_cast_1072_wire_constant MUX_1084_wire) (flagx_x0_1086)  $flowthrough
    // 			$guard (ifx_xend78_exec_guard) conv82170 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 380
    // ($cast ($uint<32>) kx_x0 )
    # := [type_cast_1090_inst] (kx_x0_1008) (conv82170_1091)  $guard ( ifx_xend78_exec_guard_984 )    $fullrate
    $buffering  $out type_cast_1090_inst conv82170_1091 1
    $delay type_cast_1090_inst 1
    // 			$guard (ifx_xend78_exec_guard) conv86 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 381
    // ($cast ($int<32>) jx_x0 )
    $S:=$U [type_cast_1095_inst] (jx_x0_1064) (type_cast_1095_wire)  $guard ( ifx_xend78_exec_guard_984 )  $flowthrough
    $delay type_cast_1095_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
    # := [type_cast_1096_inst] (type_cast_1095_wire) (conv86_1097)  $guard ( ifx_xend78_exec_guard_984 )    $fullrate
    $buffering  $out type_cast_1096_inst conv86_1097 1
    $delay type_cast_1096_inst 1
    // 			ifx_xend78_exec_guard_1023_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 382
    # := [W_ifx_xend78_exec_guard_1023_delayed_1_0_1098_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1023_delayed_1_0_1100)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1023_delayed_1_0) $volatile mul87 := (conv86 * conv33) $buffering 1
    //  file prog.linked.opt.aa, line 383
    // (conv86 * conv33)
    *[MUL_u32_u32_1105_inst] (conv86_1097 conv33_700) (mul87_1106) $guard ( ifx_xend78_exec_guard_1023_delayed_1_0_1100 )   $flowthrough 
    $delay MUL_u32_u32_1105_inst 0
    // 			$guard (ifx_xend78_exec_guard) conv92 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 384
    // ($cast ($int<32>) ix_x1 )
    $S:=$U [type_cast_1110_inst] (ix_x1_1036) (type_cast_1110_wire)  $guard ( ifx_xend78_exec_guard_984 )  $flowthrough
    $delay type_cast_1110_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
    # := [type_cast_1111_inst] (type_cast_1110_wire) (conv92_1112)  $guard ( ifx_xend78_exec_guard_984 )    $fullrate
    $buffering  $out type_cast_1111_inst conv92_1112 1
    $delay type_cast_1111_inst 1
    // 			ifx_xend78_exec_guard_1035_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 385
    # := [W_ifx_xend78_exec_guard_1035_delayed_1_0_1113_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1035_delayed_1_0_1115)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1035_delayed_1_0) $volatile mul93 := (conv92 * conv90) $buffering 1
    //  file prog.linked.opt.aa, line 386
    // (conv92 * conv90)
    *[MUL_u32_u32_1120_inst] (conv92_1112 conv90_724) (mul93_1121) $guard ( ifx_xend78_exec_guard_1035_delayed_1_0_1115 )   $flowthrough 
    $delay MUL_u32_u32_1120_inst 0
    // 			ifx_xend78_exec_guard_1041_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 387
    # := [W_ifx_xend78_exec_guard_1041_delayed_1_0_1122_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1041_delayed_1_0_1124)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1041_delayed_1_0) $volatile add88 := (mul93 + conv82170) $buffering 1
    //  file prog.linked.opt.aa, line 388
    // (mul93 + conv82170)
    +[ADD_u32_u32_1129_inst] (mul93_1121 conv82170_1091) (add88_1130) $guard ( ifx_xend78_exec_guard_1041_delayed_1_0_1124 )   $flowthrough 
    $delay ADD_u32_u32_1129_inst 0
    // 			ifx_xend78_exec_guard_1047_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 389
    # := [W_ifx_xend78_exec_guard_1047_delayed_1_0_1131_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1047_delayed_1_0_1133)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1047_delayed_1_0) $volatile add94 := (add88 + mul87) $buffering 1
    //  file prog.linked.opt.aa, line 390
    // (add88 + mul87)
    +[ADD_u32_u32_1138_inst] (add88_1130 mul87_1106) (add94_1139) $guard ( ifx_xend78_exec_guard_1047_delayed_1_0_1133 )   $flowthrough 
    $delay ADD_u32_u32_1138_inst 0
    // 			ifx_xend78_exec_guard_1053_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 391
    # := [W_ifx_xend78_exec_guard_1053_delayed_1_0_1140_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1053_delayed_1_0_1142)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1053_delayed_1_0) conv95 := ($cast ($uint<16>) add94 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 392
    // ($cast ($uint<16>) add94 )
    # := [type_cast_1146_inst] (add94_1139) (conv95_1147)  $guard ( ifx_xend78_exec_guard_1053_delayed_1_0_1142 )    $fullrate
    $buffering  $out type_cast_1146_inst conv95_1147 1
    $delay type_cast_1146_inst 1
    // 			ifx_xend78_exec_guard_1058_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 393
    # := [W_ifx_xend78_exec_guard_1058_delayed_1_0_1148_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1058_delayed_1_0_1150)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1058_delayed_1_0) $volatile sub := (conv86 - conv104) $buffering 1
    //  file prog.linked.opt.aa, line 394
    // (conv86 - conv104)
    -[SUB_u32_u32_1155_inst] (conv86_1097 conv104_728) (sub_1156) $guard ( ifx_xend78_exec_guard_1058_delayed_1_0_1150 )   $flowthrough 
    $delay SUB_u32_u32_1155_inst 0
    // 			ifx_xend78_exec_guard_1064_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 395
    # := [W_ifx_xend78_exec_guard_1064_delayed_1_0_1157_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1064_delayed_1_0_1159)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1064_delayed_1_0) $volatile mul105 := (sub * conv27) $buffering 1
    //  file prog.linked.opt.aa, line 396
    // (sub * conv27)
    *[MUL_u32_u32_1164_inst] (sub_1156 conv27_692) (mul105_1165) $guard ( ifx_xend78_exec_guard_1064_delayed_1_0_1159 )   $flowthrough 
    $delay MUL_u32_u32_1164_inst 0
    // 			ifx_xend78_exec_guard_1070_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 397
    # := [W_ifx_xend78_exec_guard_1070_delayed_1_0_1166_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1070_delayed_1_0_1168)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1070_delayed_1_0) $volatile sub113 := (conv92 - conv104) $buffering 1
    //  file prog.linked.opt.aa, line 398
    // (conv92 - conv104)
    -[SUB_u32_u32_1173_inst] (conv92_1112 conv104_728) (sub113_1174) $guard ( ifx_xend78_exec_guard_1070_delayed_1_0_1168 )   $flowthrough 
    $delay SUB_u32_u32_1173_inst 0
    // 			ifx_xend78_exec_guard_1076_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 399
    # := [W_ifx_xend78_exec_guard_1076_delayed_1_0_1175_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1076_delayed_1_0_1177)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1076_delayed_1_0) $volatile mul114 := (sub113 * conv108) $buffering 1
    //  file prog.linked.opt.aa, line 400
    // (sub113 * conv108)
    *[MUL_u32_u32_1182_inst] (sub113_1174 conv108_748) (mul114_1183) $guard ( ifx_xend78_exec_guard_1076_delayed_1_0_1177 )   $flowthrough 
    $delay MUL_u32_u32_1182_inst 0
    // 			ifx_xend78_exec_guard_1082_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 401
    # := [W_ifx_xend78_exec_guard_1082_delayed_1_0_1184_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1082_delayed_1_0_1186)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1082_delayed_1_0) $volatile add106 := (mul114 + conv82170) $buffering 1
    //  file prog.linked.opt.aa, line 402
    // (mul114 + conv82170)
    +[ADD_u32_u32_1191_inst] (mul114_1183 conv82170_1091) (add106_1192) $guard ( ifx_xend78_exec_guard_1082_delayed_1_0_1186 )   $flowthrough 
    $delay ADD_u32_u32_1191_inst 0
    // 			ifx_xend78_exec_guard_1088_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 403
    # := [W_ifx_xend78_exec_guard_1088_delayed_1_0_1193_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1088_delayed_1_0_1195)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1088_delayed_1_0) $volatile add115 := (add106 + mul105) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // (add106 + mul105)
    +[ADD_u32_u32_1200_inst] (add106_1192 mul105_1165) (add115_1201) $guard ( ifx_xend78_exec_guard_1088_delayed_1_0_1195 )   $flowthrough 
    $delay ADD_u32_u32_1200_inst 0
    // 			ifx_xend78_exec_guard_1094_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 405
    # := [W_ifx_xend78_exec_guard_1094_delayed_1_0_1202_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1094_delayed_1_0_1204)  $cut_through    $fullrate
    // 			type_cast_1099_1099_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 406
    // ($bitcast ($int<32>) conv104 )
    # := [type_cast_1207_inst] (conv104_728) (type_cast_1099_1099_delayed_1_0_1208)     $fullrate
    $buffering  $out type_cast_1207_inst type_cast_1099_1099_delayed_1_0_1208 1
    $delay type_cast_1207_inst 1
    // 			$guard (ifx_xend78_exec_guard_1094_delayed_1_0) $volatile cmp121 := (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 407
    // ($bitcast ($int<32>) conv92 )
    # := [type_cast_1212_inst] (conv92_1112) (type_cast_1212_wire)  $guard ( ifx_xend78_exec_guard_1094_delayed_1_0_1204 )  $flowthrough
    $delay type_cast_1212_inst 0
    // (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0)
    $S<$S[SLT_i32_u1_1214_inst] (type_cast_1212_wire type_cast_1099_1099_delayed_1_0_1208) (cmp121_1215) $guard ( ifx_xend78_exec_guard_1094_delayed_1_0_1204 )   $flowthrough 
    $delay SLT_i32_u1_1214_inst 0
    // 			ifx_xend78_exec_guard_1102_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 408
    # := [W_ifx_xend78_exec_guard_1102_delayed_1_0_1216_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1102_delayed_1_0_1218)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1102_delayed_1_0) $volatile cmp121x_xnot := (cmp121 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 409
    // (cmp121 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_1224_inst] (cmp121_1215 type_cast_1223_wire_constant) (cmp121x_xnot_1225) $guard ( ifx_xend78_exec_guard_1102_delayed_1_0_1218 )   $flowthrough 
    $delay XOR_u1_u1_1224_inst 0
    // 			ifx_xend78_exec_guard_1109_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 410
    # := [W_ifx_xend78_exec_guard_1109_delayed_1_0_1226_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1109_delayed_1_0_1228)  $cut_through    $fullrate
    // 			type_cast_1114_1114_delayed_1_0 := ($bitcast ($int<32>) add130 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 411
    // ($bitcast ($int<32>) add130 )
    # := [type_cast_1231_inst] (add130_763) (type_cast_1114_1114_delayed_1_0_1232)     $fullrate
    $buffering  $out type_cast_1231_inst type_cast_1114_1114_delayed_1_0_1232 1
    $delay type_cast_1231_inst 1
    // 			$guard (ifx_xend78_exec_guard_1109_delayed_1_0) $volatile cmp131 := (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 412
    // ($bitcast ($int<32>) conv92 )
    # := [type_cast_1236_inst] (conv92_1112) (type_cast_1236_wire)  $guard ( ifx_xend78_exec_guard_1109_delayed_1_0_1228 )  $flowthrough
    $delay type_cast_1236_inst 0
    // (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0)
    $S<$S[SLT_i32_u1_1238_inst] (type_cast_1236_wire type_cast_1114_1114_delayed_1_0_1232) (cmp131_1239) $guard ( ifx_xend78_exec_guard_1109_delayed_1_0_1228 )   $flowthrough 
    $delay SLT_i32_u1_1238_inst 0
    // 			ifx_xend78_exec_guard_1117_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 413
    # := [W_ifx_xend78_exec_guard_1117_delayed_1_0_1240_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1117_delayed_1_0_1242)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1117_delayed_1_0) $volatile orx_xcond := (cmp121x_xnot & cmp131) $buffering 1
    //  file prog.linked.opt.aa, line 414
    // (cmp121x_xnot & cmp131)
    &[AND_u1_u1_1247_inst] (cmp121x_xnot_1225 cmp131_1239) (orx_xcond_1248) $guard ( ifx_xend78_exec_guard_1117_delayed_1_0_1242 )   $flowthrough 
    $delay AND_u1_u1_1247_inst 0
    // 			ifx_xend78_exec_guard_1123_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 415
    # := [W_ifx_xend78_exec_guard_1123_delayed_1_0_1249_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1123_delayed_1_0_1251)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1123_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 416
    // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_1257_inst] (orx_xcond_1248 type_cast_1256_wire_constant) (orx_xcondx_xnot_1258) $guard ( ifx_xend78_exec_guard_1123_delayed_1_0_1251 )   $flowthrough 
    $delay XOR_u1_u1_1257_inst 0
    // 			ifx_xend78_exec_guard_1130_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 417
    # := [W_ifx_xend78_exec_guard_1130_delayed_1_0_1259_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1130_delayed_1_0_1261)  $cut_through    $fullrate
    // 			type_cast_1135_1135_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 418
    // ($bitcast ($int<32>) conv104 )
    # := [type_cast_1264_inst] (conv104_728) (type_cast_1135_1135_delayed_1_0_1265)     $fullrate
    $buffering  $out type_cast_1264_inst type_cast_1135_1135_delayed_1_0_1265 1
    $delay type_cast_1264_inst 1
    // 			$guard (ifx_xend78_exec_guard_1130_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 419
    // ($bitcast ($int<32>) conv86 )
    # := [type_cast_1269_inst] (conv86_1097) (type_cast_1269_wire)  $guard ( ifx_xend78_exec_guard_1130_delayed_1_0_1261 )  $flowthrough
    $delay type_cast_1269_inst 0
    // (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0)
    $S<$S[SLT_i32_u1_1271_inst] (type_cast_1269_wire type_cast_1135_1135_delayed_1_0_1265) (cmp138_1272) $guard ( ifx_xend78_exec_guard_1130_delayed_1_0_1261 )   $flowthrough 
    $delay SLT_i32_u1_1271_inst 0
    // 			ifx_xend78_exec_guard_1138_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 420
    # := [W_ifx_xend78_exec_guard_1138_delayed_1_0_1273_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1138_delayed_1_0_1275)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1138_delayed_1_0) $volatile orx_xcond175 := (orx_xcondx_xnot | cmp138) $buffering 1
    //  file prog.linked.opt.aa, line 421
    // (orx_xcondx_xnot | cmp138)
    |[OR_u1_u1_1280_inst] (orx_xcondx_xnot_1258 cmp138_1272) (orx_xcond175_1281) $guard ( ifx_xend78_exec_guard_1138_delayed_1_0_1275 )   $flowthrough 
    $delay OR_u1_u1_1280_inst 0
    // 			ifx_xend78_exec_guard_1144_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 422
    # := [W_ifx_xend78_exec_guard_1144_delayed_1_0_1282_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1144_delayed_1_0_1284)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1144_delayed_1_0) $volatile orx_xcond175x_xnot := (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 423
    // (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_1290_inst] (orx_xcond175_1281 type_cast_1289_wire_constant) (orx_xcond175x_xnot_1291) $guard ( ifx_xend78_exec_guard_1144_delayed_1_0_1284 )   $flowthrough 
    $delay XOR_u1_u1_1290_inst 0
    // 			ifx_xend78_exec_guard_1151_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 424
    # := [W_ifx_xend78_exec_guard_1151_delayed_1_0_1292_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1151_delayed_1_0_1294)  $cut_through    $fullrate
    // 			type_cast_1156_1156_delayed_1_0 := ($bitcast ($int<32>) add148 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 425
    // ($bitcast ($int<32>) add148 )
    # := [type_cast_1297_inst] (add148_774) (type_cast_1156_1156_delayed_1_0_1298)     $fullrate
    $buffering  $out type_cast_1297_inst type_cast_1156_1156_delayed_1_0_1298 1
    $delay type_cast_1297_inst 1
    // 			$guard (ifx_xend78_exec_guard_1151_delayed_1_0) $volatile cmp149 := (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // ($bitcast ($int<32>) conv86 )
    # := [type_cast_1302_inst] (conv86_1097) (type_cast_1302_wire)  $guard ( ifx_xend78_exec_guard_1151_delayed_1_0_1294 )  $flowthrough
    $delay type_cast_1302_inst 0
    // (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0)
    $S<$S[SLT_i32_u1_1304_inst] (type_cast_1302_wire type_cast_1156_1156_delayed_1_0_1298) (cmp149_1305) $guard ( ifx_xend78_exec_guard_1151_delayed_1_0_1294 )   $flowthrough 
    $delay SLT_i32_u1_1304_inst 0
    // 			ifx_xend78_exec_guard_1159_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 427
    # := [W_ifx_xend78_exec_guard_1159_delayed_1_0_1306_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1159_delayed_1_0_1308)  $cut_through    $fullrate
    // 			$guard (ifx_xend78_exec_guard_1159_delayed_1_0) $volatile orx_xcond176 := (orx_xcond175x_xnot & cmp149) $buffering 1
    //  file prog.linked.opt.aa, line 428
    // (orx_xcond175x_xnot & cmp149)
    &[AND_u1_u1_1313_inst] (orx_xcond175x_xnot_1291 cmp149_1305) (orx_xcond176_1314) $guard ( ifx_xend78_exec_guard_1159_delayed_1_0_1308 )   $flowthrough 
    $delay AND_u1_u1_1313_inst 0
    // 			ifx_xend78_exec_guard_1166_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 429
    # := [W_ifx_xend78_exec_guard_1166_delayed_1_0_1315_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1166_delayed_1_0_1317)  $cut_through    $fullrate
    // 			$volatile ifx_xend78_ifx_xelse154_taken := (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176) $buffering 1
    //  file prog.linked.opt.aa, line 430
    // (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176)
    &[AND_u1_u1_1321_inst] (ifx_xend78_exec_guard_1166_delayed_1_0_1317 orx_xcond176_1314) (ifx_xend78_ifx_xelse154_taken_1322)   $flowthrough 
    $delay AND_u1_u1_1321_inst 0
    // 			ifx_xend78_exec_guard_1171_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 431
    # := [W_ifx_xend78_exec_guard_1171_delayed_1_0_1323_inst] (ifx_xend78_exec_guard_984) (ifx_xend78_exec_guard_1171_delayed_1_0_1325)  $cut_through    $fullrate
    // 			$volatile ifx_xend78_ifx_xthen151_taken := (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 )) $buffering 1
    //  file prog.linked.opt.aa, line 432
    // ( ~ orx_xcond176 )
    ~ [NOT_u1_u1_1329_inst] (orx_xcond176_1314) (NOT_u1_u1_1329_wire)   $flowthrough
    $delay NOT_u1_u1_1329_inst 0
    // (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 ))
    &[AND_u1_u1_1330_inst] (ifx_xend78_exec_guard_1171_delayed_1_0_1325 NOT_u1_u1_1329_wire) (ifx_xend78_ifx_xthen151_taken_1331)   $flowthrough 
    $delay AND_u1_u1_1330_inst 0
    // 			$volatile ifx_xthen151_exec_guard := ifx_xend78_ifx_xthen151_taken $buffering 1
    //  file prog.linked.opt.aa, line 433
    # := [W_ifx_xthen151_exec_guard_1332_inst] (ifx_xend78_ifx_xthen151_taken_1331) (ifx_xthen151_exec_guard_1334)    $flowthrough 
    // 			ifx_xthen151_exec_guard_1179_delayed_1_0 := ifx_xthen151_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 434
    # := [W_ifx_xthen151_exec_guard_1179_delayed_1_0_1335_inst] (ifx_xthen151_exec_guard_1334) (ifx_xthen151_exec_guard_1179_delayed_1_0_1337)  $cut_through    $fullrate
    // 			$guard (ifx_xthen151_exec_guard_1179_delayed_1_0) conv153 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 435
    // ($cast ($int<32>) conv95 )
    $S:=$U [type_cast_1341_inst] (conv95_1147) (type_cast_1341_wire)  $guard ( ifx_xthen151_exec_guard_1179_delayed_1_0_1337 )  $flowthrough
    $delay type_cast_1341_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
    # := [type_cast_1342_inst] (type_cast_1341_wire) (conv153_1343)  $guard ( ifx_xthen151_exec_guard_1179_delayed_1_0_1337 )    $fullrate
    $buffering  $out type_cast_1342_inst conv153_1343 1
    $delay type_cast_1342_inst 1
    // 			ifx_xthen151_exec_guard_1185_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 436
    # := [W_ifx_xthen151_exec_guard_1185_delayed_2_0_1344_inst] (ifx_xthen151_exec_guard_1334) (ifx_xthen151_exec_guard_1185_delayed_2_0_1346)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen151_exec_guard_1185_delayed_2_0_1344_inst ifx_xthen151_exec_guard_1185_delayed_2_0_1346 2
    // 			$guard (ifx_xthen151_exec_guard_1185_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 437
    // ($bitcast ($int<32>) conv153 )
    # := [type_cast_1350_inst] (conv153_1343) (type_cast_1350_wire)  $guard ( ifx_xthen151_exec_guard_1185_delayed_2_0_1346 )  $flowthrough
    $delay type_cast_1350_inst 0
    // (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_1354_inst] (type_cast_1350_wire type_cast_1353_wire_constant) (ASHR_i32_i32_1354_wire) $guard ( ifx_xthen151_exec_guard_1185_delayed_2_0_1346 )   $flowthrough 
    $delay ASHR_i32_i32_1354_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_1355_inst] (ASHR_i32_i32_1354_wire) (shr_1356)  $guard ( ifx_xthen151_exec_guard_1185_delayed_2_0_1346 )  $flowthrough
    $delay type_cast_1355_inst 0
    // 			ifx_xthen151_exec_guard_1195_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 438
    # := [W_ifx_xthen151_exec_guard_1195_delayed_2_0_1357_inst] (ifx_xthen151_exec_guard_1334) (ifx_xthen151_exec_guard_1195_delayed_2_0_1359)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen151_exec_guard_1195_delayed_2_0_1357_inst ifx_xthen151_exec_guard_1195_delayed_2_0_1359 2
    // 			$guard (ifx_xthen151_exec_guard_1195_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 439
    // ($cast ($int<64>) shr )
    $S:=$U [type_cast_1363_inst] (shr_1356) (type_cast_1363_wire)  $guard ( ifx_xthen151_exec_guard_1195_delayed_2_0_1359 )  $flowthrough
    $delay type_cast_1363_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
    # := [type_cast_1364_inst] (type_cast_1363_wire) (idxprom_1365)  $guard ( ifx_xthen151_exec_guard_1195_delayed_2_0_1359 )    $fullrate
    $buffering  $out type_cast_1364_inst idxprom_1365 1
    $delay type_cast_1364_inst 1
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 440
    &/ [array_obj_ref_1370_index_1_resize] (idxprom_1365) (R_idxprom_1369_resized) 
    $flowthrough 
    &/ [array_obj_ref_1370_index_1_rename] (R_idxprom_1369_resized) (R_idxprom_1369_scaled) 
    $flowthrough 
    +[array_obj_ref_1370_index_offset] (R_idxprom_1369_scaled array_obj_ref_1370_constant_part_of_offset) (array_obj_ref_1370_final_offset)    $fullrate
    $buffering  $in array_obj_ref_1370_index_offset R_idxprom_1369_scaled 2
    $buffering  $in array_obj_ref_1370_index_offset array_obj_ref_1370_constant_part_of_offset 2
    $buffering  $out array_obj_ref_1370_index_offset array_obj_ref_1370_final_offset 2
    $delay array_obj_ref_1370_index_offset 2
    &/ [array_obj_ref_1370_root_address_inst] (array_obj_ref_1370_final_offset) (array_obj_ref_1370_root_address) 
    $flowthrough 
    # := [addr_of_1371_final_reg] (array_obj_ref_1370_root_address) (arrayidx_1372)     $fullrate
    $buffering  $out addr_of_1371_final_reg arrayidx_1372 1
    // 			$guard (ifx_xthen151_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 441
    // ->(arrayidx)
    &/ [ptr_deref_1375_base_resize] (arrayidx_1372) (ptr_deref_1375_resized_base_address) $guard ( ifx_xthen151_exec_guard_1334 ) 
    $flowthrough 
    &/ [ptr_deref_1375_root_address_inst] (ptr_deref_1375_resized_base_address) (ptr_deref_1375_root_address) $guard ( ifx_xthen151_exec_guard_1334 ) 
    $flowthrough 
    &/ [ptr_deref_1375_addr_0] (ptr_deref_1375_root_address) (ptr_deref_1375_word_address_0) $guard ( ifx_xthen151_exec_guard_1334 ) 
    $flowthrough 
    $store [ptr_deref_1375_store_0] $to memory_space_0 (ptr_deref_1375_word_address_0 ptr_deref_1375_data_0) $guard ( ifx_xthen151_exec_guard_1334 ) 
    $buffering  $in ptr_deref_1375_store_0 ptr_deref_1375_word_address_0 2
    $buffering  $in ptr_deref_1375_store_0 ptr_deref_1375_data_0 2
    $delay ptr_deref_1375_store_0 6
    &/ [ptr_deref_1375_gather_scatter] (type_cast_1377_wire_constant) (ptr_deref_1375_data_0) $guard ( ifx_xthen151_exec_guard_1334 ) 
    $flowthrough 
    // 			$volatile ifx_xelse154_exec_guard := ifx_xend78_ifx_xelse154_taken $buffering 1
    //  file prog.linked.opt.aa, line 442
    # := [W_ifx_xelse154_exec_guard_1379_inst] (ifx_xend78_ifx_xelse154_taken_1322) (ifx_xelse154_exec_guard_1381)    $flowthrough 
    // 			$guard (ifx_xelse154_exec_guard) $volatile sext173 := (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 443
    // (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_1387_inst] (add115_1201 type_cast_1386_wire_constant) (sext173_1388) $guard ( ifx_xelse154_exec_guard_1381 )   $flowthrough 
    $delay SHL_u32_u32_1387_inst 0
    // 			$guard (ifx_xelse154_exec_guard) $volatile shr157 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 444
    // ($bitcast ($int<32>) sext173 )
    # := [type_cast_1392_inst] (sext173_1388) (type_cast_1392_wire)  $guard ( ifx_xelse154_exec_guard_1381 )  $flowthrough
    $delay type_cast_1392_inst 0
    // (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $S>>[ASHR_i32_i32_1396_inst] (type_cast_1392_wire type_cast_1395_wire_constant) (ASHR_i32_i32_1396_wire) $guard ( ifx_xelse154_exec_guard_1381 )   $flowthrough 
    $delay ASHR_i32_i32_1396_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
    # := [type_cast_1397_inst] (ASHR_i32_i32_1396_wire) (shr157_1398)  $guard ( ifx_xelse154_exec_guard_1381 )  $flowthrough
    $delay type_cast_1397_inst 0
    // 			$guard (ifx_xelse154_exec_guard) idxprom158 := ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 445
    // ($cast ($int<64>) shr157 )
    $S:=$U [type_cast_1402_inst] (shr157_1398) (type_cast_1402_wire)  $guard ( ifx_xelse154_exec_guard_1381 )  $flowthrough
    $delay type_cast_1402_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) )
    # := [type_cast_1403_inst] (type_cast_1402_wire) (idxprom158_1404)  $guard ( ifx_xelse154_exec_guard_1381 )    $fullrate
    $buffering  $out type_cast_1403_inst idxprom158_1404 1
    $delay type_cast_1403_inst 1
    // 			arrayidx159 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 446
    &/ [array_obj_ref_1409_index_1_resize] (idxprom158_1404) (R_idxprom158_1408_resized) 
    $flowthrough 
    &/ [array_obj_ref_1409_index_1_rename] (R_idxprom158_1408_resized) (R_idxprom158_1408_scaled) 
    $flowthrough 
    +[array_obj_ref_1409_index_offset] (R_idxprom158_1408_scaled array_obj_ref_1409_constant_part_of_offset) (array_obj_ref_1409_final_offset)    $fullrate
    $buffering  $in array_obj_ref_1409_index_offset R_idxprom158_1408_scaled 2
    $buffering  $in array_obj_ref_1409_index_offset array_obj_ref_1409_constant_part_of_offset 2
    $buffering  $out array_obj_ref_1409_index_offset array_obj_ref_1409_final_offset 2
    $delay array_obj_ref_1409_index_offset 2
    &/ [array_obj_ref_1409_root_address_inst] (array_obj_ref_1409_final_offset) (array_obj_ref_1409_root_address) 
    $flowthrough 
    # := [addr_of_1410_final_reg] (array_obj_ref_1409_root_address) (arrayidx159_1411)     $fullrate
    $buffering  $out addr_of_1410_final_reg arrayidx159_1411 1
    // 			ifx_xelse154_exec_guard_1247_delayed_8_0 := ifx_xelse154_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 447
    # := [W_ifx_xelse154_exec_guard_1247_delayed_8_0_1412_inst] (ifx_xelse154_exec_guard_1381) (ifx_xelse154_exec_guard_1247_delayed_8_0_1414)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse154_exec_guard_1247_delayed_8_0_1412_inst ifx_xelse154_exec_guard_1247_delayed_8_0_1414 8
    // 			$guard (ifx_xelse154_exec_guard_1247_delayed_8_0) tmp160 := ->(arrayidx159) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 448
    // ->(arrayidx159)
    &/ [ptr_deref_1418_base_resize] (arrayidx159_1411) (ptr_deref_1418_resized_base_address) $guard ( ifx_xelse154_exec_guard_1247_delayed_8_0_1414 ) 
    $flowthrough 
    &/ [ptr_deref_1418_root_address_inst] (ptr_deref_1418_resized_base_address) (ptr_deref_1418_root_address) $guard ( ifx_xelse154_exec_guard_1247_delayed_8_0_1414 ) 
    $flowthrough 
    &/ [ptr_deref_1418_addr_0] (ptr_deref_1418_root_address) (ptr_deref_1418_word_address_0) $guard ( ifx_xelse154_exec_guard_1247_delayed_8_0_1414 ) 
    $flowthrough 
    $load [ptr_deref_1418_load_0] $from memory_space_1 (ptr_deref_1418_word_address_0) (ptr_deref_1418_data_0) $guard ( ifx_xelse154_exec_guard_1247_delayed_8_0_1414 ) 
    $buffering  $in ptr_deref_1418_load_0 ptr_deref_1418_word_address_0 2
    $buffering  $out ptr_deref_1418_load_0 ptr_deref_1418_data_0 2
    $delay ptr_deref_1418_load_0 6
    &/ [ptr_deref_1418_gather_scatter] (ptr_deref_1418_data_0) (tmp160_1419) $guard ( ifx_xelse154_exec_guard_1247_delayed_8_0_1414 ) 
    $flowthrough 
    // 			ifx_xelse154_exec_guard_1252_delayed_1_0 := ifx_xelse154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 449
    # := [W_ifx_xelse154_exec_guard_1252_delayed_1_0_1420_inst] (ifx_xelse154_exec_guard_1381) (ifx_xelse154_exec_guard_1252_delayed_1_0_1422)  $cut_through    $fullrate
    // 			$guard (ifx_xelse154_exec_guard_1252_delayed_1_0) conv162 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 450
    // ($cast ($int<32>) conv95 )
    $S:=$U [type_cast_1426_inst] (conv95_1147) (type_cast_1426_wire)  $guard ( ifx_xelse154_exec_guard_1252_delayed_1_0_1422 )  $flowthrough
    $delay type_cast_1426_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
    # := [type_cast_1427_inst] (type_cast_1426_wire) (conv162_1428)  $guard ( ifx_xelse154_exec_guard_1252_delayed_1_0_1422 )    $fullrate
    $buffering  $out type_cast_1427_inst conv162_1428 1
    $delay type_cast_1427_inst 1
    // 			ifx_xelse154_exec_guard_1258_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 451
    # := [W_ifx_xelse154_exec_guard_1258_delayed_2_0_1429_inst] (ifx_xelse154_exec_guard_1381) (ifx_xelse154_exec_guard_1258_delayed_2_0_1431)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse154_exec_guard_1258_delayed_2_0_1429_inst ifx_xelse154_exec_guard_1258_delayed_2_0_1431 2
    // 			$guard (ifx_xelse154_exec_guard_1258_delayed_2_0) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 452
    // ($bitcast ($int<32>) conv162 )
    # := [type_cast_1435_inst] (conv162_1428) (type_cast_1435_wire)  $guard ( ifx_xelse154_exec_guard_1258_delayed_2_0_1431 )  $flowthrough
    $delay type_cast_1435_inst 0
    // (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_1439_inst] (type_cast_1435_wire type_cast_1438_wire_constant) (ASHR_i32_i32_1439_wire) $guard ( ifx_xelse154_exec_guard_1258_delayed_2_0_1431 )   $flowthrough 
    $delay ASHR_i32_i32_1439_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_1440_inst] (ASHR_i32_i32_1439_wire) (shr163_1441)  $guard ( ifx_xelse154_exec_guard_1258_delayed_2_0_1431 )  $flowthrough
    $delay type_cast_1440_inst 0
    // 			ifx_xelse154_exec_guard_1268_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 453
    # := [W_ifx_xelse154_exec_guard_1268_delayed_2_0_1442_inst] (ifx_xelse154_exec_guard_1381) (ifx_xelse154_exec_guard_1268_delayed_2_0_1444)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse154_exec_guard_1268_delayed_2_0_1442_inst ifx_xelse154_exec_guard_1268_delayed_2_0_1444 2
    // 			$guard (ifx_xelse154_exec_guard_1268_delayed_2_0) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 454
    // ($cast ($int<64>) shr163 )
    $S:=$U [type_cast_1448_inst] (shr163_1441) (type_cast_1448_wire)  $guard ( ifx_xelse154_exec_guard_1268_delayed_2_0_1444 )  $flowthrough
    $delay type_cast_1448_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
    # := [type_cast_1449_inst] (type_cast_1448_wire) (idxprom164_1450)  $guard ( ifx_xelse154_exec_guard_1268_delayed_2_0_1444 )    $fullrate
    $buffering  $out type_cast_1449_inst idxprom164_1450 1
    $delay type_cast_1449_inst 1
    // 			arrayidx165 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 455
    &/ [array_obj_ref_1455_index_1_resize] (idxprom164_1450) (R_idxprom164_1454_resized) 
    $flowthrough 
    &/ [array_obj_ref_1455_index_1_rename] (R_idxprom164_1454_resized) (R_idxprom164_1454_scaled) 
    $flowthrough 
    +[array_obj_ref_1455_index_offset] (R_idxprom164_1454_scaled array_obj_ref_1455_constant_part_of_offset) (array_obj_ref_1455_final_offset)    $fullrate
    $buffering  $in array_obj_ref_1455_index_offset R_idxprom164_1454_scaled 2
    $buffering  $in array_obj_ref_1455_index_offset array_obj_ref_1455_constant_part_of_offset 2
    $buffering  $out array_obj_ref_1455_index_offset array_obj_ref_1455_final_offset 2
    $delay array_obj_ref_1455_index_offset 2
    &/ [array_obj_ref_1455_root_address_inst] (array_obj_ref_1455_final_offset) (array_obj_ref_1455_root_address) 
    $flowthrough 
    # := [addr_of_1456_final_reg] (array_obj_ref_1455_root_address) (arrayidx165_1457)     $fullrate
    $buffering  $out addr_of_1456_final_reg arrayidx165_1457 1
    // 			ifx_xelse154_exec_guard_1281_delayed_14_0 := ifx_xelse154_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 456
    # := [W_ifx_xelse154_exec_guard_1281_delayed_14_0_1458_inst] (ifx_xelse154_exec_guard_1381) (ifx_xelse154_exec_guard_1281_delayed_14_0_1460)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse154_exec_guard_1281_delayed_14_0_1458_inst ifx_xelse154_exec_guard_1281_delayed_14_0_1460 14
    // 			arrayidx165_1282_delayed_4_0 := arrayidx165 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 457
    # := [W_arrayidx165_1282_delayed_4_0_1461_inst] (arrayidx165_1457) (arrayidx165_1282_delayed_4_0_1463)  $cut_through    $fullrate
    $buffering  $out W_arrayidx165_1282_delayed_4_0_1461_inst arrayidx165_1282_delayed_4_0_1463 4
    // 			$guard (ifx_xelse154_exec_guard_1281_delayed_14_0) ->(arrayidx165_1282_delayed_4_0) := tmp160 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 458
    // ->(arrayidx165_1282_delayed_4_0)
    &/ [ptr_deref_1466_base_resize] (arrayidx165_1282_delayed_4_0_1463) (ptr_deref_1466_resized_base_address) $guard ( ifx_xelse154_exec_guard_1281_delayed_14_0_1460 ) 
    $flowthrough 
    &/ [ptr_deref_1466_root_address_inst] (ptr_deref_1466_resized_base_address) (ptr_deref_1466_root_address) $guard ( ifx_xelse154_exec_guard_1281_delayed_14_0_1460 ) 
    $flowthrough 
    &/ [ptr_deref_1466_addr_0] (ptr_deref_1466_root_address) (ptr_deref_1466_word_address_0) $guard ( ifx_xelse154_exec_guard_1281_delayed_14_0_1460 ) 
    $flowthrough 
    $store [ptr_deref_1466_store_0] $to memory_space_0 (ptr_deref_1466_word_address_0 ptr_deref_1466_data_0) $guard ( ifx_xelse154_exec_guard_1281_delayed_14_0_1460 ) 
    $buffering  $in ptr_deref_1466_store_0 ptr_deref_1466_word_address_0 2
    $buffering  $in ptr_deref_1466_store_0 ptr_deref_1466_data_0 2
    $delay ptr_deref_1466_store_0 6
    &/ [ptr_deref_1466_gather_scatter] (tmp160_1419) (ptr_deref_1466_data_0) $guard ( ifx_xelse154_exec_guard_1281_delayed_14_0_1460 ) 
    $flowthrough 
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 459
    // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1473_inst] (flagx_x0_1086 type_cast_1472_wire_constant) (tobool_1474)   $flowthrough 
    $delay EQ_u16_u1_1473_inst 0
    // 			$volatile ifx_xend166_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 460
    // ( ~ tobool )
    ~ [NOT_u1_u1_1477_inst] (tobool_1474) (ifx_xend166_whilex_xend_taken_1478)   $flowthrough
    $delay NOT_u1_u1_1477_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 118164344
    ==0? [if_stmt_1481_branch] (ifx_xend166_whilex_xend_taken_1478)
    // 		Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 468
    // Block0_complete
    $ioport $out [WPIPE_Block0_complete_1487_inst]  (type_cast_1489_wire_constant) (Block0_complete) 
  }
  // end data-path
  // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 283
  // Block0_starting
  RPIPE_Block0_starting_668_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_668_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_668_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_668_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_668_Update/ca)
  // 		call1 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 284
  // Block0_starting
  RPIPE_Block0_starting_671_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_671_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_671_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_671_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_671_Update/ca)
  // 		call2 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 285
  // Block0_starting
  RPIPE_Block0_starting_674_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_674_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_674_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_674_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_674_Update/ca)
  // 		call3 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 286
  // Block0_starting
  RPIPE_Block0_starting_677_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_677_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_677_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_677_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_677_Update/ca)
  // 		call4 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 287
  // Block0_starting
  RPIPE_Block0_starting_680_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_680_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_680_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_680_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_680_Update/ca)
  // 		call5 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 288
  // Block0_starting
  RPIPE_Block0_starting_683_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_683_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_683_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_683_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_683_Update/ca)
  // 		call6 := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 289
  // Block0_starting
  RPIPE_Block0_starting_686_inst <=> (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_686_Sample/rr branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_686_Update/cr) (branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_686_Sample/ra branch_block_stmt_666/assign_stmt_669_to_assign_stmt_687/RPIPE_Block0_starting_686_Update/ca)
  // 		conv27 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 291
  // call2
  // ($cast ($uint<32>) call2 )
  type_cast_691_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_691_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_691_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_691_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_691_Update/ca)
  // 		conv29 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 292
  // call1
  // ($cast ($uint<32>) call1 )
  type_cast_695_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_695_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_695_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_695_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_695_Update/ca)
  // 		conv33 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 293
  // call5
  // ($cast ($uint<32>) call5 )
  type_cast_699_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_699_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_699_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_699_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_699_Update/ca)
  // 		conv35 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 294
  // call4
  // ($cast ($uint<32>) call4 )
  type_cast_703_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_703_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_703_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_703_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_703_Update/ca)
  // 		$volatile mul36 := (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 295
  // (conv35 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv35
  // 		$volatile sext := (mul36 * conv33) $buffering 1
  //  file prog.linked.opt.aa, line 296
  // (mul36 * conv33)
  // mul36
  // conv33
  // 		$volatile conv90 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 297
  // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext
  // 		conv104 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 298
  // call6
  // ($cast ($uint<32>) call6 )
  type_cast_727_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_727_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_727_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_727_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_727_Update/ca)
  // 		$volatile mul := (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 299
  // (conv29 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv29
  // 		$volatile sext171 := (mul * conv27) $buffering 1
  //  file prog.linked.opt.aa, line 300
  // (mul * conv27)
  // mul
  // conv27
  // 		$volatile conv108 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 301
  // (($bitcast ($int<32>) sext171 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext171
  // 		conv126 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 302
  // call
  // ($cast ($uint<32>) call )
  type_cast_751_inst <=> (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_751_Sample/rr branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_751_Update/cr) (branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_751_Sample/ra branch_block_stmt_666/assign_stmt_692_to_assign_stmt_790/type_cast_751_Update/ca)
  // 		$volatile div127 := (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 303
  // (conv126 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv126
  // 		$volatile add130 := (conv104 + div127) $buffering 1
  //  file prog.linked.opt.aa, line 304
  // (conv104 + div127)
  // conv104
  // div127
  // 		$volatile div145 := (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 305
  // (conv29 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv29
  // 		$volatile add148 := (conv104 + div145) $buffering 1
  //  file prog.linked.opt.aa, line 306
  // (conv104 + div145)
  // conv104
  // div145
  // 		$volatile shl := (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 307
  // (conv104 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv104
  // 		$volatile add58 := (shl + div145) $buffering 1
  //  file prog.linked.opt.aa, line 308
  // (shl + div145)
  // shl
  // div145
  // 		$volatile add73 := (shl + div127) $buffering 1
  //  file prog.linked.opt.aa, line 309
  // (shl + div127)
  // shl
  // div127
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 311
  // In merge, skipped links for constant phi phi_stmt_793
  // In merge, skipped links for constant phi phi_stmt_799
  // In merge, skipped links for constant phi phi_stmt_804
  // CP-DP links for do-while  do_while_stmt_810
  //  file prog.linked.opt.aa, line 319
  phi_stmt_812 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_812_loopback_sample_req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_812_entry_sample_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_812_phi_mux_ack)
  // kx_x0
  // ($cast ($uint<16>) kx_x0 )
  type_cast_815_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_815_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_815_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_815_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_815_Update/ca)
  phi_stmt_817 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_817_loopback_sample_req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_817_entry_sample_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_817_phi_mux_ack)
  // ix_x1
  // ($cast ($uint<16>) ix_x1 )
  type_cast_820_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_820_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_820_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_820_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_820_Update/ca)
  phi_stmt_822 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_822_loopback_sample_req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_822_entry_sample_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/phi_stmt_822_phi_mux_ack)
  // jx_x0
  // ($cast ($uint<16>) jx_x0 )
  type_cast_825_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_825_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_825_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_825_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_825_Update/ca)
  // 			conv43 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 329
  // kx_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
  type_cast_831_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_831_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_831_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_831_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_831_Update/ca)
  // 			$volatile add := (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 330
  // (conv43 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
  // conv43
  // 			type_cast_843_843_delayed_2_0 := ($bitcast ($int<32>) conv27 ) $buffering 2 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 331
  // conv27
  // ($bitcast ($int<32>) conv27 )
  type_cast_841_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_841_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_841_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_841_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_841_Update/ca)
  // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0) $buffering 1
  //  file prog.linked.opt.aa, line 332
  // (($bitcast ($int<32>) add ) < type_cast_843_843_delayed_2_0)
  // add
  // type_cast_843_843_delayed_2_0
  // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
  //  file prog.linked.opt.aa, line 333
  // cmp
  // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
  //  file prog.linked.opt.aa, line 334
  // cmp
  // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
  //  file prog.linked.opt.aa, line 335
  // whilex_xbody_ifx_xelse_taken
  // 			jx_x1_858_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 336
  // jx_x1
  W_jx_x1_858_delayed_1_0_859_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_861_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_861_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_861_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_861_Update/ack)
  // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 337
  // (jx_x1_858_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // jx_x1_858_delayed_1_0
  // 			$guard (ifx_xelse_exec_guard) conv53 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 338
  // inc
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
  type_cast_873_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_873_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_873_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_873_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_873_Update/ca)
  // 			ifx_xelse_exec_guard_869_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 339
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_869_delayed_1_0_875_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_877_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_877_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_877_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_877_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_869_delayed_1_0) $volatile cmp59 := (conv53 == add58) $buffering 1
  //  file prog.linked.opt.aa, line 340
  // (conv53 == add58)
  // conv53
  // add58
  // 			ifx_xelse_exec_guard_875_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 341
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_875_delayed_1_0_884_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_886_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_886_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_886_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_886_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_875_delayed_1_0) inc64 := ($cast ($uint<16>) cmp59 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 342
  // cmp59
  // ($cast ($uint<16>) cmp59 )
  type_cast_890_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_890_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_890_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_890_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_890_Update/ca)
  // 			ifx_xelse_exec_guard_880_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 343
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_880_delayed_2_0_892_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_894_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_894_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_894_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_894_Update/ack)
  // 			ix_x2_883_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 344
  // ix_x2
  W_ix_x2_883_delayed_3_0_895_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_897_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_897_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_897_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_897_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_880_delayed_2_0) $volatile inc64x_xix_x2 := (inc64 + ix_x2_883_delayed_3_0) $buffering 1
  //  file prog.linked.opt.aa, line 345
  // (inc64 + ix_x2_883_delayed_3_0)
  // inc64
  // ix_x2_883_delayed_3_0
  // 			ifx_xelse_exec_guard_886_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 346
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_886_delayed_1_0_904_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_906_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_906_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_906_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_906_Update/ack)
  // 			inc_891_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 347
  // inc
  W_inc_891_delayed_1_0_907_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_909_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_909_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_909_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_909_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_886_delayed_1_0) $volatile jx_x2 := ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 )  $buffering 1
  //  file prog.linked.opt.aa, line 348
  // cmp59
  // inc_891_delayed_1_0
  // ( $mux cmp59 ($bitcast ($uint<16>) _b0000000000000000  )  inc_891_delayed_1_0 ) 
  // 			ifx_xelse_exec_guard_894_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 349
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_894_delayed_2_0_918_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_920_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_920_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_920_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_920_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_894_delayed_2_0) conv66 := ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 350
  // inc64x_xix_x2
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc64x_xix_x2 ) )
  type_cast_925_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_925_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_925_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_925_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_925_Update/ca)
  // 			ifx_xelse_exec_guard_900_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 351
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_900_delayed_3_0_927_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_929_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_929_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_929_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_929_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_900_delayed_3_0) $volatile cmp74 := (conv66 == add73) $buffering 1
  //  file prog.linked.opt.aa, line 352
  // (conv66 == add73)
  // conv66
  // add73
  // 			ifx_xelse_exec_guard_907_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 353
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_907_delayed_3_0_936_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_938_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_938_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_938_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_938_Update/ack)
  // 			$volatile ifx_xelse_ifx_xthen76_taken := (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74) $buffering 1
  //  file prog.linked.opt.aa, line 354
  // (ifx_xelse_exec_guard_907_delayed_3_0 & cmp74)
  // ifx_xelse_exec_guard_907_delayed_3_0
  // cmp74
  // 			ifx_xelse_exec_guard_912_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 355
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_912_delayed_3_0_944_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_946_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_946_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_946_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_946_Update/ack)
  // 			$volatile ifx_xelse_ifx_xend78_taken := (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 )) $buffering 1
  //  file prog.linked.opt.aa, line 356
  // (ifx_xelse_exec_guard_912_delayed_3_0 & ( ~ cmp74 ))
  // ifx_xelse_exec_guard_912_delayed_3_0
  // cmp74
  // 			$volatile ifx_xthen76_exec_guard := ifx_xelse_ifx_xthen76_taken $buffering 1
  //  file prog.linked.opt.aa, line 357
  // ifx_xelse_ifx_xthen76_taken
  // 			$volatile ifx_xthen76_ifx_xend78_taken := ifx_xthen76_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 358
  // ifx_xthen76_exec_guard
  // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
  //  file prog.linked.opt.aa, line 359
  // whilex_xbody_ifx_xthen_taken
  // 			kx_x1_928_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 360
  // kx_x1
  W_kx_x1_928_delayed_1_0_962_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_964_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_964_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_964_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_964_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile add49 := (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 361
  // (kx_x1_928_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
  // kx_x1_928_delayed_1_0
  // 			$volatile ifx_xthen_ifx_xend78_taken := ifx_xthen_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 362
  // ifx_xthen_exec_guard
  // 			ifx_xthen_ifx_xend78_taken_938_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 363
  // ifx_xthen_ifx_xend78_taken
  W_ifx_xthen_ifx_xend78_taken_938_delayed_3_0_975_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_977_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_977_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_977_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_977_Update/ack)
  // 			$volatile ifx_xend78_exec_guard := (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)) $buffering 1
  //  file prog.linked.opt.aa, line 364
  // (ifx_xelse_ifx_xend78_taken | (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken))
  // ifx_xelse_ifx_xend78_taken
  // (ifx_xthen_ifx_xend78_taken_938_delayed_3_0 | ifx_xthen76_ifx_xend78_taken)
  // ifx_xthen_ifx_xend78_taken_938_delayed_3_0
  // ifx_xthen76_ifx_xend78_taken
  // 			ifx_xthen_ifx_xend78_taken_944_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 365
  // ifx_xthen_ifx_xend78_taken
  W_ifx_xthen_ifx_xend78_taken_944_delayed_3_0_985_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_987_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_987_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_987_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_987_Update/ack)
  // 			type_cast_946_946_delayed_3_0 := ($bitcast ($uint<16>) add49 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 366
  // add49
  // ($bitcast ($uint<16>) add49 )
  type_cast_990_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_990_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_990_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_990_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_990_Update/ca)
  // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 367
  // ifx_xthen_ifx_xend78_taken_944_delayed_3_0
  // type_cast_946_946_delayed_3_0
  // ifx_xthen76_ifx_xend78_taken
  // ifx_xelse_ifx_xend78_taken
  // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend78_taken_944_delayed_3_0 type_cast_946_946_delayed_3_0  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend78_taken_962_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 368
  // ifx_xthen_ifx_xend78_taken
  W_ifx_xthen_ifx_xend78_taken_962_delayed_3_0_1009_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1011_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1011_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1011_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1011_Update/ack)
  // 			type_cast_964_964_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 369
  // ix_x2
  // ($bitcast ($uint<16>) ix_x2 )
  type_cast_1014_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1014_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1014_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1014_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1014_Update/ca)
  // 			type_cast_967_967_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 370
  // inc64x_xix_x2
  // ($bitcast ($uint<16>) inc64x_xix_x2 )
  type_cast_1018_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1018_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1018_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1018_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1018_Update/ca)
  // 			type_cast_970_970_delayed_1_0 := ($bitcast ($uint<16>) inc64x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 371
  // inc64x_xix_x2
  // ($bitcast ($uint<16>) inc64x_xix_x2 )
  type_cast_1022_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1022_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1022_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1022_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1022_Update/ca)
  // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 372
  // ifx_xthen_ifx_xend78_taken_962_delayed_3_0
  // type_cast_964_964_delayed_4_0
  // ifx_xthen76_ifx_xend78_taken
  // type_cast_967_967_delayed_1_0
  // ifx_xelse_ifx_xend78_taken
  // type_cast_970_970_delayed_1_0
  // ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend78_taken_962_delayed_3_0 type_cast_964_964_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_967_967_delayed_1_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_970_970_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend78_taken_978_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 373
  // ifx_xthen_ifx_xend78_taken
  W_ifx_xthen_ifx_xend78_taken_978_delayed_3_0_1037_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1039_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1039_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1039_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1039_Update/ack)
  // 			type_cast_980_980_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 374
  // jx_x1
  // ($bitcast ($uint<16>) jx_x1 )
  type_cast_1042_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1042_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1042_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1042_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1042_Update/ca)
  // 			type_cast_983_983_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 375
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_1046_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1046_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1046_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1046_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1046_Update/ca)
  // 			type_cast_986_986_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 376
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_1050_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1050_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1050_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1050_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1050_Update/ca)
  // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 377
  // ifx_xthen_ifx_xend78_taken_978_delayed_3_0
  // type_cast_980_980_delayed_4_0
  // ifx_xthen76_ifx_xend78_taken
  // type_cast_983_983_delayed_2_0
  // ifx_xelse_ifx_xend78_taken
  // type_cast_986_986_delayed_2_0
  // ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend78_taken_978_delayed_3_0 type_cast_980_980_delayed_4_0  ( $mux ifx_xthen76_ifx_xend78_taken type_cast_983_983_delayed_2_0  ( $mux ifx_xelse_ifx_xend78_taken type_cast_986_986_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend78_taken_994_delayed_3_0 := ifx_xthen_ifx_xend78_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 378
  // ifx_xthen_ifx_xend78_taken
  W_ifx_xthen_ifx_xend78_taken_994_delayed_3_0_1065_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1067_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1067_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1067_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1067_Update/ack)
  // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 379
  // ifx_xthen_ifx_xend78_taken_994_delayed_3_0
  // ifx_xthen76_ifx_xend78_taken
  // ifx_xelse_ifx_xend78_taken
  // ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend78_taken_994_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen76_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend78_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			$guard (ifx_xend78_exec_guard) conv82170 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 380
  // kx_x0
  // ($cast ($uint<32>) kx_x0 )
  type_cast_1090_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1090_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1090_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1090_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1090_Update/ca)
  // 			$guard (ifx_xend78_exec_guard) conv86 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 381
  // jx_x0
  // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
  type_cast_1096_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1096_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1096_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1096_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1096_Update/ca)
  // 			ifx_xend78_exec_guard_1023_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 382
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1023_delayed_1_0_1098_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1100_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1100_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1100_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1100_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1023_delayed_1_0) $volatile mul87 := (conv86 * conv33) $buffering 1
  //  file prog.linked.opt.aa, line 383
  // (conv86 * conv33)
  // conv86
  // conv33
  // 			$guard (ifx_xend78_exec_guard) conv92 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 384
  // ix_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
  type_cast_1111_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1111_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1111_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1111_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1111_Update/ca)
  // 			ifx_xend78_exec_guard_1035_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 385
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1035_delayed_1_0_1113_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1115_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1115_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1115_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1115_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1035_delayed_1_0) $volatile mul93 := (conv92 * conv90) $buffering 1
  //  file prog.linked.opt.aa, line 386
  // (conv92 * conv90)
  // conv92
  // conv90
  // 			ifx_xend78_exec_guard_1041_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 387
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1041_delayed_1_0_1122_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1124_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1124_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1124_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1124_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1041_delayed_1_0) $volatile add88 := (mul93 + conv82170) $buffering 1
  //  file prog.linked.opt.aa, line 388
  // (mul93 + conv82170)
  // mul93
  // conv82170
  // 			ifx_xend78_exec_guard_1047_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 389
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1047_delayed_1_0_1131_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1133_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1133_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1133_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1133_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1047_delayed_1_0) $volatile add94 := (add88 + mul87) $buffering 1
  //  file prog.linked.opt.aa, line 390
  // (add88 + mul87)
  // add88
  // mul87
  // 			ifx_xend78_exec_guard_1053_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 391
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1053_delayed_1_0_1140_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1142_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1142_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1142_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1142_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1053_delayed_1_0) conv95 := ($cast ($uint<16>) add94 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 392
  // add94
  // ($cast ($uint<16>) add94 )
  type_cast_1146_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1146_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1146_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1146_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1146_Update/ca)
  // 			ifx_xend78_exec_guard_1058_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 393
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1058_delayed_1_0_1148_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1150_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1150_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1150_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1150_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1058_delayed_1_0) $volatile sub := (conv86 - conv104) $buffering 1
  //  file prog.linked.opt.aa, line 394
  // (conv86 - conv104)
  // conv86
  // conv104
  // 			ifx_xend78_exec_guard_1064_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 395
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1064_delayed_1_0_1157_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1159_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1159_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1159_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1159_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1064_delayed_1_0) $volatile mul105 := (sub * conv27) $buffering 1
  //  file prog.linked.opt.aa, line 396
  // (sub * conv27)
  // sub
  // conv27
  // 			ifx_xend78_exec_guard_1070_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 397
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1070_delayed_1_0_1166_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1168_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1168_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1168_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1168_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1070_delayed_1_0) $volatile sub113 := (conv92 - conv104) $buffering 1
  //  file prog.linked.opt.aa, line 398
  // (conv92 - conv104)
  // conv92
  // conv104
  // 			ifx_xend78_exec_guard_1076_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 399
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1076_delayed_1_0_1175_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1177_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1177_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1177_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1177_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1076_delayed_1_0) $volatile mul114 := (sub113 * conv108) $buffering 1
  //  file prog.linked.opt.aa, line 400
  // (sub113 * conv108)
  // sub113
  // conv108
  // 			ifx_xend78_exec_guard_1082_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 401
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1082_delayed_1_0_1184_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1186_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1186_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1186_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1186_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1082_delayed_1_0) $volatile add106 := (mul114 + conv82170) $buffering 1
  //  file prog.linked.opt.aa, line 402
  // (mul114 + conv82170)
  // mul114
  // conv82170
  // 			ifx_xend78_exec_guard_1088_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 403
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1088_delayed_1_0_1193_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1195_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1195_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1195_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1195_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1088_delayed_1_0) $volatile add115 := (add106 + mul105) $buffering 1
  //  file prog.linked.opt.aa, line 404
  // (add106 + mul105)
  // add106
  // mul105
  // 			ifx_xend78_exec_guard_1094_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 405
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1094_delayed_1_0_1202_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1204_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1204_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1204_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1204_Update/ack)
  // 			type_cast_1099_1099_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 406
  // conv104
  // ($bitcast ($int<32>) conv104 )
  type_cast_1207_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1207_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1207_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1207_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1207_Update/ca)
  // 			$guard (ifx_xend78_exec_guard_1094_delayed_1_0) $volatile cmp121 := (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 407
  // (($bitcast ($int<32>) conv92 ) < type_cast_1099_1099_delayed_1_0)
  // conv92
  // type_cast_1099_1099_delayed_1_0
  // 			ifx_xend78_exec_guard_1102_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 408
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1102_delayed_1_0_1216_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1218_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1218_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1218_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1218_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1102_delayed_1_0) $volatile cmp121x_xnot := (cmp121 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 409
  // (cmp121 ^ ($bitcast ($uint<1>) _b1  ))
  // cmp121
  // 			ifx_xend78_exec_guard_1109_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 410
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1109_delayed_1_0_1226_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1228_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1228_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1228_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1228_Update/ack)
  // 			type_cast_1114_1114_delayed_1_0 := ($bitcast ($int<32>) add130 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 411
  // add130
  // ($bitcast ($int<32>) add130 )
  type_cast_1231_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1231_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1231_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1231_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1231_Update/ca)
  // 			$guard (ifx_xend78_exec_guard_1109_delayed_1_0) $volatile cmp131 := (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 412
  // (($bitcast ($int<32>) conv92 ) < type_cast_1114_1114_delayed_1_0)
  // conv92
  // type_cast_1114_1114_delayed_1_0
  // 			ifx_xend78_exec_guard_1117_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 413
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1117_delayed_1_0_1240_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1242_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1242_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1242_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1242_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1117_delayed_1_0) $volatile orx_xcond := (cmp121x_xnot & cmp131) $buffering 1
  //  file prog.linked.opt.aa, line 414
  // (cmp121x_xnot & cmp131)
  // cmp121x_xnot
  // cmp131
  // 			ifx_xend78_exec_guard_1123_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 415
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1123_delayed_1_0_1249_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1251_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1251_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1251_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1251_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1123_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 416
  // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond
  // 			ifx_xend78_exec_guard_1130_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 417
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1130_delayed_1_0_1259_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1261_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1261_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1261_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1261_Update/ack)
  // 			type_cast_1135_1135_delayed_1_0 := ($bitcast ($int<32>) conv104 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 418
  // conv104
  // ($bitcast ($int<32>) conv104 )
  type_cast_1264_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1264_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1264_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1264_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1264_Update/ca)
  // 			$guard (ifx_xend78_exec_guard_1130_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 419
  // (($bitcast ($int<32>) conv86 ) < type_cast_1135_1135_delayed_1_0)
  // conv86
  // type_cast_1135_1135_delayed_1_0
  // 			ifx_xend78_exec_guard_1138_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 420
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1138_delayed_1_0_1273_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1275_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1275_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1275_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1275_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1138_delayed_1_0) $volatile orx_xcond175 := (orx_xcondx_xnot | cmp138) $buffering 1
  //  file prog.linked.opt.aa, line 421
  // (orx_xcondx_xnot | cmp138)
  // orx_xcondx_xnot
  // cmp138
  // 			ifx_xend78_exec_guard_1144_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 422
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1144_delayed_1_0_1282_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1284_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1284_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1284_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1284_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1144_delayed_1_0) $volatile orx_xcond175x_xnot := (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 423
  // (orx_xcond175 ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond175
  // 			ifx_xend78_exec_guard_1151_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 424
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1151_delayed_1_0_1292_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1294_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1294_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1294_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1294_Update/ack)
  // 			type_cast_1156_1156_delayed_1_0 := ($bitcast ($int<32>) add148 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 425
  // add148
  // ($bitcast ($int<32>) add148 )
  type_cast_1297_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1297_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1297_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1297_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1297_Update/ca)
  // 			$guard (ifx_xend78_exec_guard_1151_delayed_1_0) $volatile cmp149 := (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 426
  // (($bitcast ($int<32>) conv86 ) < type_cast_1156_1156_delayed_1_0)
  // conv86
  // type_cast_1156_1156_delayed_1_0
  // 			ifx_xend78_exec_guard_1159_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 427
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1159_delayed_1_0_1306_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1308_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1308_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1308_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1308_Update/ack)
  // 			$guard (ifx_xend78_exec_guard_1159_delayed_1_0) $volatile orx_xcond176 := (orx_xcond175x_xnot & cmp149) $buffering 1
  //  file prog.linked.opt.aa, line 428
  // (orx_xcond175x_xnot & cmp149)
  // orx_xcond175x_xnot
  // cmp149
  // 			ifx_xend78_exec_guard_1166_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 429
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1166_delayed_1_0_1315_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1317_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1317_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1317_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1317_Update/ack)
  // 			$volatile ifx_xend78_ifx_xelse154_taken := (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176) $buffering 1
  //  file prog.linked.opt.aa, line 430
  // (ifx_xend78_exec_guard_1166_delayed_1_0 & orx_xcond176)
  // ifx_xend78_exec_guard_1166_delayed_1_0
  // orx_xcond176
  // 			ifx_xend78_exec_guard_1171_delayed_1_0 := ifx_xend78_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 431
  // ifx_xend78_exec_guard
  W_ifx_xend78_exec_guard_1171_delayed_1_0_1323_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1325_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1325_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1325_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1325_Update/ack)
  // 			$volatile ifx_xend78_ifx_xthen151_taken := (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 )) $buffering 1
  //  file prog.linked.opt.aa, line 432
  // (ifx_xend78_exec_guard_1171_delayed_1_0 & ( ~ orx_xcond176 ))
  // ifx_xend78_exec_guard_1171_delayed_1_0
  // orx_xcond176
  // 			$volatile ifx_xthen151_exec_guard := ifx_xend78_ifx_xthen151_taken $buffering 1
  //  file prog.linked.opt.aa, line 433
  // ifx_xend78_ifx_xthen151_taken
  // 			ifx_xthen151_exec_guard_1179_delayed_1_0 := ifx_xthen151_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 434
  // ifx_xthen151_exec_guard
  W_ifx_xthen151_exec_guard_1179_delayed_1_0_1335_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1337_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1337_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1337_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1337_Update/ack)
  // 			$guard (ifx_xthen151_exec_guard_1179_delayed_1_0) conv153 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 435
  // conv95
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
  type_cast_1342_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1342_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1342_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1342_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1342_Update/ca)
  // 			ifx_xthen151_exec_guard_1185_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 436
  // ifx_xthen151_exec_guard
  W_ifx_xthen151_exec_guard_1185_delayed_2_0_1344_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1346_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1346_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1346_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1346_Update/ack)
  // 			$guard (ifx_xthen151_exec_guard_1185_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 437
  // (($bitcast ($int<32>) conv153 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv153
  // 			ifx_xthen151_exec_guard_1195_delayed_2_0 := ifx_xthen151_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 438
  // ifx_xthen151_exec_guard
  W_ifx_xthen151_exec_guard_1195_delayed_2_0_1357_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1359_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1359_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1359_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1359_Update/ack)
  // 			$guard (ifx_xthen151_exec_guard_1195_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 439
  // shr
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
  type_cast_1364_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1364_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1364_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1364_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1364_Update/ca)
  // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 440
  // idxprom
  array_obj_ref_1370_index_1_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_index_resize_1/index_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_index_resize_1/index_resize_ack)
  array_obj_ref_1370_index_1_rename <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_index_scale_1/scale_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_index_scale_1/scale_rename_ack)
  array_obj_ref_1370_index_offset <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_final_index_sum_regn_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_final_index_sum_regn_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_final_index_sum_regn_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_final_index_sum_regn_Update/ack)
  array_obj_ref_1370_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1370_base_plus_offset/sum_rename_ack)
  addr_of_1371_final_reg <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1371_request/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1371_complete/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1371_request/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1371_complete/ack)
  // 			$guard (ifx_xthen151_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 441
  // arrayidx
  ptr_deref_1375_base_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_base_addr_resize/base_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_base_addr_resize/base_resize_ack)
  ptr_deref_1375_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_base_plus_offset/sum_rename_ack)
  ptr_deref_1375_addr_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_word_addrgen/root_register_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_word_addrgen/root_register_ack)
  ptr_deref_1375_gather_scatter <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Sample/ptr_deref_1375_Split/split_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Sample/ptr_deref_1375_Split/split_ack)
  ptr_deref_1375_store_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Sample/word_access_start/word_0/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Update/word_access_complete/word_0/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Sample/word_access_start/word_0/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1375_Update/word_access_complete/word_0/ca)
  // 			$volatile ifx_xelse154_exec_guard := ifx_xend78_ifx_xelse154_taken $buffering 1
  //  file prog.linked.opt.aa, line 442
  // ifx_xend78_ifx_xelse154_taken
  // 			$guard (ifx_xelse154_exec_guard) $volatile sext173 := (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 443
  // (add115 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // add115
  // 			$guard (ifx_xelse154_exec_guard) $volatile shr157 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 444
  // (($bitcast ($int<32>) sext173 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
  // sext173
  // 			$guard (ifx_xelse154_exec_guard) idxprom158 := ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 445
  // shr157
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr157 ) )
  type_cast_1403_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1403_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1403_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1403_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1403_Update/ca)
  // 			arrayidx159 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom158]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 446
  // idxprom158
  array_obj_ref_1409_index_1_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_index_resize_1/index_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_index_resize_1/index_resize_ack)
  array_obj_ref_1409_index_1_rename <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_index_scale_1/scale_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_index_scale_1/scale_rename_ack)
  array_obj_ref_1409_index_offset <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_final_index_sum_regn_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_final_index_sum_regn_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_final_index_sum_regn_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_final_index_sum_regn_Update/ack)
  array_obj_ref_1409_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1409_base_plus_offset/sum_rename_ack)
  addr_of_1410_final_reg <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1410_request/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1410_complete/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1410_request/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1410_complete/ack)
  // 			ifx_xelse154_exec_guard_1247_delayed_8_0 := ifx_xelse154_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 447
  // ifx_xelse154_exec_guard
  W_ifx_xelse154_exec_guard_1247_delayed_8_0_1412_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1414_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1414_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1414_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1414_Update/ack)
  // 			$guard (ifx_xelse154_exec_guard_1247_delayed_8_0) tmp160 := ->(arrayidx159) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 448
  // arrayidx159
  ptr_deref_1418_base_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_base_addr_resize/base_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_base_addr_resize/base_resize_ack)
  ptr_deref_1418_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_base_plus_offset/sum_rename_ack)
  ptr_deref_1418_addr_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_word_addrgen/root_register_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_word_addrgen/root_register_ack)
  ptr_deref_1418_gather_scatter <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Update/ptr_deref_1418_Merge/merge_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Update/ptr_deref_1418_Merge/merge_ack)
  ptr_deref_1418_load_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Sample/word_access_start/word_0/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Update/word_access_complete/word_0/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Sample/word_access_start/word_0/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1418_Update/word_access_complete/word_0/ca)
  // 			ifx_xelse154_exec_guard_1252_delayed_1_0 := ifx_xelse154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 449
  // ifx_xelse154_exec_guard
  W_ifx_xelse154_exec_guard_1252_delayed_1_0_1420_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1422_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1422_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1422_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1422_Update/ack)
  // 			$guard (ifx_xelse154_exec_guard_1252_delayed_1_0) conv162 := ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 450
  // conv95
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv95 ) )
  type_cast_1427_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1427_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1427_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1427_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1427_Update/ca)
  // 			ifx_xelse154_exec_guard_1258_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 451
  // ifx_xelse154_exec_guard
  W_ifx_xelse154_exec_guard_1258_delayed_2_0_1429_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1431_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1431_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1431_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1431_Update/ack)
  // 			$guard (ifx_xelse154_exec_guard_1258_delayed_2_0) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 452
  // (($bitcast ($int<32>) conv162 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv162
  // 			ifx_xelse154_exec_guard_1268_delayed_2_0 := ifx_xelse154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 453
  // ifx_xelse154_exec_guard
  W_ifx_xelse154_exec_guard_1268_delayed_2_0_1442_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1444_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1444_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1444_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1444_Update/ack)
  // 			$guard (ifx_xelse154_exec_guard_1268_delayed_2_0) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 454
  // shr163
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
  type_cast_1449_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1449_Sample/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1449_Update/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1449_Sample/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/type_cast_1449_Update/ca)
  // 			arrayidx165 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 455
  // idxprom164
  array_obj_ref_1455_index_1_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_index_resize_1/index_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_index_resize_1/index_resize_ack)
  array_obj_ref_1455_index_1_rename <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_index_scale_1/scale_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_index_scale_1/scale_rename_ack)
  array_obj_ref_1455_index_offset <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_final_index_sum_regn_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_final_index_sum_regn_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_final_index_sum_regn_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_final_index_sum_regn_Update/ack)
  array_obj_ref_1455_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/array_obj_ref_1455_base_plus_offset/sum_rename_ack)
  addr_of_1456_final_reg <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1456_request/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1456_complete/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1456_request/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/addr_of_1456_complete/ack)
  // 			ifx_xelse154_exec_guard_1281_delayed_14_0 := ifx_xelse154_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
  //  file prog.linked.opt.aa, line 456
  // ifx_xelse154_exec_guard
  W_ifx_xelse154_exec_guard_1281_delayed_14_0_1458_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1460_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1460_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1460_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1460_Update/ack)
  // 			arrayidx165_1282_delayed_4_0 := arrayidx165 $buffering 4 $cut_through // bits of buffering = 128. 
  //  file prog.linked.opt.aa, line 457
  // arrayidx165
  W_arrayidx165_1282_delayed_4_0_1461_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1463_Sample/req branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1463_Update/req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1463_Sample/ack branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/assign_stmt_1463_Update/ack)
  // 			$guard (ifx_xelse154_exec_guard_1281_delayed_14_0) ->(arrayidx165_1282_delayed_4_0) := tmp160 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 458
  // tmp160
  // arrayidx165_1282_delayed_4_0
  ptr_deref_1466_base_resize <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_base_addr_resize/base_resize_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_base_addr_resize/base_resize_ack)
  ptr_deref_1466_root_address_inst <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_base_plus_offset/sum_rename_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_base_plus_offset/sum_rename_ack)
  ptr_deref_1466_addr_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_word_addrgen/root_register_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_word_addrgen/root_register_ack)
  ptr_deref_1466_gather_scatter <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Sample/ptr_deref_1466_Split/split_req) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Sample/ptr_deref_1466_Split/split_ack)
  ptr_deref_1466_store_0 <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Sample/word_access_start/word_0/rr branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Update/word_access_complete/word_0/cr) (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Sample/word_access_start/word_0/ra branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/ptr_deref_1466_Update/word_access_complete/word_0/ca)
  // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 459
  // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // flagx_x0
  // 			$volatile ifx_xend166_whilex_xend_taken := ( ~ tobool ) $buffering 1
  //  file prog.linked.opt.aa, line 460
  // tobool
  // tobool
  do_while_stmt_810_branch <=> (branch_block_stmt_666/do_while_stmt_810/do_while_stmt_810_loop_body/condition_evaluated) (branch_block_stmt_666/do_while_stmt_810/loop_exit/ack branch_block_stmt_666/do_while_stmt_810/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 118164344
  if_stmt_1481_branch <=> (branch_block_stmt_666/if_stmt_1481_eval_test/branch_req) (branch_block_stmt_666/if_stmt_1481_else_link/else_choice_transition branch_block_stmt_666/if_stmt_1481_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 465
  // 		Block0_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 468
  // Block0_complete
  WPIPE_Block0_complete_1487_inst <=> (branch_block_stmt_666/assign_stmt_1490/WPIPE_Block0_complete_1487_Sample/req branch_block_stmt_666/assign_stmt_1490/WPIPE_Block0_complete_1487_Update/req) (branch_block_stmt_666/assign_stmt_1490/WPIPE_Block0_complete_1487_Sample/ack branch_block_stmt_666/assign_stmt_1490/WPIPE_Block0_complete_1487_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 470
}
$module [zeropad3D_B] 
{
  // pipe-declarations for block %zeropad3D_B
  //  file prog.linked.opt.aa, line 474
  // pipe-declarations for block %zeropad3D_B%body
  //  file prog.linked.opt.aa, line 479
  // pipe-declarations for block %zeropad3D_B%body%
  //  file prog.linked.opt.aa, line 510
  // pipe-declarations for block %zeropad3D_B%body%
  //  file prog.linked.opt.aa, line 664
  // pipe-declarations for block %zeropad3D_B%body%
  //  file prog.linked.opt.aa, line 669
  // memory-space 0 is written into.
  // memory-space 0 is read from.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1496] // Branch Block  file prog.linked.opt.aa, line 479
    {
      $P [branch_block_stmt_1496__entry__]
      branch_block_stmt_1496__entry__ <-| ($entry)
      $P [branch_block_stmt_1496__exit__]
      branch_block_stmt_1496__exit__ |-> ($exit)
      $P [assign_stmt_1499_to_assign_stmt_1517__entry__] 
      $P [assign_stmt_1499_to_assign_stmt_1517__exit__] 
      $P [assign_stmt_1522_to_assign_stmt_1624__entry__] 
      $P [assign_stmt_1522_to_assign_stmt_1624__exit__] 
      $P [entry_whilex_xbody]
      $P [merge_stmt_1626__exit__] 
      $P [do_while_stmt_1642__entry__] 
      $P [do_while_stmt_1642__exit__] 
      $P [if_stmt_2312__entry__] 
      $P [if_stmt_2312__exit__] 
      $P [merge_stmt_2316__entry__] 
      $P [merge_stmt_2316__exit__] 
      $P [assign_stmt_2321__entry__] 
      $P [assign_stmt_2321__exit__] 
      $P [return__]
      $P [merge_stmt_2323__exit__] 
      ::[assign_stmt_1499_to_assign_stmt_1517] 
      {
        // start:  		call := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 481
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1498_sample_start_] 
        $T[RPIPE_Block1_starting_1498_sample_completed_] 
        $T[RPIPE_Block1_starting_1498_update_start_] 
        $T[RPIPE_Block1_starting_1498_update_completed_] 
        ;;[RPIPE_Block1_starting_1498_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1498_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1498_sample_start_ &-> (RPIPE_Block1_starting_1498_Sample)
        RPIPE_Block1_starting_1498_sample_completed_ <-& (RPIPE_Block1_starting_1498_Sample)
        RPIPE_Block1_starting_1498_update_start_ <-& (RPIPE_Block1_starting_1498_sample_completed_)
        RPIPE_Block1_starting_1498_update_start_ &-> (RPIPE_Block1_starting_1498_Update)
        RPIPE_Block1_starting_1498_update_completed_ <-& (RPIPE_Block1_starting_1498_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call1 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 482
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1501_sample_start_] 
        $T[RPIPE_Block1_starting_1501_sample_completed_] 
        $T[RPIPE_Block1_starting_1501_update_start_] 
        $T[RPIPE_Block1_starting_1501_update_completed_] 
        ;;[RPIPE_Block1_starting_1501_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1501_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1501_sample_start_ &-> (RPIPE_Block1_starting_1501_Sample)
        RPIPE_Block1_starting_1501_sample_completed_ <-& (RPIPE_Block1_starting_1501_Sample)
        RPIPE_Block1_starting_1501_update_start_ <-& (RPIPE_Block1_starting_1501_sample_completed_)
        RPIPE_Block1_starting_1501_update_start_ &-> (RPIPE_Block1_starting_1501_Update)
        RPIPE_Block1_starting_1501_update_completed_ <-& (RPIPE_Block1_starting_1501_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call2 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 483
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1504_sample_start_] 
        $T[RPIPE_Block1_starting_1504_sample_completed_] 
        $T[RPIPE_Block1_starting_1504_update_start_] 
        $T[RPIPE_Block1_starting_1504_update_completed_] 
        ;;[RPIPE_Block1_starting_1504_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1504_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1504_sample_start_ &-> (RPIPE_Block1_starting_1504_Sample)
        RPIPE_Block1_starting_1504_sample_completed_ <-& (RPIPE_Block1_starting_1504_Sample)
        RPIPE_Block1_starting_1504_update_start_ <-& (RPIPE_Block1_starting_1504_sample_completed_)
        RPIPE_Block1_starting_1504_update_start_ &-> (RPIPE_Block1_starting_1504_Update)
        RPIPE_Block1_starting_1504_update_completed_ <-& (RPIPE_Block1_starting_1504_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call3 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 484
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1507_sample_start_] 
        $T[RPIPE_Block1_starting_1507_sample_completed_] 
        $T[RPIPE_Block1_starting_1507_update_start_] 
        $T[RPIPE_Block1_starting_1507_update_completed_] 
        ;;[RPIPE_Block1_starting_1507_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1507_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1507_sample_start_ &-> (RPIPE_Block1_starting_1507_Sample)
        RPIPE_Block1_starting_1507_sample_completed_ <-& (RPIPE_Block1_starting_1507_Sample)
        RPIPE_Block1_starting_1507_update_start_ <-& (RPIPE_Block1_starting_1507_sample_completed_)
        RPIPE_Block1_starting_1507_update_start_ &-> (RPIPE_Block1_starting_1507_Update)
        RPIPE_Block1_starting_1507_update_completed_ <-& (RPIPE_Block1_starting_1507_Update)
        // Target expression
        // (as target) call3
        // start: WAR dependencies for call3
        // done: WAR dependencies for call3
        // end:  		call3 := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call4 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 485
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1510_sample_start_] 
        $T[RPIPE_Block1_starting_1510_sample_completed_] 
        $T[RPIPE_Block1_starting_1510_update_start_] 
        $T[RPIPE_Block1_starting_1510_update_completed_] 
        ;;[RPIPE_Block1_starting_1510_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1510_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1510_sample_start_ &-> (RPIPE_Block1_starting_1510_Sample)
        RPIPE_Block1_starting_1510_sample_completed_ <-& (RPIPE_Block1_starting_1510_Sample)
        RPIPE_Block1_starting_1510_update_start_ <-& (RPIPE_Block1_starting_1510_sample_completed_)
        RPIPE_Block1_starting_1510_update_start_ &-> (RPIPE_Block1_starting_1510_Update)
        RPIPE_Block1_starting_1510_update_completed_ <-& (RPIPE_Block1_starting_1510_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call5 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 486
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1513_sample_start_] 
        $T[RPIPE_Block1_starting_1513_sample_completed_] 
        $T[RPIPE_Block1_starting_1513_update_start_] 
        $T[RPIPE_Block1_starting_1513_update_completed_] 
        ;;[RPIPE_Block1_starting_1513_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1513_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1513_sample_start_ &-> (RPIPE_Block1_starting_1513_Sample)
        RPIPE_Block1_starting_1513_sample_completed_ <-& (RPIPE_Block1_starting_1513_Sample)
        RPIPE_Block1_starting_1513_update_start_ <-& (RPIPE_Block1_starting_1513_sample_completed_)
        RPIPE_Block1_starting_1513_update_start_ &-> (RPIPE_Block1_starting_1513_Update)
        RPIPE_Block1_starting_1513_update_completed_ <-& (RPIPE_Block1_starting_1513_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := Block1_starting $buffering 1// bits of buffering = 8. 
        // start:  		call6 := Block1_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 487
        // Source expression
        // Block1_starting
        $T[RPIPE_Block1_starting_1516_sample_start_] 
        $T[RPIPE_Block1_starting_1516_sample_completed_] 
        $T[RPIPE_Block1_starting_1516_update_start_] 
        $T[RPIPE_Block1_starting_1516_update_completed_] 
        ;;[RPIPE_Block1_starting_1516_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block1_starting_1516_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block1_starting_1516_sample_start_ &-> (RPIPE_Block1_starting_1516_Sample)
        RPIPE_Block1_starting_1516_sample_completed_ <-& (RPIPE_Block1_starting_1516_Sample)
        RPIPE_Block1_starting_1516_update_start_ <-& (RPIPE_Block1_starting_1516_sample_completed_)
        RPIPE_Block1_starting_1516_update_start_ &-> (RPIPE_Block1_starting_1516_Update)
        RPIPE_Block1_starting_1516_update_completed_ <-& (RPIPE_Block1_starting_1516_Update)
        // Target expression
        // (as target) call6
        // start: WAR dependencies for call6
        // done: WAR dependencies for call6
        // end:  		call6 := Block1_starting $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block1_starting
        // read-dependencies for pipe Block1_starting
        RPIPE_Block1_starting_1501_sample_start_ <-& (RPIPE_Block1_starting_1498_update_completed_)
        RPIPE_Block1_starting_1504_sample_start_ <-& (RPIPE_Block1_starting_1501_update_completed_)
        RPIPE_Block1_starting_1507_sample_start_ <-& (RPIPE_Block1_starting_1504_update_completed_)
        RPIPE_Block1_starting_1510_sample_start_ <-& (RPIPE_Block1_starting_1507_update_completed_)
        RPIPE_Block1_starting_1513_sample_start_ <-& (RPIPE_Block1_starting_1510_update_completed_)
        RPIPE_Block1_starting_1516_sample_start_ <-& (RPIPE_Block1_starting_1513_update_completed_)
        // write-dependencies for pipe Block1_starting
        // signal write dependencies for Block1_starting
      }
      assign_stmt_1499_to_assign_stmt_1517__entry__ |-> (assign_stmt_1499_to_assign_stmt_1517)
      assign_stmt_1499_to_assign_stmt_1517__exit__ <-| (assign_stmt_1499_to_assign_stmt_1517)
      ::[assign_stmt_1522_to_assign_stmt_1624] 
      {
        // start:  		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
        //  file prog.linked.opt.aa, line 489
        // Source expression
        // ($cast ($uint<16>) call1 )
        $T[type_cast_1521_sample_start_] 
        $T[type_cast_1521_sample_completed_] 
        $T[type_cast_1521_update_start_] 
        $T[type_cast_1521_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_1521_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_1521_sample_start_
        ;;[type_cast_1521_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1521_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1521_sample_start_ &-> (type_cast_1521_Sample)
        type_cast_1521_sample_completed_ <-& (type_cast_1521_Sample)
        type_cast_1521_sample_completed_ &-> ($null)
        type_cast_1521_update_start_ &-> (type_cast_1521_Update)
        type_cast_1521_update_completed_ <-& (type_cast_1521_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // start:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 490
        // volatile! 
        // Source expression
        // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
        // conv
        // Target expression
        // (as target) div
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // end:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        // start:  		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 491
        // Source expression
        // ($cast ($uint<32>) call2 )
        $T[type_cast_1531_sample_start_] 
        $T[type_cast_1531_sample_completed_] 
        $T[type_cast_1531_update_start_] 
        $T[type_cast_1531_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_1531_sample_start_
        // done: Forward dependencies from call2 to transition type_cast_1531_sample_start_
        ;;[type_cast_1531_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1531_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1531_sample_start_ &-> (type_cast_1531_Sample)
        type_cast_1531_sample_completed_ <-& (type_cast_1531_Sample)
        type_cast_1531_sample_completed_ &-> ($null)
        type_cast_1531_update_start_ &-> (type_cast_1531_Update)
        type_cast_1531_update_completed_ <-& (type_cast_1531_Update)
        // Target expression
        // (as target) conv32
        // start: WAR dependencies for conv32
        // done: WAR dependencies for conv32
        // end:  		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 492
        // Source expression
        // ($cast ($uint<32>) call1 )
        $T[type_cast_1535_sample_start_] 
        $T[type_cast_1535_sample_completed_] 
        $T[type_cast_1535_update_start_] 
        $T[type_cast_1535_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_1535_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_1535_sample_start_
        ;;[type_cast_1535_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1535_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1535_sample_start_ &-> (type_cast_1535_Sample)
        type_cast_1535_sample_completed_ <-& (type_cast_1535_Sample)
        type_cast_1535_sample_completed_ &-> ($null)
        type_cast_1535_update_start_ &-> (type_cast_1535_Update)
        type_cast_1535_update_completed_ <-& (type_cast_1535_Update)
        // Target expression
        // (as target) conv34
        // start: WAR dependencies for conv34
        // done: WAR dependencies for conv34
        // end:  		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 493
        // Source expression
        // ($cast ($uint<32>) call5 )
        $T[type_cast_1539_sample_start_] 
        $T[type_cast_1539_sample_completed_] 
        $T[type_cast_1539_update_start_] 
        $T[type_cast_1539_update_completed_] 
        // call5
        // start: Forward dependencies from call5 to transition type_cast_1539_sample_start_
        // done: Forward dependencies from call5 to transition type_cast_1539_sample_start_
        ;;[type_cast_1539_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1539_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1539_sample_start_ &-> (type_cast_1539_Sample)
        type_cast_1539_sample_completed_ <-& (type_cast_1539_Sample)
        type_cast_1539_sample_completed_ &-> ($null)
        type_cast_1539_update_start_ &-> (type_cast_1539_Update)
        type_cast_1539_update_completed_ <-& (type_cast_1539_Update)
        // Target expression
        // (as target) conv38
        // start: WAR dependencies for conv38
        // done: WAR dependencies for conv38
        // end:  		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 494
        // Source expression
        // ($cast ($uint<32>) call4 )
        $T[type_cast_1543_sample_start_] 
        $T[type_cast_1543_sample_completed_] 
        $T[type_cast_1543_update_start_] 
        $T[type_cast_1543_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_1543_sample_start_
        // done: Forward dependencies from call4 to transition type_cast_1543_sample_start_
        ;;[type_cast_1543_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1543_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1543_sample_start_ &-> (type_cast_1543_Sample)
        type_cast_1543_sample_completed_ <-& (type_cast_1543_Sample)
        type_cast_1543_sample_completed_ &-> ($null)
        type_cast_1543_update_start_ &-> (type_cast_1543_Update)
        type_cast_1543_update_completed_ <-& (type_cast_1543_Update)
        // Target expression
        // (as target) conv40
        // start: WAR dependencies for conv40
        // done: WAR dependencies for conv40
        // end:  		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul41
        // done: WAR dependencies for mul41
        // start:  		$volatile mul41 := (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 495
        // volatile! 
        // Source expression
        // (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv40
        // Target expression
        // (as target) mul41
        // start: WAR dependencies for mul41
        // done: WAR dependencies for mul41
        // end:  		$volatile mul41 := (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // start:  		$volatile sext := (mul41 * conv38) $buffering 1
        //  file prog.linked.opt.aa, line 496
        // volatile! 
        // Source expression
        // (mul41 * conv38)
        // mul41
        // conv38
        // Target expression
        // (as target) sext
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // end:  		$volatile sext := (mul41 * conv38) $buffering 1
        // start: WAR dependencies for conv95
        // done: WAR dependencies for conv95
        // start:  		$volatile conv95 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 497
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext )
        // sext
        // Target expression
        // (as target) conv95
        // start: WAR dependencies for conv95
        // done: WAR dependencies for conv95
        // end:  		$volatile conv95 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 498
        // Source expression
        // ($cast ($uint<32>) call6 )
        $T[type_cast_1567_sample_start_] 
        $T[type_cast_1567_sample_completed_] 
        $T[type_cast_1567_update_start_] 
        $T[type_cast_1567_update_completed_] 
        // call6
        // start: Forward dependencies from call6 to transition type_cast_1567_sample_start_
        // done: Forward dependencies from call6 to transition type_cast_1567_sample_start_
        ;;[type_cast_1567_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1567_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1567_sample_start_ &-> (type_cast_1567_Sample)
        type_cast_1567_sample_completed_ <-& (type_cast_1567_Sample)
        type_cast_1567_sample_completed_ &-> ($null)
        type_cast_1567_update_start_ &-> (type_cast_1567_Update)
        type_cast_1567_update_completed_ <-& (type_cast_1567_Update)
        // Target expression
        // (as target) conv109
        // start: WAR dependencies for conv109
        // done: WAR dependencies for conv109
        // end:  		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 499
        // volatile! 
        // Source expression
        // (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv34
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext175
        // done: WAR dependencies for sext175
        // start:  		$volatile sext175 := (mul * conv32) $buffering 1
        //  file prog.linked.opt.aa, line 500
        // volatile! 
        // Source expression
        // (mul * conv32)
        // mul
        // conv32
        // Target expression
        // (as target) sext175
        // start: WAR dependencies for sext175
        // done: WAR dependencies for sext175
        // end:  		$volatile sext175 := (mul * conv32) $buffering 1
        // start: WAR dependencies for conv113
        // done: WAR dependencies for conv113
        // start:  		$volatile conv113 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 501
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext175 )
        // sext175
        // Target expression
        // (as target) conv113
        // start: WAR dependencies for conv113
        // done: WAR dependencies for conv113
        // end:  		$volatile conv113 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 502
        // Source expression
        // ($cast ($uint<32>) call )
        $T[type_cast_1591_sample_start_] 
        $T[type_cast_1591_sample_completed_] 
        $T[type_cast_1591_update_start_] 
        $T[type_cast_1591_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_1591_sample_start_
        // done: Forward dependencies from call to transition type_cast_1591_sample_start_
        ;;[type_cast_1591_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1591_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1591_sample_start_ &-> (type_cast_1591_Sample)
        type_cast_1591_sample_completed_ <-& (type_cast_1591_Sample)
        type_cast_1591_sample_completed_ &-> ($null)
        type_cast_1591_update_start_ &-> (type_cast_1591_Update)
        type_cast_1591_update_completed_ <-& (type_cast_1591_Update)
        // Target expression
        // (as target) conv131
        // start: WAR dependencies for conv131
        // done: WAR dependencies for conv131
        // end:  		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for div132
        // done: WAR dependencies for div132
        // start:  		$volatile div132 := (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 503
        // volatile! 
        // Source expression
        // (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv131
        // Target expression
        // (as target) div132
        // start: WAR dependencies for div132
        // done: WAR dependencies for div132
        // end:  		$volatile div132 := (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add135
        // done: WAR dependencies for add135
        // start:  		$volatile add135 := (conv109 + div132) $buffering 1
        //  file prog.linked.opt.aa, line 504
        // volatile! 
        // Source expression
        // (conv109 + div132)
        // conv109
        // div132
        // Target expression
        // (as target) add135
        // start: WAR dependencies for add135
        // done: WAR dependencies for add135
        // end:  		$volatile add135 := (conv109 + div132) $buffering 1
        // start: WAR dependencies for add152
        // done: WAR dependencies for add152
        // start:  		$volatile add152 := (conv109 + conv34) $buffering 1
        //  file prog.linked.opt.aa, line 505
        // volatile! 
        // Source expression
        // (conv109 + conv34)
        // conv109
        // conv34
        // Target expression
        // (as target) add152
        // start: WAR dependencies for add152
        // done: WAR dependencies for add152
        // end:  		$volatile add152 := (conv109 + conv34) $buffering 1
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 506
        // volatile! 
        // Source expression
        // (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv109
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add63
        // done: WAR dependencies for add63
        // start:  		$volatile add63 := (shl + conv34) $buffering 1
        //  file prog.linked.opt.aa, line 507
        // volatile! 
        // Source expression
        // (shl + conv34)
        // shl
        // conv34
        // Target expression
        // (as target) add63
        // start: WAR dependencies for add63
        // done: WAR dependencies for add63
        // end:  		$volatile add63 := (shl + conv34) $buffering 1
        // start: WAR dependencies for add78
        // done: WAR dependencies for add78
        // start:  		$volatile add78 := (shl + div132) $buffering 1
        //  file prog.linked.opt.aa, line 508
        // volatile! 
        // Source expression
        // (shl + div132)
        // shl
        // div132
        // Target expression
        // (as target) add78
        // start: WAR dependencies for add78
        // done: WAR dependencies for add78
        // end:  		$volatile add78 := (shl + div132) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1522_to_assign_stmt_1624__entry__ |-> (assign_stmt_1522_to_assign_stmt_1624)
      assign_stmt_1522_to_assign_stmt_1624__exit__ <-| (assign_stmt_1522_to_assign_stmt_1624)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 518
      <o> [do_while_stmt_1642]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_1642__entry__] 
        $P[do_while_stmt_1642__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1642_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1644
          // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_1644_sample_start_] 
          $T[phi_stmt_1644_sample_completed_] 
          $T[phi_stmt_1644_update_start_] 
          $T[phi_stmt_1644_update_completed_] 
          $T[phi_stmt_1644_sample_start__ps] 
          phi_stmt_1644_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1644_sample_completed__ps] 
          phi_stmt_1644_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1644_update_start__ps] 
          phi_stmt_1644_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1644_update_completed__ps] 
          phi_stmt_1644_update_completed_ <-& (phi_stmt_1644_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1644_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1644_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1644_update_start_)
          $T[phi_stmt_1644_loopback_trigger] 
          phi_stmt_1644_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1644_loopback_sample_req] 
          $T[phi_stmt_1644_loopback_sample_req_ps] 
          phi_stmt_1644_loopback_sample_req <-& (phi_stmt_1644_loopback_sample_req_ps)
          phi_stmt_1644_loopback_sample_req &-> ($null)
          $T[phi_stmt_1644_entry_trigger] 
          phi_stmt_1644_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1644_entry_sample_req] 
          $T[phi_stmt_1644_entry_sample_req_ps] 
          phi_stmt_1644_entry_sample_req <-& (phi_stmt_1644_entry_sample_req_ps)
          phi_stmt_1644_entry_sample_req &-> ($null)
          phi_stmt_1644_update_start_ o<-& (phi_stmt_1644_update_completed_ 0)
          phi_stmt_1644_sample_start_ o<-& (phi_stmt_1644_sample_completed_ 1)
          $T[phi_stmt_1644_merged_reqs] 
          $T[phi_stmt_1644_phi_mux_ack] 
          $T[phi_stmt_1644_phi_mux_ack_ps] 
          phi_stmt_1644_phi_mux_ack_ps <-& (phi_stmt_1644_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1644_update_completed_)
          $T[type_cast_1647_sample_start__ps] 
          $T[type_cast_1647_sample_completed__ps] 
          $T[type_cast_1647_update_start__ps] 
          $T[type_cast_1647_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) kx_x0 )
          $T[type_cast_1647_sample_start_] 
          $T[type_cast_1647_sample_completed_] 
          $T[type_cast_1647_update_start_] 
          $T[type_cast_1647_update_completed_] 
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_1647_sample_start_
          // done: Forward dependencies from kx_x0 to transition type_cast_1647_sample_start_
          ;;[type_cast_1647_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1647_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1647_sample_start_ &-> (type_cast_1647_Sample)
          type_cast_1647_sample_completed_ <-& (type_cast_1647_Sample)
          type_cast_1647_sample_completed_ &-> ($null)
          type_cast_1647_update_start_ &-> (type_cast_1647_Update)
          type_cast_1647_update_completed_ <-& (type_cast_1647_Update)
          // RAW reenables for kx_x0
          // self-release: 
          type_cast_1647_sample_start_ o<-& (type_cast_1647_sample_completed_ 1)
          $null &-> (type_cast_1647_update_start_)
          type_cast_1647_update_start_ o<-& (type_cast_1647_update_completed_ 0)
          // Phi start dependency
          type_cast_1647_sample_start_ <-& (type_cast_1647_sample_start__ps)
          type_cast_1647_update_start_ <-& (type_cast_1647_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) kx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_1647_sample_completed__ps <-& (type_cast_1647_sample_completed_)
          type_cast_1647_update_completed__ps <-& (type_cast_1647_update_completed_)
          $T[R_kx_x1_at_entry_1648_sample_start__ps] 
          $T[R_kx_x1_at_entry_1648_sample_completed__ps] 
          $T[R_kx_x1_at_entry_1648_update_start__ps] 
          $T[R_kx_x1_at_entry_1648_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_kx_x1_at_entry_1648_sample_start_] 
          $T[R_kx_x1_at_entry_1648_sample_completed_] 
          R_kx_x1_at_entry_1648_sample_completed_ <-& (R_kx_x1_at_entry_1648_sample_start_)
          $T[R_kx_x1_at_entry_1648_update_start_] 
          $T [R_kx_x1_at_entry_1648_update_completed_] $delay 
          R_kx_x1_at_entry_1648_update_completed_ <-& (R_kx_x1_at_entry_1648_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_kx_x1_at_entry_1648_sample_start_ <-& (R_kx_x1_at_entry_1648_sample_start__ps)
          R_kx_x1_at_entry_1648_update_start_ <-& (R_kx_x1_at_entry_1648_update_start__ps)
          // Phi complete dependency.
          R_kx_x1_at_entry_1648_sample_completed__ps <-& (R_kx_x1_at_entry_1648_sample_completed_)
          R_kx_x1_at_entry_1648_update_completed__ps <-& (R_kx_x1_at_entry_1648_update_completed_)
          $phisequencer [ phi_stmt_1644_phi_seq] : 
          phi_stmt_1644_loopback_trigger type_cast_1647_sample_start__ps type_cast_1647_sample_completed__ps type_cast_1647_update_start__ps type_cast_1647_update_completed__ps phi_stmt_1644_entry_trigger R_kx_x1_at_entry_1648_sample_start__ps R_kx_x1_at_entry_1648_sample_completed__ps R_kx_x1_at_entry_1648_update_start__ps R_kx_x1_at_entry_1648_update_completed__ps :
          phi_stmt_1644_sample_start__ps phi_stmt_1644_sample_completed__ps phi_stmt_1644_update_start__ps phi_stmt_1644_update_completed__ps :
          phi_stmt_1644_loopback_sample_req_ps phi_stmt_1644_entry_sample_req_ps : 
          phi_stmt_1644_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1644
          // start:  PHI statement phi_stmt_1649
          // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_1649_sample_start_] 
          $T[phi_stmt_1649_sample_completed_] 
          $T[phi_stmt_1649_update_start_] 
          $T[phi_stmt_1649_update_completed_] 
          $T[phi_stmt_1649_sample_start__ps] 
          phi_stmt_1649_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1649_sample_completed__ps] 
          phi_stmt_1649_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1649_update_start__ps] 
          phi_stmt_1649_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1649_update_completed__ps] 
          phi_stmt_1649_update_completed_ <-& (phi_stmt_1649_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1649_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1649_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1649_update_start_)
          $T[phi_stmt_1649_loopback_trigger] 
          phi_stmt_1649_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1649_loopback_sample_req] 
          $T[phi_stmt_1649_loopback_sample_req_ps] 
          phi_stmt_1649_loopback_sample_req <-& (phi_stmt_1649_loopback_sample_req_ps)
          phi_stmt_1649_loopback_sample_req &-> ($null)
          $T[phi_stmt_1649_entry_trigger] 
          phi_stmt_1649_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1649_entry_sample_req] 
          $T[phi_stmt_1649_entry_sample_req_ps] 
          phi_stmt_1649_entry_sample_req <-& (phi_stmt_1649_entry_sample_req_ps)
          phi_stmt_1649_entry_sample_req &-> ($null)
          phi_stmt_1649_update_start_ o<-& (phi_stmt_1649_update_completed_ 0)
          phi_stmt_1649_sample_start_ o<-& (phi_stmt_1649_sample_completed_ 1)
          $T[phi_stmt_1649_merged_reqs] 
          $T[phi_stmt_1649_phi_mux_ack] 
          $T[phi_stmt_1649_phi_mux_ack_ps] 
          phi_stmt_1649_phi_mux_ack_ps <-& (phi_stmt_1649_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1649_update_completed_)
          $T[type_cast_1652_sample_start__ps] 
          $T[type_cast_1652_sample_completed__ps] 
          $T[type_cast_1652_update_start__ps] 
          $T[type_cast_1652_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) ix_x1 )
          $T[type_cast_1652_sample_start_] 
          $T[type_cast_1652_sample_completed_] 
          $T[type_cast_1652_update_start_] 
          $T[type_cast_1652_update_completed_] 
          // ix_x1
          // start: Forward dependencies from ix_x1 to transition type_cast_1652_sample_start_
          // done: Forward dependencies from ix_x1 to transition type_cast_1652_sample_start_
          ;;[type_cast_1652_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1652_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1652_sample_start_ &-> (type_cast_1652_Sample)
          type_cast_1652_sample_completed_ <-& (type_cast_1652_Sample)
          type_cast_1652_sample_completed_ &-> ($null)
          type_cast_1652_update_start_ &-> (type_cast_1652_Update)
          type_cast_1652_update_completed_ <-& (type_cast_1652_Update)
          // RAW reenables for ix_x1
          // self-release: 
          type_cast_1652_sample_start_ o<-& (type_cast_1652_sample_completed_ 1)
          $null &-> (type_cast_1652_update_start_)
          type_cast_1652_update_start_ o<-& (type_cast_1652_update_completed_ 0)
          // Phi start dependency
          type_cast_1652_sample_start_ <-& (type_cast_1652_sample_start__ps)
          type_cast_1652_update_start_ <-& (type_cast_1652_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) ix_x1 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_1652_sample_completed__ps <-& (type_cast_1652_sample_completed_)
          type_cast_1652_update_completed__ps <-& (type_cast_1652_update_completed_)
          $T[R_ix_x2_at_entry_1653_sample_start__ps] 
          $T[R_ix_x2_at_entry_1653_sample_completed__ps] 
          $T[R_ix_x2_at_entry_1653_update_start__ps] 
          $T[R_ix_x2_at_entry_1653_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_ix_x2_at_entry_1653_sample_start_] 
          $T[R_ix_x2_at_entry_1653_sample_completed_] 
          R_ix_x2_at_entry_1653_sample_completed_ <-& (R_ix_x2_at_entry_1653_sample_start_)
          $T[R_ix_x2_at_entry_1653_update_start_] 
          $T [R_ix_x2_at_entry_1653_update_completed_] $delay 
          R_ix_x2_at_entry_1653_update_completed_ <-& (R_ix_x2_at_entry_1653_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_ix_x2_at_entry_1653_sample_start_ <-& (R_ix_x2_at_entry_1653_sample_start__ps)
          R_ix_x2_at_entry_1653_update_start_ <-& (R_ix_x2_at_entry_1653_update_start__ps)
          // Phi complete dependency.
          R_ix_x2_at_entry_1653_sample_completed__ps <-& (R_ix_x2_at_entry_1653_sample_completed_)
          R_ix_x2_at_entry_1653_update_completed__ps <-& (R_ix_x2_at_entry_1653_update_completed_)
          $phisequencer [ phi_stmt_1649_phi_seq] : 
          phi_stmt_1649_loopback_trigger type_cast_1652_sample_start__ps type_cast_1652_sample_completed__ps type_cast_1652_update_start__ps type_cast_1652_update_completed__ps phi_stmt_1649_entry_trigger R_ix_x2_at_entry_1653_sample_start__ps R_ix_x2_at_entry_1653_sample_completed__ps R_ix_x2_at_entry_1653_update_start__ps R_ix_x2_at_entry_1653_update_completed__ps :
          phi_stmt_1649_sample_start__ps phi_stmt_1649_sample_completed__ps phi_stmt_1649_update_start__ps phi_stmt_1649_update_completed__ps :
          phi_stmt_1649_loopback_sample_req_ps phi_stmt_1649_entry_sample_req_ps : 
          phi_stmt_1649_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1649
          // start:  PHI statement phi_stmt_1654
          // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_1654_sample_start_] 
          $T[phi_stmt_1654_sample_completed_] 
          $T[phi_stmt_1654_update_start_] 
          $T[phi_stmt_1654_update_completed_] 
          $T[phi_stmt_1654_sample_start__ps] 
          phi_stmt_1654_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1654_sample_completed__ps] 
          phi_stmt_1654_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1654_update_start__ps] 
          phi_stmt_1654_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1654_update_completed__ps] 
          phi_stmt_1654_update_completed_ <-& (phi_stmt_1654_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1654_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1654_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1654_update_start_)
          $T[phi_stmt_1654_loopback_trigger] 
          phi_stmt_1654_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1654_loopback_sample_req] 
          $T[phi_stmt_1654_loopback_sample_req_ps] 
          phi_stmt_1654_loopback_sample_req <-& (phi_stmt_1654_loopback_sample_req_ps)
          phi_stmt_1654_loopback_sample_req &-> ($null)
          $T[phi_stmt_1654_entry_trigger] 
          phi_stmt_1654_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1654_entry_sample_req] 
          $T[phi_stmt_1654_entry_sample_req_ps] 
          phi_stmt_1654_entry_sample_req <-& (phi_stmt_1654_entry_sample_req_ps)
          phi_stmt_1654_entry_sample_req &-> ($null)
          phi_stmt_1654_update_start_ o<-& (phi_stmt_1654_update_completed_ 0)
          phi_stmt_1654_sample_start_ o<-& (phi_stmt_1654_sample_completed_ 1)
          $T[phi_stmt_1654_merged_reqs] 
          $T[phi_stmt_1654_phi_mux_ack] 
          $T[phi_stmt_1654_phi_mux_ack_ps] 
          phi_stmt_1654_phi_mux_ack_ps <-& (phi_stmt_1654_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1654_update_completed_)
          $T[type_cast_1657_sample_start__ps] 
          $T[type_cast_1657_sample_completed__ps] 
          $T[type_cast_1657_update_start__ps] 
          $T[type_cast_1657_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) jx_x0 )
          $T[type_cast_1657_sample_start_] 
          $T[type_cast_1657_sample_completed_] 
          $T[type_cast_1657_update_start_] 
          $T[type_cast_1657_update_completed_] 
          // jx_x0
          // start: Forward dependencies from jx_x0 to transition type_cast_1657_sample_start_
          // done: Forward dependencies from jx_x0 to transition type_cast_1657_sample_start_
          ;;[type_cast_1657_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1657_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1657_sample_start_ &-> (type_cast_1657_Sample)
          type_cast_1657_sample_completed_ <-& (type_cast_1657_Sample)
          type_cast_1657_sample_completed_ &-> ($null)
          type_cast_1657_update_start_ &-> (type_cast_1657_Update)
          type_cast_1657_update_completed_ <-& (type_cast_1657_Update)
          // RAW reenables for jx_x0
          // self-release: 
          type_cast_1657_sample_start_ o<-& (type_cast_1657_sample_completed_ 1)
          $null &-> (type_cast_1657_update_start_)
          type_cast_1657_update_start_ o<-& (type_cast_1657_update_completed_ 0)
          // Phi start dependency
          type_cast_1657_sample_start_ <-& (type_cast_1657_sample_start__ps)
          type_cast_1657_update_start_ <-& (type_cast_1657_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) jx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_1657_sample_completed__ps <-& (type_cast_1657_sample_completed_)
          type_cast_1657_update_completed__ps <-& (type_cast_1657_update_completed_)
          $T[R_jx_x1_at_entry_1658_sample_start__ps] 
          $T[R_jx_x1_at_entry_1658_sample_completed__ps] 
          $T[R_jx_x1_at_entry_1658_update_start__ps] 
          $T[R_jx_x1_at_entry_1658_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_jx_x1_at_entry_1658_sample_start_] 
          $T[R_jx_x1_at_entry_1658_sample_completed_] 
          $T[R_jx_x1_at_entry_1658_update_start_] 
          $T[R_jx_x1_at_entry_1658_update_completed_] 
          ;;[R_jx_x1_at_entry_1658_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_jx_x1_at_entry_1658_sample_start_ &-> (R_jx_x1_at_entry_1658_Sample)
          R_jx_x1_at_entry_1658_sample_completed_ <-& (R_jx_x1_at_entry_1658_Sample)
          ;;[R_jx_x1_at_entry_1658_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_jx_x1_at_entry_1658_update_start_ &-> (R_jx_x1_at_entry_1658_Update)
          R_jx_x1_at_entry_1658_update_completed_ <-& (R_jx_x1_at_entry_1658_Update)
          // RAW reenables for jx_x1_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_jx_x1_at_entry_1658_sample_start_ <-& (R_jx_x1_at_entry_1658_sample_start__ps)
          R_jx_x1_at_entry_1658_update_start_ <-& (R_jx_x1_at_entry_1658_update_start__ps)
          // Phi complete dependency.
          R_jx_x1_at_entry_1658_sample_completed__ps <-& (R_jx_x1_at_entry_1658_sample_completed_)
          R_jx_x1_at_entry_1658_update_completed__ps <-& (R_jx_x1_at_entry_1658_update_completed_)
          $phisequencer [ phi_stmt_1654_phi_seq] : 
          phi_stmt_1654_loopback_trigger type_cast_1657_sample_start__ps type_cast_1657_sample_completed__ps type_cast_1657_update_start__ps type_cast_1657_update_completed__ps phi_stmt_1654_entry_trigger R_jx_x1_at_entry_1658_sample_start__ps R_jx_x1_at_entry_1658_sample_completed__ps R_jx_x1_at_entry_1658_update_start__ps R_jx_x1_at_entry_1658_update_completed__ps :
          phi_stmt_1654_sample_start__ps phi_stmt_1654_sample_completed__ps phi_stmt_1654_update_start__ps phi_stmt_1654_update_completed__ps :
          phi_stmt_1654_loopback_sample_req_ps phi_stmt_1654_entry_sample_req_ps : 
          phi_stmt_1654_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1654
          // start:  			conv48 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 528
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
          $T[type_cast_1663_sample_start_] 
          $T[type_cast_1663_sample_completed_] 
          $T[type_cast_1663_update_start_] 
          $T[type_cast_1663_update_completed_] 
          // ($cast ($int<32>) kx_x1 )
          // kx_x1
          // start: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_1663_sample_start_
          type_cast_1663_sample_start_ <-& (phi_stmt_1644_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_1663_sample_start_
          ;;[type_cast_1663_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1663_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1663_sample_start_ &-> (type_cast_1663_Sample)
          type_cast_1663_sample_completed_ <-& (type_cast_1663_Sample)
          type_cast_1663_sample_completed_ &-> ($null)
          type_cast_1663_update_start_ &-> (type_cast_1663_Update)
          type_cast_1663_update_completed_ <-& (type_cast_1663_Update)
          // RAW reenables for ($cast ($int<32>) kx_x1 )
          phi_stmt_1644_update_start_ o<-& (type_cast_1663_sample_completed_ 0)
          // self-release: 
          type_cast_1663_sample_start_ o<-& (type_cast_1663_sample_completed_ 1)
          $null &-> (type_cast_1663_update_start_)
          type_cast_1663_update_start_ o<-& (type_cast_1663_update_completed_ 0)
          // Target expression
          // (as target) conv48
          // start: WAR dependencies for conv48
          // done: WAR dependencies for conv48
          // end:  			conv48 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // start:  			$volatile add := (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 529
          // volatile! 
          // Source expression
          // (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
          // conv48
          // Target expression
          // (as target) add
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // end:  			$volatile add := (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          // start:  			type_cast_1492_1492_delayed_2_0 := ($bitcast ($int<32>) conv32 ) $buffering 2 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 530
          // Source expression
          // ($bitcast ($int<32>) conv32 )
          $T[type_cast_1673_sample_start_] 
          $T[type_cast_1673_sample_completed_] 
          $T[type_cast_1673_update_start_] 
          $T[type_cast_1673_update_completed_] 
          // conv32
          // start: Forward dependencies from conv32 to transition type_cast_1673_sample_start_
          // done: Forward dependencies from conv32 to transition type_cast_1673_sample_start_
          ;;[type_cast_1673_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1673_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1673_sample_start_ &-> (type_cast_1673_Sample)
          type_cast_1673_sample_completed_ <-& (type_cast_1673_Sample)
          type_cast_1673_sample_completed_ &-> ($null)
          type_cast_1673_update_start_ &-> (type_cast_1673_Update)
          type_cast_1673_update_completed_ <-& (type_cast_1673_Update)
          // RAW reenables for conv32
          // self-release: 
          type_cast_1673_sample_start_ o<-& (type_cast_1673_sample_completed_ 1)
          $null &-> (type_cast_1673_update_start_)
          type_cast_1673_update_start_ o<-& (type_cast_1673_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1492_1492_delayed_2_0
          // start: WAR dependencies for type_cast_1492_1492_delayed_2_0
          // done: WAR dependencies for type_cast_1492_1492_delayed_2_0
          // end:  			type_cast_1492_1492_delayed_2_0 := ($bitcast ($int<32>) conv32 ) $buffering 2 $cut_through // bits of buffering = 64. 
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // start:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0) $buffering 1
          //  file prog.linked.opt.aa, line 531
          // volatile! 
          // Source expression
          // (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0)
          // ($bitcast ($int<32>) add )
          // add
          // type_cast_1492_1492_delayed_2_0
          // Target expression
          // (as target) cmp
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // end:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0) $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // start:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          //  file prog.linked.opt.aa, line 532
          // volatile! 
          // Source expression
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xthen_taken
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // end:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // start:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          //  file prog.linked.opt.aa, line 533
          // volatile! 
          // Source expression
          // ( ~ cmp )
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xelse_taken
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // end:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // start:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          //  file prog.linked.opt.aa, line 534
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xelse_taken
          // Target expression
          // (as target) ifx_xelse_exec_guard
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // end:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          // start:  			jx_x1_1507_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 535
          $T[assign_stmt_1693_sample_start_] 
          $T[assign_stmt_1693_sample_completed_] 
          $T[assign_stmt_1693_update_start_] 
          $T[assign_stmt_1693_update_completed_] 
          // Source expression
          // jx_x1
          // Target expression
          // (as target) jx_x1_1507_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1693_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1693_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1693_sample_start_ &-> (assign_stmt_1693_Sample)
          assign_stmt_1693_sample_completed_ <-& (assign_stmt_1693_Sample)
          assign_stmt_1693_sample_completed_ &-> ($null)
          assign_stmt_1693_update_start_ &-> (assign_stmt_1693_Update)
          assign_stmt_1693_update_completed_ <-& (assign_stmt_1693_Update)
          // start: Forward dependencies from jx_x1 to transition assign_stmt_1693_sample_start_
          assign_stmt_1693_sample_start_ <-& (phi_stmt_1654_update_completed_)
          // done: Forward dependencies from jx_x1 to transition assign_stmt_1693_sample_start_
          // RAW reenables for jx_x1
          phi_stmt_1654_update_start_ o<-& (assign_stmt_1693_sample_completed_ 0)
          // self-release: 
          assign_stmt_1693_sample_start_ o<-& (assign_stmt_1693_sample_completed_ 1)
          $null &-> (assign_stmt_1693_update_start_)
          assign_stmt_1693_update_start_ o<-& (assign_stmt_1693_update_completed_ 0)
          // start: WAR dependencies for jx_x1_1507_delayed_1_0
          // done: WAR dependencies for jx_x1_1507_delayed_1_0
          // end:  			jx_x1_1507_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // start:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 536
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // jx_x1_1507_delayed_1_0
          // Target expression
          // (as target) inc
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // end:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			$guard (ifx_xelse_exec_guard) conv58 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 537
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
          $T[type_cast_1705_sample_start_] 
          $T[type_cast_1705_sample_completed_] 
          $T[type_cast_1705_update_start_] 
          $T[type_cast_1705_update_completed_] 
          // Guard dependency for expression type_cast_1705 with guard R_ifx_xelse_exec_guard_1701
          type_cast_1705_sample_start_ <-& (type_cast_1663_update_completed_)
          type_cast_1705_sample_start_ <-& (type_cast_1673_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (type_cast_1705_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (type_cast_1705_sample_completed_ 0)
          // ($cast ($int<32>) inc )
          // inc
          // start: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_1705_sample_start_
          type_cast_1705_sample_start_ <-& (assign_stmt_1693_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_1705_sample_start_
          ;;[type_cast_1705_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1705_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1705_sample_start_ &-> (type_cast_1705_Sample)
          type_cast_1705_sample_completed_ <-& (type_cast_1705_Sample)
          type_cast_1705_sample_completed_ &-> ($null)
          type_cast_1705_update_start_ &-> (type_cast_1705_Update)
          type_cast_1705_update_completed_ <-& (type_cast_1705_Update)
          // RAW reenables for ($cast ($int<32>) inc )
          assign_stmt_1693_update_start_ o<-& (type_cast_1705_sample_completed_ 0)
          // self-release: 
          type_cast_1705_sample_start_ o<-& (type_cast_1705_sample_completed_ 1)
          $null &-> (type_cast_1705_update_start_)
          type_cast_1705_update_start_ o<-& (type_cast_1705_update_completed_ 0)
          // Target expression
          // (as target) conv58
          // start: WAR dependencies for conv58
          // done: WAR dependencies for conv58
          // end:  			$guard (ifx_xelse_exec_guard) conv58 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_1518_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 538
          $T[assign_stmt_1709_sample_start_] 
          $T[assign_stmt_1709_sample_completed_] 
          $T[assign_stmt_1709_update_start_] 
          $T[assign_stmt_1709_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1518_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1709_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1709_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1709_sample_start_ &-> (assign_stmt_1709_Sample)
          assign_stmt_1709_sample_completed_ <-& (assign_stmt_1709_Sample)
          assign_stmt_1709_sample_completed_ &-> ($null)
          assign_stmt_1709_update_start_ &-> (assign_stmt_1709_Update)
          assign_stmt_1709_update_completed_ <-& (assign_stmt_1709_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1709_sample_start_
          assign_stmt_1709_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1709_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1709_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1709_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1709_sample_completed_ 0)
          // self-release: 
          assign_stmt_1709_sample_start_ o<-& (assign_stmt_1709_sample_completed_ 1)
          $null &-> (assign_stmt_1709_update_start_)
          assign_stmt_1709_update_start_ o<-& (assign_stmt_1709_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1518_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1518_delayed_1_0
          // end:  			ifx_xelse_exec_guard_1518_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp64
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp64
          // start:  			$guard (ifx_xelse_exec_guard_1518_delayed_1_0) $volatile cmp64 := (conv58 == add63) $buffering 1
          //  file prog.linked.opt.aa, line 539
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_1518_delayed_1_0
          // Source expression
          // (conv58 == add63)
          // conv58
          // add63
          // Target expression
          // (as target) cmp64
          // start: WAR dependencies for cmp64
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp64
          // end:  			$guard (ifx_xelse_exec_guard_1518_delayed_1_0) $volatile cmp64 := (conv58 == add63) $buffering 1
          // start:  			ifx_xelse_exec_guard_1524_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 540
          $T[assign_stmt_1718_sample_start_] 
          $T[assign_stmt_1718_sample_completed_] 
          $T[assign_stmt_1718_update_start_] 
          $T[assign_stmt_1718_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1524_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1718_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1718_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1718_sample_start_ &-> (assign_stmt_1718_Sample)
          assign_stmt_1718_sample_completed_ <-& (assign_stmt_1718_Sample)
          assign_stmt_1718_sample_completed_ &-> ($null)
          assign_stmt_1718_update_start_ &-> (assign_stmt_1718_Update)
          assign_stmt_1718_update_completed_ <-& (assign_stmt_1718_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1718_sample_start_
          assign_stmt_1718_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1718_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1718_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1718_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1718_sample_completed_ 0)
          // self-release: 
          assign_stmt_1718_sample_start_ o<-& (assign_stmt_1718_sample_completed_ 1)
          $null &-> (assign_stmt_1718_update_start_)
          assign_stmt_1718_update_start_ o<-& (assign_stmt_1718_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1524_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1524_delayed_1_0
          // end:  			ifx_xelse_exec_guard_1524_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse_exec_guard_1524_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 541
          // Guard expression 
          // ifx_xelse_exec_guard_1524_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) cmp64 )
          $T[type_cast_1722_sample_start_] 
          $T[type_cast_1722_sample_completed_] 
          $T[type_cast_1722_update_start_] 
          $T[type_cast_1722_update_completed_] 
          // Guard dependency for expression type_cast_1722 with guard R_ifx_xelse_exec_guard_1524_delayed_1_0_1719
          type_cast_1722_sample_start_ <-& (assign_stmt_1718_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_1524_delayed_1_0
          assign_stmt_1718_update_start_ o<-& (type_cast_1722_sample_completed_ 0)
          // cmp64
          // start: Forward dependencies from cmp64 to transition type_cast_1722_sample_start_
          type_cast_1722_sample_start_ <-& (type_cast_1705_update_completed_)
          // done: Forward dependencies from cmp64 to transition type_cast_1722_sample_start_
          ;;[type_cast_1722_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1722_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1722_sample_start_ &-> (type_cast_1722_Sample)
          type_cast_1722_sample_completed_ <-& (type_cast_1722_Sample)
          type_cast_1722_sample_completed_ &-> ($null)
          type_cast_1722_update_start_ &-> (type_cast_1722_Update)
          type_cast_1722_update_completed_ <-& (type_cast_1722_Update)
          // RAW reenables for cmp64
          type_cast_1705_update_start_ o<-& (type_cast_1722_sample_completed_ 0)
          // self-release: 
          type_cast_1722_sample_start_ o<-& (type_cast_1722_sample_completed_ 1)
          $null &-> (type_cast_1722_update_start_)
          type_cast_1722_update_start_ o<-& (type_cast_1722_update_completed_ 0)
          // Target expression
          // (as target) inc69
          // start: WAR dependencies for inc69
          // done: WAR dependencies for inc69
          // end:  			$guard (ifx_xelse_exec_guard_1524_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xelse_exec_guard_1529_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 542
          $T[assign_stmt_1726_sample_start_] 
          $T[assign_stmt_1726_sample_completed_] 
          $T[assign_stmt_1726_update_start_] 
          $T[assign_stmt_1726_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1529_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1726_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1726_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1726_sample_start_ &-> (assign_stmt_1726_Sample)
          assign_stmt_1726_sample_completed_ <-& (assign_stmt_1726_Sample)
          assign_stmt_1726_sample_completed_ &-> ($null)
          assign_stmt_1726_update_start_ &-> (assign_stmt_1726_Update)
          assign_stmt_1726_update_completed_ <-& (assign_stmt_1726_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1726_sample_start_
          assign_stmt_1726_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1726_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1726_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1726_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1726_sample_completed_ 0)
          // self-release: 
          assign_stmt_1726_sample_start_ o<-& (assign_stmt_1726_sample_completed_ 1)
          $null &-> (assign_stmt_1726_update_start_)
          assign_stmt_1726_update_start_ o<-& (assign_stmt_1726_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1529_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1529_delayed_2_0
          // end:  			ifx_xelse_exec_guard_1529_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			ix_x2_1532_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 543
          $T[assign_stmt_1729_sample_start_] 
          $T[assign_stmt_1729_sample_completed_] 
          $T[assign_stmt_1729_update_start_] 
          $T[assign_stmt_1729_update_completed_] 
          // Source expression
          // ix_x2
          // Target expression
          // (as target) ix_x2_1532_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1729_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1729_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1729_sample_start_ &-> (assign_stmt_1729_Sample)
          assign_stmt_1729_sample_completed_ <-& (assign_stmt_1729_Sample)
          assign_stmt_1729_sample_completed_ &-> ($null)
          assign_stmt_1729_update_start_ &-> (assign_stmt_1729_Update)
          assign_stmt_1729_update_completed_ <-& (assign_stmt_1729_Update)
          // start: Forward dependencies from ix_x2 to transition assign_stmt_1729_sample_start_
          assign_stmt_1729_sample_start_ <-& (phi_stmt_1649_update_completed_)
          // done: Forward dependencies from ix_x2 to transition assign_stmt_1729_sample_start_
          // RAW reenables for ix_x2
          phi_stmt_1649_update_start_ o<-& (assign_stmt_1729_sample_completed_ 0)
          // self-release: 
          assign_stmt_1729_sample_start_ o<-& (assign_stmt_1729_sample_completed_ 1)
          $null &-> (assign_stmt_1729_update_start_)
          assign_stmt_1729_update_start_ o<-& (assign_stmt_1729_update_completed_ 0)
          // start: WAR dependencies for ix_x2_1532_delayed_3_0
          // done: WAR dependencies for ix_x2_1532_delayed_3_0
          // end:  			ix_x2_1532_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc69x_xix_x2
          // done: WAR dependencies for inc69x_xix_x2
          // start:  			$guard (ifx_xelse_exec_guard_1529_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_1532_delayed_3_0) $buffering 1
          //  file prog.linked.opt.aa, line 544
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_1529_delayed_2_0
          // Source expression
          // (inc69 + ix_x2_1532_delayed_3_0)
          // inc69
          // ix_x2_1532_delayed_3_0
          // Target expression
          // (as target) inc69x_xix_x2
          // start: WAR dependencies for inc69x_xix_x2
          // done: WAR dependencies for inc69x_xix_x2
          // end:  			$guard (ifx_xelse_exec_guard_1529_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_1532_delayed_3_0) $buffering 1
          // start:  			ifx_xelse_exec_guard_1535_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 545
          $T[assign_stmt_1738_sample_start_] 
          $T[assign_stmt_1738_sample_completed_] 
          $T[assign_stmt_1738_update_start_] 
          $T[assign_stmt_1738_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1535_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1738_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1738_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1738_sample_start_ &-> (assign_stmt_1738_Sample)
          assign_stmt_1738_sample_completed_ <-& (assign_stmt_1738_Sample)
          assign_stmt_1738_sample_completed_ &-> ($null)
          assign_stmt_1738_update_start_ &-> (assign_stmt_1738_Update)
          assign_stmt_1738_update_completed_ <-& (assign_stmt_1738_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1738_sample_start_
          assign_stmt_1738_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1738_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1738_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1738_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1738_sample_completed_ 0)
          // self-release: 
          assign_stmt_1738_sample_start_ o<-& (assign_stmt_1738_sample_completed_ 1)
          $null &-> (assign_stmt_1738_update_start_)
          assign_stmt_1738_update_start_ o<-& (assign_stmt_1738_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1535_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1535_delayed_1_0
          // end:  			ifx_xelse_exec_guard_1535_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			inc_1539_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 546
          $T[assign_stmt_1741_sample_start_] 
          $T[assign_stmt_1741_sample_completed_] 
          $T[assign_stmt_1741_update_start_] 
          $T[assign_stmt_1741_update_completed_] 
          // Source expression
          // inc
          // Target expression
          // (as target) inc_1539_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1741_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1741_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1741_sample_start_ &-> (assign_stmt_1741_Sample)
          assign_stmt_1741_sample_completed_ <-& (assign_stmt_1741_Sample)
          assign_stmt_1741_sample_completed_ &-> ($null)
          assign_stmt_1741_update_start_ &-> (assign_stmt_1741_Update)
          assign_stmt_1741_update_completed_ <-& (assign_stmt_1741_Update)
          // start: Forward dependencies from inc to transition assign_stmt_1741_sample_start_
          assign_stmt_1741_sample_start_ <-& (assign_stmt_1693_update_completed_)
          // done: Forward dependencies from inc to transition assign_stmt_1741_sample_start_
          // RAW reenables for inc
          assign_stmt_1693_update_start_ o<-& (assign_stmt_1741_sample_completed_ 0)
          // self-release: 
          assign_stmt_1741_sample_start_ o<-& (assign_stmt_1741_sample_completed_ 1)
          $null &-> (assign_stmt_1741_update_start_)
          assign_stmt_1741_update_start_ o<-& (assign_stmt_1741_update_completed_ 0)
          // start: WAR dependencies for inc_1539_delayed_1_0
          // done: WAR dependencies for inc_1539_delayed_1_0
          // end:  			inc_1539_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // start:  			$guard (ifx_xelse_exec_guard_1535_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 div  inc_1539_delayed_1_0 )  $buffering 1
          //  file prog.linked.opt.aa, line 547
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_1535_delayed_1_0
          // Source expression
          // ( $mux cmp64 div  inc_1539_delayed_1_0 ) 
          // cmp64
          // div
          // inc_1539_delayed_1_0
          // Target expression
          // (as target) jx_x2
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // end:  			$guard (ifx_xelse_exec_guard_1535_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 div  inc_1539_delayed_1_0 )  $buffering 1
          // start:  			ifx_xelse_exec_guard_1542_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 548
          $T[assign_stmt_1751_sample_start_] 
          $T[assign_stmt_1751_sample_completed_] 
          $T[assign_stmt_1751_update_start_] 
          $T[assign_stmt_1751_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1542_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1751_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1751_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1751_sample_start_ &-> (assign_stmt_1751_Sample)
          assign_stmt_1751_sample_completed_ <-& (assign_stmt_1751_Sample)
          assign_stmt_1751_sample_completed_ &-> ($null)
          assign_stmt_1751_update_start_ &-> (assign_stmt_1751_Update)
          assign_stmt_1751_update_completed_ <-& (assign_stmt_1751_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1751_sample_start_
          assign_stmt_1751_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1751_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1751_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1751_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1751_sample_completed_ 0)
          // self-release: 
          assign_stmt_1751_sample_start_ o<-& (assign_stmt_1751_sample_completed_ 1)
          $null &-> (assign_stmt_1751_update_start_)
          assign_stmt_1751_update_start_ o<-& (assign_stmt_1751_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1542_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1542_delayed_2_0
          // end:  			ifx_xelse_exec_guard_1542_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 549
          // Guard expression 
          // ifx_xelse_exec_guard_1542_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
          $T[type_cast_1756_sample_start_] 
          $T[type_cast_1756_sample_completed_] 
          $T[type_cast_1756_update_start_] 
          $T[type_cast_1756_update_completed_] 
          // Guard dependency for expression type_cast_1756 with guard R_ifx_xelse_exec_guard_1542_delayed_2_0_1752
          type_cast_1756_sample_start_ <-& (assign_stmt_1751_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_1542_delayed_2_0
          assign_stmt_1751_update_start_ o<-& (type_cast_1756_sample_completed_ 0)
          // ($cast ($int<32>) inc69x_xix_x2 )
          // inc69x_xix_x2
          // start: Forward dependencies from ($cast ($int<32>) inc69x_xix_x2 ) to transition type_cast_1756_sample_start_
          type_cast_1756_sample_start_ <-& (type_cast_1722_update_completed_)
          type_cast_1756_sample_start_ <-& (assign_stmt_1729_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc69x_xix_x2 ) to transition type_cast_1756_sample_start_
          ;;[type_cast_1756_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1756_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1756_sample_start_ &-> (type_cast_1756_Sample)
          type_cast_1756_sample_completed_ <-& (type_cast_1756_Sample)
          type_cast_1756_sample_completed_ &-> ($null)
          type_cast_1756_update_start_ &-> (type_cast_1756_Update)
          type_cast_1756_update_completed_ <-& (type_cast_1756_Update)
          // RAW reenables for ($cast ($int<32>) inc69x_xix_x2 )
          type_cast_1722_update_start_ o<-& (type_cast_1756_sample_completed_ 0)
          assign_stmt_1729_update_start_ o<-& (type_cast_1756_sample_completed_ 0)
          // self-release: 
          type_cast_1756_sample_start_ o<-& (type_cast_1756_sample_completed_ 1)
          $null &-> (type_cast_1756_update_start_)
          type_cast_1756_update_start_ o<-& (type_cast_1756_update_completed_ 0)
          // Target expression
          // (as target) conv71
          // start: WAR dependencies for conv71
          // done: WAR dependencies for conv71
          // end:  			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_1548_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 550
          $T[assign_stmt_1760_sample_start_] 
          $T[assign_stmt_1760_sample_completed_] 
          $T[assign_stmt_1760_update_start_] 
          $T[assign_stmt_1760_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1548_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1760_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1760_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1760_sample_start_ &-> (assign_stmt_1760_Sample)
          assign_stmt_1760_sample_completed_ <-& (assign_stmt_1760_Sample)
          assign_stmt_1760_sample_completed_ &-> ($null)
          assign_stmt_1760_update_start_ &-> (assign_stmt_1760_Update)
          assign_stmt_1760_update_completed_ <-& (assign_stmt_1760_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1760_sample_start_
          assign_stmt_1760_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1760_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1760_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1760_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1760_sample_completed_ 0)
          // self-release: 
          assign_stmt_1760_sample_start_ o<-& (assign_stmt_1760_sample_completed_ 1)
          $null &-> (assign_stmt_1760_update_start_)
          assign_stmt_1760_update_start_ o<-& (assign_stmt_1760_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1548_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1548_delayed_3_0
          // end:  			ifx_xelse_exec_guard_1548_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for cmp79
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp79
          // start:  			$guard (ifx_xelse_exec_guard_1548_delayed_3_0) $volatile cmp79 := (conv71 == add78) $buffering 1
          //  file prog.linked.opt.aa, line 551
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_1548_delayed_3_0
          // Source expression
          // (conv71 == add78)
          // conv71
          // add78
          // Target expression
          // (as target) cmp79
          // start: WAR dependencies for cmp79
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp79
          // end:  			$guard (ifx_xelse_exec_guard_1548_delayed_3_0) $volatile cmp79 := (conv71 == add78) $buffering 1
          // start:  			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 552
          $T[assign_stmt_1769_sample_start_] 
          $T[assign_stmt_1769_sample_completed_] 
          $T[assign_stmt_1769_update_start_] 
          $T[assign_stmt_1769_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1555_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1769_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1769_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1769_sample_start_ &-> (assign_stmt_1769_Sample)
          assign_stmt_1769_sample_completed_ <-& (assign_stmt_1769_Sample)
          assign_stmt_1769_sample_completed_ &-> ($null)
          assign_stmt_1769_update_start_ &-> (assign_stmt_1769_Update)
          assign_stmt_1769_update_completed_ <-& (assign_stmt_1769_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1769_sample_start_
          assign_stmt_1769_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1769_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1769_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1769_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1769_sample_completed_ 0)
          // self-release: 
          assign_stmt_1769_sample_start_ o<-& (assign_stmt_1769_sample_completed_ 1)
          $null &-> (assign_stmt_1769_update_start_)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1555_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1555_delayed_3_0
          // end:  			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xthen81_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen81_taken
          // start:  			$volatile ifx_xelse_ifx_xthen81_taken := (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79) $buffering 1
          //  file prog.linked.opt.aa, line 553
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79)
          // ifx_xelse_exec_guard_1555_delayed_3_0
          // cmp79
          // Target expression
          // (as target) ifx_xelse_ifx_xthen81_taken
          // start: WAR dependencies for ifx_xelse_ifx_xthen81_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen81_taken
          // end:  			$volatile ifx_xelse_ifx_xthen81_taken := (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79) $buffering 1
          // start:  			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 554
          $T[assign_stmt_1777_sample_start_] 
          $T[assign_stmt_1777_sample_completed_] 
          $T[assign_stmt_1777_update_start_] 
          $T[assign_stmt_1777_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_1560_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1777_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1777_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1777_sample_start_ &-> (assign_stmt_1777_Sample)
          assign_stmt_1777_sample_completed_ <-& (assign_stmt_1777_Sample)
          assign_stmt_1777_sample_completed_ &-> ($null)
          assign_stmt_1777_update_start_ &-> (assign_stmt_1777_Update)
          assign_stmt_1777_update_completed_ <-& (assign_stmt_1777_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1777_sample_start_
          assign_stmt_1777_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1777_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_1777_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_1663_update_start_ o<-& (assign_stmt_1777_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1777_sample_completed_ 0)
          // self-release: 
          assign_stmt_1777_sample_start_ o<-& (assign_stmt_1777_sample_completed_ 1)
          $null &-> (assign_stmt_1777_update_start_)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_1560_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_1560_delayed_3_0
          // end:  			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xend83_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend83_taken
          // start:  			$volatile ifx_xelse_ifx_xend83_taken := (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 )) $buffering 1
          //  file prog.linked.opt.aa, line 555
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 ))
          // ifx_xelse_exec_guard_1560_delayed_3_0
          // ( ~ cmp79 )
          // cmp79
          // Target expression
          // (as target) ifx_xelse_ifx_xend83_taken
          // start: WAR dependencies for ifx_xelse_ifx_xend83_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend83_taken
          // end:  			$volatile ifx_xelse_ifx_xend83_taken := (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 )) $buffering 1
          // start: WAR dependencies for ifx_xthen81_exec_guard
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen81_exec_guard
          // start:  			$volatile ifx_xthen81_exec_guard := ifx_xelse_ifx_xthen81_taken $buffering 1
          //  file prog.linked.opt.aa, line 556
          // volatile! 
          // Source expression
          // ifx_xelse_ifx_xthen81_taken
          // Target expression
          // (as target) ifx_xthen81_exec_guard
          // start: WAR dependencies for ifx_xthen81_exec_guard
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen81_exec_guard
          // end:  			$volatile ifx_xthen81_exec_guard := ifx_xelse_ifx_xthen81_taken $buffering 1
          // start: WAR dependencies for ifx_xthen81_ifx_xend83_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen81_ifx_xend83_taken
          // start:  			$volatile ifx_xthen81_ifx_xend83_taken := ifx_xthen81_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 557
          // volatile! 
          // Source expression
          // ifx_xthen81_exec_guard
          // Target expression
          // (as target) ifx_xthen81_ifx_xend83_taken
          // start: WAR dependencies for ifx_xthen81_ifx_xend83_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen81_ifx_xend83_taken
          // end:  			$volatile ifx_xthen81_ifx_xend83_taken := ifx_xthen81_exec_guard $buffering 1
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // start:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          //  file prog.linked.opt.aa, line 558
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xthen_taken
          // Target expression
          // (as target) ifx_xthen_exec_guard
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // end:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          // start:  			kx_x1_1576_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 559
          $T[assign_stmt_1795_sample_start_] 
          $T[assign_stmt_1795_sample_completed_] 
          $T[assign_stmt_1795_update_start_] 
          $T[assign_stmt_1795_update_completed_] 
          // Source expression
          // kx_x1
          // Target expression
          // (as target) kx_x1_1576_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1795_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1795_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1795_sample_start_ &-> (assign_stmt_1795_Sample)
          assign_stmt_1795_sample_completed_ <-& (assign_stmt_1795_Sample)
          assign_stmt_1795_sample_completed_ &-> ($null)
          assign_stmt_1795_update_start_ &-> (assign_stmt_1795_Update)
          assign_stmt_1795_update_completed_ <-& (assign_stmt_1795_Update)
          // start: Forward dependencies from kx_x1 to transition assign_stmt_1795_sample_start_
          assign_stmt_1795_sample_start_ <-& (phi_stmt_1644_update_completed_)
          // done: Forward dependencies from kx_x1 to transition assign_stmt_1795_sample_start_
          // RAW reenables for kx_x1
          phi_stmt_1644_update_start_ o<-& (assign_stmt_1795_sample_completed_ 0)
          // self-release: 
          assign_stmt_1795_sample_start_ o<-& (assign_stmt_1795_sample_completed_ 1)
          $null &-> (assign_stmt_1795_update_start_)
          assign_stmt_1795_update_start_ o<-& (assign_stmt_1795_update_completed_ 0)
          // start: WAR dependencies for kx_x1_1576_delayed_1_0
          // done: WAR dependencies for kx_x1_1576_delayed_1_0
          // end:  			kx_x1_1576_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add54
          // done: WAR dependencies for add54
          // start:  			$guard (ifx_xthen_exec_guard) $volatile add54 := (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 560
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
          // kx_x1_1576_delayed_1_0
          // Target expression
          // (as target) add54
          // start: WAR dependencies for add54
          // done: WAR dependencies for add54
          // end:  			$guard (ifx_xthen_exec_guard) $volatile add54 := (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken
          // start:  			$volatile ifx_xthen_ifx_xend83_taken := ifx_xthen_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 561
          // volatile! 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken
          // end:  			$volatile ifx_xthen_ifx_xend83_taken := ifx_xthen_exec_guard $buffering 1
          // start:  			ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 562
          $T[assign_stmt_1808_sample_start_] 
          $T[assign_stmt_1808_sample_completed_] 
          $T[assign_stmt_1808_update_start_] 
          $T[assign_stmt_1808_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1808_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1808_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1808_sample_start_ &-> (assign_stmt_1808_Sample)
          assign_stmt_1808_sample_completed_ <-& (assign_stmt_1808_Sample)
          assign_stmt_1808_sample_completed_ &-> ($null)
          assign_stmt_1808_update_start_ &-> (assign_stmt_1808_Update)
          assign_stmt_1808_update_completed_ <-& (assign_stmt_1808_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1808_sample_start_
          assign_stmt_1808_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1808_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1808_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend83_taken
          type_cast_1663_update_start_ o<-& (assign_stmt_1808_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1808_sample_completed_ 0)
          // self-release: 
          assign_stmt_1808_sample_start_ o<-& (assign_stmt_1808_sample_completed_ 1)
          $null &-> (assign_stmt_1808_update_start_)
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1808_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
          // end:  			ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xend83_exec_guard
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend83_exec_guard
          // start:  			$volatile ifx_xend83_exec_guard := (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)) $buffering 1
          //  file prog.linked.opt.aa, line 563
          // volatile! 
          // Source expression
          // (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken))
          // ifx_xelse_ifx_xend83_taken
          // (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)
          // ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
          // ifx_xthen81_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xend83_exec_guard
          // start: WAR dependencies for ifx_xend83_exec_guard
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend83_exec_guard
          // end:  			$volatile ifx_xend83_exec_guard := (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)) $buffering 1
          // start:  			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 564
          $T[assign_stmt_1818_sample_start_] 
          $T[assign_stmt_1818_sample_completed_] 
          $T[assign_stmt_1818_update_start_] 
          $T[assign_stmt_1818_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1818_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1818_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1818_sample_start_ &-> (assign_stmt_1818_Sample)
          assign_stmt_1818_sample_completed_ <-& (assign_stmt_1818_Sample)
          assign_stmt_1818_sample_completed_ &-> ($null)
          assign_stmt_1818_update_start_ &-> (assign_stmt_1818_Update)
          assign_stmt_1818_update_completed_ <-& (assign_stmt_1818_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1818_sample_start_
          assign_stmt_1818_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1818_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1818_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend83_taken
          type_cast_1663_update_start_ o<-& (assign_stmt_1818_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1818_sample_completed_ 0)
          // self-release: 
          assign_stmt_1818_sample_start_ o<-& (assign_stmt_1818_sample_completed_ 1)
          $null &-> (assign_stmt_1818_update_start_)
          assign_stmt_1818_update_start_ o<-& (assign_stmt_1818_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
          // end:  			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 565
          // Source expression
          // ($bitcast ($uint<16>) add54 )
          $T[type_cast_1821_sample_start_] 
          $T[type_cast_1821_sample_completed_] 
          $T[type_cast_1821_update_start_] 
          $T[type_cast_1821_update_completed_] 
          // add54
          // start: Forward dependencies from add54 to transition type_cast_1821_sample_start_
          type_cast_1821_sample_start_ <-& (assign_stmt_1795_update_completed_)
          // done: Forward dependencies from add54 to transition type_cast_1821_sample_start_
          ;;[type_cast_1821_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1821_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1821_sample_start_ &-> (type_cast_1821_Sample)
          type_cast_1821_sample_completed_ <-& (type_cast_1821_Sample)
          type_cast_1821_sample_completed_ &-> ($null)
          type_cast_1821_update_start_ &-> (type_cast_1821_Update)
          type_cast_1821_update_completed_ <-& (type_cast_1821_Update)
          // RAW reenables for add54
          assign_stmt_1795_update_start_ o<-& (type_cast_1821_sample_completed_ 0)
          // self-release: 
          type_cast_1821_sample_start_ o<-& (type_cast_1821_sample_completed_ 1)
          $null &-> (type_cast_1821_update_start_)
          type_cast_1821_update_start_ o<-& (type_cast_1821_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1594_1594_delayed_3_0
          // start: WAR dependencies for type_cast_1594_1594_delayed_3_0
          // done: WAR dependencies for type_cast_1594_1594_delayed_3_0
          // end:  			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1821_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (type_cast_1821_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
          assign_stmt_1818_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1818_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for kx_x0
          // start:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 566
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
          // type_cast_1594_1594_delayed_3_0
          // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen81_ifx_xend83_taken
          // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend83_taken
          // Target expression
          // (as target) kx_x0
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1821_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (type_cast_1821_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
          assign_stmt_1818_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1818_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1644_sample_completed_)
          phi_stmt_1644_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for kx_x0
          // end:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 567
          // Source expression
          // ($bitcast ($uint<16>) inc69x_xix_x2 )
          $T[type_cast_1842_sample_start_] 
          $T[type_cast_1842_sample_completed_] 
          $T[type_cast_1842_update_start_] 
          $T[type_cast_1842_update_completed_] 
          // inc69x_xix_x2
          // start: Forward dependencies from inc69x_xix_x2 to transition type_cast_1842_sample_start_
          type_cast_1842_sample_start_ <-& (type_cast_1722_update_completed_)
          type_cast_1842_sample_start_ <-& (assign_stmt_1729_update_completed_)
          // done: Forward dependencies from inc69x_xix_x2 to transition type_cast_1842_sample_start_
          ;;[type_cast_1842_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1842_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1842_sample_start_ &-> (type_cast_1842_Sample)
          type_cast_1842_sample_completed_ <-& (type_cast_1842_Sample)
          type_cast_1842_sample_completed_ &-> ($null)
          type_cast_1842_update_start_ &-> (type_cast_1842_Update)
          type_cast_1842_update_completed_ <-& (type_cast_1842_Update)
          // RAW reenables for inc69x_xix_x2
          type_cast_1722_update_start_ o<-& (type_cast_1842_sample_completed_ 0)
          assign_stmt_1729_update_start_ o<-& (type_cast_1842_sample_completed_ 0)
          // self-release: 
          type_cast_1842_sample_start_ o<-& (type_cast_1842_sample_completed_ 1)
          $null &-> (type_cast_1842_update_start_)
          type_cast_1842_update_start_ o<-& (type_cast_1842_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1618_1618_delayed_1_0
          // start: WAR dependencies for type_cast_1618_1618_delayed_1_0
          // done: WAR dependencies for type_cast_1618_1618_delayed_1_0
          // end:  			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 568
          // Source expression
          // ($bitcast ($uint<16>) inc69x_xix_x2 )
          $T[type_cast_1846_sample_start_] 
          $T[type_cast_1846_sample_completed_] 
          $T[type_cast_1846_update_start_] 
          $T[type_cast_1846_update_completed_] 
          // inc69x_xix_x2
          // start: Forward dependencies from inc69x_xix_x2 to transition type_cast_1846_sample_start_
          type_cast_1846_sample_start_ <-& (type_cast_1722_update_completed_)
          type_cast_1846_sample_start_ <-& (assign_stmt_1729_update_completed_)
          // done: Forward dependencies from inc69x_xix_x2 to transition type_cast_1846_sample_start_
          ;;[type_cast_1846_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1846_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1846_sample_start_ &-> (type_cast_1846_Sample)
          type_cast_1846_sample_completed_ <-& (type_cast_1846_Sample)
          type_cast_1846_sample_completed_ &-> ($null)
          type_cast_1846_update_start_ &-> (type_cast_1846_Update)
          type_cast_1846_update_completed_ <-& (type_cast_1846_Update)
          // RAW reenables for inc69x_xix_x2
          type_cast_1722_update_start_ o<-& (type_cast_1846_sample_completed_ 0)
          assign_stmt_1729_update_start_ o<-& (type_cast_1846_sample_completed_ 0)
          // self-release: 
          type_cast_1846_sample_start_ o<-& (type_cast_1846_sample_completed_ 1)
          $null &-> (type_cast_1846_update_start_)
          type_cast_1846_update_start_ o<-& (type_cast_1846_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1615_1615_delayed_1_0
          // start: WAR dependencies for type_cast_1615_1615_delayed_1_0
          // done: WAR dependencies for type_cast_1615_1615_delayed_1_0
          // end:  			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 569
          // Source expression
          // ($bitcast ($uint<16>) ix_x2 )
          $T[type_cast_1850_sample_start_] 
          $T[type_cast_1850_sample_completed_] 
          $T[type_cast_1850_update_start_] 
          $T[type_cast_1850_update_completed_] 
          // ix_x2
          // start: Forward dependencies from ix_x2 to transition type_cast_1850_sample_start_
          type_cast_1850_sample_start_ <-& (phi_stmt_1649_update_completed_)
          // done: Forward dependencies from ix_x2 to transition type_cast_1850_sample_start_
          ;;[type_cast_1850_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1850_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1850_sample_start_ &-> (type_cast_1850_Sample)
          type_cast_1850_sample_completed_ <-& (type_cast_1850_Sample)
          type_cast_1850_sample_completed_ &-> ($null)
          type_cast_1850_update_start_ &-> (type_cast_1850_Update)
          type_cast_1850_update_completed_ <-& (type_cast_1850_Update)
          // RAW reenables for ix_x2
          phi_stmt_1649_update_start_ o<-& (type_cast_1850_sample_completed_ 0)
          // self-release: 
          type_cast_1850_sample_start_ o<-& (type_cast_1850_sample_completed_ 1)
          $null &-> (type_cast_1850_update_start_)
          type_cast_1850_update_start_ o<-& (type_cast_1850_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1612_1612_delayed_4_0
          // start: WAR dependencies for type_cast_1612_1612_delayed_4_0
          // done: WAR dependencies for type_cast_1612_1612_delayed_4_0
          // end:  			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 570
          $T[assign_stmt_1854_sample_start_] 
          $T[assign_stmt_1854_sample_completed_] 
          $T[assign_stmt_1854_update_start_] 
          $T[assign_stmt_1854_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1854_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1854_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1854_sample_start_ &-> (assign_stmt_1854_Sample)
          assign_stmt_1854_sample_completed_ <-& (assign_stmt_1854_Sample)
          assign_stmt_1854_sample_completed_ &-> ($null)
          assign_stmt_1854_update_start_ &-> (assign_stmt_1854_Update)
          assign_stmt_1854_update_completed_ <-& (assign_stmt_1854_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1854_sample_start_
          assign_stmt_1854_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1854_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1854_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend83_taken
          type_cast_1663_update_start_ o<-& (assign_stmt_1854_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1854_sample_completed_ 0)
          // self-release: 
          assign_stmt_1854_sample_start_ o<-& (assign_stmt_1854_sample_completed_ 1)
          $null &-> (assign_stmt_1854_update_start_)
          assign_stmt_1854_update_start_ o<-& (assign_stmt_1854_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
          // end:  			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1854_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1854_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1850_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1850_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1846_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1846_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_1842_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1842_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ix_x1
          // start:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 571
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
          // type_cast_1612_1612_delayed_4_0
          // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen81_ifx_xend83_taken
          // type_cast_1615_1615_delayed_1_0
          // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend83_taken
          // type_cast_1618_1618_delayed_1_0
          // Target expression
          // (as target) ix_x1
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1854_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1854_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1850_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1850_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1846_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1846_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1842_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1842_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1649_sample_completed_)
          phi_stmt_1649_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ix_x1
          // end:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 572
          $T[assign_stmt_1870_sample_start_] 
          $T[assign_stmt_1870_sample_completed_] 
          $T[assign_stmt_1870_update_start_] 
          $T[assign_stmt_1870_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1870_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1870_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1870_sample_start_ &-> (assign_stmt_1870_Sample)
          assign_stmt_1870_sample_completed_ <-& (assign_stmt_1870_Sample)
          assign_stmt_1870_sample_completed_ &-> ($null)
          assign_stmt_1870_update_start_ &-> (assign_stmt_1870_Update)
          assign_stmt_1870_update_completed_ <-& (assign_stmt_1870_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1870_sample_start_
          assign_stmt_1870_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1870_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1870_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend83_taken
          type_cast_1663_update_start_ o<-& (assign_stmt_1870_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1870_sample_completed_ 0)
          // self-release: 
          assign_stmt_1870_sample_start_ o<-& (assign_stmt_1870_sample_completed_ 1)
          $null &-> (assign_stmt_1870_update_start_)
          assign_stmt_1870_update_start_ o<-& (assign_stmt_1870_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
          // end:  			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 573
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_1873_sample_start_] 
          $T[type_cast_1873_sample_completed_] 
          $T[type_cast_1873_update_start_] 
          $T[type_cast_1873_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_1873_sample_start_
          type_cast_1873_sample_start_ <-& (assign_stmt_1741_update_completed_)
          type_cast_1873_sample_start_ <-& (type_cast_1705_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_1873_sample_start_
          ;;[type_cast_1873_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1873_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1873_sample_start_ &-> (type_cast_1873_Sample)
          type_cast_1873_sample_completed_ <-& (type_cast_1873_Sample)
          type_cast_1873_sample_completed_ &-> ($null)
          type_cast_1873_update_start_ &-> (type_cast_1873_Update)
          type_cast_1873_update_completed_ <-& (type_cast_1873_Update)
          // RAW reenables for jx_x2
          assign_stmt_1741_update_start_ o<-& (type_cast_1873_sample_completed_ 0)
          type_cast_1705_update_start_ o<-& (type_cast_1873_sample_completed_ 0)
          // self-release: 
          type_cast_1873_sample_start_ o<-& (type_cast_1873_sample_completed_ 1)
          $null &-> (type_cast_1873_update_start_)
          type_cast_1873_update_start_ o<-& (type_cast_1873_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1634_1634_delayed_2_0
          // start: WAR dependencies for type_cast_1634_1634_delayed_2_0
          // done: WAR dependencies for type_cast_1634_1634_delayed_2_0
          // end:  			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 574
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_1877_sample_start_] 
          $T[type_cast_1877_sample_completed_] 
          $T[type_cast_1877_update_start_] 
          $T[type_cast_1877_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_1877_sample_start_
          type_cast_1877_sample_start_ <-& (assign_stmt_1741_update_completed_)
          type_cast_1877_sample_start_ <-& (type_cast_1705_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_1877_sample_start_
          ;;[type_cast_1877_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1877_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1877_sample_start_ &-> (type_cast_1877_Sample)
          type_cast_1877_sample_completed_ <-& (type_cast_1877_Sample)
          type_cast_1877_sample_completed_ &-> ($null)
          type_cast_1877_update_start_ &-> (type_cast_1877_Update)
          type_cast_1877_update_completed_ <-& (type_cast_1877_Update)
          // RAW reenables for jx_x2
          assign_stmt_1741_update_start_ o<-& (type_cast_1877_sample_completed_ 0)
          type_cast_1705_update_start_ o<-& (type_cast_1877_sample_completed_ 0)
          // self-release: 
          type_cast_1877_sample_start_ o<-& (type_cast_1877_sample_completed_ 1)
          $null &-> (type_cast_1877_update_start_)
          type_cast_1877_update_start_ o<-& (type_cast_1877_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1631_1631_delayed_2_0
          // start: WAR dependencies for type_cast_1631_1631_delayed_2_0
          // done: WAR dependencies for type_cast_1631_1631_delayed_2_0
          // end:  			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 575
          // Source expression
          // ($bitcast ($uint<16>) jx_x1 )
          $T[type_cast_1881_sample_start_] 
          $T[type_cast_1881_sample_completed_] 
          $T[type_cast_1881_update_start_] 
          $T[type_cast_1881_update_completed_] 
          // jx_x1
          // start: Forward dependencies from jx_x1 to transition type_cast_1881_sample_start_
          type_cast_1881_sample_start_ <-& (phi_stmt_1654_update_completed_)
          // done: Forward dependencies from jx_x1 to transition type_cast_1881_sample_start_
          ;;[type_cast_1881_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1881_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1881_sample_start_ &-> (type_cast_1881_Sample)
          type_cast_1881_sample_completed_ <-& (type_cast_1881_Sample)
          type_cast_1881_sample_completed_ &-> ($null)
          type_cast_1881_update_start_ &-> (type_cast_1881_Update)
          type_cast_1881_update_completed_ <-& (type_cast_1881_Update)
          // RAW reenables for jx_x1
          phi_stmt_1654_update_start_ o<-& (type_cast_1881_sample_completed_ 0)
          // self-release: 
          type_cast_1881_sample_start_ o<-& (type_cast_1881_sample_completed_ 1)
          $null &-> (type_cast_1881_update_start_)
          type_cast_1881_update_start_ o<-& (type_cast_1881_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1628_1628_delayed_4_0
          // start: WAR dependencies for type_cast_1628_1628_delayed_4_0
          // done: WAR dependencies for type_cast_1628_1628_delayed_4_0
          // end:  			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          type_cast_1881_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1881_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1877_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1877_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1873_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1873_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          assign_stmt_1870_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1870_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for jx_x0
          // start:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 576
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
          // type_cast_1628_1628_delayed_4_0
          // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen81_ifx_xend83_taken
          // type_cast_1631_1631_delayed_2_0
          // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend83_taken
          // type_cast_1634_1634_delayed_2_0
          // Target expression
          // (as target) jx_x0
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          assign_stmt_1777_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1777_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_1769_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1769_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_1756_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1756_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          type_cast_1881_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1881_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_1877_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1877_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_1873_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (type_cast_1873_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          assign_stmt_1870_update_start_ <-& (phi_stmt_1654_sample_completed_)
          phi_stmt_1654_sample_start_ o<-& (assign_stmt_1870_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for jx_x0
          // end:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 577
          $T[assign_stmt_1898_sample_start_] 
          $T[assign_stmt_1898_sample_completed_] 
          $T[assign_stmt_1898_update_start_] 
          $T[assign_stmt_1898_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend83_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1898_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1898_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1898_sample_start_ &-> (assign_stmt_1898_Sample)
          assign_stmt_1898_sample_completed_ <-& (assign_stmt_1898_Sample)
          assign_stmt_1898_sample_completed_ &-> ($null)
          assign_stmt_1898_update_start_ &-> (assign_stmt_1898_Update)
          assign_stmt_1898_update_completed_ <-& (assign_stmt_1898_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1898_sample_start_
          assign_stmt_1898_sample_start_ <-& (type_cast_1663_update_completed_)
          assign_stmt_1898_sample_start_ <-& (type_cast_1673_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend83_taken to transition assign_stmt_1898_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend83_taken
          type_cast_1663_update_start_ o<-& (assign_stmt_1898_sample_completed_ 0)
          type_cast_1673_update_start_ o<-& (assign_stmt_1898_sample_completed_ 0)
          // self-release: 
          assign_stmt_1898_sample_start_ o<-& (assign_stmt_1898_sample_completed_ 1)
          $null &-> (assign_stmt_1898_update_start_)
          assign_stmt_1898_update_start_ o<-& (assign_stmt_1898_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
          // end:  			ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // start:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 578
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
          // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen81_ifx_xend83_taken
          // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend83_taken
          // Target expression
          // (as target) flagx_x0
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // end:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			$guard (ifx_xend83_exec_guard) conv87174 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 579
          // Guard expression 
          // ifx_xend83_exec_guard
          // Source expression
          // ($cast ($uint<32>) kx_x0 )
          $T[type_cast_1921_sample_start_] 
          $T[type_cast_1921_sample_completed_] 
          $T[type_cast_1921_update_start_] 
          $T[type_cast_1921_update_completed_] 
          // Guard dependency for expression type_cast_1921 with guard R_ifx_xend83_exec_guard_1918
          type_cast_1921_sample_start_ <-& (assign_stmt_1808_update_completed_)
          type_cast_1921_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1921_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1921_sample_start_ <-& (type_cast_1756_update_completed_)
          // root assign_stmt_1568 of guard-expression not in visited elements.
          // root assign_stmt_1592 of guard-expression not in visited elements.
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_1921_sample_start_
          type_cast_1921_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1921_sample_start_ <-& (type_cast_1821_update_completed_)
          type_cast_1921_sample_start_ <-& (assign_stmt_1818_update_completed_)
          type_cast_1921_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1921_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from kx_x0 to transition type_cast_1921_sample_start_
          ;;[type_cast_1921_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1921_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1921_sample_start_ &-> (type_cast_1921_Sample)
          type_cast_1921_sample_completed_ <-& (type_cast_1921_Sample)
          type_cast_1921_sample_completed_ &-> ($null)
          type_cast_1921_update_start_ &-> (type_cast_1921_Update)
          type_cast_1921_update_completed_ <-& (type_cast_1921_Update)
          // RAW reenables for kx_x0
          assign_stmt_1777_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          type_cast_1821_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          assign_stmt_1818_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1921_sample_completed_ 0)
          // self-release: 
          type_cast_1921_sample_start_ o<-& (type_cast_1921_sample_completed_ 1)
          $null &-> (type_cast_1921_update_start_)
          type_cast_1921_update_start_ o<-& (type_cast_1921_update_completed_ 0)
          // Target expression
          // (as target) conv87174
          // start: WAR dependencies for conv87174
          // done: WAR dependencies for conv87174
          // end:  			$guard (ifx_xend83_exec_guard) conv87174 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xend83_exec_guard) conv91 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 580
          // Guard expression 
          // ifx_xend83_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
          $T[type_cast_1927_sample_start_] 
          $T[type_cast_1927_sample_completed_] 
          $T[type_cast_1927_update_start_] 
          $T[type_cast_1927_update_completed_] 
          // Guard dependency for expression type_cast_1927 with guard R_ifx_xend83_exec_guard_1923
          type_cast_1927_sample_start_ <-& (assign_stmt_1808_update_completed_)
          type_cast_1927_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1927_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1927_sample_start_ <-& (type_cast_1756_update_completed_)
          // root assign_stmt_1568 of guard-expression not in visited elements.
          // root assign_stmt_1592 of guard-expression not in visited elements.
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          // ($cast ($int<32>) jx_x0 )
          // jx_x0
          // start: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_1927_sample_start_
          type_cast_1927_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1927_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1927_sample_start_ <-& (type_cast_1756_update_completed_)
          type_cast_1927_sample_start_ <-& (type_cast_1881_update_completed_)
          type_cast_1927_sample_start_ <-& (type_cast_1877_update_completed_)
          type_cast_1927_sample_start_ <-& (type_cast_1873_update_completed_)
          type_cast_1927_sample_start_ <-& (assign_stmt_1870_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_1927_sample_start_
          ;;[type_cast_1927_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1927_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1927_sample_start_ &-> (type_cast_1927_Sample)
          type_cast_1927_sample_completed_ <-& (type_cast_1927_Sample)
          type_cast_1927_sample_completed_ &-> ($null)
          type_cast_1927_update_start_ &-> (type_cast_1927_Update)
          type_cast_1927_update_completed_ <-& (type_cast_1927_Update)
          // RAW reenables for ($cast ($int<32>) jx_x0 )
          assign_stmt_1777_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          type_cast_1881_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          type_cast_1877_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          type_cast_1873_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          assign_stmt_1870_update_start_ o<-& (type_cast_1927_sample_completed_ 0)
          // self-release: 
          type_cast_1927_sample_start_ o<-& (type_cast_1927_sample_completed_ 1)
          $null &-> (type_cast_1927_update_start_)
          type_cast_1927_update_start_ o<-& (type_cast_1927_update_completed_ 0)
          // Target expression
          // (as target) conv91
          // start: WAR dependencies for conv91
          // done: WAR dependencies for conv91
          // end:  			$guard (ifx_xend83_exec_guard) conv91 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend83_exec_guard_1671_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 581
          $T[assign_stmt_1931_sample_start_] 
          $T[assign_stmt_1931_sample_completed_] 
          $T[assign_stmt_1931_update_start_] 
          $T[assign_stmt_1931_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1671_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1931_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1931_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1931_sample_start_ &-> (assign_stmt_1931_Sample)
          assign_stmt_1931_sample_completed_ <-& (assign_stmt_1931_Sample)
          assign_stmt_1931_sample_completed_ &-> ($null)
          assign_stmt_1931_update_start_ &-> (assign_stmt_1931_Update)
          assign_stmt_1931_update_completed_ <-& (assign_stmt_1931_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1931_sample_start_
          assign_stmt_1931_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1931_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1931_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1931_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1931_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1931_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1931_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1931_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1931_sample_completed_ 0)
          // self-release: 
          assign_stmt_1931_sample_start_ o<-& (assign_stmt_1931_sample_completed_ 1)
          $null &-> (assign_stmt_1931_update_start_)
          assign_stmt_1931_update_start_ o<-& (assign_stmt_1931_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1671_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1671_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1671_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul92
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul92
          // start:  			$guard (ifx_xend83_exec_guard_1671_delayed_1_0) $volatile mul92 := (conv91 * conv38) $buffering 1
          //  file prog.linked.opt.aa, line 582
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1671_delayed_1_0
          // Source expression
          // (conv91 * conv38)
          // conv91
          // conv38
          // Target expression
          // (as target) mul92
          // start: WAR dependencies for mul92
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul92
          // end:  			$guard (ifx_xend83_exec_guard_1671_delayed_1_0) $volatile mul92 := (conv91 * conv38) $buffering 1
          // start:  			$guard (ifx_xend83_exec_guard) conv97 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 583
          // Guard expression 
          // ifx_xend83_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
          $T[type_cast_1942_sample_start_] 
          $T[type_cast_1942_sample_completed_] 
          $T[type_cast_1942_update_start_] 
          $T[type_cast_1942_update_completed_] 
          // Guard dependency for expression type_cast_1942 with guard R_ifx_xend83_exec_guard_1938
          type_cast_1942_sample_start_ <-& (assign_stmt_1808_update_completed_)
          type_cast_1942_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1942_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1942_sample_start_ <-& (type_cast_1756_update_completed_)
          // root assign_stmt_1568 of guard-expression not in visited elements.
          // root assign_stmt_1592 of guard-expression not in visited elements.
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          // ($cast ($int<32>) ix_x1 )
          // ix_x1
          // start: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_1942_sample_start_
          type_cast_1942_sample_start_ <-& (assign_stmt_1777_update_completed_)
          type_cast_1942_sample_start_ <-& (assign_stmt_1854_update_completed_)
          type_cast_1942_sample_start_ <-& (type_cast_1850_update_completed_)
          type_cast_1942_sample_start_ <-& (type_cast_1846_update_completed_)
          type_cast_1942_sample_start_ <-& (type_cast_1842_update_completed_)
          type_cast_1942_sample_start_ <-& (assign_stmt_1769_update_completed_)
          type_cast_1942_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_1942_sample_start_
          ;;[type_cast_1942_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1942_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1942_sample_start_ &-> (type_cast_1942_Sample)
          type_cast_1942_sample_completed_ <-& (type_cast_1942_Sample)
          type_cast_1942_sample_completed_ &-> ($null)
          type_cast_1942_update_start_ &-> (type_cast_1942_Update)
          type_cast_1942_update_completed_ <-& (type_cast_1942_Update)
          // RAW reenables for ($cast ($int<32>) ix_x1 )
          assign_stmt_1777_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          assign_stmt_1854_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          type_cast_1850_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          type_cast_1846_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          type_cast_1842_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (type_cast_1942_sample_completed_ 0)
          // self-release: 
          type_cast_1942_sample_start_ o<-& (type_cast_1942_sample_completed_ 1)
          $null &-> (type_cast_1942_update_start_)
          type_cast_1942_update_start_ o<-& (type_cast_1942_update_completed_ 0)
          // Target expression
          // (as target) conv97
          // start: WAR dependencies for conv97
          // done: WAR dependencies for conv97
          // end:  			$guard (ifx_xend83_exec_guard) conv97 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend83_exec_guard_1683_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 584
          $T[assign_stmt_1946_sample_start_] 
          $T[assign_stmt_1946_sample_completed_] 
          $T[assign_stmt_1946_update_start_] 
          $T[assign_stmt_1946_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1683_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1946_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1946_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1946_sample_start_ &-> (assign_stmt_1946_Sample)
          assign_stmt_1946_sample_completed_ <-& (assign_stmt_1946_Sample)
          assign_stmt_1946_sample_completed_ &-> ($null)
          assign_stmt_1946_update_start_ &-> (assign_stmt_1946_Update)
          assign_stmt_1946_update_completed_ <-& (assign_stmt_1946_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1946_sample_start_
          assign_stmt_1946_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1946_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1946_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1946_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1946_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1946_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1946_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1946_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1946_sample_completed_ 0)
          // self-release: 
          assign_stmt_1946_sample_start_ o<-& (assign_stmt_1946_sample_completed_ 1)
          $null &-> (assign_stmt_1946_update_start_)
          assign_stmt_1946_update_start_ o<-& (assign_stmt_1946_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1683_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1683_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1683_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul98
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul98
          // start:  			$guard (ifx_xend83_exec_guard_1683_delayed_1_0) $volatile mul98 := (conv97 * conv95) $buffering 1
          //  file prog.linked.opt.aa, line 585
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1683_delayed_1_0
          // Source expression
          // (conv97 * conv95)
          // conv97
          // conv95
          // Target expression
          // (as target) mul98
          // start: WAR dependencies for mul98
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul98
          // end:  			$guard (ifx_xend83_exec_guard_1683_delayed_1_0) $volatile mul98 := (conv97 * conv95) $buffering 1
          // start:  			ifx_xend83_exec_guard_1689_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 586
          $T[assign_stmt_1955_sample_start_] 
          $T[assign_stmt_1955_sample_completed_] 
          $T[assign_stmt_1955_update_start_] 
          $T[assign_stmt_1955_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1689_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1955_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1955_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1955_sample_start_ &-> (assign_stmt_1955_Sample)
          assign_stmt_1955_sample_completed_ <-& (assign_stmt_1955_Sample)
          assign_stmt_1955_sample_completed_ &-> ($null)
          assign_stmt_1955_update_start_ &-> (assign_stmt_1955_Update)
          assign_stmt_1955_update_completed_ <-& (assign_stmt_1955_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1955_sample_start_
          assign_stmt_1955_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1955_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1955_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1955_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1955_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1955_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1955_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1955_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1955_sample_completed_ 0)
          // self-release: 
          assign_stmt_1955_sample_start_ o<-& (assign_stmt_1955_sample_completed_ 1)
          $null &-> (assign_stmt_1955_update_start_)
          assign_stmt_1955_update_start_ o<-& (assign_stmt_1955_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1689_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1689_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1689_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add93
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add93
          // start:  			$guard (ifx_xend83_exec_guard_1689_delayed_1_0) $volatile add93 := (mul98 + conv87174) $buffering 1
          //  file prog.linked.opt.aa, line 587
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1689_delayed_1_0
          // Source expression
          // (mul98 + conv87174)
          // mul98
          // conv87174
          // Target expression
          // (as target) add93
          // start: WAR dependencies for add93
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add93
          // end:  			$guard (ifx_xend83_exec_guard_1689_delayed_1_0) $volatile add93 := (mul98 + conv87174) $buffering 1
          // start:  			ifx_xend83_exec_guard_1695_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 588
          $T[assign_stmt_1964_sample_start_] 
          $T[assign_stmt_1964_sample_completed_] 
          $T[assign_stmt_1964_update_start_] 
          $T[assign_stmt_1964_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1695_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1964_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1964_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1964_sample_start_ &-> (assign_stmt_1964_Sample)
          assign_stmt_1964_sample_completed_ <-& (assign_stmt_1964_Sample)
          assign_stmt_1964_sample_completed_ &-> ($null)
          assign_stmt_1964_update_start_ &-> (assign_stmt_1964_Update)
          assign_stmt_1964_update_completed_ <-& (assign_stmt_1964_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1964_sample_start_
          assign_stmt_1964_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1964_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1964_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1964_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1964_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1964_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1964_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1964_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1964_sample_completed_ 0)
          // self-release: 
          assign_stmt_1964_sample_start_ o<-& (assign_stmt_1964_sample_completed_ 1)
          $null &-> (assign_stmt_1964_update_start_)
          assign_stmt_1964_update_start_ o<-& (assign_stmt_1964_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1695_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1695_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1695_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add99
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add99
          // start:  			$guard (ifx_xend83_exec_guard_1695_delayed_1_0) $volatile add99 := (add93 + mul92) $buffering 1
          //  file prog.linked.opt.aa, line 589
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1695_delayed_1_0
          // Source expression
          // (add93 + mul92)
          // add93
          // mul92
          // Target expression
          // (as target) add99
          // start: WAR dependencies for add99
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add99
          // end:  			$guard (ifx_xend83_exec_guard_1695_delayed_1_0) $volatile add99 := (add93 + mul92) $buffering 1
          // start:  			ifx_xend83_exec_guard_1701_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 590
          $T[assign_stmt_1973_sample_start_] 
          $T[assign_stmt_1973_sample_completed_] 
          $T[assign_stmt_1973_update_start_] 
          $T[assign_stmt_1973_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1701_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1973_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1973_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1973_sample_start_ &-> (assign_stmt_1973_Sample)
          assign_stmt_1973_sample_completed_ <-& (assign_stmt_1973_Sample)
          assign_stmt_1973_sample_completed_ &-> ($null)
          assign_stmt_1973_update_start_ &-> (assign_stmt_1973_Update)
          assign_stmt_1973_update_completed_ <-& (assign_stmt_1973_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1973_sample_start_
          assign_stmt_1973_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1973_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1973_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1973_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1973_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1973_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1973_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1973_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1973_sample_completed_ 0)
          // self-release: 
          assign_stmt_1973_sample_start_ o<-& (assign_stmt_1973_sample_completed_ 1)
          $null &-> (assign_stmt_1973_update_start_)
          assign_stmt_1973_update_start_ o<-& (assign_stmt_1973_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1701_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1701_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1701_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xend83_exec_guard_1701_delayed_1_0) conv100 := ($cast ($uint<16>) add99 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 591
          // Guard expression 
          // ifx_xend83_exec_guard_1701_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) add99 )
          $T[type_cast_1977_sample_start_] 
          $T[type_cast_1977_sample_completed_] 
          $T[type_cast_1977_update_start_] 
          $T[type_cast_1977_update_completed_] 
          // Guard dependency for expression type_cast_1977 with guard R_ifx_xend83_exec_guard_1701_delayed_1_0_1974
          type_cast_1977_sample_start_ <-& (assign_stmt_1973_update_completed_)
          // RAW reenables for ifx_xend83_exec_guard_1701_delayed_1_0
          assign_stmt_1973_update_start_ o<-& (type_cast_1977_sample_completed_ 0)
          // add99
          // start: Forward dependencies from add99 to transition type_cast_1977_sample_start_
          type_cast_1977_sample_start_ <-& (type_cast_1942_update_completed_)
          type_cast_1977_sample_start_ <-& (type_cast_1927_update_completed_)
          type_cast_1977_sample_start_ <-& (type_cast_1921_update_completed_)
          // done: Forward dependencies from add99 to transition type_cast_1977_sample_start_
          ;;[type_cast_1977_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1977_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1977_sample_start_ &-> (type_cast_1977_Sample)
          type_cast_1977_sample_completed_ <-& (type_cast_1977_Sample)
          type_cast_1977_sample_completed_ &-> ($null)
          type_cast_1977_update_start_ &-> (type_cast_1977_Update)
          type_cast_1977_update_completed_ <-& (type_cast_1977_Update)
          // RAW reenables for add99
          type_cast_1942_update_start_ o<-& (type_cast_1977_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (type_cast_1977_sample_completed_ 0)
          type_cast_1921_update_start_ o<-& (type_cast_1977_sample_completed_ 0)
          // self-release: 
          type_cast_1977_sample_start_ o<-& (type_cast_1977_sample_completed_ 1)
          $null &-> (type_cast_1977_update_start_)
          type_cast_1977_update_start_ o<-& (type_cast_1977_update_completed_ 0)
          // Target expression
          // (as target) conv100
          // start: WAR dependencies for conv100
          // done: WAR dependencies for conv100
          // end:  			$guard (ifx_xend83_exec_guard_1701_delayed_1_0) conv100 := ($cast ($uint<16>) add99 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xend83_exec_guard_1706_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 592
          $T[assign_stmt_1981_sample_start_] 
          $T[assign_stmt_1981_sample_completed_] 
          $T[assign_stmt_1981_update_start_] 
          $T[assign_stmt_1981_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1706_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1981_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1981_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1981_sample_start_ &-> (assign_stmt_1981_Sample)
          assign_stmt_1981_sample_completed_ <-& (assign_stmt_1981_Sample)
          assign_stmt_1981_sample_completed_ &-> ($null)
          assign_stmt_1981_update_start_ &-> (assign_stmt_1981_Update)
          assign_stmt_1981_update_completed_ <-& (assign_stmt_1981_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1981_sample_start_
          assign_stmt_1981_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1981_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1981_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1981_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1981_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1981_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1981_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1981_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1981_sample_completed_ 0)
          // self-release: 
          assign_stmt_1981_sample_start_ o<-& (assign_stmt_1981_sample_completed_ 1)
          $null &-> (assign_stmt_1981_update_start_)
          assign_stmt_1981_update_start_ o<-& (assign_stmt_1981_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1706_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1706_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1706_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // start:  			$guard (ifx_xend83_exec_guard_1706_delayed_1_0) $volatile sub := (conv91 - conv109) $buffering 1
          //  file prog.linked.opt.aa, line 593
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1706_delayed_1_0
          // Source expression
          // (conv91 - conv109)
          // conv91
          // conv109
          // Target expression
          // (as target) sub
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // end:  			$guard (ifx_xend83_exec_guard_1706_delayed_1_0) $volatile sub := (conv91 - conv109) $buffering 1
          // start:  			ifx_xend83_exec_guard_1712_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 594
          $T[assign_stmt_1990_sample_start_] 
          $T[assign_stmt_1990_sample_completed_] 
          $T[assign_stmt_1990_update_start_] 
          $T[assign_stmt_1990_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1712_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1990_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1990_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1990_sample_start_ &-> (assign_stmt_1990_Sample)
          assign_stmt_1990_sample_completed_ <-& (assign_stmt_1990_Sample)
          assign_stmt_1990_sample_completed_ &-> ($null)
          assign_stmt_1990_update_start_ &-> (assign_stmt_1990_Update)
          assign_stmt_1990_update_completed_ <-& (assign_stmt_1990_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1990_sample_start_
          assign_stmt_1990_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1990_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1990_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1990_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1990_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1990_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1990_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1990_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1990_sample_completed_ 0)
          // self-release: 
          assign_stmt_1990_sample_start_ o<-& (assign_stmt_1990_sample_completed_ 1)
          $null &-> (assign_stmt_1990_update_start_)
          assign_stmt_1990_update_start_ o<-& (assign_stmt_1990_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1712_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1712_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1712_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul110
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul110
          // start:  			$guard (ifx_xend83_exec_guard_1712_delayed_1_0) $volatile mul110 := (sub * conv32) $buffering 1
          //  file prog.linked.opt.aa, line 595
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1712_delayed_1_0
          // Source expression
          // (sub * conv32)
          // sub
          // conv32
          // Target expression
          // (as target) mul110
          // start: WAR dependencies for mul110
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul110
          // end:  			$guard (ifx_xend83_exec_guard_1712_delayed_1_0) $volatile mul110 := (sub * conv32) $buffering 1
          // start:  			ifx_xend83_exec_guard_1718_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 596
          $T[assign_stmt_1999_sample_start_] 
          $T[assign_stmt_1999_sample_completed_] 
          $T[assign_stmt_1999_update_start_] 
          $T[assign_stmt_1999_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1718_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1999_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1999_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1999_sample_start_ &-> (assign_stmt_1999_Sample)
          assign_stmt_1999_sample_completed_ <-& (assign_stmt_1999_Sample)
          assign_stmt_1999_sample_completed_ &-> ($null)
          assign_stmt_1999_update_start_ &-> (assign_stmt_1999_Update)
          assign_stmt_1999_update_completed_ <-& (assign_stmt_1999_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1999_sample_start_
          assign_stmt_1999_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_1999_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_1999_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_1999_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_1999_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_1999_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_1999_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_1999_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_1999_sample_completed_ 0)
          // self-release: 
          assign_stmt_1999_sample_start_ o<-& (assign_stmt_1999_sample_completed_ 1)
          $null &-> (assign_stmt_1999_update_start_)
          assign_stmt_1999_update_start_ o<-& (assign_stmt_1999_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1718_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1718_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1718_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub118
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub118
          // start:  			$guard (ifx_xend83_exec_guard_1718_delayed_1_0) $volatile sub118 := (conv97 - conv109) $buffering 1
          //  file prog.linked.opt.aa, line 597
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1718_delayed_1_0
          // Source expression
          // (conv97 - conv109)
          // conv97
          // conv109
          // Target expression
          // (as target) sub118
          // start: WAR dependencies for sub118
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub118
          // end:  			$guard (ifx_xend83_exec_guard_1718_delayed_1_0) $volatile sub118 := (conv97 - conv109) $buffering 1
          // start:  			ifx_xend83_exec_guard_1724_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 598
          $T[assign_stmt_2008_sample_start_] 
          $T[assign_stmt_2008_sample_completed_] 
          $T[assign_stmt_2008_update_start_] 
          $T[assign_stmt_2008_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1724_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2008_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2008_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2008_sample_start_ &-> (assign_stmt_2008_Sample)
          assign_stmt_2008_sample_completed_ <-& (assign_stmt_2008_Sample)
          assign_stmt_2008_sample_completed_ &-> ($null)
          assign_stmt_2008_update_start_ &-> (assign_stmt_2008_Update)
          assign_stmt_2008_update_completed_ <-& (assign_stmt_2008_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2008_sample_start_
          assign_stmt_2008_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2008_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2008_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2008_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2008_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2008_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2008_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2008_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2008_sample_completed_ 0)
          // self-release: 
          assign_stmt_2008_sample_start_ o<-& (assign_stmt_2008_sample_completed_ 1)
          $null &-> (assign_stmt_2008_update_start_)
          assign_stmt_2008_update_start_ o<-& (assign_stmt_2008_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1724_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1724_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1724_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul119
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul119
          // start:  			$guard (ifx_xend83_exec_guard_1724_delayed_1_0) $volatile mul119 := (sub118 * conv113) $buffering 1
          //  file prog.linked.opt.aa, line 599
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1724_delayed_1_0
          // Source expression
          // (sub118 * conv113)
          // sub118
          // conv113
          // Target expression
          // (as target) mul119
          // start: WAR dependencies for mul119
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul119
          // end:  			$guard (ifx_xend83_exec_guard_1724_delayed_1_0) $volatile mul119 := (sub118 * conv113) $buffering 1
          // start:  			ifx_xend83_exec_guard_1730_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 600
          $T[assign_stmt_2017_sample_start_] 
          $T[assign_stmt_2017_sample_completed_] 
          $T[assign_stmt_2017_update_start_] 
          $T[assign_stmt_2017_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1730_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2017_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2017_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2017_sample_start_ &-> (assign_stmt_2017_Sample)
          assign_stmt_2017_sample_completed_ <-& (assign_stmt_2017_Sample)
          assign_stmt_2017_sample_completed_ &-> ($null)
          assign_stmt_2017_update_start_ &-> (assign_stmt_2017_Update)
          assign_stmt_2017_update_completed_ <-& (assign_stmt_2017_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2017_sample_start_
          assign_stmt_2017_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2017_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2017_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2017_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2017_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2017_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2017_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2017_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2017_sample_completed_ 0)
          // self-release: 
          assign_stmt_2017_sample_start_ o<-& (assign_stmt_2017_sample_completed_ 1)
          $null &-> (assign_stmt_2017_update_start_)
          assign_stmt_2017_update_start_ o<-& (assign_stmt_2017_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1730_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1730_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1730_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add111
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add111
          // start:  			$guard (ifx_xend83_exec_guard_1730_delayed_1_0) $volatile add111 := (mul119 + conv87174) $buffering 1
          //  file prog.linked.opt.aa, line 601
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1730_delayed_1_0
          // Source expression
          // (mul119 + conv87174)
          // mul119
          // conv87174
          // Target expression
          // (as target) add111
          // start: WAR dependencies for add111
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add111
          // end:  			$guard (ifx_xend83_exec_guard_1730_delayed_1_0) $volatile add111 := (mul119 + conv87174) $buffering 1
          // start:  			ifx_xend83_exec_guard_1736_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 602
          $T[assign_stmt_2026_sample_start_] 
          $T[assign_stmt_2026_sample_completed_] 
          $T[assign_stmt_2026_update_start_] 
          $T[assign_stmt_2026_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1736_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2026_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2026_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2026_sample_start_ &-> (assign_stmt_2026_Sample)
          assign_stmt_2026_sample_completed_ <-& (assign_stmt_2026_Sample)
          assign_stmt_2026_sample_completed_ &-> ($null)
          assign_stmt_2026_update_start_ &-> (assign_stmt_2026_Update)
          assign_stmt_2026_update_completed_ <-& (assign_stmt_2026_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2026_sample_start_
          assign_stmt_2026_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2026_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2026_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2026_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2026_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2026_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2026_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2026_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2026_sample_completed_ 0)
          // self-release: 
          assign_stmt_2026_sample_start_ o<-& (assign_stmt_2026_sample_completed_ 1)
          $null &-> (assign_stmt_2026_update_start_)
          assign_stmt_2026_update_start_ o<-& (assign_stmt_2026_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1736_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1736_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1736_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add120
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add120
          // start:  			$guard (ifx_xend83_exec_guard_1736_delayed_1_0) $volatile add120 := (add111 + mul110) $buffering 1
          //  file prog.linked.opt.aa, line 603
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1736_delayed_1_0
          // Source expression
          // (add111 + mul110)
          // add111
          // mul110
          // Target expression
          // (as target) add120
          // start: WAR dependencies for add120
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add120
          // end:  			$guard (ifx_xend83_exec_guard_1736_delayed_1_0) $volatile add120 := (add111 + mul110) $buffering 1
          // start:  			type_cast_1747_1747_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 604
          // Source expression
          // ($bitcast ($int<32>) conv109 )
          $T[type_cast_2035_sample_start_] 
          $T[type_cast_2035_sample_completed_] 
          $T[type_cast_2035_update_start_] 
          $T[type_cast_2035_update_completed_] 
          // conv109
          // start: Forward dependencies from conv109 to transition type_cast_2035_sample_start_
          // done: Forward dependencies from conv109 to transition type_cast_2035_sample_start_
          ;;[type_cast_2035_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2035_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2035_sample_start_ &-> (type_cast_2035_Sample)
          type_cast_2035_sample_completed_ <-& (type_cast_2035_Sample)
          type_cast_2035_sample_completed_ &-> ($null)
          type_cast_2035_update_start_ &-> (type_cast_2035_Update)
          type_cast_2035_update_completed_ <-& (type_cast_2035_Update)
          // RAW reenables for conv109
          // self-release: 
          type_cast_2035_sample_start_ o<-& (type_cast_2035_sample_completed_ 1)
          $null &-> (type_cast_2035_update_start_)
          type_cast_2035_update_start_ o<-& (type_cast_2035_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1747_1747_delayed_1_0
          // start: WAR dependencies for type_cast_1747_1747_delayed_1_0
          // done: WAR dependencies for type_cast_1747_1747_delayed_1_0
          // end:  			type_cast_1747_1747_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start:  			ifx_xend83_exec_guard_1742_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 605
          $T[assign_stmt_2039_sample_start_] 
          $T[assign_stmt_2039_sample_completed_] 
          $T[assign_stmt_2039_update_start_] 
          $T[assign_stmt_2039_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1742_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2039_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2039_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2039_sample_start_ &-> (assign_stmt_2039_Sample)
          assign_stmt_2039_sample_completed_ <-& (assign_stmt_2039_Sample)
          assign_stmt_2039_sample_completed_ &-> ($null)
          assign_stmt_2039_update_start_ &-> (assign_stmt_2039_Update)
          assign_stmt_2039_update_completed_ <-& (assign_stmt_2039_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2039_sample_start_
          assign_stmt_2039_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2039_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2039_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2039_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2039_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2039_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2039_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2039_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2039_sample_completed_ 0)
          // self-release: 
          assign_stmt_2039_sample_start_ o<-& (assign_stmt_2039_sample_completed_ 1)
          $null &-> (assign_stmt_2039_update_start_)
          assign_stmt_2039_update_start_ o<-& (assign_stmt_2039_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1742_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1742_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1742_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp126
          // done: WAR dependencies for cmp126
          // start:  			$guard (ifx_xend83_exec_guard_1742_delayed_1_0) $volatile cmp126 := (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 606
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1742_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0)
          // ($bitcast ($int<32>) conv97 )
          // conv97
          // type_cast_1747_1747_delayed_1_0
          // Target expression
          // (as target) cmp126
          // start: WAR dependencies for cmp126
          // done: WAR dependencies for cmp126
          // end:  			$guard (ifx_xend83_exec_guard_1742_delayed_1_0) $volatile cmp126 := (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0) $buffering 1
          // start:  			ifx_xend83_exec_guard_1750_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 607
          $T[assign_stmt_2049_sample_start_] 
          $T[assign_stmt_2049_sample_completed_] 
          $T[assign_stmt_2049_update_start_] 
          $T[assign_stmt_2049_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1750_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2049_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2049_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2049_sample_start_ &-> (assign_stmt_2049_Sample)
          assign_stmt_2049_sample_completed_ <-& (assign_stmt_2049_Sample)
          assign_stmt_2049_sample_completed_ &-> ($null)
          assign_stmt_2049_update_start_ &-> (assign_stmt_2049_Update)
          assign_stmt_2049_update_completed_ <-& (assign_stmt_2049_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2049_sample_start_
          assign_stmt_2049_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2049_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2049_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2049_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2049_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2049_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2049_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2049_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2049_sample_completed_ 0)
          // self-release: 
          assign_stmt_2049_sample_start_ o<-& (assign_stmt_2049_sample_completed_ 1)
          $null &-> (assign_stmt_2049_update_start_)
          assign_stmt_2049_update_start_ o<-& (assign_stmt_2049_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1750_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1750_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1750_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp126x_xnot
          // done: WAR dependencies for cmp126x_xnot
          // start:  			$guard (ifx_xend83_exec_guard_1750_delayed_1_0) $volatile cmp126x_xnot := (cmp126 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 608
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1750_delayed_1_0
          // Source expression
          // (cmp126 ^ ($bitcast ($uint<1>) _b1  ))
          // cmp126
          // Target expression
          // (as target) cmp126x_xnot
          // start: WAR dependencies for cmp126x_xnot
          // done: WAR dependencies for cmp126x_xnot
          // end:  			$guard (ifx_xend83_exec_guard_1750_delayed_1_0) $volatile cmp126x_xnot := (cmp126 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			type_cast_1762_1762_delayed_1_0 := ($bitcast ($int<32>) add135 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 609
          // Source expression
          // ($bitcast ($int<32>) add135 )
          $T[type_cast_2059_sample_start_] 
          $T[type_cast_2059_sample_completed_] 
          $T[type_cast_2059_update_start_] 
          $T[type_cast_2059_update_completed_] 
          // add135
          // start: Forward dependencies from add135 to transition type_cast_2059_sample_start_
          // done: Forward dependencies from add135 to transition type_cast_2059_sample_start_
          ;;[type_cast_2059_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2059_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2059_sample_start_ &-> (type_cast_2059_Sample)
          type_cast_2059_sample_completed_ <-& (type_cast_2059_Sample)
          type_cast_2059_sample_completed_ &-> ($null)
          type_cast_2059_update_start_ &-> (type_cast_2059_Update)
          type_cast_2059_update_completed_ <-& (type_cast_2059_Update)
          // RAW reenables for add135
          // self-release: 
          type_cast_2059_sample_start_ o<-& (type_cast_2059_sample_completed_ 1)
          $null &-> (type_cast_2059_update_start_)
          type_cast_2059_update_start_ o<-& (type_cast_2059_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1762_1762_delayed_1_0
          // start: WAR dependencies for type_cast_1762_1762_delayed_1_0
          // done: WAR dependencies for type_cast_1762_1762_delayed_1_0
          // end:  			type_cast_1762_1762_delayed_1_0 := ($bitcast ($int<32>) add135 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start:  			ifx_xend83_exec_guard_1757_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 610
          $T[assign_stmt_2063_sample_start_] 
          $T[assign_stmt_2063_sample_completed_] 
          $T[assign_stmt_2063_update_start_] 
          $T[assign_stmt_2063_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1757_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2063_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2063_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2063_sample_start_ &-> (assign_stmt_2063_Sample)
          assign_stmt_2063_sample_completed_ <-& (assign_stmt_2063_Sample)
          assign_stmt_2063_sample_completed_ &-> ($null)
          assign_stmt_2063_update_start_ &-> (assign_stmt_2063_Update)
          assign_stmt_2063_update_completed_ <-& (assign_stmt_2063_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2063_sample_start_
          assign_stmt_2063_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2063_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2063_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2063_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2063_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2063_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2063_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2063_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2063_sample_completed_ 0)
          // self-release: 
          assign_stmt_2063_sample_start_ o<-& (assign_stmt_2063_sample_completed_ 1)
          $null &-> (assign_stmt_2063_update_start_)
          assign_stmt_2063_update_start_ o<-& (assign_stmt_2063_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1757_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1757_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1757_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp136
          // done: WAR dependencies for cmp136
          // start:  			$guard (ifx_xend83_exec_guard_1757_delayed_1_0) $volatile cmp136 := (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 611
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1757_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0)
          // ($bitcast ($int<32>) conv97 )
          // conv97
          // type_cast_1762_1762_delayed_1_0
          // Target expression
          // (as target) cmp136
          // start: WAR dependencies for cmp136
          // done: WAR dependencies for cmp136
          // end:  			$guard (ifx_xend83_exec_guard_1757_delayed_1_0) $volatile cmp136 := (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0) $buffering 1
          // start:  			ifx_xend83_exec_guard_1765_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 612
          $T[assign_stmt_2073_sample_start_] 
          $T[assign_stmt_2073_sample_completed_] 
          $T[assign_stmt_2073_update_start_] 
          $T[assign_stmt_2073_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1765_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2073_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2073_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2073_sample_start_ &-> (assign_stmt_2073_Sample)
          assign_stmt_2073_sample_completed_ <-& (assign_stmt_2073_Sample)
          assign_stmt_2073_sample_completed_ &-> ($null)
          assign_stmt_2073_update_start_ &-> (assign_stmt_2073_Update)
          assign_stmt_2073_update_completed_ <-& (assign_stmt_2073_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2073_sample_start_
          assign_stmt_2073_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2073_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2073_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2073_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2073_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2073_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2073_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2073_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2073_sample_completed_ 0)
          // self-release: 
          assign_stmt_2073_sample_start_ o<-& (assign_stmt_2073_sample_completed_ 1)
          $null &-> (assign_stmt_2073_update_start_)
          assign_stmt_2073_update_start_ o<-& (assign_stmt_2073_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1765_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1765_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1765_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // start:  			$guard (ifx_xend83_exec_guard_1765_delayed_1_0) $volatile orx_xcond := (cmp126x_xnot & cmp136) $buffering 1
          //  file prog.linked.opt.aa, line 613
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1765_delayed_1_0
          // Source expression
          // (cmp126x_xnot & cmp136)
          // cmp126x_xnot
          // cmp136
          // Target expression
          // (as target) orx_xcond
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // end:  			$guard (ifx_xend83_exec_guard_1765_delayed_1_0) $volatile orx_xcond := (cmp126x_xnot & cmp136) $buffering 1
          // start:  			ifx_xend83_exec_guard_1771_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 614
          $T[assign_stmt_2082_sample_start_] 
          $T[assign_stmt_2082_sample_completed_] 
          $T[assign_stmt_2082_update_start_] 
          $T[assign_stmt_2082_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1771_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2082_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2082_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2082_sample_start_ &-> (assign_stmt_2082_Sample)
          assign_stmt_2082_sample_completed_ <-& (assign_stmt_2082_Sample)
          assign_stmt_2082_sample_completed_ &-> ($null)
          assign_stmt_2082_update_start_ &-> (assign_stmt_2082_Update)
          assign_stmt_2082_update_completed_ <-& (assign_stmt_2082_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2082_sample_start_
          assign_stmt_2082_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2082_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2082_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2082_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2082_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2082_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2082_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2082_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2082_sample_completed_ 0)
          // self-release: 
          assign_stmt_2082_sample_start_ o<-& (assign_stmt_2082_sample_completed_ 1)
          $null &-> (assign_stmt_2082_update_start_)
          assign_stmt_2082_update_start_ o<-& (assign_stmt_2082_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1771_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1771_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1771_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // start:  			$guard (ifx_xend83_exec_guard_1771_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 615
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1771_delayed_1_0
          // Source expression
          // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond
          // Target expression
          // (as target) orx_xcondx_xnot
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // end:  			$guard (ifx_xend83_exec_guard_1771_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend83_exec_guard_1778_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 616
          $T[assign_stmt_2092_sample_start_] 
          $T[assign_stmt_2092_sample_completed_] 
          $T[assign_stmt_2092_update_start_] 
          $T[assign_stmt_2092_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1778_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2092_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2092_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2092_sample_start_ &-> (assign_stmt_2092_Sample)
          assign_stmt_2092_sample_completed_ <-& (assign_stmt_2092_Sample)
          assign_stmt_2092_sample_completed_ &-> ($null)
          assign_stmt_2092_update_start_ &-> (assign_stmt_2092_Update)
          assign_stmt_2092_update_completed_ <-& (assign_stmt_2092_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2092_sample_start_
          assign_stmt_2092_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2092_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2092_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2092_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2092_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2092_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2092_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2092_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2092_sample_completed_ 0)
          // self-release: 
          assign_stmt_2092_sample_start_ o<-& (assign_stmt_2092_sample_completed_ 1)
          $null &-> (assign_stmt_2092_update_start_)
          assign_stmt_2092_update_start_ o<-& (assign_stmt_2092_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1778_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1778_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1778_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1783_1783_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 617
          // Source expression
          // ($bitcast ($int<32>) conv109 )
          $T[type_cast_2095_sample_start_] 
          $T[type_cast_2095_sample_completed_] 
          $T[type_cast_2095_update_start_] 
          $T[type_cast_2095_update_completed_] 
          // conv109
          // start: Forward dependencies from conv109 to transition type_cast_2095_sample_start_
          // done: Forward dependencies from conv109 to transition type_cast_2095_sample_start_
          ;;[type_cast_2095_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2095_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2095_sample_start_ &-> (type_cast_2095_Sample)
          type_cast_2095_sample_completed_ <-& (type_cast_2095_Sample)
          type_cast_2095_sample_completed_ &-> ($null)
          type_cast_2095_update_start_ &-> (type_cast_2095_Update)
          type_cast_2095_update_completed_ <-& (type_cast_2095_Update)
          // RAW reenables for conv109
          // self-release: 
          type_cast_2095_sample_start_ o<-& (type_cast_2095_sample_completed_ 1)
          $null &-> (type_cast_2095_update_start_)
          type_cast_2095_update_start_ o<-& (type_cast_2095_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1783_1783_delayed_1_0
          // start: WAR dependencies for type_cast_1783_1783_delayed_1_0
          // done: WAR dependencies for type_cast_1783_1783_delayed_1_0
          // end:  			type_cast_1783_1783_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp143
          // done: WAR dependencies for cmp143
          // start:  			$guard (ifx_xend83_exec_guard_1778_delayed_1_0) $volatile cmp143 := (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 618
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1778_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0)
          // ($bitcast ($int<32>) conv91 )
          // conv91
          // type_cast_1783_1783_delayed_1_0
          // Target expression
          // (as target) cmp143
          // start: WAR dependencies for cmp143
          // done: WAR dependencies for cmp143
          // end:  			$guard (ifx_xend83_exec_guard_1778_delayed_1_0) $volatile cmp143 := (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0) $buffering 1
          // start:  			ifx_xend83_exec_guard_1786_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 619
          $T[assign_stmt_2106_sample_start_] 
          $T[assign_stmt_2106_sample_completed_] 
          $T[assign_stmt_2106_update_start_] 
          $T[assign_stmt_2106_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1786_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2106_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2106_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2106_sample_start_ &-> (assign_stmt_2106_Sample)
          assign_stmt_2106_sample_completed_ <-& (assign_stmt_2106_Sample)
          assign_stmt_2106_sample_completed_ &-> ($null)
          assign_stmt_2106_update_start_ &-> (assign_stmt_2106_Update)
          assign_stmt_2106_update_completed_ <-& (assign_stmt_2106_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2106_sample_start_
          assign_stmt_2106_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2106_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2106_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2106_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2106_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2106_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2106_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2106_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2106_sample_completed_ 0)
          // self-release: 
          assign_stmt_2106_sample_start_ o<-& (assign_stmt_2106_sample_completed_ 1)
          $null &-> (assign_stmt_2106_update_start_)
          assign_stmt_2106_update_start_ o<-& (assign_stmt_2106_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1786_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1786_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1786_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond179
          // done: WAR dependencies for orx_xcond179
          // start:  			$guard (ifx_xend83_exec_guard_1786_delayed_1_0) $volatile orx_xcond179 := (orx_xcondx_xnot | cmp143) $buffering 1
          //  file prog.linked.opt.aa, line 620
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1786_delayed_1_0
          // Source expression
          // (orx_xcondx_xnot | cmp143)
          // orx_xcondx_xnot
          // cmp143
          // Target expression
          // (as target) orx_xcond179
          // start: WAR dependencies for orx_xcond179
          // done: WAR dependencies for orx_xcond179
          // end:  			$guard (ifx_xend83_exec_guard_1786_delayed_1_0) $volatile orx_xcond179 := (orx_xcondx_xnot | cmp143) $buffering 1
          // start:  			ifx_xend83_exec_guard_1792_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 621
          $T[assign_stmt_2115_sample_start_] 
          $T[assign_stmt_2115_sample_completed_] 
          $T[assign_stmt_2115_update_start_] 
          $T[assign_stmt_2115_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1792_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2115_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2115_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2115_sample_start_ &-> (assign_stmt_2115_Sample)
          assign_stmt_2115_sample_completed_ <-& (assign_stmt_2115_Sample)
          assign_stmt_2115_sample_completed_ &-> ($null)
          assign_stmt_2115_update_start_ &-> (assign_stmt_2115_Update)
          assign_stmt_2115_update_completed_ <-& (assign_stmt_2115_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2115_sample_start_
          assign_stmt_2115_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2115_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2115_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2115_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2115_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2115_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2115_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2115_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2115_sample_completed_ 0)
          // self-release: 
          assign_stmt_2115_sample_start_ o<-& (assign_stmt_2115_sample_completed_ 1)
          $null &-> (assign_stmt_2115_update_start_)
          assign_stmt_2115_update_start_ o<-& (assign_stmt_2115_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1792_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1792_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1792_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond179x_xnot
          // done: WAR dependencies for orx_xcond179x_xnot
          // start:  			$guard (ifx_xend83_exec_guard_1792_delayed_1_0) $volatile orx_xcond179x_xnot := (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 622
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1792_delayed_1_0
          // Source expression
          // (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond179
          // Target expression
          // (as target) orx_xcond179x_xnot
          // start: WAR dependencies for orx_xcond179x_xnot
          // done: WAR dependencies for orx_xcond179x_xnot
          // end:  			$guard (ifx_xend83_exec_guard_1792_delayed_1_0) $volatile orx_xcond179x_xnot := (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend83_exec_guard_1799_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 623
          $T[assign_stmt_2125_sample_start_] 
          $T[assign_stmt_2125_sample_completed_] 
          $T[assign_stmt_2125_update_start_] 
          $T[assign_stmt_2125_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1799_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2125_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2125_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2125_sample_start_ &-> (assign_stmt_2125_Sample)
          assign_stmt_2125_sample_completed_ <-& (assign_stmt_2125_Sample)
          assign_stmt_2125_sample_completed_ &-> ($null)
          assign_stmt_2125_update_start_ &-> (assign_stmt_2125_Update)
          assign_stmt_2125_update_completed_ <-& (assign_stmt_2125_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2125_sample_start_
          assign_stmt_2125_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2125_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2125_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2125_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2125_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2125_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2125_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2125_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2125_sample_completed_ 0)
          // self-release: 
          assign_stmt_2125_sample_start_ o<-& (assign_stmt_2125_sample_completed_ 1)
          $null &-> (assign_stmt_2125_update_start_)
          assign_stmt_2125_update_start_ o<-& (assign_stmt_2125_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1799_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1799_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1799_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_1804_1804_delayed_1_0 := ($bitcast ($int<32>) add152 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 624
          // Source expression
          // ($bitcast ($int<32>) add152 )
          $T[type_cast_2128_sample_start_] 
          $T[type_cast_2128_sample_completed_] 
          $T[type_cast_2128_update_start_] 
          $T[type_cast_2128_update_completed_] 
          // add152
          // start: Forward dependencies from add152 to transition type_cast_2128_sample_start_
          // done: Forward dependencies from add152 to transition type_cast_2128_sample_start_
          ;;[type_cast_2128_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2128_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2128_sample_start_ &-> (type_cast_2128_Sample)
          type_cast_2128_sample_completed_ <-& (type_cast_2128_Sample)
          type_cast_2128_sample_completed_ &-> ($null)
          type_cast_2128_update_start_ &-> (type_cast_2128_Update)
          type_cast_2128_update_completed_ <-& (type_cast_2128_Update)
          // RAW reenables for add152
          // self-release: 
          type_cast_2128_sample_start_ o<-& (type_cast_2128_sample_completed_ 1)
          $null &-> (type_cast_2128_update_start_)
          type_cast_2128_update_start_ o<-& (type_cast_2128_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1804_1804_delayed_1_0
          // start: WAR dependencies for type_cast_1804_1804_delayed_1_0
          // done: WAR dependencies for type_cast_1804_1804_delayed_1_0
          // end:  			type_cast_1804_1804_delayed_1_0 := ($bitcast ($int<32>) add152 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp153
          // done: WAR dependencies for cmp153
          // start:  			$guard (ifx_xend83_exec_guard_1799_delayed_1_0) $volatile cmp153 := (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 625
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1799_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0)
          // ($bitcast ($int<32>) conv91 )
          // conv91
          // type_cast_1804_1804_delayed_1_0
          // Target expression
          // (as target) cmp153
          // start: WAR dependencies for cmp153
          // done: WAR dependencies for cmp153
          // end:  			$guard (ifx_xend83_exec_guard_1799_delayed_1_0) $volatile cmp153 := (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0) $buffering 1
          // start:  			ifx_xend83_exec_guard_1807_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 626
          $T[assign_stmt_2139_sample_start_] 
          $T[assign_stmt_2139_sample_completed_] 
          $T[assign_stmt_2139_update_start_] 
          $T[assign_stmt_2139_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1807_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2139_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2139_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2139_sample_start_ &-> (assign_stmt_2139_Sample)
          assign_stmt_2139_sample_completed_ <-& (assign_stmt_2139_Sample)
          assign_stmt_2139_sample_completed_ &-> ($null)
          assign_stmt_2139_update_start_ &-> (assign_stmt_2139_Update)
          assign_stmt_2139_update_completed_ <-& (assign_stmt_2139_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2139_sample_start_
          assign_stmt_2139_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2139_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2139_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2139_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2139_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2139_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2139_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2139_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2139_sample_completed_ 0)
          // self-release: 
          assign_stmt_2139_sample_start_ o<-& (assign_stmt_2139_sample_completed_ 1)
          $null &-> (assign_stmt_2139_update_start_)
          assign_stmt_2139_update_start_ o<-& (assign_stmt_2139_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1807_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1807_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1807_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond180
          // done: WAR dependencies for orx_xcond180
          // start:  			$guard (ifx_xend83_exec_guard_1807_delayed_1_0) $volatile orx_xcond180 := (orx_xcond179x_xnot & cmp153) $buffering 1
          //  file prog.linked.opt.aa, line 627
          // volatile! 
          // Guard expression 
          // ifx_xend83_exec_guard_1807_delayed_1_0
          // Source expression
          // (orx_xcond179x_xnot & cmp153)
          // orx_xcond179x_xnot
          // cmp153
          // Target expression
          // (as target) orx_xcond180
          // start: WAR dependencies for orx_xcond180
          // done: WAR dependencies for orx_xcond180
          // end:  			$guard (ifx_xend83_exec_guard_1807_delayed_1_0) $volatile orx_xcond180 := (orx_xcond179x_xnot & cmp153) $buffering 1
          // start:  			ifx_xend83_exec_guard_1814_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 628
          $T[assign_stmt_2148_sample_start_] 
          $T[assign_stmt_2148_sample_completed_] 
          $T[assign_stmt_2148_update_start_] 
          $T[assign_stmt_2148_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1814_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2148_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2148_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2148_sample_start_ &-> (assign_stmt_2148_Sample)
          assign_stmt_2148_sample_completed_ <-& (assign_stmt_2148_Sample)
          assign_stmt_2148_sample_completed_ &-> ($null)
          assign_stmt_2148_update_start_ &-> (assign_stmt_2148_Update)
          assign_stmt_2148_update_completed_ <-& (assign_stmt_2148_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2148_sample_start_
          assign_stmt_2148_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2148_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2148_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2148_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2148_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2148_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2148_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2148_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2148_sample_completed_ 0)
          // self-release: 
          assign_stmt_2148_sample_start_ o<-& (assign_stmt_2148_sample_completed_ 1)
          $null &-> (assign_stmt_2148_update_start_)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2148_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1814_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1814_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1814_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend83_ifx_xelse158_taken
          // done: WAR dependencies for ifx_xend83_ifx_xelse158_taken
          // start:  			$volatile ifx_xend83_ifx_xelse158_taken := (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180) $buffering 1
          //  file prog.linked.opt.aa, line 629
          // volatile! 
          // Source expression
          // (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180)
          // ifx_xend83_exec_guard_1814_delayed_1_0
          // orx_xcond180
          // Target expression
          // (as target) ifx_xend83_ifx_xelse158_taken
          // start: WAR dependencies for ifx_xend83_ifx_xelse158_taken
          // done: WAR dependencies for ifx_xend83_ifx_xelse158_taken
          // end:  			$volatile ifx_xend83_ifx_xelse158_taken := (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180) $buffering 1
          // start:  			ifx_xend83_exec_guard_1819_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 630
          $T[assign_stmt_2156_sample_start_] 
          $T[assign_stmt_2156_sample_completed_] 
          $T[assign_stmt_2156_update_start_] 
          $T[assign_stmt_2156_update_completed_] 
          // Source expression
          // ifx_xend83_exec_guard
          // Target expression
          // (as target) ifx_xend83_exec_guard_1819_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2156_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2156_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2156_sample_start_ &-> (assign_stmt_2156_Sample)
          assign_stmt_2156_sample_completed_ <-& (assign_stmt_2156_Sample)
          assign_stmt_2156_sample_completed_ &-> ($null)
          assign_stmt_2156_update_start_ &-> (assign_stmt_2156_Update)
          assign_stmt_2156_update_completed_ <-& (assign_stmt_2156_Update)
          // start: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2156_sample_start_
          assign_stmt_2156_sample_start_ <-& (assign_stmt_1808_update_completed_)
          assign_stmt_2156_sample_start_ <-& (assign_stmt_1777_update_completed_)
          assign_stmt_2156_sample_start_ <-& (assign_stmt_1769_update_completed_)
          assign_stmt_2156_sample_start_ <-& (type_cast_1756_update_completed_)
          // done: Forward dependencies from ifx_xend83_exec_guard to transition assign_stmt_2156_sample_start_
          // RAW reenables for ifx_xend83_exec_guard
          assign_stmt_1808_update_start_ o<-& (assign_stmt_2156_sample_completed_ 0)
          assign_stmt_1777_update_start_ o<-& (assign_stmt_2156_sample_completed_ 0)
          assign_stmt_1769_update_start_ o<-& (assign_stmt_2156_sample_completed_ 0)
          type_cast_1756_update_start_ o<-& (assign_stmt_2156_sample_completed_ 0)
          // self-release: 
          assign_stmt_2156_sample_start_ o<-& (assign_stmt_2156_sample_completed_ 1)
          $null &-> (assign_stmt_2156_update_start_)
          assign_stmt_2156_update_start_ o<-& (assign_stmt_2156_update_completed_ 0)
          // start: WAR dependencies for ifx_xend83_exec_guard_1819_delayed_1_0
          // done: WAR dependencies for ifx_xend83_exec_guard_1819_delayed_1_0
          // end:  			ifx_xend83_exec_guard_1819_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend83_ifx_xthen155_taken
          // done: WAR dependencies for ifx_xend83_ifx_xthen155_taken
          // start:  			$volatile ifx_xend83_ifx_xthen155_taken := (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 )) $buffering 1
          //  file prog.linked.opt.aa, line 631
          // volatile! 
          // Source expression
          // (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 ))
          // ifx_xend83_exec_guard_1819_delayed_1_0
          // ( ~ orx_xcond180 )
          // orx_xcond180
          // Target expression
          // (as target) ifx_xend83_ifx_xthen155_taken
          // start: WAR dependencies for ifx_xend83_ifx_xthen155_taken
          // done: WAR dependencies for ifx_xend83_ifx_xthen155_taken
          // end:  			$volatile ifx_xend83_ifx_xthen155_taken := (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 )) $buffering 1
          // start: WAR dependencies for ifx_xthen155_exec_guard
          // done: WAR dependencies for ifx_xthen155_exec_guard
          // start:  			$volatile ifx_xthen155_exec_guard := ifx_xend83_ifx_xthen155_taken $buffering 1
          //  file prog.linked.opt.aa, line 632
          // volatile! 
          // Source expression
          // ifx_xend83_ifx_xthen155_taken
          // Target expression
          // (as target) ifx_xthen155_exec_guard
          // start: WAR dependencies for ifx_xthen155_exec_guard
          // done: WAR dependencies for ifx_xthen155_exec_guard
          // end:  			$volatile ifx_xthen155_exec_guard := ifx_xend83_ifx_xthen155_taken $buffering 1
          // start:  			ifx_xthen155_exec_guard_1827_delayed_1_0 := ifx_xthen155_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 633
          $T[assign_stmt_2168_sample_start_] 
          $T[assign_stmt_2168_sample_completed_] 
          $T[assign_stmt_2168_update_start_] 
          $T[assign_stmt_2168_update_completed_] 
          // Source expression
          // ifx_xthen155_exec_guard
          // Target expression
          // (as target) ifx_xthen155_exec_guard_1827_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2168_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2168_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2168_sample_start_ &-> (assign_stmt_2168_Sample)
          assign_stmt_2168_sample_completed_ <-& (assign_stmt_2168_Sample)
          assign_stmt_2168_sample_completed_ &-> ($null)
          assign_stmt_2168_update_start_ &-> (assign_stmt_2168_Update)
          assign_stmt_2168_update_completed_ <-& (assign_stmt_2168_Update)
          // start: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2168_sample_start_
          assign_stmt_2168_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2168_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2168_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2168_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2168_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2168_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2168_sample_start_ <-& (assign_stmt_2156_update_completed_)
          // done: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2168_sample_start_
          // RAW reenables for ifx_xthen155_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          assign_stmt_2156_update_start_ o<-& (assign_stmt_2168_sample_completed_ 0)
          // self-release: 
          assign_stmt_2168_sample_start_ o<-& (assign_stmt_2168_sample_completed_ 1)
          $null &-> (assign_stmt_2168_update_start_)
          assign_stmt_2168_update_start_ o<-& (assign_stmt_2168_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen155_exec_guard_1827_delayed_1_0
          // done: WAR dependencies for ifx_xthen155_exec_guard_1827_delayed_1_0
          // end:  			ifx_xthen155_exec_guard_1827_delayed_1_0 := ifx_xthen155_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xthen155_exec_guard_1827_delayed_1_0) conv157 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 634
          // Guard expression 
          // ifx_xthen155_exec_guard_1827_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
          $T[type_cast_2173_sample_start_] 
          $T[type_cast_2173_sample_completed_] 
          $T[type_cast_2173_update_start_] 
          $T[type_cast_2173_update_completed_] 
          // Guard dependency for expression type_cast_2173 with guard R_ifx_xthen155_exec_guard_1827_delayed_1_0_2169
          type_cast_2173_sample_start_ <-& (assign_stmt_2168_update_completed_)
          // RAW reenables for ifx_xthen155_exec_guard_1827_delayed_1_0
          assign_stmt_2168_update_start_ o<-& (type_cast_2173_sample_completed_ 0)
          // ($cast ($int<32>) conv100 )
          // conv100
          // start: Forward dependencies from ($cast ($int<32>) conv100 ) to transition type_cast_2173_sample_start_
          type_cast_2173_sample_start_ <-& (type_cast_1977_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv100 ) to transition type_cast_2173_sample_start_
          ;;[type_cast_2173_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2173_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2173_sample_start_ &-> (type_cast_2173_Sample)
          type_cast_2173_sample_completed_ <-& (type_cast_2173_Sample)
          type_cast_2173_sample_completed_ &-> ($null)
          type_cast_2173_update_start_ &-> (type_cast_2173_Update)
          type_cast_2173_update_completed_ <-& (type_cast_2173_Update)
          // RAW reenables for ($cast ($int<32>) conv100 )
          type_cast_1977_update_start_ o<-& (type_cast_2173_sample_completed_ 0)
          // self-release: 
          type_cast_2173_sample_start_ o<-& (type_cast_2173_sample_completed_ 1)
          $null &-> (type_cast_2173_update_start_)
          type_cast_2173_update_start_ o<-& (type_cast_2173_update_completed_ 0)
          // Target expression
          // (as target) conv157
          // start: WAR dependencies for conv157
          // done: WAR dependencies for conv157
          // end:  			$guard (ifx_xthen155_exec_guard_1827_delayed_1_0) conv157 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen155_exec_guard_1833_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 635
          $T[assign_stmt_2177_sample_start_] 
          $T[assign_stmt_2177_sample_completed_] 
          $T[assign_stmt_2177_update_start_] 
          $T[assign_stmt_2177_update_completed_] 
          // Source expression
          // ifx_xthen155_exec_guard
          // Target expression
          // (as target) ifx_xthen155_exec_guard_1833_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2177_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2177_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2177_sample_start_ &-> (assign_stmt_2177_Sample)
          assign_stmt_2177_sample_completed_ <-& (assign_stmt_2177_Sample)
          assign_stmt_2177_sample_completed_ &-> ($null)
          assign_stmt_2177_update_start_ &-> (assign_stmt_2177_Update)
          assign_stmt_2177_update_completed_ <-& (assign_stmt_2177_Update)
          // start: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2177_sample_start_
          assign_stmt_2177_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2177_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2177_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2177_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2177_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2177_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2177_sample_start_ <-& (assign_stmt_2156_update_completed_)
          // done: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2177_sample_start_
          // RAW reenables for ifx_xthen155_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          assign_stmt_2156_update_start_ o<-& (assign_stmt_2177_sample_completed_ 0)
          // self-release: 
          assign_stmt_2177_sample_start_ o<-& (assign_stmt_2177_sample_completed_ 1)
          $null &-> (assign_stmt_2177_update_start_)
          assign_stmt_2177_update_start_ o<-& (assign_stmt_2177_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen155_exec_guard_1833_delayed_2_0
          // done: WAR dependencies for ifx_xthen155_exec_guard_1833_delayed_2_0
          // end:  			ifx_xthen155_exec_guard_1833_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // start:  			$guard (ifx_xthen155_exec_guard_1833_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 636
          // volatile! 
          // Guard expression 
          // ifx_xthen155_exec_guard_1833_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv157 )
          // conv157
          // Target expression
          // (as target) shr
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // end:  			$guard (ifx_xthen155_exec_guard_1833_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xthen155_exec_guard_1843_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 637
          $T[assign_stmt_2190_sample_start_] 
          $T[assign_stmt_2190_sample_completed_] 
          $T[assign_stmt_2190_update_start_] 
          $T[assign_stmt_2190_update_completed_] 
          // Source expression
          // ifx_xthen155_exec_guard
          // Target expression
          // (as target) ifx_xthen155_exec_guard_1843_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2190_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2190_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2190_sample_start_ &-> (assign_stmt_2190_Sample)
          assign_stmt_2190_sample_completed_ <-& (assign_stmt_2190_Sample)
          assign_stmt_2190_sample_completed_ &-> ($null)
          assign_stmt_2190_update_start_ &-> (assign_stmt_2190_Update)
          assign_stmt_2190_update_completed_ <-& (assign_stmt_2190_Update)
          // start: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2190_sample_start_
          assign_stmt_2190_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2190_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2190_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2190_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2190_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2190_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2190_sample_start_ <-& (assign_stmt_2156_update_completed_)
          // done: Forward dependencies from ifx_xthen155_exec_guard to transition assign_stmt_2190_sample_start_
          // RAW reenables for ifx_xthen155_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          assign_stmt_2156_update_start_ o<-& (assign_stmt_2190_sample_completed_ 0)
          // self-release: 
          assign_stmt_2190_sample_start_ o<-& (assign_stmt_2190_sample_completed_ 1)
          $null &-> (assign_stmt_2190_update_start_)
          assign_stmt_2190_update_start_ o<-& (assign_stmt_2190_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen155_exec_guard_1843_delayed_2_0
          // done: WAR dependencies for ifx_xthen155_exec_guard_1843_delayed_2_0
          // end:  			ifx_xthen155_exec_guard_1843_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xthen155_exec_guard_1843_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 638
          // Guard expression 
          // ifx_xthen155_exec_guard_1843_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
          $T[type_cast_2195_sample_start_] 
          $T[type_cast_2195_sample_completed_] 
          $T[type_cast_2195_update_start_] 
          $T[type_cast_2195_update_completed_] 
          // Guard dependency for expression type_cast_2195 with guard R_ifx_xthen155_exec_guard_1843_delayed_2_0_2191
          type_cast_2195_sample_start_ <-& (assign_stmt_2190_update_completed_)
          // RAW reenables for ifx_xthen155_exec_guard_1843_delayed_2_0
          assign_stmt_2190_update_start_ o<-& (type_cast_2195_sample_completed_ 0)
          // ($cast ($int<64>) shr )
          // shr
          // start: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_2195_sample_start_
          type_cast_2195_sample_start_ <-& (type_cast_2173_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_2195_sample_start_
          ;;[type_cast_2195_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2195_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2195_sample_start_ &-> (type_cast_2195_Sample)
          type_cast_2195_sample_completed_ <-& (type_cast_2195_Sample)
          type_cast_2195_sample_completed_ &-> ($null)
          type_cast_2195_update_start_ &-> (type_cast_2195_Update)
          type_cast_2195_update_completed_ <-& (type_cast_2195_Update)
          // RAW reenables for ($cast ($int<64>) shr )
          type_cast_2173_update_start_ o<-& (type_cast_2195_sample_completed_ 0)
          // self-release: 
          type_cast_2195_sample_start_ o<-& (type_cast_2195_sample_completed_ 1)
          $null &-> (type_cast_2195_update_start_)
          type_cast_2195_update_start_ o<-& (type_cast_2195_update_completed_ 0)
          // Target expression
          // (as target) idxprom
          // start: WAR dependencies for idxprom
          // done: WAR dependencies for idxprom
          // end:  			$guard (ifx_xthen155_exec_guard_1843_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 639
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
          $T[addr_of_2202_sample_start_] 
          $T[addr_of_2202_sample_completed_] 
          $T[addr_of_2202_update_start_] 
          $T[addr_of_2202_update_completed_] 
          $T[array_obj_ref_2201_root_address_calculated] 
          $T[array_obj_ref_2201_offset_calculated] 
          $T[array_obj_ref_2201_index_resized_1] 
          $T[array_obj_ref_2201_index_scaled_1] 
          $T[array_obj_ref_2201_index_computed_1] 
          // idxprom
          // start: Forward dependencies from idxprom to transition array_obj_ref_2201_index_computed_1
          array_obj_ref_2201_index_computed_1 <-& (type_cast_2195_update_completed_)
          // done: Forward dependencies from idxprom to transition array_obj_ref_2201_index_computed_1
          ;;[array_obj_ref_2201_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_2201_index_computed_1 &-> (array_obj_ref_2201_index_resize_1)
          array_obj_ref_2201_index_resized_1 <-& (array_obj_ref_2201_index_resize_1)
          ;;[array_obj_ref_2201_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2201_index_resized_1 &-> (array_obj_ref_2201_index_scale_1)
          array_obj_ref_2201_index_scaled_1 <-& (array_obj_ref_2201_index_scale_1)
          $T[array_obj_ref_2201_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_2201_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_2201_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_2201_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_2201_index_scaled_1 &-> (array_obj_ref_2201_final_index_sum_regn_Sample)
          array_obj_ref_2201_final_index_sum_regn_sample_complete <-& (array_obj_ref_2201_final_index_sum_regn_Sample)
          array_obj_ref_2201_final_index_sum_regn_update_start &-> (array_obj_ref_2201_final_index_sum_regn_Update)
          array_obj_ref_2201_offset_calculated <-& (array_obj_ref_2201_final_index_sum_regn_Update)
          type_cast_2195_update_start_ o<-& (array_obj_ref_2201_final_index_sum_regn_sample_complete 1)
          array_obj_ref_2201_final_index_sum_regn_update_start o<-& (array_obj_ref_2201_offset_calculated 0)
          ;;[array_obj_ref_2201_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2201_offset_calculated &-> (array_obj_ref_2201_base_plus_offset)
          array_obj_ref_2201_root_address_calculated <-& (array_obj_ref_2201_base_plus_offset)
          ;;[addr_of_2202_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2202_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2202_sample_start_ <-& (array_obj_ref_2201_root_address_calculated)
          addr_of_2202_sample_start_ &-> (addr_of_2202_request)
          addr_of_2202_sample_completed_ <-& (addr_of_2202_request)
          addr_of_2202_sample_completed_ &-> ($null)
          addr_of_2202_update_start_ &-> (addr_of_2202_complete)
          addr_of_2202_update_completed_ <-& (addr_of_2202_complete)
          // reenables .
          array_obj_ref_2201_final_index_sum_regn_update_start o<-& (addr_of_2202_sample_completed_ 0)
          // self-release 
          addr_of_2202_sample_start_ o<-& (addr_of_2202_sample_completed_ 1)
          addr_of_2202_update_start_ o<-& (addr_of_2202_update_completed_ 0)
          // Target expression
          // (as target) arrayidx
          // start: WAR dependencies for arrayidx
          // done: WAR dependencies for arrayidx
          // end:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xthen155_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 640
          // Guard expression 
          // ifx_xthen155_exec_guard
          // Target expression
          // ->(arrayidx)
          $T[ptr_deref_2206_sample_start_] 
          $T[ptr_deref_2206_sample_completed_] 
          $T[ptr_deref_2206_update_start_] 
          $T[ptr_deref_2206_update_completed_] 
          $T[ptr_deref_2206_base_address_calculated] 
          // arrayidx
          $T[ptr_deref_2206_word_address_calculated] 
          $T[ptr_deref_2206_root_address_calculated] 
          $T[ptr_deref_2206_base_address_resized] 
          ;;[ptr_deref_2206_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2206_base_address_calculated &-> (ptr_deref_2206_base_addr_resize)
          ptr_deref_2206_base_address_resized <-& (ptr_deref_2206_base_addr_resize)
          ;;[ptr_deref_2206_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2206_base_address_resized &-> (ptr_deref_2206_base_plus_offset)
          ptr_deref_2206_root_address_calculated <-& (ptr_deref_2206_base_plus_offset)
          ;;[ptr_deref_2206_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2206_root_address_calculated &-> (ptr_deref_2206_word_addrgen)
          ptr_deref_2206_word_address_calculated <-& (ptr_deref_2206_word_addrgen)
          ;;[ptr_deref_2206_Sample] 
          {
            ;;[ptr_deref_2206_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2206_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2206_sample_start_ <-& (ptr_deref_2206_word_address_calculated)
          // reenable-joins
          addr_of_2202_update_start_ o<-& (ptr_deref_2206_sample_completed_ 0)
          ptr_deref_2206_sample_start_ &-> (ptr_deref_2206_Sample)
          ptr_deref_2206_sample_completed_ <-& (ptr_deref_2206_Sample)
          ptr_deref_2206_sample_completed_ &-> ($null)
          ptr_deref_2206_update_start_ &-> (ptr_deref_2206_Update)
          ptr_deref_2206_update_completed_ <-& (ptr_deref_2206_Update)
          // start: Forward dependencies from arrayidx to transition ptr_deref_2206_base_address_calculated
          ptr_deref_2206_base_address_calculated <-& (addr_of_2202_update_completed_)
          // done: Forward dependencies from arrayidx to transition ptr_deref_2206_base_address_calculated
          ptr_deref_2206_sample_start_ <-& (ptr_deref_2206_base_address_calculated)
          // RAW reenables for arrayidx
          addr_of_2202_update_start_ o<-& (ptr_deref_2206_sample_completed_ 0)
          // self-release: 
          ptr_deref_2206_sample_start_ o<-& (ptr_deref_2206_sample_completed_ 1)
          $null &-> (ptr_deref_2206_update_start_)
          ptr_deref_2206_update_start_ o<-& (ptr_deref_2206_update_completed_ 0)
          // end:  			$guard (ifx_xthen155_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for ifx_xelse158_exec_guard
          // done: WAR dependencies for ifx_xelse158_exec_guard
          // start:  			$volatile ifx_xelse158_exec_guard := ifx_xend83_ifx_xelse158_taken $buffering 1
          //  file prog.linked.opt.aa, line 641
          // volatile! 
          // Source expression
          // ifx_xend83_ifx_xelse158_taken
          // Target expression
          // (as target) ifx_xelse158_exec_guard
          // start: WAR dependencies for ifx_xelse158_exec_guard
          // done: WAR dependencies for ifx_xelse158_exec_guard
          // end:  			$volatile ifx_xelse158_exec_guard := ifx_xend83_ifx_xelse158_taken $buffering 1
          // start: WAR dependencies for sext177
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext177
          // start:  			$guard (ifx_xelse158_exec_guard) $volatile sext177 := (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          //  file prog.linked.opt.aa, line 642
          // volatile! 
          // Guard expression 
          // ifx_xelse158_exec_guard
          // Source expression
          // (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
          // add120
          // Target expression
          // (as target) sext177
          // start: WAR dependencies for sext177
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext177
          // end:  			$guard (ifx_xelse158_exec_guard) $volatile sext177 := (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          // start: WAR dependencies for shr161
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr161
          // start:  			$guard (ifx_xelse158_exec_guard) $volatile shr161 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 643
          // volatile! 
          // Guard expression 
          // ifx_xelse158_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
          // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
          // ($bitcast ($int<32>) sext177 )
          // sext177
          // Target expression
          // (as target) shr161
          // start: WAR dependencies for shr161
          // ignored out-of-scope w_root 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr161
          // end:  			$guard (ifx_xelse158_exec_guard) $volatile shr161 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          // start:  			$guard (ifx_xelse158_exec_guard) idxprom162 := ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 644
          // Guard expression 
          // ifx_xelse158_exec_guard
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) )
          $T[type_cast_2234_sample_start_] 
          $T[type_cast_2234_sample_completed_] 
          $T[type_cast_2234_update_start_] 
          $T[type_cast_2234_update_completed_] 
          // Guard dependency for expression type_cast_2234 with guard R_ifx_xelse158_exec_guard_2230
          type_cast_2234_sample_start_ <-& (type_cast_1942_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_2095_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_2059_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_2035_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_1927_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_2128_update_completed_)
          type_cast_2234_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          // ($cast ($int<64>) shr161 )
          // shr161
          // start: Forward dependencies from ($cast ($int<64>) shr161 ) to transition type_cast_2234_sample_start_
          type_cast_2234_sample_start_ <-& (type_cast_1942_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_1927_update_completed_)
          type_cast_2234_sample_start_ <-& (type_cast_1921_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr161 ) to transition type_cast_2234_sample_start_
          ;;[type_cast_2234_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2234_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2234_sample_start_ &-> (type_cast_2234_Sample)
          type_cast_2234_sample_completed_ <-& (type_cast_2234_Sample)
          type_cast_2234_sample_completed_ &-> ($null)
          type_cast_2234_update_start_ &-> (type_cast_2234_Update)
          type_cast_2234_update_completed_ <-& (type_cast_2234_Update)
          // RAW reenables for ($cast ($int<64>) shr161 )
          type_cast_1942_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          type_cast_1921_update_start_ o<-& (type_cast_2234_sample_completed_ 0)
          // self-release: 
          type_cast_2234_sample_start_ o<-& (type_cast_2234_sample_completed_ 1)
          $null &-> (type_cast_2234_update_start_)
          type_cast_2234_update_start_ o<-& (type_cast_2234_update_completed_ 0)
          // Target expression
          // (as target) idxprom162
          // start: WAR dependencies for idxprom162
          // done: WAR dependencies for idxprom162
          // end:  			$guard (ifx_xelse158_exec_guard) idxprom162 := ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx163 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 645
          // Source expression
          // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162])
          $T[addr_of_2241_sample_start_] 
          $T[addr_of_2241_sample_completed_] 
          $T[addr_of_2241_update_start_] 
          $T[addr_of_2241_update_completed_] 
          $T[array_obj_ref_2240_root_address_calculated] 
          $T[array_obj_ref_2240_offset_calculated] 
          $T[array_obj_ref_2240_index_resized_1] 
          $T[array_obj_ref_2240_index_scaled_1] 
          $T[array_obj_ref_2240_index_computed_1] 
          // idxprom162
          // start: Forward dependencies from idxprom162 to transition array_obj_ref_2240_index_computed_1
          array_obj_ref_2240_index_computed_1 <-& (type_cast_2234_update_completed_)
          // done: Forward dependencies from idxprom162 to transition array_obj_ref_2240_index_computed_1
          ;;[array_obj_ref_2240_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_2240_index_computed_1 &-> (array_obj_ref_2240_index_resize_1)
          array_obj_ref_2240_index_resized_1 <-& (array_obj_ref_2240_index_resize_1)
          ;;[array_obj_ref_2240_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2240_index_resized_1 &-> (array_obj_ref_2240_index_scale_1)
          array_obj_ref_2240_index_scaled_1 <-& (array_obj_ref_2240_index_scale_1)
          $T[array_obj_ref_2240_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_2240_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_2240_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_2240_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_2240_index_scaled_1 &-> (array_obj_ref_2240_final_index_sum_regn_Sample)
          array_obj_ref_2240_final_index_sum_regn_sample_complete <-& (array_obj_ref_2240_final_index_sum_regn_Sample)
          array_obj_ref_2240_final_index_sum_regn_update_start &-> (array_obj_ref_2240_final_index_sum_regn_Update)
          array_obj_ref_2240_offset_calculated <-& (array_obj_ref_2240_final_index_sum_regn_Update)
          type_cast_2234_update_start_ o<-& (array_obj_ref_2240_final_index_sum_regn_sample_complete 1)
          array_obj_ref_2240_final_index_sum_regn_update_start o<-& (array_obj_ref_2240_offset_calculated 0)
          ;;[array_obj_ref_2240_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2240_offset_calculated &-> (array_obj_ref_2240_base_plus_offset)
          array_obj_ref_2240_root_address_calculated <-& (array_obj_ref_2240_base_plus_offset)
          ;;[addr_of_2241_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2241_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2241_sample_start_ <-& (array_obj_ref_2240_root_address_calculated)
          addr_of_2241_sample_start_ &-> (addr_of_2241_request)
          addr_of_2241_sample_completed_ <-& (addr_of_2241_request)
          addr_of_2241_sample_completed_ &-> ($null)
          addr_of_2241_update_start_ &-> (addr_of_2241_complete)
          addr_of_2241_update_completed_ <-& (addr_of_2241_complete)
          // reenables .
          array_obj_ref_2240_final_index_sum_regn_update_start o<-& (addr_of_2241_sample_completed_ 0)
          // self-release 
          addr_of_2241_sample_start_ o<-& (addr_of_2241_sample_completed_ 1)
          addr_of_2241_update_start_ o<-& (addr_of_2241_update_completed_ 0)
          // Target expression
          // (as target) arrayidx163
          // start: WAR dependencies for arrayidx163
          // done: WAR dependencies for arrayidx163
          // end:  			arrayidx163 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse158_exec_guard_1895_delayed_8_0 := ifx_xelse158_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          //  file prog.linked.opt.aa, line 646
          $T[assign_stmt_2245_sample_start_] 
          $T[assign_stmt_2245_sample_completed_] 
          $T[assign_stmt_2245_update_start_] 
          $T[assign_stmt_2245_update_completed_] 
          // Source expression
          // ifx_xelse158_exec_guard
          // Target expression
          // (as target) ifx_xelse158_exec_guard_1895_delayed_8_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2245_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2245_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2245_sample_start_ &-> (assign_stmt_2245_Sample)
          assign_stmt_2245_sample_completed_ <-& (assign_stmt_2245_Sample)
          assign_stmt_2245_sample_completed_ &-> ($null)
          assign_stmt_2245_update_start_ &-> (assign_stmt_2245_Update)
          assign_stmt_2245_update_completed_ <-& (assign_stmt_2245_Update)
          // start: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2245_sample_start_
          assign_stmt_2245_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2245_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2245_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2245_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2245_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2245_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2245_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // done: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2245_sample_start_
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2245_sample_completed_ 0)
          // self-release: 
          assign_stmt_2245_sample_start_ o<-& (assign_stmt_2245_sample_completed_ 1)
          $null &-> (assign_stmt_2245_update_start_)
          assign_stmt_2245_update_start_ o<-& (assign_stmt_2245_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse158_exec_guard_1895_delayed_8_0
          // done: WAR dependencies for ifx_xelse158_exec_guard_1895_delayed_8_0
          // end:  			ifx_xelse158_exec_guard_1895_delayed_8_0 := ifx_xelse158_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          // start:  			$guard (ifx_xelse158_exec_guard_1895_delayed_8_0) tmp164 := ->(arrayidx163) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 647
          // Guard expression 
          // ifx_xelse158_exec_guard_1895_delayed_8_0
          // Source expression
          // ->(arrayidx163)
          $T[ptr_deref_2249_sample_start_] 
          $T[ptr_deref_2249_sample_completed_] 
          $T[ptr_deref_2249_update_start_] 
          $T[ptr_deref_2249_update_completed_] 
          // Guard dependency for expression ptr_deref_2249 with guard R_ifx_xelse158_exec_guard_1895_delayed_8_0_2246
          ptr_deref_2249_sample_start_ <-& (assign_stmt_2245_update_completed_)
          // RAW reenables for ifx_xelse158_exec_guard_1895_delayed_8_0
          assign_stmt_2245_update_start_ o<-& (ptr_deref_2249_sample_completed_ 0)
          $T[ptr_deref_2249_base_address_calculated] 
          // arrayidx163
          $T[ptr_deref_2249_word_address_calculated] 
          $T[ptr_deref_2249_root_address_calculated] 
          $T[ptr_deref_2249_base_address_resized] 
          ;;[ptr_deref_2249_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2249_base_address_calculated &-> (ptr_deref_2249_base_addr_resize)
          ptr_deref_2249_base_address_resized <-& (ptr_deref_2249_base_addr_resize)
          ;;[ptr_deref_2249_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2249_base_address_resized &-> (ptr_deref_2249_base_plus_offset)
          ptr_deref_2249_root_address_calculated <-& (ptr_deref_2249_base_plus_offset)
          ;;[ptr_deref_2249_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2249_root_address_calculated &-> (ptr_deref_2249_word_addrgen)
          ptr_deref_2249_word_address_calculated <-& (ptr_deref_2249_word_addrgen)
          ;;[ptr_deref_2249_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2249_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_2249_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_2249_sample_start_ <-& (ptr_deref_2249_word_address_calculated)
          // reenable-joins
          addr_of_2241_update_start_ o<-& (ptr_deref_2249_sample_completed_ 0)
          ptr_deref_2249_sample_start_ &-> (ptr_deref_2249_Sample)
          ptr_deref_2249_sample_completed_ <-& (ptr_deref_2249_Sample)
          ptr_deref_2249_sample_completed_ &-> ($null)
          ptr_deref_2249_update_start_ &-> (ptr_deref_2249_Update)
          ptr_deref_2249_update_completed_ <-& (ptr_deref_2249_Update)
          // start: Forward dependencies from arrayidx163 to transition ptr_deref_2249_base_address_calculated
          ptr_deref_2249_base_address_calculated <-& (addr_of_2241_update_completed_)
          // done: Forward dependencies from arrayidx163 to transition ptr_deref_2249_base_address_calculated
          ptr_deref_2249_sample_start_ <-& (ptr_deref_2249_base_address_calculated)
          // RAW reenables for arrayidx163
          addr_of_2241_update_start_ o<-& (ptr_deref_2249_sample_completed_ 0)
          // self-release: 
          ptr_deref_2249_sample_start_ o<-& (ptr_deref_2249_sample_completed_ 1)
          $null &-> (ptr_deref_2249_update_start_)
          ptr_deref_2249_update_start_ o<-& (ptr_deref_2249_update_completed_ 0)
          // Target expression
          // (as target) tmp164
          // start: WAR dependencies for tmp164
          // done: WAR dependencies for tmp164
          // end:  			$guard (ifx_xelse158_exec_guard_1895_delayed_8_0) tmp164 := ->(arrayidx163) $buffering 1// bits of buffering = 64. 
          // start:  			ifx_xelse158_exec_guard_1900_delayed_1_0 := ifx_xelse158_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 648
          $T[assign_stmt_2253_sample_start_] 
          $T[assign_stmt_2253_sample_completed_] 
          $T[assign_stmt_2253_update_start_] 
          $T[assign_stmt_2253_update_completed_] 
          // Source expression
          // ifx_xelse158_exec_guard
          // Target expression
          // (as target) ifx_xelse158_exec_guard_1900_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2253_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2253_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2253_sample_start_ &-> (assign_stmt_2253_Sample)
          assign_stmt_2253_sample_completed_ <-& (assign_stmt_2253_Sample)
          assign_stmt_2253_sample_completed_ &-> ($null)
          assign_stmt_2253_update_start_ &-> (assign_stmt_2253_Update)
          assign_stmt_2253_update_completed_ <-& (assign_stmt_2253_Update)
          // start: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2253_sample_start_
          assign_stmt_2253_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2253_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2253_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2253_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2253_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2253_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2253_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // done: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2253_sample_start_
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2253_sample_completed_ 0)
          // self-release: 
          assign_stmt_2253_sample_start_ o<-& (assign_stmt_2253_sample_completed_ 1)
          $null &-> (assign_stmt_2253_update_start_)
          assign_stmt_2253_update_start_ o<-& (assign_stmt_2253_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse158_exec_guard_1900_delayed_1_0
          // done: WAR dependencies for ifx_xelse158_exec_guard_1900_delayed_1_0
          // end:  			ifx_xelse158_exec_guard_1900_delayed_1_0 := ifx_xelse158_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse158_exec_guard_1900_delayed_1_0) conv166 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 649
          // Guard expression 
          // ifx_xelse158_exec_guard_1900_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
          $T[type_cast_2258_sample_start_] 
          $T[type_cast_2258_sample_completed_] 
          $T[type_cast_2258_update_start_] 
          $T[type_cast_2258_update_completed_] 
          // Guard dependency for expression type_cast_2258 with guard R_ifx_xelse158_exec_guard_1900_delayed_1_0_2254
          type_cast_2258_sample_start_ <-& (assign_stmt_2253_update_completed_)
          // RAW reenables for ifx_xelse158_exec_guard_1900_delayed_1_0
          assign_stmt_2253_update_start_ o<-& (type_cast_2258_sample_completed_ 0)
          // ($cast ($int<32>) conv100 )
          // conv100
          // start: Forward dependencies from ($cast ($int<32>) conv100 ) to transition type_cast_2258_sample_start_
          type_cast_2258_sample_start_ <-& (type_cast_1977_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv100 ) to transition type_cast_2258_sample_start_
          ;;[type_cast_2258_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2258_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2258_sample_start_ &-> (type_cast_2258_Sample)
          type_cast_2258_sample_completed_ <-& (type_cast_2258_Sample)
          type_cast_2258_sample_completed_ &-> ($null)
          type_cast_2258_update_start_ &-> (type_cast_2258_Update)
          type_cast_2258_update_completed_ <-& (type_cast_2258_Update)
          // RAW reenables for ($cast ($int<32>) conv100 )
          type_cast_1977_update_start_ o<-& (type_cast_2258_sample_completed_ 0)
          // self-release: 
          type_cast_2258_sample_start_ o<-& (type_cast_2258_sample_completed_ 1)
          $null &-> (type_cast_2258_update_start_)
          type_cast_2258_update_start_ o<-& (type_cast_2258_update_completed_ 0)
          // Target expression
          // (as target) conv166
          // start: WAR dependencies for conv166
          // done: WAR dependencies for conv166
          // end:  			$guard (ifx_xelse158_exec_guard_1900_delayed_1_0) conv166 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse158_exec_guard_1906_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 650
          $T[assign_stmt_2262_sample_start_] 
          $T[assign_stmt_2262_sample_completed_] 
          $T[assign_stmt_2262_update_start_] 
          $T[assign_stmt_2262_update_completed_] 
          // Source expression
          // ifx_xelse158_exec_guard
          // Target expression
          // (as target) ifx_xelse158_exec_guard_1906_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2262_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2262_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2262_sample_start_ &-> (assign_stmt_2262_Sample)
          assign_stmt_2262_sample_completed_ <-& (assign_stmt_2262_Sample)
          assign_stmt_2262_sample_completed_ &-> ($null)
          assign_stmt_2262_update_start_ &-> (assign_stmt_2262_Update)
          assign_stmt_2262_update_completed_ <-& (assign_stmt_2262_Update)
          // start: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2262_sample_start_
          assign_stmt_2262_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2262_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2262_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2262_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2262_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2262_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2262_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // done: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2262_sample_start_
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2262_sample_completed_ 0)
          // self-release: 
          assign_stmt_2262_sample_start_ o<-& (assign_stmt_2262_sample_completed_ 1)
          $null &-> (assign_stmt_2262_update_start_)
          assign_stmt_2262_update_start_ o<-& (assign_stmt_2262_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse158_exec_guard_1906_delayed_2_0
          // done: WAR dependencies for ifx_xelse158_exec_guard_1906_delayed_2_0
          // end:  			ifx_xelse158_exec_guard_1906_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr167
          // done: WAR dependencies for shr167
          // start:  			$guard (ifx_xelse158_exec_guard_1906_delayed_2_0) $volatile shr167 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 651
          // volatile! 
          // Guard expression 
          // ifx_xelse158_exec_guard_1906_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv166 )
          // conv166
          // Target expression
          // (as target) shr167
          // start: WAR dependencies for shr167
          // done: WAR dependencies for shr167
          // end:  			$guard (ifx_xelse158_exec_guard_1906_delayed_2_0) $volatile shr167 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xelse158_exec_guard_1916_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 652
          $T[assign_stmt_2275_sample_start_] 
          $T[assign_stmt_2275_sample_completed_] 
          $T[assign_stmt_2275_update_start_] 
          $T[assign_stmt_2275_update_completed_] 
          // Source expression
          // ifx_xelse158_exec_guard
          // Target expression
          // (as target) ifx_xelse158_exec_guard_1916_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2275_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2275_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2275_sample_start_ &-> (assign_stmt_2275_Sample)
          assign_stmt_2275_sample_completed_ <-& (assign_stmt_2275_Sample)
          assign_stmt_2275_sample_completed_ &-> ($null)
          assign_stmt_2275_update_start_ &-> (assign_stmt_2275_Update)
          assign_stmt_2275_update_completed_ <-& (assign_stmt_2275_Update)
          // start: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2275_sample_start_
          assign_stmt_2275_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2275_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2275_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2275_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2275_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2275_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2275_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // done: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2275_sample_start_
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2275_sample_completed_ 0)
          // self-release: 
          assign_stmt_2275_sample_start_ o<-& (assign_stmt_2275_sample_completed_ 1)
          $null &-> (assign_stmt_2275_update_start_)
          assign_stmt_2275_update_start_ o<-& (assign_stmt_2275_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse158_exec_guard_1916_delayed_2_0
          // done: WAR dependencies for ifx_xelse158_exec_guard_1916_delayed_2_0
          // end:  			ifx_xelse158_exec_guard_1916_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse158_exec_guard_1916_delayed_2_0) idxprom168 := ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 653
          // Guard expression 
          // ifx_xelse158_exec_guard_1916_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) )
          $T[type_cast_2280_sample_start_] 
          $T[type_cast_2280_sample_completed_] 
          $T[type_cast_2280_update_start_] 
          $T[type_cast_2280_update_completed_] 
          // Guard dependency for expression type_cast_2280 with guard R_ifx_xelse158_exec_guard_1916_delayed_2_0_2276
          type_cast_2280_sample_start_ <-& (assign_stmt_2275_update_completed_)
          // RAW reenables for ifx_xelse158_exec_guard_1916_delayed_2_0
          assign_stmt_2275_update_start_ o<-& (type_cast_2280_sample_completed_ 0)
          // ($cast ($int<64>) shr167 )
          // shr167
          // start: Forward dependencies from ($cast ($int<64>) shr167 ) to transition type_cast_2280_sample_start_
          type_cast_2280_sample_start_ <-& (type_cast_2258_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr167 ) to transition type_cast_2280_sample_start_
          ;;[type_cast_2280_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2280_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2280_sample_start_ &-> (type_cast_2280_Sample)
          type_cast_2280_sample_completed_ <-& (type_cast_2280_Sample)
          type_cast_2280_sample_completed_ &-> ($null)
          type_cast_2280_update_start_ &-> (type_cast_2280_Update)
          type_cast_2280_update_completed_ <-& (type_cast_2280_Update)
          // RAW reenables for ($cast ($int<64>) shr167 )
          type_cast_2258_update_start_ o<-& (type_cast_2280_sample_completed_ 0)
          // self-release: 
          type_cast_2280_sample_start_ o<-& (type_cast_2280_sample_completed_ 1)
          $null &-> (type_cast_2280_update_start_)
          type_cast_2280_update_start_ o<-& (type_cast_2280_update_completed_ 0)
          // Target expression
          // (as target) idxprom168
          // start: WAR dependencies for idxprom168
          // done: WAR dependencies for idxprom168
          // end:  			$guard (ifx_xelse158_exec_guard_1916_delayed_2_0) idxprom168 := ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx169 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 654
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168])
          $T[addr_of_2287_sample_start_] 
          $T[addr_of_2287_sample_completed_] 
          $T[addr_of_2287_update_start_] 
          $T[addr_of_2287_update_completed_] 
          $T[array_obj_ref_2286_root_address_calculated] 
          $T[array_obj_ref_2286_offset_calculated] 
          $T[array_obj_ref_2286_index_resized_1] 
          $T[array_obj_ref_2286_index_scaled_1] 
          $T[array_obj_ref_2286_index_computed_1] 
          // idxprom168
          // start: Forward dependencies from idxprom168 to transition array_obj_ref_2286_index_computed_1
          array_obj_ref_2286_index_computed_1 <-& (type_cast_2280_update_completed_)
          // done: Forward dependencies from idxprom168 to transition array_obj_ref_2286_index_computed_1
          ;;[array_obj_ref_2286_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_2286_index_computed_1 &-> (array_obj_ref_2286_index_resize_1)
          array_obj_ref_2286_index_resized_1 <-& (array_obj_ref_2286_index_resize_1)
          ;;[array_obj_ref_2286_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2286_index_resized_1 &-> (array_obj_ref_2286_index_scale_1)
          array_obj_ref_2286_index_scaled_1 <-& (array_obj_ref_2286_index_scale_1)
          $T[array_obj_ref_2286_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_2286_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_2286_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_2286_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_2286_index_scaled_1 &-> (array_obj_ref_2286_final_index_sum_regn_Sample)
          array_obj_ref_2286_final_index_sum_regn_sample_complete <-& (array_obj_ref_2286_final_index_sum_regn_Sample)
          array_obj_ref_2286_final_index_sum_regn_update_start &-> (array_obj_ref_2286_final_index_sum_regn_Update)
          array_obj_ref_2286_offset_calculated <-& (array_obj_ref_2286_final_index_sum_regn_Update)
          type_cast_2280_update_start_ o<-& (array_obj_ref_2286_final_index_sum_regn_sample_complete 1)
          array_obj_ref_2286_final_index_sum_regn_update_start o<-& (array_obj_ref_2286_offset_calculated 0)
          ;;[array_obj_ref_2286_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2286_offset_calculated &-> (array_obj_ref_2286_base_plus_offset)
          array_obj_ref_2286_root_address_calculated <-& (array_obj_ref_2286_base_plus_offset)
          ;;[addr_of_2287_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2287_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2287_sample_start_ <-& (array_obj_ref_2286_root_address_calculated)
          addr_of_2287_sample_start_ &-> (addr_of_2287_request)
          addr_of_2287_sample_completed_ <-& (addr_of_2287_request)
          addr_of_2287_sample_completed_ &-> ($null)
          addr_of_2287_update_start_ &-> (addr_of_2287_complete)
          addr_of_2287_update_completed_ <-& (addr_of_2287_complete)
          // reenables .
          array_obj_ref_2286_final_index_sum_regn_update_start o<-& (addr_of_2287_sample_completed_ 0)
          // self-release 
          addr_of_2287_sample_start_ o<-& (addr_of_2287_sample_completed_ 1)
          addr_of_2287_update_start_ o<-& (addr_of_2287_update_completed_ 0)
          // Target expression
          // (as target) arrayidx169
          // start: WAR dependencies for arrayidx169
          // done: WAR dependencies for arrayidx169
          // end:  			arrayidx169 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168]) $buffering 1// bits of buffering = 32. 
          // start:  			arrayidx169_1930_delayed_4_0 := arrayidx169 $buffering 4 $cut_through // bits of buffering = 128. 
          //  file prog.linked.opt.aa, line 655
          $T[assign_stmt_2291_sample_start_] 
          $T[assign_stmt_2291_sample_completed_] 
          $T[assign_stmt_2291_update_start_] 
          $T[assign_stmt_2291_update_completed_] 
          // Source expression
          // arrayidx169
          // Target expression
          // (as target) arrayidx169_1930_delayed_4_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2291_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2291_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2291_sample_start_ &-> (assign_stmt_2291_Sample)
          assign_stmt_2291_sample_completed_ <-& (assign_stmt_2291_Sample)
          assign_stmt_2291_sample_completed_ &-> ($null)
          assign_stmt_2291_update_start_ &-> (assign_stmt_2291_Update)
          assign_stmt_2291_update_completed_ <-& (assign_stmt_2291_Update)
          // start: Forward dependencies from arrayidx169 to transition assign_stmt_2291_sample_start_
          assign_stmt_2291_sample_start_ <-& (addr_of_2287_update_completed_)
          // done: Forward dependencies from arrayidx169 to transition assign_stmt_2291_sample_start_
          // RAW reenables for arrayidx169
          addr_of_2287_update_start_ o<-& (assign_stmt_2291_sample_completed_ 0)
          // self-release: 
          assign_stmt_2291_sample_start_ o<-& (assign_stmt_2291_sample_completed_ 1)
          $null &-> (assign_stmt_2291_update_start_)
          assign_stmt_2291_update_start_ o<-& (assign_stmt_2291_update_completed_ 0)
          // start: WAR dependencies for arrayidx169_1930_delayed_4_0
          // done: WAR dependencies for arrayidx169_1930_delayed_4_0
          // end:  			arrayidx169_1930_delayed_4_0 := arrayidx169 $buffering 4 $cut_through // bits of buffering = 128. 
          // start:  			ifx_xelse158_exec_guard_1929_delayed_14_0 := ifx_xelse158_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          //  file prog.linked.opt.aa, line 656
          $T[assign_stmt_2294_sample_start_] 
          $T[assign_stmt_2294_sample_completed_] 
          $T[assign_stmt_2294_update_start_] 
          $T[assign_stmt_2294_update_completed_] 
          // Source expression
          // ifx_xelse158_exec_guard
          // Target expression
          // (as target) ifx_xelse158_exec_guard_1929_delayed_14_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2294_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2294_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2294_sample_start_ &-> (assign_stmt_2294_Sample)
          assign_stmt_2294_sample_completed_ <-& (assign_stmt_2294_Sample)
          assign_stmt_2294_sample_completed_ &-> ($null)
          assign_stmt_2294_update_start_ &-> (assign_stmt_2294_Update)
          assign_stmt_2294_update_completed_ <-& (assign_stmt_2294_Update)
          // start: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2294_sample_start_
          assign_stmt_2294_sample_start_ <-& (type_cast_1942_update_completed_)
          assign_stmt_2294_sample_start_ <-& (type_cast_2095_update_completed_)
          assign_stmt_2294_sample_start_ <-& (type_cast_2059_update_completed_)
          assign_stmt_2294_sample_start_ <-& (type_cast_2035_update_completed_)
          assign_stmt_2294_sample_start_ <-& (type_cast_1927_update_completed_)
          assign_stmt_2294_sample_start_ <-& (type_cast_2128_update_completed_)
          assign_stmt_2294_sample_start_ <-& (assign_stmt_2148_update_completed_)
          // done: Forward dependencies from ifx_xelse158_exec_guard to transition assign_stmt_2294_sample_start_
          // RAW reenables for ifx_xelse158_exec_guard
          type_cast_1942_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          type_cast_2095_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          type_cast_2059_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          type_cast_2035_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          type_cast_1927_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          type_cast_2128_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          assign_stmt_2148_update_start_ o<-& (assign_stmt_2294_sample_completed_ 0)
          // self-release: 
          assign_stmt_2294_sample_start_ o<-& (assign_stmt_2294_sample_completed_ 1)
          $null &-> (assign_stmt_2294_update_start_)
          assign_stmt_2294_update_start_ o<-& (assign_stmt_2294_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse158_exec_guard_1929_delayed_14_0
          // done: WAR dependencies for ifx_xelse158_exec_guard_1929_delayed_14_0
          // end:  			ifx_xelse158_exec_guard_1929_delayed_14_0 := ifx_xelse158_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          // start:  			$guard (ifx_xelse158_exec_guard_1929_delayed_14_0) ->(arrayidx169_1930_delayed_4_0) := tmp164 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 657
          // Guard expression 
          // ifx_xelse158_exec_guard_1929_delayed_14_0
          // Source expression
          // tmp164
          // Target expression
          // ->(arrayidx169_1930_delayed_4_0)
          $T[ptr_deref_2297_sample_start_] 
          $T[ptr_deref_2297_sample_completed_] 
          $T[ptr_deref_2297_update_start_] 
          $T[ptr_deref_2297_update_completed_] 
          $T[ptr_deref_2297_base_address_calculated] 
          // arrayidx169_1930_delayed_4_0
          $T[ptr_deref_2297_word_address_calculated] 
          $T[ptr_deref_2297_root_address_calculated] 
          $T[ptr_deref_2297_base_address_resized] 
          ;;[ptr_deref_2297_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2297_base_address_calculated &-> (ptr_deref_2297_base_addr_resize)
          ptr_deref_2297_base_address_resized <-& (ptr_deref_2297_base_addr_resize)
          ;;[ptr_deref_2297_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2297_base_address_resized &-> (ptr_deref_2297_base_plus_offset)
          ptr_deref_2297_root_address_calculated <-& (ptr_deref_2297_base_plus_offset)
          ;;[ptr_deref_2297_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2297_root_address_calculated &-> (ptr_deref_2297_word_addrgen)
          ptr_deref_2297_word_address_calculated <-& (ptr_deref_2297_word_addrgen)
          ;;[ptr_deref_2297_Sample] 
          {
            ;;[ptr_deref_2297_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2297_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2297_sample_start_ <-& (ptr_deref_2297_word_address_calculated)
          // reenable-joins
          assign_stmt_2291_update_start_ o<-& (ptr_deref_2297_sample_completed_ 0)
          ptr_deref_2297_sample_start_ &-> (ptr_deref_2297_Sample)
          ptr_deref_2297_sample_completed_ <-& (ptr_deref_2297_Sample)
          ptr_deref_2297_sample_completed_ &-> ($null)
          ptr_deref_2297_update_start_ &-> (ptr_deref_2297_Update)
          ptr_deref_2297_update_completed_ <-& (ptr_deref_2297_Update)
          // start: Forward dependencies from arrayidx169_1930_delayed_4_0 to transition ptr_deref_2297_base_address_calculated
          ptr_deref_2297_base_address_calculated <-& (assign_stmt_2291_update_completed_)
          // done: Forward dependencies from arrayidx169_1930_delayed_4_0 to transition ptr_deref_2297_base_address_calculated
          ptr_deref_2297_sample_start_ <-& (ptr_deref_2297_base_address_calculated)
          // RAW reenables for arrayidx169_1930_delayed_4_0
          assign_stmt_2291_update_start_ o<-& (ptr_deref_2297_sample_completed_ 0)
          // self-release: 
          ptr_deref_2297_sample_start_ o<-& (ptr_deref_2297_sample_completed_ 1)
          $null &-> (ptr_deref_2297_update_start_)
          ptr_deref_2297_update_start_ o<-& (ptr_deref_2297_update_completed_ 0)
          // start: Forward dependencies from tmp164 to transition ptr_deref_2297_sample_start_
          ptr_deref_2297_sample_start_ <-& (ptr_deref_2249_update_completed_)
          // done: Forward dependencies from tmp164 to transition ptr_deref_2297_sample_start_
          // RAW reenables for tmp164
          ptr_deref_2249_update_start_ o<-& (ptr_deref_2297_sample_completed_ 0)
          // end:  			$guard (ifx_xelse158_exec_guard_1929_delayed_14_0) ->(arrayidx169_1930_delayed_4_0) := tmp164 $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // start:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          //  file prog.linked.opt.aa, line 658
          // volatile! 
          // Source expression
          // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
          // flagx_x0
          // Target expression
          // (as target) tobool
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // end:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          // start: WAR dependencies for ifx_xend170_whilex_xend_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend170_whilex_xend_taken
          // start:  			$volatile ifx_xend170_whilex_xend_taken := ( ~ tobool ) $buffering 1
          //  file prog.linked.opt.aa, line 659
          // volatile! 
          // Source expression
          // ( ~ tobool )
          // tobool
          // Target expression
          // (as target) ifx_xend170_whilex_xend_taken
          // start: WAR dependencies for ifx_xend170_whilex_xend_taken
          // ignored out-of-scope w_root 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend170_whilex_xend_taken
          // end:  			$volatile ifx_xend170_whilex_xend_taken := ( ~ tobool ) $buffering 1
          // tobool
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated <-& (assign_stmt_1777_update_completed_)
          condition_evaluated <-& (assign_stmt_1769_update_completed_)
          condition_evaluated <-& (type_cast_1756_update_completed_)
          condition_evaluated <-& (assign_stmt_1898_update_completed_)
          // done: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  ptr_deref_2206 store
          //  ptr_deref_2297 store
          $T [ptr_deref_2206_ptr_deref_2297_delay] $delay
          // ptr_deref_2206(store) -> ptr_deref_2297(store)
          ptr_deref_2297_sample_start_ <-& (ptr_deref_2206_ptr_deref_2297_delay)
          ptr_deref_2206_ptr_deref_2297_delay <-& (ptr_deref_2206_sample_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          // ordered memory-subsystem.
          ring_reenable_memory_space_0 <-& (ptr_deref_2297_sample_completed_)
          ptr_deref_2206_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // memory-space  memory_space_1
          //  ptr_deref_2249 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1642__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1642_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1642__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1642_loop_body : condition_evaluated
        $bind do_while_stmt_1642__entry__  => do_while_stmt_1642_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1642_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1642__exit__)
      }
      do_while_stmt_1642__entry__ |-> (do_while_stmt_1642)
      do_while_stmt_1642__exit__ <-| (do_while_stmt_1642)
      // if-statement  
      //  file prog.linked.opt.aa, line 118165608
      ;;[if_stmt_2312_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2312__entry__ |-> (if_stmt_2312_dead_link)
      if_stmt_2312__exit__ <-| (if_stmt_2312_dead_link)
      ;;[if_stmt_2312_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2312__entry__ |-> (if_stmt_2312_eval_test)
      $P [R_ifx_xend170_whilex_xend_taken_2313_place]
      R_ifx_xend170_whilex_xend_taken_2313_place <-| (if_stmt_2312_eval_test)
      ;;[if_stmt_2312_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2312_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_ifx_xend170_whilex_xend_taken_2313_place |-> (if_stmt_2312_if_link if_stmt_2312_else_link)
      $P [ifx_xend170_whilex_xend]
      ifx_xend170_whilex_xend <-| (if_stmt_2312_if_link)
      if_stmt_2312__exit__ <-| (if_stmt_2312_else_link)
      ::[assign_stmt_2321] 
      {
        // start:  		Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 667
        // Target expression
        // (as target) Block1_complete
        $T[WPIPE_Block1_complete_2318_sample_start_] 
        $T[WPIPE_Block1_complete_2318_sample_completed_] 
        $T[WPIPE_Block1_complete_2318_update_start_] 
        $T[WPIPE_Block1_complete_2318_update_completed_] 
        ;;[WPIPE_Block1_complete_2318_Sample] 
        {
          // pipe write sample-start Block1_complete
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block1_complete_2318_Update] 
        {
          // pipe write update (complete) Block1_complete
          $T [req] $T [ack] 
        }
        WPIPE_Block1_complete_2318_sample_start_ &-> (WPIPE_Block1_complete_2318_Sample)
        WPIPE_Block1_complete_2318_sample_completed_ <-& (WPIPE_Block1_complete_2318_Sample)
        WPIPE_Block1_complete_2318_update_start_ <-& (WPIPE_Block1_complete_2318_sample_completed_)
        WPIPE_Block1_complete_2318_update_start_ &-> (WPIPE_Block1_complete_2318_Update)
        WPIPE_Block1_complete_2318_update_completed_ <-& (WPIPE_Block1_complete_2318_Update)
        // end:  		Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block1_complete
        // read-dependencies for pipe Block1_complete
        // write-dependencies for pipe Block1_complete
        // signal write dependencies for Block1_complete
      }
      assign_stmt_2321__entry__ |-> (assign_stmt_2321)
      assign_stmt_2321__exit__ <-| (assign_stmt_2321)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 510
      //---------------------   merge statement  file prog.linked.opt.aa, line 510  --------------------------
      ||[entry_whilex_xbody_PhiReq] 
      {
        // skipped constant phi phi_stmt_1627
        // skipped constant phi phi_stmt_1632
        ;;[phi_stmt_1637] 
        {
          ||[phi_stmt_1637_sources] 
          {
            // sources for 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) div )
            ;;[type_cast_1640] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1637_req] 
        }
      }
      entry_whilex_xbody |-> (entry_whilex_xbody_PhiReq)
      $P [merge_stmt_1626_PhiReqMerge] 
      merge_stmt_1626_PhiReqMerge <-| ( entry_whilex_xbody_PhiReq )
      ||[merge_stmt_1626_PhiAck] 
      {
        // skipped constant phi phi_stmt_1627
        // skipped constant phi phi_stmt_1632
        $T [phi_stmt_1637_ack] 
      }
      merge_stmt_1626_PhiReqMerge |-> (merge_stmt_1626_PhiAck)
      merge_stmt_1626__exit__  <-| (merge_stmt_1626_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 510  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 664
      ;;[merge_stmt_2316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2316__entry__ |-> (merge_stmt_2316_dead_link)
      merge_stmt_2316__exit__ <-| (merge_stmt_2316_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 664  --------------------------
      ||[ifx_xend170_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend170_whilex_xend |-> (ifx_xend170_whilex_xend_PhiReq)
      $P [merge_stmt_2316_PhiReqMerge] 
      merge_stmt_2316_PhiReqMerge <-| ( ifx_xend170_whilex_xend_PhiReq )
      ||[merge_stmt_2316_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2316_PhiReqMerge |-> (merge_stmt_2316_PhiAck)
      merge_stmt_2316__exit__  <-| (merge_stmt_2316_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 664  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 669
      //---------------------   merge statement  file prog.linked.opt.aa, line 669  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2323_PhiReqMerge] 
      merge_stmt_2323_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2323_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2323_PhiReqMerge |-> (merge_stmt_2323_PhiAck)
      merge_stmt_2323__exit__  <-| (merge_stmt_2323_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 669  --------------------------
      assign_stmt_1499_to_assign_stmt_1517__entry__ <-| (branch_block_stmt_1496__entry__)
      assign_stmt_1522_to_assign_stmt_1624__entry__ <-| (assign_stmt_1499_to_assign_stmt_1517__exit__)
      entry_whilex_xbody <-| (assign_stmt_1522_to_assign_stmt_1624__exit__)
      do_while_stmt_1642__entry__ <-| (merge_stmt_1626__exit__)
      if_stmt_2312__entry__ <-| (do_while_stmt_1642__exit__)
      merge_stmt_2316__entry__ <-| (if_stmt_2312__exit__)
      assign_stmt_2321__entry__ <-| (merge_stmt_2316__exit__)
      return__ <-| (assign_stmt_2321__exit__)
      merge_stmt_2323__exit__ |-> (branch_block_stmt_1496__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 510
    // constant-object-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 520
    // constant-object-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 664
    // constant-object-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 669
    // constant-object-declarations for block %zeropad3D_B%body
    //  file prog.linked.opt.aa, line 479
    // constant-object-declarations for block %zeropad3D_B
    //  file prog.linked.opt.aa, line 474
    // constant-declarations for block %zeropad3D_B%body
    //  file prog.linked.opt.aa, line 479
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1526_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_1548_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_1561_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_1572_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_1585_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1596_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1612_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 510
    // constant-declarations for phi:  			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 511
    $constant $W[kx_x1_at_entry_1627] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 513
    $constant $W[ix_x2_at_entry_1632] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 515
    // do-while statement  
    //  file prog.linked.opt.aa, line 518
    // constant-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 520
    // constant-declarations for phi:  			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 521
    // constant-declarations for phi:  			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 523
    // constant-declarations for phi:  			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 525
    // ($bitcast ($uint<32>) _b00000000000000000000000000000100  )
    $constant $W[type_cast_1668_wire_constant] : $int<32> := _b00000000000000000000000000000100// 4
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1698_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux cmp64 div  inc_1539_delayed_1_0 ) 
    // ($bitcast ($uint<16>) _b0000000000000100  )
    $constant $W[type_cast_1800_wire_constant] : $int<16> := _b0000000000000100// 4
    // ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1829_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1833_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1835_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1863_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1891_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1903_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )
    $constant $W[type_cast_1907_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1911_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_1913_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2054_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2087_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2120_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_2184_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $constant $W[array_obj_ref_2201_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2201_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2201_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_2201_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_2208_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ->(arrayidx)
    $constant $W[ptr_deref_2206_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_2217_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )
    $constant $W[type_cast_2226_wire_constant] : $int<32> := _b00000000000000000000000000010010// 18
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162])
    $constant $W[array_obj_ref_2240_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2240_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2240_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_2240_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx163)
    $constant $W[ptr_deref_2249_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_2269_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168])
    $constant $W[array_obj_ref_2286_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2286_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_2286_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_2286_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx169_1930_delayed_4_0)
    $constant $W[ptr_deref_2297_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2303_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 118165608
    // constant-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 664
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_2320_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %zeropad3D_B%body%
    //  file prog.linked.opt.aa, line 669
    // block %zeropad3D_B%body
    //  file prog.linked.opt.aa, line 479
    // 		call := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 481
    // call
    $W[call_1499] : $int<8>
    // 		call1 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 482
    // call1
    $W[call1_1502] : $int<8>
    // 		call2 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 483
    // call2
    $W[call2_1505] : $int<8>
    // 		call3 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 484
    // call3
    $W[call3_1508] : $int<8>
    // 		call4 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 485
    // call4
    $W[call4_1511] : $int<8>
    // 		call5 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 486
    // call5
    $W[call5_1514] : $int<8>
    // 		call6 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 487
    // call6
    $W[call6_1517] : $int<8>
    // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 489
    // conv
    $W[conv_1522] : $int<16>
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 490
    // div
    $W[div_1528] : $int<16>
    // 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 491
    // conv32
    $W[conv32_1532] : $int<32>
    // 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 492
    // conv34
    $W[conv34_1536] : $int<32>
    // 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 493
    // conv38
    $W[conv38_1540] : $int<32>
    // 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 494
    // conv40
    $W[conv40_1544] : $int<32>
    // 		$volatile mul41 := (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 495
    // mul41
    $W[mul41_1550] : $int<32>
    // 		$volatile sext := (mul41 * conv38) $buffering 1
    //  file prog.linked.opt.aa, line 496
    // sext
    $W[sext_1555] : $int<32>
    // 		$volatile conv95 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 497
    // ($bitcast ($int<32>) sext )
    $intermediate $W[type_cast_1558_wire] : $int<32>
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_1562_wire] : $int<32>
    // conv95
    $W[conv95_1564] : $int<32>
    // 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 498
    // conv109
    $W[conv109_1568] : $int<32>
    // 		$volatile mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 499
    // mul
    $W[mul_1574] : $int<32>
    // 		$volatile sext175 := (mul * conv32) $buffering 1
    //  file prog.linked.opt.aa, line 500
    // sext175
    $W[sext175_1579] : $int<32>
    // 		$volatile conv113 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 501
    // ($bitcast ($int<32>) sext175 )
    $intermediate $W[type_cast_1582_wire] : $int<32>
    // (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_1586_wire] : $int<32>
    // conv113
    $W[conv113_1588] : $int<32>
    // 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 502
    // conv131
    $W[conv131_1592] : $int<32>
    // 		$volatile div132 := (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 503
    // div132
    $W[div132_1598] : $int<32>
    // 		$volatile add135 := (conv109 + div132) $buffering 1
    //  file prog.linked.opt.aa, line 504
    // add135
    $W[add135_1603] : $int<32>
    // 		$volatile add152 := (conv109 + conv34) $buffering 1
    //  file prog.linked.opt.aa, line 505
    // add152
    $W[add152_1608] : $int<32>
    // 		$volatile shl := (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 506
    // shl
    $W[shl_1614] : $int<32>
    // 		$volatile add63 := (shl + conv34) $buffering 1
    //  file prog.linked.opt.aa, line 507
    // add63
    $W[add63_1619] : $int<32>
    // 		$volatile add78 := (shl + div132) $buffering 1
    //  file prog.linked.opt.aa, line 508
    // add78
    $W[add78_1624] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 510
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 515
    // ($cast ($uint<16>) div )
    $intermediate $W[type_cast_1640_wire] : $int<16>
    // jx_x1_at_entry
    $W[jx_x1_at_entry_1637] : $int<16>
    // do-while statement  
    //  file prog.linked.opt.aa, line 518
    // merge-statement  
    //  file prog.linked.opt.aa, line 520
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 521
    // ($cast ($uint<16>) kx_x0 )
    $intermediate $W[type_cast_1647_wire] : $int<16>
    // kx_x1
    $W[kx_x1_1644] : $int<16>
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 523
    // ($cast ($uint<16>) ix_x1 )
    $intermediate $W[type_cast_1652_wire] : $int<16>
    // ix_x2
    $W[ix_x2_1649] : $int<16>
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 525
    // ($cast ($uint<16>) jx_x0 )
    $intermediate $W[type_cast_1657_wire] : $int<16>
    $W[jx_x1_at_entry_1637_1658_buffered] : $int<16>
    // jx_x1
    $W[jx_x1_1654] : $int<16>
    // 			conv48 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 528
    // ($cast ($int<32>) kx_x1 )
    $intermediate $W[type_cast_1662_wire] : $int<32>
    // conv48
    $W[conv48_1664] : $int<32>
    // 			$volatile add := (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 529
    // add
    $W[add_1670] : $int<32>
    // 			type_cast_1492_1492_delayed_2_0 := ($bitcast ($int<32>) conv32 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 530
    // type_cast_1492_1492_delayed_2_0
    $W[type_cast_1492_1492_delayed_2_0_1674] : $int<32>
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 531
    // ($bitcast ($int<32>) add )
    $intermediate $W[type_cast_1677_wire] : $int<32>
    // cmp
    $W[cmp_1680] : $int<1>
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 532
    // whilex_xbody_ifx_xthen_taken
    $W[whilex_xbody_ifx_xthen_taken_1683] : $int<1>
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 533
    // whilex_xbody_ifx_xelse_taken
    $W[whilex_xbody_ifx_xelse_taken_1687] : $int<1>
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 534
    // ifx_xelse_exec_guard
    $W[ifx_xelse_exec_guard_1690] : $int<1>
    // 			jx_x1_1507_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 535
    // jx_x1_1507_delayed_1_0
    $W[jx_x1_1507_delayed_1_0_1693] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 536
    // inc
    $W[inc_1700] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) conv58 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 537
    // ($cast ($int<32>) inc )
    $intermediate $W[type_cast_1704_wire] : $int<32>
    // conv58
    $W[conv58_1706] : $int<32>
    // 			ifx_xelse_exec_guard_1518_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 538
    // ifx_xelse_exec_guard_1518_delayed_1_0
    $W[ifx_xelse_exec_guard_1518_delayed_1_0_1709] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_1518_delayed_1_0) $volatile cmp64 := (conv58 == add63) $buffering 1
    //  file prog.linked.opt.aa, line 539
    // cmp64
    $W[cmp64_1715] : $int<1>
    // 			ifx_xelse_exec_guard_1524_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 540
    // ifx_xelse_exec_guard_1524_delayed_1_0
    $W[ifx_xelse_exec_guard_1524_delayed_1_0_1718] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_1524_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 541
    // inc69
    $W[inc69_1723] : $int<16>
    // 			ifx_xelse_exec_guard_1529_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 542
    // ifx_xelse_exec_guard_1529_delayed_2_0
    $W[ifx_xelse_exec_guard_1529_delayed_2_0_1726] : $int<1>
    // 			ix_x2_1532_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 543
    // ix_x2_1532_delayed_3_0
    $W[ix_x2_1532_delayed_3_0_1729] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_1529_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_1532_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 544
    // inc69x_xix_x2
    $W[inc69x_xix_x2_1735] : $int<16>
    // 			ifx_xelse_exec_guard_1535_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 545
    // ifx_xelse_exec_guard_1535_delayed_1_0
    $W[ifx_xelse_exec_guard_1535_delayed_1_0_1738] : $int<1>
    // 			inc_1539_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 546
    // inc_1539_delayed_1_0
    $W[inc_1539_delayed_1_0_1741] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_1535_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 div  inc_1539_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 547
    // jx_x2
    $W[jx_x2_1748] : $int<16>
    // 			ifx_xelse_exec_guard_1542_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 548
    // ifx_xelse_exec_guard_1542_delayed_2_0
    $W[ifx_xelse_exec_guard_1542_delayed_2_0_1751] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 549
    // ($cast ($int<32>) inc69x_xix_x2 )
    $intermediate $W[type_cast_1755_wire] : $int<32>
    // conv71
    $W[conv71_1757] : $int<32>
    // 			ifx_xelse_exec_guard_1548_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 550
    // ifx_xelse_exec_guard_1548_delayed_3_0
    $W[ifx_xelse_exec_guard_1548_delayed_3_0_1760] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_1548_delayed_3_0) $volatile cmp79 := (conv71 == add78) $buffering 1
    //  file prog.linked.opt.aa, line 551
    // cmp79
    $W[cmp79_1766] : $int<1>
    // 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 552
    // ifx_xelse_exec_guard_1555_delayed_3_0
    $W[ifx_xelse_exec_guard_1555_delayed_3_0_1769] : $int<1>
    // 			$volatile ifx_xelse_ifx_xthen81_taken := (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79) $buffering 1
    //  file prog.linked.opt.aa, line 553
    // ifx_xelse_ifx_xthen81_taken
    $W[ifx_xelse_ifx_xthen81_taken_1774] : $int<1>
    // 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 554
    // ifx_xelse_exec_guard_1560_delayed_3_0
    $W[ifx_xelse_exec_guard_1560_delayed_3_0_1777] : $int<1>
    // 			$volatile ifx_xelse_ifx_xend83_taken := (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 )) $buffering 1
    //  file prog.linked.opt.aa, line 555
    // ( ~ cmp79 )
    $intermediate $W[NOT_u1_u1_1781_wire] : $int<1>
    // ifx_xelse_ifx_xend83_taken
    $W[ifx_xelse_ifx_xend83_taken_1783] : $int<1>
    // 			$volatile ifx_xthen81_exec_guard := ifx_xelse_ifx_xthen81_taken $buffering 1
    //  file prog.linked.opt.aa, line 556
    // ifx_xthen81_exec_guard
    $W[ifx_xthen81_exec_guard_1786] : $int<1>
    // 			$volatile ifx_xthen81_ifx_xend83_taken := ifx_xthen81_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 557
    // ifx_xthen81_ifx_xend83_taken
    $W[ifx_xthen81_ifx_xend83_taken_1789] : $int<1>
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 558
    // ifx_xthen_exec_guard
    $W[ifx_xthen_exec_guard_1792] : $int<1>
    // 			kx_x1_1576_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 559
    // kx_x1_1576_delayed_1_0
    $W[kx_x1_1576_delayed_1_0_1795] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile add54 := (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 560
    // add54
    $W[add54_1802] : $int<16>
    // 			$volatile ifx_xthen_ifx_xend83_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 561
    // ifx_xthen_ifx_xend83_taken
    $W[ifx_xthen_ifx_xend83_taken_1805] : $int<1>
    // 			ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 562
    // ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
    $W[ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1808] : $int<1>
    // 			$volatile ifx_xend83_exec_guard := (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 563
    // (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)
    $intermediate $W[OR_u1_u1_1813_wire] : $int<1>
    // ifx_xend83_exec_guard
    $W[ifx_xend83_exec_guard_1815] : $int<1>
    // 			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 564
    // ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
    $W[ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1818] : $int<1>
    // 			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 565
    // type_cast_1594_1594_delayed_3_0
    $W[type_cast_1594_1594_delayed_3_0_1822] : $int<16>
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 566
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1836_wire] : $int<16>
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1837_wire] : $int<16>
    // kx_x0
    $W[kx_x0_1839] : $int<16>
    // 			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 567
    // type_cast_1618_1618_delayed_1_0
    $W[type_cast_1618_1618_delayed_1_0_1843] : $int<16>
    // 			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 568
    // type_cast_1615_1615_delayed_1_0
    $W[type_cast_1615_1615_delayed_1_0_1847] : $int<16>
    // 			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 569
    // type_cast_1612_1612_delayed_4_0
    $W[type_cast_1612_1612_delayed_4_0_1851] : $int<16>
    // 			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 570
    // ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
    $W[ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1854] : $int<1>
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 571
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1864_wire] : $int<16>
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1865_wire] : $int<16>
    // ix_x1
    $W[ix_x1_1867] : $int<16>
    // 			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 572
    // ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
    $W[ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1870] : $int<1>
    // 			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 573
    // type_cast_1634_1634_delayed_2_0
    $W[type_cast_1634_1634_delayed_2_0_1874] : $int<16>
    // 			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 574
    // type_cast_1631_1631_delayed_2_0
    $W[type_cast_1631_1631_delayed_2_0_1878] : $int<16>
    // 			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 575
    // type_cast_1628_1628_delayed_4_0
    $W[type_cast_1628_1628_delayed_4_0_1882] : $int<16>
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 576
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1892_wire] : $int<16>
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1893_wire] : $int<16>
    // jx_x0
    $W[jx_x0_1895] : $int<16>
    // 			ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 577
    // ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
    $W[ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1898] : $int<1>
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 578
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_1914_wire] : $int<16>
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_1915_wire] : $int<16>
    // flagx_x0
    $W[flagx_x0_1917] : $int<16>
    // 			$guard (ifx_xend83_exec_guard) conv87174 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 579
    // conv87174
    $W[conv87174_1922] : $int<32>
    // 			$guard (ifx_xend83_exec_guard) conv91 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 580
    // ($cast ($int<32>) jx_x0 )
    $intermediate $W[type_cast_1926_wire] : $int<32>
    // conv91
    $W[conv91_1928] : $int<32>
    // 			ifx_xend83_exec_guard_1671_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 581
    // ifx_xend83_exec_guard_1671_delayed_1_0
    $W[ifx_xend83_exec_guard_1671_delayed_1_0_1931] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1671_delayed_1_0) $volatile mul92 := (conv91 * conv38) $buffering 1
    //  file prog.linked.opt.aa, line 582
    // mul92
    $W[mul92_1937] : $int<32>
    // 			$guard (ifx_xend83_exec_guard) conv97 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 583
    // ($cast ($int<32>) ix_x1 )
    $intermediate $W[type_cast_1941_wire] : $int<32>
    // conv97
    $W[conv97_1943] : $int<32>
    // 			ifx_xend83_exec_guard_1683_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 584
    // ifx_xend83_exec_guard_1683_delayed_1_0
    $W[ifx_xend83_exec_guard_1683_delayed_1_0_1946] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1683_delayed_1_0) $volatile mul98 := (conv97 * conv95) $buffering 1
    //  file prog.linked.opt.aa, line 585
    // mul98
    $W[mul98_1952] : $int<32>
    // 			ifx_xend83_exec_guard_1689_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 586
    // ifx_xend83_exec_guard_1689_delayed_1_0
    $W[ifx_xend83_exec_guard_1689_delayed_1_0_1955] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1689_delayed_1_0) $volatile add93 := (mul98 + conv87174) $buffering 1
    //  file prog.linked.opt.aa, line 587
    // add93
    $W[add93_1961] : $int<32>
    // 			ifx_xend83_exec_guard_1695_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 588
    // ifx_xend83_exec_guard_1695_delayed_1_0
    $W[ifx_xend83_exec_guard_1695_delayed_1_0_1964] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1695_delayed_1_0) $volatile add99 := (add93 + mul92) $buffering 1
    //  file prog.linked.opt.aa, line 589
    // add99
    $W[add99_1970] : $int<32>
    // 			ifx_xend83_exec_guard_1701_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 590
    // ifx_xend83_exec_guard_1701_delayed_1_0
    $W[ifx_xend83_exec_guard_1701_delayed_1_0_1973] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1701_delayed_1_0) conv100 := ($cast ($uint<16>) add99 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 591
    // conv100
    $W[conv100_1978] : $int<16>
    // 			ifx_xend83_exec_guard_1706_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 592
    // ifx_xend83_exec_guard_1706_delayed_1_0
    $W[ifx_xend83_exec_guard_1706_delayed_1_0_1981] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1706_delayed_1_0) $volatile sub := (conv91 - conv109) $buffering 1
    //  file prog.linked.opt.aa, line 593
    // sub
    $W[sub_1987] : $int<32>
    // 			ifx_xend83_exec_guard_1712_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 594
    // ifx_xend83_exec_guard_1712_delayed_1_0
    $W[ifx_xend83_exec_guard_1712_delayed_1_0_1990] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1712_delayed_1_0) $volatile mul110 := (sub * conv32) $buffering 1
    //  file prog.linked.opt.aa, line 595
    // mul110
    $W[mul110_1996] : $int<32>
    // 			ifx_xend83_exec_guard_1718_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 596
    // ifx_xend83_exec_guard_1718_delayed_1_0
    $W[ifx_xend83_exec_guard_1718_delayed_1_0_1999] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1718_delayed_1_0) $volatile sub118 := (conv97 - conv109) $buffering 1
    //  file prog.linked.opt.aa, line 597
    // sub118
    $W[sub118_2005] : $int<32>
    // 			ifx_xend83_exec_guard_1724_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 598
    // ifx_xend83_exec_guard_1724_delayed_1_0
    $W[ifx_xend83_exec_guard_1724_delayed_1_0_2008] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1724_delayed_1_0) $volatile mul119 := (sub118 * conv113) $buffering 1
    //  file prog.linked.opt.aa, line 599
    // mul119
    $W[mul119_2014] : $int<32>
    // 			ifx_xend83_exec_guard_1730_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 600
    // ifx_xend83_exec_guard_1730_delayed_1_0
    $W[ifx_xend83_exec_guard_1730_delayed_1_0_2017] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1730_delayed_1_0) $volatile add111 := (mul119 + conv87174) $buffering 1
    //  file prog.linked.opt.aa, line 601
    // add111
    $W[add111_2023] : $int<32>
    // 			ifx_xend83_exec_guard_1736_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 602
    // ifx_xend83_exec_guard_1736_delayed_1_0
    $W[ifx_xend83_exec_guard_1736_delayed_1_0_2026] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1736_delayed_1_0) $volatile add120 := (add111 + mul110) $buffering 1
    //  file prog.linked.opt.aa, line 603
    // add120
    $W[add120_2032] : $int<32>
    // 			type_cast_1747_1747_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 604
    // type_cast_1747_1747_delayed_1_0
    $W[type_cast_1747_1747_delayed_1_0_2036] : $int<32>
    // 			ifx_xend83_exec_guard_1742_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 605
    // ifx_xend83_exec_guard_1742_delayed_1_0
    $W[ifx_xend83_exec_guard_1742_delayed_1_0_2039] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1742_delayed_1_0) $volatile cmp126 := (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 606
    // ($bitcast ($int<32>) conv97 )
    $intermediate $W[type_cast_2043_wire] : $int<32>
    // cmp126
    $W[cmp126_2046] : $int<1>
    // 			ifx_xend83_exec_guard_1750_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 607
    // ifx_xend83_exec_guard_1750_delayed_1_0
    $W[ifx_xend83_exec_guard_1750_delayed_1_0_2049] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1750_delayed_1_0) $volatile cmp126x_xnot := (cmp126 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 608
    // cmp126x_xnot
    $W[cmp126x_xnot_2056] : $int<1>
    // 			type_cast_1762_1762_delayed_1_0 := ($bitcast ($int<32>) add135 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 609
    // type_cast_1762_1762_delayed_1_0
    $W[type_cast_1762_1762_delayed_1_0_2060] : $int<32>
    // 			ifx_xend83_exec_guard_1757_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 610
    // ifx_xend83_exec_guard_1757_delayed_1_0
    $W[ifx_xend83_exec_guard_1757_delayed_1_0_2063] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1757_delayed_1_0) $volatile cmp136 := (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 611
    // ($bitcast ($int<32>) conv97 )
    $intermediate $W[type_cast_2067_wire] : $int<32>
    // cmp136
    $W[cmp136_2070] : $int<1>
    // 			ifx_xend83_exec_guard_1765_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 612
    // ifx_xend83_exec_guard_1765_delayed_1_0
    $W[ifx_xend83_exec_guard_1765_delayed_1_0_2073] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1765_delayed_1_0) $volatile orx_xcond := (cmp126x_xnot & cmp136) $buffering 1
    //  file prog.linked.opt.aa, line 613
    // orx_xcond
    $W[orx_xcond_2079] : $int<1>
    // 			ifx_xend83_exec_guard_1771_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 614
    // ifx_xend83_exec_guard_1771_delayed_1_0
    $W[ifx_xend83_exec_guard_1771_delayed_1_0_2082] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1771_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 615
    // orx_xcondx_xnot
    $W[orx_xcondx_xnot_2089] : $int<1>
    // 			ifx_xend83_exec_guard_1778_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 616
    // ifx_xend83_exec_guard_1778_delayed_1_0
    $W[ifx_xend83_exec_guard_1778_delayed_1_0_2092] : $int<1>
    // 			type_cast_1783_1783_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 617
    // type_cast_1783_1783_delayed_1_0
    $W[type_cast_1783_1783_delayed_1_0_2096] : $int<32>
    // 			$guard (ifx_xend83_exec_guard_1778_delayed_1_0) $volatile cmp143 := (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 618
    // ($bitcast ($int<32>) conv91 )
    $intermediate $W[type_cast_2100_wire] : $int<32>
    // cmp143
    $W[cmp143_2103] : $int<1>
    // 			ifx_xend83_exec_guard_1786_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 619
    // ifx_xend83_exec_guard_1786_delayed_1_0
    $W[ifx_xend83_exec_guard_1786_delayed_1_0_2106] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1786_delayed_1_0) $volatile orx_xcond179 := (orx_xcondx_xnot | cmp143) $buffering 1
    //  file prog.linked.opt.aa, line 620
    // orx_xcond179
    $W[orx_xcond179_2112] : $int<1>
    // 			ifx_xend83_exec_guard_1792_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 621
    // ifx_xend83_exec_guard_1792_delayed_1_0
    $W[ifx_xend83_exec_guard_1792_delayed_1_0_2115] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1792_delayed_1_0) $volatile orx_xcond179x_xnot := (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 622
    // orx_xcond179x_xnot
    $W[orx_xcond179x_xnot_2122] : $int<1>
    // 			ifx_xend83_exec_guard_1799_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 623
    // ifx_xend83_exec_guard_1799_delayed_1_0
    $W[ifx_xend83_exec_guard_1799_delayed_1_0_2125] : $int<1>
    // 			type_cast_1804_1804_delayed_1_0 := ($bitcast ($int<32>) add152 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 624
    // type_cast_1804_1804_delayed_1_0
    $W[type_cast_1804_1804_delayed_1_0_2129] : $int<32>
    // 			$guard (ifx_xend83_exec_guard_1799_delayed_1_0) $volatile cmp153 := (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 625
    // ($bitcast ($int<32>) conv91 )
    $intermediate $W[type_cast_2133_wire] : $int<32>
    // cmp153
    $W[cmp153_2136] : $int<1>
    // 			ifx_xend83_exec_guard_1807_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 626
    // ifx_xend83_exec_guard_1807_delayed_1_0
    $W[ifx_xend83_exec_guard_1807_delayed_1_0_2139] : $int<1>
    // 			$guard (ifx_xend83_exec_guard_1807_delayed_1_0) $volatile orx_xcond180 := (orx_xcond179x_xnot & cmp153) $buffering 1
    //  file prog.linked.opt.aa, line 627
    // orx_xcond180
    $W[orx_xcond180_2145] : $int<1>
    // 			ifx_xend83_exec_guard_1814_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 628
    // ifx_xend83_exec_guard_1814_delayed_1_0
    $W[ifx_xend83_exec_guard_1814_delayed_1_0_2148] : $int<1>
    // 			$volatile ifx_xend83_ifx_xelse158_taken := (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180) $buffering 1
    //  file prog.linked.opt.aa, line 629
    // ifx_xend83_ifx_xelse158_taken
    $W[ifx_xend83_ifx_xelse158_taken_2153] : $int<1>
    // 			ifx_xend83_exec_guard_1819_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 630
    // ifx_xend83_exec_guard_1819_delayed_1_0
    $W[ifx_xend83_exec_guard_1819_delayed_1_0_2156] : $int<1>
    // 			$volatile ifx_xend83_ifx_xthen155_taken := (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 )) $buffering 1
    //  file prog.linked.opt.aa, line 631
    // ( ~ orx_xcond180 )
    $intermediate $W[NOT_u1_u1_2160_wire] : $int<1>
    // ifx_xend83_ifx_xthen155_taken
    $W[ifx_xend83_ifx_xthen155_taken_2162] : $int<1>
    // 			$volatile ifx_xthen155_exec_guard := ifx_xend83_ifx_xthen155_taken $buffering 1
    //  file prog.linked.opt.aa, line 632
    // ifx_xthen155_exec_guard
    $W[ifx_xthen155_exec_guard_2165] : $int<1>
    // 			ifx_xthen155_exec_guard_1827_delayed_1_0 := ifx_xthen155_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 633
    // ifx_xthen155_exec_guard_1827_delayed_1_0
    $W[ifx_xthen155_exec_guard_1827_delayed_1_0_2168] : $int<1>
    // 			$guard (ifx_xthen155_exec_guard_1827_delayed_1_0) conv157 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 634
    // ($cast ($int<32>) conv100 )
    $intermediate $W[type_cast_2172_wire] : $int<32>
    // conv157
    $W[conv157_2174] : $int<32>
    // 			ifx_xthen155_exec_guard_1833_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 635
    // ifx_xthen155_exec_guard_1833_delayed_2_0
    $W[ifx_xthen155_exec_guard_1833_delayed_2_0_2177] : $int<1>
    // 			$guard (ifx_xthen155_exec_guard_1833_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 636
    // ($bitcast ($int<32>) conv157 )
    $intermediate $W[type_cast_2181_wire] : $int<32>
    // (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_2185_wire] : $int<32>
    // shr
    $W[shr_2187] : $int<32>
    // 			ifx_xthen155_exec_guard_1843_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 637
    // ifx_xthen155_exec_guard_1843_delayed_2_0
    $W[ifx_xthen155_exec_guard_1843_delayed_2_0_2190] : $int<1>
    // 			$guard (ifx_xthen155_exec_guard_1843_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 638
    // ($cast ($int<64>) shr )
    $intermediate $W[type_cast_2194_wire] : $int<64>
    // idxprom
    $W[idxprom_2196] : $int<64>
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 639
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $intermediate $W[R_idxprom_2200_resized] : $int<14>
    $intermediate $W[R_idxprom_2200_scaled] : $int<14>
    $intermediate $W[array_obj_ref_2201_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_2201_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_2203] : $int<32>
    // 			$guard (ifx_xthen155_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 640
    // ->(arrayidx)
    $intermediate $W[ptr_deref_2206_wire] : $int<64>
    $intermediate $W[ptr_deref_2206_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_2206_root_address] : $int<14>
    $W[ptr_deref_2206_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_2206_data_0] : $int<64>
    // 			$volatile ifx_xelse158_exec_guard := ifx_xend83_ifx_xelse158_taken $buffering 1
    //  file prog.linked.opt.aa, line 641
    // ifx_xelse158_exec_guard
    $W[ifx_xelse158_exec_guard_2212] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard) $volatile sext177 := (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 642
    // sext177
    $W[sext177_2219] : $int<32>
    // 			$guard (ifx_xelse158_exec_guard) $volatile shr161 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 643
    // ($bitcast ($int<32>) sext177 )
    $intermediate $W[type_cast_2223_wire] : $int<32>
    // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $intermediate $W[ASHR_i32_i32_2227_wire] : $int<32>
    // shr161
    $W[shr161_2229] : $int<32>
    // 			$guard (ifx_xelse158_exec_guard) idxprom162 := ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 644
    // ($cast ($int<64>) shr161 )
    $intermediate $W[type_cast_2233_wire] : $int<64>
    // idxprom162
    $W[idxprom162_2235] : $int<64>
    // 			arrayidx163 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 645
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162])
    $intermediate $W[R_idxprom162_2239_resized] : $int<14>
    $intermediate $W[R_idxprom162_2239_scaled] : $int<14>
    $intermediate $W[array_obj_ref_2240_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_2240_root_address] : $int<14>
    // arrayidx163
    $W[arrayidx163_2242] : $int<32>
    // 			ifx_xelse158_exec_guard_1895_delayed_8_0 := ifx_xelse158_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 646
    // ifx_xelse158_exec_guard_1895_delayed_8_0
    $W[ifx_xelse158_exec_guard_1895_delayed_8_0_2245] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard_1895_delayed_8_0) tmp164 := ->(arrayidx163) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 647
    // ->(arrayidx163)
    $intermediate $W[ptr_deref_2249_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_2249_root_address] : $int<14>
    $W[ptr_deref_2249_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_2249_data_0] : $int<64>
    // tmp164
    $W[tmp164_2250] : $int<64>
    // 			ifx_xelse158_exec_guard_1900_delayed_1_0 := ifx_xelse158_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 648
    // ifx_xelse158_exec_guard_1900_delayed_1_0
    $W[ifx_xelse158_exec_guard_1900_delayed_1_0_2253] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard_1900_delayed_1_0) conv166 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 649
    // ($cast ($int<32>) conv100 )
    $intermediate $W[type_cast_2257_wire] : $int<32>
    // conv166
    $W[conv166_2259] : $int<32>
    // 			ifx_xelse158_exec_guard_1906_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 650
    // ifx_xelse158_exec_guard_1906_delayed_2_0
    $W[ifx_xelse158_exec_guard_1906_delayed_2_0_2262] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard_1906_delayed_2_0) $volatile shr167 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 651
    // ($bitcast ($int<32>) conv166 )
    $intermediate $W[type_cast_2266_wire] : $int<32>
    // (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_2270_wire] : $int<32>
    // shr167
    $W[shr167_2272] : $int<32>
    // 			ifx_xelse158_exec_guard_1916_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 652
    // ifx_xelse158_exec_guard_1916_delayed_2_0
    $W[ifx_xelse158_exec_guard_1916_delayed_2_0_2275] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard_1916_delayed_2_0) idxprom168 := ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 653
    // ($cast ($int<64>) shr167 )
    $intermediate $W[type_cast_2279_wire] : $int<64>
    // idxprom168
    $W[idxprom168_2281] : $int<64>
    // 			arrayidx169 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 654
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168])
    $intermediate $W[R_idxprom168_2285_resized] : $int<14>
    $intermediate $W[R_idxprom168_2285_scaled] : $int<14>
    $intermediate $W[array_obj_ref_2286_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_2286_root_address] : $int<14>
    // arrayidx169
    $W[arrayidx169_2288] : $int<32>
    // 			arrayidx169_1930_delayed_4_0 := arrayidx169 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 655
    // arrayidx169_1930_delayed_4_0
    $W[arrayidx169_1930_delayed_4_0_2291] : $int<32>
    // 			ifx_xelse158_exec_guard_1929_delayed_14_0 := ifx_xelse158_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 656
    // ifx_xelse158_exec_guard_1929_delayed_14_0
    $W[ifx_xelse158_exec_guard_1929_delayed_14_0_2294] : $int<1>
    // 			$guard (ifx_xelse158_exec_guard_1929_delayed_14_0) ->(arrayidx169_1930_delayed_4_0) := tmp164 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 657
    // ->(arrayidx169_1930_delayed_4_0)
    $intermediate $W[ptr_deref_2297_wire] : $int<64>
    $intermediate $W[ptr_deref_2297_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_2297_root_address] : $int<14>
    $W[ptr_deref_2297_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_2297_data_0] : $int<64>
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 658
    // tobool
    $W[tobool_2305] : $int<1>
    // 			$volatile ifx_xend170_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 659
    // ifx_xend170_whilex_xend_taken
    $W[ifx_xend170_whilex_xend_taken_2309] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 118165608
    // 		Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 667
    // Block1_complete
    // datapath-instances for block %zeropad3D_B%body
    //  file prog.linked.opt.aa, line 479
    // 		call := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 481
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1498_inst] (Block1_starting) (call_1499) 
    $buffering $out RPIPE_Block1_starting_1498_inst call_1499 1
    // 		call1 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 482
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1501_inst] (Block1_starting) (call1_1502) 
    $buffering $out RPIPE_Block1_starting_1501_inst call1_1502 1
    // 		call2 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 483
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1504_inst] (Block1_starting) (call2_1505) 
    $buffering $out RPIPE_Block1_starting_1504_inst call2_1505 1
    // 		call3 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 484
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1507_inst] (Block1_starting) (call3_1508) 
    $buffering $out RPIPE_Block1_starting_1507_inst call3_1508 1
    // 		call4 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 485
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1510_inst] (Block1_starting) (call4_1511) 
    $buffering $out RPIPE_Block1_starting_1510_inst call4_1511 1
    // 		call5 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 486
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1513_inst] (Block1_starting) (call5_1514) 
    $buffering $out RPIPE_Block1_starting_1513_inst call5_1514 1
    // 		call6 := Block1_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 487
    // Block1_starting
    $ioport $in [RPIPE_Block1_starting_1516_inst] (Block1_starting) (call6_1517) 
    $buffering $out RPIPE_Block1_starting_1516_inst call6_1517 1
    // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 489
    // ($cast ($uint<16>) call1 )
    # := [type_cast_1521_inst] (call1_1502) (conv_1522)    
    $buffering  $out type_cast_1521_inst conv_1522 1
    $delay type_cast_1521_inst 1
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 490
    // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
    >>[LSHR_u16_u16_1527_inst] (conv_1522 type_cast_1526_wire_constant) (div_1528)   $flowthrough 
    $delay LSHR_u16_u16_1527_inst 0
    // 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 491
    // ($cast ($uint<32>) call2 )
    # := [type_cast_1531_inst] (call2_1505) (conv32_1532)    
    $buffering  $out type_cast_1531_inst conv32_1532 1
    $delay type_cast_1531_inst 1
    // 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 492
    // ($cast ($uint<32>) call1 )
    # := [type_cast_1535_inst] (call1_1502) (conv34_1536)    
    $buffering  $out type_cast_1535_inst conv34_1536 1
    $delay type_cast_1535_inst 1
    // 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 493
    // ($cast ($uint<32>) call5 )
    # := [type_cast_1539_inst] (call5_1514) (conv38_1540)    
    $buffering  $out type_cast_1539_inst conv38_1540 1
    $delay type_cast_1539_inst 1
    // 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 494
    // ($cast ($uint<32>) call4 )
    # := [type_cast_1543_inst] (call4_1511) (conv40_1544)    
    $buffering  $out type_cast_1543_inst conv40_1544 1
    $delay type_cast_1543_inst 1
    // 		$volatile mul41 := (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 495
    // (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_1549_inst] (conv40_1544 type_cast_1548_wire_constant) (mul41_1550)   $flowthrough 
    $delay SHL_u32_u32_1549_inst 0
    // 		$volatile sext := (mul41 * conv38) $buffering 1
    //  file prog.linked.opt.aa, line 496
    // (mul41 * conv38)
    *[MUL_u32_u32_1554_inst] (mul41_1550 conv38_1540) (sext_1555)   $flowthrough 
    $delay MUL_u32_u32_1554_inst 0
    // 		$volatile conv95 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 497
    // ($bitcast ($int<32>) sext )
    # := [type_cast_1558_inst] (sext_1555) (type_cast_1558_wire)   $flowthrough
    $delay type_cast_1558_inst 0
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_1562_inst] (type_cast_1558_wire type_cast_1561_wire_constant) (ASHR_i32_i32_1562_wire)   $flowthrough 
    $delay ASHR_i32_i32_1562_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_1563_inst] (ASHR_i32_i32_1562_wire) (conv95_1564)   $flowthrough
    $delay type_cast_1563_inst 0
    // 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 498
    // ($cast ($uint<32>) call6 )
    # := [type_cast_1567_inst] (call6_1517) (conv109_1568)    
    $buffering  $out type_cast_1567_inst conv109_1568 1
    $delay type_cast_1567_inst 1
    // 		$volatile mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 499
    // (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_1573_inst] (conv34_1536 type_cast_1572_wire_constant) (mul_1574)   $flowthrough 
    $delay SHL_u32_u32_1573_inst 0
    // 		$volatile sext175 := (mul * conv32) $buffering 1
    //  file prog.linked.opt.aa, line 500
    // (mul * conv32)
    *[MUL_u32_u32_1578_inst] (mul_1574 conv32_1532) (sext175_1579)   $flowthrough 
    $delay MUL_u32_u32_1578_inst 0
    // 		$volatile conv113 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 501
    // ($bitcast ($int<32>) sext175 )
    # := [type_cast_1582_inst] (sext175_1579) (type_cast_1582_wire)   $flowthrough
    $delay type_cast_1582_inst 0
    // (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_1586_inst] (type_cast_1582_wire type_cast_1585_wire_constant) (ASHR_i32_i32_1586_wire)   $flowthrough 
    $delay ASHR_i32_i32_1586_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_1587_inst] (ASHR_i32_i32_1586_wire) (conv113_1588)   $flowthrough
    $delay type_cast_1587_inst 0
    // 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 502
    // ($cast ($uint<32>) call )
    # := [type_cast_1591_inst] (call_1499) (conv131_1592)    
    $buffering  $out type_cast_1591_inst conv131_1592 1
    $delay type_cast_1591_inst 1
    // 		$volatile div132 := (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 503
    // (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_1597_inst] (conv131_1592 type_cast_1596_wire_constant) (div132_1598)   $flowthrough 
    $delay LSHR_u32_u32_1597_inst 0
    // 		$volatile add135 := (conv109 + div132) $buffering 1
    //  file prog.linked.opt.aa, line 504
    // (conv109 + div132)
    +[ADD_u32_u32_1602_inst] (conv109_1568 div132_1598) (add135_1603)   $flowthrough 
    $delay ADD_u32_u32_1602_inst 0
    // 		$volatile add152 := (conv109 + conv34) $buffering 1
    //  file prog.linked.opt.aa, line 505
    // (conv109 + conv34)
    +[ADD_u32_u32_1607_inst] (conv109_1568 conv34_1536) (add152_1608)   $flowthrough 
    $delay ADD_u32_u32_1607_inst 0
    // 		$volatile shl := (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 506
    // (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1613_inst] (conv109_1568 type_cast_1612_wire_constant) (shl_1614)   $flowthrough 
    $delay SHL_u32_u32_1613_inst 0
    // 		$volatile add63 := (shl + conv34) $buffering 1
    //  file prog.linked.opt.aa, line 507
    // (shl + conv34)
    +[ADD_u32_u32_1618_inst] (shl_1614 conv34_1536) (add63_1619)   $flowthrough 
    $delay ADD_u32_u32_1618_inst 0
    // 		$volatile add78 := (shl + div132) $buffering 1
    //  file prog.linked.opt.aa, line 508
    // (shl + div132)
    +[ADD_u32_u32_1623_inst] (shl_1614 div132_1598) (add78_1624)   $flowthrough 
    $delay ADD_u32_u32_1623_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 510
    // 			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 511
    // constant phi data-path element skipped phi_stmt_1627
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 513
    // constant phi data-path element skipped phi_stmt_1632
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 515
    // ($cast ($uint<16>) div )
    # := [type_cast_1640_inst] (div_1528) (type_cast_1640_wire)    
    $buffering  $out type_cast_1640_inst type_cast_1640_wire 1
    $delay type_cast_1640_inst 1
    $phi [phi_stmt_1637] (type_cast_1640_wire) ( jx_x1_at_entry_1637 ) 
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 518
    ==0? [do_while_stmt_1642_branch] (tobool_2305)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 520
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 521
    // ($cast ($uint<16>) kx_x0 )
    # := [type_cast_1647_inst] (kx_x0_1839) (type_cast_1647_wire)     $fullrate
    $buffering  $out type_cast_1647_inst type_cast_1647_wire 1
    $delay type_cast_1647_inst 1
    # $phi [phi_stmt_1644] (type_cast_1647_wire kx_x1_at_entry_1627) ( kx_x1_1644 ) $fullrate
    // $buffering  $out phi_stmt_1644 kx_x1_1644 2
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 523
    // ($cast ($uint<16>) ix_x1 )
    # := [type_cast_1652_inst] (ix_x1_1867) (type_cast_1652_wire)     $fullrate
    $buffering  $out type_cast_1652_inst type_cast_1652_wire 1
    $delay type_cast_1652_inst 1
    # $phi [phi_stmt_1649] (type_cast_1652_wire ix_x2_at_entry_1632) ( ix_x2_1649 ) $fullrate
    // $buffering  $out phi_stmt_1649 ix_x2_1649 2
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 525
    // ($cast ($uint<16>) jx_x0 )
    # := [type_cast_1657_inst] (jx_x0_1895) (type_cast_1657_wire)     $fullrate
    $buffering  $out type_cast_1657_inst type_cast_1657_wire 1
    $delay type_cast_1657_inst 1
    # := [jx_x1_at_entry_1637_1658_buf] (jx_x1_at_entry_1637) (jx_x1_at_entry_1637_1658_buffered)     $fullrate
    $buffering $out jx_x1_at_entry_1637_1658_buf jx_x1_at_entry_1637_1658_buffered  1
    # $phi [phi_stmt_1654] (type_cast_1657_wire jx_x1_at_entry_1637_1658_buffered) ( jx_x1_1654 ) $fullrate
    // $buffering  $out phi_stmt_1654 jx_x1_1654 2
    // 			conv48 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 528
    // ($cast ($int<32>) kx_x1 )
    $S:=$U [type_cast_1662_inst] (kx_x1_1644) (type_cast_1662_wire)   $flowthrough
    $delay type_cast_1662_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
    # := [type_cast_1663_inst] (type_cast_1662_wire) (conv48_1664)     $fullrate
    $buffering  $out type_cast_1663_inst conv48_1664 1
    $delay type_cast_1663_inst 1
    // 			$volatile add := (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 529
    // (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
    +[ADD_u32_u32_1669_inst] (conv48_1664 type_cast_1668_wire_constant) (add_1670)   $flowthrough 
    $delay ADD_u32_u32_1669_inst 0
    // 			type_cast_1492_1492_delayed_2_0 := ($bitcast ($int<32>) conv32 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 530
    // ($bitcast ($int<32>) conv32 )
    # := [type_cast_1673_inst] (conv32_1532) (type_cast_1492_1492_delayed_2_0_1674)     $fullrate
    $buffering  $out type_cast_1673_inst type_cast_1492_1492_delayed_2_0_1674 2
    $delay type_cast_1673_inst 1
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 531
    // ($bitcast ($int<32>) add )
    # := [type_cast_1677_inst] (add_1670) (type_cast_1677_wire)   $flowthrough
    $delay type_cast_1677_inst 0
    // (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0)
    $S<$S[SLT_i32_u1_1679_inst] (type_cast_1677_wire type_cast_1492_1492_delayed_2_0_1674) (cmp_1680)   $flowthrough 
    $delay SLT_i32_u1_1679_inst 0
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 532
    # := [W_whilex_xbody_ifx_xthen_taken_1681_inst] (cmp_1680) (whilex_xbody_ifx_xthen_taken_1683)    $flowthrough 
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 533
    // ( ~ cmp )
    ~ [NOT_u1_u1_1686_inst] (cmp_1680) (whilex_xbody_ifx_xelse_taken_1687)   $flowthrough
    $delay NOT_u1_u1_1686_inst 0
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 534
    # := [W_ifx_xelse_exec_guard_1688_inst] (whilex_xbody_ifx_xelse_taken_1687) (ifx_xelse_exec_guard_1690)    $flowthrough 
    // 			jx_x1_1507_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 535
    # := [W_jx_x1_1507_delayed_1_0_1691_inst] (jx_x1_1654) (jx_x1_1507_delayed_1_0_1693)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 536
    // (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_1699_inst] (jx_x1_1507_delayed_1_0_1693 type_cast_1698_wire_constant) (inc_1700) $guard ( ifx_xelse_exec_guard_1690 )   $flowthrough 
    $delay ADD_u16_u16_1699_inst 0
    // 			$guard (ifx_xelse_exec_guard) conv58 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 537
    // ($cast ($int<32>) inc )
    $S:=$U [type_cast_1704_inst] (inc_1700) (type_cast_1704_wire)  $guard ( ifx_xelse_exec_guard_1690 )  $flowthrough
    $delay type_cast_1704_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
    # := [type_cast_1705_inst] (type_cast_1704_wire) (conv58_1706)  $guard ( ifx_xelse_exec_guard_1690 )    $fullrate
    $buffering  $out type_cast_1705_inst conv58_1706 1
    $delay type_cast_1705_inst 1
    // 			ifx_xelse_exec_guard_1518_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 538
    # := [W_ifx_xelse_exec_guard_1518_delayed_1_0_1707_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1518_delayed_1_0_1709)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_1518_delayed_1_0) $volatile cmp64 := (conv58 == add63) $buffering 1
    //  file prog.linked.opt.aa, line 539
    // (conv58 == add63)
    ==[EQ_u32_u1_1714_inst] (conv58_1706 add63_1619) (cmp64_1715) $guard ( ifx_xelse_exec_guard_1518_delayed_1_0_1709 )   $flowthrough 
    $delay EQ_u32_u1_1714_inst 0
    // 			ifx_xelse_exec_guard_1524_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 540
    # := [W_ifx_xelse_exec_guard_1524_delayed_1_0_1716_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1524_delayed_1_0_1718)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_1524_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 541
    // ($cast ($uint<16>) cmp64 )
    # := [type_cast_1722_inst] (cmp64_1715) (inc69_1723)  $guard ( ifx_xelse_exec_guard_1524_delayed_1_0_1718 )    $fullrate
    $buffering  $out type_cast_1722_inst inc69_1723 1
    $delay type_cast_1722_inst 1
    // 			ifx_xelse_exec_guard_1529_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 542
    # := [W_ifx_xelse_exec_guard_1529_delayed_2_0_1724_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1529_delayed_2_0_1726)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_1529_delayed_2_0_1724_inst ifx_xelse_exec_guard_1529_delayed_2_0_1726 2
    // 			ix_x2_1532_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 543
    # := [W_ix_x2_1532_delayed_3_0_1727_inst] (ix_x2_1649) (ix_x2_1532_delayed_3_0_1729)  $cut_through    $fullrate
    $buffering  $out W_ix_x2_1532_delayed_3_0_1727_inst ix_x2_1532_delayed_3_0_1729 3
    // 			$guard (ifx_xelse_exec_guard_1529_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_1532_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 544
    // (inc69 + ix_x2_1532_delayed_3_0)
    +[ADD_u16_u16_1734_inst] (inc69_1723 ix_x2_1532_delayed_3_0_1729) (inc69x_xix_x2_1735) $guard ( ifx_xelse_exec_guard_1529_delayed_2_0_1726 )   $flowthrough 
    $delay ADD_u16_u16_1734_inst 0
    // 			ifx_xelse_exec_guard_1535_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 545
    # := [W_ifx_xelse_exec_guard_1535_delayed_1_0_1736_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1535_delayed_1_0_1738)  $cut_through    $fullrate
    // 			inc_1539_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 546
    # := [W_inc_1539_delayed_1_0_1739_inst] (inc_1700) (inc_1539_delayed_1_0_1741)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_1535_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 div  inc_1539_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 547
    // ( $mux cmp64 div  inc_1539_delayed_1_0 ) 
    ? [MUX_1747_inst] (cmp64_1715 div_1528 inc_1539_delayed_1_0_1741) (jx_x2_1748) $guard ( ifx_xelse_exec_guard_1535_delayed_1_0_1738 )  $flowthrough
    // 			ifx_xelse_exec_guard_1542_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 548
    # := [W_ifx_xelse_exec_guard_1542_delayed_2_0_1749_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1542_delayed_2_0_1751)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_1542_delayed_2_0_1749_inst ifx_xelse_exec_guard_1542_delayed_2_0_1751 2
    // 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 549
    // ($cast ($int<32>) inc69x_xix_x2 )
    $S:=$U [type_cast_1755_inst] (inc69x_xix_x2_1735) (type_cast_1755_wire)  $guard ( ifx_xelse_exec_guard_1542_delayed_2_0_1751 )  $flowthrough
    $delay type_cast_1755_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
    # := [type_cast_1756_inst] (type_cast_1755_wire) (conv71_1757)  $guard ( ifx_xelse_exec_guard_1542_delayed_2_0_1751 )    $fullrate
    $buffering  $out type_cast_1756_inst conv71_1757 2
    $delay type_cast_1756_inst 1
    // 			ifx_xelse_exec_guard_1548_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 550
    # := [W_ifx_xelse_exec_guard_1548_delayed_3_0_1758_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1548_delayed_3_0_1760)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_1548_delayed_3_0_1758_inst ifx_xelse_exec_guard_1548_delayed_3_0_1760 3
    // 			$guard (ifx_xelse_exec_guard_1548_delayed_3_0) $volatile cmp79 := (conv71 == add78) $buffering 1
    //  file prog.linked.opt.aa, line 551
    // (conv71 == add78)
    ==[EQ_u32_u1_1765_inst] (conv71_1757 add78_1624) (cmp79_1766) $guard ( ifx_xelse_exec_guard_1548_delayed_3_0_1760 )   $flowthrough 
    $delay EQ_u32_u1_1765_inst 0
    // 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 552
    # := [W_ifx_xelse_exec_guard_1555_delayed_3_0_1767_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1555_delayed_3_0_1769)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_1555_delayed_3_0_1767_inst ifx_xelse_exec_guard_1555_delayed_3_0_1769 3
    // 			$volatile ifx_xelse_ifx_xthen81_taken := (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79) $buffering 1
    //  file prog.linked.opt.aa, line 553
    // (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79)
    &[AND_u1_u1_1773_inst] (ifx_xelse_exec_guard_1555_delayed_3_0_1769 cmp79_1766) (ifx_xelse_ifx_xthen81_taken_1774)   $flowthrough 
    $delay AND_u1_u1_1773_inst 0
    // 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 554
    # := [W_ifx_xelse_exec_guard_1560_delayed_3_0_1775_inst] (ifx_xelse_exec_guard_1690) (ifx_xelse_exec_guard_1560_delayed_3_0_1777)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_1560_delayed_3_0_1775_inst ifx_xelse_exec_guard_1560_delayed_3_0_1777 3
    // 			$volatile ifx_xelse_ifx_xend83_taken := (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 )) $buffering 1
    //  file prog.linked.opt.aa, line 555
    // ( ~ cmp79 )
    ~ [NOT_u1_u1_1781_inst] (cmp79_1766) (NOT_u1_u1_1781_wire)   $flowthrough
    $delay NOT_u1_u1_1781_inst 0
    // (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 ))
    &[AND_u1_u1_1782_inst] (ifx_xelse_exec_guard_1560_delayed_3_0_1777 NOT_u1_u1_1781_wire) (ifx_xelse_ifx_xend83_taken_1783)   $flowthrough 
    $delay AND_u1_u1_1782_inst 0
    // 			$volatile ifx_xthen81_exec_guard := ifx_xelse_ifx_xthen81_taken $buffering 1
    //  file prog.linked.opt.aa, line 556
    # := [W_ifx_xthen81_exec_guard_1784_inst] (ifx_xelse_ifx_xthen81_taken_1774) (ifx_xthen81_exec_guard_1786)    $flowthrough 
    // 			$volatile ifx_xthen81_ifx_xend83_taken := ifx_xthen81_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 557
    # := [W_ifx_xthen81_ifx_xend83_taken_1787_inst] (ifx_xthen81_exec_guard_1786) (ifx_xthen81_ifx_xend83_taken_1789)    $flowthrough 
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 558
    # := [W_ifx_xthen_exec_guard_1790_inst] (whilex_xbody_ifx_xthen_taken_1683) (ifx_xthen_exec_guard_1792)    $flowthrough 
    // 			kx_x1_1576_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 559
    # := [W_kx_x1_1576_delayed_1_0_1793_inst] (kx_x1_1644) (kx_x1_1576_delayed_1_0_1795)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile add54 := (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 560
    // (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
    +[ADD_u16_u16_1801_inst] (kx_x1_1576_delayed_1_0_1795 type_cast_1800_wire_constant) (add54_1802) $guard ( ifx_xthen_exec_guard_1792 )   $flowthrough 
    $delay ADD_u16_u16_1801_inst 0
    // 			$volatile ifx_xthen_ifx_xend83_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 561
    # := [W_ifx_xthen_ifx_xend83_taken_1803_inst] (ifx_xthen_exec_guard_1792) (ifx_xthen_ifx_xend83_taken_1805)    $flowthrough 
    // 			ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 562
    # := [W_ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1806_inst] (ifx_xthen_ifx_xend83_taken_1805) (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1808)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1806_inst ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1808 3
    // 			$volatile ifx_xend83_exec_guard := (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 563
    // (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)
    |[OR_u1_u1_1813_inst] (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1808 ifx_xthen81_ifx_xend83_taken_1789) (OR_u1_u1_1813_wire)   $flowthrough 
    $delay OR_u1_u1_1813_inst 0
    // (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken))
    |[OR_u1_u1_1814_inst] (ifx_xelse_ifx_xend83_taken_1783 OR_u1_u1_1813_wire) (ifx_xend83_exec_guard_1815)   $flowthrough 
    $delay OR_u1_u1_1814_inst 0
    // 			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 564
    # := [W_ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1816_inst] (ifx_xthen_ifx_xend83_taken_1805) (ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1818)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1816_inst ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1818 3
    // 			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 565
    // ($bitcast ($uint<16>) add54 )
    # := [type_cast_1821_inst] (add54_1802) (type_cast_1594_1594_delayed_3_0_1822)     $fullrate
    $buffering  $out type_cast_1821_inst type_cast_1594_1594_delayed_3_0_1822 3
    $delay type_cast_1821_inst 1
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 566
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1836_inst] (ifx_xelse_ifx_xend83_taken_1783 type_cast_1833_wire_constant type_cast_1835_wire_constant) (MUX_1836_wire)  $flowthrough
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1837_inst] (ifx_xthen81_ifx_xend83_taken_1789 type_cast_1829_wire_constant MUX_1836_wire) (MUX_1837_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1838_inst] (ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1818 type_cast_1594_1594_delayed_3_0_1822 MUX_1837_wire) (kx_x0_1839)  $flowthrough
    // 			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 567
    // ($bitcast ($uint<16>) inc69x_xix_x2 )
    # := [type_cast_1842_inst] (inc69x_xix_x2_1735) (type_cast_1618_1618_delayed_1_0_1843)     $fullrate
    $buffering  $out type_cast_1842_inst type_cast_1618_1618_delayed_1_0_1843 2
    $delay type_cast_1842_inst 1
    // 			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 568
    // ($bitcast ($uint<16>) inc69x_xix_x2 )
    # := [type_cast_1846_inst] (inc69x_xix_x2_1735) (type_cast_1615_1615_delayed_1_0_1847)     $fullrate
    $buffering  $out type_cast_1846_inst type_cast_1615_1615_delayed_1_0_1847 2
    $delay type_cast_1846_inst 1
    // 			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 569
    // ($bitcast ($uint<16>) ix_x2 )
    # := [type_cast_1850_inst] (ix_x2_1649) (type_cast_1612_1612_delayed_4_0_1851)     $fullrate
    $buffering  $out type_cast_1850_inst type_cast_1612_1612_delayed_4_0_1851 4
    $delay type_cast_1850_inst 1
    // 			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 570
    # := [W_ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1852_inst] (ifx_xthen_ifx_xend83_taken_1805) (ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1854)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1852_inst ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1854 3
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 571
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1864_inst] (ifx_xelse_ifx_xend83_taken_1783 type_cast_1618_1618_delayed_1_0_1843 type_cast_1863_wire_constant) (MUX_1864_wire)  $flowthrough
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1865_inst] (ifx_xthen81_ifx_xend83_taken_1789 type_cast_1615_1615_delayed_1_0_1847 MUX_1864_wire) (MUX_1865_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1866_inst] (ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1854 type_cast_1612_1612_delayed_4_0_1851 MUX_1865_wire) (ix_x1_1867)  $flowthrough
    // 			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 572
    # := [W_ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1868_inst] (ifx_xthen_ifx_xend83_taken_1805) (ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1870)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1868_inst ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1870 3
    // 			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 573
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_1873_inst] (jx_x2_1748) (type_cast_1634_1634_delayed_2_0_1874)     $fullrate
    $buffering  $out type_cast_1873_inst type_cast_1634_1634_delayed_2_0_1874 2
    $delay type_cast_1873_inst 1
    // 			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 574
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_1877_inst] (jx_x2_1748) (type_cast_1631_1631_delayed_2_0_1878)     $fullrate
    $buffering  $out type_cast_1877_inst type_cast_1631_1631_delayed_2_0_1878 2
    $delay type_cast_1877_inst 1
    // 			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 575
    // ($bitcast ($uint<16>) jx_x1 )
    # := [type_cast_1881_inst] (jx_x1_1654) (type_cast_1628_1628_delayed_4_0_1882)     $fullrate
    $buffering  $out type_cast_1881_inst type_cast_1628_1628_delayed_4_0_1882 4
    $delay type_cast_1881_inst 1
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 576
    // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1892_inst] (ifx_xelse_ifx_xend83_taken_1783 type_cast_1634_1634_delayed_2_0_1874 type_cast_1891_wire_constant) (MUX_1892_wire)  $flowthrough
    // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1893_inst] (ifx_xthen81_ifx_xend83_taken_1789 type_cast_1631_1631_delayed_2_0_1878 MUX_1892_wire) (MUX_1893_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1894_inst] (ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1870 type_cast_1628_1628_delayed_4_0_1882 MUX_1893_wire) (jx_x0_1895)  $flowthrough
    // 			ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 577
    # := [W_ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1896_inst] (ifx_xthen_ifx_xend83_taken_1805) (ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1898)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1896_inst ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1898 3
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 578
    // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_1914_inst] (ifx_xelse_ifx_xend83_taken_1783 type_cast_1911_wire_constant type_cast_1913_wire_constant) (MUX_1914_wire)  $flowthrough
    // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_1915_inst] (ifx_xthen81_ifx_xend83_taken_1789 type_cast_1907_wire_constant MUX_1914_wire) (MUX_1915_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_1916_inst] (ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1898 type_cast_1903_wire_constant MUX_1915_wire) (flagx_x0_1917)  $flowthrough
    // 			$guard (ifx_xend83_exec_guard) conv87174 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 579
    // ($cast ($uint<32>) kx_x0 )
    # := [type_cast_1921_inst] (kx_x0_1839) (conv87174_1922)  $guard ( ifx_xend83_exec_guard_1815 )    $fullrate
    $buffering  $out type_cast_1921_inst conv87174_1922 1
    $delay type_cast_1921_inst 1
    // 			$guard (ifx_xend83_exec_guard) conv91 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 580
    // ($cast ($int<32>) jx_x0 )
    $S:=$U [type_cast_1926_inst] (jx_x0_1895) (type_cast_1926_wire)  $guard ( ifx_xend83_exec_guard_1815 )  $flowthrough
    $delay type_cast_1926_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
    # := [type_cast_1927_inst] (type_cast_1926_wire) (conv91_1928)  $guard ( ifx_xend83_exec_guard_1815 )    $fullrate
    $buffering  $out type_cast_1927_inst conv91_1928 1
    $delay type_cast_1927_inst 1
    // 			ifx_xend83_exec_guard_1671_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 581
    # := [W_ifx_xend83_exec_guard_1671_delayed_1_0_1929_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1671_delayed_1_0_1931)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1671_delayed_1_0) $volatile mul92 := (conv91 * conv38) $buffering 1
    //  file prog.linked.opt.aa, line 582
    // (conv91 * conv38)
    *[MUL_u32_u32_1936_inst] (conv91_1928 conv38_1540) (mul92_1937) $guard ( ifx_xend83_exec_guard_1671_delayed_1_0_1931 )   $flowthrough 
    $delay MUL_u32_u32_1936_inst 0
    // 			$guard (ifx_xend83_exec_guard) conv97 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 583
    // ($cast ($int<32>) ix_x1 )
    $S:=$U [type_cast_1941_inst] (ix_x1_1867) (type_cast_1941_wire)  $guard ( ifx_xend83_exec_guard_1815 )  $flowthrough
    $delay type_cast_1941_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
    # := [type_cast_1942_inst] (type_cast_1941_wire) (conv97_1943)  $guard ( ifx_xend83_exec_guard_1815 )    $fullrate
    $buffering  $out type_cast_1942_inst conv97_1943 1
    $delay type_cast_1942_inst 1
    // 			ifx_xend83_exec_guard_1683_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 584
    # := [W_ifx_xend83_exec_guard_1683_delayed_1_0_1944_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1683_delayed_1_0_1946)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1683_delayed_1_0) $volatile mul98 := (conv97 * conv95) $buffering 1
    //  file prog.linked.opt.aa, line 585
    // (conv97 * conv95)
    *[MUL_u32_u32_1951_inst] (conv97_1943 conv95_1564) (mul98_1952) $guard ( ifx_xend83_exec_guard_1683_delayed_1_0_1946 )   $flowthrough 
    $delay MUL_u32_u32_1951_inst 0
    // 			ifx_xend83_exec_guard_1689_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 586
    # := [W_ifx_xend83_exec_guard_1689_delayed_1_0_1953_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1689_delayed_1_0_1955)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1689_delayed_1_0) $volatile add93 := (mul98 + conv87174) $buffering 1
    //  file prog.linked.opt.aa, line 587
    // (mul98 + conv87174)
    +[ADD_u32_u32_1960_inst] (mul98_1952 conv87174_1922) (add93_1961) $guard ( ifx_xend83_exec_guard_1689_delayed_1_0_1955 )   $flowthrough 
    $delay ADD_u32_u32_1960_inst 0
    // 			ifx_xend83_exec_guard_1695_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 588
    # := [W_ifx_xend83_exec_guard_1695_delayed_1_0_1962_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1695_delayed_1_0_1964)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1695_delayed_1_0) $volatile add99 := (add93 + mul92) $buffering 1
    //  file prog.linked.opt.aa, line 589
    // (add93 + mul92)
    +[ADD_u32_u32_1969_inst] (add93_1961 mul92_1937) (add99_1970) $guard ( ifx_xend83_exec_guard_1695_delayed_1_0_1964 )   $flowthrough 
    $delay ADD_u32_u32_1969_inst 0
    // 			ifx_xend83_exec_guard_1701_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 590
    # := [W_ifx_xend83_exec_guard_1701_delayed_1_0_1971_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1701_delayed_1_0_1973)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1701_delayed_1_0) conv100 := ($cast ($uint<16>) add99 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 591
    // ($cast ($uint<16>) add99 )
    # := [type_cast_1977_inst] (add99_1970) (conv100_1978)  $guard ( ifx_xend83_exec_guard_1701_delayed_1_0_1973 )    $fullrate
    $buffering  $out type_cast_1977_inst conv100_1978 1
    $delay type_cast_1977_inst 1
    // 			ifx_xend83_exec_guard_1706_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 592
    # := [W_ifx_xend83_exec_guard_1706_delayed_1_0_1979_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1706_delayed_1_0_1981)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1706_delayed_1_0) $volatile sub := (conv91 - conv109) $buffering 1
    //  file prog.linked.opt.aa, line 593
    // (conv91 - conv109)
    -[SUB_u32_u32_1986_inst] (conv91_1928 conv109_1568) (sub_1987) $guard ( ifx_xend83_exec_guard_1706_delayed_1_0_1981 )   $flowthrough 
    $delay SUB_u32_u32_1986_inst 0
    // 			ifx_xend83_exec_guard_1712_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 594
    # := [W_ifx_xend83_exec_guard_1712_delayed_1_0_1988_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1712_delayed_1_0_1990)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1712_delayed_1_0) $volatile mul110 := (sub * conv32) $buffering 1
    //  file prog.linked.opt.aa, line 595
    // (sub * conv32)
    *[MUL_u32_u32_1995_inst] (sub_1987 conv32_1532) (mul110_1996) $guard ( ifx_xend83_exec_guard_1712_delayed_1_0_1990 )   $flowthrough 
    $delay MUL_u32_u32_1995_inst 0
    // 			ifx_xend83_exec_guard_1718_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 596
    # := [W_ifx_xend83_exec_guard_1718_delayed_1_0_1997_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1718_delayed_1_0_1999)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1718_delayed_1_0) $volatile sub118 := (conv97 - conv109) $buffering 1
    //  file prog.linked.opt.aa, line 597
    // (conv97 - conv109)
    -[SUB_u32_u32_2004_inst] (conv97_1943 conv109_1568) (sub118_2005) $guard ( ifx_xend83_exec_guard_1718_delayed_1_0_1999 )   $flowthrough 
    $delay SUB_u32_u32_2004_inst 0
    // 			ifx_xend83_exec_guard_1724_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 598
    # := [W_ifx_xend83_exec_guard_1724_delayed_1_0_2006_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1724_delayed_1_0_2008)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1724_delayed_1_0) $volatile mul119 := (sub118 * conv113) $buffering 1
    //  file prog.linked.opt.aa, line 599
    // (sub118 * conv113)
    *[MUL_u32_u32_2013_inst] (sub118_2005 conv113_1588) (mul119_2014) $guard ( ifx_xend83_exec_guard_1724_delayed_1_0_2008 )   $flowthrough 
    $delay MUL_u32_u32_2013_inst 0
    // 			ifx_xend83_exec_guard_1730_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 600
    # := [W_ifx_xend83_exec_guard_1730_delayed_1_0_2015_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1730_delayed_1_0_2017)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1730_delayed_1_0) $volatile add111 := (mul119 + conv87174) $buffering 1
    //  file prog.linked.opt.aa, line 601
    // (mul119 + conv87174)
    +[ADD_u32_u32_2022_inst] (mul119_2014 conv87174_1922) (add111_2023) $guard ( ifx_xend83_exec_guard_1730_delayed_1_0_2017 )   $flowthrough 
    $delay ADD_u32_u32_2022_inst 0
    // 			ifx_xend83_exec_guard_1736_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 602
    # := [W_ifx_xend83_exec_guard_1736_delayed_1_0_2024_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1736_delayed_1_0_2026)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1736_delayed_1_0) $volatile add120 := (add111 + mul110) $buffering 1
    //  file prog.linked.opt.aa, line 603
    // (add111 + mul110)
    +[ADD_u32_u32_2031_inst] (add111_2023 mul110_1996) (add120_2032) $guard ( ifx_xend83_exec_guard_1736_delayed_1_0_2026 )   $flowthrough 
    $delay ADD_u32_u32_2031_inst 0
    // 			type_cast_1747_1747_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 604
    // ($bitcast ($int<32>) conv109 )
    # := [type_cast_2035_inst] (conv109_1568) (type_cast_1747_1747_delayed_1_0_2036)     $fullrate
    $buffering  $out type_cast_2035_inst type_cast_1747_1747_delayed_1_0_2036 1
    $delay type_cast_2035_inst 1
    // 			ifx_xend83_exec_guard_1742_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 605
    # := [W_ifx_xend83_exec_guard_1742_delayed_1_0_2037_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1742_delayed_1_0_2039)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1742_delayed_1_0) $volatile cmp126 := (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 606
    // ($bitcast ($int<32>) conv97 )
    # := [type_cast_2043_inst] (conv97_1943) (type_cast_2043_wire)  $guard ( ifx_xend83_exec_guard_1742_delayed_1_0_2039 )  $flowthrough
    $delay type_cast_2043_inst 0
    // (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0)
    $S<$S[SLT_i32_u1_2045_inst] (type_cast_2043_wire type_cast_1747_1747_delayed_1_0_2036) (cmp126_2046) $guard ( ifx_xend83_exec_guard_1742_delayed_1_0_2039 )   $flowthrough 
    $delay SLT_i32_u1_2045_inst 0
    // 			ifx_xend83_exec_guard_1750_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 607
    # := [W_ifx_xend83_exec_guard_1750_delayed_1_0_2047_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1750_delayed_1_0_2049)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1750_delayed_1_0) $volatile cmp126x_xnot := (cmp126 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 608
    // (cmp126 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2055_inst] (cmp126_2046 type_cast_2054_wire_constant) (cmp126x_xnot_2056) $guard ( ifx_xend83_exec_guard_1750_delayed_1_0_2049 )   $flowthrough 
    $delay XOR_u1_u1_2055_inst 0
    // 			type_cast_1762_1762_delayed_1_0 := ($bitcast ($int<32>) add135 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 609
    // ($bitcast ($int<32>) add135 )
    # := [type_cast_2059_inst] (add135_1603) (type_cast_1762_1762_delayed_1_0_2060)     $fullrate
    $buffering  $out type_cast_2059_inst type_cast_1762_1762_delayed_1_0_2060 1
    $delay type_cast_2059_inst 1
    // 			ifx_xend83_exec_guard_1757_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 610
    # := [W_ifx_xend83_exec_guard_1757_delayed_1_0_2061_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1757_delayed_1_0_2063)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1757_delayed_1_0) $volatile cmp136 := (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 611
    // ($bitcast ($int<32>) conv97 )
    # := [type_cast_2067_inst] (conv97_1943) (type_cast_2067_wire)  $guard ( ifx_xend83_exec_guard_1757_delayed_1_0_2063 )  $flowthrough
    $delay type_cast_2067_inst 0
    // (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0)
    $S<$S[SLT_i32_u1_2069_inst] (type_cast_2067_wire type_cast_1762_1762_delayed_1_0_2060) (cmp136_2070) $guard ( ifx_xend83_exec_guard_1757_delayed_1_0_2063 )   $flowthrough 
    $delay SLT_i32_u1_2069_inst 0
    // 			ifx_xend83_exec_guard_1765_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 612
    # := [W_ifx_xend83_exec_guard_1765_delayed_1_0_2071_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1765_delayed_1_0_2073)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1765_delayed_1_0) $volatile orx_xcond := (cmp126x_xnot & cmp136) $buffering 1
    //  file prog.linked.opt.aa, line 613
    // (cmp126x_xnot & cmp136)
    &[AND_u1_u1_2078_inst] (cmp126x_xnot_2056 cmp136_2070) (orx_xcond_2079) $guard ( ifx_xend83_exec_guard_1765_delayed_1_0_2073 )   $flowthrough 
    $delay AND_u1_u1_2078_inst 0
    // 			ifx_xend83_exec_guard_1771_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 614
    # := [W_ifx_xend83_exec_guard_1771_delayed_1_0_2080_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1771_delayed_1_0_2082)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1771_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 615
    // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2088_inst] (orx_xcond_2079 type_cast_2087_wire_constant) (orx_xcondx_xnot_2089) $guard ( ifx_xend83_exec_guard_1771_delayed_1_0_2082 )   $flowthrough 
    $delay XOR_u1_u1_2088_inst 0
    // 			ifx_xend83_exec_guard_1778_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 616
    # := [W_ifx_xend83_exec_guard_1778_delayed_1_0_2090_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1778_delayed_1_0_2092)  $cut_through    $fullrate
    // 			type_cast_1783_1783_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 617
    // ($bitcast ($int<32>) conv109 )
    # := [type_cast_2095_inst] (conv109_1568) (type_cast_1783_1783_delayed_1_0_2096)     $fullrate
    $buffering  $out type_cast_2095_inst type_cast_1783_1783_delayed_1_0_2096 1
    $delay type_cast_2095_inst 1
    // 			$guard (ifx_xend83_exec_guard_1778_delayed_1_0) $volatile cmp143 := (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 618
    // ($bitcast ($int<32>) conv91 )
    # := [type_cast_2100_inst] (conv91_1928) (type_cast_2100_wire)  $guard ( ifx_xend83_exec_guard_1778_delayed_1_0_2092 )  $flowthrough
    $delay type_cast_2100_inst 0
    // (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0)
    $S<$S[SLT_i32_u1_2102_inst] (type_cast_2100_wire type_cast_1783_1783_delayed_1_0_2096) (cmp143_2103) $guard ( ifx_xend83_exec_guard_1778_delayed_1_0_2092 )   $flowthrough 
    $delay SLT_i32_u1_2102_inst 0
    // 			ifx_xend83_exec_guard_1786_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 619
    # := [W_ifx_xend83_exec_guard_1786_delayed_1_0_2104_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1786_delayed_1_0_2106)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1786_delayed_1_0) $volatile orx_xcond179 := (orx_xcondx_xnot | cmp143) $buffering 1
    //  file prog.linked.opt.aa, line 620
    // (orx_xcondx_xnot | cmp143)
    |[OR_u1_u1_2111_inst] (orx_xcondx_xnot_2089 cmp143_2103) (orx_xcond179_2112) $guard ( ifx_xend83_exec_guard_1786_delayed_1_0_2106 )   $flowthrough 
    $delay OR_u1_u1_2111_inst 0
    // 			ifx_xend83_exec_guard_1792_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 621
    # := [W_ifx_xend83_exec_guard_1792_delayed_1_0_2113_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1792_delayed_1_0_2115)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1792_delayed_1_0) $volatile orx_xcond179x_xnot := (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 622
    // (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2121_inst] (orx_xcond179_2112 type_cast_2120_wire_constant) (orx_xcond179x_xnot_2122) $guard ( ifx_xend83_exec_guard_1792_delayed_1_0_2115 )   $flowthrough 
    $delay XOR_u1_u1_2121_inst 0
    // 			ifx_xend83_exec_guard_1799_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 623
    # := [W_ifx_xend83_exec_guard_1799_delayed_1_0_2123_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1799_delayed_1_0_2125)  $cut_through    $fullrate
    // 			type_cast_1804_1804_delayed_1_0 := ($bitcast ($int<32>) add152 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 624
    // ($bitcast ($int<32>) add152 )
    # := [type_cast_2128_inst] (add152_1608) (type_cast_1804_1804_delayed_1_0_2129)     $fullrate
    $buffering  $out type_cast_2128_inst type_cast_1804_1804_delayed_1_0_2129 1
    $delay type_cast_2128_inst 1
    // 			$guard (ifx_xend83_exec_guard_1799_delayed_1_0) $volatile cmp153 := (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 625
    // ($bitcast ($int<32>) conv91 )
    # := [type_cast_2133_inst] (conv91_1928) (type_cast_2133_wire)  $guard ( ifx_xend83_exec_guard_1799_delayed_1_0_2125 )  $flowthrough
    $delay type_cast_2133_inst 0
    // (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0)
    $S<$S[SLT_i32_u1_2135_inst] (type_cast_2133_wire type_cast_1804_1804_delayed_1_0_2129) (cmp153_2136) $guard ( ifx_xend83_exec_guard_1799_delayed_1_0_2125 )   $flowthrough 
    $delay SLT_i32_u1_2135_inst 0
    // 			ifx_xend83_exec_guard_1807_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 626
    # := [W_ifx_xend83_exec_guard_1807_delayed_1_0_2137_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1807_delayed_1_0_2139)  $cut_through    $fullrate
    // 			$guard (ifx_xend83_exec_guard_1807_delayed_1_0) $volatile orx_xcond180 := (orx_xcond179x_xnot & cmp153) $buffering 1
    //  file prog.linked.opt.aa, line 627
    // (orx_xcond179x_xnot & cmp153)
    &[AND_u1_u1_2144_inst] (orx_xcond179x_xnot_2122 cmp153_2136) (orx_xcond180_2145) $guard ( ifx_xend83_exec_guard_1807_delayed_1_0_2139 )   $flowthrough 
    $delay AND_u1_u1_2144_inst 0
    // 			ifx_xend83_exec_guard_1814_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 628
    # := [W_ifx_xend83_exec_guard_1814_delayed_1_0_2146_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1814_delayed_1_0_2148)  $cut_through    $fullrate
    // 			$volatile ifx_xend83_ifx_xelse158_taken := (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180) $buffering 1
    //  file prog.linked.opt.aa, line 629
    // (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180)
    &[AND_u1_u1_2152_inst] (ifx_xend83_exec_guard_1814_delayed_1_0_2148 orx_xcond180_2145) (ifx_xend83_ifx_xelse158_taken_2153)   $flowthrough 
    $delay AND_u1_u1_2152_inst 0
    // 			ifx_xend83_exec_guard_1819_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 630
    # := [W_ifx_xend83_exec_guard_1819_delayed_1_0_2154_inst] (ifx_xend83_exec_guard_1815) (ifx_xend83_exec_guard_1819_delayed_1_0_2156)  $cut_through    $fullrate
    // 			$volatile ifx_xend83_ifx_xthen155_taken := (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 )) $buffering 1
    //  file prog.linked.opt.aa, line 631
    // ( ~ orx_xcond180 )
    ~ [NOT_u1_u1_2160_inst] (orx_xcond180_2145) (NOT_u1_u1_2160_wire)   $flowthrough
    $delay NOT_u1_u1_2160_inst 0
    // (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 ))
    &[AND_u1_u1_2161_inst] (ifx_xend83_exec_guard_1819_delayed_1_0_2156 NOT_u1_u1_2160_wire) (ifx_xend83_ifx_xthen155_taken_2162)   $flowthrough 
    $delay AND_u1_u1_2161_inst 0
    // 			$volatile ifx_xthen155_exec_guard := ifx_xend83_ifx_xthen155_taken $buffering 1
    //  file prog.linked.opt.aa, line 632
    # := [W_ifx_xthen155_exec_guard_2163_inst] (ifx_xend83_ifx_xthen155_taken_2162) (ifx_xthen155_exec_guard_2165)    $flowthrough 
    // 			ifx_xthen155_exec_guard_1827_delayed_1_0 := ifx_xthen155_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 633
    # := [W_ifx_xthen155_exec_guard_1827_delayed_1_0_2166_inst] (ifx_xthen155_exec_guard_2165) (ifx_xthen155_exec_guard_1827_delayed_1_0_2168)  $cut_through    $fullrate
    // 			$guard (ifx_xthen155_exec_guard_1827_delayed_1_0) conv157 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 634
    // ($cast ($int<32>) conv100 )
    $S:=$U [type_cast_2172_inst] (conv100_1978) (type_cast_2172_wire)  $guard ( ifx_xthen155_exec_guard_1827_delayed_1_0_2168 )  $flowthrough
    $delay type_cast_2172_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
    # := [type_cast_2173_inst] (type_cast_2172_wire) (conv157_2174)  $guard ( ifx_xthen155_exec_guard_1827_delayed_1_0_2168 )    $fullrate
    $buffering  $out type_cast_2173_inst conv157_2174 1
    $delay type_cast_2173_inst 1
    // 			ifx_xthen155_exec_guard_1833_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 635
    # := [W_ifx_xthen155_exec_guard_1833_delayed_2_0_2175_inst] (ifx_xthen155_exec_guard_2165) (ifx_xthen155_exec_guard_1833_delayed_2_0_2177)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen155_exec_guard_1833_delayed_2_0_2175_inst ifx_xthen155_exec_guard_1833_delayed_2_0_2177 2
    // 			$guard (ifx_xthen155_exec_guard_1833_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 636
    // ($bitcast ($int<32>) conv157 )
    # := [type_cast_2181_inst] (conv157_2174) (type_cast_2181_wire)  $guard ( ifx_xthen155_exec_guard_1833_delayed_2_0_2177 )  $flowthrough
    $delay type_cast_2181_inst 0
    // (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_2185_inst] (type_cast_2181_wire type_cast_2184_wire_constant) (ASHR_i32_i32_2185_wire) $guard ( ifx_xthen155_exec_guard_1833_delayed_2_0_2177 )   $flowthrough 
    $delay ASHR_i32_i32_2185_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_2186_inst] (ASHR_i32_i32_2185_wire) (shr_2187)  $guard ( ifx_xthen155_exec_guard_1833_delayed_2_0_2177 )  $flowthrough
    $delay type_cast_2186_inst 0
    // 			ifx_xthen155_exec_guard_1843_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 637
    # := [W_ifx_xthen155_exec_guard_1843_delayed_2_0_2188_inst] (ifx_xthen155_exec_guard_2165) (ifx_xthen155_exec_guard_1843_delayed_2_0_2190)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen155_exec_guard_1843_delayed_2_0_2188_inst ifx_xthen155_exec_guard_1843_delayed_2_0_2190 2
    // 			$guard (ifx_xthen155_exec_guard_1843_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 638
    // ($cast ($int<64>) shr )
    $S:=$U [type_cast_2194_inst] (shr_2187) (type_cast_2194_wire)  $guard ( ifx_xthen155_exec_guard_1843_delayed_2_0_2190 )  $flowthrough
    $delay type_cast_2194_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
    # := [type_cast_2195_inst] (type_cast_2194_wire) (idxprom_2196)  $guard ( ifx_xthen155_exec_guard_1843_delayed_2_0_2190 )    $fullrate
    $buffering  $out type_cast_2195_inst idxprom_2196 1
    $delay type_cast_2195_inst 1
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 639
    &/ [array_obj_ref_2201_index_1_resize] (idxprom_2196) (R_idxprom_2200_resized) 
    $flowthrough 
    &/ [array_obj_ref_2201_index_1_rename] (R_idxprom_2200_resized) (R_idxprom_2200_scaled) 
    $flowthrough 
    +[array_obj_ref_2201_index_offset] (R_idxprom_2200_scaled array_obj_ref_2201_constant_part_of_offset) (array_obj_ref_2201_final_offset)    $fullrate
    $buffering  $in array_obj_ref_2201_index_offset R_idxprom_2200_scaled 2
    $buffering  $in array_obj_ref_2201_index_offset array_obj_ref_2201_constant_part_of_offset 2
    $buffering  $out array_obj_ref_2201_index_offset array_obj_ref_2201_final_offset 2
    $delay array_obj_ref_2201_index_offset 2
    &/ [array_obj_ref_2201_root_address_inst] (array_obj_ref_2201_final_offset) (array_obj_ref_2201_root_address) 
    $flowthrough 
    # := [addr_of_2202_final_reg] (array_obj_ref_2201_root_address) (arrayidx_2203)     $fullrate
    $buffering  $out addr_of_2202_final_reg arrayidx_2203 1
    // 			$guard (ifx_xthen155_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 640
    // ->(arrayidx)
    &/ [ptr_deref_2206_base_resize] (arrayidx_2203) (ptr_deref_2206_resized_base_address) $guard ( ifx_xthen155_exec_guard_2165 ) 
    $flowthrough 
    &/ [ptr_deref_2206_root_address_inst] (ptr_deref_2206_resized_base_address) (ptr_deref_2206_root_address) $guard ( ifx_xthen155_exec_guard_2165 ) 
    $flowthrough 
    &/ [ptr_deref_2206_addr_0] (ptr_deref_2206_root_address) (ptr_deref_2206_word_address_0) $guard ( ifx_xthen155_exec_guard_2165 ) 
    $flowthrough 
    $store [ptr_deref_2206_store_0] $to memory_space_0 (ptr_deref_2206_word_address_0 ptr_deref_2206_data_0) $guard ( ifx_xthen155_exec_guard_2165 ) 
    $buffering  $in ptr_deref_2206_store_0 ptr_deref_2206_word_address_0 2
    $buffering  $in ptr_deref_2206_store_0 ptr_deref_2206_data_0 2
    $delay ptr_deref_2206_store_0 6
    &/ [ptr_deref_2206_gather_scatter] (type_cast_2208_wire_constant) (ptr_deref_2206_data_0) $guard ( ifx_xthen155_exec_guard_2165 ) 
    $flowthrough 
    // 			$volatile ifx_xelse158_exec_guard := ifx_xend83_ifx_xelse158_taken $buffering 1
    //  file prog.linked.opt.aa, line 641
    # := [W_ifx_xelse158_exec_guard_2210_inst] (ifx_xend83_ifx_xelse158_taken_2153) (ifx_xelse158_exec_guard_2212)    $flowthrough 
    // 			$guard (ifx_xelse158_exec_guard) $volatile sext177 := (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 642
    // (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_2218_inst] (add120_2032 type_cast_2217_wire_constant) (sext177_2219) $guard ( ifx_xelse158_exec_guard_2212 )   $flowthrough 
    $delay SHL_u32_u32_2218_inst 0
    // 			$guard (ifx_xelse158_exec_guard) $volatile shr161 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 643
    // ($bitcast ($int<32>) sext177 )
    # := [type_cast_2223_inst] (sext177_2219) (type_cast_2223_wire)  $guard ( ifx_xelse158_exec_guard_2212 )  $flowthrough
    $delay type_cast_2223_inst 0
    // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $S>>[ASHR_i32_i32_2227_inst] (type_cast_2223_wire type_cast_2226_wire_constant) (ASHR_i32_i32_2227_wire) $guard ( ifx_xelse158_exec_guard_2212 )   $flowthrough 
    $delay ASHR_i32_i32_2227_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
    # := [type_cast_2228_inst] (ASHR_i32_i32_2227_wire) (shr161_2229)  $guard ( ifx_xelse158_exec_guard_2212 )  $flowthrough
    $delay type_cast_2228_inst 0
    // 			$guard (ifx_xelse158_exec_guard) idxprom162 := ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 644
    // ($cast ($int<64>) shr161 )
    $S:=$U [type_cast_2233_inst] (shr161_2229) (type_cast_2233_wire)  $guard ( ifx_xelse158_exec_guard_2212 )  $flowthrough
    $delay type_cast_2233_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) )
    # := [type_cast_2234_inst] (type_cast_2233_wire) (idxprom162_2235)  $guard ( ifx_xelse158_exec_guard_2212 )    $fullrate
    $buffering  $out type_cast_2234_inst idxprom162_2235 1
    $delay type_cast_2234_inst 1
    // 			arrayidx163 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 645
    &/ [array_obj_ref_2240_index_1_resize] (idxprom162_2235) (R_idxprom162_2239_resized) 
    $flowthrough 
    &/ [array_obj_ref_2240_index_1_rename] (R_idxprom162_2239_resized) (R_idxprom162_2239_scaled) 
    $flowthrough 
    +[array_obj_ref_2240_index_offset] (R_idxprom162_2239_scaled array_obj_ref_2240_constant_part_of_offset) (array_obj_ref_2240_final_offset)    $fullrate
    $buffering  $in array_obj_ref_2240_index_offset R_idxprom162_2239_scaled 2
    $buffering  $in array_obj_ref_2240_index_offset array_obj_ref_2240_constant_part_of_offset 2
    $buffering  $out array_obj_ref_2240_index_offset array_obj_ref_2240_final_offset 2
    $delay array_obj_ref_2240_index_offset 2
    &/ [array_obj_ref_2240_root_address_inst] (array_obj_ref_2240_final_offset) (array_obj_ref_2240_root_address) 
    $flowthrough 
    # := [addr_of_2241_final_reg] (array_obj_ref_2240_root_address) (arrayidx163_2242)     $fullrate
    $buffering  $out addr_of_2241_final_reg arrayidx163_2242 1
    // 			ifx_xelse158_exec_guard_1895_delayed_8_0 := ifx_xelse158_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 646
    # := [W_ifx_xelse158_exec_guard_1895_delayed_8_0_2243_inst] (ifx_xelse158_exec_guard_2212) (ifx_xelse158_exec_guard_1895_delayed_8_0_2245)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse158_exec_guard_1895_delayed_8_0_2243_inst ifx_xelse158_exec_guard_1895_delayed_8_0_2245 8
    // 			$guard (ifx_xelse158_exec_guard_1895_delayed_8_0) tmp164 := ->(arrayidx163) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 647
    // ->(arrayidx163)
    &/ [ptr_deref_2249_base_resize] (arrayidx163_2242) (ptr_deref_2249_resized_base_address) $guard ( ifx_xelse158_exec_guard_1895_delayed_8_0_2245 ) 
    $flowthrough 
    &/ [ptr_deref_2249_root_address_inst] (ptr_deref_2249_resized_base_address) (ptr_deref_2249_root_address) $guard ( ifx_xelse158_exec_guard_1895_delayed_8_0_2245 ) 
    $flowthrough 
    &/ [ptr_deref_2249_addr_0] (ptr_deref_2249_root_address) (ptr_deref_2249_word_address_0) $guard ( ifx_xelse158_exec_guard_1895_delayed_8_0_2245 ) 
    $flowthrough 
    $load [ptr_deref_2249_load_0] $from memory_space_1 (ptr_deref_2249_word_address_0) (ptr_deref_2249_data_0) $guard ( ifx_xelse158_exec_guard_1895_delayed_8_0_2245 ) 
    $buffering  $in ptr_deref_2249_load_0 ptr_deref_2249_word_address_0 2
    $buffering  $out ptr_deref_2249_load_0 ptr_deref_2249_data_0 2
    $delay ptr_deref_2249_load_0 6
    &/ [ptr_deref_2249_gather_scatter] (ptr_deref_2249_data_0) (tmp164_2250) $guard ( ifx_xelse158_exec_guard_1895_delayed_8_0_2245 ) 
    $flowthrough 
    // 			ifx_xelse158_exec_guard_1900_delayed_1_0 := ifx_xelse158_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 648
    # := [W_ifx_xelse158_exec_guard_1900_delayed_1_0_2251_inst] (ifx_xelse158_exec_guard_2212) (ifx_xelse158_exec_guard_1900_delayed_1_0_2253)  $cut_through    $fullrate
    // 			$guard (ifx_xelse158_exec_guard_1900_delayed_1_0) conv166 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 649
    // ($cast ($int<32>) conv100 )
    $S:=$U [type_cast_2257_inst] (conv100_1978) (type_cast_2257_wire)  $guard ( ifx_xelse158_exec_guard_1900_delayed_1_0_2253 )  $flowthrough
    $delay type_cast_2257_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
    # := [type_cast_2258_inst] (type_cast_2257_wire) (conv166_2259)  $guard ( ifx_xelse158_exec_guard_1900_delayed_1_0_2253 )    $fullrate
    $buffering  $out type_cast_2258_inst conv166_2259 1
    $delay type_cast_2258_inst 1
    // 			ifx_xelse158_exec_guard_1906_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 650
    # := [W_ifx_xelse158_exec_guard_1906_delayed_2_0_2260_inst] (ifx_xelse158_exec_guard_2212) (ifx_xelse158_exec_guard_1906_delayed_2_0_2262)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse158_exec_guard_1906_delayed_2_0_2260_inst ifx_xelse158_exec_guard_1906_delayed_2_0_2262 2
    // 			$guard (ifx_xelse158_exec_guard_1906_delayed_2_0) $volatile shr167 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 651
    // ($bitcast ($int<32>) conv166 )
    # := [type_cast_2266_inst] (conv166_2259) (type_cast_2266_wire)  $guard ( ifx_xelse158_exec_guard_1906_delayed_2_0_2262 )  $flowthrough
    $delay type_cast_2266_inst 0
    // (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_2270_inst] (type_cast_2266_wire type_cast_2269_wire_constant) (ASHR_i32_i32_2270_wire) $guard ( ifx_xelse158_exec_guard_1906_delayed_2_0_2262 )   $flowthrough 
    $delay ASHR_i32_i32_2270_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_2271_inst] (ASHR_i32_i32_2270_wire) (shr167_2272)  $guard ( ifx_xelse158_exec_guard_1906_delayed_2_0_2262 )  $flowthrough
    $delay type_cast_2271_inst 0
    // 			ifx_xelse158_exec_guard_1916_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 652
    # := [W_ifx_xelse158_exec_guard_1916_delayed_2_0_2273_inst] (ifx_xelse158_exec_guard_2212) (ifx_xelse158_exec_guard_1916_delayed_2_0_2275)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse158_exec_guard_1916_delayed_2_0_2273_inst ifx_xelse158_exec_guard_1916_delayed_2_0_2275 2
    // 			$guard (ifx_xelse158_exec_guard_1916_delayed_2_0) idxprom168 := ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 653
    // ($cast ($int<64>) shr167 )
    $S:=$U [type_cast_2279_inst] (shr167_2272) (type_cast_2279_wire)  $guard ( ifx_xelse158_exec_guard_1916_delayed_2_0_2275 )  $flowthrough
    $delay type_cast_2279_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) )
    # := [type_cast_2280_inst] (type_cast_2279_wire) (idxprom168_2281)  $guard ( ifx_xelse158_exec_guard_1916_delayed_2_0_2275 )    $fullrate
    $buffering  $out type_cast_2280_inst idxprom168_2281 1
    $delay type_cast_2280_inst 1
    // 			arrayidx169 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 654
    &/ [array_obj_ref_2286_index_1_resize] (idxprom168_2281) (R_idxprom168_2285_resized) 
    $flowthrough 
    &/ [array_obj_ref_2286_index_1_rename] (R_idxprom168_2285_resized) (R_idxprom168_2285_scaled) 
    $flowthrough 
    +[array_obj_ref_2286_index_offset] (R_idxprom168_2285_scaled array_obj_ref_2286_constant_part_of_offset) (array_obj_ref_2286_final_offset)    $fullrate
    $buffering  $in array_obj_ref_2286_index_offset R_idxprom168_2285_scaled 2
    $buffering  $in array_obj_ref_2286_index_offset array_obj_ref_2286_constant_part_of_offset 2
    $buffering  $out array_obj_ref_2286_index_offset array_obj_ref_2286_final_offset 2
    $delay array_obj_ref_2286_index_offset 2
    &/ [array_obj_ref_2286_root_address_inst] (array_obj_ref_2286_final_offset) (array_obj_ref_2286_root_address) 
    $flowthrough 
    # := [addr_of_2287_final_reg] (array_obj_ref_2286_root_address) (arrayidx169_2288)     $fullrate
    $buffering  $out addr_of_2287_final_reg arrayidx169_2288 1
    // 			arrayidx169_1930_delayed_4_0 := arrayidx169 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 655
    # := [W_arrayidx169_1930_delayed_4_0_2289_inst] (arrayidx169_2288) (arrayidx169_1930_delayed_4_0_2291)  $cut_through    $fullrate
    $buffering  $out W_arrayidx169_1930_delayed_4_0_2289_inst arrayidx169_1930_delayed_4_0_2291 4
    // 			ifx_xelse158_exec_guard_1929_delayed_14_0 := ifx_xelse158_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 656
    # := [W_ifx_xelse158_exec_guard_1929_delayed_14_0_2292_inst] (ifx_xelse158_exec_guard_2212) (ifx_xelse158_exec_guard_1929_delayed_14_0_2294)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse158_exec_guard_1929_delayed_14_0_2292_inst ifx_xelse158_exec_guard_1929_delayed_14_0_2294 14
    // 			$guard (ifx_xelse158_exec_guard_1929_delayed_14_0) ->(arrayidx169_1930_delayed_4_0) := tmp164 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 657
    // ->(arrayidx169_1930_delayed_4_0)
    &/ [ptr_deref_2297_base_resize] (arrayidx169_1930_delayed_4_0_2291) (ptr_deref_2297_resized_base_address) $guard ( ifx_xelse158_exec_guard_1929_delayed_14_0_2294 ) 
    $flowthrough 
    &/ [ptr_deref_2297_root_address_inst] (ptr_deref_2297_resized_base_address) (ptr_deref_2297_root_address) $guard ( ifx_xelse158_exec_guard_1929_delayed_14_0_2294 ) 
    $flowthrough 
    &/ [ptr_deref_2297_addr_0] (ptr_deref_2297_root_address) (ptr_deref_2297_word_address_0) $guard ( ifx_xelse158_exec_guard_1929_delayed_14_0_2294 ) 
    $flowthrough 
    $store [ptr_deref_2297_store_0] $to memory_space_0 (ptr_deref_2297_word_address_0 ptr_deref_2297_data_0) $guard ( ifx_xelse158_exec_guard_1929_delayed_14_0_2294 ) 
    $buffering  $in ptr_deref_2297_store_0 ptr_deref_2297_word_address_0 2
    $buffering  $in ptr_deref_2297_store_0 ptr_deref_2297_data_0 2
    $delay ptr_deref_2297_store_0 6
    &/ [ptr_deref_2297_gather_scatter] (tmp164_2250) (ptr_deref_2297_data_0) $guard ( ifx_xelse158_exec_guard_1929_delayed_14_0_2294 ) 
    $flowthrough 
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 658
    // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2304_inst] (flagx_x0_1917 type_cast_2303_wire_constant) (tobool_2305)   $flowthrough 
    $delay EQ_u16_u1_2304_inst 0
    // 			$volatile ifx_xend170_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 659
    // ( ~ tobool )
    ~ [NOT_u1_u1_2308_inst] (tobool_2305) (ifx_xend170_whilex_xend_taken_2309)   $flowthrough
    $delay NOT_u1_u1_2308_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 118165608
    ==0? [if_stmt_2312_branch] (ifx_xend170_whilex_xend_taken_2309)
    // 		Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 667
    // Block1_complete
    $ioport $out [WPIPE_Block1_complete_2318_inst]  (type_cast_2320_wire_constant) (Block1_complete) 
  }
  // end data-path
  // 		call := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 481
  // Block1_starting
  RPIPE_Block1_starting_1498_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1498_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1498_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1498_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1498_Update/ca)
  // 		call1 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 482
  // Block1_starting
  RPIPE_Block1_starting_1501_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1501_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1501_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1501_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1501_Update/ca)
  // 		call2 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 483
  // Block1_starting
  RPIPE_Block1_starting_1504_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1504_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1504_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1504_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1504_Update/ca)
  // 		call3 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 484
  // Block1_starting
  RPIPE_Block1_starting_1507_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1507_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1507_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1507_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1507_Update/ca)
  // 		call4 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 485
  // Block1_starting
  RPIPE_Block1_starting_1510_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1510_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1510_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1510_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1510_Update/ca)
  // 		call5 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 486
  // Block1_starting
  RPIPE_Block1_starting_1513_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1513_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1513_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1513_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1513_Update/ca)
  // 		call6 := Block1_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 487
  // Block1_starting
  RPIPE_Block1_starting_1516_inst <=> (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1516_Sample/rr branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1516_Update/cr) (branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1516_Sample/ra branch_block_stmt_1496/assign_stmt_1499_to_assign_stmt_1517/RPIPE_Block1_starting_1516_Update/ca)
  // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 489
  // call1
  // ($cast ($uint<16>) call1 )
  type_cast_1521_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1521_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1521_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1521_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1521_Update/ca)
  // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 490
  // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
  // conv
  // 		conv32 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 491
  // call2
  // ($cast ($uint<32>) call2 )
  type_cast_1531_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1531_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1531_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1531_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1531_Update/ca)
  // 		conv34 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 492
  // call1
  // ($cast ($uint<32>) call1 )
  type_cast_1535_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1535_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1535_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1535_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1535_Update/ca)
  // 		conv38 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 493
  // call5
  // ($cast ($uint<32>) call5 )
  type_cast_1539_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1539_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1539_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1539_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1539_Update/ca)
  // 		conv40 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 494
  // call4
  // ($cast ($uint<32>) call4 )
  type_cast_1543_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1543_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1543_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1543_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1543_Update/ca)
  // 		$volatile mul41 := (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 495
  // (conv40 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv40
  // 		$volatile sext := (mul41 * conv38) $buffering 1
  //  file prog.linked.opt.aa, line 496
  // (mul41 * conv38)
  // mul41
  // conv38
  // 		$volatile conv95 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 497
  // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext
  // 		conv109 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 498
  // call6
  // ($cast ($uint<32>) call6 )
  type_cast_1567_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1567_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1567_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1567_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1567_Update/ca)
  // 		$volatile mul := (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 499
  // (conv34 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv34
  // 		$volatile sext175 := (mul * conv32) $buffering 1
  //  file prog.linked.opt.aa, line 500
  // (mul * conv32)
  // mul
  // conv32
  // 		$volatile conv113 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 501
  // (($bitcast ($int<32>) sext175 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext175
  // 		conv131 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 502
  // call
  // ($cast ($uint<32>) call )
  type_cast_1591_inst <=> (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1591_Sample/rr branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1591_Update/cr) (branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1591_Sample/ra branch_block_stmt_1496/assign_stmt_1522_to_assign_stmt_1624/type_cast_1591_Update/ca)
  // 		$volatile div132 := (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 503
  // (conv131 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv131
  // 		$volatile add135 := (conv109 + div132) $buffering 1
  //  file prog.linked.opt.aa, line 504
  // (conv109 + div132)
  // conv109
  // div132
  // 		$volatile add152 := (conv109 + conv34) $buffering 1
  //  file prog.linked.opt.aa, line 505
  // (conv109 + conv34)
  // conv109
  // conv34
  // 		$volatile shl := (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 506
  // (conv109 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv109
  // 		$volatile add63 := (shl + conv34) $buffering 1
  //  file prog.linked.opt.aa, line 507
  // (shl + conv34)
  // shl
  // conv34
  // 		$volatile add78 := (shl + div132) $buffering 1
  //  file prog.linked.opt.aa, line 508
  // (shl + div132)
  // shl
  // div132
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 510
  // In merge, skipped links for constant phi phi_stmt_1627
  // In merge, skipped links for constant phi phi_stmt_1632
  // ($cast ($uint<16>) div )
  type_cast_1640_inst <=> (branch_block_stmt_1496/entry_whilex_xbody_PhiReq/phi_stmt_1637/phi_stmt_1637_sources/type_cast_1640/SplitProtocol/Sample/rr branch_block_stmt_1496/entry_whilex_xbody_PhiReq/phi_stmt_1637/phi_stmt_1637_sources/type_cast_1640/SplitProtocol/Update/cr) (branch_block_stmt_1496/entry_whilex_xbody_PhiReq/phi_stmt_1637/phi_stmt_1637_sources/type_cast_1640/SplitProtocol/Sample/ra branch_block_stmt_1496/entry_whilex_xbody_PhiReq/phi_stmt_1637/phi_stmt_1637_sources/type_cast_1640/SplitProtocol/Update/ca)
  phi_stmt_1637 <=> (branch_block_stmt_1496/entry_whilex_xbody_PhiReq/phi_stmt_1637/phi_stmt_1637_req) (branch_block_stmt_1496/merge_stmt_1626_PhiAck/phi_stmt_1637_ack)
  // CP-DP links for do-while  do_while_stmt_1642
  //  file prog.linked.opt.aa, line 518
  phi_stmt_1644 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1644_loopback_sample_req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1644_entry_sample_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1644_phi_mux_ack)
  // kx_x0
  // ($cast ($uint<16>) kx_x0 )
  type_cast_1647_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1647_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1647_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1647_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1647_Update/ca)
  phi_stmt_1649 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1649_loopback_sample_req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1649_entry_sample_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1649_phi_mux_ack)
  // ix_x1
  // ($cast ($uint<16>) ix_x1 )
  type_cast_1652_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1652_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1652_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1652_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1652_Update/ca)
  phi_stmt_1654 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1654_loopback_sample_req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1654_entry_sample_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/phi_stmt_1654_phi_mux_ack)
  // jx_x0
  // ($cast ($uint<16>) jx_x0 )
  type_cast_1657_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1657_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1657_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1657_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1657_Update/ca)
  jx_x1_at_entry_1637_1658_buf <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/R_jx_x1_at_entry_1658_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/R_jx_x1_at_entry_1658_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/R_jx_x1_at_entry_1658_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/R_jx_x1_at_entry_1658_Update/ack)
  // 			conv48 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 528
  // kx_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
  type_cast_1663_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1663_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1663_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1663_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1663_Update/ca)
  // 			$volatile add := (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 529
  // (conv48 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
  // conv48
  // 			type_cast_1492_1492_delayed_2_0 := ($bitcast ($int<32>) conv32 ) $buffering 2 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 530
  // conv32
  // ($bitcast ($int<32>) conv32 )
  type_cast_1673_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1673_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1673_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1673_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1673_Update/ca)
  // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0) $buffering 1
  //  file prog.linked.opt.aa, line 531
  // (($bitcast ($int<32>) add ) < type_cast_1492_1492_delayed_2_0)
  // add
  // type_cast_1492_1492_delayed_2_0
  // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
  //  file prog.linked.opt.aa, line 532
  // cmp
  // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
  //  file prog.linked.opt.aa, line 533
  // cmp
  // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
  //  file prog.linked.opt.aa, line 534
  // whilex_xbody_ifx_xelse_taken
  // 			jx_x1_1507_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 535
  // jx_x1
  W_jx_x1_1507_delayed_1_0_1691_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1693_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1693_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1693_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1693_Update/ack)
  // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 536
  // (jx_x1_1507_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // jx_x1_1507_delayed_1_0
  // 			$guard (ifx_xelse_exec_guard) conv58 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 537
  // inc
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
  type_cast_1705_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1705_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1705_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1705_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1705_Update/ca)
  // 			ifx_xelse_exec_guard_1518_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 538
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1518_delayed_1_0_1707_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1709_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1709_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1709_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1709_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1518_delayed_1_0) $volatile cmp64 := (conv58 == add63) $buffering 1
  //  file prog.linked.opt.aa, line 539
  // (conv58 == add63)
  // conv58
  // add63
  // 			ifx_xelse_exec_guard_1524_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 540
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1524_delayed_1_0_1716_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1718_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1718_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1718_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1718_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1524_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 541
  // cmp64
  // ($cast ($uint<16>) cmp64 )
  type_cast_1722_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1722_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1722_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1722_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1722_Update/ca)
  // 			ifx_xelse_exec_guard_1529_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 542
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1529_delayed_2_0_1724_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1726_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1726_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1726_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1726_Update/ack)
  // 			ix_x2_1532_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 543
  // ix_x2
  W_ix_x2_1532_delayed_3_0_1727_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1729_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1729_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1729_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1729_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1529_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_1532_delayed_3_0) $buffering 1
  //  file prog.linked.opt.aa, line 544
  // (inc69 + ix_x2_1532_delayed_3_0)
  // inc69
  // ix_x2_1532_delayed_3_0
  // 			ifx_xelse_exec_guard_1535_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 545
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1535_delayed_1_0_1736_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1738_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1738_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1738_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1738_Update/ack)
  // 			inc_1539_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 546
  // inc
  W_inc_1539_delayed_1_0_1739_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1741_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1741_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1741_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1741_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1535_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 div  inc_1539_delayed_1_0 )  $buffering 1
  //  file prog.linked.opt.aa, line 547
  // cmp64
  // div
  // inc_1539_delayed_1_0
  // ( $mux cmp64 div  inc_1539_delayed_1_0 ) 
  // 			ifx_xelse_exec_guard_1542_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 548
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1542_delayed_2_0_1749_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1751_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1751_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1751_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1751_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1542_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 549
  // inc69x_xix_x2
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
  type_cast_1756_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1756_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1756_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1756_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1756_Update/ca)
  // 			ifx_xelse_exec_guard_1548_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 550
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1548_delayed_3_0_1758_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1760_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1760_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1760_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1760_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_1548_delayed_3_0) $volatile cmp79 := (conv71 == add78) $buffering 1
  //  file prog.linked.opt.aa, line 551
  // (conv71 == add78)
  // conv71
  // add78
  // 			ifx_xelse_exec_guard_1555_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 552
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1555_delayed_3_0_1767_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1769_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1769_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1769_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1769_Update/ack)
  // 			$volatile ifx_xelse_ifx_xthen81_taken := (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79) $buffering 1
  //  file prog.linked.opt.aa, line 553
  // (ifx_xelse_exec_guard_1555_delayed_3_0 & cmp79)
  // ifx_xelse_exec_guard_1555_delayed_3_0
  // cmp79
  // 			ifx_xelse_exec_guard_1560_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 554
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_1560_delayed_3_0_1775_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1777_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1777_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1777_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1777_Update/ack)
  // 			$volatile ifx_xelse_ifx_xend83_taken := (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 )) $buffering 1
  //  file prog.linked.opt.aa, line 555
  // (ifx_xelse_exec_guard_1560_delayed_3_0 & ( ~ cmp79 ))
  // ifx_xelse_exec_guard_1560_delayed_3_0
  // cmp79
  // 			$volatile ifx_xthen81_exec_guard := ifx_xelse_ifx_xthen81_taken $buffering 1
  //  file prog.linked.opt.aa, line 556
  // ifx_xelse_ifx_xthen81_taken
  // 			$volatile ifx_xthen81_ifx_xend83_taken := ifx_xthen81_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 557
  // ifx_xthen81_exec_guard
  // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
  //  file prog.linked.opt.aa, line 558
  // whilex_xbody_ifx_xthen_taken
  // 			kx_x1_1576_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 559
  // kx_x1
  W_kx_x1_1576_delayed_1_0_1793_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1795_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1795_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1795_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1795_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile add54 := (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 560
  // (kx_x1_1576_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
  // kx_x1_1576_delayed_1_0
  // 			$volatile ifx_xthen_ifx_xend83_taken := ifx_xthen_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 561
  // ifx_xthen_exec_guard
  // 			ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 562
  // ifx_xthen_ifx_xend83_taken
  W_ifx_xthen_ifx_xend83_taken_1586_delayed_3_0_1806_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1808_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1808_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1808_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1808_Update/ack)
  // 			$volatile ifx_xend83_exec_guard := (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)) $buffering 1
  //  file prog.linked.opt.aa, line 563
  // (ifx_xelse_ifx_xend83_taken | (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken))
  // ifx_xelse_ifx_xend83_taken
  // (ifx_xthen_ifx_xend83_taken_1586_delayed_3_0 | ifx_xthen81_ifx_xend83_taken)
  // ifx_xthen_ifx_xend83_taken_1586_delayed_3_0
  // ifx_xthen81_ifx_xend83_taken
  // 			ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 564
  // ifx_xthen_ifx_xend83_taken
  W_ifx_xthen_ifx_xend83_taken_1592_delayed_3_0_1816_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1818_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1818_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1818_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1818_Update/ack)
  // 			type_cast_1594_1594_delayed_3_0 := ($bitcast ($uint<16>) add54 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 565
  // add54
  // ($bitcast ($uint<16>) add54 )
  type_cast_1821_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1821_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1821_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1821_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1821_Update/ca)
  // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 566
  // ifx_xthen_ifx_xend83_taken_1592_delayed_3_0
  // type_cast_1594_1594_delayed_3_0
  // ifx_xthen81_ifx_xend83_taken
  // ifx_xelse_ifx_xend83_taken
  // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend83_taken_1592_delayed_3_0 type_cast_1594_1594_delayed_3_0  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			type_cast_1618_1618_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 567
  // inc69x_xix_x2
  // ($bitcast ($uint<16>) inc69x_xix_x2 )
  type_cast_1842_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1842_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1842_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1842_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1842_Update/ca)
  // 			type_cast_1615_1615_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 568
  // inc69x_xix_x2
  // ($bitcast ($uint<16>) inc69x_xix_x2 )
  type_cast_1846_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1846_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1846_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1846_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1846_Update/ca)
  // 			type_cast_1612_1612_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 569
  // ix_x2
  // ($bitcast ($uint<16>) ix_x2 )
  type_cast_1850_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1850_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1850_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1850_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1850_Update/ca)
  // 			ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 570
  // ifx_xthen_ifx_xend83_taken
  W_ifx_xthen_ifx_xend83_taken_1610_delayed_3_0_1852_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1854_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1854_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1854_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1854_Update/ack)
  // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 571
  // ifx_xthen_ifx_xend83_taken_1610_delayed_3_0
  // type_cast_1612_1612_delayed_4_0
  // ifx_xthen81_ifx_xend83_taken
  // type_cast_1615_1615_delayed_1_0
  // ifx_xelse_ifx_xend83_taken
  // type_cast_1618_1618_delayed_1_0
  // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend83_taken_1610_delayed_3_0 type_cast_1612_1612_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1615_1615_delayed_1_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1618_1618_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 572
  // ifx_xthen_ifx_xend83_taken
  W_ifx_xthen_ifx_xend83_taken_1626_delayed_3_0_1868_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1870_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1870_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1870_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1870_Update/ack)
  // 			type_cast_1634_1634_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 573
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_1873_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1873_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1873_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1873_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1873_Update/ca)
  // 			type_cast_1631_1631_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 574
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_1877_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1877_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1877_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1877_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1877_Update/ca)
  // 			type_cast_1628_1628_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 575
  // jx_x1
  // ($bitcast ($uint<16>) jx_x1 )
  type_cast_1881_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1881_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1881_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1881_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1881_Update/ca)
  // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 576
  // ifx_xthen_ifx_xend83_taken_1626_delayed_3_0
  // type_cast_1628_1628_delayed_4_0
  // ifx_xthen81_ifx_xend83_taken
  // type_cast_1631_1631_delayed_2_0
  // ifx_xelse_ifx_xend83_taken
  // type_cast_1634_1634_delayed_2_0
  // ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend83_taken_1626_delayed_3_0 type_cast_1628_1628_delayed_4_0  ( $mux ifx_xthen81_ifx_xend83_taken type_cast_1631_1631_delayed_2_0  ( $mux ifx_xelse_ifx_xend83_taken type_cast_1634_1634_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 := ifx_xthen_ifx_xend83_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 577
  // ifx_xthen_ifx_xend83_taken
  W_ifx_xthen_ifx_xend83_taken_1642_delayed_3_0_1896_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1898_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1898_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1898_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1898_Update/ack)
  // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 578
  // ifx_xthen_ifx_xend83_taken_1642_delayed_3_0
  // ifx_xthen81_ifx_xend83_taken
  // ifx_xelse_ifx_xend83_taken
  // ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend83_taken_1642_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen81_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend83_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			$guard (ifx_xend83_exec_guard) conv87174 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 579
  // kx_x0
  // ($cast ($uint<32>) kx_x0 )
  type_cast_1921_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1921_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1921_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1921_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1921_Update/ca)
  // 			$guard (ifx_xend83_exec_guard) conv91 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 580
  // jx_x0
  // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
  type_cast_1927_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1927_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1927_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1927_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1927_Update/ca)
  // 			ifx_xend83_exec_guard_1671_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 581
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1671_delayed_1_0_1929_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1931_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1931_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1931_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1931_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1671_delayed_1_0) $volatile mul92 := (conv91 * conv38) $buffering 1
  //  file prog.linked.opt.aa, line 582
  // (conv91 * conv38)
  // conv91
  // conv38
  // 			$guard (ifx_xend83_exec_guard) conv97 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 583
  // ix_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
  type_cast_1942_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1942_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1942_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1942_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1942_Update/ca)
  // 			ifx_xend83_exec_guard_1683_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 584
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1683_delayed_1_0_1944_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1946_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1946_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1946_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1946_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1683_delayed_1_0) $volatile mul98 := (conv97 * conv95) $buffering 1
  //  file prog.linked.opt.aa, line 585
  // (conv97 * conv95)
  // conv97
  // conv95
  // 			ifx_xend83_exec_guard_1689_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 586
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1689_delayed_1_0_1953_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1955_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1955_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1955_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1955_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1689_delayed_1_0) $volatile add93 := (mul98 + conv87174) $buffering 1
  //  file prog.linked.opt.aa, line 587
  // (mul98 + conv87174)
  // mul98
  // conv87174
  // 			ifx_xend83_exec_guard_1695_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 588
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1695_delayed_1_0_1962_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1964_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1964_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1964_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1964_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1695_delayed_1_0) $volatile add99 := (add93 + mul92) $buffering 1
  //  file prog.linked.opt.aa, line 589
  // (add93 + mul92)
  // add93
  // mul92
  // 			ifx_xend83_exec_guard_1701_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 590
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1701_delayed_1_0_1971_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1973_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1973_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1973_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1973_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1701_delayed_1_0) conv100 := ($cast ($uint<16>) add99 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 591
  // add99
  // ($cast ($uint<16>) add99 )
  type_cast_1977_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1977_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1977_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1977_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_1977_Update/ca)
  // 			ifx_xend83_exec_guard_1706_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 592
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1706_delayed_1_0_1979_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1981_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1981_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1981_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1981_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1706_delayed_1_0) $volatile sub := (conv91 - conv109) $buffering 1
  //  file prog.linked.opt.aa, line 593
  // (conv91 - conv109)
  // conv91
  // conv109
  // 			ifx_xend83_exec_guard_1712_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 594
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1712_delayed_1_0_1988_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1990_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1990_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1990_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1990_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1712_delayed_1_0) $volatile mul110 := (sub * conv32) $buffering 1
  //  file prog.linked.opt.aa, line 595
  // (sub * conv32)
  // sub
  // conv32
  // 			ifx_xend83_exec_guard_1718_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 596
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1718_delayed_1_0_1997_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1999_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1999_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1999_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_1999_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1718_delayed_1_0) $volatile sub118 := (conv97 - conv109) $buffering 1
  //  file prog.linked.opt.aa, line 597
  // (conv97 - conv109)
  // conv97
  // conv109
  // 			ifx_xend83_exec_guard_1724_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 598
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1724_delayed_1_0_2006_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2008_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2008_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2008_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2008_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1724_delayed_1_0) $volatile mul119 := (sub118 * conv113) $buffering 1
  //  file prog.linked.opt.aa, line 599
  // (sub118 * conv113)
  // sub118
  // conv113
  // 			ifx_xend83_exec_guard_1730_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 600
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1730_delayed_1_0_2015_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2017_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2017_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2017_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2017_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1730_delayed_1_0) $volatile add111 := (mul119 + conv87174) $buffering 1
  //  file prog.linked.opt.aa, line 601
  // (mul119 + conv87174)
  // mul119
  // conv87174
  // 			ifx_xend83_exec_guard_1736_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 602
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1736_delayed_1_0_2024_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2026_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2026_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2026_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2026_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1736_delayed_1_0) $volatile add120 := (add111 + mul110) $buffering 1
  //  file prog.linked.opt.aa, line 603
  // (add111 + mul110)
  // add111
  // mul110
  // 			type_cast_1747_1747_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 604
  // conv109
  // ($bitcast ($int<32>) conv109 )
  type_cast_2035_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2035_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2035_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2035_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2035_Update/ca)
  // 			ifx_xend83_exec_guard_1742_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 605
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1742_delayed_1_0_2037_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2039_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2039_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2039_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2039_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1742_delayed_1_0) $volatile cmp126 := (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 606
  // (($bitcast ($int<32>) conv97 ) < type_cast_1747_1747_delayed_1_0)
  // conv97
  // type_cast_1747_1747_delayed_1_0
  // 			ifx_xend83_exec_guard_1750_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 607
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1750_delayed_1_0_2047_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2049_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2049_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2049_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2049_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1750_delayed_1_0) $volatile cmp126x_xnot := (cmp126 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 608
  // (cmp126 ^ ($bitcast ($uint<1>) _b1  ))
  // cmp126
  // 			type_cast_1762_1762_delayed_1_0 := ($bitcast ($int<32>) add135 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 609
  // add135
  // ($bitcast ($int<32>) add135 )
  type_cast_2059_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2059_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2059_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2059_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2059_Update/ca)
  // 			ifx_xend83_exec_guard_1757_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 610
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1757_delayed_1_0_2061_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2063_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2063_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2063_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2063_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1757_delayed_1_0) $volatile cmp136 := (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 611
  // (($bitcast ($int<32>) conv97 ) < type_cast_1762_1762_delayed_1_0)
  // conv97
  // type_cast_1762_1762_delayed_1_0
  // 			ifx_xend83_exec_guard_1765_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 612
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1765_delayed_1_0_2071_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2073_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2073_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2073_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2073_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1765_delayed_1_0) $volatile orx_xcond := (cmp126x_xnot & cmp136) $buffering 1
  //  file prog.linked.opt.aa, line 613
  // (cmp126x_xnot & cmp136)
  // cmp126x_xnot
  // cmp136
  // 			ifx_xend83_exec_guard_1771_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 614
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1771_delayed_1_0_2080_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2082_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2082_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2082_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2082_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1771_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 615
  // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond
  // 			ifx_xend83_exec_guard_1778_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 616
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1778_delayed_1_0_2090_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2092_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2092_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2092_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2092_Update/ack)
  // 			type_cast_1783_1783_delayed_1_0 := ($bitcast ($int<32>) conv109 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 617
  // conv109
  // ($bitcast ($int<32>) conv109 )
  type_cast_2095_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2095_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2095_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2095_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2095_Update/ca)
  // 			$guard (ifx_xend83_exec_guard_1778_delayed_1_0) $volatile cmp143 := (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 618
  // (($bitcast ($int<32>) conv91 ) < type_cast_1783_1783_delayed_1_0)
  // conv91
  // type_cast_1783_1783_delayed_1_0
  // 			ifx_xend83_exec_guard_1786_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 619
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1786_delayed_1_0_2104_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2106_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2106_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2106_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2106_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1786_delayed_1_0) $volatile orx_xcond179 := (orx_xcondx_xnot | cmp143) $buffering 1
  //  file prog.linked.opt.aa, line 620
  // (orx_xcondx_xnot | cmp143)
  // orx_xcondx_xnot
  // cmp143
  // 			ifx_xend83_exec_guard_1792_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 621
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1792_delayed_1_0_2113_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2115_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2115_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2115_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2115_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1792_delayed_1_0) $volatile orx_xcond179x_xnot := (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 622
  // (orx_xcond179 ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond179
  // 			ifx_xend83_exec_guard_1799_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 623
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1799_delayed_1_0_2123_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2125_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2125_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2125_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2125_Update/ack)
  // 			type_cast_1804_1804_delayed_1_0 := ($bitcast ($int<32>) add152 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 624
  // add152
  // ($bitcast ($int<32>) add152 )
  type_cast_2128_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2128_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2128_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2128_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2128_Update/ca)
  // 			$guard (ifx_xend83_exec_guard_1799_delayed_1_0) $volatile cmp153 := (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 625
  // (($bitcast ($int<32>) conv91 ) < type_cast_1804_1804_delayed_1_0)
  // conv91
  // type_cast_1804_1804_delayed_1_0
  // 			ifx_xend83_exec_guard_1807_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 626
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1807_delayed_1_0_2137_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2139_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2139_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2139_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2139_Update/ack)
  // 			$guard (ifx_xend83_exec_guard_1807_delayed_1_0) $volatile orx_xcond180 := (orx_xcond179x_xnot & cmp153) $buffering 1
  //  file prog.linked.opt.aa, line 627
  // (orx_xcond179x_xnot & cmp153)
  // orx_xcond179x_xnot
  // cmp153
  // 			ifx_xend83_exec_guard_1814_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 628
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1814_delayed_1_0_2146_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2148_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2148_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2148_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2148_Update/ack)
  // 			$volatile ifx_xend83_ifx_xelse158_taken := (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180) $buffering 1
  //  file prog.linked.opt.aa, line 629
  // (ifx_xend83_exec_guard_1814_delayed_1_0 & orx_xcond180)
  // ifx_xend83_exec_guard_1814_delayed_1_0
  // orx_xcond180
  // 			ifx_xend83_exec_guard_1819_delayed_1_0 := ifx_xend83_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 630
  // ifx_xend83_exec_guard
  W_ifx_xend83_exec_guard_1819_delayed_1_0_2154_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2156_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2156_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2156_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2156_Update/ack)
  // 			$volatile ifx_xend83_ifx_xthen155_taken := (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 )) $buffering 1
  //  file prog.linked.opt.aa, line 631
  // (ifx_xend83_exec_guard_1819_delayed_1_0 & ( ~ orx_xcond180 ))
  // ifx_xend83_exec_guard_1819_delayed_1_0
  // orx_xcond180
  // 			$volatile ifx_xthen155_exec_guard := ifx_xend83_ifx_xthen155_taken $buffering 1
  //  file prog.linked.opt.aa, line 632
  // ifx_xend83_ifx_xthen155_taken
  // 			ifx_xthen155_exec_guard_1827_delayed_1_0 := ifx_xthen155_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 633
  // ifx_xthen155_exec_guard
  W_ifx_xthen155_exec_guard_1827_delayed_1_0_2166_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2168_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2168_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2168_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2168_Update/ack)
  // 			$guard (ifx_xthen155_exec_guard_1827_delayed_1_0) conv157 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 634
  // conv100
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
  type_cast_2173_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2173_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2173_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2173_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2173_Update/ca)
  // 			ifx_xthen155_exec_guard_1833_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 635
  // ifx_xthen155_exec_guard
  W_ifx_xthen155_exec_guard_1833_delayed_2_0_2175_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2177_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2177_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2177_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2177_Update/ack)
  // 			$guard (ifx_xthen155_exec_guard_1833_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 636
  // (($bitcast ($int<32>) conv157 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv157
  // 			ifx_xthen155_exec_guard_1843_delayed_2_0 := ifx_xthen155_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 637
  // ifx_xthen155_exec_guard
  W_ifx_xthen155_exec_guard_1843_delayed_2_0_2188_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2190_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2190_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2190_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2190_Update/ack)
  // 			$guard (ifx_xthen155_exec_guard_1843_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 638
  // shr
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
  type_cast_2195_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2195_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2195_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2195_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2195_Update/ca)
  // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 639
  // idxprom
  array_obj_ref_2201_index_1_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_index_resize_1/index_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_index_resize_1/index_resize_ack)
  array_obj_ref_2201_index_1_rename <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_index_scale_1/scale_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_index_scale_1/scale_rename_ack)
  array_obj_ref_2201_index_offset <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_final_index_sum_regn_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_final_index_sum_regn_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_final_index_sum_regn_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_final_index_sum_regn_Update/ack)
  array_obj_ref_2201_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2201_base_plus_offset/sum_rename_ack)
  addr_of_2202_final_reg <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2202_request/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2202_complete/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2202_request/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2202_complete/ack)
  // 			$guard (ifx_xthen155_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 640
  // arrayidx
  ptr_deref_2206_base_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_base_addr_resize/base_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_base_addr_resize/base_resize_ack)
  ptr_deref_2206_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_base_plus_offset/sum_rename_ack)
  ptr_deref_2206_addr_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_word_addrgen/root_register_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_word_addrgen/root_register_ack)
  ptr_deref_2206_gather_scatter <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Sample/ptr_deref_2206_Split/split_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Sample/ptr_deref_2206_Split/split_ack)
  ptr_deref_2206_store_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Sample/word_access_start/word_0/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Update/word_access_complete/word_0/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Sample/word_access_start/word_0/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2206_Update/word_access_complete/word_0/ca)
  // 			$volatile ifx_xelse158_exec_guard := ifx_xend83_ifx_xelse158_taken $buffering 1
  //  file prog.linked.opt.aa, line 641
  // ifx_xend83_ifx_xelse158_taken
  // 			$guard (ifx_xelse158_exec_guard) $volatile sext177 := (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 642
  // (add120 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // add120
  // 			$guard (ifx_xelse158_exec_guard) $volatile shr161 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 643
  // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
  // sext177
  // 			$guard (ifx_xelse158_exec_guard) idxprom162 := ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 644
  // shr161
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr161 ) )
  type_cast_2234_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2234_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2234_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2234_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2234_Update/ca)
  // 			arrayidx163 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom162]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 645
  // idxprom162
  array_obj_ref_2240_index_1_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_index_resize_1/index_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_index_resize_1/index_resize_ack)
  array_obj_ref_2240_index_1_rename <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_index_scale_1/scale_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_index_scale_1/scale_rename_ack)
  array_obj_ref_2240_index_offset <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_final_index_sum_regn_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_final_index_sum_regn_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_final_index_sum_regn_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_final_index_sum_regn_Update/ack)
  array_obj_ref_2240_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2240_base_plus_offset/sum_rename_ack)
  addr_of_2241_final_reg <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2241_request/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2241_complete/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2241_request/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2241_complete/ack)
  // 			ifx_xelse158_exec_guard_1895_delayed_8_0 := ifx_xelse158_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 646
  // ifx_xelse158_exec_guard
  W_ifx_xelse158_exec_guard_1895_delayed_8_0_2243_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2245_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2245_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2245_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2245_Update/ack)
  // 			$guard (ifx_xelse158_exec_guard_1895_delayed_8_0) tmp164 := ->(arrayidx163) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 647
  // arrayidx163
  ptr_deref_2249_base_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_base_addr_resize/base_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_base_addr_resize/base_resize_ack)
  ptr_deref_2249_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_base_plus_offset/sum_rename_ack)
  ptr_deref_2249_addr_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_word_addrgen/root_register_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_word_addrgen/root_register_ack)
  ptr_deref_2249_gather_scatter <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Update/ptr_deref_2249_Merge/merge_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Update/ptr_deref_2249_Merge/merge_ack)
  ptr_deref_2249_load_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Sample/word_access_start/word_0/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Update/word_access_complete/word_0/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Sample/word_access_start/word_0/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2249_Update/word_access_complete/word_0/ca)
  // 			ifx_xelse158_exec_guard_1900_delayed_1_0 := ifx_xelse158_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 648
  // ifx_xelse158_exec_guard
  W_ifx_xelse158_exec_guard_1900_delayed_1_0_2251_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2253_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2253_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2253_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2253_Update/ack)
  // 			$guard (ifx_xelse158_exec_guard_1900_delayed_1_0) conv166 := ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 649
  // conv100
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv100 ) )
  type_cast_2258_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2258_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2258_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2258_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2258_Update/ca)
  // 			ifx_xelse158_exec_guard_1906_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 650
  // ifx_xelse158_exec_guard
  W_ifx_xelse158_exec_guard_1906_delayed_2_0_2260_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2262_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2262_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2262_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2262_Update/ack)
  // 			$guard (ifx_xelse158_exec_guard_1906_delayed_2_0) $volatile shr167 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 651
  // (($bitcast ($int<32>) conv166 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv166
  // 			ifx_xelse158_exec_guard_1916_delayed_2_0 := ifx_xelse158_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 652
  // ifx_xelse158_exec_guard
  W_ifx_xelse158_exec_guard_1916_delayed_2_0_2273_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2275_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2275_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2275_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2275_Update/ack)
  // 			$guard (ifx_xelse158_exec_guard_1916_delayed_2_0) idxprom168 := ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 653
  // shr167
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr167 ) )
  type_cast_2280_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2280_Sample/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2280_Update/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2280_Sample/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/type_cast_2280_Update/ca)
  // 			arrayidx169 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom168]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 654
  // idxprom168
  array_obj_ref_2286_index_1_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_index_resize_1/index_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_index_resize_1/index_resize_ack)
  array_obj_ref_2286_index_1_rename <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_index_scale_1/scale_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_index_scale_1/scale_rename_ack)
  array_obj_ref_2286_index_offset <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_final_index_sum_regn_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_final_index_sum_regn_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_final_index_sum_regn_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_final_index_sum_regn_Update/ack)
  array_obj_ref_2286_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/array_obj_ref_2286_base_plus_offset/sum_rename_ack)
  addr_of_2287_final_reg <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2287_request/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2287_complete/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2287_request/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/addr_of_2287_complete/ack)
  // 			arrayidx169_1930_delayed_4_0 := arrayidx169 $buffering 4 $cut_through // bits of buffering = 128. 
  //  file prog.linked.opt.aa, line 655
  // arrayidx169
  W_arrayidx169_1930_delayed_4_0_2289_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2291_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2291_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2291_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2291_Update/ack)
  // 			ifx_xelse158_exec_guard_1929_delayed_14_0 := ifx_xelse158_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
  //  file prog.linked.opt.aa, line 656
  // ifx_xelse158_exec_guard
  W_ifx_xelse158_exec_guard_1929_delayed_14_0_2292_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2294_Sample/req branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2294_Update/req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2294_Sample/ack branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/assign_stmt_2294_Update/ack)
  // 			$guard (ifx_xelse158_exec_guard_1929_delayed_14_0) ->(arrayidx169_1930_delayed_4_0) := tmp164 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 657
  // tmp164
  // arrayidx169_1930_delayed_4_0
  ptr_deref_2297_base_resize <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_base_addr_resize/base_resize_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_base_addr_resize/base_resize_ack)
  ptr_deref_2297_root_address_inst <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_base_plus_offset/sum_rename_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_base_plus_offset/sum_rename_ack)
  ptr_deref_2297_addr_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_word_addrgen/root_register_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_word_addrgen/root_register_ack)
  ptr_deref_2297_gather_scatter <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Sample/ptr_deref_2297_Split/split_req) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Sample/ptr_deref_2297_Split/split_ack)
  ptr_deref_2297_store_0 <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Sample/word_access_start/word_0/rr branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Update/word_access_complete/word_0/cr) (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Sample/word_access_start/word_0/ra branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/ptr_deref_2297_Update/word_access_complete/word_0/ca)
  // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 658
  // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // flagx_x0
  // 			$volatile ifx_xend170_whilex_xend_taken := ( ~ tobool ) $buffering 1
  //  file prog.linked.opt.aa, line 659
  // tobool
  // tobool
  do_while_stmt_1642_branch <=> (branch_block_stmt_1496/do_while_stmt_1642/do_while_stmt_1642_loop_body/condition_evaluated) (branch_block_stmt_1496/do_while_stmt_1642/loop_exit/ack branch_block_stmt_1496/do_while_stmt_1642/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 118165608
  if_stmt_2312_branch <=> (branch_block_stmt_1496/if_stmt_2312_eval_test/branch_req) (branch_block_stmt_1496/if_stmt_2312_else_link/else_choice_transition branch_block_stmt_1496/if_stmt_2312_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 664
  // 		Block1_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 667
  // Block1_complete
  WPIPE_Block1_complete_2318_inst <=> (branch_block_stmt_1496/assign_stmt_2321/WPIPE_Block1_complete_2318_Sample/req branch_block_stmt_1496/assign_stmt_2321/WPIPE_Block1_complete_2318_Update/req) (branch_block_stmt_1496/assign_stmt_2321/WPIPE_Block1_complete_2318_Sample/ack branch_block_stmt_1496/assign_stmt_2321/WPIPE_Block1_complete_2318_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 669
}
$module [zeropad3D_C] 
{
  // pipe-declarations for block %zeropad3D_C
  //  file prog.linked.opt.aa, line 673
  // pipe-declarations for block %zeropad3D_C%body
  //  file prog.linked.opt.aa, line 678
  // pipe-declarations for block %zeropad3D_C%body%
  //  file prog.linked.opt.aa, line 709
  // pipe-declarations for block %zeropad3D_C%body%
  //  file prog.linked.opt.aa, line 863
  // pipe-declarations for block %zeropad3D_C%body%
  //  file prog.linked.opt.aa, line 868
  // memory-space 0 is written into.
  // memory-space 0 is read from.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2327] // Branch Block  file prog.linked.opt.aa, line 678
    {
      $P [branch_block_stmt_2327__entry__]
      branch_block_stmt_2327__entry__ <-| ($entry)
      $P [branch_block_stmt_2327__exit__]
      branch_block_stmt_2327__exit__ |-> ($exit)
      $P [assign_stmt_2330_to_assign_stmt_2348__entry__] 
      $P [assign_stmt_2330_to_assign_stmt_2348__exit__] 
      $P [assign_stmt_2353_to_assign_stmt_2455__entry__] 
      $P [assign_stmt_2353_to_assign_stmt_2455__exit__] 
      $P [entry_whilex_xbody]
      $P [merge_stmt_2457__exit__] 
      $P [do_while_stmt_2473__entry__] 
      $P [do_while_stmt_2473__exit__] 
      $P [if_stmt_3144__entry__] 
      $P [if_stmt_3144__exit__] 
      $P [merge_stmt_3148__entry__] 
      $P [merge_stmt_3148__exit__] 
      $P [assign_stmt_3153__entry__] 
      $P [assign_stmt_3153__exit__] 
      $P [return__]
      $P [merge_stmt_3155__exit__] 
      ::[assign_stmt_2330_to_assign_stmt_2348] 
      {
        // start:  		call := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 680
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2329_sample_start_] 
        $T[RPIPE_Block2_starting_2329_sample_completed_] 
        $T[RPIPE_Block2_starting_2329_update_start_] 
        $T[RPIPE_Block2_starting_2329_update_completed_] 
        ;;[RPIPE_Block2_starting_2329_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2329_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2329_sample_start_ &-> (RPIPE_Block2_starting_2329_Sample)
        RPIPE_Block2_starting_2329_sample_completed_ <-& (RPIPE_Block2_starting_2329_Sample)
        RPIPE_Block2_starting_2329_update_start_ <-& (RPIPE_Block2_starting_2329_sample_completed_)
        RPIPE_Block2_starting_2329_update_start_ &-> (RPIPE_Block2_starting_2329_Update)
        RPIPE_Block2_starting_2329_update_completed_ <-& (RPIPE_Block2_starting_2329_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call1 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 681
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2332_sample_start_] 
        $T[RPIPE_Block2_starting_2332_sample_completed_] 
        $T[RPIPE_Block2_starting_2332_update_start_] 
        $T[RPIPE_Block2_starting_2332_update_completed_] 
        ;;[RPIPE_Block2_starting_2332_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2332_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2332_sample_start_ &-> (RPIPE_Block2_starting_2332_Sample)
        RPIPE_Block2_starting_2332_sample_completed_ <-& (RPIPE_Block2_starting_2332_Sample)
        RPIPE_Block2_starting_2332_update_start_ <-& (RPIPE_Block2_starting_2332_sample_completed_)
        RPIPE_Block2_starting_2332_update_start_ &-> (RPIPE_Block2_starting_2332_Update)
        RPIPE_Block2_starting_2332_update_completed_ <-& (RPIPE_Block2_starting_2332_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call2 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 682
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2335_sample_start_] 
        $T[RPIPE_Block2_starting_2335_sample_completed_] 
        $T[RPIPE_Block2_starting_2335_update_start_] 
        $T[RPIPE_Block2_starting_2335_update_completed_] 
        ;;[RPIPE_Block2_starting_2335_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2335_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2335_sample_start_ &-> (RPIPE_Block2_starting_2335_Sample)
        RPIPE_Block2_starting_2335_sample_completed_ <-& (RPIPE_Block2_starting_2335_Sample)
        RPIPE_Block2_starting_2335_update_start_ <-& (RPIPE_Block2_starting_2335_sample_completed_)
        RPIPE_Block2_starting_2335_update_start_ &-> (RPIPE_Block2_starting_2335_Update)
        RPIPE_Block2_starting_2335_update_completed_ <-& (RPIPE_Block2_starting_2335_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call3 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 683
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2338_sample_start_] 
        $T[RPIPE_Block2_starting_2338_sample_completed_] 
        $T[RPIPE_Block2_starting_2338_update_start_] 
        $T[RPIPE_Block2_starting_2338_update_completed_] 
        ;;[RPIPE_Block2_starting_2338_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2338_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2338_sample_start_ &-> (RPIPE_Block2_starting_2338_Sample)
        RPIPE_Block2_starting_2338_sample_completed_ <-& (RPIPE_Block2_starting_2338_Sample)
        RPIPE_Block2_starting_2338_update_start_ <-& (RPIPE_Block2_starting_2338_sample_completed_)
        RPIPE_Block2_starting_2338_update_start_ &-> (RPIPE_Block2_starting_2338_Update)
        RPIPE_Block2_starting_2338_update_completed_ <-& (RPIPE_Block2_starting_2338_Update)
        // Target expression
        // (as target) call3
        // start: WAR dependencies for call3
        // done: WAR dependencies for call3
        // end:  		call3 := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call4 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 684
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2341_sample_start_] 
        $T[RPIPE_Block2_starting_2341_sample_completed_] 
        $T[RPIPE_Block2_starting_2341_update_start_] 
        $T[RPIPE_Block2_starting_2341_update_completed_] 
        ;;[RPIPE_Block2_starting_2341_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2341_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2341_sample_start_ &-> (RPIPE_Block2_starting_2341_Sample)
        RPIPE_Block2_starting_2341_sample_completed_ <-& (RPIPE_Block2_starting_2341_Sample)
        RPIPE_Block2_starting_2341_update_start_ <-& (RPIPE_Block2_starting_2341_sample_completed_)
        RPIPE_Block2_starting_2341_update_start_ &-> (RPIPE_Block2_starting_2341_Update)
        RPIPE_Block2_starting_2341_update_completed_ <-& (RPIPE_Block2_starting_2341_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call5 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 685
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2344_sample_start_] 
        $T[RPIPE_Block2_starting_2344_sample_completed_] 
        $T[RPIPE_Block2_starting_2344_update_start_] 
        $T[RPIPE_Block2_starting_2344_update_completed_] 
        ;;[RPIPE_Block2_starting_2344_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2344_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2344_sample_start_ &-> (RPIPE_Block2_starting_2344_Sample)
        RPIPE_Block2_starting_2344_sample_completed_ <-& (RPIPE_Block2_starting_2344_Sample)
        RPIPE_Block2_starting_2344_update_start_ <-& (RPIPE_Block2_starting_2344_sample_completed_)
        RPIPE_Block2_starting_2344_update_start_ &-> (RPIPE_Block2_starting_2344_Update)
        RPIPE_Block2_starting_2344_update_completed_ <-& (RPIPE_Block2_starting_2344_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := Block2_starting $buffering 1// bits of buffering = 8. 
        // start:  		call6 := Block2_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 686
        // Source expression
        // Block2_starting
        $T[RPIPE_Block2_starting_2347_sample_start_] 
        $T[RPIPE_Block2_starting_2347_sample_completed_] 
        $T[RPIPE_Block2_starting_2347_update_start_] 
        $T[RPIPE_Block2_starting_2347_update_completed_] 
        ;;[RPIPE_Block2_starting_2347_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block2_starting_2347_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block2_starting_2347_sample_start_ &-> (RPIPE_Block2_starting_2347_Sample)
        RPIPE_Block2_starting_2347_sample_completed_ <-& (RPIPE_Block2_starting_2347_Sample)
        RPIPE_Block2_starting_2347_update_start_ <-& (RPIPE_Block2_starting_2347_sample_completed_)
        RPIPE_Block2_starting_2347_update_start_ &-> (RPIPE_Block2_starting_2347_Update)
        RPIPE_Block2_starting_2347_update_completed_ <-& (RPIPE_Block2_starting_2347_Update)
        // Target expression
        // (as target) call6
        // start: WAR dependencies for call6
        // done: WAR dependencies for call6
        // end:  		call6 := Block2_starting $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block2_starting
        // read-dependencies for pipe Block2_starting
        RPIPE_Block2_starting_2332_sample_start_ <-& (RPIPE_Block2_starting_2329_update_completed_)
        RPIPE_Block2_starting_2335_sample_start_ <-& (RPIPE_Block2_starting_2332_update_completed_)
        RPIPE_Block2_starting_2338_sample_start_ <-& (RPIPE_Block2_starting_2335_update_completed_)
        RPIPE_Block2_starting_2341_sample_start_ <-& (RPIPE_Block2_starting_2338_update_completed_)
        RPIPE_Block2_starting_2344_sample_start_ <-& (RPIPE_Block2_starting_2341_update_completed_)
        RPIPE_Block2_starting_2347_sample_start_ <-& (RPIPE_Block2_starting_2344_update_completed_)
        // write-dependencies for pipe Block2_starting
        // signal write dependencies for Block2_starting
      }
      assign_stmt_2330_to_assign_stmt_2348__entry__ |-> (assign_stmt_2330_to_assign_stmt_2348)
      assign_stmt_2330_to_assign_stmt_2348__exit__ <-| (assign_stmt_2330_to_assign_stmt_2348)
      ::[assign_stmt_2353_to_assign_stmt_2455] 
      {
        // start:  		conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
        //  file prog.linked.opt.aa, line 688
        // Source expression
        // ($cast ($uint<16>) call )
        $T[type_cast_2352_sample_start_] 
        $T[type_cast_2352_sample_completed_] 
        $T[type_cast_2352_update_start_] 
        $T[type_cast_2352_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_2352_sample_start_
        // done: Forward dependencies from call to transition type_cast_2352_sample_start_
        ;;[type_cast_2352_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2352_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2352_sample_start_ &-> (type_cast_2352_Sample)
        type_cast_2352_sample_completed_ <-& (type_cast_2352_Sample)
        type_cast_2352_sample_completed_ &-> ($null)
        type_cast_2352_update_start_ &-> (type_cast_2352_Update)
        type_cast_2352_update_completed_ <-& (type_cast_2352_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // start:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 689
        // volatile! 
        // Source expression
        // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
        // conv
        // Target expression
        // (as target) div
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // end:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        // start:  		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 690
        // Source expression
        // ($cast ($uint<32>) call2 )
        $T[type_cast_2362_sample_start_] 
        $T[type_cast_2362_sample_completed_] 
        $T[type_cast_2362_update_start_] 
        $T[type_cast_2362_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_2362_sample_start_
        // done: Forward dependencies from call2 to transition type_cast_2362_sample_start_
        ;;[type_cast_2362_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2362_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2362_sample_start_ &-> (type_cast_2362_Sample)
        type_cast_2362_sample_completed_ <-& (type_cast_2362_Sample)
        type_cast_2362_sample_completed_ &-> ($null)
        type_cast_2362_update_start_ &-> (type_cast_2362_Update)
        type_cast_2362_update_completed_ <-& (type_cast_2362_Update)
        // Target expression
        // (as target) conv31
        // start: WAR dependencies for conv31
        // done: WAR dependencies for conv31
        // end:  		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 691
        // Source expression
        // ($cast ($uint<32>) call1 )
        $T[type_cast_2366_sample_start_] 
        $T[type_cast_2366_sample_completed_] 
        $T[type_cast_2366_update_start_] 
        $T[type_cast_2366_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_2366_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_2366_sample_start_
        ;;[type_cast_2366_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2366_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2366_sample_start_ &-> (type_cast_2366_Sample)
        type_cast_2366_sample_completed_ <-& (type_cast_2366_Sample)
        type_cast_2366_sample_completed_ &-> ($null)
        type_cast_2366_update_start_ &-> (type_cast_2366_Update)
        type_cast_2366_update_completed_ <-& (type_cast_2366_Update)
        // Target expression
        // (as target) conv33
        // start: WAR dependencies for conv33
        // done: WAR dependencies for conv33
        // end:  		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 692
        // Source expression
        // ($cast ($uint<32>) call5 )
        $T[type_cast_2370_sample_start_] 
        $T[type_cast_2370_sample_completed_] 
        $T[type_cast_2370_update_start_] 
        $T[type_cast_2370_update_completed_] 
        // call5
        // start: Forward dependencies from call5 to transition type_cast_2370_sample_start_
        // done: Forward dependencies from call5 to transition type_cast_2370_sample_start_
        ;;[type_cast_2370_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2370_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2370_sample_start_ &-> (type_cast_2370_Sample)
        type_cast_2370_sample_completed_ <-& (type_cast_2370_Sample)
        type_cast_2370_sample_completed_ &-> ($null)
        type_cast_2370_update_start_ &-> (type_cast_2370_Update)
        type_cast_2370_update_completed_ <-& (type_cast_2370_Update)
        // Target expression
        // (as target) conv37
        // start: WAR dependencies for conv37
        // done: WAR dependencies for conv37
        // end:  		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 693
        // Source expression
        // ($cast ($uint<32>) call4 )
        $T[type_cast_2374_sample_start_] 
        $T[type_cast_2374_sample_completed_] 
        $T[type_cast_2374_update_start_] 
        $T[type_cast_2374_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_2374_sample_start_
        // done: Forward dependencies from call4 to transition type_cast_2374_sample_start_
        ;;[type_cast_2374_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2374_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2374_sample_start_ &-> (type_cast_2374_Sample)
        type_cast_2374_sample_completed_ <-& (type_cast_2374_Sample)
        type_cast_2374_sample_completed_ &-> ($null)
        type_cast_2374_update_start_ &-> (type_cast_2374_Update)
        type_cast_2374_update_completed_ <-& (type_cast_2374_Update)
        // Target expression
        // (as target) conv39
        // start: WAR dependencies for conv39
        // done: WAR dependencies for conv39
        // end:  		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul40
        // done: WAR dependencies for mul40
        // start:  		$volatile mul40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 694
        // volatile! 
        // Source expression
        // (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv39
        // Target expression
        // (as target) mul40
        // start: WAR dependencies for mul40
        // done: WAR dependencies for mul40
        // end:  		$volatile mul40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // start:  		$volatile sext := (mul40 * conv37) $buffering 1
        //  file prog.linked.opt.aa, line 695
        // volatile! 
        // Source expression
        // (mul40 * conv37)
        // mul40
        // conv37
        // Target expression
        // (as target) sext
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // end:  		$volatile sext := (mul40 * conv37) $buffering 1
        // start: WAR dependencies for conv94
        // done: WAR dependencies for conv94
        // start:  		$volatile conv94 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 696
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext )
        // sext
        // Target expression
        // (as target) conv94
        // start: WAR dependencies for conv94
        // done: WAR dependencies for conv94
        // end:  		$volatile conv94 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 697
        // Source expression
        // ($cast ($uint<32>) call6 )
        $T[type_cast_2398_sample_start_] 
        $T[type_cast_2398_sample_completed_] 
        $T[type_cast_2398_update_start_] 
        $T[type_cast_2398_update_completed_] 
        // call6
        // start: Forward dependencies from call6 to transition type_cast_2398_sample_start_
        // done: Forward dependencies from call6 to transition type_cast_2398_sample_start_
        ;;[type_cast_2398_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2398_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2398_sample_start_ &-> (type_cast_2398_Sample)
        type_cast_2398_sample_completed_ <-& (type_cast_2398_Sample)
        type_cast_2398_sample_completed_ &-> ($null)
        type_cast_2398_update_start_ &-> (type_cast_2398_Update)
        type_cast_2398_update_completed_ <-& (type_cast_2398_Update)
        // Target expression
        // (as target) conv108
        // start: WAR dependencies for conv108
        // done: WAR dependencies for conv108
        // end:  		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 698
        // volatile! 
        // Source expression
        // (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv33
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext174
        // done: WAR dependencies for sext174
        // start:  		$volatile sext174 := (mul * conv31) $buffering 1
        //  file prog.linked.opt.aa, line 699
        // volatile! 
        // Source expression
        // (mul * conv31)
        // mul
        // conv31
        // Target expression
        // (as target) sext174
        // start: WAR dependencies for sext174
        // done: WAR dependencies for sext174
        // end:  		$volatile sext174 := (mul * conv31) $buffering 1
        // start: WAR dependencies for conv112
        // done: WAR dependencies for conv112
        // start:  		$volatile conv112 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 700
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext174 )
        // sext174
        // Target expression
        // (as target) conv112
        // start: WAR dependencies for conv112
        // done: WAR dependencies for conv112
        // end:  		$volatile conv112 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 701
        // Source expression
        // ($cast ($uint<32>) call )
        $T[type_cast_2422_sample_start_] 
        $T[type_cast_2422_sample_completed_] 
        $T[type_cast_2422_update_start_] 
        $T[type_cast_2422_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_2422_sample_start_
        // done: Forward dependencies from call to transition type_cast_2422_sample_start_
        ;;[type_cast_2422_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2422_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2422_sample_start_ &-> (type_cast_2422_Sample)
        type_cast_2422_sample_completed_ <-& (type_cast_2422_Sample)
        type_cast_2422_sample_completed_ &-> ($null)
        type_cast_2422_update_start_ &-> (type_cast_2422_Update)
        type_cast_2422_update_completed_ <-& (type_cast_2422_Update)
        // Target expression
        // (as target) conv130
        // start: WAR dependencies for conv130
        // done: WAR dependencies for conv130
        // end:  		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add133
        // done: WAR dependencies for add133
        // start:  		$volatile add133 := (conv108 + conv130) $buffering 1
        //  file prog.linked.opt.aa, line 702
        // volatile! 
        // Source expression
        // (conv108 + conv130)
        // conv108
        // conv130
        // Target expression
        // (as target) add133
        // start: WAR dependencies for add133
        // done: WAR dependencies for add133
        // end:  		$volatile add133 := (conv108 + conv130) $buffering 1
        // start: WAR dependencies for div148
        // done: WAR dependencies for div148
        // start:  		$volatile div148 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 703
        // volatile! 
        // Source expression
        // (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv33
        // Target expression
        // (as target) div148
        // start: WAR dependencies for div148
        // done: WAR dependencies for div148
        // end:  		$volatile div148 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add151
        // done: WAR dependencies for add151
        // start:  		$volatile add151 := (conv108 + div148) $buffering 1
        //  file prog.linked.opt.aa, line 704
        // volatile! 
        // Source expression
        // (conv108 + div148)
        // conv108
        // div148
        // Target expression
        // (as target) add151
        // start: WAR dependencies for add151
        // done: WAR dependencies for add151
        // end:  		$volatile add151 := (conv108 + div148) $buffering 1
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 705
        // volatile! 
        // Source expression
        // (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv108
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add63
        // done: WAR dependencies for add63
        // start:  		$volatile add63 := (shl + div148) $buffering 1
        //  file prog.linked.opt.aa, line 706
        // volatile! 
        // Source expression
        // (shl + div148)
        // shl
        // div148
        // Target expression
        // (as target) add63
        // start: WAR dependencies for add63
        // done: WAR dependencies for add63
        // end:  		$volatile add63 := (shl + div148) $buffering 1
        // start: WAR dependencies for add77
        // done: WAR dependencies for add77
        // start:  		$volatile add77 := (shl + conv130) $buffering 1
        //  file prog.linked.opt.aa, line 707
        // volatile! 
        // Source expression
        // (shl + conv130)
        // shl
        // conv130
        // Target expression
        // (as target) add77
        // start: WAR dependencies for add77
        // done: WAR dependencies for add77
        // end:  		$volatile add77 := (shl + conv130) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_2353_to_assign_stmt_2455__entry__ |-> (assign_stmt_2353_to_assign_stmt_2455)
      assign_stmt_2353_to_assign_stmt_2455__exit__ <-| (assign_stmt_2353_to_assign_stmt_2455)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 717
      <o> [do_while_stmt_2473]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_2473__entry__] 
        $P[do_while_stmt_2473__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2473_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2475
          // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2475_sample_start_] 
          $T[phi_stmt_2475_sample_completed_] 
          $T[phi_stmt_2475_update_start_] 
          $T[phi_stmt_2475_update_completed_] 
          $T[phi_stmt_2475_sample_start__ps] 
          phi_stmt_2475_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2475_sample_completed__ps] 
          phi_stmt_2475_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2475_update_start__ps] 
          phi_stmt_2475_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2475_update_completed__ps] 
          phi_stmt_2475_update_completed_ <-& (phi_stmt_2475_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2475_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2475_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2475_update_start_)
          $T[phi_stmt_2475_loopback_trigger] 
          phi_stmt_2475_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2475_loopback_sample_req] 
          $T[phi_stmt_2475_loopback_sample_req_ps] 
          phi_stmt_2475_loopback_sample_req <-& (phi_stmt_2475_loopback_sample_req_ps)
          phi_stmt_2475_loopback_sample_req &-> ($null)
          $T[phi_stmt_2475_entry_trigger] 
          phi_stmt_2475_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2475_entry_sample_req] 
          $T[phi_stmt_2475_entry_sample_req_ps] 
          phi_stmt_2475_entry_sample_req <-& (phi_stmt_2475_entry_sample_req_ps)
          phi_stmt_2475_entry_sample_req &-> ($null)
          phi_stmt_2475_update_start_ o<-& (phi_stmt_2475_update_completed_ 0)
          phi_stmt_2475_sample_start_ o<-& (phi_stmt_2475_sample_completed_ 1)
          $T[phi_stmt_2475_merged_reqs] 
          $T[phi_stmt_2475_phi_mux_ack] 
          $T[phi_stmt_2475_phi_mux_ack_ps] 
          phi_stmt_2475_phi_mux_ack_ps <-& (phi_stmt_2475_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2475_update_completed_)
          $T[type_cast_2478_sample_start__ps] 
          $T[type_cast_2478_sample_completed__ps] 
          $T[type_cast_2478_update_start__ps] 
          $T[type_cast_2478_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) kx_x0 )
          $T[type_cast_2478_sample_start_] 
          $T[type_cast_2478_sample_completed_] 
          $T[type_cast_2478_update_start_] 
          $T[type_cast_2478_update_completed_] 
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_2478_sample_start_
          // done: Forward dependencies from kx_x0 to transition type_cast_2478_sample_start_
          ;;[type_cast_2478_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2478_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2478_sample_start_ &-> (type_cast_2478_Sample)
          type_cast_2478_sample_completed_ <-& (type_cast_2478_Sample)
          type_cast_2478_sample_completed_ &-> ($null)
          type_cast_2478_update_start_ &-> (type_cast_2478_Update)
          type_cast_2478_update_completed_ <-& (type_cast_2478_Update)
          // RAW reenables for kx_x0
          // self-release: 
          type_cast_2478_sample_start_ o<-& (type_cast_2478_sample_completed_ 1)
          $null &-> (type_cast_2478_update_start_)
          type_cast_2478_update_start_ o<-& (type_cast_2478_update_completed_ 0)
          // Phi start dependency
          type_cast_2478_sample_start_ <-& (type_cast_2478_sample_start__ps)
          type_cast_2478_update_start_ <-& (type_cast_2478_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) kx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_2478_sample_completed__ps <-& (type_cast_2478_sample_completed_)
          type_cast_2478_update_completed__ps <-& (type_cast_2478_update_completed_)
          $T[R_kx_x1_at_entry_2479_sample_start__ps] 
          $T[R_kx_x1_at_entry_2479_sample_completed__ps] 
          $T[R_kx_x1_at_entry_2479_update_start__ps] 
          $T[R_kx_x1_at_entry_2479_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_kx_x1_at_entry_2479_sample_start_] 
          $T[R_kx_x1_at_entry_2479_sample_completed_] 
          R_kx_x1_at_entry_2479_sample_completed_ <-& (R_kx_x1_at_entry_2479_sample_start_)
          $T[R_kx_x1_at_entry_2479_update_start_] 
          $T [R_kx_x1_at_entry_2479_update_completed_] $delay 
          R_kx_x1_at_entry_2479_update_completed_ <-& (R_kx_x1_at_entry_2479_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_kx_x1_at_entry_2479_sample_start_ <-& (R_kx_x1_at_entry_2479_sample_start__ps)
          R_kx_x1_at_entry_2479_update_start_ <-& (R_kx_x1_at_entry_2479_update_start__ps)
          // Phi complete dependency.
          R_kx_x1_at_entry_2479_sample_completed__ps <-& (R_kx_x1_at_entry_2479_sample_completed_)
          R_kx_x1_at_entry_2479_update_completed__ps <-& (R_kx_x1_at_entry_2479_update_completed_)
          $phisequencer [ phi_stmt_2475_phi_seq] : 
          phi_stmt_2475_loopback_trigger type_cast_2478_sample_start__ps type_cast_2478_sample_completed__ps type_cast_2478_update_start__ps type_cast_2478_update_completed__ps phi_stmt_2475_entry_trigger R_kx_x1_at_entry_2479_sample_start__ps R_kx_x1_at_entry_2479_sample_completed__ps R_kx_x1_at_entry_2479_update_start__ps R_kx_x1_at_entry_2479_update_completed__ps :
          phi_stmt_2475_sample_start__ps phi_stmt_2475_sample_completed__ps phi_stmt_2475_update_start__ps phi_stmt_2475_update_completed__ps :
          phi_stmt_2475_loopback_sample_req_ps phi_stmt_2475_entry_sample_req_ps : 
          phi_stmt_2475_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2475
          // start:  PHI statement phi_stmt_2480
          // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2480_sample_start_] 
          $T[phi_stmt_2480_sample_completed_] 
          $T[phi_stmt_2480_update_start_] 
          $T[phi_stmt_2480_update_completed_] 
          $T[phi_stmt_2480_sample_start__ps] 
          phi_stmt_2480_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2480_sample_completed__ps] 
          phi_stmt_2480_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2480_update_start__ps] 
          phi_stmt_2480_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2480_update_completed__ps] 
          phi_stmt_2480_update_completed_ <-& (phi_stmt_2480_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2480_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2480_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2480_update_start_)
          $T[phi_stmt_2480_loopback_trigger] 
          phi_stmt_2480_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2480_loopback_sample_req] 
          $T[phi_stmt_2480_loopback_sample_req_ps] 
          phi_stmt_2480_loopback_sample_req <-& (phi_stmt_2480_loopback_sample_req_ps)
          phi_stmt_2480_loopback_sample_req &-> ($null)
          $T[phi_stmt_2480_entry_trigger] 
          phi_stmt_2480_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2480_entry_sample_req] 
          $T[phi_stmt_2480_entry_sample_req_ps] 
          phi_stmt_2480_entry_sample_req <-& (phi_stmt_2480_entry_sample_req_ps)
          phi_stmt_2480_entry_sample_req &-> ($null)
          phi_stmt_2480_update_start_ o<-& (phi_stmt_2480_update_completed_ 0)
          phi_stmt_2480_sample_start_ o<-& (phi_stmt_2480_sample_completed_ 1)
          $T[phi_stmt_2480_merged_reqs] 
          $T[phi_stmt_2480_phi_mux_ack] 
          $T[phi_stmt_2480_phi_mux_ack_ps] 
          phi_stmt_2480_phi_mux_ack_ps <-& (phi_stmt_2480_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2480_update_completed_)
          $T[type_cast_2483_sample_start__ps] 
          $T[type_cast_2483_sample_completed__ps] 
          $T[type_cast_2483_update_start__ps] 
          $T[type_cast_2483_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) ix_x1 )
          $T[type_cast_2483_sample_start_] 
          $T[type_cast_2483_sample_completed_] 
          $T[type_cast_2483_update_start_] 
          $T[type_cast_2483_update_completed_] 
          // ix_x1
          // start: Forward dependencies from ix_x1 to transition type_cast_2483_sample_start_
          // done: Forward dependencies from ix_x1 to transition type_cast_2483_sample_start_
          ;;[type_cast_2483_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2483_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2483_sample_start_ &-> (type_cast_2483_Sample)
          type_cast_2483_sample_completed_ <-& (type_cast_2483_Sample)
          type_cast_2483_sample_completed_ &-> ($null)
          type_cast_2483_update_start_ &-> (type_cast_2483_Update)
          type_cast_2483_update_completed_ <-& (type_cast_2483_Update)
          // RAW reenables for ix_x1
          // self-release: 
          type_cast_2483_sample_start_ o<-& (type_cast_2483_sample_completed_ 1)
          $null &-> (type_cast_2483_update_start_)
          type_cast_2483_update_start_ o<-& (type_cast_2483_update_completed_ 0)
          // Phi start dependency
          type_cast_2483_sample_start_ <-& (type_cast_2483_sample_start__ps)
          type_cast_2483_update_start_ <-& (type_cast_2483_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) ix_x1 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_2483_sample_completed__ps <-& (type_cast_2483_sample_completed_)
          type_cast_2483_update_completed__ps <-& (type_cast_2483_update_completed_)
          $T[R_ix_x2_at_entry_2484_sample_start__ps] 
          $T[R_ix_x2_at_entry_2484_sample_completed__ps] 
          $T[R_ix_x2_at_entry_2484_update_start__ps] 
          $T[R_ix_x2_at_entry_2484_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_ix_x2_at_entry_2484_sample_start_] 
          $T[R_ix_x2_at_entry_2484_sample_completed_] 
          $T[R_ix_x2_at_entry_2484_update_start_] 
          $T[R_ix_x2_at_entry_2484_update_completed_] 
          ;;[R_ix_x2_at_entry_2484_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_ix_x2_at_entry_2484_sample_start_ &-> (R_ix_x2_at_entry_2484_Sample)
          R_ix_x2_at_entry_2484_sample_completed_ <-& (R_ix_x2_at_entry_2484_Sample)
          ;;[R_ix_x2_at_entry_2484_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_ix_x2_at_entry_2484_update_start_ &-> (R_ix_x2_at_entry_2484_Update)
          R_ix_x2_at_entry_2484_update_completed_ <-& (R_ix_x2_at_entry_2484_Update)
          // RAW reenables for ix_x2_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_ix_x2_at_entry_2484_sample_start_ <-& (R_ix_x2_at_entry_2484_sample_start__ps)
          R_ix_x2_at_entry_2484_update_start_ <-& (R_ix_x2_at_entry_2484_update_start__ps)
          // Phi complete dependency.
          R_ix_x2_at_entry_2484_sample_completed__ps <-& (R_ix_x2_at_entry_2484_sample_completed_)
          R_ix_x2_at_entry_2484_update_completed__ps <-& (R_ix_x2_at_entry_2484_update_completed_)
          $phisequencer [ phi_stmt_2480_phi_seq] : 
          phi_stmt_2480_loopback_trigger type_cast_2483_sample_start__ps type_cast_2483_sample_completed__ps type_cast_2483_update_start__ps type_cast_2483_update_completed__ps phi_stmt_2480_entry_trigger R_ix_x2_at_entry_2484_sample_start__ps R_ix_x2_at_entry_2484_sample_completed__ps R_ix_x2_at_entry_2484_update_start__ps R_ix_x2_at_entry_2484_update_completed__ps :
          phi_stmt_2480_sample_start__ps phi_stmt_2480_sample_completed__ps phi_stmt_2480_update_start__ps phi_stmt_2480_update_completed__ps :
          phi_stmt_2480_loopback_sample_req_ps phi_stmt_2480_entry_sample_req_ps : 
          phi_stmt_2480_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2480
          // start:  PHI statement phi_stmt_2485
          // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_2485_sample_start_] 
          $T[phi_stmt_2485_sample_completed_] 
          $T[phi_stmt_2485_update_start_] 
          $T[phi_stmt_2485_update_completed_] 
          $T[phi_stmt_2485_sample_start__ps] 
          phi_stmt_2485_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2485_sample_completed__ps] 
          phi_stmt_2485_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2485_update_start__ps] 
          phi_stmt_2485_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2485_update_completed__ps] 
          phi_stmt_2485_update_completed_ <-& (phi_stmt_2485_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2485_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2485_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2485_update_start_)
          $T[phi_stmt_2485_loopback_trigger] 
          phi_stmt_2485_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2485_loopback_sample_req] 
          $T[phi_stmt_2485_loopback_sample_req_ps] 
          phi_stmt_2485_loopback_sample_req <-& (phi_stmt_2485_loopback_sample_req_ps)
          phi_stmt_2485_loopback_sample_req &-> ($null)
          $T[phi_stmt_2485_entry_trigger] 
          phi_stmt_2485_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2485_entry_sample_req] 
          $T[phi_stmt_2485_entry_sample_req_ps] 
          phi_stmt_2485_entry_sample_req <-& (phi_stmt_2485_entry_sample_req_ps)
          phi_stmt_2485_entry_sample_req &-> ($null)
          phi_stmt_2485_update_start_ o<-& (phi_stmt_2485_update_completed_ 0)
          phi_stmt_2485_sample_start_ o<-& (phi_stmt_2485_sample_completed_ 1)
          $T[phi_stmt_2485_merged_reqs] 
          $T[phi_stmt_2485_phi_mux_ack] 
          $T[phi_stmt_2485_phi_mux_ack_ps] 
          phi_stmt_2485_phi_mux_ack_ps <-& (phi_stmt_2485_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2485_update_completed_)
          $T[type_cast_2488_sample_start__ps] 
          $T[type_cast_2488_sample_completed__ps] 
          $T[type_cast_2488_update_start__ps] 
          $T[type_cast_2488_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) jx_x0 )
          $T[type_cast_2488_sample_start_] 
          $T[type_cast_2488_sample_completed_] 
          $T[type_cast_2488_update_start_] 
          $T[type_cast_2488_update_completed_] 
          // jx_x0
          // start: Forward dependencies from jx_x0 to transition type_cast_2488_sample_start_
          // done: Forward dependencies from jx_x0 to transition type_cast_2488_sample_start_
          ;;[type_cast_2488_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2488_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2488_sample_start_ &-> (type_cast_2488_Sample)
          type_cast_2488_sample_completed_ <-& (type_cast_2488_Sample)
          type_cast_2488_sample_completed_ &-> ($null)
          type_cast_2488_update_start_ &-> (type_cast_2488_Update)
          type_cast_2488_update_completed_ <-& (type_cast_2488_Update)
          // RAW reenables for jx_x0
          // self-release: 
          type_cast_2488_sample_start_ o<-& (type_cast_2488_sample_completed_ 1)
          $null &-> (type_cast_2488_update_start_)
          type_cast_2488_update_start_ o<-& (type_cast_2488_update_completed_ 0)
          // Phi start dependency
          type_cast_2488_sample_start_ <-& (type_cast_2488_sample_start__ps)
          type_cast_2488_update_start_ <-& (type_cast_2488_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) jx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_2488_sample_completed__ps <-& (type_cast_2488_sample_completed_)
          type_cast_2488_update_completed__ps <-& (type_cast_2488_update_completed_)
          $T[R_jx_x1_at_entry_2489_sample_start__ps] 
          $T[R_jx_x1_at_entry_2489_sample_completed__ps] 
          $T[R_jx_x1_at_entry_2489_update_start__ps] 
          $T[R_jx_x1_at_entry_2489_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_jx_x1_at_entry_2489_sample_start_] 
          $T[R_jx_x1_at_entry_2489_sample_completed_] 
          R_jx_x1_at_entry_2489_sample_completed_ <-& (R_jx_x1_at_entry_2489_sample_start_)
          $T[R_jx_x1_at_entry_2489_update_start_] 
          $T [R_jx_x1_at_entry_2489_update_completed_] $delay 
          R_jx_x1_at_entry_2489_update_completed_ <-& (R_jx_x1_at_entry_2489_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_jx_x1_at_entry_2489_sample_start_ <-& (R_jx_x1_at_entry_2489_sample_start__ps)
          R_jx_x1_at_entry_2489_update_start_ <-& (R_jx_x1_at_entry_2489_update_start__ps)
          // Phi complete dependency.
          R_jx_x1_at_entry_2489_sample_completed__ps <-& (R_jx_x1_at_entry_2489_sample_completed_)
          R_jx_x1_at_entry_2489_update_completed__ps <-& (R_jx_x1_at_entry_2489_update_completed_)
          $phisequencer [ phi_stmt_2485_phi_seq] : 
          phi_stmt_2485_loopback_trigger type_cast_2488_sample_start__ps type_cast_2488_sample_completed__ps type_cast_2488_update_start__ps type_cast_2488_update_completed__ps phi_stmt_2485_entry_trigger R_jx_x1_at_entry_2489_sample_start__ps R_jx_x1_at_entry_2489_sample_completed__ps R_jx_x1_at_entry_2489_update_start__ps R_jx_x1_at_entry_2489_update_completed__ps :
          phi_stmt_2485_sample_start__ps phi_stmt_2485_sample_completed__ps phi_stmt_2485_update_start__ps phi_stmt_2485_update_completed__ps :
          phi_stmt_2485_loopback_sample_req_ps phi_stmt_2485_entry_sample_req_ps : 
          phi_stmt_2485_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2485
          // start:  			conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 727
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
          $T[type_cast_2494_sample_start_] 
          $T[type_cast_2494_sample_completed_] 
          $T[type_cast_2494_update_start_] 
          $T[type_cast_2494_update_completed_] 
          // ($cast ($int<32>) kx_x1 )
          // kx_x1
          // start: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_2494_sample_start_
          type_cast_2494_sample_start_ <-& (phi_stmt_2475_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_2494_sample_start_
          ;;[type_cast_2494_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2494_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2494_sample_start_ &-> (type_cast_2494_Sample)
          type_cast_2494_sample_completed_ <-& (type_cast_2494_Sample)
          type_cast_2494_sample_completed_ &-> ($null)
          type_cast_2494_update_start_ &-> (type_cast_2494_Update)
          type_cast_2494_update_completed_ <-& (type_cast_2494_Update)
          // RAW reenables for ($cast ($int<32>) kx_x1 )
          phi_stmt_2475_update_start_ o<-& (type_cast_2494_sample_completed_ 0)
          // self-release: 
          type_cast_2494_sample_start_ o<-& (type_cast_2494_sample_completed_ 1)
          $null &-> (type_cast_2494_update_start_)
          type_cast_2494_update_start_ o<-& (type_cast_2494_update_completed_ 0)
          // Target expression
          // (as target) conv47
          // start: WAR dependencies for conv47
          // done: WAR dependencies for conv47
          // end:  			conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // start:  			$volatile add := (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 728
          // volatile! 
          // Source expression
          // (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
          // conv47
          // Target expression
          // (as target) add
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // end:  			$volatile add := (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          // start:  			type_cast_2140_2140_delayed_2_0 := ($bitcast ($int<32>) conv31 ) $buffering 2 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 729
          // Source expression
          // ($bitcast ($int<32>) conv31 )
          $T[type_cast_2504_sample_start_] 
          $T[type_cast_2504_sample_completed_] 
          $T[type_cast_2504_update_start_] 
          $T[type_cast_2504_update_completed_] 
          // conv31
          // start: Forward dependencies from conv31 to transition type_cast_2504_sample_start_
          // done: Forward dependencies from conv31 to transition type_cast_2504_sample_start_
          ;;[type_cast_2504_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2504_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2504_sample_start_ &-> (type_cast_2504_Sample)
          type_cast_2504_sample_completed_ <-& (type_cast_2504_Sample)
          type_cast_2504_sample_completed_ &-> ($null)
          type_cast_2504_update_start_ &-> (type_cast_2504_Update)
          type_cast_2504_update_completed_ <-& (type_cast_2504_Update)
          // RAW reenables for conv31
          // self-release: 
          type_cast_2504_sample_start_ o<-& (type_cast_2504_sample_completed_ 1)
          $null &-> (type_cast_2504_update_start_)
          type_cast_2504_update_start_ o<-& (type_cast_2504_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2140_2140_delayed_2_0
          // start: WAR dependencies for type_cast_2140_2140_delayed_2_0
          // done: WAR dependencies for type_cast_2140_2140_delayed_2_0
          // end:  			type_cast_2140_2140_delayed_2_0 := ($bitcast ($int<32>) conv31 ) $buffering 2 $cut_through // bits of buffering = 64. 
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // start:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0) $buffering 1
          //  file prog.linked.opt.aa, line 730
          // volatile! 
          // Source expression
          // (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0)
          // ($bitcast ($int<32>) add )
          // add
          // type_cast_2140_2140_delayed_2_0
          // Target expression
          // (as target) cmp
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // end:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0) $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // start:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          //  file prog.linked.opt.aa, line 731
          // volatile! 
          // Source expression
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xthen_taken
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // end:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // start:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          //  file prog.linked.opt.aa, line 732
          // volatile! 
          // Source expression
          // ( ~ cmp )
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xelse_taken
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // end:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // start:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          //  file prog.linked.opt.aa, line 733
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xelse_taken
          // Target expression
          // (as target) ifx_xelse_exec_guard
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // end:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          // start:  			jx_x1_2155_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 734
          $T[assign_stmt_2524_sample_start_] 
          $T[assign_stmt_2524_sample_completed_] 
          $T[assign_stmt_2524_update_start_] 
          $T[assign_stmt_2524_update_completed_] 
          // Source expression
          // jx_x1
          // Target expression
          // (as target) jx_x1_2155_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2524_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2524_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2524_sample_start_ &-> (assign_stmt_2524_Sample)
          assign_stmt_2524_sample_completed_ <-& (assign_stmt_2524_Sample)
          assign_stmt_2524_sample_completed_ &-> ($null)
          assign_stmt_2524_update_start_ &-> (assign_stmt_2524_Update)
          assign_stmt_2524_update_completed_ <-& (assign_stmt_2524_Update)
          // start: Forward dependencies from jx_x1 to transition assign_stmt_2524_sample_start_
          assign_stmt_2524_sample_start_ <-& (phi_stmt_2485_update_completed_)
          // done: Forward dependencies from jx_x1 to transition assign_stmt_2524_sample_start_
          // RAW reenables for jx_x1
          phi_stmt_2485_update_start_ o<-& (assign_stmt_2524_sample_completed_ 0)
          // self-release: 
          assign_stmt_2524_sample_start_ o<-& (assign_stmt_2524_sample_completed_ 1)
          $null &-> (assign_stmt_2524_update_start_)
          assign_stmt_2524_update_start_ o<-& (assign_stmt_2524_update_completed_ 0)
          // start: WAR dependencies for jx_x1_2155_delayed_1_0
          // done: WAR dependencies for jx_x1_2155_delayed_1_0
          // end:  			jx_x1_2155_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // start:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 735
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // jx_x1_2155_delayed_1_0
          // Target expression
          // (as target) inc
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // end:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			$guard (ifx_xelse_exec_guard) conv57 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 736
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
          $T[type_cast_2536_sample_start_] 
          $T[type_cast_2536_sample_completed_] 
          $T[type_cast_2536_update_start_] 
          $T[type_cast_2536_update_completed_] 
          // Guard dependency for expression type_cast_2536 with guard R_ifx_xelse_exec_guard_2532
          type_cast_2536_sample_start_ <-& (type_cast_2494_update_completed_)
          type_cast_2536_sample_start_ <-& (type_cast_2504_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (type_cast_2536_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (type_cast_2536_sample_completed_ 0)
          // ($cast ($int<32>) inc )
          // inc
          // start: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_2536_sample_start_
          type_cast_2536_sample_start_ <-& (assign_stmt_2524_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_2536_sample_start_
          ;;[type_cast_2536_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2536_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2536_sample_start_ &-> (type_cast_2536_Sample)
          type_cast_2536_sample_completed_ <-& (type_cast_2536_Sample)
          type_cast_2536_sample_completed_ &-> ($null)
          type_cast_2536_update_start_ &-> (type_cast_2536_Update)
          type_cast_2536_update_completed_ <-& (type_cast_2536_Update)
          // RAW reenables for ($cast ($int<32>) inc )
          assign_stmt_2524_update_start_ o<-& (type_cast_2536_sample_completed_ 0)
          // self-release: 
          type_cast_2536_sample_start_ o<-& (type_cast_2536_sample_completed_ 1)
          $null &-> (type_cast_2536_update_start_)
          type_cast_2536_update_start_ o<-& (type_cast_2536_update_completed_ 0)
          // Target expression
          // (as target) conv57
          // start: WAR dependencies for conv57
          // done: WAR dependencies for conv57
          // end:  			$guard (ifx_xelse_exec_guard) conv57 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_2166_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 737
          $T[assign_stmt_2540_sample_start_] 
          $T[assign_stmt_2540_sample_completed_] 
          $T[assign_stmt_2540_update_start_] 
          $T[assign_stmt_2540_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2166_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2540_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2540_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2540_sample_start_ &-> (assign_stmt_2540_Sample)
          assign_stmt_2540_sample_completed_ <-& (assign_stmt_2540_Sample)
          assign_stmt_2540_sample_completed_ &-> ($null)
          assign_stmt_2540_update_start_ &-> (assign_stmt_2540_Update)
          assign_stmt_2540_update_completed_ <-& (assign_stmt_2540_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2540_sample_start_
          assign_stmt_2540_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2540_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2540_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2540_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2540_sample_completed_ 0)
          // self-release: 
          assign_stmt_2540_sample_start_ o<-& (assign_stmt_2540_sample_completed_ 1)
          $null &-> (assign_stmt_2540_update_start_)
          assign_stmt_2540_update_start_ o<-& (assign_stmt_2540_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2166_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2166_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2166_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp64
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp64
          // start:  			$guard (ifx_xelse_exec_guard_2166_delayed_1_0) $volatile cmp64 := (conv57 == add63) $buffering 1
          //  file prog.linked.opt.aa, line 738
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2166_delayed_1_0
          // Source expression
          // (conv57 == add63)
          // conv57
          // add63
          // Target expression
          // (as target) cmp64
          // start: WAR dependencies for cmp64
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp64
          // end:  			$guard (ifx_xelse_exec_guard_2166_delayed_1_0) $volatile cmp64 := (conv57 == add63) $buffering 1
          // start:  			ifx_xelse_exec_guard_2172_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 739
          $T[assign_stmt_2549_sample_start_] 
          $T[assign_stmt_2549_sample_completed_] 
          $T[assign_stmt_2549_update_start_] 
          $T[assign_stmt_2549_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2172_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2549_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2549_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2549_sample_start_ &-> (assign_stmt_2549_Sample)
          assign_stmt_2549_sample_completed_ <-& (assign_stmt_2549_Sample)
          assign_stmt_2549_sample_completed_ &-> ($null)
          assign_stmt_2549_update_start_ &-> (assign_stmt_2549_Update)
          assign_stmt_2549_update_completed_ <-& (assign_stmt_2549_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2549_sample_start_
          assign_stmt_2549_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2549_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2549_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2549_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2549_sample_completed_ 0)
          // self-release: 
          assign_stmt_2549_sample_start_ o<-& (assign_stmt_2549_sample_completed_ 1)
          $null &-> (assign_stmt_2549_update_start_)
          assign_stmt_2549_update_start_ o<-& (assign_stmt_2549_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2172_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2172_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2172_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse_exec_guard_2172_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 740
          // Guard expression 
          // ifx_xelse_exec_guard_2172_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) cmp64 )
          $T[type_cast_2553_sample_start_] 
          $T[type_cast_2553_sample_completed_] 
          $T[type_cast_2553_update_start_] 
          $T[type_cast_2553_update_completed_] 
          // Guard dependency for expression type_cast_2553 with guard R_ifx_xelse_exec_guard_2172_delayed_1_0_2550
          type_cast_2553_sample_start_ <-& (assign_stmt_2549_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_2172_delayed_1_0
          assign_stmt_2549_update_start_ o<-& (type_cast_2553_sample_completed_ 0)
          // cmp64
          // start: Forward dependencies from cmp64 to transition type_cast_2553_sample_start_
          type_cast_2553_sample_start_ <-& (type_cast_2536_update_completed_)
          // done: Forward dependencies from cmp64 to transition type_cast_2553_sample_start_
          ;;[type_cast_2553_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2553_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2553_sample_start_ &-> (type_cast_2553_Sample)
          type_cast_2553_sample_completed_ <-& (type_cast_2553_Sample)
          type_cast_2553_sample_completed_ &-> ($null)
          type_cast_2553_update_start_ &-> (type_cast_2553_Update)
          type_cast_2553_update_completed_ <-& (type_cast_2553_Update)
          // RAW reenables for cmp64
          type_cast_2536_update_start_ o<-& (type_cast_2553_sample_completed_ 0)
          // self-release: 
          type_cast_2553_sample_start_ o<-& (type_cast_2553_sample_completed_ 1)
          $null &-> (type_cast_2553_update_start_)
          type_cast_2553_update_start_ o<-& (type_cast_2553_update_completed_ 0)
          // Target expression
          // (as target) inc69
          // start: WAR dependencies for inc69
          // done: WAR dependencies for inc69
          // end:  			$guard (ifx_xelse_exec_guard_2172_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xelse_exec_guard_2177_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 741
          $T[assign_stmt_2557_sample_start_] 
          $T[assign_stmt_2557_sample_completed_] 
          $T[assign_stmt_2557_update_start_] 
          $T[assign_stmt_2557_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2177_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2557_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2557_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2557_sample_start_ &-> (assign_stmt_2557_Sample)
          assign_stmt_2557_sample_completed_ <-& (assign_stmt_2557_Sample)
          assign_stmt_2557_sample_completed_ &-> ($null)
          assign_stmt_2557_update_start_ &-> (assign_stmt_2557_Update)
          assign_stmt_2557_update_completed_ <-& (assign_stmt_2557_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2557_sample_start_
          assign_stmt_2557_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2557_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2557_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2557_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2557_sample_completed_ 0)
          // self-release: 
          assign_stmt_2557_sample_start_ o<-& (assign_stmt_2557_sample_completed_ 1)
          $null &-> (assign_stmt_2557_update_start_)
          assign_stmt_2557_update_start_ o<-& (assign_stmt_2557_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2177_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2177_delayed_2_0
          // end:  			ifx_xelse_exec_guard_2177_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			ix_x2_2180_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 742
          $T[assign_stmt_2560_sample_start_] 
          $T[assign_stmt_2560_sample_completed_] 
          $T[assign_stmt_2560_update_start_] 
          $T[assign_stmt_2560_update_completed_] 
          // Source expression
          // ix_x2
          // Target expression
          // (as target) ix_x2_2180_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2560_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2560_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2560_sample_start_ &-> (assign_stmt_2560_Sample)
          assign_stmt_2560_sample_completed_ <-& (assign_stmt_2560_Sample)
          assign_stmt_2560_sample_completed_ &-> ($null)
          assign_stmt_2560_update_start_ &-> (assign_stmt_2560_Update)
          assign_stmt_2560_update_completed_ <-& (assign_stmt_2560_Update)
          // start: Forward dependencies from ix_x2 to transition assign_stmt_2560_sample_start_
          assign_stmt_2560_sample_start_ <-& (phi_stmt_2480_update_completed_)
          // done: Forward dependencies from ix_x2 to transition assign_stmt_2560_sample_start_
          // RAW reenables for ix_x2
          phi_stmt_2480_update_start_ o<-& (assign_stmt_2560_sample_completed_ 0)
          // self-release: 
          assign_stmt_2560_sample_start_ o<-& (assign_stmt_2560_sample_completed_ 1)
          $null &-> (assign_stmt_2560_update_start_)
          assign_stmt_2560_update_start_ o<-& (assign_stmt_2560_update_completed_ 0)
          // start: WAR dependencies for ix_x2_2180_delayed_3_0
          // done: WAR dependencies for ix_x2_2180_delayed_3_0
          // end:  			ix_x2_2180_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc69x_xix_x2
          // done: WAR dependencies for inc69x_xix_x2
          // start:  			$guard (ifx_xelse_exec_guard_2177_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_2180_delayed_3_0) $buffering 1
          //  file prog.linked.opt.aa, line 743
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2177_delayed_2_0
          // Source expression
          // (inc69 + ix_x2_2180_delayed_3_0)
          // inc69
          // ix_x2_2180_delayed_3_0
          // Target expression
          // (as target) inc69x_xix_x2
          // start: WAR dependencies for inc69x_xix_x2
          // done: WAR dependencies for inc69x_xix_x2
          // end:  			$guard (ifx_xelse_exec_guard_2177_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_2180_delayed_3_0) $buffering 1
          // start:  			ifx_xelse_exec_guard_2183_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 744
          $T[assign_stmt_2569_sample_start_] 
          $T[assign_stmt_2569_sample_completed_] 
          $T[assign_stmt_2569_update_start_] 
          $T[assign_stmt_2569_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2183_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2569_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2569_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2569_sample_start_ &-> (assign_stmt_2569_Sample)
          assign_stmt_2569_sample_completed_ <-& (assign_stmt_2569_Sample)
          assign_stmt_2569_sample_completed_ &-> ($null)
          assign_stmt_2569_update_start_ &-> (assign_stmt_2569_Update)
          assign_stmt_2569_update_completed_ <-& (assign_stmt_2569_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2569_sample_start_
          assign_stmt_2569_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2569_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2569_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2569_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2569_sample_completed_ 0)
          // self-release: 
          assign_stmt_2569_sample_start_ o<-& (assign_stmt_2569_sample_completed_ 1)
          $null &-> (assign_stmt_2569_update_start_)
          assign_stmt_2569_update_start_ o<-& (assign_stmt_2569_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2183_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2183_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2183_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			inc_2188_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 745
          $T[assign_stmt_2572_sample_start_] 
          $T[assign_stmt_2572_sample_completed_] 
          $T[assign_stmt_2572_update_start_] 
          $T[assign_stmt_2572_update_completed_] 
          // Source expression
          // inc
          // Target expression
          // (as target) inc_2188_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2572_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2572_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2572_sample_start_ &-> (assign_stmt_2572_Sample)
          assign_stmt_2572_sample_completed_ <-& (assign_stmt_2572_Sample)
          assign_stmt_2572_sample_completed_ &-> ($null)
          assign_stmt_2572_update_start_ &-> (assign_stmt_2572_Update)
          assign_stmt_2572_update_completed_ <-& (assign_stmt_2572_Update)
          // start: Forward dependencies from inc to transition assign_stmt_2572_sample_start_
          assign_stmt_2572_sample_start_ <-& (assign_stmt_2524_update_completed_)
          // done: Forward dependencies from inc to transition assign_stmt_2572_sample_start_
          // RAW reenables for inc
          assign_stmt_2524_update_start_ o<-& (assign_stmt_2572_sample_completed_ 0)
          // self-release: 
          assign_stmt_2572_sample_start_ o<-& (assign_stmt_2572_sample_completed_ 1)
          $null &-> (assign_stmt_2572_update_start_)
          assign_stmt_2572_update_start_ o<-& (assign_stmt_2572_update_completed_ 0)
          // start: WAR dependencies for inc_2188_delayed_1_0
          // done: WAR dependencies for inc_2188_delayed_1_0
          // end:  			inc_2188_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // start:  			$guard (ifx_xelse_exec_guard_2183_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 )  $buffering 1
          //  file prog.linked.opt.aa, line 746
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2183_delayed_1_0
          // Source expression
          // ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 ) 
          // cmp64
          // inc_2188_delayed_1_0
          // Target expression
          // (as target) jx_x2
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // end:  			$guard (ifx_xelse_exec_guard_2183_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 )  $buffering 1
          // start:  			ifx_xelse_exec_guard_2191_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 747
          $T[assign_stmt_2583_sample_start_] 
          $T[assign_stmt_2583_sample_completed_] 
          $T[assign_stmt_2583_update_start_] 
          $T[assign_stmt_2583_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2191_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2583_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2583_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2583_sample_start_ &-> (assign_stmt_2583_Sample)
          assign_stmt_2583_sample_completed_ <-& (assign_stmt_2583_Sample)
          assign_stmt_2583_sample_completed_ &-> ($null)
          assign_stmt_2583_update_start_ &-> (assign_stmt_2583_Update)
          assign_stmt_2583_update_completed_ <-& (assign_stmt_2583_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2583_sample_start_
          assign_stmt_2583_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2583_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2583_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2583_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2583_sample_completed_ 0)
          // self-release: 
          assign_stmt_2583_sample_start_ o<-& (assign_stmt_2583_sample_completed_ 1)
          $null &-> (assign_stmt_2583_update_start_)
          assign_stmt_2583_update_start_ o<-& (assign_stmt_2583_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2191_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2191_delayed_2_0
          // end:  			ifx_xelse_exec_guard_2191_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 748
          // Guard expression 
          // ifx_xelse_exec_guard_2191_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
          $T[type_cast_2588_sample_start_] 
          $T[type_cast_2588_sample_completed_] 
          $T[type_cast_2588_update_start_] 
          $T[type_cast_2588_update_completed_] 
          // Guard dependency for expression type_cast_2588 with guard R_ifx_xelse_exec_guard_2191_delayed_2_0_2584
          type_cast_2588_sample_start_ <-& (assign_stmt_2583_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_2191_delayed_2_0
          assign_stmt_2583_update_start_ o<-& (type_cast_2588_sample_completed_ 0)
          // ($cast ($int<32>) inc69x_xix_x2 )
          // inc69x_xix_x2
          // start: Forward dependencies from ($cast ($int<32>) inc69x_xix_x2 ) to transition type_cast_2588_sample_start_
          type_cast_2588_sample_start_ <-& (type_cast_2553_update_completed_)
          type_cast_2588_sample_start_ <-& (assign_stmt_2560_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc69x_xix_x2 ) to transition type_cast_2588_sample_start_
          ;;[type_cast_2588_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2588_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2588_sample_start_ &-> (type_cast_2588_Sample)
          type_cast_2588_sample_completed_ <-& (type_cast_2588_Sample)
          type_cast_2588_sample_completed_ &-> ($null)
          type_cast_2588_update_start_ &-> (type_cast_2588_Update)
          type_cast_2588_update_completed_ <-& (type_cast_2588_Update)
          // RAW reenables for ($cast ($int<32>) inc69x_xix_x2 )
          type_cast_2553_update_start_ o<-& (type_cast_2588_sample_completed_ 0)
          assign_stmt_2560_update_start_ o<-& (type_cast_2588_sample_completed_ 0)
          // self-release: 
          type_cast_2588_sample_start_ o<-& (type_cast_2588_sample_completed_ 1)
          $null &-> (type_cast_2588_update_start_)
          type_cast_2588_update_start_ o<-& (type_cast_2588_update_completed_ 0)
          // Target expression
          // (as target) conv71
          // start: WAR dependencies for conv71
          // done: WAR dependencies for conv71
          // end:  			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_2197_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 749
          $T[assign_stmt_2592_sample_start_] 
          $T[assign_stmt_2592_sample_completed_] 
          $T[assign_stmt_2592_update_start_] 
          $T[assign_stmt_2592_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2197_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2592_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2592_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2592_sample_start_ &-> (assign_stmt_2592_Sample)
          assign_stmt_2592_sample_completed_ <-& (assign_stmt_2592_Sample)
          assign_stmt_2592_sample_completed_ &-> ($null)
          assign_stmt_2592_update_start_ &-> (assign_stmt_2592_Update)
          assign_stmt_2592_update_completed_ <-& (assign_stmt_2592_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2592_sample_start_
          assign_stmt_2592_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2592_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2592_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2592_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2592_sample_completed_ 0)
          // self-release: 
          assign_stmt_2592_sample_start_ o<-& (assign_stmt_2592_sample_completed_ 1)
          $null &-> (assign_stmt_2592_update_start_)
          assign_stmt_2592_update_start_ o<-& (assign_stmt_2592_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2197_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2197_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2197_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for cmp78
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp78
          // start:  			$guard (ifx_xelse_exec_guard_2197_delayed_3_0) $volatile cmp78 := (conv71 == add77) $buffering 1
          //  file prog.linked.opt.aa, line 750
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2197_delayed_3_0
          // Source expression
          // (conv71 == add77)
          // conv71
          // add77
          // Target expression
          // (as target) cmp78
          // start: WAR dependencies for cmp78
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp78
          // end:  			$guard (ifx_xelse_exec_guard_2197_delayed_3_0) $volatile cmp78 := (conv71 == add77) $buffering 1
          // start:  			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 751
          $T[assign_stmt_2601_sample_start_] 
          $T[assign_stmt_2601_sample_completed_] 
          $T[assign_stmt_2601_update_start_] 
          $T[assign_stmt_2601_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2204_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2601_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2601_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2601_sample_start_ &-> (assign_stmt_2601_Sample)
          assign_stmt_2601_sample_completed_ <-& (assign_stmt_2601_Sample)
          assign_stmt_2601_sample_completed_ &-> ($null)
          assign_stmt_2601_update_start_ &-> (assign_stmt_2601_Update)
          assign_stmt_2601_update_completed_ <-& (assign_stmt_2601_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2601_sample_start_
          assign_stmt_2601_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2601_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2601_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2601_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2601_sample_completed_ 0)
          // self-release: 
          assign_stmt_2601_sample_start_ o<-& (assign_stmt_2601_sample_completed_ 1)
          $null &-> (assign_stmt_2601_update_start_)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2204_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2204_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xthen80_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen80_taken
          // start:  			$volatile ifx_xelse_ifx_xthen80_taken := (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78) $buffering 1
          //  file prog.linked.opt.aa, line 752
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78)
          // ifx_xelse_exec_guard_2204_delayed_3_0
          // cmp78
          // Target expression
          // (as target) ifx_xelse_ifx_xthen80_taken
          // start: WAR dependencies for ifx_xelse_ifx_xthen80_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen80_taken
          // end:  			$volatile ifx_xelse_ifx_xthen80_taken := (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78) $buffering 1
          // start:  			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 753
          $T[assign_stmt_2609_sample_start_] 
          $T[assign_stmt_2609_sample_completed_] 
          $T[assign_stmt_2609_update_start_] 
          $T[assign_stmt_2609_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2209_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2609_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2609_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2609_sample_start_ &-> (assign_stmt_2609_Sample)
          assign_stmt_2609_sample_completed_ <-& (assign_stmt_2609_Sample)
          assign_stmt_2609_sample_completed_ &-> ($null)
          assign_stmt_2609_update_start_ &-> (assign_stmt_2609_Update)
          assign_stmt_2609_update_completed_ <-& (assign_stmt_2609_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2609_sample_start_
          assign_stmt_2609_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2609_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_2609_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_2494_update_start_ o<-& (assign_stmt_2609_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2609_sample_completed_ 0)
          // self-release: 
          assign_stmt_2609_sample_start_ o<-& (assign_stmt_2609_sample_completed_ 1)
          $null &-> (assign_stmt_2609_update_start_)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2209_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2209_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xend82_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend82_taken
          // start:  			$volatile ifx_xelse_ifx_xend82_taken := (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 )) $buffering 1
          //  file prog.linked.opt.aa, line 754
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 ))
          // ifx_xelse_exec_guard_2209_delayed_3_0
          // ( ~ cmp78 )
          // cmp78
          // Target expression
          // (as target) ifx_xelse_ifx_xend82_taken
          // start: WAR dependencies for ifx_xelse_ifx_xend82_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend82_taken
          // end:  			$volatile ifx_xelse_ifx_xend82_taken := (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 )) $buffering 1
          // start: WAR dependencies for ifx_xthen80_exec_guard
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen80_exec_guard
          // start:  			$volatile ifx_xthen80_exec_guard := ifx_xelse_ifx_xthen80_taken $buffering 1
          //  file prog.linked.opt.aa, line 755
          // volatile! 
          // Source expression
          // ifx_xelse_ifx_xthen80_taken
          // Target expression
          // (as target) ifx_xthen80_exec_guard
          // start: WAR dependencies for ifx_xthen80_exec_guard
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen80_exec_guard
          // end:  			$volatile ifx_xthen80_exec_guard := ifx_xelse_ifx_xthen80_taken $buffering 1
          // start: WAR dependencies for ifx_xthen80_ifx_xend82_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen80_ifx_xend82_taken
          // start:  			$volatile ifx_xthen80_ifx_xend82_taken := ifx_xthen80_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 756
          // volatile! 
          // Source expression
          // ifx_xthen80_exec_guard
          // Target expression
          // (as target) ifx_xthen80_ifx_xend82_taken
          // start: WAR dependencies for ifx_xthen80_ifx_xend82_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen80_ifx_xend82_taken
          // end:  			$volatile ifx_xthen80_ifx_xend82_taken := ifx_xthen80_exec_guard $buffering 1
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // start:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          //  file prog.linked.opt.aa, line 757
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xthen_taken
          // Target expression
          // (as target) ifx_xthen_exec_guard
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // end:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          // start:  			kx_x1_2225_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 758
          $T[assign_stmt_2627_sample_start_] 
          $T[assign_stmt_2627_sample_completed_] 
          $T[assign_stmt_2627_update_start_] 
          $T[assign_stmt_2627_update_completed_] 
          // Source expression
          // kx_x1
          // Target expression
          // (as target) kx_x1_2225_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2627_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2627_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2627_sample_start_ &-> (assign_stmt_2627_Sample)
          assign_stmt_2627_sample_completed_ <-& (assign_stmt_2627_Sample)
          assign_stmt_2627_sample_completed_ &-> ($null)
          assign_stmt_2627_update_start_ &-> (assign_stmt_2627_Update)
          assign_stmt_2627_update_completed_ <-& (assign_stmt_2627_Update)
          // start: Forward dependencies from kx_x1 to transition assign_stmt_2627_sample_start_
          assign_stmt_2627_sample_start_ <-& (phi_stmt_2475_update_completed_)
          // done: Forward dependencies from kx_x1 to transition assign_stmt_2627_sample_start_
          // RAW reenables for kx_x1
          phi_stmt_2475_update_start_ o<-& (assign_stmt_2627_sample_completed_ 0)
          // self-release: 
          assign_stmt_2627_sample_start_ o<-& (assign_stmt_2627_sample_completed_ 1)
          $null &-> (assign_stmt_2627_update_start_)
          assign_stmt_2627_update_start_ o<-& (assign_stmt_2627_update_completed_ 0)
          // start: WAR dependencies for kx_x1_2225_delayed_1_0
          // done: WAR dependencies for kx_x1_2225_delayed_1_0
          // end:  			kx_x1_2225_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add53
          // done: WAR dependencies for add53
          // start:  			$guard (ifx_xthen_exec_guard) $volatile add53 := (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 759
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
          // kx_x1_2225_delayed_1_0
          // Target expression
          // (as target) add53
          // start: WAR dependencies for add53
          // done: WAR dependencies for add53
          // end:  			$guard (ifx_xthen_exec_guard) $volatile add53 := (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken
          // start:  			$volatile ifx_xthen_ifx_xend82_taken := ifx_xthen_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 760
          // volatile! 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken
          // end:  			$volatile ifx_xthen_ifx_xend82_taken := ifx_xthen_exec_guard $buffering 1
          // start:  			ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 761
          $T[assign_stmt_2640_sample_start_] 
          $T[assign_stmt_2640_sample_completed_] 
          $T[assign_stmt_2640_update_start_] 
          $T[assign_stmt_2640_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2640_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2640_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2640_sample_start_ &-> (assign_stmt_2640_Sample)
          assign_stmt_2640_sample_completed_ <-& (assign_stmt_2640_Sample)
          assign_stmt_2640_sample_completed_ &-> ($null)
          assign_stmt_2640_update_start_ &-> (assign_stmt_2640_Update)
          assign_stmt_2640_update_completed_ <-& (assign_stmt_2640_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2640_sample_start_
          assign_stmt_2640_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2640_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2640_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend82_taken
          type_cast_2494_update_start_ o<-& (assign_stmt_2640_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2640_sample_completed_ 0)
          // self-release: 
          assign_stmt_2640_sample_start_ o<-& (assign_stmt_2640_sample_completed_ 1)
          $null &-> (assign_stmt_2640_update_start_)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2640_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
          // end:  			ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xend82_exec_guard
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend82_exec_guard
          // start:  			$volatile ifx_xend82_exec_guard := (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)) $buffering 1
          //  file prog.linked.opt.aa, line 762
          // volatile! 
          // Source expression
          // (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken))
          // ifx_xelse_ifx_xend82_taken
          // (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)
          // ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
          // ifx_xthen80_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xend82_exec_guard
          // start: WAR dependencies for ifx_xend82_exec_guard
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend82_exec_guard
          // end:  			$volatile ifx_xend82_exec_guard := (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)) $buffering 1
          // start:  			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 763
          $T[assign_stmt_2650_sample_start_] 
          $T[assign_stmt_2650_sample_completed_] 
          $T[assign_stmt_2650_update_start_] 
          $T[assign_stmt_2650_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2650_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2650_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2650_sample_start_ &-> (assign_stmt_2650_Sample)
          assign_stmt_2650_sample_completed_ <-& (assign_stmt_2650_Sample)
          assign_stmt_2650_sample_completed_ &-> ($null)
          assign_stmt_2650_update_start_ &-> (assign_stmt_2650_Update)
          assign_stmt_2650_update_completed_ <-& (assign_stmt_2650_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2650_sample_start_
          assign_stmt_2650_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2650_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2650_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend82_taken
          type_cast_2494_update_start_ o<-& (assign_stmt_2650_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2650_sample_completed_ 0)
          // self-release: 
          assign_stmt_2650_sample_start_ o<-& (assign_stmt_2650_sample_completed_ 1)
          $null &-> (assign_stmt_2650_update_start_)
          assign_stmt_2650_update_start_ o<-& (assign_stmt_2650_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
          // end:  			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 764
          // Source expression
          // ($bitcast ($uint<16>) add53 )
          $T[type_cast_2653_sample_start_] 
          $T[type_cast_2653_sample_completed_] 
          $T[type_cast_2653_update_start_] 
          $T[type_cast_2653_update_completed_] 
          // add53
          // start: Forward dependencies from add53 to transition type_cast_2653_sample_start_
          type_cast_2653_sample_start_ <-& (assign_stmt_2627_update_completed_)
          // done: Forward dependencies from add53 to transition type_cast_2653_sample_start_
          ;;[type_cast_2653_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2653_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2653_sample_start_ &-> (type_cast_2653_Sample)
          type_cast_2653_sample_completed_ <-& (type_cast_2653_Sample)
          type_cast_2653_sample_completed_ &-> ($null)
          type_cast_2653_update_start_ &-> (type_cast_2653_Update)
          type_cast_2653_update_completed_ <-& (type_cast_2653_Update)
          // RAW reenables for add53
          assign_stmt_2627_update_start_ o<-& (type_cast_2653_sample_completed_ 0)
          // self-release: 
          type_cast_2653_sample_start_ o<-& (type_cast_2653_sample_completed_ 1)
          $null &-> (type_cast_2653_update_start_)
          type_cast_2653_update_start_ o<-& (type_cast_2653_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2243_2243_delayed_3_0
          // start: WAR dependencies for type_cast_2243_2243_delayed_3_0
          // done: WAR dependencies for type_cast_2243_2243_delayed_3_0
          // end:  			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2650_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2650_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2653_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (type_cast_2653_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // done: WAR dependencies for kx_x0
          // start:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 765
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
          // type_cast_2243_2243_delayed_3_0
          // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen80_ifx_xend82_taken
          // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend82_taken
          // Target expression
          // (as target) kx_x0
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2650_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (assign_stmt_2650_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2653_update_start_ <-& (phi_stmt_2475_sample_completed_)
          phi_stmt_2475_sample_start_ o<-& (type_cast_2653_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // done: WAR dependencies for kx_x0
          // end:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 766
          $T[assign_stmt_2674_sample_start_] 
          $T[assign_stmt_2674_sample_completed_] 
          $T[assign_stmt_2674_update_start_] 
          $T[assign_stmt_2674_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2674_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2674_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2674_sample_start_ &-> (assign_stmt_2674_Sample)
          assign_stmt_2674_sample_completed_ <-& (assign_stmt_2674_Sample)
          assign_stmt_2674_sample_completed_ &-> ($null)
          assign_stmt_2674_update_start_ &-> (assign_stmt_2674_Update)
          assign_stmt_2674_update_completed_ <-& (assign_stmt_2674_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2674_sample_start_
          assign_stmt_2674_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2674_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2674_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend82_taken
          type_cast_2494_update_start_ o<-& (assign_stmt_2674_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2674_sample_completed_ 0)
          // self-release: 
          assign_stmt_2674_sample_start_ o<-& (assign_stmt_2674_sample_completed_ 1)
          $null &-> (assign_stmt_2674_update_start_)
          assign_stmt_2674_update_start_ o<-& (assign_stmt_2674_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
          // end:  			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 767
          // Source expression
          // ($bitcast ($uint<16>) ix_x2 )
          $T[type_cast_2677_sample_start_] 
          $T[type_cast_2677_sample_completed_] 
          $T[type_cast_2677_update_start_] 
          $T[type_cast_2677_update_completed_] 
          // ix_x2
          // start: Forward dependencies from ix_x2 to transition type_cast_2677_sample_start_
          type_cast_2677_sample_start_ <-& (phi_stmt_2480_update_completed_)
          // done: Forward dependencies from ix_x2 to transition type_cast_2677_sample_start_
          ;;[type_cast_2677_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2677_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2677_sample_start_ &-> (type_cast_2677_Sample)
          type_cast_2677_sample_completed_ <-& (type_cast_2677_Sample)
          type_cast_2677_sample_completed_ &-> ($null)
          type_cast_2677_update_start_ &-> (type_cast_2677_Update)
          type_cast_2677_update_completed_ <-& (type_cast_2677_Update)
          // RAW reenables for ix_x2
          phi_stmt_2480_update_start_ o<-& (type_cast_2677_sample_completed_ 0)
          // self-release: 
          type_cast_2677_sample_start_ o<-& (type_cast_2677_sample_completed_ 1)
          $null &-> (type_cast_2677_update_start_)
          type_cast_2677_update_start_ o<-& (type_cast_2677_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2261_2261_delayed_4_0
          // start: WAR dependencies for type_cast_2261_2261_delayed_4_0
          // done: WAR dependencies for type_cast_2261_2261_delayed_4_0
          // end:  			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 768
          // Source expression
          // ($bitcast ($uint<16>) inc69x_xix_x2 )
          $T[type_cast_2681_sample_start_] 
          $T[type_cast_2681_sample_completed_] 
          $T[type_cast_2681_update_start_] 
          $T[type_cast_2681_update_completed_] 
          // inc69x_xix_x2
          // start: Forward dependencies from inc69x_xix_x2 to transition type_cast_2681_sample_start_
          type_cast_2681_sample_start_ <-& (type_cast_2553_update_completed_)
          type_cast_2681_sample_start_ <-& (assign_stmt_2560_update_completed_)
          // done: Forward dependencies from inc69x_xix_x2 to transition type_cast_2681_sample_start_
          ;;[type_cast_2681_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2681_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2681_sample_start_ &-> (type_cast_2681_Sample)
          type_cast_2681_sample_completed_ <-& (type_cast_2681_Sample)
          type_cast_2681_sample_completed_ &-> ($null)
          type_cast_2681_update_start_ &-> (type_cast_2681_Update)
          type_cast_2681_update_completed_ <-& (type_cast_2681_Update)
          // RAW reenables for inc69x_xix_x2
          type_cast_2553_update_start_ o<-& (type_cast_2681_sample_completed_ 0)
          assign_stmt_2560_update_start_ o<-& (type_cast_2681_sample_completed_ 0)
          // self-release: 
          type_cast_2681_sample_start_ o<-& (type_cast_2681_sample_completed_ 1)
          $null &-> (type_cast_2681_update_start_)
          type_cast_2681_update_start_ o<-& (type_cast_2681_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2264_2264_delayed_1_0
          // start: WAR dependencies for type_cast_2264_2264_delayed_1_0
          // done: WAR dependencies for type_cast_2264_2264_delayed_1_0
          // end:  			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 769
          // Source expression
          // ($bitcast ($uint<16>) inc69x_xix_x2 )
          $T[type_cast_2685_sample_start_] 
          $T[type_cast_2685_sample_completed_] 
          $T[type_cast_2685_update_start_] 
          $T[type_cast_2685_update_completed_] 
          // inc69x_xix_x2
          // start: Forward dependencies from inc69x_xix_x2 to transition type_cast_2685_sample_start_
          type_cast_2685_sample_start_ <-& (type_cast_2553_update_completed_)
          type_cast_2685_sample_start_ <-& (assign_stmt_2560_update_completed_)
          // done: Forward dependencies from inc69x_xix_x2 to transition type_cast_2685_sample_start_
          ;;[type_cast_2685_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2685_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2685_sample_start_ &-> (type_cast_2685_Sample)
          type_cast_2685_sample_completed_ <-& (type_cast_2685_Sample)
          type_cast_2685_sample_completed_ &-> ($null)
          type_cast_2685_update_start_ &-> (type_cast_2685_Update)
          type_cast_2685_update_completed_ <-& (type_cast_2685_Update)
          // RAW reenables for inc69x_xix_x2
          type_cast_2553_update_start_ o<-& (type_cast_2685_sample_completed_ 0)
          assign_stmt_2560_update_start_ o<-& (type_cast_2685_sample_completed_ 0)
          // self-release: 
          type_cast_2685_sample_start_ o<-& (type_cast_2685_sample_completed_ 1)
          $null &-> (type_cast_2685_update_start_)
          type_cast_2685_update_start_ o<-& (type_cast_2685_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2267_2267_delayed_1_0
          // start: WAR dependencies for type_cast_2267_2267_delayed_1_0
          // done: WAR dependencies for type_cast_2267_2267_delayed_1_0
          // end:  			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2674_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2674_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2677_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2677_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_2681_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2681_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_2685_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2685_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // done: WAR dependencies for ix_x1
          // start:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 770
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
          // type_cast_2261_2261_delayed_4_0
          // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen80_ifx_xend82_taken
          // type_cast_2264_2264_delayed_1_0
          // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend82_taken
          // type_cast_2267_2267_delayed_1_0
          // Target expression
          // (as target) ix_x1
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2674_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (assign_stmt_2674_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2677_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2677_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_2681_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2681_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_2685_update_start_ <-& (phi_stmt_2480_sample_completed_)
          phi_stmt_2480_sample_start_ o<-& (type_cast_2685_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for ix_x1
          // end:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 771
          $T[assign_stmt_2702_sample_start_] 
          $T[assign_stmt_2702_sample_completed_] 
          $T[assign_stmt_2702_update_start_] 
          $T[assign_stmt_2702_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2702_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2702_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2702_sample_start_ &-> (assign_stmt_2702_Sample)
          assign_stmt_2702_sample_completed_ <-& (assign_stmt_2702_Sample)
          assign_stmt_2702_sample_completed_ &-> ($null)
          assign_stmt_2702_update_start_ &-> (assign_stmt_2702_Update)
          assign_stmt_2702_update_completed_ <-& (assign_stmt_2702_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2702_sample_start_
          assign_stmt_2702_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2702_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2702_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend82_taken
          type_cast_2494_update_start_ o<-& (assign_stmt_2702_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2702_sample_completed_ 0)
          // self-release: 
          assign_stmt_2702_sample_start_ o<-& (assign_stmt_2702_sample_completed_ 1)
          $null &-> (assign_stmt_2702_update_start_)
          assign_stmt_2702_update_start_ o<-& (assign_stmt_2702_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
          // end:  			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 772
          // Source expression
          // ($bitcast ($uint<16>) jx_x1 )
          $T[type_cast_2705_sample_start_] 
          $T[type_cast_2705_sample_completed_] 
          $T[type_cast_2705_update_start_] 
          $T[type_cast_2705_update_completed_] 
          // jx_x1
          // start: Forward dependencies from jx_x1 to transition type_cast_2705_sample_start_
          type_cast_2705_sample_start_ <-& (phi_stmt_2485_update_completed_)
          // done: Forward dependencies from jx_x1 to transition type_cast_2705_sample_start_
          ;;[type_cast_2705_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2705_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2705_sample_start_ &-> (type_cast_2705_Sample)
          type_cast_2705_sample_completed_ <-& (type_cast_2705_Sample)
          type_cast_2705_sample_completed_ &-> ($null)
          type_cast_2705_update_start_ &-> (type_cast_2705_Update)
          type_cast_2705_update_completed_ <-& (type_cast_2705_Update)
          // RAW reenables for jx_x1
          phi_stmt_2485_update_start_ o<-& (type_cast_2705_sample_completed_ 0)
          // self-release: 
          type_cast_2705_sample_start_ o<-& (type_cast_2705_sample_completed_ 1)
          $null &-> (type_cast_2705_update_start_)
          type_cast_2705_update_start_ o<-& (type_cast_2705_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2277_2277_delayed_4_0
          // start: WAR dependencies for type_cast_2277_2277_delayed_4_0
          // done: WAR dependencies for type_cast_2277_2277_delayed_4_0
          // end:  			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 773
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_2709_sample_start_] 
          $T[type_cast_2709_sample_completed_] 
          $T[type_cast_2709_update_start_] 
          $T[type_cast_2709_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_2709_sample_start_
          type_cast_2709_sample_start_ <-& (type_cast_2536_update_completed_)
          type_cast_2709_sample_start_ <-& (assign_stmt_2572_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_2709_sample_start_
          ;;[type_cast_2709_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2709_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2709_sample_start_ &-> (type_cast_2709_Sample)
          type_cast_2709_sample_completed_ <-& (type_cast_2709_Sample)
          type_cast_2709_sample_completed_ &-> ($null)
          type_cast_2709_update_start_ &-> (type_cast_2709_Update)
          type_cast_2709_update_completed_ <-& (type_cast_2709_Update)
          // RAW reenables for jx_x2
          type_cast_2536_update_start_ o<-& (type_cast_2709_sample_completed_ 0)
          assign_stmt_2572_update_start_ o<-& (type_cast_2709_sample_completed_ 0)
          // self-release: 
          type_cast_2709_sample_start_ o<-& (type_cast_2709_sample_completed_ 1)
          $null &-> (type_cast_2709_update_start_)
          type_cast_2709_update_start_ o<-& (type_cast_2709_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2280_2280_delayed_2_0
          // start: WAR dependencies for type_cast_2280_2280_delayed_2_0
          // done: WAR dependencies for type_cast_2280_2280_delayed_2_0
          // end:  			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 774
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_2713_sample_start_] 
          $T[type_cast_2713_sample_completed_] 
          $T[type_cast_2713_update_start_] 
          $T[type_cast_2713_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_2713_sample_start_
          type_cast_2713_sample_start_ <-& (type_cast_2536_update_completed_)
          type_cast_2713_sample_start_ <-& (assign_stmt_2572_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_2713_sample_start_
          ;;[type_cast_2713_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2713_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2713_sample_start_ &-> (type_cast_2713_Sample)
          type_cast_2713_sample_completed_ <-& (type_cast_2713_Sample)
          type_cast_2713_sample_completed_ &-> ($null)
          type_cast_2713_update_start_ &-> (type_cast_2713_Update)
          type_cast_2713_update_completed_ <-& (type_cast_2713_Update)
          // RAW reenables for jx_x2
          type_cast_2536_update_start_ o<-& (type_cast_2713_sample_completed_ 0)
          assign_stmt_2572_update_start_ o<-& (type_cast_2713_sample_completed_ 0)
          // self-release: 
          type_cast_2713_sample_start_ o<-& (type_cast_2713_sample_completed_ 1)
          $null &-> (type_cast_2713_update_start_)
          type_cast_2713_update_start_ o<-& (type_cast_2713_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2283_2283_delayed_2_0
          // start: WAR dependencies for type_cast_2283_2283_delayed_2_0
          // done: WAR dependencies for type_cast_2283_2283_delayed_2_0
          // end:  			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2702_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2702_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2705_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2705_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_2709_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2709_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_2713_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2713_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for jx_x0
          // start:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 775
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
          // type_cast_2277_2277_delayed_4_0
          // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen80_ifx_xend82_taken
          // type_cast_2280_2280_delayed_2_0
          // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend82_taken
          // type_cast_2283_2283_delayed_2_0
          // Target expression
          // (as target) jx_x0
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_2588_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2588_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_2601_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2601_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2609_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2609_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_2702_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (assign_stmt_2702_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_2705_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2705_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          type_cast_2709_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2709_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_2713_update_start_ <-& (phi_stmt_2485_sample_completed_)
          phi_stmt_2485_sample_start_ o<-& (type_cast_2713_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // done: WAR dependencies for jx_x0
          // end:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 776
          $T[assign_stmt_2730_sample_start_] 
          $T[assign_stmt_2730_sample_completed_] 
          $T[assign_stmt_2730_update_start_] 
          $T[assign_stmt_2730_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend82_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2730_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2730_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2730_sample_start_ &-> (assign_stmt_2730_Sample)
          assign_stmt_2730_sample_completed_ <-& (assign_stmt_2730_Sample)
          assign_stmt_2730_sample_completed_ &-> ($null)
          assign_stmt_2730_update_start_ &-> (assign_stmt_2730_Update)
          assign_stmt_2730_update_completed_ <-& (assign_stmt_2730_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2730_sample_start_
          assign_stmt_2730_sample_start_ <-& (type_cast_2494_update_completed_)
          assign_stmt_2730_sample_start_ <-& (type_cast_2504_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend82_taken to transition assign_stmt_2730_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend82_taken
          type_cast_2494_update_start_ o<-& (assign_stmt_2730_sample_completed_ 0)
          type_cast_2504_update_start_ o<-& (assign_stmt_2730_sample_completed_ 0)
          // self-release: 
          assign_stmt_2730_sample_start_ o<-& (assign_stmt_2730_sample_completed_ 1)
          $null &-> (assign_stmt_2730_update_start_)
          assign_stmt_2730_update_start_ o<-& (assign_stmt_2730_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
          // end:  			ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // start:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 777
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
          // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen80_ifx_xend82_taken
          // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend82_taken
          // Target expression
          // (as target) flagx_x0
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // end:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			$guard (ifx_xend82_exec_guard) conv86173 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 778
          // Guard expression 
          // ifx_xend82_exec_guard
          // Source expression
          // ($cast ($uint<32>) kx_x0 )
          $T[type_cast_2753_sample_start_] 
          $T[type_cast_2753_sample_completed_] 
          $T[type_cast_2753_update_start_] 
          $T[type_cast_2753_update_completed_] 
          // Guard dependency for expression type_cast_2753 with guard R_ifx_xend82_exec_guard_2750
          // root assign_stmt_2399 of guard-expression not in visited elements.
          // root assign_stmt_2423 of guard-expression not in visited elements.
          type_cast_2753_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_2753_sample_start_
          type_cast_2753_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2753_sample_start_ <-& (assign_stmt_2650_update_completed_)
          type_cast_2753_sample_start_ <-& (type_cast_2653_update_completed_)
          // done: Forward dependencies from kx_x0 to transition type_cast_2753_sample_start_
          ;;[type_cast_2753_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2753_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2753_sample_start_ &-> (type_cast_2753_Sample)
          type_cast_2753_sample_completed_ <-& (type_cast_2753_Sample)
          type_cast_2753_sample_completed_ &-> ($null)
          type_cast_2753_update_start_ &-> (type_cast_2753_Update)
          type_cast_2753_update_completed_ <-& (type_cast_2753_Update)
          // RAW reenables for kx_x0
          type_cast_2588_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          assign_stmt_2650_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          type_cast_2653_update_start_ o<-& (type_cast_2753_sample_completed_ 0)
          // self-release: 
          type_cast_2753_sample_start_ o<-& (type_cast_2753_sample_completed_ 1)
          $null &-> (type_cast_2753_update_start_)
          type_cast_2753_update_start_ o<-& (type_cast_2753_update_completed_ 0)
          // Target expression
          // (as target) conv86173
          // start: WAR dependencies for conv86173
          // done: WAR dependencies for conv86173
          // end:  			$guard (ifx_xend82_exec_guard) conv86173 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xend82_exec_guard) conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 779
          // Guard expression 
          // ifx_xend82_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
          $T[type_cast_2759_sample_start_] 
          $T[type_cast_2759_sample_completed_] 
          $T[type_cast_2759_update_start_] 
          $T[type_cast_2759_update_completed_] 
          // Guard dependency for expression type_cast_2759 with guard R_ifx_xend82_exec_guard_2755
          // root assign_stmt_2399 of guard-expression not in visited elements.
          // root assign_stmt_2423 of guard-expression not in visited elements.
          type_cast_2759_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          // ($cast ($int<32>) jx_x0 )
          // jx_x0
          // start: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_2759_sample_start_
          type_cast_2759_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2759_sample_start_ <-& (assign_stmt_2702_update_completed_)
          type_cast_2759_sample_start_ <-& (type_cast_2705_update_completed_)
          type_cast_2759_sample_start_ <-& (type_cast_2709_update_completed_)
          type_cast_2759_sample_start_ <-& (type_cast_2713_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_2759_sample_start_
          ;;[type_cast_2759_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2759_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2759_sample_start_ &-> (type_cast_2759_Sample)
          type_cast_2759_sample_completed_ <-& (type_cast_2759_Sample)
          type_cast_2759_sample_completed_ &-> ($null)
          type_cast_2759_update_start_ &-> (type_cast_2759_Update)
          type_cast_2759_update_completed_ <-& (type_cast_2759_Update)
          // RAW reenables for ($cast ($int<32>) jx_x0 )
          type_cast_2588_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          assign_stmt_2702_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          type_cast_2705_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          type_cast_2709_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          type_cast_2713_update_start_ o<-& (type_cast_2759_sample_completed_ 0)
          // self-release: 
          type_cast_2759_sample_start_ o<-& (type_cast_2759_sample_completed_ 1)
          $null &-> (type_cast_2759_update_start_)
          type_cast_2759_update_start_ o<-& (type_cast_2759_update_completed_ 0)
          // Target expression
          // (as target) conv90
          // start: WAR dependencies for conv90
          // done: WAR dependencies for conv90
          // end:  			$guard (ifx_xend82_exec_guard) conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend82_exec_guard_2320_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 780
          $T[assign_stmt_2763_sample_start_] 
          $T[assign_stmt_2763_sample_completed_] 
          $T[assign_stmt_2763_update_start_] 
          $T[assign_stmt_2763_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2320_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2763_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2763_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2763_sample_start_ &-> (assign_stmt_2763_Sample)
          assign_stmt_2763_sample_completed_ <-& (assign_stmt_2763_Sample)
          assign_stmt_2763_sample_completed_ &-> ($null)
          assign_stmt_2763_update_start_ &-> (assign_stmt_2763_Update)
          assign_stmt_2763_update_completed_ <-& (assign_stmt_2763_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2763_sample_start_
          assign_stmt_2763_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2763_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2763_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2763_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2763_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2763_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2763_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2763_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2763_sample_completed_ 0)
          // self-release: 
          assign_stmt_2763_sample_start_ o<-& (assign_stmt_2763_sample_completed_ 1)
          $null &-> (assign_stmt_2763_update_start_)
          assign_stmt_2763_update_start_ o<-& (assign_stmt_2763_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2320_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2320_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2320_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul91
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul91
          // start:  			$guard (ifx_xend82_exec_guard_2320_delayed_1_0) $volatile mul91 := (conv90 * conv37) $buffering 1
          //  file prog.linked.opt.aa, line 781
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2320_delayed_1_0
          // Source expression
          // (conv90 * conv37)
          // conv90
          // conv37
          // Target expression
          // (as target) mul91
          // start: WAR dependencies for mul91
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul91
          // end:  			$guard (ifx_xend82_exec_guard_2320_delayed_1_0) $volatile mul91 := (conv90 * conv37) $buffering 1
          // start:  			$guard (ifx_xend82_exec_guard) conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 782
          // Guard expression 
          // ifx_xend82_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
          $T[type_cast_2774_sample_start_] 
          $T[type_cast_2774_sample_completed_] 
          $T[type_cast_2774_update_start_] 
          $T[type_cast_2774_update_completed_] 
          // Guard dependency for expression type_cast_2774 with guard R_ifx_xend82_exec_guard_2770
          // root assign_stmt_2399 of guard-expression not in visited elements.
          // root assign_stmt_2423 of guard-expression not in visited elements.
          type_cast_2774_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          // ($cast ($int<32>) ix_x1 )
          // ix_x1
          // start: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_2774_sample_start_
          type_cast_2774_sample_start_ <-& (type_cast_2588_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2601_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2609_update_completed_)
          type_cast_2774_sample_start_ <-& (assign_stmt_2674_update_completed_)
          type_cast_2774_sample_start_ <-& (type_cast_2677_update_completed_)
          type_cast_2774_sample_start_ <-& (type_cast_2681_update_completed_)
          type_cast_2774_sample_start_ <-& (type_cast_2685_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_2774_sample_start_
          ;;[type_cast_2774_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2774_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2774_sample_start_ &-> (type_cast_2774_Sample)
          type_cast_2774_sample_completed_ <-& (type_cast_2774_Sample)
          type_cast_2774_sample_completed_ &-> ($null)
          type_cast_2774_update_start_ &-> (type_cast_2774_Update)
          type_cast_2774_update_completed_ <-& (type_cast_2774_Update)
          // RAW reenables for ($cast ($int<32>) ix_x1 )
          type_cast_2588_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          assign_stmt_2674_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          type_cast_2677_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          type_cast_2681_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          type_cast_2685_update_start_ o<-& (type_cast_2774_sample_completed_ 0)
          // self-release: 
          type_cast_2774_sample_start_ o<-& (type_cast_2774_sample_completed_ 1)
          $null &-> (type_cast_2774_update_start_)
          type_cast_2774_update_start_ o<-& (type_cast_2774_update_completed_ 0)
          // Target expression
          // (as target) conv96
          // start: WAR dependencies for conv96
          // done: WAR dependencies for conv96
          // end:  			$guard (ifx_xend82_exec_guard) conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend82_exec_guard_2332_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 783
          $T[assign_stmt_2778_sample_start_] 
          $T[assign_stmt_2778_sample_completed_] 
          $T[assign_stmt_2778_update_start_] 
          $T[assign_stmt_2778_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2332_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2778_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2778_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2778_sample_start_ &-> (assign_stmt_2778_Sample)
          assign_stmt_2778_sample_completed_ <-& (assign_stmt_2778_Sample)
          assign_stmt_2778_sample_completed_ &-> ($null)
          assign_stmt_2778_update_start_ &-> (assign_stmt_2778_Update)
          assign_stmt_2778_update_completed_ <-& (assign_stmt_2778_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2778_sample_start_
          assign_stmt_2778_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2778_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2778_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2778_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2778_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2778_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2778_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2778_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2778_sample_completed_ 0)
          // self-release: 
          assign_stmt_2778_sample_start_ o<-& (assign_stmt_2778_sample_completed_ 1)
          $null &-> (assign_stmt_2778_update_start_)
          assign_stmt_2778_update_start_ o<-& (assign_stmt_2778_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2332_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2332_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2332_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul97
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul97
          // start:  			$guard (ifx_xend82_exec_guard_2332_delayed_1_0) $volatile mul97 := (conv96 * conv94) $buffering 1
          //  file prog.linked.opt.aa, line 784
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2332_delayed_1_0
          // Source expression
          // (conv96 * conv94)
          // conv96
          // conv94
          // Target expression
          // (as target) mul97
          // start: WAR dependencies for mul97
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul97
          // end:  			$guard (ifx_xend82_exec_guard_2332_delayed_1_0) $volatile mul97 := (conv96 * conv94) $buffering 1
          // start:  			ifx_xend82_exec_guard_2338_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 785
          $T[assign_stmt_2787_sample_start_] 
          $T[assign_stmt_2787_sample_completed_] 
          $T[assign_stmt_2787_update_start_] 
          $T[assign_stmt_2787_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2338_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2787_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2787_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2787_sample_start_ &-> (assign_stmt_2787_Sample)
          assign_stmt_2787_sample_completed_ <-& (assign_stmt_2787_Sample)
          assign_stmt_2787_sample_completed_ &-> ($null)
          assign_stmt_2787_update_start_ &-> (assign_stmt_2787_Update)
          assign_stmt_2787_update_completed_ <-& (assign_stmt_2787_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2787_sample_start_
          assign_stmt_2787_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2787_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2787_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2787_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2787_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2787_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2787_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2787_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2787_sample_completed_ 0)
          // self-release: 
          assign_stmt_2787_sample_start_ o<-& (assign_stmt_2787_sample_completed_ 1)
          $null &-> (assign_stmt_2787_update_start_)
          assign_stmt_2787_update_start_ o<-& (assign_stmt_2787_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2338_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2338_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2338_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add92
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add92
          // start:  			$guard (ifx_xend82_exec_guard_2338_delayed_1_0) $volatile add92 := (mul97 + conv86173) $buffering 1
          //  file prog.linked.opt.aa, line 786
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2338_delayed_1_0
          // Source expression
          // (mul97 + conv86173)
          // mul97
          // conv86173
          // Target expression
          // (as target) add92
          // start: WAR dependencies for add92
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add92
          // end:  			$guard (ifx_xend82_exec_guard_2338_delayed_1_0) $volatile add92 := (mul97 + conv86173) $buffering 1
          // start:  			ifx_xend82_exec_guard_2344_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 787
          $T[assign_stmt_2796_sample_start_] 
          $T[assign_stmt_2796_sample_completed_] 
          $T[assign_stmt_2796_update_start_] 
          $T[assign_stmt_2796_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2344_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2796_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2796_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2796_sample_start_ &-> (assign_stmt_2796_Sample)
          assign_stmt_2796_sample_completed_ <-& (assign_stmt_2796_Sample)
          assign_stmt_2796_sample_completed_ &-> ($null)
          assign_stmt_2796_update_start_ &-> (assign_stmt_2796_Update)
          assign_stmt_2796_update_completed_ <-& (assign_stmt_2796_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2796_sample_start_
          assign_stmt_2796_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2796_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2796_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2796_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2796_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2796_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2796_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2796_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2796_sample_completed_ 0)
          // self-release: 
          assign_stmt_2796_sample_start_ o<-& (assign_stmt_2796_sample_completed_ 1)
          $null &-> (assign_stmt_2796_update_start_)
          assign_stmt_2796_update_start_ o<-& (assign_stmt_2796_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2344_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2344_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2344_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add98
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add98
          // start:  			$guard (ifx_xend82_exec_guard_2344_delayed_1_0) $volatile add98 := (add92 + mul91) $buffering 1
          //  file prog.linked.opt.aa, line 788
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2344_delayed_1_0
          // Source expression
          // (add92 + mul91)
          // add92
          // mul91
          // Target expression
          // (as target) add98
          // start: WAR dependencies for add98
          // ignored out-of-scope w_root 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add98
          // end:  			$guard (ifx_xend82_exec_guard_2344_delayed_1_0) $volatile add98 := (add92 + mul91) $buffering 1
          // start:  			ifx_xend82_exec_guard_2350_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 789
          $T[assign_stmt_2805_sample_start_] 
          $T[assign_stmt_2805_sample_completed_] 
          $T[assign_stmt_2805_update_start_] 
          $T[assign_stmt_2805_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2350_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2805_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2805_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2805_sample_start_ &-> (assign_stmt_2805_Sample)
          assign_stmt_2805_sample_completed_ <-& (assign_stmt_2805_Sample)
          assign_stmt_2805_sample_completed_ &-> ($null)
          assign_stmt_2805_update_start_ &-> (assign_stmt_2805_Update)
          assign_stmt_2805_update_completed_ <-& (assign_stmt_2805_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2805_sample_start_
          assign_stmt_2805_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2805_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2805_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2805_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2805_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2805_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2805_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2805_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2805_sample_completed_ 0)
          // self-release: 
          assign_stmt_2805_sample_start_ o<-& (assign_stmt_2805_sample_completed_ 1)
          $null &-> (assign_stmt_2805_update_start_)
          assign_stmt_2805_update_start_ o<-& (assign_stmt_2805_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2350_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2350_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2350_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xend82_exec_guard_2350_delayed_1_0) conv99 := ($cast ($uint<16>) add98 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 790
          // Guard expression 
          // ifx_xend82_exec_guard_2350_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) add98 )
          $T[type_cast_2809_sample_start_] 
          $T[type_cast_2809_sample_completed_] 
          $T[type_cast_2809_update_start_] 
          $T[type_cast_2809_update_completed_] 
          // Guard dependency for expression type_cast_2809 with guard R_ifx_xend82_exec_guard_2350_delayed_1_0_2806
          type_cast_2809_sample_start_ <-& (assign_stmt_2805_update_completed_)
          // RAW reenables for ifx_xend82_exec_guard_2350_delayed_1_0
          assign_stmt_2805_update_start_ o<-& (type_cast_2809_sample_completed_ 0)
          // add98
          // start: Forward dependencies from add98 to transition type_cast_2809_sample_start_
          type_cast_2809_sample_start_ <-& (type_cast_2753_update_completed_)
          type_cast_2809_sample_start_ <-& (type_cast_2759_update_completed_)
          type_cast_2809_sample_start_ <-& (type_cast_2774_update_completed_)
          // done: Forward dependencies from add98 to transition type_cast_2809_sample_start_
          ;;[type_cast_2809_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2809_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2809_sample_start_ &-> (type_cast_2809_Sample)
          type_cast_2809_sample_completed_ <-& (type_cast_2809_Sample)
          type_cast_2809_sample_completed_ &-> ($null)
          type_cast_2809_update_start_ &-> (type_cast_2809_Update)
          type_cast_2809_update_completed_ <-& (type_cast_2809_Update)
          // RAW reenables for add98
          type_cast_2753_update_start_ o<-& (type_cast_2809_sample_completed_ 0)
          type_cast_2759_update_start_ o<-& (type_cast_2809_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (type_cast_2809_sample_completed_ 0)
          // self-release: 
          type_cast_2809_sample_start_ o<-& (type_cast_2809_sample_completed_ 1)
          $null &-> (type_cast_2809_update_start_)
          type_cast_2809_update_start_ o<-& (type_cast_2809_update_completed_ 0)
          // Target expression
          // (as target) conv99
          // start: WAR dependencies for conv99
          // done: WAR dependencies for conv99
          // end:  			$guard (ifx_xend82_exec_guard_2350_delayed_1_0) conv99 := ($cast ($uint<16>) add98 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xend82_exec_guard_2355_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 791
          $T[assign_stmt_2813_sample_start_] 
          $T[assign_stmt_2813_sample_completed_] 
          $T[assign_stmt_2813_update_start_] 
          $T[assign_stmt_2813_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2355_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2813_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2813_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2813_sample_start_ &-> (assign_stmt_2813_Sample)
          assign_stmt_2813_sample_completed_ <-& (assign_stmt_2813_Sample)
          assign_stmt_2813_sample_completed_ &-> ($null)
          assign_stmt_2813_update_start_ &-> (assign_stmt_2813_Update)
          assign_stmt_2813_update_completed_ <-& (assign_stmt_2813_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2813_sample_start_
          assign_stmt_2813_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2813_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2813_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2813_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2813_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2813_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2813_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2813_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2813_sample_completed_ 0)
          // self-release: 
          assign_stmt_2813_sample_start_ o<-& (assign_stmt_2813_sample_completed_ 1)
          $null &-> (assign_stmt_2813_update_start_)
          assign_stmt_2813_update_start_ o<-& (assign_stmt_2813_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2355_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2355_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2355_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // start:  			$guard (ifx_xend82_exec_guard_2355_delayed_1_0) $volatile sub := (conv90 - conv108) $buffering 1
          //  file prog.linked.opt.aa, line 792
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2355_delayed_1_0
          // Source expression
          // (conv90 - conv108)
          // conv90
          // conv108
          // Target expression
          // (as target) sub
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // end:  			$guard (ifx_xend82_exec_guard_2355_delayed_1_0) $volatile sub := (conv90 - conv108) $buffering 1
          // start:  			ifx_xend82_exec_guard_2361_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 793
          $T[assign_stmt_2822_sample_start_] 
          $T[assign_stmt_2822_sample_completed_] 
          $T[assign_stmt_2822_update_start_] 
          $T[assign_stmt_2822_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2361_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2822_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2822_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2822_sample_start_ &-> (assign_stmt_2822_Sample)
          assign_stmt_2822_sample_completed_ <-& (assign_stmt_2822_Sample)
          assign_stmt_2822_sample_completed_ &-> ($null)
          assign_stmt_2822_update_start_ &-> (assign_stmt_2822_Update)
          assign_stmt_2822_update_completed_ <-& (assign_stmt_2822_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2822_sample_start_
          assign_stmt_2822_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2822_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2822_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2822_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2822_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2822_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2822_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2822_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2822_sample_completed_ 0)
          // self-release: 
          assign_stmt_2822_sample_start_ o<-& (assign_stmt_2822_sample_completed_ 1)
          $null &-> (assign_stmt_2822_update_start_)
          assign_stmt_2822_update_start_ o<-& (assign_stmt_2822_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2361_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2361_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2361_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul109
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul109
          // start:  			$guard (ifx_xend82_exec_guard_2361_delayed_1_0) $volatile mul109 := (sub * conv31) $buffering 1
          //  file prog.linked.opt.aa, line 794
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2361_delayed_1_0
          // Source expression
          // (sub * conv31)
          // sub
          // conv31
          // Target expression
          // (as target) mul109
          // start: WAR dependencies for mul109
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul109
          // end:  			$guard (ifx_xend82_exec_guard_2361_delayed_1_0) $volatile mul109 := (sub * conv31) $buffering 1
          // start:  			ifx_xend82_exec_guard_2367_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 795
          $T[assign_stmt_2831_sample_start_] 
          $T[assign_stmt_2831_sample_completed_] 
          $T[assign_stmt_2831_update_start_] 
          $T[assign_stmt_2831_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2367_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2831_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2831_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2831_sample_start_ &-> (assign_stmt_2831_Sample)
          assign_stmt_2831_sample_completed_ <-& (assign_stmt_2831_Sample)
          assign_stmt_2831_sample_completed_ &-> ($null)
          assign_stmt_2831_update_start_ &-> (assign_stmt_2831_Update)
          assign_stmt_2831_update_completed_ <-& (assign_stmt_2831_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2831_sample_start_
          assign_stmt_2831_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2831_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2831_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2831_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2831_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2831_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2831_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2831_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2831_sample_completed_ 0)
          // self-release: 
          assign_stmt_2831_sample_start_ o<-& (assign_stmt_2831_sample_completed_ 1)
          $null &-> (assign_stmt_2831_update_start_)
          assign_stmt_2831_update_start_ o<-& (assign_stmt_2831_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2367_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2367_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2367_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub117
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub117
          // start:  			$guard (ifx_xend82_exec_guard_2367_delayed_1_0) $volatile sub117 := (conv96 - conv108) $buffering 1
          //  file prog.linked.opt.aa, line 796
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2367_delayed_1_0
          // Source expression
          // (conv96 - conv108)
          // conv96
          // conv108
          // Target expression
          // (as target) sub117
          // start: WAR dependencies for sub117
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub117
          // end:  			$guard (ifx_xend82_exec_guard_2367_delayed_1_0) $volatile sub117 := (conv96 - conv108) $buffering 1
          // start:  			ifx_xend82_exec_guard_2373_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 797
          $T[assign_stmt_2840_sample_start_] 
          $T[assign_stmt_2840_sample_completed_] 
          $T[assign_stmt_2840_update_start_] 
          $T[assign_stmt_2840_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2373_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2840_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2840_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2840_sample_start_ &-> (assign_stmt_2840_Sample)
          assign_stmt_2840_sample_completed_ <-& (assign_stmt_2840_Sample)
          assign_stmt_2840_sample_completed_ &-> ($null)
          assign_stmt_2840_update_start_ &-> (assign_stmt_2840_Update)
          assign_stmt_2840_update_completed_ <-& (assign_stmt_2840_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2840_sample_start_
          assign_stmt_2840_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2840_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2840_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2840_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2840_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2840_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2840_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2840_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2840_sample_completed_ 0)
          // self-release: 
          assign_stmt_2840_sample_start_ o<-& (assign_stmt_2840_sample_completed_ 1)
          $null &-> (assign_stmt_2840_update_start_)
          assign_stmt_2840_update_start_ o<-& (assign_stmt_2840_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2373_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2373_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2373_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul118
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul118
          // start:  			$guard (ifx_xend82_exec_guard_2373_delayed_1_0) $volatile mul118 := (sub117 * conv112) $buffering 1
          //  file prog.linked.opt.aa, line 798
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2373_delayed_1_0
          // Source expression
          // (sub117 * conv112)
          // sub117
          // conv112
          // Target expression
          // (as target) mul118
          // start: WAR dependencies for mul118
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul118
          // end:  			$guard (ifx_xend82_exec_guard_2373_delayed_1_0) $volatile mul118 := (sub117 * conv112) $buffering 1
          // start:  			ifx_xend82_exec_guard_2379_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 799
          $T[assign_stmt_2849_sample_start_] 
          $T[assign_stmt_2849_sample_completed_] 
          $T[assign_stmt_2849_update_start_] 
          $T[assign_stmt_2849_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2379_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2849_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2849_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2849_sample_start_ &-> (assign_stmt_2849_Sample)
          assign_stmt_2849_sample_completed_ <-& (assign_stmt_2849_Sample)
          assign_stmt_2849_sample_completed_ &-> ($null)
          assign_stmt_2849_update_start_ &-> (assign_stmt_2849_Update)
          assign_stmt_2849_update_completed_ <-& (assign_stmt_2849_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2849_sample_start_
          assign_stmt_2849_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2849_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2849_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2849_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2849_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2849_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2849_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2849_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2849_sample_completed_ 0)
          // self-release: 
          assign_stmt_2849_sample_start_ o<-& (assign_stmt_2849_sample_completed_ 1)
          $null &-> (assign_stmt_2849_update_start_)
          assign_stmt_2849_update_start_ o<-& (assign_stmt_2849_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2379_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2379_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2379_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add110
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add110
          // start:  			$guard (ifx_xend82_exec_guard_2379_delayed_1_0) $volatile add110 := (mul118 + conv86173) $buffering 1
          //  file prog.linked.opt.aa, line 800
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2379_delayed_1_0
          // Source expression
          // (mul118 + conv86173)
          // mul118
          // conv86173
          // Target expression
          // (as target) add110
          // start: WAR dependencies for add110
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add110
          // end:  			$guard (ifx_xend82_exec_guard_2379_delayed_1_0) $volatile add110 := (mul118 + conv86173) $buffering 1
          // start:  			ifx_xend82_exec_guard_2385_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 801
          $T[assign_stmt_2858_sample_start_] 
          $T[assign_stmt_2858_sample_completed_] 
          $T[assign_stmt_2858_update_start_] 
          $T[assign_stmt_2858_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2385_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2858_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2858_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2858_sample_start_ &-> (assign_stmt_2858_Sample)
          assign_stmt_2858_sample_completed_ <-& (assign_stmt_2858_Sample)
          assign_stmt_2858_sample_completed_ &-> ($null)
          assign_stmt_2858_update_start_ &-> (assign_stmt_2858_Update)
          assign_stmt_2858_update_completed_ <-& (assign_stmt_2858_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2858_sample_start_
          assign_stmt_2858_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2858_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2858_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2858_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2858_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2858_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2858_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2858_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2858_sample_completed_ 0)
          // self-release: 
          assign_stmt_2858_sample_start_ o<-& (assign_stmt_2858_sample_completed_ 1)
          $null &-> (assign_stmt_2858_update_start_)
          assign_stmt_2858_update_start_ o<-& (assign_stmt_2858_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2385_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2385_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2385_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add119
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add119
          // start:  			$guard (ifx_xend82_exec_guard_2385_delayed_1_0) $volatile add119 := (add110 + mul109) $buffering 1
          //  file prog.linked.opt.aa, line 802
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2385_delayed_1_0
          // Source expression
          // (add110 + mul109)
          // add110
          // mul109
          // Target expression
          // (as target) add119
          // start: WAR dependencies for add119
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add119
          // end:  			$guard (ifx_xend82_exec_guard_2385_delayed_1_0) $volatile add119 := (add110 + mul109) $buffering 1
          // start:  			ifx_xend82_exec_guard_2391_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 803
          $T[assign_stmt_2867_sample_start_] 
          $T[assign_stmt_2867_sample_completed_] 
          $T[assign_stmt_2867_update_start_] 
          $T[assign_stmt_2867_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2391_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2867_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2867_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2867_sample_start_ &-> (assign_stmt_2867_Sample)
          assign_stmt_2867_sample_completed_ <-& (assign_stmt_2867_Sample)
          assign_stmt_2867_sample_completed_ &-> ($null)
          assign_stmt_2867_update_start_ &-> (assign_stmt_2867_Update)
          assign_stmt_2867_update_completed_ <-& (assign_stmt_2867_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2867_sample_start_
          assign_stmt_2867_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2867_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2867_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2867_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2867_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2867_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2867_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2867_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2867_sample_completed_ 0)
          // self-release: 
          assign_stmt_2867_sample_start_ o<-& (assign_stmt_2867_sample_completed_ 1)
          $null &-> (assign_stmt_2867_update_start_)
          assign_stmt_2867_update_start_ o<-& (assign_stmt_2867_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2391_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2391_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2391_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_2396_2396_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 804
          // Source expression
          // ($bitcast ($int<32>) conv108 )
          $T[type_cast_2870_sample_start_] 
          $T[type_cast_2870_sample_completed_] 
          $T[type_cast_2870_update_start_] 
          $T[type_cast_2870_update_completed_] 
          // conv108
          // start: Forward dependencies from conv108 to transition type_cast_2870_sample_start_
          // done: Forward dependencies from conv108 to transition type_cast_2870_sample_start_
          ;;[type_cast_2870_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2870_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2870_sample_start_ &-> (type_cast_2870_Sample)
          type_cast_2870_sample_completed_ <-& (type_cast_2870_Sample)
          type_cast_2870_sample_completed_ &-> ($null)
          type_cast_2870_update_start_ &-> (type_cast_2870_Update)
          type_cast_2870_update_completed_ <-& (type_cast_2870_Update)
          // RAW reenables for conv108
          // self-release: 
          type_cast_2870_sample_start_ o<-& (type_cast_2870_sample_completed_ 1)
          $null &-> (type_cast_2870_update_start_)
          type_cast_2870_update_start_ o<-& (type_cast_2870_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2396_2396_delayed_1_0
          // start: WAR dependencies for type_cast_2396_2396_delayed_1_0
          // done: WAR dependencies for type_cast_2396_2396_delayed_1_0
          // end:  			type_cast_2396_2396_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp125
          // done: WAR dependencies for cmp125
          // start:  			$guard (ifx_xend82_exec_guard_2391_delayed_1_0) $volatile cmp125 := (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 805
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2391_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0)
          // ($bitcast ($int<32>) conv96 )
          // conv96
          // type_cast_2396_2396_delayed_1_0
          // Target expression
          // (as target) cmp125
          // start: WAR dependencies for cmp125
          // done: WAR dependencies for cmp125
          // end:  			$guard (ifx_xend82_exec_guard_2391_delayed_1_0) $volatile cmp125 := (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0) $buffering 1
          // start:  			ifx_xend82_exec_guard_2399_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 806
          $T[assign_stmt_2881_sample_start_] 
          $T[assign_stmt_2881_sample_completed_] 
          $T[assign_stmt_2881_update_start_] 
          $T[assign_stmt_2881_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2399_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2881_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2881_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2881_sample_start_ &-> (assign_stmt_2881_Sample)
          assign_stmt_2881_sample_completed_ <-& (assign_stmt_2881_Sample)
          assign_stmt_2881_sample_completed_ &-> ($null)
          assign_stmt_2881_update_start_ &-> (assign_stmt_2881_Update)
          assign_stmt_2881_update_completed_ <-& (assign_stmt_2881_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2881_sample_start_
          assign_stmt_2881_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2881_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2881_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2881_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2881_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2881_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2881_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2881_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2881_sample_completed_ 0)
          // self-release: 
          assign_stmt_2881_sample_start_ o<-& (assign_stmt_2881_sample_completed_ 1)
          $null &-> (assign_stmt_2881_update_start_)
          assign_stmt_2881_update_start_ o<-& (assign_stmt_2881_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2399_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2399_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2399_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp125x_xnot
          // done: WAR dependencies for cmp125x_xnot
          // start:  			$guard (ifx_xend82_exec_guard_2399_delayed_1_0) $volatile cmp125x_xnot := (cmp125 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 807
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2399_delayed_1_0
          // Source expression
          // (cmp125 ^ ($bitcast ($uint<1>) _b1  ))
          // cmp125
          // Target expression
          // (as target) cmp125x_xnot
          // start: WAR dependencies for cmp125x_xnot
          // done: WAR dependencies for cmp125x_xnot
          // end:  			$guard (ifx_xend82_exec_guard_2399_delayed_1_0) $volatile cmp125x_xnot := (cmp125 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend82_exec_guard_2406_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 808
          $T[assign_stmt_2891_sample_start_] 
          $T[assign_stmt_2891_sample_completed_] 
          $T[assign_stmt_2891_update_start_] 
          $T[assign_stmt_2891_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2406_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2891_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2891_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2891_sample_start_ &-> (assign_stmt_2891_Sample)
          assign_stmt_2891_sample_completed_ <-& (assign_stmt_2891_Sample)
          assign_stmt_2891_sample_completed_ &-> ($null)
          assign_stmt_2891_update_start_ &-> (assign_stmt_2891_Update)
          assign_stmt_2891_update_completed_ <-& (assign_stmt_2891_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2891_sample_start_
          assign_stmt_2891_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2891_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2891_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2891_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2891_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2891_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2891_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2891_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2891_sample_completed_ 0)
          // self-release: 
          assign_stmt_2891_sample_start_ o<-& (assign_stmt_2891_sample_completed_ 1)
          $null &-> (assign_stmt_2891_update_start_)
          assign_stmt_2891_update_start_ o<-& (assign_stmt_2891_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2406_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2406_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2406_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_2411_2411_delayed_1_0 := ($bitcast ($int<32>) add133 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 809
          // Source expression
          // ($bitcast ($int<32>) add133 )
          $T[type_cast_2894_sample_start_] 
          $T[type_cast_2894_sample_completed_] 
          $T[type_cast_2894_update_start_] 
          $T[type_cast_2894_update_completed_] 
          // add133
          // start: Forward dependencies from add133 to transition type_cast_2894_sample_start_
          // done: Forward dependencies from add133 to transition type_cast_2894_sample_start_
          ;;[type_cast_2894_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2894_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2894_sample_start_ &-> (type_cast_2894_Sample)
          type_cast_2894_sample_completed_ <-& (type_cast_2894_Sample)
          type_cast_2894_sample_completed_ &-> ($null)
          type_cast_2894_update_start_ &-> (type_cast_2894_Update)
          type_cast_2894_update_completed_ <-& (type_cast_2894_Update)
          // RAW reenables for add133
          // self-release: 
          type_cast_2894_sample_start_ o<-& (type_cast_2894_sample_completed_ 1)
          $null &-> (type_cast_2894_update_start_)
          type_cast_2894_update_start_ o<-& (type_cast_2894_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2411_2411_delayed_1_0
          // start: WAR dependencies for type_cast_2411_2411_delayed_1_0
          // done: WAR dependencies for type_cast_2411_2411_delayed_1_0
          // end:  			type_cast_2411_2411_delayed_1_0 := ($bitcast ($int<32>) add133 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp134
          // done: WAR dependencies for cmp134
          // start:  			$guard (ifx_xend82_exec_guard_2406_delayed_1_0) $volatile cmp134 := (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 810
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2406_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0)
          // ($bitcast ($int<32>) conv96 )
          // conv96
          // type_cast_2411_2411_delayed_1_0
          // Target expression
          // (as target) cmp134
          // start: WAR dependencies for cmp134
          // done: WAR dependencies for cmp134
          // end:  			$guard (ifx_xend82_exec_guard_2406_delayed_1_0) $volatile cmp134 := (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0) $buffering 1
          // start:  			ifx_xend82_exec_guard_2414_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 811
          $T[assign_stmt_2905_sample_start_] 
          $T[assign_stmt_2905_sample_completed_] 
          $T[assign_stmt_2905_update_start_] 
          $T[assign_stmt_2905_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2414_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2905_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2905_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2905_sample_start_ &-> (assign_stmt_2905_Sample)
          assign_stmt_2905_sample_completed_ <-& (assign_stmt_2905_Sample)
          assign_stmt_2905_sample_completed_ &-> ($null)
          assign_stmt_2905_update_start_ &-> (assign_stmt_2905_Update)
          assign_stmt_2905_update_completed_ <-& (assign_stmt_2905_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2905_sample_start_
          assign_stmt_2905_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2905_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2905_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2905_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2905_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2905_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2905_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2905_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2905_sample_completed_ 0)
          // self-release: 
          assign_stmt_2905_sample_start_ o<-& (assign_stmt_2905_sample_completed_ 1)
          $null &-> (assign_stmt_2905_update_start_)
          assign_stmt_2905_update_start_ o<-& (assign_stmt_2905_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2414_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2414_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2414_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // start:  			$guard (ifx_xend82_exec_guard_2414_delayed_1_0) $volatile orx_xcond := (cmp125x_xnot & cmp134) $buffering 1
          //  file prog.linked.opt.aa, line 812
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2414_delayed_1_0
          // Source expression
          // (cmp125x_xnot & cmp134)
          // cmp125x_xnot
          // cmp134
          // Target expression
          // (as target) orx_xcond
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // end:  			$guard (ifx_xend82_exec_guard_2414_delayed_1_0) $volatile orx_xcond := (cmp125x_xnot & cmp134) $buffering 1
          // start:  			ifx_xend82_exec_guard_2420_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 813
          $T[assign_stmt_2914_sample_start_] 
          $T[assign_stmt_2914_sample_completed_] 
          $T[assign_stmt_2914_update_start_] 
          $T[assign_stmt_2914_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2420_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2914_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2914_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2914_sample_start_ &-> (assign_stmt_2914_Sample)
          assign_stmt_2914_sample_completed_ <-& (assign_stmt_2914_Sample)
          assign_stmt_2914_sample_completed_ &-> ($null)
          assign_stmt_2914_update_start_ &-> (assign_stmt_2914_Update)
          assign_stmt_2914_update_completed_ <-& (assign_stmt_2914_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2914_sample_start_
          assign_stmt_2914_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2914_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2914_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2914_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2914_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2914_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2914_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2914_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2914_sample_completed_ 0)
          // self-release: 
          assign_stmt_2914_sample_start_ o<-& (assign_stmt_2914_sample_completed_ 1)
          $null &-> (assign_stmt_2914_update_start_)
          assign_stmt_2914_update_start_ o<-& (assign_stmt_2914_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2420_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2420_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2420_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // start:  			$guard (ifx_xend82_exec_guard_2420_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 814
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2420_delayed_1_0
          // Source expression
          // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond
          // Target expression
          // (as target) orx_xcondx_xnot
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // end:  			$guard (ifx_xend82_exec_guard_2420_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend82_exec_guard_2427_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 815
          $T[assign_stmt_2924_sample_start_] 
          $T[assign_stmt_2924_sample_completed_] 
          $T[assign_stmt_2924_update_start_] 
          $T[assign_stmt_2924_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2427_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2924_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2924_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2924_sample_start_ &-> (assign_stmt_2924_Sample)
          assign_stmt_2924_sample_completed_ <-& (assign_stmt_2924_Sample)
          assign_stmt_2924_sample_completed_ &-> ($null)
          assign_stmt_2924_update_start_ &-> (assign_stmt_2924_Update)
          assign_stmt_2924_update_completed_ <-& (assign_stmt_2924_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2924_sample_start_
          assign_stmt_2924_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2924_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2924_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2924_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2924_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2924_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2924_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2924_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2924_sample_completed_ 0)
          // self-release: 
          assign_stmt_2924_sample_start_ o<-& (assign_stmt_2924_sample_completed_ 1)
          $null &-> (assign_stmt_2924_update_start_)
          assign_stmt_2924_update_start_ o<-& (assign_stmt_2924_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2427_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2427_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2427_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_2432_2432_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 816
          // Source expression
          // ($bitcast ($int<32>) conv108 )
          $T[type_cast_2927_sample_start_] 
          $T[type_cast_2927_sample_completed_] 
          $T[type_cast_2927_update_start_] 
          $T[type_cast_2927_update_completed_] 
          // conv108
          // start: Forward dependencies from conv108 to transition type_cast_2927_sample_start_
          // done: Forward dependencies from conv108 to transition type_cast_2927_sample_start_
          ;;[type_cast_2927_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2927_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2927_sample_start_ &-> (type_cast_2927_Sample)
          type_cast_2927_sample_completed_ <-& (type_cast_2927_Sample)
          type_cast_2927_sample_completed_ &-> ($null)
          type_cast_2927_update_start_ &-> (type_cast_2927_Update)
          type_cast_2927_update_completed_ <-& (type_cast_2927_Update)
          // RAW reenables for conv108
          // self-release: 
          type_cast_2927_sample_start_ o<-& (type_cast_2927_sample_completed_ 1)
          $null &-> (type_cast_2927_update_start_)
          type_cast_2927_update_start_ o<-& (type_cast_2927_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2432_2432_delayed_1_0
          // start: WAR dependencies for type_cast_2432_2432_delayed_1_0
          // done: WAR dependencies for type_cast_2432_2432_delayed_1_0
          // end:  			type_cast_2432_2432_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp141
          // done: WAR dependencies for cmp141
          // start:  			$guard (ifx_xend82_exec_guard_2427_delayed_1_0) $volatile cmp141 := (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 817
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2427_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0)
          // ($bitcast ($int<32>) conv90 )
          // conv90
          // type_cast_2432_2432_delayed_1_0
          // Target expression
          // (as target) cmp141
          // start: WAR dependencies for cmp141
          // done: WAR dependencies for cmp141
          // end:  			$guard (ifx_xend82_exec_guard_2427_delayed_1_0) $volatile cmp141 := (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0) $buffering 1
          // start:  			ifx_xend82_exec_guard_2435_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 818
          $T[assign_stmt_2938_sample_start_] 
          $T[assign_stmt_2938_sample_completed_] 
          $T[assign_stmt_2938_update_start_] 
          $T[assign_stmt_2938_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2435_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2938_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2938_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2938_sample_start_ &-> (assign_stmt_2938_Sample)
          assign_stmt_2938_sample_completed_ <-& (assign_stmt_2938_Sample)
          assign_stmt_2938_sample_completed_ &-> ($null)
          assign_stmt_2938_update_start_ &-> (assign_stmt_2938_Update)
          assign_stmt_2938_update_completed_ <-& (assign_stmt_2938_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2938_sample_start_
          assign_stmt_2938_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2938_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2938_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2938_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2938_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2938_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2938_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2938_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2938_sample_completed_ 0)
          // self-release: 
          assign_stmt_2938_sample_start_ o<-& (assign_stmt_2938_sample_completed_ 1)
          $null &-> (assign_stmt_2938_update_start_)
          assign_stmt_2938_update_start_ o<-& (assign_stmt_2938_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2435_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2435_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2435_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond178
          // done: WAR dependencies for orx_xcond178
          // start:  			$guard (ifx_xend82_exec_guard_2435_delayed_1_0) $volatile orx_xcond178 := (orx_xcondx_xnot | cmp141) $buffering 1
          //  file prog.linked.opt.aa, line 819
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2435_delayed_1_0
          // Source expression
          // (orx_xcondx_xnot | cmp141)
          // orx_xcondx_xnot
          // cmp141
          // Target expression
          // (as target) orx_xcond178
          // start: WAR dependencies for orx_xcond178
          // done: WAR dependencies for orx_xcond178
          // end:  			$guard (ifx_xend82_exec_guard_2435_delayed_1_0) $volatile orx_xcond178 := (orx_xcondx_xnot | cmp141) $buffering 1
          // start:  			ifx_xend82_exec_guard_2441_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 820
          $T[assign_stmt_2947_sample_start_] 
          $T[assign_stmt_2947_sample_completed_] 
          $T[assign_stmt_2947_update_start_] 
          $T[assign_stmt_2947_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2441_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2947_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2947_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2947_sample_start_ &-> (assign_stmt_2947_Sample)
          assign_stmt_2947_sample_completed_ <-& (assign_stmt_2947_Sample)
          assign_stmt_2947_sample_completed_ &-> ($null)
          assign_stmt_2947_update_start_ &-> (assign_stmt_2947_Update)
          assign_stmt_2947_update_completed_ <-& (assign_stmt_2947_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2947_sample_start_
          assign_stmt_2947_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2947_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2947_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2947_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2947_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2947_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2947_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2947_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2947_sample_completed_ 0)
          // self-release: 
          assign_stmt_2947_sample_start_ o<-& (assign_stmt_2947_sample_completed_ 1)
          $null &-> (assign_stmt_2947_update_start_)
          assign_stmt_2947_update_start_ o<-& (assign_stmt_2947_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2441_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2441_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2441_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond178x_xnot
          // done: WAR dependencies for orx_xcond178x_xnot
          // start:  			$guard (ifx_xend82_exec_guard_2441_delayed_1_0) $volatile orx_xcond178x_xnot := (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 821
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2441_delayed_1_0
          // Source expression
          // (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond178
          // Target expression
          // (as target) orx_xcond178x_xnot
          // start: WAR dependencies for orx_xcond178x_xnot
          // done: WAR dependencies for orx_xcond178x_xnot
          // end:  			$guard (ifx_xend82_exec_guard_2441_delayed_1_0) $volatile orx_xcond178x_xnot := (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend82_exec_guard_2448_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 822
          $T[assign_stmt_2957_sample_start_] 
          $T[assign_stmt_2957_sample_completed_] 
          $T[assign_stmt_2957_update_start_] 
          $T[assign_stmt_2957_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2448_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2957_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2957_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2957_sample_start_ &-> (assign_stmt_2957_Sample)
          assign_stmt_2957_sample_completed_ <-& (assign_stmt_2957_Sample)
          assign_stmt_2957_sample_completed_ &-> ($null)
          assign_stmt_2957_update_start_ &-> (assign_stmt_2957_Update)
          assign_stmt_2957_update_completed_ <-& (assign_stmt_2957_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2957_sample_start_
          assign_stmt_2957_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2957_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2957_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2957_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2957_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2957_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2957_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2957_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2957_sample_completed_ 0)
          // self-release: 
          assign_stmt_2957_sample_start_ o<-& (assign_stmt_2957_sample_completed_ 1)
          $null &-> (assign_stmt_2957_update_start_)
          assign_stmt_2957_update_start_ o<-& (assign_stmt_2957_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2448_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2448_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2448_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_2453_2453_delayed_1_0 := ($bitcast ($int<32>) add151 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 823
          // Source expression
          // ($bitcast ($int<32>) add151 )
          $T[type_cast_2960_sample_start_] 
          $T[type_cast_2960_sample_completed_] 
          $T[type_cast_2960_update_start_] 
          $T[type_cast_2960_update_completed_] 
          // add151
          // start: Forward dependencies from add151 to transition type_cast_2960_sample_start_
          // done: Forward dependencies from add151 to transition type_cast_2960_sample_start_
          ;;[type_cast_2960_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2960_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2960_sample_start_ &-> (type_cast_2960_Sample)
          type_cast_2960_sample_completed_ <-& (type_cast_2960_Sample)
          type_cast_2960_sample_completed_ &-> ($null)
          type_cast_2960_update_start_ &-> (type_cast_2960_Update)
          type_cast_2960_update_completed_ <-& (type_cast_2960_Update)
          // RAW reenables for add151
          // self-release: 
          type_cast_2960_sample_start_ o<-& (type_cast_2960_sample_completed_ 1)
          $null &-> (type_cast_2960_update_start_)
          type_cast_2960_update_start_ o<-& (type_cast_2960_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2453_2453_delayed_1_0
          // start: WAR dependencies for type_cast_2453_2453_delayed_1_0
          // done: WAR dependencies for type_cast_2453_2453_delayed_1_0
          // end:  			type_cast_2453_2453_delayed_1_0 := ($bitcast ($int<32>) add151 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp152
          // done: WAR dependencies for cmp152
          // start:  			$guard (ifx_xend82_exec_guard_2448_delayed_1_0) $volatile cmp152 := (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 824
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2448_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0)
          // ($bitcast ($int<32>) conv90 )
          // conv90
          // type_cast_2453_2453_delayed_1_0
          // Target expression
          // (as target) cmp152
          // start: WAR dependencies for cmp152
          // done: WAR dependencies for cmp152
          // end:  			$guard (ifx_xend82_exec_guard_2448_delayed_1_0) $volatile cmp152 := (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0) $buffering 1
          // start:  			ifx_xend82_exec_guard_2456_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 825
          $T[assign_stmt_2971_sample_start_] 
          $T[assign_stmt_2971_sample_completed_] 
          $T[assign_stmt_2971_update_start_] 
          $T[assign_stmt_2971_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2456_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2971_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2971_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2971_sample_start_ &-> (assign_stmt_2971_Sample)
          assign_stmt_2971_sample_completed_ <-& (assign_stmt_2971_Sample)
          assign_stmt_2971_sample_completed_ &-> ($null)
          assign_stmt_2971_update_start_ &-> (assign_stmt_2971_Update)
          assign_stmt_2971_update_completed_ <-& (assign_stmt_2971_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2971_sample_start_
          assign_stmt_2971_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2971_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2971_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2971_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2971_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2971_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2971_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2971_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2971_sample_completed_ 0)
          // self-release: 
          assign_stmt_2971_sample_start_ o<-& (assign_stmt_2971_sample_completed_ 1)
          $null &-> (assign_stmt_2971_update_start_)
          assign_stmt_2971_update_start_ o<-& (assign_stmt_2971_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2456_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2456_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2456_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond179
          // done: WAR dependencies for orx_xcond179
          // start:  			$guard (ifx_xend82_exec_guard_2456_delayed_1_0) $volatile orx_xcond179 := (orx_xcond178x_xnot & cmp152) $buffering 1
          //  file prog.linked.opt.aa, line 826
          // volatile! 
          // Guard expression 
          // ifx_xend82_exec_guard_2456_delayed_1_0
          // Source expression
          // (orx_xcond178x_xnot & cmp152)
          // orx_xcond178x_xnot
          // cmp152
          // Target expression
          // (as target) orx_xcond179
          // start: WAR dependencies for orx_xcond179
          // done: WAR dependencies for orx_xcond179
          // end:  			$guard (ifx_xend82_exec_guard_2456_delayed_1_0) $volatile orx_xcond179 := (orx_xcond178x_xnot & cmp152) $buffering 1
          // start:  			ifx_xend82_exec_guard_2463_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 827
          $T[assign_stmt_2980_sample_start_] 
          $T[assign_stmt_2980_sample_completed_] 
          $T[assign_stmt_2980_update_start_] 
          $T[assign_stmt_2980_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2463_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2980_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2980_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2980_sample_start_ &-> (assign_stmt_2980_Sample)
          assign_stmt_2980_sample_completed_ <-& (assign_stmt_2980_Sample)
          assign_stmt_2980_sample_completed_ &-> ($null)
          assign_stmt_2980_update_start_ &-> (assign_stmt_2980_Update)
          assign_stmt_2980_update_completed_ <-& (assign_stmt_2980_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2980_sample_start_
          assign_stmt_2980_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2980_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2980_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2980_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2980_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2980_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2980_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2980_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2980_sample_completed_ 0)
          // self-release: 
          assign_stmt_2980_sample_start_ o<-& (assign_stmt_2980_sample_completed_ 1)
          $null &-> (assign_stmt_2980_update_start_)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_2980_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2463_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2463_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2463_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend82_ifx_xelse157_taken
          // done: WAR dependencies for ifx_xend82_ifx_xelse157_taken
          // start:  			$volatile ifx_xend82_ifx_xelse157_taken := (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179) $buffering 1
          //  file prog.linked.opt.aa, line 828
          // volatile! 
          // Source expression
          // (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179)
          // ifx_xend82_exec_guard_2463_delayed_1_0
          // orx_xcond179
          // Target expression
          // (as target) ifx_xend82_ifx_xelse157_taken
          // start: WAR dependencies for ifx_xend82_ifx_xelse157_taken
          // done: WAR dependencies for ifx_xend82_ifx_xelse157_taken
          // end:  			$volatile ifx_xend82_ifx_xelse157_taken := (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179) $buffering 1
          // start:  			ifx_xend82_exec_guard_2468_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 829
          $T[assign_stmt_2988_sample_start_] 
          $T[assign_stmt_2988_sample_completed_] 
          $T[assign_stmt_2988_update_start_] 
          $T[assign_stmt_2988_update_completed_] 
          // Source expression
          // ifx_xend82_exec_guard
          // Target expression
          // (as target) ifx_xend82_exec_guard_2468_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2988_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2988_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2988_sample_start_ &-> (assign_stmt_2988_Sample)
          assign_stmt_2988_sample_completed_ <-& (assign_stmt_2988_Sample)
          assign_stmt_2988_sample_completed_ &-> ($null)
          assign_stmt_2988_update_start_ &-> (assign_stmt_2988_Update)
          assign_stmt_2988_update_completed_ <-& (assign_stmt_2988_Update)
          // start: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2988_sample_start_
          assign_stmt_2988_sample_start_ <-& (type_cast_2588_update_completed_)
          assign_stmt_2988_sample_start_ <-& (assign_stmt_2601_update_completed_)
          assign_stmt_2988_sample_start_ <-& (assign_stmt_2609_update_completed_)
          assign_stmt_2988_sample_start_ <-& (assign_stmt_2640_update_completed_)
          // done: Forward dependencies from ifx_xend82_exec_guard to transition assign_stmt_2988_sample_start_
          // RAW reenables for ifx_xend82_exec_guard
          type_cast_2588_update_start_ o<-& (assign_stmt_2988_sample_completed_ 0)
          assign_stmt_2601_update_start_ o<-& (assign_stmt_2988_sample_completed_ 0)
          assign_stmt_2609_update_start_ o<-& (assign_stmt_2988_sample_completed_ 0)
          assign_stmt_2640_update_start_ o<-& (assign_stmt_2988_sample_completed_ 0)
          // self-release: 
          assign_stmt_2988_sample_start_ o<-& (assign_stmt_2988_sample_completed_ 1)
          $null &-> (assign_stmt_2988_update_start_)
          assign_stmt_2988_update_start_ o<-& (assign_stmt_2988_update_completed_ 0)
          // start: WAR dependencies for ifx_xend82_exec_guard_2468_delayed_1_0
          // done: WAR dependencies for ifx_xend82_exec_guard_2468_delayed_1_0
          // end:  			ifx_xend82_exec_guard_2468_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend82_ifx_xthen154_taken
          // done: WAR dependencies for ifx_xend82_ifx_xthen154_taken
          // start:  			$volatile ifx_xend82_ifx_xthen154_taken := (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 )) $buffering 1
          //  file prog.linked.opt.aa, line 830
          // volatile! 
          // Source expression
          // (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 ))
          // ifx_xend82_exec_guard_2468_delayed_1_0
          // ( ~ orx_xcond179 )
          // orx_xcond179
          // Target expression
          // (as target) ifx_xend82_ifx_xthen154_taken
          // start: WAR dependencies for ifx_xend82_ifx_xthen154_taken
          // done: WAR dependencies for ifx_xend82_ifx_xthen154_taken
          // end:  			$volatile ifx_xend82_ifx_xthen154_taken := (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 )) $buffering 1
          // start: WAR dependencies for ifx_xthen154_exec_guard
          // done: WAR dependencies for ifx_xthen154_exec_guard
          // start:  			$volatile ifx_xthen154_exec_guard := ifx_xend82_ifx_xthen154_taken $buffering 1
          //  file prog.linked.opt.aa, line 831
          // volatile! 
          // Source expression
          // ifx_xend82_ifx_xthen154_taken
          // Target expression
          // (as target) ifx_xthen154_exec_guard
          // start: WAR dependencies for ifx_xthen154_exec_guard
          // done: WAR dependencies for ifx_xthen154_exec_guard
          // end:  			$volatile ifx_xthen154_exec_guard := ifx_xend82_ifx_xthen154_taken $buffering 1
          // start:  			ifx_xthen154_exec_guard_2476_delayed_1_0 := ifx_xthen154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 832
          $T[assign_stmt_3000_sample_start_] 
          $T[assign_stmt_3000_sample_completed_] 
          $T[assign_stmt_3000_update_start_] 
          $T[assign_stmt_3000_update_completed_] 
          // Source expression
          // ifx_xthen154_exec_guard
          // Target expression
          // (as target) ifx_xthen154_exec_guard_2476_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3000_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3000_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3000_sample_start_ &-> (assign_stmt_3000_Sample)
          assign_stmt_3000_sample_completed_ <-& (assign_stmt_3000_Sample)
          assign_stmt_3000_sample_completed_ &-> ($null)
          assign_stmt_3000_update_start_ &-> (assign_stmt_3000_Update)
          assign_stmt_3000_update_completed_ <-& (assign_stmt_3000_Update)
          // start: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3000_sample_start_
          assign_stmt_3000_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3000_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3000_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3000_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3000_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3000_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3000_sample_start_ <-& (assign_stmt_2988_update_completed_)
          // done: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3000_sample_start_
          // RAW reenables for ifx_xthen154_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          assign_stmt_2988_update_start_ o<-& (assign_stmt_3000_sample_completed_ 0)
          // self-release: 
          assign_stmt_3000_sample_start_ o<-& (assign_stmt_3000_sample_completed_ 1)
          $null &-> (assign_stmt_3000_update_start_)
          assign_stmt_3000_update_start_ o<-& (assign_stmt_3000_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen154_exec_guard_2476_delayed_1_0
          // done: WAR dependencies for ifx_xthen154_exec_guard_2476_delayed_1_0
          // end:  			ifx_xthen154_exec_guard_2476_delayed_1_0 := ifx_xthen154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xthen154_exec_guard_2476_delayed_1_0) conv156 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 833
          // Guard expression 
          // ifx_xthen154_exec_guard_2476_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
          $T[type_cast_3005_sample_start_] 
          $T[type_cast_3005_sample_completed_] 
          $T[type_cast_3005_update_start_] 
          $T[type_cast_3005_update_completed_] 
          // Guard dependency for expression type_cast_3005 with guard R_ifx_xthen154_exec_guard_2476_delayed_1_0_3001
          type_cast_3005_sample_start_ <-& (assign_stmt_3000_update_completed_)
          // RAW reenables for ifx_xthen154_exec_guard_2476_delayed_1_0
          assign_stmt_3000_update_start_ o<-& (type_cast_3005_sample_completed_ 0)
          // ($cast ($int<32>) conv99 )
          // conv99
          // start: Forward dependencies from ($cast ($int<32>) conv99 ) to transition type_cast_3005_sample_start_
          type_cast_3005_sample_start_ <-& (type_cast_2809_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv99 ) to transition type_cast_3005_sample_start_
          ;;[type_cast_3005_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3005_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3005_sample_start_ &-> (type_cast_3005_Sample)
          type_cast_3005_sample_completed_ <-& (type_cast_3005_Sample)
          type_cast_3005_sample_completed_ &-> ($null)
          type_cast_3005_update_start_ &-> (type_cast_3005_Update)
          type_cast_3005_update_completed_ <-& (type_cast_3005_Update)
          // RAW reenables for ($cast ($int<32>) conv99 )
          type_cast_2809_update_start_ o<-& (type_cast_3005_sample_completed_ 0)
          // self-release: 
          type_cast_3005_sample_start_ o<-& (type_cast_3005_sample_completed_ 1)
          $null &-> (type_cast_3005_update_start_)
          type_cast_3005_update_start_ o<-& (type_cast_3005_update_completed_ 0)
          // Target expression
          // (as target) conv156
          // start: WAR dependencies for conv156
          // done: WAR dependencies for conv156
          // end:  			$guard (ifx_xthen154_exec_guard_2476_delayed_1_0) conv156 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen154_exec_guard_2482_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 834
          $T[assign_stmt_3009_sample_start_] 
          $T[assign_stmt_3009_sample_completed_] 
          $T[assign_stmt_3009_update_start_] 
          $T[assign_stmt_3009_update_completed_] 
          // Source expression
          // ifx_xthen154_exec_guard
          // Target expression
          // (as target) ifx_xthen154_exec_guard_2482_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3009_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3009_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3009_sample_start_ &-> (assign_stmt_3009_Sample)
          assign_stmt_3009_sample_completed_ <-& (assign_stmt_3009_Sample)
          assign_stmt_3009_sample_completed_ &-> ($null)
          assign_stmt_3009_update_start_ &-> (assign_stmt_3009_Update)
          assign_stmt_3009_update_completed_ <-& (assign_stmt_3009_Update)
          // start: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3009_sample_start_
          assign_stmt_3009_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3009_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3009_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3009_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3009_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3009_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3009_sample_start_ <-& (assign_stmt_2988_update_completed_)
          // done: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3009_sample_start_
          // RAW reenables for ifx_xthen154_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          assign_stmt_2988_update_start_ o<-& (assign_stmt_3009_sample_completed_ 0)
          // self-release: 
          assign_stmt_3009_sample_start_ o<-& (assign_stmt_3009_sample_completed_ 1)
          $null &-> (assign_stmt_3009_update_start_)
          assign_stmt_3009_update_start_ o<-& (assign_stmt_3009_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen154_exec_guard_2482_delayed_2_0
          // done: WAR dependencies for ifx_xthen154_exec_guard_2482_delayed_2_0
          // end:  			ifx_xthen154_exec_guard_2482_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // start:  			$guard (ifx_xthen154_exec_guard_2482_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 835
          // volatile! 
          // Guard expression 
          // ifx_xthen154_exec_guard_2482_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv156 )
          // conv156
          // Target expression
          // (as target) shr
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // end:  			$guard (ifx_xthen154_exec_guard_2482_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xthen154_exec_guard_2492_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 836
          $T[assign_stmt_3022_sample_start_] 
          $T[assign_stmt_3022_sample_completed_] 
          $T[assign_stmt_3022_update_start_] 
          $T[assign_stmt_3022_update_completed_] 
          // Source expression
          // ifx_xthen154_exec_guard
          // Target expression
          // (as target) ifx_xthen154_exec_guard_2492_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3022_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3022_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3022_sample_start_ &-> (assign_stmt_3022_Sample)
          assign_stmt_3022_sample_completed_ <-& (assign_stmt_3022_Sample)
          assign_stmt_3022_sample_completed_ &-> ($null)
          assign_stmt_3022_update_start_ &-> (assign_stmt_3022_Update)
          assign_stmt_3022_update_completed_ <-& (assign_stmt_3022_Update)
          // start: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3022_sample_start_
          assign_stmt_3022_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3022_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3022_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3022_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3022_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3022_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3022_sample_start_ <-& (assign_stmt_2988_update_completed_)
          // done: Forward dependencies from ifx_xthen154_exec_guard to transition assign_stmt_3022_sample_start_
          // RAW reenables for ifx_xthen154_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          assign_stmt_2988_update_start_ o<-& (assign_stmt_3022_sample_completed_ 0)
          // self-release: 
          assign_stmt_3022_sample_start_ o<-& (assign_stmt_3022_sample_completed_ 1)
          $null &-> (assign_stmt_3022_update_start_)
          assign_stmt_3022_update_start_ o<-& (assign_stmt_3022_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen154_exec_guard_2492_delayed_2_0
          // done: WAR dependencies for ifx_xthen154_exec_guard_2492_delayed_2_0
          // end:  			ifx_xthen154_exec_guard_2492_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xthen154_exec_guard_2492_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 837
          // Guard expression 
          // ifx_xthen154_exec_guard_2492_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
          $T[type_cast_3027_sample_start_] 
          $T[type_cast_3027_sample_completed_] 
          $T[type_cast_3027_update_start_] 
          $T[type_cast_3027_update_completed_] 
          // Guard dependency for expression type_cast_3027 with guard R_ifx_xthen154_exec_guard_2492_delayed_2_0_3023
          type_cast_3027_sample_start_ <-& (assign_stmt_3022_update_completed_)
          // RAW reenables for ifx_xthen154_exec_guard_2492_delayed_2_0
          assign_stmt_3022_update_start_ o<-& (type_cast_3027_sample_completed_ 0)
          // ($cast ($int<64>) shr )
          // shr
          // start: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_3027_sample_start_
          type_cast_3027_sample_start_ <-& (type_cast_3005_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_3027_sample_start_
          ;;[type_cast_3027_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3027_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3027_sample_start_ &-> (type_cast_3027_Sample)
          type_cast_3027_sample_completed_ <-& (type_cast_3027_Sample)
          type_cast_3027_sample_completed_ &-> ($null)
          type_cast_3027_update_start_ &-> (type_cast_3027_Update)
          type_cast_3027_update_completed_ <-& (type_cast_3027_Update)
          // RAW reenables for ($cast ($int<64>) shr )
          type_cast_3005_update_start_ o<-& (type_cast_3027_sample_completed_ 0)
          // self-release: 
          type_cast_3027_sample_start_ o<-& (type_cast_3027_sample_completed_ 1)
          $null &-> (type_cast_3027_update_start_)
          type_cast_3027_update_start_ o<-& (type_cast_3027_update_completed_ 0)
          // Target expression
          // (as target) idxprom
          // start: WAR dependencies for idxprom
          // done: WAR dependencies for idxprom
          // end:  			$guard (ifx_xthen154_exec_guard_2492_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 838
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
          $T[addr_of_3034_sample_start_] 
          $T[addr_of_3034_sample_completed_] 
          $T[addr_of_3034_update_start_] 
          $T[addr_of_3034_update_completed_] 
          $T[array_obj_ref_3033_root_address_calculated] 
          $T[array_obj_ref_3033_offset_calculated] 
          $T[array_obj_ref_3033_index_resized_1] 
          $T[array_obj_ref_3033_index_scaled_1] 
          $T[array_obj_ref_3033_index_computed_1] 
          // idxprom
          // start: Forward dependencies from idxprom to transition array_obj_ref_3033_index_computed_1
          array_obj_ref_3033_index_computed_1 <-& (type_cast_3027_update_completed_)
          // done: Forward dependencies from idxprom to transition array_obj_ref_3033_index_computed_1
          ;;[array_obj_ref_3033_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3033_index_computed_1 &-> (array_obj_ref_3033_index_resize_1)
          array_obj_ref_3033_index_resized_1 <-& (array_obj_ref_3033_index_resize_1)
          ;;[array_obj_ref_3033_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3033_index_resized_1 &-> (array_obj_ref_3033_index_scale_1)
          array_obj_ref_3033_index_scaled_1 <-& (array_obj_ref_3033_index_scale_1)
          $T[array_obj_ref_3033_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3033_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3033_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3033_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3033_index_scaled_1 &-> (array_obj_ref_3033_final_index_sum_regn_Sample)
          array_obj_ref_3033_final_index_sum_regn_sample_complete <-& (array_obj_ref_3033_final_index_sum_regn_Sample)
          array_obj_ref_3033_final_index_sum_regn_update_start &-> (array_obj_ref_3033_final_index_sum_regn_Update)
          array_obj_ref_3033_offset_calculated <-& (array_obj_ref_3033_final_index_sum_regn_Update)
          type_cast_3027_update_start_ o<-& (array_obj_ref_3033_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3033_final_index_sum_regn_update_start o<-& (array_obj_ref_3033_offset_calculated 0)
          ;;[array_obj_ref_3033_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3033_offset_calculated &-> (array_obj_ref_3033_base_plus_offset)
          array_obj_ref_3033_root_address_calculated <-& (array_obj_ref_3033_base_plus_offset)
          ;;[addr_of_3034_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3034_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3034_sample_start_ <-& (array_obj_ref_3033_root_address_calculated)
          addr_of_3034_sample_start_ &-> (addr_of_3034_request)
          addr_of_3034_sample_completed_ <-& (addr_of_3034_request)
          addr_of_3034_sample_completed_ &-> ($null)
          addr_of_3034_update_start_ &-> (addr_of_3034_complete)
          addr_of_3034_update_completed_ <-& (addr_of_3034_complete)
          // reenables .
          array_obj_ref_3033_final_index_sum_regn_update_start o<-& (addr_of_3034_sample_completed_ 0)
          // self-release 
          addr_of_3034_sample_start_ o<-& (addr_of_3034_sample_completed_ 1)
          addr_of_3034_update_start_ o<-& (addr_of_3034_update_completed_ 0)
          // Target expression
          // (as target) arrayidx
          // start: WAR dependencies for arrayidx
          // done: WAR dependencies for arrayidx
          // end:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xthen154_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 839
          // Guard expression 
          // ifx_xthen154_exec_guard
          // Target expression
          // ->(arrayidx)
          $T[ptr_deref_3038_sample_start_] 
          $T[ptr_deref_3038_sample_completed_] 
          $T[ptr_deref_3038_update_start_] 
          $T[ptr_deref_3038_update_completed_] 
          $T[ptr_deref_3038_base_address_calculated] 
          // arrayidx
          $T[ptr_deref_3038_word_address_calculated] 
          $T[ptr_deref_3038_root_address_calculated] 
          $T[ptr_deref_3038_base_address_resized] 
          ;;[ptr_deref_3038_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3038_base_address_calculated &-> (ptr_deref_3038_base_addr_resize)
          ptr_deref_3038_base_address_resized <-& (ptr_deref_3038_base_addr_resize)
          ;;[ptr_deref_3038_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3038_base_address_resized &-> (ptr_deref_3038_base_plus_offset)
          ptr_deref_3038_root_address_calculated <-& (ptr_deref_3038_base_plus_offset)
          ;;[ptr_deref_3038_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3038_root_address_calculated &-> (ptr_deref_3038_word_addrgen)
          ptr_deref_3038_word_address_calculated <-& (ptr_deref_3038_word_addrgen)
          ;;[ptr_deref_3038_Sample] 
          {
            ;;[ptr_deref_3038_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3038_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3038_sample_start_ <-& (ptr_deref_3038_word_address_calculated)
          // reenable-joins
          addr_of_3034_update_start_ o<-& (ptr_deref_3038_sample_completed_ 0)
          ptr_deref_3038_sample_start_ &-> (ptr_deref_3038_Sample)
          ptr_deref_3038_sample_completed_ <-& (ptr_deref_3038_Sample)
          ptr_deref_3038_sample_completed_ &-> ($null)
          ptr_deref_3038_update_start_ &-> (ptr_deref_3038_Update)
          ptr_deref_3038_update_completed_ <-& (ptr_deref_3038_Update)
          // start: Forward dependencies from arrayidx to transition ptr_deref_3038_base_address_calculated
          ptr_deref_3038_base_address_calculated <-& (addr_of_3034_update_completed_)
          // done: Forward dependencies from arrayidx to transition ptr_deref_3038_base_address_calculated
          ptr_deref_3038_sample_start_ <-& (ptr_deref_3038_base_address_calculated)
          // RAW reenables for arrayidx
          addr_of_3034_update_start_ o<-& (ptr_deref_3038_sample_completed_ 0)
          // self-release: 
          ptr_deref_3038_sample_start_ o<-& (ptr_deref_3038_sample_completed_ 1)
          $null &-> (ptr_deref_3038_update_start_)
          ptr_deref_3038_update_start_ o<-& (ptr_deref_3038_update_completed_ 0)
          // end:  			$guard (ifx_xthen154_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for ifx_xelse157_exec_guard
          // done: WAR dependencies for ifx_xelse157_exec_guard
          // start:  			$volatile ifx_xelse157_exec_guard := ifx_xend82_ifx_xelse157_taken $buffering 1
          //  file prog.linked.opt.aa, line 840
          // volatile! 
          // Source expression
          // ifx_xend82_ifx_xelse157_taken
          // Target expression
          // (as target) ifx_xelse157_exec_guard
          // start: WAR dependencies for ifx_xelse157_exec_guard
          // done: WAR dependencies for ifx_xelse157_exec_guard
          // end:  			$volatile ifx_xelse157_exec_guard := ifx_xend82_ifx_xelse157_taken $buffering 1
          // start: WAR dependencies for sext176
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext176
          // start:  			$guard (ifx_xelse157_exec_guard) $volatile sext176 := (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          //  file prog.linked.opt.aa, line 841
          // volatile! 
          // Guard expression 
          // ifx_xelse157_exec_guard
          // Source expression
          // (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
          // add119
          // Target expression
          // (as target) sext176
          // start: WAR dependencies for sext176
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext176
          // end:  			$guard (ifx_xelse157_exec_guard) $volatile sext176 := (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          // start: WAR dependencies for shr160
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr160
          // start:  			$guard (ifx_xelse157_exec_guard) $volatile shr160 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 842
          // volatile! 
          // Guard expression 
          // ifx_xelse157_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
          // (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
          // ($bitcast ($int<32>) sext176 )
          // sext176
          // Target expression
          // (as target) shr160
          // start: WAR dependencies for shr160
          // ignored out-of-scope w_root 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr160
          // end:  			$guard (ifx_xelse157_exec_guard) $volatile shr160 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          // start:  			$guard (ifx_xelse157_exec_guard) idxprom161 := ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 843
          // Guard expression 
          // ifx_xelse157_exec_guard
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) )
          $T[type_cast_3066_sample_start_] 
          $T[type_cast_3066_sample_completed_] 
          $T[type_cast_3066_update_start_] 
          $T[type_cast_3066_update_completed_] 
          // Guard dependency for expression type_cast_3066 with guard R_ifx_xelse157_exec_guard_3062
          type_cast_3066_sample_start_ <-& (type_cast_2759_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2774_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2870_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2894_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2927_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2960_update_completed_)
          type_cast_3066_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          // ($cast ($int<64>) shr160 )
          // shr160
          // start: Forward dependencies from ($cast ($int<64>) shr160 ) to transition type_cast_3066_sample_start_
          type_cast_3066_sample_start_ <-& (type_cast_2753_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2759_update_completed_)
          type_cast_3066_sample_start_ <-& (type_cast_2774_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr160 ) to transition type_cast_3066_sample_start_
          ;;[type_cast_3066_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3066_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3066_sample_start_ &-> (type_cast_3066_Sample)
          type_cast_3066_sample_completed_ <-& (type_cast_3066_Sample)
          type_cast_3066_sample_completed_ &-> ($null)
          type_cast_3066_update_start_ &-> (type_cast_3066_Update)
          type_cast_3066_update_completed_ <-& (type_cast_3066_Update)
          // RAW reenables for ($cast ($int<64>) shr160 )
          type_cast_2753_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2759_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (type_cast_3066_sample_completed_ 0)
          // self-release: 
          type_cast_3066_sample_start_ o<-& (type_cast_3066_sample_completed_ 1)
          $null &-> (type_cast_3066_update_start_)
          type_cast_3066_update_start_ o<-& (type_cast_3066_update_completed_ 0)
          // Target expression
          // (as target) idxprom161
          // start: WAR dependencies for idxprom161
          // done: WAR dependencies for idxprom161
          // end:  			$guard (ifx_xelse157_exec_guard) idxprom161 := ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx162 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 844
          // Source expression
          // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161])
          $T[addr_of_3073_sample_start_] 
          $T[addr_of_3073_sample_completed_] 
          $T[addr_of_3073_update_start_] 
          $T[addr_of_3073_update_completed_] 
          $T[array_obj_ref_3072_root_address_calculated] 
          $T[array_obj_ref_3072_offset_calculated] 
          $T[array_obj_ref_3072_index_resized_1] 
          $T[array_obj_ref_3072_index_scaled_1] 
          $T[array_obj_ref_3072_index_computed_1] 
          // idxprom161
          // start: Forward dependencies from idxprom161 to transition array_obj_ref_3072_index_computed_1
          array_obj_ref_3072_index_computed_1 <-& (type_cast_3066_update_completed_)
          // done: Forward dependencies from idxprom161 to transition array_obj_ref_3072_index_computed_1
          ;;[array_obj_ref_3072_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3072_index_computed_1 &-> (array_obj_ref_3072_index_resize_1)
          array_obj_ref_3072_index_resized_1 <-& (array_obj_ref_3072_index_resize_1)
          ;;[array_obj_ref_3072_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3072_index_resized_1 &-> (array_obj_ref_3072_index_scale_1)
          array_obj_ref_3072_index_scaled_1 <-& (array_obj_ref_3072_index_scale_1)
          $T[array_obj_ref_3072_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3072_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3072_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3072_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3072_index_scaled_1 &-> (array_obj_ref_3072_final_index_sum_regn_Sample)
          array_obj_ref_3072_final_index_sum_regn_sample_complete <-& (array_obj_ref_3072_final_index_sum_regn_Sample)
          array_obj_ref_3072_final_index_sum_regn_update_start &-> (array_obj_ref_3072_final_index_sum_regn_Update)
          array_obj_ref_3072_offset_calculated <-& (array_obj_ref_3072_final_index_sum_regn_Update)
          type_cast_3066_update_start_ o<-& (array_obj_ref_3072_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3072_final_index_sum_regn_update_start o<-& (array_obj_ref_3072_offset_calculated 0)
          ;;[array_obj_ref_3072_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3072_offset_calculated &-> (array_obj_ref_3072_base_plus_offset)
          array_obj_ref_3072_root_address_calculated <-& (array_obj_ref_3072_base_plus_offset)
          ;;[addr_of_3073_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3073_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3073_sample_start_ <-& (array_obj_ref_3072_root_address_calculated)
          addr_of_3073_sample_start_ &-> (addr_of_3073_request)
          addr_of_3073_sample_completed_ <-& (addr_of_3073_request)
          addr_of_3073_sample_completed_ &-> ($null)
          addr_of_3073_update_start_ &-> (addr_of_3073_complete)
          addr_of_3073_update_completed_ <-& (addr_of_3073_complete)
          // reenables .
          array_obj_ref_3072_final_index_sum_regn_update_start o<-& (addr_of_3073_sample_completed_ 0)
          // self-release 
          addr_of_3073_sample_start_ o<-& (addr_of_3073_sample_completed_ 1)
          addr_of_3073_update_start_ o<-& (addr_of_3073_update_completed_ 0)
          // Target expression
          // (as target) arrayidx162
          // start: WAR dependencies for arrayidx162
          // done: WAR dependencies for arrayidx162
          // end:  			arrayidx162 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse157_exec_guard_2544_delayed_8_0 := ifx_xelse157_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          //  file prog.linked.opt.aa, line 845
          $T[assign_stmt_3077_sample_start_] 
          $T[assign_stmt_3077_sample_completed_] 
          $T[assign_stmt_3077_update_start_] 
          $T[assign_stmt_3077_update_completed_] 
          // Source expression
          // ifx_xelse157_exec_guard
          // Target expression
          // (as target) ifx_xelse157_exec_guard_2544_delayed_8_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3077_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3077_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3077_sample_start_ &-> (assign_stmt_3077_Sample)
          assign_stmt_3077_sample_completed_ <-& (assign_stmt_3077_Sample)
          assign_stmt_3077_sample_completed_ &-> ($null)
          assign_stmt_3077_update_start_ &-> (assign_stmt_3077_Update)
          assign_stmt_3077_update_completed_ <-& (assign_stmt_3077_Update)
          // start: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3077_sample_start_
          assign_stmt_3077_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3077_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3077_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3077_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3077_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3077_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3077_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // done: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3077_sample_start_
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_3077_sample_completed_ 0)
          // self-release: 
          assign_stmt_3077_sample_start_ o<-& (assign_stmt_3077_sample_completed_ 1)
          $null &-> (assign_stmt_3077_update_start_)
          assign_stmt_3077_update_start_ o<-& (assign_stmt_3077_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse157_exec_guard_2544_delayed_8_0
          // done: WAR dependencies for ifx_xelse157_exec_guard_2544_delayed_8_0
          // end:  			ifx_xelse157_exec_guard_2544_delayed_8_0 := ifx_xelse157_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          // start:  			$guard (ifx_xelse157_exec_guard_2544_delayed_8_0) tmp163 := ->(arrayidx162) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 846
          // Guard expression 
          // ifx_xelse157_exec_guard_2544_delayed_8_0
          // Source expression
          // ->(arrayidx162)
          $T[ptr_deref_3081_sample_start_] 
          $T[ptr_deref_3081_sample_completed_] 
          $T[ptr_deref_3081_update_start_] 
          $T[ptr_deref_3081_update_completed_] 
          // Guard dependency for expression ptr_deref_3081 with guard R_ifx_xelse157_exec_guard_2544_delayed_8_0_3078
          ptr_deref_3081_sample_start_ <-& (assign_stmt_3077_update_completed_)
          // RAW reenables for ifx_xelse157_exec_guard_2544_delayed_8_0
          assign_stmt_3077_update_start_ o<-& (ptr_deref_3081_sample_completed_ 0)
          $T[ptr_deref_3081_base_address_calculated] 
          // arrayidx162
          $T[ptr_deref_3081_word_address_calculated] 
          $T[ptr_deref_3081_root_address_calculated] 
          $T[ptr_deref_3081_base_address_resized] 
          ;;[ptr_deref_3081_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3081_base_address_calculated &-> (ptr_deref_3081_base_addr_resize)
          ptr_deref_3081_base_address_resized <-& (ptr_deref_3081_base_addr_resize)
          ;;[ptr_deref_3081_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3081_base_address_resized &-> (ptr_deref_3081_base_plus_offset)
          ptr_deref_3081_root_address_calculated <-& (ptr_deref_3081_base_plus_offset)
          ;;[ptr_deref_3081_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3081_root_address_calculated &-> (ptr_deref_3081_word_addrgen)
          ptr_deref_3081_word_address_calculated <-& (ptr_deref_3081_word_addrgen)
          ;;[ptr_deref_3081_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3081_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_3081_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_3081_sample_start_ <-& (ptr_deref_3081_word_address_calculated)
          // reenable-joins
          addr_of_3073_update_start_ o<-& (ptr_deref_3081_sample_completed_ 0)
          ptr_deref_3081_sample_start_ &-> (ptr_deref_3081_Sample)
          ptr_deref_3081_sample_completed_ <-& (ptr_deref_3081_Sample)
          ptr_deref_3081_sample_completed_ &-> ($null)
          ptr_deref_3081_update_start_ &-> (ptr_deref_3081_Update)
          ptr_deref_3081_update_completed_ <-& (ptr_deref_3081_Update)
          // start: Forward dependencies from arrayidx162 to transition ptr_deref_3081_base_address_calculated
          ptr_deref_3081_base_address_calculated <-& (addr_of_3073_update_completed_)
          // done: Forward dependencies from arrayidx162 to transition ptr_deref_3081_base_address_calculated
          ptr_deref_3081_sample_start_ <-& (ptr_deref_3081_base_address_calculated)
          // RAW reenables for arrayidx162
          addr_of_3073_update_start_ o<-& (ptr_deref_3081_sample_completed_ 0)
          // self-release: 
          ptr_deref_3081_sample_start_ o<-& (ptr_deref_3081_sample_completed_ 1)
          $null &-> (ptr_deref_3081_update_start_)
          ptr_deref_3081_update_start_ o<-& (ptr_deref_3081_update_completed_ 0)
          // Target expression
          // (as target) tmp163
          // start: WAR dependencies for tmp163
          // done: WAR dependencies for tmp163
          // end:  			$guard (ifx_xelse157_exec_guard_2544_delayed_8_0) tmp163 := ->(arrayidx162) $buffering 1// bits of buffering = 64. 
          // start:  			ifx_xelse157_exec_guard_2549_delayed_1_0 := ifx_xelse157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 847
          $T[assign_stmt_3085_sample_start_] 
          $T[assign_stmt_3085_sample_completed_] 
          $T[assign_stmt_3085_update_start_] 
          $T[assign_stmt_3085_update_completed_] 
          // Source expression
          // ifx_xelse157_exec_guard
          // Target expression
          // (as target) ifx_xelse157_exec_guard_2549_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3085_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3085_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3085_sample_start_ &-> (assign_stmt_3085_Sample)
          assign_stmt_3085_sample_completed_ <-& (assign_stmt_3085_Sample)
          assign_stmt_3085_sample_completed_ &-> ($null)
          assign_stmt_3085_update_start_ &-> (assign_stmt_3085_Update)
          assign_stmt_3085_update_completed_ <-& (assign_stmt_3085_Update)
          // start: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3085_sample_start_
          assign_stmt_3085_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3085_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3085_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3085_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3085_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3085_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3085_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // done: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3085_sample_start_
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_3085_sample_completed_ 0)
          // self-release: 
          assign_stmt_3085_sample_start_ o<-& (assign_stmt_3085_sample_completed_ 1)
          $null &-> (assign_stmt_3085_update_start_)
          assign_stmt_3085_update_start_ o<-& (assign_stmt_3085_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse157_exec_guard_2549_delayed_1_0
          // done: WAR dependencies for ifx_xelse157_exec_guard_2549_delayed_1_0
          // end:  			ifx_xelse157_exec_guard_2549_delayed_1_0 := ifx_xelse157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse157_exec_guard_2549_delayed_1_0) conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 848
          // Guard expression 
          // ifx_xelse157_exec_guard_2549_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
          $T[type_cast_3090_sample_start_] 
          $T[type_cast_3090_sample_completed_] 
          $T[type_cast_3090_update_start_] 
          $T[type_cast_3090_update_completed_] 
          // Guard dependency for expression type_cast_3090 with guard R_ifx_xelse157_exec_guard_2549_delayed_1_0_3086
          type_cast_3090_sample_start_ <-& (assign_stmt_3085_update_completed_)
          // RAW reenables for ifx_xelse157_exec_guard_2549_delayed_1_0
          assign_stmt_3085_update_start_ o<-& (type_cast_3090_sample_completed_ 0)
          // ($cast ($int<32>) conv99 )
          // conv99
          // start: Forward dependencies from ($cast ($int<32>) conv99 ) to transition type_cast_3090_sample_start_
          type_cast_3090_sample_start_ <-& (type_cast_2809_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv99 ) to transition type_cast_3090_sample_start_
          ;;[type_cast_3090_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3090_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3090_sample_start_ &-> (type_cast_3090_Sample)
          type_cast_3090_sample_completed_ <-& (type_cast_3090_Sample)
          type_cast_3090_sample_completed_ &-> ($null)
          type_cast_3090_update_start_ &-> (type_cast_3090_Update)
          type_cast_3090_update_completed_ <-& (type_cast_3090_Update)
          // RAW reenables for ($cast ($int<32>) conv99 )
          type_cast_2809_update_start_ o<-& (type_cast_3090_sample_completed_ 0)
          // self-release: 
          type_cast_3090_sample_start_ o<-& (type_cast_3090_sample_completed_ 1)
          $null &-> (type_cast_3090_update_start_)
          type_cast_3090_update_start_ o<-& (type_cast_3090_update_completed_ 0)
          // Target expression
          // (as target) conv165
          // start: WAR dependencies for conv165
          // done: WAR dependencies for conv165
          // end:  			$guard (ifx_xelse157_exec_guard_2549_delayed_1_0) conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse157_exec_guard_2555_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 849
          $T[assign_stmt_3094_sample_start_] 
          $T[assign_stmt_3094_sample_completed_] 
          $T[assign_stmt_3094_update_start_] 
          $T[assign_stmt_3094_update_completed_] 
          // Source expression
          // ifx_xelse157_exec_guard
          // Target expression
          // (as target) ifx_xelse157_exec_guard_2555_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3094_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3094_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3094_sample_start_ &-> (assign_stmt_3094_Sample)
          assign_stmt_3094_sample_completed_ <-& (assign_stmt_3094_Sample)
          assign_stmt_3094_sample_completed_ &-> ($null)
          assign_stmt_3094_update_start_ &-> (assign_stmt_3094_Update)
          assign_stmt_3094_update_completed_ <-& (assign_stmt_3094_Update)
          // start: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3094_sample_start_
          assign_stmt_3094_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3094_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3094_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3094_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3094_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3094_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3094_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // done: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3094_sample_start_
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_3094_sample_completed_ 0)
          // self-release: 
          assign_stmt_3094_sample_start_ o<-& (assign_stmt_3094_sample_completed_ 1)
          $null &-> (assign_stmt_3094_update_start_)
          assign_stmt_3094_update_start_ o<-& (assign_stmt_3094_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse157_exec_guard_2555_delayed_2_0
          // done: WAR dependencies for ifx_xelse157_exec_guard_2555_delayed_2_0
          // end:  			ifx_xelse157_exec_guard_2555_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr166
          // done: WAR dependencies for shr166
          // start:  			$guard (ifx_xelse157_exec_guard_2555_delayed_2_0) $volatile shr166 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 850
          // volatile! 
          // Guard expression 
          // ifx_xelse157_exec_guard_2555_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv165 )
          // conv165
          // Target expression
          // (as target) shr166
          // start: WAR dependencies for shr166
          // done: WAR dependencies for shr166
          // end:  			$guard (ifx_xelse157_exec_guard_2555_delayed_2_0) $volatile shr166 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xelse157_exec_guard_2565_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 851
          $T[assign_stmt_3107_sample_start_] 
          $T[assign_stmt_3107_sample_completed_] 
          $T[assign_stmt_3107_update_start_] 
          $T[assign_stmt_3107_update_completed_] 
          // Source expression
          // ifx_xelse157_exec_guard
          // Target expression
          // (as target) ifx_xelse157_exec_guard_2565_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3107_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3107_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3107_sample_start_ &-> (assign_stmt_3107_Sample)
          assign_stmt_3107_sample_completed_ <-& (assign_stmt_3107_Sample)
          assign_stmt_3107_sample_completed_ &-> ($null)
          assign_stmt_3107_update_start_ &-> (assign_stmt_3107_Update)
          assign_stmt_3107_update_completed_ <-& (assign_stmt_3107_Update)
          // start: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3107_sample_start_
          assign_stmt_3107_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3107_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3107_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3107_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3107_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3107_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3107_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // done: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3107_sample_start_
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_3107_sample_completed_ 0)
          // self-release: 
          assign_stmt_3107_sample_start_ o<-& (assign_stmt_3107_sample_completed_ 1)
          $null &-> (assign_stmt_3107_update_start_)
          assign_stmt_3107_update_start_ o<-& (assign_stmt_3107_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse157_exec_guard_2565_delayed_2_0
          // done: WAR dependencies for ifx_xelse157_exec_guard_2565_delayed_2_0
          // end:  			ifx_xelse157_exec_guard_2565_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse157_exec_guard_2565_delayed_2_0) idxprom167 := ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 852
          // Guard expression 
          // ifx_xelse157_exec_guard_2565_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) )
          $T[type_cast_3112_sample_start_] 
          $T[type_cast_3112_sample_completed_] 
          $T[type_cast_3112_update_start_] 
          $T[type_cast_3112_update_completed_] 
          // Guard dependency for expression type_cast_3112 with guard R_ifx_xelse157_exec_guard_2565_delayed_2_0_3108
          type_cast_3112_sample_start_ <-& (assign_stmt_3107_update_completed_)
          // RAW reenables for ifx_xelse157_exec_guard_2565_delayed_2_0
          assign_stmt_3107_update_start_ o<-& (type_cast_3112_sample_completed_ 0)
          // ($cast ($int<64>) shr166 )
          // shr166
          // start: Forward dependencies from ($cast ($int<64>) shr166 ) to transition type_cast_3112_sample_start_
          type_cast_3112_sample_start_ <-& (type_cast_3090_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr166 ) to transition type_cast_3112_sample_start_
          ;;[type_cast_3112_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3112_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3112_sample_start_ &-> (type_cast_3112_Sample)
          type_cast_3112_sample_completed_ <-& (type_cast_3112_Sample)
          type_cast_3112_sample_completed_ &-> ($null)
          type_cast_3112_update_start_ &-> (type_cast_3112_Update)
          type_cast_3112_update_completed_ <-& (type_cast_3112_Update)
          // RAW reenables for ($cast ($int<64>) shr166 )
          type_cast_3090_update_start_ o<-& (type_cast_3112_sample_completed_ 0)
          // self-release: 
          type_cast_3112_sample_start_ o<-& (type_cast_3112_sample_completed_ 1)
          $null &-> (type_cast_3112_update_start_)
          type_cast_3112_update_start_ o<-& (type_cast_3112_update_completed_ 0)
          // Target expression
          // (as target) idxprom167
          // start: WAR dependencies for idxprom167
          // done: WAR dependencies for idxprom167
          // end:  			$guard (ifx_xelse157_exec_guard_2565_delayed_2_0) idxprom167 := ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx168 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 853
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167])
          $T[addr_of_3119_sample_start_] 
          $T[addr_of_3119_sample_completed_] 
          $T[addr_of_3119_update_start_] 
          $T[addr_of_3119_update_completed_] 
          $T[array_obj_ref_3118_root_address_calculated] 
          $T[array_obj_ref_3118_offset_calculated] 
          $T[array_obj_ref_3118_index_resized_1] 
          $T[array_obj_ref_3118_index_scaled_1] 
          $T[array_obj_ref_3118_index_computed_1] 
          // idxprom167
          // start: Forward dependencies from idxprom167 to transition array_obj_ref_3118_index_computed_1
          array_obj_ref_3118_index_computed_1 <-& (type_cast_3112_update_completed_)
          // done: Forward dependencies from idxprom167 to transition array_obj_ref_3118_index_computed_1
          ;;[array_obj_ref_3118_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3118_index_computed_1 &-> (array_obj_ref_3118_index_resize_1)
          array_obj_ref_3118_index_resized_1 <-& (array_obj_ref_3118_index_resize_1)
          ;;[array_obj_ref_3118_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3118_index_resized_1 &-> (array_obj_ref_3118_index_scale_1)
          array_obj_ref_3118_index_scaled_1 <-& (array_obj_ref_3118_index_scale_1)
          $T[array_obj_ref_3118_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3118_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3118_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3118_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3118_index_scaled_1 &-> (array_obj_ref_3118_final_index_sum_regn_Sample)
          array_obj_ref_3118_final_index_sum_regn_sample_complete <-& (array_obj_ref_3118_final_index_sum_regn_Sample)
          array_obj_ref_3118_final_index_sum_regn_update_start &-> (array_obj_ref_3118_final_index_sum_regn_Update)
          array_obj_ref_3118_offset_calculated <-& (array_obj_ref_3118_final_index_sum_regn_Update)
          type_cast_3112_update_start_ o<-& (array_obj_ref_3118_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3118_final_index_sum_regn_update_start o<-& (array_obj_ref_3118_offset_calculated 0)
          ;;[array_obj_ref_3118_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3118_offset_calculated &-> (array_obj_ref_3118_base_plus_offset)
          array_obj_ref_3118_root_address_calculated <-& (array_obj_ref_3118_base_plus_offset)
          ;;[addr_of_3119_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3119_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3119_sample_start_ <-& (array_obj_ref_3118_root_address_calculated)
          addr_of_3119_sample_start_ &-> (addr_of_3119_request)
          addr_of_3119_sample_completed_ <-& (addr_of_3119_request)
          addr_of_3119_sample_completed_ &-> ($null)
          addr_of_3119_update_start_ &-> (addr_of_3119_complete)
          addr_of_3119_update_completed_ <-& (addr_of_3119_complete)
          // reenables .
          array_obj_ref_3118_final_index_sum_regn_update_start o<-& (addr_of_3119_sample_completed_ 0)
          // self-release 
          addr_of_3119_sample_start_ o<-& (addr_of_3119_sample_completed_ 1)
          addr_of_3119_update_start_ o<-& (addr_of_3119_update_completed_ 0)
          // Target expression
          // (as target) arrayidx168
          // start: WAR dependencies for arrayidx168
          // done: WAR dependencies for arrayidx168
          // end:  			arrayidx168 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse157_exec_guard_2578_delayed_14_0 := ifx_xelse157_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          //  file prog.linked.opt.aa, line 854
          $T[assign_stmt_3123_sample_start_] 
          $T[assign_stmt_3123_sample_completed_] 
          $T[assign_stmt_3123_update_start_] 
          $T[assign_stmt_3123_update_completed_] 
          // Source expression
          // ifx_xelse157_exec_guard
          // Target expression
          // (as target) ifx_xelse157_exec_guard_2578_delayed_14_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3123_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3123_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3123_sample_start_ &-> (assign_stmt_3123_Sample)
          assign_stmt_3123_sample_completed_ <-& (assign_stmt_3123_Sample)
          assign_stmt_3123_sample_completed_ &-> ($null)
          assign_stmt_3123_update_start_ &-> (assign_stmt_3123_Update)
          assign_stmt_3123_update_completed_ <-& (assign_stmt_3123_Update)
          // start: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3123_sample_start_
          assign_stmt_3123_sample_start_ <-& (type_cast_2759_update_completed_)
          assign_stmt_3123_sample_start_ <-& (type_cast_2774_update_completed_)
          assign_stmt_3123_sample_start_ <-& (type_cast_2870_update_completed_)
          assign_stmt_3123_sample_start_ <-& (type_cast_2894_update_completed_)
          assign_stmt_3123_sample_start_ <-& (type_cast_2927_update_completed_)
          assign_stmt_3123_sample_start_ <-& (type_cast_2960_update_completed_)
          assign_stmt_3123_sample_start_ <-& (assign_stmt_2980_update_completed_)
          // done: Forward dependencies from ifx_xelse157_exec_guard to transition assign_stmt_3123_sample_start_
          // RAW reenables for ifx_xelse157_exec_guard
          type_cast_2759_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          type_cast_2774_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          type_cast_2870_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          type_cast_2894_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          type_cast_2927_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          type_cast_2960_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          assign_stmt_2980_update_start_ o<-& (assign_stmt_3123_sample_completed_ 0)
          // self-release: 
          assign_stmt_3123_sample_start_ o<-& (assign_stmt_3123_sample_completed_ 1)
          $null &-> (assign_stmt_3123_update_start_)
          assign_stmt_3123_update_start_ o<-& (assign_stmt_3123_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse157_exec_guard_2578_delayed_14_0
          // done: WAR dependencies for ifx_xelse157_exec_guard_2578_delayed_14_0
          // end:  			ifx_xelse157_exec_guard_2578_delayed_14_0 := ifx_xelse157_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          // start:  			arrayidx168_2579_delayed_4_0 := arrayidx168 $buffering 4 $cut_through // bits of buffering = 128. 
          //  file prog.linked.opt.aa, line 855
          $T[assign_stmt_3126_sample_start_] 
          $T[assign_stmt_3126_sample_completed_] 
          $T[assign_stmt_3126_update_start_] 
          $T[assign_stmt_3126_update_completed_] 
          // Source expression
          // arrayidx168
          // Target expression
          // (as target) arrayidx168_2579_delayed_4_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3126_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3126_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3126_sample_start_ &-> (assign_stmt_3126_Sample)
          assign_stmt_3126_sample_completed_ <-& (assign_stmt_3126_Sample)
          assign_stmt_3126_sample_completed_ &-> ($null)
          assign_stmt_3126_update_start_ &-> (assign_stmt_3126_Update)
          assign_stmt_3126_update_completed_ <-& (assign_stmt_3126_Update)
          // start: Forward dependencies from arrayidx168 to transition assign_stmt_3126_sample_start_
          assign_stmt_3126_sample_start_ <-& (addr_of_3119_update_completed_)
          // done: Forward dependencies from arrayidx168 to transition assign_stmt_3126_sample_start_
          // RAW reenables for arrayidx168
          addr_of_3119_update_start_ o<-& (assign_stmt_3126_sample_completed_ 0)
          // self-release: 
          assign_stmt_3126_sample_start_ o<-& (assign_stmt_3126_sample_completed_ 1)
          $null &-> (assign_stmt_3126_update_start_)
          assign_stmt_3126_update_start_ o<-& (assign_stmt_3126_update_completed_ 0)
          // start: WAR dependencies for arrayidx168_2579_delayed_4_0
          // done: WAR dependencies for arrayidx168_2579_delayed_4_0
          // end:  			arrayidx168_2579_delayed_4_0 := arrayidx168 $buffering 4 $cut_through // bits of buffering = 128. 
          // start:  			$guard (ifx_xelse157_exec_guard_2578_delayed_14_0) ->(arrayidx168_2579_delayed_4_0) := tmp163 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 856
          // Guard expression 
          // ifx_xelse157_exec_guard_2578_delayed_14_0
          // Source expression
          // tmp163
          // Target expression
          // ->(arrayidx168_2579_delayed_4_0)
          $T[ptr_deref_3129_sample_start_] 
          $T[ptr_deref_3129_sample_completed_] 
          $T[ptr_deref_3129_update_start_] 
          $T[ptr_deref_3129_update_completed_] 
          $T[ptr_deref_3129_base_address_calculated] 
          // arrayidx168_2579_delayed_4_0
          $T[ptr_deref_3129_word_address_calculated] 
          $T[ptr_deref_3129_root_address_calculated] 
          $T[ptr_deref_3129_base_address_resized] 
          ;;[ptr_deref_3129_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3129_base_address_calculated &-> (ptr_deref_3129_base_addr_resize)
          ptr_deref_3129_base_address_resized <-& (ptr_deref_3129_base_addr_resize)
          ;;[ptr_deref_3129_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3129_base_address_resized &-> (ptr_deref_3129_base_plus_offset)
          ptr_deref_3129_root_address_calculated <-& (ptr_deref_3129_base_plus_offset)
          ;;[ptr_deref_3129_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3129_root_address_calculated &-> (ptr_deref_3129_word_addrgen)
          ptr_deref_3129_word_address_calculated <-& (ptr_deref_3129_word_addrgen)
          ;;[ptr_deref_3129_Sample] 
          {
            ;;[ptr_deref_3129_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3129_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3129_sample_start_ <-& (ptr_deref_3129_word_address_calculated)
          // reenable-joins
          assign_stmt_3126_update_start_ o<-& (ptr_deref_3129_sample_completed_ 0)
          ptr_deref_3129_sample_start_ &-> (ptr_deref_3129_Sample)
          ptr_deref_3129_sample_completed_ <-& (ptr_deref_3129_Sample)
          ptr_deref_3129_sample_completed_ &-> ($null)
          ptr_deref_3129_update_start_ &-> (ptr_deref_3129_Update)
          ptr_deref_3129_update_completed_ <-& (ptr_deref_3129_Update)
          // start: Forward dependencies from arrayidx168_2579_delayed_4_0 to transition ptr_deref_3129_base_address_calculated
          ptr_deref_3129_base_address_calculated <-& (assign_stmt_3126_update_completed_)
          // done: Forward dependencies from arrayidx168_2579_delayed_4_0 to transition ptr_deref_3129_base_address_calculated
          ptr_deref_3129_sample_start_ <-& (ptr_deref_3129_base_address_calculated)
          // RAW reenables for arrayidx168_2579_delayed_4_0
          assign_stmt_3126_update_start_ o<-& (ptr_deref_3129_sample_completed_ 0)
          // self-release: 
          ptr_deref_3129_sample_start_ o<-& (ptr_deref_3129_sample_completed_ 1)
          $null &-> (ptr_deref_3129_update_start_)
          ptr_deref_3129_update_start_ o<-& (ptr_deref_3129_update_completed_ 0)
          // start: Forward dependencies from tmp163 to transition ptr_deref_3129_sample_start_
          ptr_deref_3129_sample_start_ <-& (ptr_deref_3081_update_completed_)
          // done: Forward dependencies from tmp163 to transition ptr_deref_3129_sample_start_
          // RAW reenables for tmp163
          ptr_deref_3081_update_start_ o<-& (ptr_deref_3129_sample_completed_ 0)
          // end:  			$guard (ifx_xelse157_exec_guard_2578_delayed_14_0) ->(arrayidx168_2579_delayed_4_0) := tmp163 $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // start:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          //  file prog.linked.opt.aa, line 857
          // volatile! 
          // Source expression
          // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
          // flagx_x0
          // Target expression
          // (as target) tobool
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // end:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          // start: WAR dependencies for ifx_xend169_whilex_xend_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend169_whilex_xend_taken
          // start:  			$volatile ifx_xend169_whilex_xend_taken := ( ~ tobool ) $buffering 1
          //  file prog.linked.opt.aa, line 858
          // volatile! 
          // Source expression
          // ( ~ tobool )
          // tobool
          // Target expression
          // (as target) ifx_xend169_whilex_xend_taken
          // start: WAR dependencies for ifx_xend169_whilex_xend_taken
          // ignored out-of-scope w_root 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend169_whilex_xend_taken
          // end:  			$volatile ifx_xend169_whilex_xend_taken := ( ~ tobool ) $buffering 1
          // tobool
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated <-& (type_cast_2588_update_completed_)
          condition_evaluated <-& (assign_stmt_2601_update_completed_)
          condition_evaluated <-& (assign_stmt_2609_update_completed_)
          condition_evaluated <-& (assign_stmt_2730_update_completed_)
          // done: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  ptr_deref_3038 store
          //  ptr_deref_3129 store
          $T [ptr_deref_3038_ptr_deref_3129_delay] $delay
          // ptr_deref_3038(store) -> ptr_deref_3129(store)
          ptr_deref_3129_sample_start_ <-& (ptr_deref_3038_ptr_deref_3129_delay)
          ptr_deref_3038_ptr_deref_3129_delay <-& (ptr_deref_3038_sample_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          // ordered memory-subsystem.
          ring_reenable_memory_space_0 <-& (ptr_deref_3129_sample_completed_)
          ptr_deref_3038_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // memory-space  memory_space_1
          //  ptr_deref_3081 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2473__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2473_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2473__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2473_loop_body : condition_evaluated
        $bind do_while_stmt_2473__entry__  => do_while_stmt_2473_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2473_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2473__exit__)
      }
      do_while_stmt_2473__entry__ |-> (do_while_stmt_2473)
      do_while_stmt_2473__exit__ <-| (do_while_stmt_2473)
      // if-statement  
      //  file prog.linked.opt.aa, line 118164344
      ;;[if_stmt_3144_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3144__entry__ |-> (if_stmt_3144_dead_link)
      if_stmt_3144__exit__ <-| (if_stmt_3144_dead_link)
      ;;[if_stmt_3144_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3144__entry__ |-> (if_stmt_3144_eval_test)
      $P [R_ifx_xend169_whilex_xend_taken_3145_place]
      R_ifx_xend169_whilex_xend_taken_3145_place <-| (if_stmt_3144_eval_test)
      ;;[if_stmt_3144_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3144_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_ifx_xend169_whilex_xend_taken_3145_place |-> (if_stmt_3144_if_link if_stmt_3144_else_link)
      $P [ifx_xend169_whilex_xend]
      ifx_xend169_whilex_xend <-| (if_stmt_3144_if_link)
      if_stmt_3144__exit__ <-| (if_stmt_3144_else_link)
      ::[assign_stmt_3153] 
      {
        // start:  		Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 866
        // Target expression
        // (as target) Block2_complete
        $T[WPIPE_Block2_complete_3150_sample_start_] 
        $T[WPIPE_Block2_complete_3150_sample_completed_] 
        $T[WPIPE_Block2_complete_3150_update_start_] 
        $T[WPIPE_Block2_complete_3150_update_completed_] 
        ;;[WPIPE_Block2_complete_3150_Sample] 
        {
          // pipe write sample-start Block2_complete
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block2_complete_3150_Update] 
        {
          // pipe write update (complete) Block2_complete
          $T [req] $T [ack] 
        }
        WPIPE_Block2_complete_3150_sample_start_ &-> (WPIPE_Block2_complete_3150_Sample)
        WPIPE_Block2_complete_3150_sample_completed_ <-& (WPIPE_Block2_complete_3150_Sample)
        WPIPE_Block2_complete_3150_update_start_ <-& (WPIPE_Block2_complete_3150_sample_completed_)
        WPIPE_Block2_complete_3150_update_start_ &-> (WPIPE_Block2_complete_3150_Update)
        WPIPE_Block2_complete_3150_update_completed_ <-& (WPIPE_Block2_complete_3150_Update)
        // end:  		Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block2_complete
        // read-dependencies for pipe Block2_complete
        // write-dependencies for pipe Block2_complete
        // signal write dependencies for Block2_complete
      }
      assign_stmt_3153__entry__ |-> (assign_stmt_3153)
      assign_stmt_3153__exit__ <-| (assign_stmt_3153)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 709
      //---------------------   merge statement  file prog.linked.opt.aa, line 709  --------------------------
      ||[entry_whilex_xbody_PhiReq] 
      {
        // skipped constant phi phi_stmt_2458
        ;;[phi_stmt_2463] 
        {
          ||[phi_stmt_2463_sources] 
          {
            // sources for 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) div )
            ;;[type_cast_2466] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2463_req] 
        }
        // skipped constant phi phi_stmt_2467
      }
      entry_whilex_xbody |-> (entry_whilex_xbody_PhiReq)
      $P [merge_stmt_2457_PhiReqMerge] 
      merge_stmt_2457_PhiReqMerge <-| ( entry_whilex_xbody_PhiReq )
      ||[merge_stmt_2457_PhiAck] 
      {
        // skipped constant phi phi_stmt_2458
        $T [phi_stmt_2463_ack] 
        // skipped constant phi phi_stmt_2467
      }
      merge_stmt_2457_PhiReqMerge |-> (merge_stmt_2457_PhiAck)
      merge_stmt_2457__exit__  <-| (merge_stmt_2457_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 709  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 863
      ;;[merge_stmt_3148_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3148__entry__ |-> (merge_stmt_3148_dead_link)
      merge_stmt_3148__exit__ <-| (merge_stmt_3148_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 863  --------------------------
      ||[ifx_xend169_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend169_whilex_xend |-> (ifx_xend169_whilex_xend_PhiReq)
      $P [merge_stmt_3148_PhiReqMerge] 
      merge_stmt_3148_PhiReqMerge <-| ( ifx_xend169_whilex_xend_PhiReq )
      ||[merge_stmt_3148_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3148_PhiReqMerge |-> (merge_stmt_3148_PhiAck)
      merge_stmt_3148__exit__  <-| (merge_stmt_3148_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 863  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 868
      //---------------------   merge statement  file prog.linked.opt.aa, line 868  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_3155_PhiReqMerge] 
      merge_stmt_3155_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_3155_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3155_PhiReqMerge |-> (merge_stmt_3155_PhiAck)
      merge_stmt_3155__exit__  <-| (merge_stmt_3155_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 868  --------------------------
      assign_stmt_2330_to_assign_stmt_2348__entry__ <-| (branch_block_stmt_2327__entry__)
      assign_stmt_2353_to_assign_stmt_2455__entry__ <-| (assign_stmt_2330_to_assign_stmt_2348__exit__)
      entry_whilex_xbody <-| (assign_stmt_2353_to_assign_stmt_2455__exit__)
      do_while_stmt_2473__entry__ <-| (merge_stmt_2457__exit__)
      if_stmt_3144__entry__ <-| (do_while_stmt_2473__exit__)
      merge_stmt_3148__entry__ <-| (if_stmt_3144__exit__)
      assign_stmt_3153__entry__ <-| (merge_stmt_3148__exit__)
      return__ <-| (assign_stmt_3153__exit__)
      merge_stmt_3155__exit__ |-> (branch_block_stmt_2327__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 709
    // constant-object-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 719
    // constant-object-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 863
    // constant-object-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 868
    // constant-object-declarations for block %zeropad3D_C%body
    //  file prog.linked.opt.aa, line 678
    // constant-object-declarations for block %zeropad3D_C
    //  file prog.linked.opt.aa, line 673
    // constant-declarations for block %zeropad3D_C%body
    //  file prog.linked.opt.aa, line 678
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2357_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_2379_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_2392_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_2403_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_2416_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2432_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2443_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 709
    // constant-declarations for phi:  			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 710
    $constant $W[kx_x1_at_entry_2458] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 712
    // constant-declarations for phi:  			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 714
    $constant $W[jx_x1_at_entry_2467] : $int<16> := _b0000000000000000 // 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 717
    // constant-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 719
    // constant-declarations for phi:  			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 720
    // constant-declarations for phi:  			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 722
    // constant-declarations for phi:  			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 724
    // ($bitcast ($uint<32>) _b00000000000000000000000000000100  )
    $constant $W[type_cast_2499_wire_constant] : $int<32> := _b00000000000000000000000000000100// 4
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2529_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 ) 
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2577_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000100  )
    $constant $W[type_cast_2632_wire_constant] : $int<16> := _b0000000000000100// 4
    // ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2661_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2665_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2667_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2695_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2723_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2735_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )
    $constant $W[type_cast_2739_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2743_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_2745_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2886_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2919_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2952_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3016_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $constant $W[array_obj_ref_3033_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3033_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3033_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3033_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_3040_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ->(arrayidx)
    $constant $W[ptr_deref_3038_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_3049_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )
    $constant $W[type_cast_3058_wire_constant] : $int<32> := _b00000000000000000000000000010010// 18
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161])
    $constant $W[array_obj_ref_3072_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3072_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3072_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3072_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx162)
    $constant $W[ptr_deref_3081_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3101_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167])
    $constant $W[array_obj_ref_3118_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3118_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3118_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3118_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx168_2579_delayed_4_0)
    $constant $W[ptr_deref_3129_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_3135_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 118164344
    // constant-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 863
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_3152_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %zeropad3D_C%body%
    //  file prog.linked.opt.aa, line 868
    // block %zeropad3D_C%body
    //  file prog.linked.opt.aa, line 678
    // 		call := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 680
    // call
    $W[call_2330] : $int<8>
    // 		call1 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 681
    // call1
    $W[call1_2333] : $int<8>
    // 		call2 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 682
    // call2
    $W[call2_2336] : $int<8>
    // 		call3 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 683
    // call3
    $W[call3_2339] : $int<8>
    // 		call4 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 684
    // call4
    $W[call4_2342] : $int<8>
    // 		call5 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 685
    // call5
    $W[call5_2345] : $int<8>
    // 		call6 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 686
    // call6
    $W[call6_2348] : $int<8>
    // 		conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 688
    // conv
    $W[conv_2353] : $int<16>
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 689
    // div
    $W[div_2359] : $int<16>
    // 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 690
    // conv31
    $W[conv31_2363] : $int<32>
    // 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 691
    // conv33
    $W[conv33_2367] : $int<32>
    // 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 692
    // conv37
    $W[conv37_2371] : $int<32>
    // 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 693
    // conv39
    $W[conv39_2375] : $int<32>
    // 		$volatile mul40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 694
    // mul40
    $W[mul40_2381] : $int<32>
    // 		$volatile sext := (mul40 * conv37) $buffering 1
    //  file prog.linked.opt.aa, line 695
    // sext
    $W[sext_2386] : $int<32>
    // 		$volatile conv94 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 696
    // ($bitcast ($int<32>) sext )
    $intermediate $W[type_cast_2389_wire] : $int<32>
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_2393_wire] : $int<32>
    // conv94
    $W[conv94_2395] : $int<32>
    // 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 697
    // conv108
    $W[conv108_2399] : $int<32>
    // 		$volatile mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 698
    // mul
    $W[mul_2405] : $int<32>
    // 		$volatile sext174 := (mul * conv31) $buffering 1
    //  file prog.linked.opt.aa, line 699
    // sext174
    $W[sext174_2410] : $int<32>
    // 		$volatile conv112 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 700
    // ($bitcast ($int<32>) sext174 )
    $intermediate $W[type_cast_2413_wire] : $int<32>
    // (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_2417_wire] : $int<32>
    // conv112
    $W[conv112_2419] : $int<32>
    // 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 701
    // conv130
    $W[conv130_2423] : $int<32>
    // 		$volatile add133 := (conv108 + conv130) $buffering 1
    //  file prog.linked.opt.aa, line 702
    // add133
    $W[add133_2428] : $int<32>
    // 		$volatile div148 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 703
    // div148
    $W[div148_2434] : $int<32>
    // 		$volatile add151 := (conv108 + div148) $buffering 1
    //  file prog.linked.opt.aa, line 704
    // add151
    $W[add151_2439] : $int<32>
    // 		$volatile shl := (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 705
    // shl
    $W[shl_2445] : $int<32>
    // 		$volatile add63 := (shl + div148) $buffering 1
    //  file prog.linked.opt.aa, line 706
    // add63
    $W[add63_2450] : $int<32>
    // 		$volatile add77 := (shl + conv130) $buffering 1
    //  file prog.linked.opt.aa, line 707
    // add77
    $W[add77_2455] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 709
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 712
    // ($cast ($uint<16>) div )
    $intermediate $W[type_cast_2466_wire] : $int<16>
    // ix_x2_at_entry
    $W[ix_x2_at_entry_2463] : $int<16>
    // do-while statement  
    //  file prog.linked.opt.aa, line 717
    // merge-statement  
    //  file prog.linked.opt.aa, line 719
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 720
    // ($cast ($uint<16>) kx_x0 )
    $intermediate $W[type_cast_2478_wire] : $int<16>
    // kx_x1
    $W[kx_x1_2475] : $int<16>
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 722
    // ($cast ($uint<16>) ix_x1 )
    $intermediate $W[type_cast_2483_wire] : $int<16>
    $W[ix_x2_at_entry_2463_2484_buffered] : $int<16>
    // ix_x2
    $W[ix_x2_2480] : $int<16>
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 724
    // ($cast ($uint<16>) jx_x0 )
    $intermediate $W[type_cast_2488_wire] : $int<16>
    // jx_x1
    $W[jx_x1_2485] : $int<16>
    // 			conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 727
    // ($cast ($int<32>) kx_x1 )
    $intermediate $W[type_cast_2493_wire] : $int<32>
    // conv47
    $W[conv47_2495] : $int<32>
    // 			$volatile add := (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 728
    // add
    $W[add_2501] : $int<32>
    // 			type_cast_2140_2140_delayed_2_0 := ($bitcast ($int<32>) conv31 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 729
    // type_cast_2140_2140_delayed_2_0
    $W[type_cast_2140_2140_delayed_2_0_2505] : $int<32>
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 730
    // ($bitcast ($int<32>) add )
    $intermediate $W[type_cast_2508_wire] : $int<32>
    // cmp
    $W[cmp_2511] : $int<1>
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 731
    // whilex_xbody_ifx_xthen_taken
    $W[whilex_xbody_ifx_xthen_taken_2514] : $int<1>
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 732
    // whilex_xbody_ifx_xelse_taken
    $W[whilex_xbody_ifx_xelse_taken_2518] : $int<1>
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 733
    // ifx_xelse_exec_guard
    $W[ifx_xelse_exec_guard_2521] : $int<1>
    // 			jx_x1_2155_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 734
    // jx_x1_2155_delayed_1_0
    $W[jx_x1_2155_delayed_1_0_2524] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 735
    // inc
    $W[inc_2531] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) conv57 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 736
    // ($cast ($int<32>) inc )
    $intermediate $W[type_cast_2535_wire] : $int<32>
    // conv57
    $W[conv57_2537] : $int<32>
    // 			ifx_xelse_exec_guard_2166_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 737
    // ifx_xelse_exec_guard_2166_delayed_1_0
    $W[ifx_xelse_exec_guard_2166_delayed_1_0_2540] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2166_delayed_1_0) $volatile cmp64 := (conv57 == add63) $buffering 1
    //  file prog.linked.opt.aa, line 738
    // cmp64
    $W[cmp64_2546] : $int<1>
    // 			ifx_xelse_exec_guard_2172_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 739
    // ifx_xelse_exec_guard_2172_delayed_1_0
    $W[ifx_xelse_exec_guard_2172_delayed_1_0_2549] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2172_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 740
    // inc69
    $W[inc69_2554] : $int<16>
    // 			ifx_xelse_exec_guard_2177_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 741
    // ifx_xelse_exec_guard_2177_delayed_2_0
    $W[ifx_xelse_exec_guard_2177_delayed_2_0_2557] : $int<1>
    // 			ix_x2_2180_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 742
    // ix_x2_2180_delayed_3_0
    $W[ix_x2_2180_delayed_3_0_2560] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_2177_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_2180_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 743
    // inc69x_xix_x2
    $W[inc69x_xix_x2_2566] : $int<16>
    // 			ifx_xelse_exec_guard_2183_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 744
    // ifx_xelse_exec_guard_2183_delayed_1_0
    $W[ifx_xelse_exec_guard_2183_delayed_1_0_2569] : $int<1>
    // 			inc_2188_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 745
    // inc_2188_delayed_1_0
    $W[inc_2188_delayed_1_0_2572] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_2183_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 746
    // jx_x2
    $W[jx_x2_2580] : $int<16>
    // 			ifx_xelse_exec_guard_2191_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 747
    // ifx_xelse_exec_guard_2191_delayed_2_0
    $W[ifx_xelse_exec_guard_2191_delayed_2_0_2583] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 748
    // ($cast ($int<32>) inc69x_xix_x2 )
    $intermediate $W[type_cast_2587_wire] : $int<32>
    // conv71
    $W[conv71_2589] : $int<32>
    // 			ifx_xelse_exec_guard_2197_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 749
    // ifx_xelse_exec_guard_2197_delayed_3_0
    $W[ifx_xelse_exec_guard_2197_delayed_3_0_2592] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2197_delayed_3_0) $volatile cmp78 := (conv71 == add77) $buffering 1
    //  file prog.linked.opt.aa, line 750
    // cmp78
    $W[cmp78_2598] : $int<1>
    // 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 751
    // ifx_xelse_exec_guard_2204_delayed_3_0
    $W[ifx_xelse_exec_guard_2204_delayed_3_0_2601] : $int<1>
    // 			$volatile ifx_xelse_ifx_xthen80_taken := (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78) $buffering 1
    //  file prog.linked.opt.aa, line 752
    // ifx_xelse_ifx_xthen80_taken
    $W[ifx_xelse_ifx_xthen80_taken_2606] : $int<1>
    // 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 753
    // ifx_xelse_exec_guard_2209_delayed_3_0
    $W[ifx_xelse_exec_guard_2209_delayed_3_0_2609] : $int<1>
    // 			$volatile ifx_xelse_ifx_xend82_taken := (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 )) $buffering 1
    //  file prog.linked.opt.aa, line 754
    // ( ~ cmp78 )
    $intermediate $W[NOT_u1_u1_2613_wire] : $int<1>
    // ifx_xelse_ifx_xend82_taken
    $W[ifx_xelse_ifx_xend82_taken_2615] : $int<1>
    // 			$volatile ifx_xthen80_exec_guard := ifx_xelse_ifx_xthen80_taken $buffering 1
    //  file prog.linked.opt.aa, line 755
    // ifx_xthen80_exec_guard
    $W[ifx_xthen80_exec_guard_2618] : $int<1>
    // 			$volatile ifx_xthen80_ifx_xend82_taken := ifx_xthen80_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 756
    // ifx_xthen80_ifx_xend82_taken
    $W[ifx_xthen80_ifx_xend82_taken_2621] : $int<1>
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 757
    // ifx_xthen_exec_guard
    $W[ifx_xthen_exec_guard_2624] : $int<1>
    // 			kx_x1_2225_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 758
    // kx_x1_2225_delayed_1_0
    $W[kx_x1_2225_delayed_1_0_2627] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile add53 := (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 759
    // add53
    $W[add53_2634] : $int<16>
    // 			$volatile ifx_xthen_ifx_xend82_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 760
    // ifx_xthen_ifx_xend82_taken
    $W[ifx_xthen_ifx_xend82_taken_2637] : $int<1>
    // 			ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 761
    // ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
    $W[ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2640] : $int<1>
    // 			$volatile ifx_xend82_exec_guard := (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 762
    // (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)
    $intermediate $W[OR_u1_u1_2645_wire] : $int<1>
    // ifx_xend82_exec_guard
    $W[ifx_xend82_exec_guard_2647] : $int<1>
    // 			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 763
    // ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
    $W[ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2650] : $int<1>
    // 			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 764
    // type_cast_2243_2243_delayed_3_0
    $W[type_cast_2243_2243_delayed_3_0_2654] : $int<16>
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 765
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_2668_wire] : $int<16>
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_2669_wire] : $int<16>
    // kx_x0
    $W[kx_x0_2671] : $int<16>
    // 			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 766
    // ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
    $W[ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2674] : $int<1>
    // 			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 767
    // type_cast_2261_2261_delayed_4_0
    $W[type_cast_2261_2261_delayed_4_0_2678] : $int<16>
    // 			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 768
    // type_cast_2264_2264_delayed_1_0
    $W[type_cast_2264_2264_delayed_1_0_2682] : $int<16>
    // 			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 769
    // type_cast_2267_2267_delayed_1_0
    $W[type_cast_2267_2267_delayed_1_0_2686] : $int<16>
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 770
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_2696_wire] : $int<16>
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_2697_wire] : $int<16>
    // ix_x1
    $W[ix_x1_2699] : $int<16>
    // 			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 771
    // ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
    $W[ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2702] : $int<1>
    // 			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 772
    // type_cast_2277_2277_delayed_4_0
    $W[type_cast_2277_2277_delayed_4_0_2706] : $int<16>
    // 			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 773
    // type_cast_2280_2280_delayed_2_0
    $W[type_cast_2280_2280_delayed_2_0_2710] : $int<16>
    // 			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 774
    // type_cast_2283_2283_delayed_2_0
    $W[type_cast_2283_2283_delayed_2_0_2714] : $int<16>
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 775
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_2724_wire] : $int<16>
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_2725_wire] : $int<16>
    // jx_x0
    $W[jx_x0_2727] : $int<16>
    // 			ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 776
    // ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
    $W[ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2730] : $int<1>
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 777
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_2746_wire] : $int<16>
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_2747_wire] : $int<16>
    // flagx_x0
    $W[flagx_x0_2749] : $int<16>
    // 			$guard (ifx_xend82_exec_guard) conv86173 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 778
    // conv86173
    $W[conv86173_2754] : $int<32>
    // 			$guard (ifx_xend82_exec_guard) conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 779
    // ($cast ($int<32>) jx_x0 )
    $intermediate $W[type_cast_2758_wire] : $int<32>
    // conv90
    $W[conv90_2760] : $int<32>
    // 			ifx_xend82_exec_guard_2320_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 780
    // ifx_xend82_exec_guard_2320_delayed_1_0
    $W[ifx_xend82_exec_guard_2320_delayed_1_0_2763] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2320_delayed_1_0) $volatile mul91 := (conv90 * conv37) $buffering 1
    //  file prog.linked.opt.aa, line 781
    // mul91
    $W[mul91_2769] : $int<32>
    // 			$guard (ifx_xend82_exec_guard) conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 782
    // ($cast ($int<32>) ix_x1 )
    $intermediate $W[type_cast_2773_wire] : $int<32>
    // conv96
    $W[conv96_2775] : $int<32>
    // 			ifx_xend82_exec_guard_2332_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 783
    // ifx_xend82_exec_guard_2332_delayed_1_0
    $W[ifx_xend82_exec_guard_2332_delayed_1_0_2778] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2332_delayed_1_0) $volatile mul97 := (conv96 * conv94) $buffering 1
    //  file prog.linked.opt.aa, line 784
    // mul97
    $W[mul97_2784] : $int<32>
    // 			ifx_xend82_exec_guard_2338_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 785
    // ifx_xend82_exec_guard_2338_delayed_1_0
    $W[ifx_xend82_exec_guard_2338_delayed_1_0_2787] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2338_delayed_1_0) $volatile add92 := (mul97 + conv86173) $buffering 1
    //  file prog.linked.opt.aa, line 786
    // add92
    $W[add92_2793] : $int<32>
    // 			ifx_xend82_exec_guard_2344_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 787
    // ifx_xend82_exec_guard_2344_delayed_1_0
    $W[ifx_xend82_exec_guard_2344_delayed_1_0_2796] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2344_delayed_1_0) $volatile add98 := (add92 + mul91) $buffering 1
    //  file prog.linked.opt.aa, line 788
    // add98
    $W[add98_2802] : $int<32>
    // 			ifx_xend82_exec_guard_2350_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 789
    // ifx_xend82_exec_guard_2350_delayed_1_0
    $W[ifx_xend82_exec_guard_2350_delayed_1_0_2805] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2350_delayed_1_0) conv99 := ($cast ($uint<16>) add98 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 790
    // conv99
    $W[conv99_2810] : $int<16>
    // 			ifx_xend82_exec_guard_2355_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 791
    // ifx_xend82_exec_guard_2355_delayed_1_0
    $W[ifx_xend82_exec_guard_2355_delayed_1_0_2813] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2355_delayed_1_0) $volatile sub := (conv90 - conv108) $buffering 1
    //  file prog.linked.opt.aa, line 792
    // sub
    $W[sub_2819] : $int<32>
    // 			ifx_xend82_exec_guard_2361_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 793
    // ifx_xend82_exec_guard_2361_delayed_1_0
    $W[ifx_xend82_exec_guard_2361_delayed_1_0_2822] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2361_delayed_1_0) $volatile mul109 := (sub * conv31) $buffering 1
    //  file prog.linked.opt.aa, line 794
    // mul109
    $W[mul109_2828] : $int<32>
    // 			ifx_xend82_exec_guard_2367_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 795
    // ifx_xend82_exec_guard_2367_delayed_1_0
    $W[ifx_xend82_exec_guard_2367_delayed_1_0_2831] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2367_delayed_1_0) $volatile sub117 := (conv96 - conv108) $buffering 1
    //  file prog.linked.opt.aa, line 796
    // sub117
    $W[sub117_2837] : $int<32>
    // 			ifx_xend82_exec_guard_2373_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 797
    // ifx_xend82_exec_guard_2373_delayed_1_0
    $W[ifx_xend82_exec_guard_2373_delayed_1_0_2840] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2373_delayed_1_0) $volatile mul118 := (sub117 * conv112) $buffering 1
    //  file prog.linked.opt.aa, line 798
    // mul118
    $W[mul118_2846] : $int<32>
    // 			ifx_xend82_exec_guard_2379_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 799
    // ifx_xend82_exec_guard_2379_delayed_1_0
    $W[ifx_xend82_exec_guard_2379_delayed_1_0_2849] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2379_delayed_1_0) $volatile add110 := (mul118 + conv86173) $buffering 1
    //  file prog.linked.opt.aa, line 800
    // add110
    $W[add110_2855] : $int<32>
    // 			ifx_xend82_exec_guard_2385_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 801
    // ifx_xend82_exec_guard_2385_delayed_1_0
    $W[ifx_xend82_exec_guard_2385_delayed_1_0_2858] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2385_delayed_1_0) $volatile add119 := (add110 + mul109) $buffering 1
    //  file prog.linked.opt.aa, line 802
    // add119
    $W[add119_2864] : $int<32>
    // 			ifx_xend82_exec_guard_2391_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 803
    // ifx_xend82_exec_guard_2391_delayed_1_0
    $W[ifx_xend82_exec_guard_2391_delayed_1_0_2867] : $int<1>
    // 			type_cast_2396_2396_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 804
    // type_cast_2396_2396_delayed_1_0
    $W[type_cast_2396_2396_delayed_1_0_2871] : $int<32>
    // 			$guard (ifx_xend82_exec_guard_2391_delayed_1_0) $volatile cmp125 := (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 805
    // ($bitcast ($int<32>) conv96 )
    $intermediate $W[type_cast_2875_wire] : $int<32>
    // cmp125
    $W[cmp125_2878] : $int<1>
    // 			ifx_xend82_exec_guard_2399_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 806
    // ifx_xend82_exec_guard_2399_delayed_1_0
    $W[ifx_xend82_exec_guard_2399_delayed_1_0_2881] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2399_delayed_1_0) $volatile cmp125x_xnot := (cmp125 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 807
    // cmp125x_xnot
    $W[cmp125x_xnot_2888] : $int<1>
    // 			ifx_xend82_exec_guard_2406_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 808
    // ifx_xend82_exec_guard_2406_delayed_1_0
    $W[ifx_xend82_exec_guard_2406_delayed_1_0_2891] : $int<1>
    // 			type_cast_2411_2411_delayed_1_0 := ($bitcast ($int<32>) add133 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 809
    // type_cast_2411_2411_delayed_1_0
    $W[type_cast_2411_2411_delayed_1_0_2895] : $int<32>
    // 			$guard (ifx_xend82_exec_guard_2406_delayed_1_0) $volatile cmp134 := (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 810
    // ($bitcast ($int<32>) conv96 )
    $intermediate $W[type_cast_2899_wire] : $int<32>
    // cmp134
    $W[cmp134_2902] : $int<1>
    // 			ifx_xend82_exec_guard_2414_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 811
    // ifx_xend82_exec_guard_2414_delayed_1_0
    $W[ifx_xend82_exec_guard_2414_delayed_1_0_2905] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2414_delayed_1_0) $volatile orx_xcond := (cmp125x_xnot & cmp134) $buffering 1
    //  file prog.linked.opt.aa, line 812
    // orx_xcond
    $W[orx_xcond_2911] : $int<1>
    // 			ifx_xend82_exec_guard_2420_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 813
    // ifx_xend82_exec_guard_2420_delayed_1_0
    $W[ifx_xend82_exec_guard_2420_delayed_1_0_2914] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2420_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 814
    // orx_xcondx_xnot
    $W[orx_xcondx_xnot_2921] : $int<1>
    // 			ifx_xend82_exec_guard_2427_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 815
    // ifx_xend82_exec_guard_2427_delayed_1_0
    $W[ifx_xend82_exec_guard_2427_delayed_1_0_2924] : $int<1>
    // 			type_cast_2432_2432_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 816
    // type_cast_2432_2432_delayed_1_0
    $W[type_cast_2432_2432_delayed_1_0_2928] : $int<32>
    // 			$guard (ifx_xend82_exec_guard_2427_delayed_1_0) $volatile cmp141 := (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 817
    // ($bitcast ($int<32>) conv90 )
    $intermediate $W[type_cast_2932_wire] : $int<32>
    // cmp141
    $W[cmp141_2935] : $int<1>
    // 			ifx_xend82_exec_guard_2435_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 818
    // ifx_xend82_exec_guard_2435_delayed_1_0
    $W[ifx_xend82_exec_guard_2435_delayed_1_0_2938] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2435_delayed_1_0) $volatile orx_xcond178 := (orx_xcondx_xnot | cmp141) $buffering 1
    //  file prog.linked.opt.aa, line 819
    // orx_xcond178
    $W[orx_xcond178_2944] : $int<1>
    // 			ifx_xend82_exec_guard_2441_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 820
    // ifx_xend82_exec_guard_2441_delayed_1_0
    $W[ifx_xend82_exec_guard_2441_delayed_1_0_2947] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2441_delayed_1_0) $volatile orx_xcond178x_xnot := (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 821
    // orx_xcond178x_xnot
    $W[orx_xcond178x_xnot_2954] : $int<1>
    // 			ifx_xend82_exec_guard_2448_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 822
    // ifx_xend82_exec_guard_2448_delayed_1_0
    $W[ifx_xend82_exec_guard_2448_delayed_1_0_2957] : $int<1>
    // 			type_cast_2453_2453_delayed_1_0 := ($bitcast ($int<32>) add151 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 823
    // type_cast_2453_2453_delayed_1_0
    $W[type_cast_2453_2453_delayed_1_0_2961] : $int<32>
    // 			$guard (ifx_xend82_exec_guard_2448_delayed_1_0) $volatile cmp152 := (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 824
    // ($bitcast ($int<32>) conv90 )
    $intermediate $W[type_cast_2965_wire] : $int<32>
    // cmp152
    $W[cmp152_2968] : $int<1>
    // 			ifx_xend82_exec_guard_2456_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 825
    // ifx_xend82_exec_guard_2456_delayed_1_0
    $W[ifx_xend82_exec_guard_2456_delayed_1_0_2971] : $int<1>
    // 			$guard (ifx_xend82_exec_guard_2456_delayed_1_0) $volatile orx_xcond179 := (orx_xcond178x_xnot & cmp152) $buffering 1
    //  file prog.linked.opt.aa, line 826
    // orx_xcond179
    $W[orx_xcond179_2977] : $int<1>
    // 			ifx_xend82_exec_guard_2463_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 827
    // ifx_xend82_exec_guard_2463_delayed_1_0
    $W[ifx_xend82_exec_guard_2463_delayed_1_0_2980] : $int<1>
    // 			$volatile ifx_xend82_ifx_xelse157_taken := (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179) $buffering 1
    //  file prog.linked.opt.aa, line 828
    // ifx_xend82_ifx_xelse157_taken
    $W[ifx_xend82_ifx_xelse157_taken_2985] : $int<1>
    // 			ifx_xend82_exec_guard_2468_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 829
    // ifx_xend82_exec_guard_2468_delayed_1_0
    $W[ifx_xend82_exec_guard_2468_delayed_1_0_2988] : $int<1>
    // 			$volatile ifx_xend82_ifx_xthen154_taken := (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 )) $buffering 1
    //  file prog.linked.opt.aa, line 830
    // ( ~ orx_xcond179 )
    $intermediate $W[NOT_u1_u1_2992_wire] : $int<1>
    // ifx_xend82_ifx_xthen154_taken
    $W[ifx_xend82_ifx_xthen154_taken_2994] : $int<1>
    // 			$volatile ifx_xthen154_exec_guard := ifx_xend82_ifx_xthen154_taken $buffering 1
    //  file prog.linked.opt.aa, line 831
    // ifx_xthen154_exec_guard
    $W[ifx_xthen154_exec_guard_2997] : $int<1>
    // 			ifx_xthen154_exec_guard_2476_delayed_1_0 := ifx_xthen154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 832
    // ifx_xthen154_exec_guard_2476_delayed_1_0
    $W[ifx_xthen154_exec_guard_2476_delayed_1_0_3000] : $int<1>
    // 			$guard (ifx_xthen154_exec_guard_2476_delayed_1_0) conv156 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 833
    // ($cast ($int<32>) conv99 )
    $intermediate $W[type_cast_3004_wire] : $int<32>
    // conv156
    $W[conv156_3006] : $int<32>
    // 			ifx_xthen154_exec_guard_2482_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 834
    // ifx_xthen154_exec_guard_2482_delayed_2_0
    $W[ifx_xthen154_exec_guard_2482_delayed_2_0_3009] : $int<1>
    // 			$guard (ifx_xthen154_exec_guard_2482_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 835
    // ($bitcast ($int<32>) conv156 )
    $intermediate $W[type_cast_3013_wire] : $int<32>
    // (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_3017_wire] : $int<32>
    // shr
    $W[shr_3019] : $int<32>
    // 			ifx_xthen154_exec_guard_2492_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 836
    // ifx_xthen154_exec_guard_2492_delayed_2_0
    $W[ifx_xthen154_exec_guard_2492_delayed_2_0_3022] : $int<1>
    // 			$guard (ifx_xthen154_exec_guard_2492_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 837
    // ($cast ($int<64>) shr )
    $intermediate $W[type_cast_3026_wire] : $int<64>
    // idxprom
    $W[idxprom_3028] : $int<64>
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 838
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $intermediate $W[R_idxprom_3032_resized] : $int<14>
    $intermediate $W[R_idxprom_3032_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3033_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3033_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_3035] : $int<32>
    // 			$guard (ifx_xthen154_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 839
    // ->(arrayidx)
    $intermediate $W[ptr_deref_3038_wire] : $int<64>
    $intermediate $W[ptr_deref_3038_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3038_root_address] : $int<14>
    $W[ptr_deref_3038_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3038_data_0] : $int<64>
    // 			$volatile ifx_xelse157_exec_guard := ifx_xend82_ifx_xelse157_taken $buffering 1
    //  file prog.linked.opt.aa, line 840
    // ifx_xelse157_exec_guard
    $W[ifx_xelse157_exec_guard_3044] : $int<1>
    // 			$guard (ifx_xelse157_exec_guard) $volatile sext176 := (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 841
    // sext176
    $W[sext176_3051] : $int<32>
    // 			$guard (ifx_xelse157_exec_guard) $volatile shr160 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 842
    // ($bitcast ($int<32>) sext176 )
    $intermediate $W[type_cast_3055_wire] : $int<32>
    // (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $intermediate $W[ASHR_i32_i32_3059_wire] : $int<32>
    // shr160
    $W[shr160_3061] : $int<32>
    // 			$guard (ifx_xelse157_exec_guard) idxprom161 := ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 843
    // ($cast ($int<64>) shr160 )
    $intermediate $W[type_cast_3065_wire] : $int<64>
    // idxprom161
    $W[idxprom161_3067] : $int<64>
    // 			arrayidx162 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 844
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161])
    $intermediate $W[R_idxprom161_3071_resized] : $int<14>
    $intermediate $W[R_idxprom161_3071_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3072_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3072_root_address] : $int<14>
    // arrayidx162
    $W[arrayidx162_3074] : $int<32>
    // 			ifx_xelse157_exec_guard_2544_delayed_8_0 := ifx_xelse157_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 845
    // ifx_xelse157_exec_guard_2544_delayed_8_0
    $W[ifx_xelse157_exec_guard_2544_delayed_8_0_3077] : $int<1>
    // 			$guard (ifx_xelse157_exec_guard_2544_delayed_8_0) tmp163 := ->(arrayidx162) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 846
    // ->(arrayidx162)
    $intermediate $W[ptr_deref_3081_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3081_root_address] : $int<14>
    $W[ptr_deref_3081_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_3081_data_0] : $int<64>
    // tmp163
    $W[tmp163_3082] : $int<64>
    // 			ifx_xelse157_exec_guard_2549_delayed_1_0 := ifx_xelse157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 847
    // ifx_xelse157_exec_guard_2549_delayed_1_0
    $W[ifx_xelse157_exec_guard_2549_delayed_1_0_3085] : $int<1>
    // 			$guard (ifx_xelse157_exec_guard_2549_delayed_1_0) conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 848
    // ($cast ($int<32>) conv99 )
    $intermediate $W[type_cast_3089_wire] : $int<32>
    // conv165
    $W[conv165_3091] : $int<32>
    // 			ifx_xelse157_exec_guard_2555_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 849
    // ifx_xelse157_exec_guard_2555_delayed_2_0
    $W[ifx_xelse157_exec_guard_2555_delayed_2_0_3094] : $int<1>
    // 			$guard (ifx_xelse157_exec_guard_2555_delayed_2_0) $volatile shr166 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 850
    // ($bitcast ($int<32>) conv165 )
    $intermediate $W[type_cast_3098_wire] : $int<32>
    // (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_3102_wire] : $int<32>
    // shr166
    $W[shr166_3104] : $int<32>
    // 			ifx_xelse157_exec_guard_2565_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 851
    // ifx_xelse157_exec_guard_2565_delayed_2_0
    $W[ifx_xelse157_exec_guard_2565_delayed_2_0_3107] : $int<1>
    // 			$guard (ifx_xelse157_exec_guard_2565_delayed_2_0) idxprom167 := ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 852
    // ($cast ($int<64>) shr166 )
    $intermediate $W[type_cast_3111_wire] : $int<64>
    // idxprom167
    $W[idxprom167_3113] : $int<64>
    // 			arrayidx168 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 853
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167])
    $intermediate $W[R_idxprom167_3117_resized] : $int<14>
    $intermediate $W[R_idxprom167_3117_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3118_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3118_root_address] : $int<14>
    // arrayidx168
    $W[arrayidx168_3120] : $int<32>
    // 			ifx_xelse157_exec_guard_2578_delayed_14_0 := ifx_xelse157_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 854
    // ifx_xelse157_exec_guard_2578_delayed_14_0
    $W[ifx_xelse157_exec_guard_2578_delayed_14_0_3123] : $int<1>
    // 			arrayidx168_2579_delayed_4_0 := arrayidx168 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 855
    // arrayidx168_2579_delayed_4_0
    $W[arrayidx168_2579_delayed_4_0_3126] : $int<32>
    // 			$guard (ifx_xelse157_exec_guard_2578_delayed_14_0) ->(arrayidx168_2579_delayed_4_0) := tmp163 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 856
    // ->(arrayidx168_2579_delayed_4_0)
    $intermediate $W[ptr_deref_3129_wire] : $int<64>
    $intermediate $W[ptr_deref_3129_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3129_root_address] : $int<14>
    $W[ptr_deref_3129_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3129_data_0] : $int<64>
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 857
    // tobool
    $W[tobool_3137] : $int<1>
    // 			$volatile ifx_xend169_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 858
    // ifx_xend169_whilex_xend_taken
    $W[ifx_xend169_whilex_xend_taken_3141] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 118164344
    // 		Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 866
    // Block2_complete
    // datapath-instances for block %zeropad3D_C%body
    //  file prog.linked.opt.aa, line 678
    // 		call := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 680
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2329_inst] (Block2_starting) (call_2330) 
    $buffering $out RPIPE_Block2_starting_2329_inst call_2330 1
    // 		call1 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 681
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2332_inst] (Block2_starting) (call1_2333) 
    $buffering $out RPIPE_Block2_starting_2332_inst call1_2333 1
    // 		call2 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 682
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2335_inst] (Block2_starting) (call2_2336) 
    $buffering $out RPIPE_Block2_starting_2335_inst call2_2336 1
    // 		call3 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 683
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2338_inst] (Block2_starting) (call3_2339) 
    $buffering $out RPIPE_Block2_starting_2338_inst call3_2339 1
    // 		call4 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 684
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2341_inst] (Block2_starting) (call4_2342) 
    $buffering $out RPIPE_Block2_starting_2341_inst call4_2342 1
    // 		call5 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 685
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2344_inst] (Block2_starting) (call5_2345) 
    $buffering $out RPIPE_Block2_starting_2344_inst call5_2345 1
    // 		call6 := Block2_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 686
    // Block2_starting
    $ioport $in [RPIPE_Block2_starting_2347_inst] (Block2_starting) (call6_2348) 
    $buffering $out RPIPE_Block2_starting_2347_inst call6_2348 1
    // 		conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 688
    // ($cast ($uint<16>) call )
    # := [type_cast_2352_inst] (call_2330) (conv_2353)    
    $buffering  $out type_cast_2352_inst conv_2353 1
    $delay type_cast_2352_inst 1
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 689
    // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
    >>[LSHR_u16_u16_2358_inst] (conv_2353 type_cast_2357_wire_constant) (div_2359)   $flowthrough 
    $delay LSHR_u16_u16_2358_inst 0
    // 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 690
    // ($cast ($uint<32>) call2 )
    # := [type_cast_2362_inst] (call2_2336) (conv31_2363)    
    $buffering  $out type_cast_2362_inst conv31_2363 1
    $delay type_cast_2362_inst 1
    // 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 691
    // ($cast ($uint<32>) call1 )
    # := [type_cast_2366_inst] (call1_2333) (conv33_2367)    
    $buffering  $out type_cast_2366_inst conv33_2367 1
    $delay type_cast_2366_inst 1
    // 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 692
    // ($cast ($uint<32>) call5 )
    # := [type_cast_2370_inst] (call5_2345) (conv37_2371)    
    $buffering  $out type_cast_2370_inst conv37_2371 1
    $delay type_cast_2370_inst 1
    // 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 693
    // ($cast ($uint<32>) call4 )
    # := [type_cast_2374_inst] (call4_2342) (conv39_2375)    
    $buffering  $out type_cast_2374_inst conv39_2375 1
    $delay type_cast_2374_inst 1
    // 		$volatile mul40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 694
    // (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_2380_inst] (conv39_2375 type_cast_2379_wire_constant) (mul40_2381)   $flowthrough 
    $delay SHL_u32_u32_2380_inst 0
    // 		$volatile sext := (mul40 * conv37) $buffering 1
    //  file prog.linked.opt.aa, line 695
    // (mul40 * conv37)
    *[MUL_u32_u32_2385_inst] (mul40_2381 conv37_2371) (sext_2386)   $flowthrough 
    $delay MUL_u32_u32_2385_inst 0
    // 		$volatile conv94 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 696
    // ($bitcast ($int<32>) sext )
    # := [type_cast_2389_inst] (sext_2386) (type_cast_2389_wire)   $flowthrough
    $delay type_cast_2389_inst 0
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_2393_inst] (type_cast_2389_wire type_cast_2392_wire_constant) (ASHR_i32_i32_2393_wire)   $flowthrough 
    $delay ASHR_i32_i32_2393_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_2394_inst] (ASHR_i32_i32_2393_wire) (conv94_2395)   $flowthrough
    $delay type_cast_2394_inst 0
    // 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 697
    // ($cast ($uint<32>) call6 )
    # := [type_cast_2398_inst] (call6_2348) (conv108_2399)    
    $buffering  $out type_cast_2398_inst conv108_2399 1
    $delay type_cast_2398_inst 1
    // 		$volatile mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 698
    // (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_2404_inst] (conv33_2367 type_cast_2403_wire_constant) (mul_2405)   $flowthrough 
    $delay SHL_u32_u32_2404_inst 0
    // 		$volatile sext174 := (mul * conv31) $buffering 1
    //  file prog.linked.opt.aa, line 699
    // (mul * conv31)
    *[MUL_u32_u32_2409_inst] (mul_2405 conv31_2363) (sext174_2410)   $flowthrough 
    $delay MUL_u32_u32_2409_inst 0
    // 		$volatile conv112 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 700
    // ($bitcast ($int<32>) sext174 )
    # := [type_cast_2413_inst] (sext174_2410) (type_cast_2413_wire)   $flowthrough
    $delay type_cast_2413_inst 0
    // (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_2417_inst] (type_cast_2413_wire type_cast_2416_wire_constant) (ASHR_i32_i32_2417_wire)   $flowthrough 
    $delay ASHR_i32_i32_2417_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_2418_inst] (ASHR_i32_i32_2417_wire) (conv112_2419)   $flowthrough
    $delay type_cast_2418_inst 0
    // 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 701
    // ($cast ($uint<32>) call )
    # := [type_cast_2422_inst] (call_2330) (conv130_2423)    
    $buffering  $out type_cast_2422_inst conv130_2423 1
    $delay type_cast_2422_inst 1
    // 		$volatile add133 := (conv108 + conv130) $buffering 1
    //  file prog.linked.opt.aa, line 702
    // (conv108 + conv130)
    +[ADD_u32_u32_2427_inst] (conv108_2399 conv130_2423) (add133_2428)   $flowthrough 
    $delay ADD_u32_u32_2427_inst 0
    // 		$volatile div148 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 703
    // (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_2433_inst] (conv33_2367 type_cast_2432_wire_constant) (div148_2434)   $flowthrough 
    $delay LSHR_u32_u32_2433_inst 0
    // 		$volatile add151 := (conv108 + div148) $buffering 1
    //  file prog.linked.opt.aa, line 704
    // (conv108 + div148)
    +[ADD_u32_u32_2438_inst] (conv108_2399 div148_2434) (add151_2439)   $flowthrough 
    $delay ADD_u32_u32_2438_inst 0
    // 		$volatile shl := (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 705
    // (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2444_inst] (conv108_2399 type_cast_2443_wire_constant) (shl_2445)   $flowthrough 
    $delay SHL_u32_u32_2444_inst 0
    // 		$volatile add63 := (shl + div148) $buffering 1
    //  file prog.linked.opt.aa, line 706
    // (shl + div148)
    +[ADD_u32_u32_2449_inst] (shl_2445 div148_2434) (add63_2450)   $flowthrough 
    $delay ADD_u32_u32_2449_inst 0
    // 		$volatile add77 := (shl + conv130) $buffering 1
    //  file prog.linked.opt.aa, line 707
    // (shl + conv130)
    +[ADD_u32_u32_2454_inst] (shl_2445 conv130_2423) (add77_2455)   $flowthrough 
    $delay ADD_u32_u32_2454_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 709
    // 			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 710
    // constant phi data-path element skipped phi_stmt_2458
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 712
    // ($cast ($uint<16>) div )
    # := [type_cast_2466_inst] (div_2359) (type_cast_2466_wire)    
    $buffering  $out type_cast_2466_inst type_cast_2466_wire 1
    $delay type_cast_2466_inst 1
    $phi [phi_stmt_2463] (type_cast_2466_wire) ( ix_x2_at_entry_2463 ) 
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 714
    // constant phi data-path element skipped phi_stmt_2467
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 717
    ==0? [do_while_stmt_2473_branch] (tobool_3137)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 719
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 720
    // ($cast ($uint<16>) kx_x0 )
    # := [type_cast_2478_inst] (kx_x0_2671) (type_cast_2478_wire)     $fullrate
    $buffering  $out type_cast_2478_inst type_cast_2478_wire 1
    $delay type_cast_2478_inst 1
    # $phi [phi_stmt_2475] (type_cast_2478_wire kx_x1_at_entry_2458) ( kx_x1_2475 ) $fullrate
    // $buffering  $out phi_stmt_2475 kx_x1_2475 2
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 722
    // ($cast ($uint<16>) ix_x1 )
    # := [type_cast_2483_inst] (ix_x1_2699) (type_cast_2483_wire)     $fullrate
    $buffering  $out type_cast_2483_inst type_cast_2483_wire 1
    $delay type_cast_2483_inst 1
    # := [ix_x2_at_entry_2463_2484_buf] (ix_x2_at_entry_2463) (ix_x2_at_entry_2463_2484_buffered)     $fullrate
    $buffering $out ix_x2_at_entry_2463_2484_buf ix_x2_at_entry_2463_2484_buffered  1
    # $phi [phi_stmt_2480] (type_cast_2483_wire ix_x2_at_entry_2463_2484_buffered) ( ix_x2_2480 ) $fullrate
    // $buffering  $out phi_stmt_2480 ix_x2_2480 2
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 724
    // ($cast ($uint<16>) jx_x0 )
    # := [type_cast_2488_inst] (jx_x0_2727) (type_cast_2488_wire)     $fullrate
    $buffering  $out type_cast_2488_inst type_cast_2488_wire 1
    $delay type_cast_2488_inst 1
    # $phi [phi_stmt_2485] (type_cast_2488_wire jx_x1_at_entry_2467) ( jx_x1_2485 ) $fullrate
    // $buffering  $out phi_stmt_2485 jx_x1_2485 2
    // 			conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 727
    // ($cast ($int<32>) kx_x1 )
    $S:=$U [type_cast_2493_inst] (kx_x1_2475) (type_cast_2493_wire)   $flowthrough
    $delay type_cast_2493_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
    # := [type_cast_2494_inst] (type_cast_2493_wire) (conv47_2495)     $fullrate
    $buffering  $out type_cast_2494_inst conv47_2495 1
    $delay type_cast_2494_inst 1
    // 			$volatile add := (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 728
    // (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
    +[ADD_u32_u32_2500_inst] (conv47_2495 type_cast_2499_wire_constant) (add_2501)   $flowthrough 
    $delay ADD_u32_u32_2500_inst 0
    // 			type_cast_2140_2140_delayed_2_0 := ($bitcast ($int<32>) conv31 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 729
    // ($bitcast ($int<32>) conv31 )
    # := [type_cast_2504_inst] (conv31_2363) (type_cast_2140_2140_delayed_2_0_2505)     $fullrate
    $buffering  $out type_cast_2504_inst type_cast_2140_2140_delayed_2_0_2505 2
    $delay type_cast_2504_inst 1
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 730
    // ($bitcast ($int<32>) add )
    # := [type_cast_2508_inst] (add_2501) (type_cast_2508_wire)   $flowthrough
    $delay type_cast_2508_inst 0
    // (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0)
    $S<$S[SLT_i32_u1_2510_inst] (type_cast_2508_wire type_cast_2140_2140_delayed_2_0_2505) (cmp_2511)   $flowthrough 
    $delay SLT_i32_u1_2510_inst 0
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 731
    # := [W_whilex_xbody_ifx_xthen_taken_2512_inst] (cmp_2511) (whilex_xbody_ifx_xthen_taken_2514)    $flowthrough 
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 732
    // ( ~ cmp )
    ~ [NOT_u1_u1_2517_inst] (cmp_2511) (whilex_xbody_ifx_xelse_taken_2518)   $flowthrough
    $delay NOT_u1_u1_2517_inst 0
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 733
    # := [W_ifx_xelse_exec_guard_2519_inst] (whilex_xbody_ifx_xelse_taken_2518) (ifx_xelse_exec_guard_2521)    $flowthrough 
    // 			jx_x1_2155_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 734
    # := [W_jx_x1_2155_delayed_1_0_2522_inst] (jx_x1_2485) (jx_x1_2155_delayed_1_0_2524)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 735
    // (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_2530_inst] (jx_x1_2155_delayed_1_0_2524 type_cast_2529_wire_constant) (inc_2531) $guard ( ifx_xelse_exec_guard_2521 )   $flowthrough 
    $delay ADD_u16_u16_2530_inst 0
    // 			$guard (ifx_xelse_exec_guard) conv57 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 736
    // ($cast ($int<32>) inc )
    $S:=$U [type_cast_2535_inst] (inc_2531) (type_cast_2535_wire)  $guard ( ifx_xelse_exec_guard_2521 )  $flowthrough
    $delay type_cast_2535_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
    # := [type_cast_2536_inst] (type_cast_2535_wire) (conv57_2537)  $guard ( ifx_xelse_exec_guard_2521 )    $fullrate
    $buffering  $out type_cast_2536_inst conv57_2537 1
    $delay type_cast_2536_inst 1
    // 			ifx_xelse_exec_guard_2166_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 737
    # := [W_ifx_xelse_exec_guard_2166_delayed_1_0_2538_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2166_delayed_1_0_2540)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2166_delayed_1_0) $volatile cmp64 := (conv57 == add63) $buffering 1
    //  file prog.linked.opt.aa, line 738
    // (conv57 == add63)
    ==[EQ_u32_u1_2545_inst] (conv57_2537 add63_2450) (cmp64_2546) $guard ( ifx_xelse_exec_guard_2166_delayed_1_0_2540 )   $flowthrough 
    $delay EQ_u32_u1_2545_inst 0
    // 			ifx_xelse_exec_guard_2172_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 739
    # := [W_ifx_xelse_exec_guard_2172_delayed_1_0_2547_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2172_delayed_1_0_2549)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2172_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 740
    // ($cast ($uint<16>) cmp64 )
    # := [type_cast_2553_inst] (cmp64_2546) (inc69_2554)  $guard ( ifx_xelse_exec_guard_2172_delayed_1_0_2549 )    $fullrate
    $buffering  $out type_cast_2553_inst inc69_2554 1
    $delay type_cast_2553_inst 1
    // 			ifx_xelse_exec_guard_2177_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 741
    # := [W_ifx_xelse_exec_guard_2177_delayed_2_0_2555_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2177_delayed_2_0_2557)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2177_delayed_2_0_2555_inst ifx_xelse_exec_guard_2177_delayed_2_0_2557 2
    // 			ix_x2_2180_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 742
    # := [W_ix_x2_2180_delayed_3_0_2558_inst] (ix_x2_2480) (ix_x2_2180_delayed_3_0_2560)  $cut_through    $fullrate
    $buffering  $out W_ix_x2_2180_delayed_3_0_2558_inst ix_x2_2180_delayed_3_0_2560 3
    // 			$guard (ifx_xelse_exec_guard_2177_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_2180_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 743
    // (inc69 + ix_x2_2180_delayed_3_0)
    +[ADD_u16_u16_2565_inst] (inc69_2554 ix_x2_2180_delayed_3_0_2560) (inc69x_xix_x2_2566) $guard ( ifx_xelse_exec_guard_2177_delayed_2_0_2557 )   $flowthrough 
    $delay ADD_u16_u16_2565_inst 0
    // 			ifx_xelse_exec_guard_2183_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 744
    # := [W_ifx_xelse_exec_guard_2183_delayed_1_0_2567_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2183_delayed_1_0_2569)  $cut_through    $fullrate
    // 			inc_2188_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 745
    # := [W_inc_2188_delayed_1_0_2570_inst] (inc_2531) (inc_2188_delayed_1_0_2572)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2183_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 746
    // ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 ) 
    ? [MUX_2579_inst] (cmp64_2546 type_cast_2577_wire_constant inc_2188_delayed_1_0_2572) (jx_x2_2580) $guard ( ifx_xelse_exec_guard_2183_delayed_1_0_2569 )  $flowthrough
    // 			ifx_xelse_exec_guard_2191_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 747
    # := [W_ifx_xelse_exec_guard_2191_delayed_2_0_2581_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2191_delayed_2_0_2583)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2191_delayed_2_0_2581_inst ifx_xelse_exec_guard_2191_delayed_2_0_2583 2
    // 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 748
    // ($cast ($int<32>) inc69x_xix_x2 )
    $S:=$U [type_cast_2587_inst] (inc69x_xix_x2_2566) (type_cast_2587_wire)  $guard ( ifx_xelse_exec_guard_2191_delayed_2_0_2583 )  $flowthrough
    $delay type_cast_2587_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
    # := [type_cast_2588_inst] (type_cast_2587_wire) (conv71_2589)  $guard ( ifx_xelse_exec_guard_2191_delayed_2_0_2583 )    $fullrate
    $buffering  $out type_cast_2588_inst conv71_2589 2
    $delay type_cast_2588_inst 1
    // 			ifx_xelse_exec_guard_2197_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 749
    # := [W_ifx_xelse_exec_guard_2197_delayed_3_0_2590_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2197_delayed_3_0_2592)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2197_delayed_3_0_2590_inst ifx_xelse_exec_guard_2197_delayed_3_0_2592 3
    // 			$guard (ifx_xelse_exec_guard_2197_delayed_3_0) $volatile cmp78 := (conv71 == add77) $buffering 1
    //  file prog.linked.opt.aa, line 750
    // (conv71 == add77)
    ==[EQ_u32_u1_2597_inst] (conv71_2589 add77_2455) (cmp78_2598) $guard ( ifx_xelse_exec_guard_2197_delayed_3_0_2592 )   $flowthrough 
    $delay EQ_u32_u1_2597_inst 0
    // 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 751
    # := [W_ifx_xelse_exec_guard_2204_delayed_3_0_2599_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2204_delayed_3_0_2601)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2204_delayed_3_0_2599_inst ifx_xelse_exec_guard_2204_delayed_3_0_2601 3
    // 			$volatile ifx_xelse_ifx_xthen80_taken := (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78) $buffering 1
    //  file prog.linked.opt.aa, line 752
    // (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78)
    &[AND_u1_u1_2605_inst] (ifx_xelse_exec_guard_2204_delayed_3_0_2601 cmp78_2598) (ifx_xelse_ifx_xthen80_taken_2606)   $flowthrough 
    $delay AND_u1_u1_2605_inst 0
    // 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 753
    # := [W_ifx_xelse_exec_guard_2209_delayed_3_0_2607_inst] (ifx_xelse_exec_guard_2521) (ifx_xelse_exec_guard_2209_delayed_3_0_2609)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2209_delayed_3_0_2607_inst ifx_xelse_exec_guard_2209_delayed_3_0_2609 3
    // 			$volatile ifx_xelse_ifx_xend82_taken := (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 )) $buffering 1
    //  file prog.linked.opt.aa, line 754
    // ( ~ cmp78 )
    ~ [NOT_u1_u1_2613_inst] (cmp78_2598) (NOT_u1_u1_2613_wire)   $flowthrough
    $delay NOT_u1_u1_2613_inst 0
    // (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 ))
    &[AND_u1_u1_2614_inst] (ifx_xelse_exec_guard_2209_delayed_3_0_2609 NOT_u1_u1_2613_wire) (ifx_xelse_ifx_xend82_taken_2615)   $flowthrough 
    $delay AND_u1_u1_2614_inst 0
    // 			$volatile ifx_xthen80_exec_guard := ifx_xelse_ifx_xthen80_taken $buffering 1
    //  file prog.linked.opt.aa, line 755
    # := [W_ifx_xthen80_exec_guard_2616_inst] (ifx_xelse_ifx_xthen80_taken_2606) (ifx_xthen80_exec_guard_2618)    $flowthrough 
    // 			$volatile ifx_xthen80_ifx_xend82_taken := ifx_xthen80_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 756
    # := [W_ifx_xthen80_ifx_xend82_taken_2619_inst] (ifx_xthen80_exec_guard_2618) (ifx_xthen80_ifx_xend82_taken_2621)    $flowthrough 
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 757
    # := [W_ifx_xthen_exec_guard_2622_inst] (whilex_xbody_ifx_xthen_taken_2514) (ifx_xthen_exec_guard_2624)    $flowthrough 
    // 			kx_x1_2225_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 758
    # := [W_kx_x1_2225_delayed_1_0_2625_inst] (kx_x1_2475) (kx_x1_2225_delayed_1_0_2627)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile add53 := (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 759
    // (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
    +[ADD_u16_u16_2633_inst] (kx_x1_2225_delayed_1_0_2627 type_cast_2632_wire_constant) (add53_2634) $guard ( ifx_xthen_exec_guard_2624 )   $flowthrough 
    $delay ADD_u16_u16_2633_inst 0
    // 			$volatile ifx_xthen_ifx_xend82_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 760
    # := [W_ifx_xthen_ifx_xend82_taken_2635_inst] (ifx_xthen_exec_guard_2624) (ifx_xthen_ifx_xend82_taken_2637)    $flowthrough 
    // 			ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 761
    # := [W_ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2638_inst] (ifx_xthen_ifx_xend82_taken_2637) (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2640)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2638_inst ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2640 3
    // 			$volatile ifx_xend82_exec_guard := (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 762
    // (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)
    |[OR_u1_u1_2645_inst] (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2640 ifx_xthen80_ifx_xend82_taken_2621) (OR_u1_u1_2645_wire)   $flowthrough 
    $delay OR_u1_u1_2645_inst 0
    // (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken))
    |[OR_u1_u1_2646_inst] (ifx_xelse_ifx_xend82_taken_2615 OR_u1_u1_2645_wire) (ifx_xend82_exec_guard_2647)   $flowthrough 
    $delay OR_u1_u1_2646_inst 0
    // 			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 763
    # := [W_ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2648_inst] (ifx_xthen_ifx_xend82_taken_2637) (ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2650)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2648_inst ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2650 3
    // 			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 764
    // ($bitcast ($uint<16>) add53 )
    # := [type_cast_2653_inst] (add53_2634) (type_cast_2243_2243_delayed_3_0_2654)     $fullrate
    $buffering  $out type_cast_2653_inst type_cast_2243_2243_delayed_3_0_2654 3
    $delay type_cast_2653_inst 1
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 765
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_2668_inst] (ifx_xelse_ifx_xend82_taken_2615 type_cast_2665_wire_constant type_cast_2667_wire_constant) (MUX_2668_wire)  $flowthrough
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_2669_inst] (ifx_xthen80_ifx_xend82_taken_2621 type_cast_2661_wire_constant MUX_2668_wire) (MUX_2669_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_2670_inst] (ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2650 type_cast_2243_2243_delayed_3_0_2654 MUX_2669_wire) (kx_x0_2671)  $flowthrough
    // 			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 766
    # := [W_ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2672_inst] (ifx_xthen_ifx_xend82_taken_2637) (ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2674)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2672_inst ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2674 3
    // 			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 767
    // ($bitcast ($uint<16>) ix_x2 )
    # := [type_cast_2677_inst] (ix_x2_2480) (type_cast_2261_2261_delayed_4_0_2678)     $fullrate
    $buffering  $out type_cast_2677_inst type_cast_2261_2261_delayed_4_0_2678 4
    $delay type_cast_2677_inst 1
    // 			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 768
    // ($bitcast ($uint<16>) inc69x_xix_x2 )
    # := [type_cast_2681_inst] (inc69x_xix_x2_2566) (type_cast_2264_2264_delayed_1_0_2682)     $fullrate
    $buffering  $out type_cast_2681_inst type_cast_2264_2264_delayed_1_0_2682 2
    $delay type_cast_2681_inst 1
    // 			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 769
    // ($bitcast ($uint<16>) inc69x_xix_x2 )
    # := [type_cast_2685_inst] (inc69x_xix_x2_2566) (type_cast_2267_2267_delayed_1_0_2686)     $fullrate
    $buffering  $out type_cast_2685_inst type_cast_2267_2267_delayed_1_0_2686 2
    $delay type_cast_2685_inst 1
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 770
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_2696_inst] (ifx_xelse_ifx_xend82_taken_2615 type_cast_2267_2267_delayed_1_0_2686 type_cast_2695_wire_constant) (MUX_2696_wire)  $flowthrough
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_2697_inst] (ifx_xthen80_ifx_xend82_taken_2621 type_cast_2264_2264_delayed_1_0_2682 MUX_2696_wire) (MUX_2697_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_2698_inst] (ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2674 type_cast_2261_2261_delayed_4_0_2678 MUX_2697_wire) (ix_x1_2699)  $flowthrough
    // 			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 771
    # := [W_ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2700_inst] (ifx_xthen_ifx_xend82_taken_2637) (ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2702)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2700_inst ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2702 3
    // 			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 772
    // ($bitcast ($uint<16>) jx_x1 )
    # := [type_cast_2705_inst] (jx_x1_2485) (type_cast_2277_2277_delayed_4_0_2706)     $fullrate
    $buffering  $out type_cast_2705_inst type_cast_2277_2277_delayed_4_0_2706 4
    $delay type_cast_2705_inst 1
    // 			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 773
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_2709_inst] (jx_x2_2580) (type_cast_2280_2280_delayed_2_0_2710)     $fullrate
    $buffering  $out type_cast_2709_inst type_cast_2280_2280_delayed_2_0_2710 2
    $delay type_cast_2709_inst 1
    // 			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 774
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_2713_inst] (jx_x2_2580) (type_cast_2283_2283_delayed_2_0_2714)     $fullrate
    $buffering  $out type_cast_2713_inst type_cast_2283_2283_delayed_2_0_2714 2
    $delay type_cast_2713_inst 1
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 775
    // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_2724_inst] (ifx_xelse_ifx_xend82_taken_2615 type_cast_2283_2283_delayed_2_0_2714 type_cast_2723_wire_constant) (MUX_2724_wire)  $flowthrough
    // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_2725_inst] (ifx_xthen80_ifx_xend82_taken_2621 type_cast_2280_2280_delayed_2_0_2710 MUX_2724_wire) (MUX_2725_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_2726_inst] (ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2702 type_cast_2277_2277_delayed_4_0_2706 MUX_2725_wire) (jx_x0_2727)  $flowthrough
    // 			ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 776
    # := [W_ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2728_inst] (ifx_xthen_ifx_xend82_taken_2637) (ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2730)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2728_inst ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2730 3
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 777
    // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_2746_inst] (ifx_xelse_ifx_xend82_taken_2615 type_cast_2743_wire_constant type_cast_2745_wire_constant) (MUX_2746_wire)  $flowthrough
    // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_2747_inst] (ifx_xthen80_ifx_xend82_taken_2621 type_cast_2739_wire_constant MUX_2746_wire) (MUX_2747_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_2748_inst] (ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2730 type_cast_2735_wire_constant MUX_2747_wire) (flagx_x0_2749)  $flowthrough
    // 			$guard (ifx_xend82_exec_guard) conv86173 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 778
    // ($cast ($uint<32>) kx_x0 )
    # := [type_cast_2753_inst] (kx_x0_2671) (conv86173_2754)  $guard ( ifx_xend82_exec_guard_2647 )    $fullrate
    $buffering  $out type_cast_2753_inst conv86173_2754 1
    $delay type_cast_2753_inst 1
    // 			$guard (ifx_xend82_exec_guard) conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 779
    // ($cast ($int<32>) jx_x0 )
    $S:=$U [type_cast_2758_inst] (jx_x0_2727) (type_cast_2758_wire)  $guard ( ifx_xend82_exec_guard_2647 )  $flowthrough
    $delay type_cast_2758_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
    # := [type_cast_2759_inst] (type_cast_2758_wire) (conv90_2760)  $guard ( ifx_xend82_exec_guard_2647 )    $fullrate
    $buffering  $out type_cast_2759_inst conv90_2760 1
    $delay type_cast_2759_inst 1
    // 			ifx_xend82_exec_guard_2320_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 780
    # := [W_ifx_xend82_exec_guard_2320_delayed_1_0_2761_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2320_delayed_1_0_2763)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2320_delayed_1_0) $volatile mul91 := (conv90 * conv37) $buffering 1
    //  file prog.linked.opt.aa, line 781
    // (conv90 * conv37)
    *[MUL_u32_u32_2768_inst] (conv90_2760 conv37_2371) (mul91_2769) $guard ( ifx_xend82_exec_guard_2320_delayed_1_0_2763 )   $flowthrough 
    $delay MUL_u32_u32_2768_inst 0
    // 			$guard (ifx_xend82_exec_guard) conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 782
    // ($cast ($int<32>) ix_x1 )
    $S:=$U [type_cast_2773_inst] (ix_x1_2699) (type_cast_2773_wire)  $guard ( ifx_xend82_exec_guard_2647 )  $flowthrough
    $delay type_cast_2773_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
    # := [type_cast_2774_inst] (type_cast_2773_wire) (conv96_2775)  $guard ( ifx_xend82_exec_guard_2647 )    $fullrate
    $buffering  $out type_cast_2774_inst conv96_2775 1
    $delay type_cast_2774_inst 1
    // 			ifx_xend82_exec_guard_2332_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 783
    # := [W_ifx_xend82_exec_guard_2332_delayed_1_0_2776_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2332_delayed_1_0_2778)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2332_delayed_1_0) $volatile mul97 := (conv96 * conv94) $buffering 1
    //  file prog.linked.opt.aa, line 784
    // (conv96 * conv94)
    *[MUL_u32_u32_2783_inst] (conv96_2775 conv94_2395) (mul97_2784) $guard ( ifx_xend82_exec_guard_2332_delayed_1_0_2778 )   $flowthrough 
    $delay MUL_u32_u32_2783_inst 0
    // 			ifx_xend82_exec_guard_2338_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 785
    # := [W_ifx_xend82_exec_guard_2338_delayed_1_0_2785_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2338_delayed_1_0_2787)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2338_delayed_1_0) $volatile add92 := (mul97 + conv86173) $buffering 1
    //  file prog.linked.opt.aa, line 786
    // (mul97 + conv86173)
    +[ADD_u32_u32_2792_inst] (mul97_2784 conv86173_2754) (add92_2793) $guard ( ifx_xend82_exec_guard_2338_delayed_1_0_2787 )   $flowthrough 
    $delay ADD_u32_u32_2792_inst 0
    // 			ifx_xend82_exec_guard_2344_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 787
    # := [W_ifx_xend82_exec_guard_2344_delayed_1_0_2794_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2344_delayed_1_0_2796)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2344_delayed_1_0) $volatile add98 := (add92 + mul91) $buffering 1
    //  file prog.linked.opt.aa, line 788
    // (add92 + mul91)
    +[ADD_u32_u32_2801_inst] (add92_2793 mul91_2769) (add98_2802) $guard ( ifx_xend82_exec_guard_2344_delayed_1_0_2796 )   $flowthrough 
    $delay ADD_u32_u32_2801_inst 0
    // 			ifx_xend82_exec_guard_2350_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 789
    # := [W_ifx_xend82_exec_guard_2350_delayed_1_0_2803_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2350_delayed_1_0_2805)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2350_delayed_1_0) conv99 := ($cast ($uint<16>) add98 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 790
    // ($cast ($uint<16>) add98 )
    # := [type_cast_2809_inst] (add98_2802) (conv99_2810)  $guard ( ifx_xend82_exec_guard_2350_delayed_1_0_2805 )    $fullrate
    $buffering  $out type_cast_2809_inst conv99_2810 1
    $delay type_cast_2809_inst 1
    // 			ifx_xend82_exec_guard_2355_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 791
    # := [W_ifx_xend82_exec_guard_2355_delayed_1_0_2811_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2355_delayed_1_0_2813)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2355_delayed_1_0) $volatile sub := (conv90 - conv108) $buffering 1
    //  file prog.linked.opt.aa, line 792
    // (conv90 - conv108)
    -[SUB_u32_u32_2818_inst] (conv90_2760 conv108_2399) (sub_2819) $guard ( ifx_xend82_exec_guard_2355_delayed_1_0_2813 )   $flowthrough 
    $delay SUB_u32_u32_2818_inst 0
    // 			ifx_xend82_exec_guard_2361_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 793
    # := [W_ifx_xend82_exec_guard_2361_delayed_1_0_2820_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2361_delayed_1_0_2822)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2361_delayed_1_0) $volatile mul109 := (sub * conv31) $buffering 1
    //  file prog.linked.opt.aa, line 794
    // (sub * conv31)
    *[MUL_u32_u32_2827_inst] (sub_2819 conv31_2363) (mul109_2828) $guard ( ifx_xend82_exec_guard_2361_delayed_1_0_2822 )   $flowthrough 
    $delay MUL_u32_u32_2827_inst 0
    // 			ifx_xend82_exec_guard_2367_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 795
    # := [W_ifx_xend82_exec_guard_2367_delayed_1_0_2829_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2367_delayed_1_0_2831)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2367_delayed_1_0) $volatile sub117 := (conv96 - conv108) $buffering 1
    //  file prog.linked.opt.aa, line 796
    // (conv96 - conv108)
    -[SUB_u32_u32_2836_inst] (conv96_2775 conv108_2399) (sub117_2837) $guard ( ifx_xend82_exec_guard_2367_delayed_1_0_2831 )   $flowthrough 
    $delay SUB_u32_u32_2836_inst 0
    // 			ifx_xend82_exec_guard_2373_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 797
    # := [W_ifx_xend82_exec_guard_2373_delayed_1_0_2838_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2373_delayed_1_0_2840)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2373_delayed_1_0) $volatile mul118 := (sub117 * conv112) $buffering 1
    //  file prog.linked.opt.aa, line 798
    // (sub117 * conv112)
    *[MUL_u32_u32_2845_inst] (sub117_2837 conv112_2419) (mul118_2846) $guard ( ifx_xend82_exec_guard_2373_delayed_1_0_2840 )   $flowthrough 
    $delay MUL_u32_u32_2845_inst 0
    // 			ifx_xend82_exec_guard_2379_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 799
    # := [W_ifx_xend82_exec_guard_2379_delayed_1_0_2847_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2379_delayed_1_0_2849)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2379_delayed_1_0) $volatile add110 := (mul118 + conv86173) $buffering 1
    //  file prog.linked.opt.aa, line 800
    // (mul118 + conv86173)
    +[ADD_u32_u32_2854_inst] (mul118_2846 conv86173_2754) (add110_2855) $guard ( ifx_xend82_exec_guard_2379_delayed_1_0_2849 )   $flowthrough 
    $delay ADD_u32_u32_2854_inst 0
    // 			ifx_xend82_exec_guard_2385_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 801
    # := [W_ifx_xend82_exec_guard_2385_delayed_1_0_2856_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2385_delayed_1_0_2858)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2385_delayed_1_0) $volatile add119 := (add110 + mul109) $buffering 1
    //  file prog.linked.opt.aa, line 802
    // (add110 + mul109)
    +[ADD_u32_u32_2863_inst] (add110_2855 mul109_2828) (add119_2864) $guard ( ifx_xend82_exec_guard_2385_delayed_1_0_2858 )   $flowthrough 
    $delay ADD_u32_u32_2863_inst 0
    // 			ifx_xend82_exec_guard_2391_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 803
    # := [W_ifx_xend82_exec_guard_2391_delayed_1_0_2865_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2391_delayed_1_0_2867)  $cut_through    $fullrate
    // 			type_cast_2396_2396_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 804
    // ($bitcast ($int<32>) conv108 )
    # := [type_cast_2870_inst] (conv108_2399) (type_cast_2396_2396_delayed_1_0_2871)     $fullrate
    $buffering  $out type_cast_2870_inst type_cast_2396_2396_delayed_1_0_2871 1
    $delay type_cast_2870_inst 1
    // 			$guard (ifx_xend82_exec_guard_2391_delayed_1_0) $volatile cmp125 := (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 805
    // ($bitcast ($int<32>) conv96 )
    # := [type_cast_2875_inst] (conv96_2775) (type_cast_2875_wire)  $guard ( ifx_xend82_exec_guard_2391_delayed_1_0_2867 )  $flowthrough
    $delay type_cast_2875_inst 0
    // (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0)
    $S<$S[SLT_i32_u1_2877_inst] (type_cast_2875_wire type_cast_2396_2396_delayed_1_0_2871) (cmp125_2878) $guard ( ifx_xend82_exec_guard_2391_delayed_1_0_2867 )   $flowthrough 
    $delay SLT_i32_u1_2877_inst 0
    // 			ifx_xend82_exec_guard_2399_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 806
    # := [W_ifx_xend82_exec_guard_2399_delayed_1_0_2879_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2399_delayed_1_0_2881)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2399_delayed_1_0) $volatile cmp125x_xnot := (cmp125 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 807
    // (cmp125 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2887_inst] (cmp125_2878 type_cast_2886_wire_constant) (cmp125x_xnot_2888) $guard ( ifx_xend82_exec_guard_2399_delayed_1_0_2881 )   $flowthrough 
    $delay XOR_u1_u1_2887_inst 0
    // 			ifx_xend82_exec_guard_2406_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 808
    # := [W_ifx_xend82_exec_guard_2406_delayed_1_0_2889_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2406_delayed_1_0_2891)  $cut_through    $fullrate
    // 			type_cast_2411_2411_delayed_1_0 := ($bitcast ($int<32>) add133 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 809
    // ($bitcast ($int<32>) add133 )
    # := [type_cast_2894_inst] (add133_2428) (type_cast_2411_2411_delayed_1_0_2895)     $fullrate
    $buffering  $out type_cast_2894_inst type_cast_2411_2411_delayed_1_0_2895 1
    $delay type_cast_2894_inst 1
    // 			$guard (ifx_xend82_exec_guard_2406_delayed_1_0) $volatile cmp134 := (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 810
    // ($bitcast ($int<32>) conv96 )
    # := [type_cast_2899_inst] (conv96_2775) (type_cast_2899_wire)  $guard ( ifx_xend82_exec_guard_2406_delayed_1_0_2891 )  $flowthrough
    $delay type_cast_2899_inst 0
    // (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0)
    $S<$S[SLT_i32_u1_2901_inst] (type_cast_2899_wire type_cast_2411_2411_delayed_1_0_2895) (cmp134_2902) $guard ( ifx_xend82_exec_guard_2406_delayed_1_0_2891 )   $flowthrough 
    $delay SLT_i32_u1_2901_inst 0
    // 			ifx_xend82_exec_guard_2414_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 811
    # := [W_ifx_xend82_exec_guard_2414_delayed_1_0_2903_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2414_delayed_1_0_2905)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2414_delayed_1_0) $volatile orx_xcond := (cmp125x_xnot & cmp134) $buffering 1
    //  file prog.linked.opt.aa, line 812
    // (cmp125x_xnot & cmp134)
    &[AND_u1_u1_2910_inst] (cmp125x_xnot_2888 cmp134_2902) (orx_xcond_2911) $guard ( ifx_xend82_exec_guard_2414_delayed_1_0_2905 )   $flowthrough 
    $delay AND_u1_u1_2910_inst 0
    // 			ifx_xend82_exec_guard_2420_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 813
    # := [W_ifx_xend82_exec_guard_2420_delayed_1_0_2912_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2420_delayed_1_0_2914)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2420_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 814
    // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2920_inst] (orx_xcond_2911 type_cast_2919_wire_constant) (orx_xcondx_xnot_2921) $guard ( ifx_xend82_exec_guard_2420_delayed_1_0_2914 )   $flowthrough 
    $delay XOR_u1_u1_2920_inst 0
    // 			ifx_xend82_exec_guard_2427_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 815
    # := [W_ifx_xend82_exec_guard_2427_delayed_1_0_2922_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2427_delayed_1_0_2924)  $cut_through    $fullrate
    // 			type_cast_2432_2432_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 816
    // ($bitcast ($int<32>) conv108 )
    # := [type_cast_2927_inst] (conv108_2399) (type_cast_2432_2432_delayed_1_0_2928)     $fullrate
    $buffering  $out type_cast_2927_inst type_cast_2432_2432_delayed_1_0_2928 1
    $delay type_cast_2927_inst 1
    // 			$guard (ifx_xend82_exec_guard_2427_delayed_1_0) $volatile cmp141 := (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 817
    // ($bitcast ($int<32>) conv90 )
    # := [type_cast_2932_inst] (conv90_2760) (type_cast_2932_wire)  $guard ( ifx_xend82_exec_guard_2427_delayed_1_0_2924 )  $flowthrough
    $delay type_cast_2932_inst 0
    // (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0)
    $S<$S[SLT_i32_u1_2934_inst] (type_cast_2932_wire type_cast_2432_2432_delayed_1_0_2928) (cmp141_2935) $guard ( ifx_xend82_exec_guard_2427_delayed_1_0_2924 )   $flowthrough 
    $delay SLT_i32_u1_2934_inst 0
    // 			ifx_xend82_exec_guard_2435_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 818
    # := [W_ifx_xend82_exec_guard_2435_delayed_1_0_2936_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2435_delayed_1_0_2938)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2435_delayed_1_0) $volatile orx_xcond178 := (orx_xcondx_xnot | cmp141) $buffering 1
    //  file prog.linked.opt.aa, line 819
    // (orx_xcondx_xnot | cmp141)
    |[OR_u1_u1_2943_inst] (orx_xcondx_xnot_2921 cmp141_2935) (orx_xcond178_2944) $guard ( ifx_xend82_exec_guard_2435_delayed_1_0_2938 )   $flowthrough 
    $delay OR_u1_u1_2943_inst 0
    // 			ifx_xend82_exec_guard_2441_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 820
    # := [W_ifx_xend82_exec_guard_2441_delayed_1_0_2945_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2441_delayed_1_0_2947)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2441_delayed_1_0) $volatile orx_xcond178x_xnot := (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 821
    // (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_2953_inst] (orx_xcond178_2944 type_cast_2952_wire_constant) (orx_xcond178x_xnot_2954) $guard ( ifx_xend82_exec_guard_2441_delayed_1_0_2947 )   $flowthrough 
    $delay XOR_u1_u1_2953_inst 0
    // 			ifx_xend82_exec_guard_2448_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 822
    # := [W_ifx_xend82_exec_guard_2448_delayed_1_0_2955_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2448_delayed_1_0_2957)  $cut_through    $fullrate
    // 			type_cast_2453_2453_delayed_1_0 := ($bitcast ($int<32>) add151 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 823
    // ($bitcast ($int<32>) add151 )
    # := [type_cast_2960_inst] (add151_2439) (type_cast_2453_2453_delayed_1_0_2961)     $fullrate
    $buffering  $out type_cast_2960_inst type_cast_2453_2453_delayed_1_0_2961 1
    $delay type_cast_2960_inst 1
    // 			$guard (ifx_xend82_exec_guard_2448_delayed_1_0) $volatile cmp152 := (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 824
    // ($bitcast ($int<32>) conv90 )
    # := [type_cast_2965_inst] (conv90_2760) (type_cast_2965_wire)  $guard ( ifx_xend82_exec_guard_2448_delayed_1_0_2957 )  $flowthrough
    $delay type_cast_2965_inst 0
    // (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0)
    $S<$S[SLT_i32_u1_2967_inst] (type_cast_2965_wire type_cast_2453_2453_delayed_1_0_2961) (cmp152_2968) $guard ( ifx_xend82_exec_guard_2448_delayed_1_0_2957 )   $flowthrough 
    $delay SLT_i32_u1_2967_inst 0
    // 			ifx_xend82_exec_guard_2456_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 825
    # := [W_ifx_xend82_exec_guard_2456_delayed_1_0_2969_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2456_delayed_1_0_2971)  $cut_through    $fullrate
    // 			$guard (ifx_xend82_exec_guard_2456_delayed_1_0) $volatile orx_xcond179 := (orx_xcond178x_xnot & cmp152) $buffering 1
    //  file prog.linked.opt.aa, line 826
    // (orx_xcond178x_xnot & cmp152)
    &[AND_u1_u1_2976_inst] (orx_xcond178x_xnot_2954 cmp152_2968) (orx_xcond179_2977) $guard ( ifx_xend82_exec_guard_2456_delayed_1_0_2971 )   $flowthrough 
    $delay AND_u1_u1_2976_inst 0
    // 			ifx_xend82_exec_guard_2463_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 827
    # := [W_ifx_xend82_exec_guard_2463_delayed_1_0_2978_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2463_delayed_1_0_2980)  $cut_through    $fullrate
    // 			$volatile ifx_xend82_ifx_xelse157_taken := (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179) $buffering 1
    //  file prog.linked.opt.aa, line 828
    // (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179)
    &[AND_u1_u1_2984_inst] (ifx_xend82_exec_guard_2463_delayed_1_0_2980 orx_xcond179_2977) (ifx_xend82_ifx_xelse157_taken_2985)   $flowthrough 
    $delay AND_u1_u1_2984_inst 0
    // 			ifx_xend82_exec_guard_2468_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 829
    # := [W_ifx_xend82_exec_guard_2468_delayed_1_0_2986_inst] (ifx_xend82_exec_guard_2647) (ifx_xend82_exec_guard_2468_delayed_1_0_2988)  $cut_through    $fullrate
    // 			$volatile ifx_xend82_ifx_xthen154_taken := (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 )) $buffering 1
    //  file prog.linked.opt.aa, line 830
    // ( ~ orx_xcond179 )
    ~ [NOT_u1_u1_2992_inst] (orx_xcond179_2977) (NOT_u1_u1_2992_wire)   $flowthrough
    $delay NOT_u1_u1_2992_inst 0
    // (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 ))
    &[AND_u1_u1_2993_inst] (ifx_xend82_exec_guard_2468_delayed_1_0_2988 NOT_u1_u1_2992_wire) (ifx_xend82_ifx_xthen154_taken_2994)   $flowthrough 
    $delay AND_u1_u1_2993_inst 0
    // 			$volatile ifx_xthen154_exec_guard := ifx_xend82_ifx_xthen154_taken $buffering 1
    //  file prog.linked.opt.aa, line 831
    # := [W_ifx_xthen154_exec_guard_2995_inst] (ifx_xend82_ifx_xthen154_taken_2994) (ifx_xthen154_exec_guard_2997)    $flowthrough 
    // 			ifx_xthen154_exec_guard_2476_delayed_1_0 := ifx_xthen154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 832
    # := [W_ifx_xthen154_exec_guard_2476_delayed_1_0_2998_inst] (ifx_xthen154_exec_guard_2997) (ifx_xthen154_exec_guard_2476_delayed_1_0_3000)  $cut_through    $fullrate
    // 			$guard (ifx_xthen154_exec_guard_2476_delayed_1_0) conv156 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 833
    // ($cast ($int<32>) conv99 )
    $S:=$U [type_cast_3004_inst] (conv99_2810) (type_cast_3004_wire)  $guard ( ifx_xthen154_exec_guard_2476_delayed_1_0_3000 )  $flowthrough
    $delay type_cast_3004_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
    # := [type_cast_3005_inst] (type_cast_3004_wire) (conv156_3006)  $guard ( ifx_xthen154_exec_guard_2476_delayed_1_0_3000 )    $fullrate
    $buffering  $out type_cast_3005_inst conv156_3006 1
    $delay type_cast_3005_inst 1
    // 			ifx_xthen154_exec_guard_2482_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 834
    # := [W_ifx_xthen154_exec_guard_2482_delayed_2_0_3007_inst] (ifx_xthen154_exec_guard_2997) (ifx_xthen154_exec_guard_2482_delayed_2_0_3009)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen154_exec_guard_2482_delayed_2_0_3007_inst ifx_xthen154_exec_guard_2482_delayed_2_0_3009 2
    // 			$guard (ifx_xthen154_exec_guard_2482_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 835
    // ($bitcast ($int<32>) conv156 )
    # := [type_cast_3013_inst] (conv156_3006) (type_cast_3013_wire)  $guard ( ifx_xthen154_exec_guard_2482_delayed_2_0_3009 )  $flowthrough
    $delay type_cast_3013_inst 0
    // (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_3017_inst] (type_cast_3013_wire type_cast_3016_wire_constant) (ASHR_i32_i32_3017_wire) $guard ( ifx_xthen154_exec_guard_2482_delayed_2_0_3009 )   $flowthrough 
    $delay ASHR_i32_i32_3017_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_3018_inst] (ASHR_i32_i32_3017_wire) (shr_3019)  $guard ( ifx_xthen154_exec_guard_2482_delayed_2_0_3009 )  $flowthrough
    $delay type_cast_3018_inst 0
    // 			ifx_xthen154_exec_guard_2492_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 836
    # := [W_ifx_xthen154_exec_guard_2492_delayed_2_0_3020_inst] (ifx_xthen154_exec_guard_2997) (ifx_xthen154_exec_guard_2492_delayed_2_0_3022)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen154_exec_guard_2492_delayed_2_0_3020_inst ifx_xthen154_exec_guard_2492_delayed_2_0_3022 2
    // 			$guard (ifx_xthen154_exec_guard_2492_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 837
    // ($cast ($int<64>) shr )
    $S:=$U [type_cast_3026_inst] (shr_3019) (type_cast_3026_wire)  $guard ( ifx_xthen154_exec_guard_2492_delayed_2_0_3022 )  $flowthrough
    $delay type_cast_3026_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
    # := [type_cast_3027_inst] (type_cast_3026_wire) (idxprom_3028)  $guard ( ifx_xthen154_exec_guard_2492_delayed_2_0_3022 )    $fullrate
    $buffering  $out type_cast_3027_inst idxprom_3028 1
    $delay type_cast_3027_inst 1
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 838
    &/ [array_obj_ref_3033_index_1_resize] (idxprom_3028) (R_idxprom_3032_resized) 
    $flowthrough 
    &/ [array_obj_ref_3033_index_1_rename] (R_idxprom_3032_resized) (R_idxprom_3032_scaled) 
    $flowthrough 
    +[array_obj_ref_3033_index_offset] (R_idxprom_3032_scaled array_obj_ref_3033_constant_part_of_offset) (array_obj_ref_3033_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3033_index_offset R_idxprom_3032_scaled 2
    $buffering  $in array_obj_ref_3033_index_offset array_obj_ref_3033_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3033_index_offset array_obj_ref_3033_final_offset 2
    $delay array_obj_ref_3033_index_offset 2
    &/ [array_obj_ref_3033_root_address_inst] (array_obj_ref_3033_final_offset) (array_obj_ref_3033_root_address) 
    $flowthrough 
    # := [addr_of_3034_final_reg] (array_obj_ref_3033_root_address) (arrayidx_3035)     $fullrate
    $buffering  $out addr_of_3034_final_reg arrayidx_3035 1
    // 			$guard (ifx_xthen154_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 839
    // ->(arrayidx)
    &/ [ptr_deref_3038_base_resize] (arrayidx_3035) (ptr_deref_3038_resized_base_address) $guard ( ifx_xthen154_exec_guard_2997 ) 
    $flowthrough 
    &/ [ptr_deref_3038_root_address_inst] (ptr_deref_3038_resized_base_address) (ptr_deref_3038_root_address) $guard ( ifx_xthen154_exec_guard_2997 ) 
    $flowthrough 
    &/ [ptr_deref_3038_addr_0] (ptr_deref_3038_root_address) (ptr_deref_3038_word_address_0) $guard ( ifx_xthen154_exec_guard_2997 ) 
    $flowthrough 
    $store [ptr_deref_3038_store_0] $to memory_space_0 (ptr_deref_3038_word_address_0 ptr_deref_3038_data_0) $guard ( ifx_xthen154_exec_guard_2997 ) 
    $buffering  $in ptr_deref_3038_store_0 ptr_deref_3038_word_address_0 2
    $buffering  $in ptr_deref_3038_store_0 ptr_deref_3038_data_0 2
    $delay ptr_deref_3038_store_0 6
    &/ [ptr_deref_3038_gather_scatter] (type_cast_3040_wire_constant) (ptr_deref_3038_data_0) $guard ( ifx_xthen154_exec_guard_2997 ) 
    $flowthrough 
    // 			$volatile ifx_xelse157_exec_guard := ifx_xend82_ifx_xelse157_taken $buffering 1
    //  file prog.linked.opt.aa, line 840
    # := [W_ifx_xelse157_exec_guard_3042_inst] (ifx_xend82_ifx_xelse157_taken_2985) (ifx_xelse157_exec_guard_3044)    $flowthrough 
    // 			$guard (ifx_xelse157_exec_guard) $volatile sext176 := (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 841
    // (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_3050_inst] (add119_2864 type_cast_3049_wire_constant) (sext176_3051) $guard ( ifx_xelse157_exec_guard_3044 )   $flowthrough 
    $delay SHL_u32_u32_3050_inst 0
    // 			$guard (ifx_xelse157_exec_guard) $volatile shr160 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 842
    // ($bitcast ($int<32>) sext176 )
    # := [type_cast_3055_inst] (sext176_3051) (type_cast_3055_wire)  $guard ( ifx_xelse157_exec_guard_3044 )  $flowthrough
    $delay type_cast_3055_inst 0
    // (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $S>>[ASHR_i32_i32_3059_inst] (type_cast_3055_wire type_cast_3058_wire_constant) (ASHR_i32_i32_3059_wire) $guard ( ifx_xelse157_exec_guard_3044 )   $flowthrough 
    $delay ASHR_i32_i32_3059_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
    # := [type_cast_3060_inst] (ASHR_i32_i32_3059_wire) (shr160_3061)  $guard ( ifx_xelse157_exec_guard_3044 )  $flowthrough
    $delay type_cast_3060_inst 0
    // 			$guard (ifx_xelse157_exec_guard) idxprom161 := ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 843
    // ($cast ($int<64>) shr160 )
    $S:=$U [type_cast_3065_inst] (shr160_3061) (type_cast_3065_wire)  $guard ( ifx_xelse157_exec_guard_3044 )  $flowthrough
    $delay type_cast_3065_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) )
    # := [type_cast_3066_inst] (type_cast_3065_wire) (idxprom161_3067)  $guard ( ifx_xelse157_exec_guard_3044 )    $fullrate
    $buffering  $out type_cast_3066_inst idxprom161_3067 1
    $delay type_cast_3066_inst 1
    // 			arrayidx162 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 844
    &/ [array_obj_ref_3072_index_1_resize] (idxprom161_3067) (R_idxprom161_3071_resized) 
    $flowthrough 
    &/ [array_obj_ref_3072_index_1_rename] (R_idxprom161_3071_resized) (R_idxprom161_3071_scaled) 
    $flowthrough 
    +[array_obj_ref_3072_index_offset] (R_idxprom161_3071_scaled array_obj_ref_3072_constant_part_of_offset) (array_obj_ref_3072_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3072_index_offset R_idxprom161_3071_scaled 2
    $buffering  $in array_obj_ref_3072_index_offset array_obj_ref_3072_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3072_index_offset array_obj_ref_3072_final_offset 2
    $delay array_obj_ref_3072_index_offset 2
    &/ [array_obj_ref_3072_root_address_inst] (array_obj_ref_3072_final_offset) (array_obj_ref_3072_root_address) 
    $flowthrough 
    # := [addr_of_3073_final_reg] (array_obj_ref_3072_root_address) (arrayidx162_3074)     $fullrate
    $buffering  $out addr_of_3073_final_reg arrayidx162_3074 1
    // 			ifx_xelse157_exec_guard_2544_delayed_8_0 := ifx_xelse157_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 845
    # := [W_ifx_xelse157_exec_guard_2544_delayed_8_0_3075_inst] (ifx_xelse157_exec_guard_3044) (ifx_xelse157_exec_guard_2544_delayed_8_0_3077)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse157_exec_guard_2544_delayed_8_0_3075_inst ifx_xelse157_exec_guard_2544_delayed_8_0_3077 8
    // 			$guard (ifx_xelse157_exec_guard_2544_delayed_8_0) tmp163 := ->(arrayidx162) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 846
    // ->(arrayidx162)
    &/ [ptr_deref_3081_base_resize] (arrayidx162_3074) (ptr_deref_3081_resized_base_address) $guard ( ifx_xelse157_exec_guard_2544_delayed_8_0_3077 ) 
    $flowthrough 
    &/ [ptr_deref_3081_root_address_inst] (ptr_deref_3081_resized_base_address) (ptr_deref_3081_root_address) $guard ( ifx_xelse157_exec_guard_2544_delayed_8_0_3077 ) 
    $flowthrough 
    &/ [ptr_deref_3081_addr_0] (ptr_deref_3081_root_address) (ptr_deref_3081_word_address_0) $guard ( ifx_xelse157_exec_guard_2544_delayed_8_0_3077 ) 
    $flowthrough 
    $load [ptr_deref_3081_load_0] $from memory_space_1 (ptr_deref_3081_word_address_0) (ptr_deref_3081_data_0) $guard ( ifx_xelse157_exec_guard_2544_delayed_8_0_3077 ) 
    $buffering  $in ptr_deref_3081_load_0 ptr_deref_3081_word_address_0 2
    $buffering  $out ptr_deref_3081_load_0 ptr_deref_3081_data_0 2
    $delay ptr_deref_3081_load_0 6
    &/ [ptr_deref_3081_gather_scatter] (ptr_deref_3081_data_0) (tmp163_3082) $guard ( ifx_xelse157_exec_guard_2544_delayed_8_0_3077 ) 
    $flowthrough 
    // 			ifx_xelse157_exec_guard_2549_delayed_1_0 := ifx_xelse157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 847
    # := [W_ifx_xelse157_exec_guard_2549_delayed_1_0_3083_inst] (ifx_xelse157_exec_guard_3044) (ifx_xelse157_exec_guard_2549_delayed_1_0_3085)  $cut_through    $fullrate
    // 			$guard (ifx_xelse157_exec_guard_2549_delayed_1_0) conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 848
    // ($cast ($int<32>) conv99 )
    $S:=$U [type_cast_3089_inst] (conv99_2810) (type_cast_3089_wire)  $guard ( ifx_xelse157_exec_guard_2549_delayed_1_0_3085 )  $flowthrough
    $delay type_cast_3089_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
    # := [type_cast_3090_inst] (type_cast_3089_wire) (conv165_3091)  $guard ( ifx_xelse157_exec_guard_2549_delayed_1_0_3085 )    $fullrate
    $buffering  $out type_cast_3090_inst conv165_3091 1
    $delay type_cast_3090_inst 1
    // 			ifx_xelse157_exec_guard_2555_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 849
    # := [W_ifx_xelse157_exec_guard_2555_delayed_2_0_3092_inst] (ifx_xelse157_exec_guard_3044) (ifx_xelse157_exec_guard_2555_delayed_2_0_3094)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse157_exec_guard_2555_delayed_2_0_3092_inst ifx_xelse157_exec_guard_2555_delayed_2_0_3094 2
    // 			$guard (ifx_xelse157_exec_guard_2555_delayed_2_0) $volatile shr166 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 850
    // ($bitcast ($int<32>) conv165 )
    # := [type_cast_3098_inst] (conv165_3091) (type_cast_3098_wire)  $guard ( ifx_xelse157_exec_guard_2555_delayed_2_0_3094 )  $flowthrough
    $delay type_cast_3098_inst 0
    // (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_3102_inst] (type_cast_3098_wire type_cast_3101_wire_constant) (ASHR_i32_i32_3102_wire) $guard ( ifx_xelse157_exec_guard_2555_delayed_2_0_3094 )   $flowthrough 
    $delay ASHR_i32_i32_3102_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_3103_inst] (ASHR_i32_i32_3102_wire) (shr166_3104)  $guard ( ifx_xelse157_exec_guard_2555_delayed_2_0_3094 )  $flowthrough
    $delay type_cast_3103_inst 0
    // 			ifx_xelse157_exec_guard_2565_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 851
    # := [W_ifx_xelse157_exec_guard_2565_delayed_2_0_3105_inst] (ifx_xelse157_exec_guard_3044) (ifx_xelse157_exec_guard_2565_delayed_2_0_3107)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse157_exec_guard_2565_delayed_2_0_3105_inst ifx_xelse157_exec_guard_2565_delayed_2_0_3107 2
    // 			$guard (ifx_xelse157_exec_guard_2565_delayed_2_0) idxprom167 := ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 852
    // ($cast ($int<64>) shr166 )
    $S:=$U [type_cast_3111_inst] (shr166_3104) (type_cast_3111_wire)  $guard ( ifx_xelse157_exec_guard_2565_delayed_2_0_3107 )  $flowthrough
    $delay type_cast_3111_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) )
    # := [type_cast_3112_inst] (type_cast_3111_wire) (idxprom167_3113)  $guard ( ifx_xelse157_exec_guard_2565_delayed_2_0_3107 )    $fullrate
    $buffering  $out type_cast_3112_inst idxprom167_3113 1
    $delay type_cast_3112_inst 1
    // 			arrayidx168 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 853
    &/ [array_obj_ref_3118_index_1_resize] (idxprom167_3113) (R_idxprom167_3117_resized) 
    $flowthrough 
    &/ [array_obj_ref_3118_index_1_rename] (R_idxprom167_3117_resized) (R_idxprom167_3117_scaled) 
    $flowthrough 
    +[array_obj_ref_3118_index_offset] (R_idxprom167_3117_scaled array_obj_ref_3118_constant_part_of_offset) (array_obj_ref_3118_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3118_index_offset R_idxprom167_3117_scaled 2
    $buffering  $in array_obj_ref_3118_index_offset array_obj_ref_3118_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3118_index_offset array_obj_ref_3118_final_offset 2
    $delay array_obj_ref_3118_index_offset 2
    &/ [array_obj_ref_3118_root_address_inst] (array_obj_ref_3118_final_offset) (array_obj_ref_3118_root_address) 
    $flowthrough 
    # := [addr_of_3119_final_reg] (array_obj_ref_3118_root_address) (arrayidx168_3120)     $fullrate
    $buffering  $out addr_of_3119_final_reg arrayidx168_3120 1
    // 			ifx_xelse157_exec_guard_2578_delayed_14_0 := ifx_xelse157_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 854
    # := [W_ifx_xelse157_exec_guard_2578_delayed_14_0_3121_inst] (ifx_xelse157_exec_guard_3044) (ifx_xelse157_exec_guard_2578_delayed_14_0_3123)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse157_exec_guard_2578_delayed_14_0_3121_inst ifx_xelse157_exec_guard_2578_delayed_14_0_3123 14
    // 			arrayidx168_2579_delayed_4_0 := arrayidx168 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 855
    # := [W_arrayidx168_2579_delayed_4_0_3124_inst] (arrayidx168_3120) (arrayidx168_2579_delayed_4_0_3126)  $cut_through    $fullrate
    $buffering  $out W_arrayidx168_2579_delayed_4_0_3124_inst arrayidx168_2579_delayed_4_0_3126 4
    // 			$guard (ifx_xelse157_exec_guard_2578_delayed_14_0) ->(arrayidx168_2579_delayed_4_0) := tmp163 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 856
    // ->(arrayidx168_2579_delayed_4_0)
    &/ [ptr_deref_3129_base_resize] (arrayidx168_2579_delayed_4_0_3126) (ptr_deref_3129_resized_base_address) $guard ( ifx_xelse157_exec_guard_2578_delayed_14_0_3123 ) 
    $flowthrough 
    &/ [ptr_deref_3129_root_address_inst] (ptr_deref_3129_resized_base_address) (ptr_deref_3129_root_address) $guard ( ifx_xelse157_exec_guard_2578_delayed_14_0_3123 ) 
    $flowthrough 
    &/ [ptr_deref_3129_addr_0] (ptr_deref_3129_root_address) (ptr_deref_3129_word_address_0) $guard ( ifx_xelse157_exec_guard_2578_delayed_14_0_3123 ) 
    $flowthrough 
    $store [ptr_deref_3129_store_0] $to memory_space_0 (ptr_deref_3129_word_address_0 ptr_deref_3129_data_0) $guard ( ifx_xelse157_exec_guard_2578_delayed_14_0_3123 ) 
    $buffering  $in ptr_deref_3129_store_0 ptr_deref_3129_word_address_0 2
    $buffering  $in ptr_deref_3129_store_0 ptr_deref_3129_data_0 2
    $delay ptr_deref_3129_store_0 6
    &/ [ptr_deref_3129_gather_scatter] (tmp163_3082) (ptr_deref_3129_data_0) $guard ( ifx_xelse157_exec_guard_2578_delayed_14_0_3123 ) 
    $flowthrough 
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 857
    // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_3136_inst] (flagx_x0_2749 type_cast_3135_wire_constant) (tobool_3137)   $flowthrough 
    $delay EQ_u16_u1_3136_inst 0
    // 			$volatile ifx_xend169_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 858
    // ( ~ tobool )
    ~ [NOT_u1_u1_3140_inst] (tobool_3137) (ifx_xend169_whilex_xend_taken_3141)   $flowthrough
    $delay NOT_u1_u1_3140_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 118164344
    ==0? [if_stmt_3144_branch] (ifx_xend169_whilex_xend_taken_3141)
    // 		Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 866
    // Block2_complete
    $ioport $out [WPIPE_Block2_complete_3150_inst]  (type_cast_3152_wire_constant) (Block2_complete) 
  }
  // end data-path
  // 		call := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 680
  // Block2_starting
  RPIPE_Block2_starting_2329_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2329_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2329_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2329_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2329_Update/ca)
  // 		call1 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 681
  // Block2_starting
  RPIPE_Block2_starting_2332_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2332_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2332_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2332_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2332_Update/ca)
  // 		call2 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 682
  // Block2_starting
  RPIPE_Block2_starting_2335_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2335_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2335_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2335_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2335_Update/ca)
  // 		call3 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 683
  // Block2_starting
  RPIPE_Block2_starting_2338_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2338_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2338_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2338_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2338_Update/ca)
  // 		call4 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 684
  // Block2_starting
  RPIPE_Block2_starting_2341_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2341_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2341_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2341_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2341_Update/ca)
  // 		call5 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 685
  // Block2_starting
  RPIPE_Block2_starting_2344_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2344_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2344_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2344_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2344_Update/ca)
  // 		call6 := Block2_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 686
  // Block2_starting
  RPIPE_Block2_starting_2347_inst <=> (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2347_Sample/rr branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2347_Update/cr) (branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2347_Sample/ra branch_block_stmt_2327/assign_stmt_2330_to_assign_stmt_2348/RPIPE_Block2_starting_2347_Update/ca)
  // 		conv := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 688
  // call
  // ($cast ($uint<16>) call )
  type_cast_2352_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2352_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2352_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2352_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2352_Update/ca)
  // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 689
  // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
  // conv
  // 		conv31 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 690
  // call2
  // ($cast ($uint<32>) call2 )
  type_cast_2362_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2362_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2362_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2362_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2362_Update/ca)
  // 		conv33 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 691
  // call1
  // ($cast ($uint<32>) call1 )
  type_cast_2366_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2366_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2366_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2366_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2366_Update/ca)
  // 		conv37 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 692
  // call5
  // ($cast ($uint<32>) call5 )
  type_cast_2370_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2370_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2370_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2370_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2370_Update/ca)
  // 		conv39 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 693
  // call4
  // ($cast ($uint<32>) call4 )
  type_cast_2374_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2374_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2374_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2374_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2374_Update/ca)
  // 		$volatile mul40 := (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 694
  // (conv39 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv39
  // 		$volatile sext := (mul40 * conv37) $buffering 1
  //  file prog.linked.opt.aa, line 695
  // (mul40 * conv37)
  // mul40
  // conv37
  // 		$volatile conv94 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 696
  // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext
  // 		conv108 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 697
  // call6
  // ($cast ($uint<32>) call6 )
  type_cast_2398_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2398_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2398_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2398_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2398_Update/ca)
  // 		$volatile mul := (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 698
  // (conv33 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv33
  // 		$volatile sext174 := (mul * conv31) $buffering 1
  //  file prog.linked.opt.aa, line 699
  // (mul * conv31)
  // mul
  // conv31
  // 		$volatile conv112 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 700
  // (($bitcast ($int<32>) sext174 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext174
  // 		conv130 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 701
  // call
  // ($cast ($uint<32>) call )
  type_cast_2422_inst <=> (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2422_Sample/rr branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2422_Update/cr) (branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2422_Sample/ra branch_block_stmt_2327/assign_stmt_2353_to_assign_stmt_2455/type_cast_2422_Update/ca)
  // 		$volatile add133 := (conv108 + conv130) $buffering 1
  //  file prog.linked.opt.aa, line 702
  // (conv108 + conv130)
  // conv108
  // conv130
  // 		$volatile div148 := (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 703
  // (conv33 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv33
  // 		$volatile add151 := (conv108 + div148) $buffering 1
  //  file prog.linked.opt.aa, line 704
  // (conv108 + div148)
  // conv108
  // div148
  // 		$volatile shl := (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 705
  // (conv108 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv108
  // 		$volatile add63 := (shl + div148) $buffering 1
  //  file prog.linked.opt.aa, line 706
  // (shl + div148)
  // shl
  // div148
  // 		$volatile add77 := (shl + conv130) $buffering 1
  //  file prog.linked.opt.aa, line 707
  // (shl + conv130)
  // shl
  // conv130
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 709
  // In merge, skipped links for constant phi phi_stmt_2458
  // ($cast ($uint<16>) div )
  type_cast_2466_inst <=> (branch_block_stmt_2327/entry_whilex_xbody_PhiReq/phi_stmt_2463/phi_stmt_2463_sources/type_cast_2466/SplitProtocol/Sample/rr branch_block_stmt_2327/entry_whilex_xbody_PhiReq/phi_stmt_2463/phi_stmt_2463_sources/type_cast_2466/SplitProtocol/Update/cr) (branch_block_stmt_2327/entry_whilex_xbody_PhiReq/phi_stmt_2463/phi_stmt_2463_sources/type_cast_2466/SplitProtocol/Sample/ra branch_block_stmt_2327/entry_whilex_xbody_PhiReq/phi_stmt_2463/phi_stmt_2463_sources/type_cast_2466/SplitProtocol/Update/ca)
  phi_stmt_2463 <=> (branch_block_stmt_2327/entry_whilex_xbody_PhiReq/phi_stmt_2463/phi_stmt_2463_req) (branch_block_stmt_2327/merge_stmt_2457_PhiAck/phi_stmt_2463_ack)
  // In merge, skipped links for constant phi phi_stmt_2467
  // CP-DP links for do-while  do_while_stmt_2473
  //  file prog.linked.opt.aa, line 717
  phi_stmt_2475 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2475_loopback_sample_req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2475_entry_sample_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2475_phi_mux_ack)
  // kx_x0
  // ($cast ($uint<16>) kx_x0 )
  type_cast_2478_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2478_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2478_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2478_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2478_Update/ca)
  phi_stmt_2480 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2480_loopback_sample_req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2480_entry_sample_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2480_phi_mux_ack)
  // ix_x1
  // ($cast ($uint<16>) ix_x1 )
  type_cast_2483_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2483_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2483_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2483_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2483_Update/ca)
  ix_x2_at_entry_2463_2484_buf <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/R_ix_x2_at_entry_2484_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/R_ix_x2_at_entry_2484_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/R_ix_x2_at_entry_2484_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/R_ix_x2_at_entry_2484_Update/ack)
  phi_stmt_2485 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2485_loopback_sample_req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2485_entry_sample_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/phi_stmt_2485_phi_mux_ack)
  // jx_x0
  // ($cast ($uint<16>) jx_x0 )
  type_cast_2488_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2488_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2488_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2488_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2488_Update/ca)
  // 			conv47 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 727
  // kx_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
  type_cast_2494_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2494_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2494_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2494_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2494_Update/ca)
  // 			$volatile add := (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 728
  // (conv47 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
  // conv47
  // 			type_cast_2140_2140_delayed_2_0 := ($bitcast ($int<32>) conv31 ) $buffering 2 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 729
  // conv31
  // ($bitcast ($int<32>) conv31 )
  type_cast_2504_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2504_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2504_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2504_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2504_Update/ca)
  // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0) $buffering 1
  //  file prog.linked.opt.aa, line 730
  // (($bitcast ($int<32>) add ) < type_cast_2140_2140_delayed_2_0)
  // add
  // type_cast_2140_2140_delayed_2_0
  // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
  //  file prog.linked.opt.aa, line 731
  // cmp
  // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
  //  file prog.linked.opt.aa, line 732
  // cmp
  // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
  //  file prog.linked.opt.aa, line 733
  // whilex_xbody_ifx_xelse_taken
  // 			jx_x1_2155_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 734
  // jx_x1
  W_jx_x1_2155_delayed_1_0_2522_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2524_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2524_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2524_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2524_Update/ack)
  // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 735
  // (jx_x1_2155_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // jx_x1_2155_delayed_1_0
  // 			$guard (ifx_xelse_exec_guard) conv57 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 736
  // inc
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
  type_cast_2536_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2536_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2536_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2536_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2536_Update/ca)
  // 			ifx_xelse_exec_guard_2166_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 737
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2166_delayed_1_0_2538_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2540_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2540_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2540_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2540_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2166_delayed_1_0) $volatile cmp64 := (conv57 == add63) $buffering 1
  //  file prog.linked.opt.aa, line 738
  // (conv57 == add63)
  // conv57
  // add63
  // 			ifx_xelse_exec_guard_2172_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 739
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2172_delayed_1_0_2547_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2549_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2549_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2549_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2549_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2172_delayed_1_0) inc69 := ($cast ($uint<16>) cmp64 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 740
  // cmp64
  // ($cast ($uint<16>) cmp64 )
  type_cast_2553_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2553_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2553_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2553_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2553_Update/ca)
  // 			ifx_xelse_exec_guard_2177_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 741
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2177_delayed_2_0_2555_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2557_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2557_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2557_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2557_Update/ack)
  // 			ix_x2_2180_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 742
  // ix_x2
  W_ix_x2_2180_delayed_3_0_2558_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2560_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2560_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2560_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2560_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2177_delayed_2_0) $volatile inc69x_xix_x2 := (inc69 + ix_x2_2180_delayed_3_0) $buffering 1
  //  file prog.linked.opt.aa, line 743
  // (inc69 + ix_x2_2180_delayed_3_0)
  // inc69
  // ix_x2_2180_delayed_3_0
  // 			ifx_xelse_exec_guard_2183_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 744
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2183_delayed_1_0_2567_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2569_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2569_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2569_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2569_Update/ack)
  // 			inc_2188_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 745
  // inc
  W_inc_2188_delayed_1_0_2570_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2572_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2572_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2572_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2572_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2183_delayed_1_0) $volatile jx_x2 := ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 )  $buffering 1
  //  file prog.linked.opt.aa, line 746
  // cmp64
  // inc_2188_delayed_1_0
  // ( $mux cmp64 ($bitcast ($uint<16>) _b0000000000000000  )  inc_2188_delayed_1_0 ) 
  // 			ifx_xelse_exec_guard_2191_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 747
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2191_delayed_2_0_2581_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2583_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2583_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2583_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2583_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2191_delayed_2_0) conv71 := ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 748
  // inc69x_xix_x2
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc69x_xix_x2 ) )
  type_cast_2588_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2588_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2588_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2588_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2588_Update/ca)
  // 			ifx_xelse_exec_guard_2197_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 749
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2197_delayed_3_0_2590_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2592_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2592_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2592_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2592_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2197_delayed_3_0) $volatile cmp78 := (conv71 == add77) $buffering 1
  //  file prog.linked.opt.aa, line 750
  // (conv71 == add77)
  // conv71
  // add77
  // 			ifx_xelse_exec_guard_2204_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 751
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2204_delayed_3_0_2599_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2601_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2601_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2601_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2601_Update/ack)
  // 			$volatile ifx_xelse_ifx_xthen80_taken := (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78) $buffering 1
  //  file prog.linked.opt.aa, line 752
  // (ifx_xelse_exec_guard_2204_delayed_3_0 & cmp78)
  // ifx_xelse_exec_guard_2204_delayed_3_0
  // cmp78
  // 			ifx_xelse_exec_guard_2209_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 753
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2209_delayed_3_0_2607_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2609_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2609_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2609_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2609_Update/ack)
  // 			$volatile ifx_xelse_ifx_xend82_taken := (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 )) $buffering 1
  //  file prog.linked.opt.aa, line 754
  // (ifx_xelse_exec_guard_2209_delayed_3_0 & ( ~ cmp78 ))
  // ifx_xelse_exec_guard_2209_delayed_3_0
  // cmp78
  // 			$volatile ifx_xthen80_exec_guard := ifx_xelse_ifx_xthen80_taken $buffering 1
  //  file prog.linked.opt.aa, line 755
  // ifx_xelse_ifx_xthen80_taken
  // 			$volatile ifx_xthen80_ifx_xend82_taken := ifx_xthen80_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 756
  // ifx_xthen80_exec_guard
  // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
  //  file prog.linked.opt.aa, line 757
  // whilex_xbody_ifx_xthen_taken
  // 			kx_x1_2225_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 758
  // kx_x1
  W_kx_x1_2225_delayed_1_0_2625_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2627_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2627_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2627_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2627_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile add53 := (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 759
  // (kx_x1_2225_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
  // kx_x1_2225_delayed_1_0
  // 			$volatile ifx_xthen_ifx_xend82_taken := ifx_xthen_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 760
  // ifx_xthen_exec_guard
  // 			ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 761
  // ifx_xthen_ifx_xend82_taken
  W_ifx_xthen_ifx_xend82_taken_2235_delayed_3_0_2638_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2640_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2640_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2640_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2640_Update/ack)
  // 			$volatile ifx_xend82_exec_guard := (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)) $buffering 1
  //  file prog.linked.opt.aa, line 762
  // (ifx_xelse_ifx_xend82_taken | (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken))
  // ifx_xelse_ifx_xend82_taken
  // (ifx_xthen_ifx_xend82_taken_2235_delayed_3_0 | ifx_xthen80_ifx_xend82_taken)
  // ifx_xthen_ifx_xend82_taken_2235_delayed_3_0
  // ifx_xthen80_ifx_xend82_taken
  // 			ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 763
  // ifx_xthen_ifx_xend82_taken
  W_ifx_xthen_ifx_xend82_taken_2241_delayed_3_0_2648_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2650_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2650_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2650_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2650_Update/ack)
  // 			type_cast_2243_2243_delayed_3_0 := ($bitcast ($uint<16>) add53 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 764
  // add53
  // ($bitcast ($uint<16>) add53 )
  type_cast_2653_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2653_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2653_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2653_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2653_Update/ca)
  // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 765
  // ifx_xthen_ifx_xend82_taken_2241_delayed_3_0
  // type_cast_2243_2243_delayed_3_0
  // ifx_xthen80_ifx_xend82_taken
  // ifx_xelse_ifx_xend82_taken
  // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend82_taken_2241_delayed_3_0 type_cast_2243_2243_delayed_3_0  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 766
  // ifx_xthen_ifx_xend82_taken
  W_ifx_xthen_ifx_xend82_taken_2259_delayed_3_0_2672_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2674_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2674_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2674_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2674_Update/ack)
  // 			type_cast_2261_2261_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 767
  // ix_x2
  // ($bitcast ($uint<16>) ix_x2 )
  type_cast_2677_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2677_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2677_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2677_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2677_Update/ca)
  // 			type_cast_2264_2264_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 768
  // inc69x_xix_x2
  // ($bitcast ($uint<16>) inc69x_xix_x2 )
  type_cast_2681_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2681_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2681_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2681_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2681_Update/ca)
  // 			type_cast_2267_2267_delayed_1_0 := ($bitcast ($uint<16>) inc69x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 769
  // inc69x_xix_x2
  // ($bitcast ($uint<16>) inc69x_xix_x2 )
  type_cast_2685_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2685_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2685_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2685_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2685_Update/ca)
  // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 770
  // ifx_xthen_ifx_xend82_taken_2259_delayed_3_0
  // type_cast_2261_2261_delayed_4_0
  // ifx_xthen80_ifx_xend82_taken
  // type_cast_2264_2264_delayed_1_0
  // ifx_xelse_ifx_xend82_taken
  // type_cast_2267_2267_delayed_1_0
  // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend82_taken_2259_delayed_3_0 type_cast_2261_2261_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2264_2264_delayed_1_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2267_2267_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 771
  // ifx_xthen_ifx_xend82_taken
  W_ifx_xthen_ifx_xend82_taken_2275_delayed_3_0_2700_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2702_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2702_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2702_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2702_Update/ack)
  // 			type_cast_2277_2277_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 772
  // jx_x1
  // ($bitcast ($uint<16>) jx_x1 )
  type_cast_2705_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2705_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2705_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2705_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2705_Update/ca)
  // 			type_cast_2280_2280_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 773
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_2709_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2709_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2709_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2709_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2709_Update/ca)
  // 			type_cast_2283_2283_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 774
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_2713_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2713_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2713_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2713_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2713_Update/ca)
  // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 775
  // ifx_xthen_ifx_xend82_taken_2275_delayed_3_0
  // type_cast_2277_2277_delayed_4_0
  // ifx_xthen80_ifx_xend82_taken
  // type_cast_2280_2280_delayed_2_0
  // ifx_xelse_ifx_xend82_taken
  // type_cast_2283_2283_delayed_2_0
  // ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend82_taken_2275_delayed_3_0 type_cast_2277_2277_delayed_4_0  ( $mux ifx_xthen80_ifx_xend82_taken type_cast_2280_2280_delayed_2_0  ( $mux ifx_xelse_ifx_xend82_taken type_cast_2283_2283_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 := ifx_xthen_ifx_xend82_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 776
  // ifx_xthen_ifx_xend82_taken
  W_ifx_xthen_ifx_xend82_taken_2291_delayed_3_0_2728_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2730_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2730_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2730_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2730_Update/ack)
  // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 777
  // ifx_xthen_ifx_xend82_taken_2291_delayed_3_0
  // ifx_xthen80_ifx_xend82_taken
  // ifx_xelse_ifx_xend82_taken
  // ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend82_taken_2291_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen80_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend82_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			$guard (ifx_xend82_exec_guard) conv86173 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 778
  // kx_x0
  // ($cast ($uint<32>) kx_x0 )
  type_cast_2753_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2753_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2753_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2753_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2753_Update/ca)
  // 			$guard (ifx_xend82_exec_guard) conv90 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 779
  // jx_x0
  // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
  type_cast_2759_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2759_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2759_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2759_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2759_Update/ca)
  // 			ifx_xend82_exec_guard_2320_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 780
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2320_delayed_1_0_2761_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2763_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2763_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2763_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2763_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2320_delayed_1_0) $volatile mul91 := (conv90 * conv37) $buffering 1
  //  file prog.linked.opt.aa, line 781
  // (conv90 * conv37)
  // conv90
  // conv37
  // 			$guard (ifx_xend82_exec_guard) conv96 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 782
  // ix_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
  type_cast_2774_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2774_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2774_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2774_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2774_Update/ca)
  // 			ifx_xend82_exec_guard_2332_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 783
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2332_delayed_1_0_2776_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2778_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2778_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2778_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2778_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2332_delayed_1_0) $volatile mul97 := (conv96 * conv94) $buffering 1
  //  file prog.linked.opt.aa, line 784
  // (conv96 * conv94)
  // conv96
  // conv94
  // 			ifx_xend82_exec_guard_2338_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 785
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2338_delayed_1_0_2785_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2787_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2787_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2787_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2787_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2338_delayed_1_0) $volatile add92 := (mul97 + conv86173) $buffering 1
  //  file prog.linked.opt.aa, line 786
  // (mul97 + conv86173)
  // mul97
  // conv86173
  // 			ifx_xend82_exec_guard_2344_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 787
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2344_delayed_1_0_2794_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2796_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2796_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2796_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2796_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2344_delayed_1_0) $volatile add98 := (add92 + mul91) $buffering 1
  //  file prog.linked.opt.aa, line 788
  // (add92 + mul91)
  // add92
  // mul91
  // 			ifx_xend82_exec_guard_2350_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 789
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2350_delayed_1_0_2803_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2805_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2805_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2805_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2805_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2350_delayed_1_0) conv99 := ($cast ($uint<16>) add98 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 790
  // add98
  // ($cast ($uint<16>) add98 )
  type_cast_2809_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2809_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2809_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2809_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2809_Update/ca)
  // 			ifx_xend82_exec_guard_2355_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 791
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2355_delayed_1_0_2811_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2813_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2813_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2813_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2813_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2355_delayed_1_0) $volatile sub := (conv90 - conv108) $buffering 1
  //  file prog.linked.opt.aa, line 792
  // (conv90 - conv108)
  // conv90
  // conv108
  // 			ifx_xend82_exec_guard_2361_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 793
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2361_delayed_1_0_2820_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2822_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2822_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2822_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2822_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2361_delayed_1_0) $volatile mul109 := (sub * conv31) $buffering 1
  //  file prog.linked.opt.aa, line 794
  // (sub * conv31)
  // sub
  // conv31
  // 			ifx_xend82_exec_guard_2367_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 795
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2367_delayed_1_0_2829_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2831_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2831_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2831_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2831_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2367_delayed_1_0) $volatile sub117 := (conv96 - conv108) $buffering 1
  //  file prog.linked.opt.aa, line 796
  // (conv96 - conv108)
  // conv96
  // conv108
  // 			ifx_xend82_exec_guard_2373_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 797
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2373_delayed_1_0_2838_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2840_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2840_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2840_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2840_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2373_delayed_1_0) $volatile mul118 := (sub117 * conv112) $buffering 1
  //  file prog.linked.opt.aa, line 798
  // (sub117 * conv112)
  // sub117
  // conv112
  // 			ifx_xend82_exec_guard_2379_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 799
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2379_delayed_1_0_2847_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2849_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2849_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2849_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2849_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2379_delayed_1_0) $volatile add110 := (mul118 + conv86173) $buffering 1
  //  file prog.linked.opt.aa, line 800
  // (mul118 + conv86173)
  // mul118
  // conv86173
  // 			ifx_xend82_exec_guard_2385_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 801
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2385_delayed_1_0_2856_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2858_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2858_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2858_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2858_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2385_delayed_1_0) $volatile add119 := (add110 + mul109) $buffering 1
  //  file prog.linked.opt.aa, line 802
  // (add110 + mul109)
  // add110
  // mul109
  // 			ifx_xend82_exec_guard_2391_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 803
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2391_delayed_1_0_2865_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2867_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2867_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2867_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2867_Update/ack)
  // 			type_cast_2396_2396_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 804
  // conv108
  // ($bitcast ($int<32>) conv108 )
  type_cast_2870_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2870_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2870_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2870_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2870_Update/ca)
  // 			$guard (ifx_xend82_exec_guard_2391_delayed_1_0) $volatile cmp125 := (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 805
  // (($bitcast ($int<32>) conv96 ) < type_cast_2396_2396_delayed_1_0)
  // conv96
  // type_cast_2396_2396_delayed_1_0
  // 			ifx_xend82_exec_guard_2399_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 806
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2399_delayed_1_0_2879_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2881_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2881_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2881_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2881_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2399_delayed_1_0) $volatile cmp125x_xnot := (cmp125 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 807
  // (cmp125 ^ ($bitcast ($uint<1>) _b1  ))
  // cmp125
  // 			ifx_xend82_exec_guard_2406_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 808
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2406_delayed_1_0_2889_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2891_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2891_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2891_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2891_Update/ack)
  // 			type_cast_2411_2411_delayed_1_0 := ($bitcast ($int<32>) add133 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 809
  // add133
  // ($bitcast ($int<32>) add133 )
  type_cast_2894_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2894_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2894_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2894_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2894_Update/ca)
  // 			$guard (ifx_xend82_exec_guard_2406_delayed_1_0) $volatile cmp134 := (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 810
  // (($bitcast ($int<32>) conv96 ) < type_cast_2411_2411_delayed_1_0)
  // conv96
  // type_cast_2411_2411_delayed_1_0
  // 			ifx_xend82_exec_guard_2414_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 811
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2414_delayed_1_0_2903_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2905_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2905_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2905_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2905_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2414_delayed_1_0) $volatile orx_xcond := (cmp125x_xnot & cmp134) $buffering 1
  //  file prog.linked.opt.aa, line 812
  // (cmp125x_xnot & cmp134)
  // cmp125x_xnot
  // cmp134
  // 			ifx_xend82_exec_guard_2420_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 813
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2420_delayed_1_0_2912_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2914_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2914_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2914_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2914_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2420_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 814
  // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond
  // 			ifx_xend82_exec_guard_2427_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 815
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2427_delayed_1_0_2922_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2924_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2924_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2924_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2924_Update/ack)
  // 			type_cast_2432_2432_delayed_1_0 := ($bitcast ($int<32>) conv108 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 816
  // conv108
  // ($bitcast ($int<32>) conv108 )
  type_cast_2927_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2927_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2927_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2927_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2927_Update/ca)
  // 			$guard (ifx_xend82_exec_guard_2427_delayed_1_0) $volatile cmp141 := (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 817
  // (($bitcast ($int<32>) conv90 ) < type_cast_2432_2432_delayed_1_0)
  // conv90
  // type_cast_2432_2432_delayed_1_0
  // 			ifx_xend82_exec_guard_2435_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 818
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2435_delayed_1_0_2936_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2938_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2938_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2938_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2938_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2435_delayed_1_0) $volatile orx_xcond178 := (orx_xcondx_xnot | cmp141) $buffering 1
  //  file prog.linked.opt.aa, line 819
  // (orx_xcondx_xnot | cmp141)
  // orx_xcondx_xnot
  // cmp141
  // 			ifx_xend82_exec_guard_2441_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 820
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2441_delayed_1_0_2945_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2947_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2947_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2947_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2947_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2441_delayed_1_0) $volatile orx_xcond178x_xnot := (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 821
  // (orx_xcond178 ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond178
  // 			ifx_xend82_exec_guard_2448_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 822
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2448_delayed_1_0_2955_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2957_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2957_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2957_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2957_Update/ack)
  // 			type_cast_2453_2453_delayed_1_0 := ($bitcast ($int<32>) add151 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 823
  // add151
  // ($bitcast ($int<32>) add151 )
  type_cast_2960_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2960_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2960_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2960_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_2960_Update/ca)
  // 			$guard (ifx_xend82_exec_guard_2448_delayed_1_0) $volatile cmp152 := (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 824
  // (($bitcast ($int<32>) conv90 ) < type_cast_2453_2453_delayed_1_0)
  // conv90
  // type_cast_2453_2453_delayed_1_0
  // 			ifx_xend82_exec_guard_2456_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 825
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2456_delayed_1_0_2969_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2971_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2971_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2971_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2971_Update/ack)
  // 			$guard (ifx_xend82_exec_guard_2456_delayed_1_0) $volatile orx_xcond179 := (orx_xcond178x_xnot & cmp152) $buffering 1
  //  file prog.linked.opt.aa, line 826
  // (orx_xcond178x_xnot & cmp152)
  // orx_xcond178x_xnot
  // cmp152
  // 			ifx_xend82_exec_guard_2463_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 827
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2463_delayed_1_0_2978_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2980_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2980_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2980_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2980_Update/ack)
  // 			$volatile ifx_xend82_ifx_xelse157_taken := (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179) $buffering 1
  //  file prog.linked.opt.aa, line 828
  // (ifx_xend82_exec_guard_2463_delayed_1_0 & orx_xcond179)
  // ifx_xend82_exec_guard_2463_delayed_1_0
  // orx_xcond179
  // 			ifx_xend82_exec_guard_2468_delayed_1_0 := ifx_xend82_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 829
  // ifx_xend82_exec_guard
  W_ifx_xend82_exec_guard_2468_delayed_1_0_2986_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2988_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2988_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2988_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_2988_Update/ack)
  // 			$volatile ifx_xend82_ifx_xthen154_taken := (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 )) $buffering 1
  //  file prog.linked.opt.aa, line 830
  // (ifx_xend82_exec_guard_2468_delayed_1_0 & ( ~ orx_xcond179 ))
  // ifx_xend82_exec_guard_2468_delayed_1_0
  // orx_xcond179
  // 			$volatile ifx_xthen154_exec_guard := ifx_xend82_ifx_xthen154_taken $buffering 1
  //  file prog.linked.opt.aa, line 831
  // ifx_xend82_ifx_xthen154_taken
  // 			ifx_xthen154_exec_guard_2476_delayed_1_0 := ifx_xthen154_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 832
  // ifx_xthen154_exec_guard
  W_ifx_xthen154_exec_guard_2476_delayed_1_0_2998_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3000_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3000_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3000_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3000_Update/ack)
  // 			$guard (ifx_xthen154_exec_guard_2476_delayed_1_0) conv156 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 833
  // conv99
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
  type_cast_3005_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3005_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3005_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3005_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3005_Update/ca)
  // 			ifx_xthen154_exec_guard_2482_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 834
  // ifx_xthen154_exec_guard
  W_ifx_xthen154_exec_guard_2482_delayed_2_0_3007_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3009_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3009_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3009_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3009_Update/ack)
  // 			$guard (ifx_xthen154_exec_guard_2482_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 835
  // (($bitcast ($int<32>) conv156 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv156
  // 			ifx_xthen154_exec_guard_2492_delayed_2_0 := ifx_xthen154_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 836
  // ifx_xthen154_exec_guard
  W_ifx_xthen154_exec_guard_2492_delayed_2_0_3020_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3022_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3022_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3022_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3022_Update/ack)
  // 			$guard (ifx_xthen154_exec_guard_2492_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 837
  // shr
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
  type_cast_3027_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3027_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3027_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3027_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3027_Update/ca)
  // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 838
  // idxprom
  array_obj_ref_3033_index_1_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_index_resize_1/index_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_index_resize_1/index_resize_ack)
  array_obj_ref_3033_index_1_rename <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_index_scale_1/scale_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_index_scale_1/scale_rename_ack)
  array_obj_ref_3033_index_offset <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_final_index_sum_regn_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_final_index_sum_regn_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_final_index_sum_regn_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_final_index_sum_regn_Update/ack)
  array_obj_ref_3033_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3033_base_plus_offset/sum_rename_ack)
  addr_of_3034_final_reg <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3034_request/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3034_complete/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3034_request/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3034_complete/ack)
  // 			$guard (ifx_xthen154_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 839
  // arrayidx
  ptr_deref_3038_base_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_base_addr_resize/base_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_base_addr_resize/base_resize_ack)
  ptr_deref_3038_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_base_plus_offset/sum_rename_ack)
  ptr_deref_3038_addr_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_word_addrgen/root_register_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_word_addrgen/root_register_ack)
  ptr_deref_3038_gather_scatter <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Sample/ptr_deref_3038_Split/split_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Sample/ptr_deref_3038_Split/split_ack)
  ptr_deref_3038_store_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Sample/word_access_start/word_0/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Update/word_access_complete/word_0/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Sample/word_access_start/word_0/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3038_Update/word_access_complete/word_0/ca)
  // 			$volatile ifx_xelse157_exec_guard := ifx_xend82_ifx_xelse157_taken $buffering 1
  //  file prog.linked.opt.aa, line 840
  // ifx_xend82_ifx_xelse157_taken
  // 			$guard (ifx_xelse157_exec_guard) $volatile sext176 := (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 841
  // (add119 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // add119
  // 			$guard (ifx_xelse157_exec_guard) $volatile shr160 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 842
  // (($bitcast ($int<32>) sext176 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
  // sext176
  // 			$guard (ifx_xelse157_exec_guard) idxprom161 := ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 843
  // shr160
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr160 ) )
  type_cast_3066_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3066_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3066_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3066_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3066_Update/ca)
  // 			arrayidx162 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom161]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 844
  // idxprom161
  array_obj_ref_3072_index_1_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_index_resize_1/index_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_index_resize_1/index_resize_ack)
  array_obj_ref_3072_index_1_rename <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_index_scale_1/scale_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_index_scale_1/scale_rename_ack)
  array_obj_ref_3072_index_offset <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_final_index_sum_regn_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_final_index_sum_regn_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_final_index_sum_regn_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_final_index_sum_regn_Update/ack)
  array_obj_ref_3072_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3072_base_plus_offset/sum_rename_ack)
  addr_of_3073_final_reg <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3073_request/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3073_complete/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3073_request/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3073_complete/ack)
  // 			ifx_xelse157_exec_guard_2544_delayed_8_0 := ifx_xelse157_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 845
  // ifx_xelse157_exec_guard
  W_ifx_xelse157_exec_guard_2544_delayed_8_0_3075_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3077_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3077_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3077_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3077_Update/ack)
  // 			$guard (ifx_xelse157_exec_guard_2544_delayed_8_0) tmp163 := ->(arrayidx162) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 846
  // arrayidx162
  ptr_deref_3081_base_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_base_addr_resize/base_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_base_addr_resize/base_resize_ack)
  ptr_deref_3081_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_base_plus_offset/sum_rename_ack)
  ptr_deref_3081_addr_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_word_addrgen/root_register_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_word_addrgen/root_register_ack)
  ptr_deref_3081_gather_scatter <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Update/ptr_deref_3081_Merge/merge_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Update/ptr_deref_3081_Merge/merge_ack)
  ptr_deref_3081_load_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Sample/word_access_start/word_0/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Update/word_access_complete/word_0/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Sample/word_access_start/word_0/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3081_Update/word_access_complete/word_0/ca)
  // 			ifx_xelse157_exec_guard_2549_delayed_1_0 := ifx_xelse157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 847
  // ifx_xelse157_exec_guard
  W_ifx_xelse157_exec_guard_2549_delayed_1_0_3083_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3085_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3085_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3085_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3085_Update/ack)
  // 			$guard (ifx_xelse157_exec_guard_2549_delayed_1_0) conv165 := ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 848
  // conv99
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv99 ) )
  type_cast_3090_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3090_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3090_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3090_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3090_Update/ca)
  // 			ifx_xelse157_exec_guard_2555_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 849
  // ifx_xelse157_exec_guard
  W_ifx_xelse157_exec_guard_2555_delayed_2_0_3092_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3094_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3094_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3094_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3094_Update/ack)
  // 			$guard (ifx_xelse157_exec_guard_2555_delayed_2_0) $volatile shr166 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 850
  // (($bitcast ($int<32>) conv165 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv165
  // 			ifx_xelse157_exec_guard_2565_delayed_2_0 := ifx_xelse157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 851
  // ifx_xelse157_exec_guard
  W_ifx_xelse157_exec_guard_2565_delayed_2_0_3105_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3107_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3107_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3107_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3107_Update/ack)
  // 			$guard (ifx_xelse157_exec_guard_2565_delayed_2_0) idxprom167 := ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 852
  // shr166
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr166 ) )
  type_cast_3112_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3112_Sample/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3112_Update/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3112_Sample/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/type_cast_3112_Update/ca)
  // 			arrayidx168 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom167]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 853
  // idxprom167
  array_obj_ref_3118_index_1_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_index_resize_1/index_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_index_resize_1/index_resize_ack)
  array_obj_ref_3118_index_1_rename <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_index_scale_1/scale_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_index_scale_1/scale_rename_ack)
  array_obj_ref_3118_index_offset <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_final_index_sum_regn_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_final_index_sum_regn_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_final_index_sum_regn_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_final_index_sum_regn_Update/ack)
  array_obj_ref_3118_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/array_obj_ref_3118_base_plus_offset/sum_rename_ack)
  addr_of_3119_final_reg <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3119_request/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3119_complete/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3119_request/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/addr_of_3119_complete/ack)
  // 			ifx_xelse157_exec_guard_2578_delayed_14_0 := ifx_xelse157_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
  //  file prog.linked.opt.aa, line 854
  // ifx_xelse157_exec_guard
  W_ifx_xelse157_exec_guard_2578_delayed_14_0_3121_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3123_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3123_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3123_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3123_Update/ack)
  // 			arrayidx168_2579_delayed_4_0 := arrayidx168 $buffering 4 $cut_through // bits of buffering = 128. 
  //  file prog.linked.opt.aa, line 855
  // arrayidx168
  W_arrayidx168_2579_delayed_4_0_3124_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3126_Sample/req branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3126_Update/req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3126_Sample/ack branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/assign_stmt_3126_Update/ack)
  // 			$guard (ifx_xelse157_exec_guard_2578_delayed_14_0) ->(arrayidx168_2579_delayed_4_0) := tmp163 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 856
  // tmp163
  // arrayidx168_2579_delayed_4_0
  ptr_deref_3129_base_resize <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_base_addr_resize/base_resize_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_base_addr_resize/base_resize_ack)
  ptr_deref_3129_root_address_inst <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_base_plus_offset/sum_rename_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_base_plus_offset/sum_rename_ack)
  ptr_deref_3129_addr_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_word_addrgen/root_register_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_word_addrgen/root_register_ack)
  ptr_deref_3129_gather_scatter <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Sample/ptr_deref_3129_Split/split_req) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Sample/ptr_deref_3129_Split/split_ack)
  ptr_deref_3129_store_0 <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Sample/word_access_start/word_0/rr branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Update/word_access_complete/word_0/cr) (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Sample/word_access_start/word_0/ra branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/ptr_deref_3129_Update/word_access_complete/word_0/ca)
  // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 857
  // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // flagx_x0
  // 			$volatile ifx_xend169_whilex_xend_taken := ( ~ tobool ) $buffering 1
  //  file prog.linked.opt.aa, line 858
  // tobool
  // tobool
  do_while_stmt_2473_branch <=> (branch_block_stmt_2327/do_while_stmt_2473/do_while_stmt_2473_loop_body/condition_evaluated) (branch_block_stmt_2327/do_while_stmt_2473/loop_exit/ack branch_block_stmt_2327/do_while_stmt_2473/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 118164344
  if_stmt_3144_branch <=> (branch_block_stmt_2327/if_stmt_3144_eval_test/branch_req) (branch_block_stmt_2327/if_stmt_3144_else_link/else_choice_transition branch_block_stmt_2327/if_stmt_3144_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 863
  // 		Block2_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 866
  // Block2_complete
  WPIPE_Block2_complete_3150_inst <=> (branch_block_stmt_2327/assign_stmt_3153/WPIPE_Block2_complete_3150_Sample/req branch_block_stmt_2327/assign_stmt_3153/WPIPE_Block2_complete_3150_Update/req) (branch_block_stmt_2327/assign_stmt_3153/WPIPE_Block2_complete_3150_Sample/ack branch_block_stmt_2327/assign_stmt_3153/WPIPE_Block2_complete_3150_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 868
}
$module [zeropad3D_D] 
{
  // pipe-declarations for block %zeropad3D_D
  //  file prog.linked.opt.aa, line 872
  // pipe-declarations for block %zeropad3D_D%body
  //  file prog.linked.opt.aa, line 877
  // pipe-declarations for block %zeropad3D_D%body%
  //  file prog.linked.opt.aa, line 909
  // pipe-declarations for block %zeropad3D_D%body%
  //  file prog.linked.opt.aa, line 1063
  // pipe-declarations for block %zeropad3D_D%body%
  //  file prog.linked.opt.aa, line 1068
  // memory-space 0 is written into.
  // memory-space 0 is read from.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_3159] // Branch Block  file prog.linked.opt.aa, line 877
    {
      $P [branch_block_stmt_3159__entry__]
      branch_block_stmt_3159__entry__ <-| ($entry)
      $P [branch_block_stmt_3159__exit__]
      branch_block_stmt_3159__exit__ |-> ($exit)
      $P [assign_stmt_3162_to_assign_stmt_3180__entry__] 
      $P [assign_stmt_3162_to_assign_stmt_3180__exit__] 
      $P [assign_stmt_3185_to_assign_stmt_3291__entry__] 
      $P [assign_stmt_3185_to_assign_stmt_3291__exit__] 
      $P [entry_whilex_xbody]
      $P [merge_stmt_3293__exit__] 
      $P [do_while_stmt_3308__entry__] 
      $P [do_while_stmt_3308__exit__] 
      $P [if_stmt_3978__entry__] 
      $P [if_stmt_3978__exit__] 
      $P [merge_stmt_3982__entry__] 
      $P [merge_stmt_3982__exit__] 
      $P [assign_stmt_3987__entry__] 
      $P [assign_stmt_3987__exit__] 
      $P [return__]
      $P [merge_stmt_3989__exit__] 
      ::[assign_stmt_3162_to_assign_stmt_3180] 
      {
        // start:  		call := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 879
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3161_sample_start_] 
        $T[RPIPE_Block3_starting_3161_sample_completed_] 
        $T[RPIPE_Block3_starting_3161_update_start_] 
        $T[RPIPE_Block3_starting_3161_update_completed_] 
        ;;[RPIPE_Block3_starting_3161_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3161_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3161_sample_start_ &-> (RPIPE_Block3_starting_3161_Sample)
        RPIPE_Block3_starting_3161_sample_completed_ <-& (RPIPE_Block3_starting_3161_Sample)
        RPIPE_Block3_starting_3161_update_start_ <-& (RPIPE_Block3_starting_3161_sample_completed_)
        RPIPE_Block3_starting_3161_update_start_ &-> (RPIPE_Block3_starting_3161_Update)
        RPIPE_Block3_starting_3161_update_completed_ <-& (RPIPE_Block3_starting_3161_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call1 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 880
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3164_sample_start_] 
        $T[RPIPE_Block3_starting_3164_sample_completed_] 
        $T[RPIPE_Block3_starting_3164_update_start_] 
        $T[RPIPE_Block3_starting_3164_update_completed_] 
        ;;[RPIPE_Block3_starting_3164_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3164_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3164_sample_start_ &-> (RPIPE_Block3_starting_3164_Sample)
        RPIPE_Block3_starting_3164_sample_completed_ <-& (RPIPE_Block3_starting_3164_Sample)
        RPIPE_Block3_starting_3164_update_start_ <-& (RPIPE_Block3_starting_3164_sample_completed_)
        RPIPE_Block3_starting_3164_update_start_ &-> (RPIPE_Block3_starting_3164_Update)
        RPIPE_Block3_starting_3164_update_completed_ <-& (RPIPE_Block3_starting_3164_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call2 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 881
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3167_sample_start_] 
        $T[RPIPE_Block3_starting_3167_sample_completed_] 
        $T[RPIPE_Block3_starting_3167_update_start_] 
        $T[RPIPE_Block3_starting_3167_update_completed_] 
        ;;[RPIPE_Block3_starting_3167_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3167_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3167_sample_start_ &-> (RPIPE_Block3_starting_3167_Sample)
        RPIPE_Block3_starting_3167_sample_completed_ <-& (RPIPE_Block3_starting_3167_Sample)
        RPIPE_Block3_starting_3167_update_start_ <-& (RPIPE_Block3_starting_3167_sample_completed_)
        RPIPE_Block3_starting_3167_update_start_ &-> (RPIPE_Block3_starting_3167_Update)
        RPIPE_Block3_starting_3167_update_completed_ <-& (RPIPE_Block3_starting_3167_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call3 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 882
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3170_sample_start_] 
        $T[RPIPE_Block3_starting_3170_sample_completed_] 
        $T[RPIPE_Block3_starting_3170_update_start_] 
        $T[RPIPE_Block3_starting_3170_update_completed_] 
        ;;[RPIPE_Block3_starting_3170_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3170_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3170_sample_start_ &-> (RPIPE_Block3_starting_3170_Sample)
        RPIPE_Block3_starting_3170_sample_completed_ <-& (RPIPE_Block3_starting_3170_Sample)
        RPIPE_Block3_starting_3170_update_start_ <-& (RPIPE_Block3_starting_3170_sample_completed_)
        RPIPE_Block3_starting_3170_update_start_ &-> (RPIPE_Block3_starting_3170_Update)
        RPIPE_Block3_starting_3170_update_completed_ <-& (RPIPE_Block3_starting_3170_Update)
        // Target expression
        // (as target) call3
        // start: WAR dependencies for call3
        // done: WAR dependencies for call3
        // end:  		call3 := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call4 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 883
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3173_sample_start_] 
        $T[RPIPE_Block3_starting_3173_sample_completed_] 
        $T[RPIPE_Block3_starting_3173_update_start_] 
        $T[RPIPE_Block3_starting_3173_update_completed_] 
        ;;[RPIPE_Block3_starting_3173_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3173_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3173_sample_start_ &-> (RPIPE_Block3_starting_3173_Sample)
        RPIPE_Block3_starting_3173_sample_completed_ <-& (RPIPE_Block3_starting_3173_Sample)
        RPIPE_Block3_starting_3173_update_start_ <-& (RPIPE_Block3_starting_3173_sample_completed_)
        RPIPE_Block3_starting_3173_update_start_ &-> (RPIPE_Block3_starting_3173_Update)
        RPIPE_Block3_starting_3173_update_completed_ <-& (RPIPE_Block3_starting_3173_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call5 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 884
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3176_sample_start_] 
        $T[RPIPE_Block3_starting_3176_sample_completed_] 
        $T[RPIPE_Block3_starting_3176_update_start_] 
        $T[RPIPE_Block3_starting_3176_update_completed_] 
        ;;[RPIPE_Block3_starting_3176_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3176_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3176_sample_start_ &-> (RPIPE_Block3_starting_3176_Sample)
        RPIPE_Block3_starting_3176_sample_completed_ <-& (RPIPE_Block3_starting_3176_Sample)
        RPIPE_Block3_starting_3176_update_start_ <-& (RPIPE_Block3_starting_3176_sample_completed_)
        RPIPE_Block3_starting_3176_update_start_ &-> (RPIPE_Block3_starting_3176_Update)
        RPIPE_Block3_starting_3176_update_completed_ <-& (RPIPE_Block3_starting_3176_Update)
        // Target expression
        // (as target) call5
        // start: WAR dependencies for call5
        // done: WAR dependencies for call5
        // end:  		call5 := Block3_starting $buffering 1// bits of buffering = 8. 
        // start:  		call6 := Block3_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 885
        // Source expression
        // Block3_starting
        $T[RPIPE_Block3_starting_3179_sample_start_] 
        $T[RPIPE_Block3_starting_3179_sample_completed_] 
        $T[RPIPE_Block3_starting_3179_update_start_] 
        $T[RPIPE_Block3_starting_3179_update_completed_] 
        ;;[RPIPE_Block3_starting_3179_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block3_starting_3179_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block3_starting_3179_sample_start_ &-> (RPIPE_Block3_starting_3179_Sample)
        RPIPE_Block3_starting_3179_sample_completed_ <-& (RPIPE_Block3_starting_3179_Sample)
        RPIPE_Block3_starting_3179_update_start_ <-& (RPIPE_Block3_starting_3179_sample_completed_)
        RPIPE_Block3_starting_3179_update_start_ &-> (RPIPE_Block3_starting_3179_Update)
        RPIPE_Block3_starting_3179_update_completed_ <-& (RPIPE_Block3_starting_3179_Update)
        // Target expression
        // (as target) call6
        // start: WAR dependencies for call6
        // done: WAR dependencies for call6
        // end:  		call6 := Block3_starting $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block3_starting
        // read-dependencies for pipe Block3_starting
        RPIPE_Block3_starting_3164_sample_start_ <-& (RPIPE_Block3_starting_3161_update_completed_)
        RPIPE_Block3_starting_3167_sample_start_ <-& (RPIPE_Block3_starting_3164_update_completed_)
        RPIPE_Block3_starting_3170_sample_start_ <-& (RPIPE_Block3_starting_3167_update_completed_)
        RPIPE_Block3_starting_3173_sample_start_ <-& (RPIPE_Block3_starting_3170_update_completed_)
        RPIPE_Block3_starting_3176_sample_start_ <-& (RPIPE_Block3_starting_3173_update_completed_)
        RPIPE_Block3_starting_3179_sample_start_ <-& (RPIPE_Block3_starting_3176_update_completed_)
        // write-dependencies for pipe Block3_starting
        // signal write dependencies for Block3_starting
      }
      assign_stmt_3162_to_assign_stmt_3180__entry__ |-> (assign_stmt_3162_to_assign_stmt_3180)
      assign_stmt_3162_to_assign_stmt_3180__exit__ <-| (assign_stmt_3162_to_assign_stmt_3180)
      ::[assign_stmt_3185_to_assign_stmt_3291] 
      {
        // start:  		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
        //  file prog.linked.opt.aa, line 887
        // Source expression
        // ($cast ($uint<16>) call1 )
        $T[type_cast_3184_sample_start_] 
        $T[type_cast_3184_sample_completed_] 
        $T[type_cast_3184_update_start_] 
        $T[type_cast_3184_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_3184_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_3184_sample_start_
        ;;[type_cast_3184_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3184_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3184_sample_start_ &-> (type_cast_3184_Sample)
        type_cast_3184_sample_completed_ <-& (type_cast_3184_Sample)
        type_cast_3184_sample_completed_ &-> ($null)
        type_cast_3184_update_start_ &-> (type_cast_3184_Update)
        type_cast_3184_update_completed_ <-& (type_cast_3184_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // start:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 888
        // volatile! 
        // Source expression
        // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
        // conv
        // Target expression
        // (as target) div
        // start: WAR dependencies for div
        // done: WAR dependencies for div
        // end:  		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        // start:  		conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
        //  file prog.linked.opt.aa, line 889
        // Source expression
        // ($cast ($uint<16>) call )
        $T[type_cast_3194_sample_start_] 
        $T[type_cast_3194_sample_completed_] 
        $T[type_cast_3194_update_start_] 
        $T[type_cast_3194_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_3194_sample_start_
        // done: Forward dependencies from call to transition type_cast_3194_sample_start_
        ;;[type_cast_3194_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3194_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3194_sample_start_ &-> (type_cast_3194_Sample)
        type_cast_3194_sample_completed_ <-& (type_cast_3194_Sample)
        type_cast_3194_sample_completed_ &-> ($null)
        type_cast_3194_update_start_ &-> (type_cast_3194_Update)
        type_cast_3194_update_completed_ <-& (type_cast_3194_Update)
        // Target expression
        // (as target) conv10
        // start: WAR dependencies for conv10
        // done: WAR dependencies for conv10
        // end:  		conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
        // start: WAR dependencies for div11
        // done: WAR dependencies for div11
        // start:  		$volatile div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 890
        // volatile! 
        // Source expression
        // (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  ))
        // conv10
        // Target expression
        // (as target) div11
        // start: WAR dependencies for div11
        // done: WAR dependencies for div11
        // end:  		$volatile div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
        // start:  		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 891
        // Source expression
        // ($cast ($uint<32>) call2 )
        $T[type_cast_3204_sample_start_] 
        $T[type_cast_3204_sample_completed_] 
        $T[type_cast_3204_update_start_] 
        $T[type_cast_3204_update_completed_] 
        // call2
        // start: Forward dependencies from call2 to transition type_cast_3204_sample_start_
        // done: Forward dependencies from call2 to transition type_cast_3204_sample_start_
        ;;[type_cast_3204_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3204_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3204_sample_start_ &-> (type_cast_3204_Sample)
        type_cast_3204_sample_completed_ <-& (type_cast_3204_Sample)
        type_cast_3204_sample_completed_ &-> ($null)
        type_cast_3204_update_start_ &-> (type_cast_3204_Update)
        type_cast_3204_update_completed_ <-& (type_cast_3204_Update)
        // Target expression
        // (as target) conv36
        // start: WAR dependencies for conv36
        // done: WAR dependencies for conv36
        // end:  		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 892
        // Source expression
        // ($cast ($uint<32>) call1 )
        $T[type_cast_3208_sample_start_] 
        $T[type_cast_3208_sample_completed_] 
        $T[type_cast_3208_update_start_] 
        $T[type_cast_3208_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_3208_sample_start_
        // done: Forward dependencies from call1 to transition type_cast_3208_sample_start_
        ;;[type_cast_3208_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3208_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3208_sample_start_ &-> (type_cast_3208_Sample)
        type_cast_3208_sample_completed_ <-& (type_cast_3208_Sample)
        type_cast_3208_sample_completed_ &-> ($null)
        type_cast_3208_update_start_ &-> (type_cast_3208_Update)
        type_cast_3208_update_completed_ <-& (type_cast_3208_Update)
        // Target expression
        // (as target) conv38
        // start: WAR dependencies for conv38
        // done: WAR dependencies for conv38
        // end:  		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 893
        // Source expression
        // ($cast ($uint<32>) call5 )
        $T[type_cast_3212_sample_start_] 
        $T[type_cast_3212_sample_completed_] 
        $T[type_cast_3212_update_start_] 
        $T[type_cast_3212_update_completed_] 
        // call5
        // start: Forward dependencies from call5 to transition type_cast_3212_sample_start_
        // done: Forward dependencies from call5 to transition type_cast_3212_sample_start_
        ;;[type_cast_3212_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3212_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3212_sample_start_ &-> (type_cast_3212_Sample)
        type_cast_3212_sample_completed_ <-& (type_cast_3212_Sample)
        type_cast_3212_sample_completed_ &-> ($null)
        type_cast_3212_update_start_ &-> (type_cast_3212_Update)
        type_cast_3212_update_completed_ <-& (type_cast_3212_Update)
        // Target expression
        // (as target) conv42
        // start: WAR dependencies for conv42
        // done: WAR dependencies for conv42
        // end:  		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
        // start:  		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 894
        // Source expression
        // ($cast ($uint<32>) call4 )
        $T[type_cast_3216_sample_start_] 
        $T[type_cast_3216_sample_completed_] 
        $T[type_cast_3216_update_start_] 
        $T[type_cast_3216_update_completed_] 
        // call4
        // start: Forward dependencies from call4 to transition type_cast_3216_sample_start_
        // done: Forward dependencies from call4 to transition type_cast_3216_sample_start_
        ;;[type_cast_3216_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3216_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3216_sample_start_ &-> (type_cast_3216_Sample)
        type_cast_3216_sample_completed_ <-& (type_cast_3216_Sample)
        type_cast_3216_sample_completed_ &-> ($null)
        type_cast_3216_update_start_ &-> (type_cast_3216_Update)
        type_cast_3216_update_completed_ <-& (type_cast_3216_Update)
        // Target expression
        // (as target) conv44
        // start: WAR dependencies for conv44
        // done: WAR dependencies for conv44
        // end:  		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul45
        // done: WAR dependencies for mul45
        // start:  		$volatile mul45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 895
        // volatile! 
        // Source expression
        // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv44
        // Target expression
        // (as target) mul45
        // start: WAR dependencies for mul45
        // done: WAR dependencies for mul45
        // end:  		$volatile mul45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // start:  		$volatile sext := (mul45 * conv42) $buffering 1
        //  file prog.linked.opt.aa, line 896
        // volatile! 
        // Source expression
        // (mul45 * conv42)
        // mul45
        // conv42
        // Target expression
        // (as target) sext
        // start: WAR dependencies for sext
        // done: WAR dependencies for sext
        // end:  		$volatile sext := (mul45 * conv42) $buffering 1
        // start: WAR dependencies for conv98
        // done: WAR dependencies for conv98
        // start:  		$volatile conv98 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 897
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext )
        // sext
        // Target expression
        // (as target) conv98
        // start: WAR dependencies for conv98
        // done: WAR dependencies for conv98
        // end:  		$volatile conv98 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 898
        // Source expression
        // ($cast ($uint<32>) call6 )
        $T[type_cast_3240_sample_start_] 
        $T[type_cast_3240_sample_completed_] 
        $T[type_cast_3240_update_start_] 
        $T[type_cast_3240_update_completed_] 
        // call6
        // start: Forward dependencies from call6 to transition type_cast_3240_sample_start_
        // done: Forward dependencies from call6 to transition type_cast_3240_sample_start_
        ;;[type_cast_3240_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3240_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3240_sample_start_ &-> (type_cast_3240_Sample)
        type_cast_3240_sample_completed_ <-& (type_cast_3240_Sample)
        type_cast_3240_sample_completed_ &-> ($null)
        type_cast_3240_update_start_ &-> (type_cast_3240_Update)
        type_cast_3240_update_completed_ <-& (type_cast_3240_Update)
        // Target expression
        // (as target) conv112
        // start: WAR dependencies for conv112
        // done: WAR dependencies for conv112
        // end:  		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 899
        // volatile! 
        // Source expression
        // (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
        // conv38
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
        // start: WAR dependencies for sext177
        // done: WAR dependencies for sext177
        // start:  		$volatile sext177 := (mul * conv36) $buffering 1
        //  file prog.linked.opt.aa, line 900
        // volatile! 
        // Source expression
        // (mul * conv36)
        // mul
        // conv36
        // Target expression
        // (as target) sext177
        // start: WAR dependencies for sext177
        // done: WAR dependencies for sext177
        // end:  		$volatile sext177 := (mul * conv36) $buffering 1
        // start: WAR dependencies for conv116
        // done: WAR dependencies for conv116
        // start:  		$volatile conv116 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 901
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
        // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
        // ($bitcast ($int<32>) sext177 )
        // sext177
        // Target expression
        // (as target) conv116
        // start: WAR dependencies for conv116
        // done: WAR dependencies for conv116
        // end:  		$volatile conv116 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
        // start:  		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 902
        // Source expression
        // ($cast ($uint<32>) call )
        $T[type_cast_3264_sample_start_] 
        $T[type_cast_3264_sample_completed_] 
        $T[type_cast_3264_update_start_] 
        $T[type_cast_3264_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_3264_sample_start_
        // done: Forward dependencies from call to transition type_cast_3264_sample_start_
        ;;[type_cast_3264_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3264_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3264_sample_start_ &-> (type_cast_3264_Sample)
        type_cast_3264_sample_completed_ <-& (type_cast_3264_Sample)
        type_cast_3264_sample_completed_ &-> ($null)
        type_cast_3264_update_start_ &-> (type_cast_3264_Update)
        type_cast_3264_update_completed_ <-& (type_cast_3264_Update)
        // Target expression
        // (as target) conv134
        // start: WAR dependencies for conv134
        // done: WAR dependencies for conv134
        // end:  		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add137
        // done: WAR dependencies for add137
        // start:  		$volatile add137 := (conv112 + conv134) $buffering 1
        //  file prog.linked.opt.aa, line 903
        // volatile! 
        // Source expression
        // (conv112 + conv134)
        // conv112
        // conv134
        // Target expression
        // (as target) add137
        // start: WAR dependencies for add137
        // done: WAR dependencies for add137
        // end:  		$volatile add137 := (conv112 + conv134) $buffering 1
        // start: WAR dependencies for add154
        // done: WAR dependencies for add154
        // start:  		$volatile add154 := (conv112 + conv38) $buffering 1
        //  file prog.linked.opt.aa, line 904
        // volatile! 
        // Source expression
        // (conv112 + conv38)
        // conv112
        // conv38
        // Target expression
        // (as target) add154
        // start: WAR dependencies for add154
        // done: WAR dependencies for add154
        // end:  		$volatile add154 := (conv112 + conv38) $buffering 1
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 905
        // volatile! 
        // Source expression
        // (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv112
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add67
        // done: WAR dependencies for add67
        // start:  		$volatile add67 := (shl + conv38) $buffering 1
        //  file prog.linked.opt.aa, line 906
        // volatile! 
        // Source expression
        // (shl + conv38)
        // shl
        // conv38
        // Target expression
        // (as target) add67
        // start: WAR dependencies for add67
        // done: WAR dependencies for add67
        // end:  		$volatile add67 := (shl + conv38) $buffering 1
        // start: WAR dependencies for add81
        // done: WAR dependencies for add81
        // start:  		$volatile add81 := (shl + conv134) $buffering 1
        //  file prog.linked.opt.aa, line 907
        // volatile! 
        // Source expression
        // (shl + conv134)
        // shl
        // conv134
        // Target expression
        // (as target) add81
        // start: WAR dependencies for add81
        // done: WAR dependencies for add81
        // end:  		$volatile add81 := (shl + conv134) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_3185_to_assign_stmt_3291__entry__ |-> (assign_stmt_3185_to_assign_stmt_3291)
      assign_stmt_3185_to_assign_stmt_3291__exit__ <-| (assign_stmt_3185_to_assign_stmt_3291)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 917
      <o> [do_while_stmt_3308]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_3308__entry__] 
        $P[do_while_stmt_3308__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_3308_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_3310
          // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_3310_sample_start_] 
          $T[phi_stmt_3310_sample_completed_] 
          $T[phi_stmt_3310_update_start_] 
          $T[phi_stmt_3310_update_completed_] 
          $T[phi_stmt_3310_sample_start__ps] 
          phi_stmt_3310_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_3310_sample_completed__ps] 
          phi_stmt_3310_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_3310_update_start__ps] 
          phi_stmt_3310_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_3310_update_completed__ps] 
          phi_stmt_3310_update_completed_ <-& (phi_stmt_3310_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_3310_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_3310_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_3310_update_start_)
          $T[phi_stmt_3310_loopback_trigger] 
          phi_stmt_3310_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_3310_loopback_sample_req] 
          $T[phi_stmt_3310_loopback_sample_req_ps] 
          phi_stmt_3310_loopback_sample_req <-& (phi_stmt_3310_loopback_sample_req_ps)
          phi_stmt_3310_loopback_sample_req &-> ($null)
          $T[phi_stmt_3310_entry_trigger] 
          phi_stmt_3310_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_3310_entry_sample_req] 
          $T[phi_stmt_3310_entry_sample_req_ps] 
          phi_stmt_3310_entry_sample_req <-& (phi_stmt_3310_entry_sample_req_ps)
          phi_stmt_3310_entry_sample_req &-> ($null)
          phi_stmt_3310_update_start_ o<-& (phi_stmt_3310_update_completed_ 0)
          phi_stmt_3310_sample_start_ o<-& (phi_stmt_3310_sample_completed_ 1)
          $T[phi_stmt_3310_merged_reqs] 
          $T[phi_stmt_3310_phi_mux_ack] 
          $T[phi_stmt_3310_phi_mux_ack_ps] 
          phi_stmt_3310_phi_mux_ack_ps <-& (phi_stmt_3310_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_3310_update_completed_)
          $T[type_cast_3313_sample_start__ps] 
          $T[type_cast_3313_sample_completed__ps] 
          $T[type_cast_3313_update_start__ps] 
          $T[type_cast_3313_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) kx_x0 )
          $T[type_cast_3313_sample_start_] 
          $T[type_cast_3313_sample_completed_] 
          $T[type_cast_3313_update_start_] 
          $T[type_cast_3313_update_completed_] 
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_3313_sample_start_
          // done: Forward dependencies from kx_x0 to transition type_cast_3313_sample_start_
          ;;[type_cast_3313_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3313_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3313_sample_start_ &-> (type_cast_3313_Sample)
          type_cast_3313_sample_completed_ <-& (type_cast_3313_Sample)
          type_cast_3313_sample_completed_ &-> ($null)
          type_cast_3313_update_start_ &-> (type_cast_3313_Update)
          type_cast_3313_update_completed_ <-& (type_cast_3313_Update)
          // RAW reenables for kx_x0
          // self-release: 
          type_cast_3313_sample_start_ o<-& (type_cast_3313_sample_completed_ 1)
          $null &-> (type_cast_3313_update_start_)
          type_cast_3313_update_start_ o<-& (type_cast_3313_update_completed_ 0)
          // Phi start dependency
          type_cast_3313_sample_start_ <-& (type_cast_3313_sample_start__ps)
          type_cast_3313_update_start_ <-& (type_cast_3313_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) kx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_3313_sample_completed__ps <-& (type_cast_3313_sample_completed_)
          type_cast_3313_update_completed__ps <-& (type_cast_3313_update_completed_)
          $T[R_kx_x1_at_entry_3314_sample_start__ps] 
          $T[R_kx_x1_at_entry_3314_sample_completed__ps] 
          $T[R_kx_x1_at_entry_3314_update_start__ps] 
          $T[R_kx_x1_at_entry_3314_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_kx_x1_at_entry_3314_sample_start_] 
          $T[R_kx_x1_at_entry_3314_sample_completed_] 
          R_kx_x1_at_entry_3314_sample_completed_ <-& (R_kx_x1_at_entry_3314_sample_start_)
          $T[R_kx_x1_at_entry_3314_update_start_] 
          $T [R_kx_x1_at_entry_3314_update_completed_] $delay 
          R_kx_x1_at_entry_3314_update_completed_ <-& (R_kx_x1_at_entry_3314_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_kx_x1_at_entry_3314_sample_start_ <-& (R_kx_x1_at_entry_3314_sample_start__ps)
          R_kx_x1_at_entry_3314_update_start_ <-& (R_kx_x1_at_entry_3314_update_start__ps)
          // Phi complete dependency.
          R_kx_x1_at_entry_3314_sample_completed__ps <-& (R_kx_x1_at_entry_3314_sample_completed_)
          R_kx_x1_at_entry_3314_update_completed__ps <-& (R_kx_x1_at_entry_3314_update_completed_)
          $phisequencer [ phi_stmt_3310_phi_seq] : 
          phi_stmt_3310_loopback_trigger type_cast_3313_sample_start__ps type_cast_3313_sample_completed__ps type_cast_3313_update_start__ps type_cast_3313_update_completed__ps phi_stmt_3310_entry_trigger R_kx_x1_at_entry_3314_sample_start__ps R_kx_x1_at_entry_3314_sample_completed__ps R_kx_x1_at_entry_3314_update_start__ps R_kx_x1_at_entry_3314_update_completed__ps :
          phi_stmt_3310_sample_start__ps phi_stmt_3310_sample_completed__ps phi_stmt_3310_update_start__ps phi_stmt_3310_update_completed__ps :
          phi_stmt_3310_loopback_sample_req_ps phi_stmt_3310_entry_sample_req_ps : 
          phi_stmt_3310_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_3310
          // start:  PHI statement phi_stmt_3315
          // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_3315_sample_start_] 
          $T[phi_stmt_3315_sample_completed_] 
          $T[phi_stmt_3315_update_start_] 
          $T[phi_stmt_3315_update_completed_] 
          $T[phi_stmt_3315_sample_start__ps] 
          phi_stmt_3315_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_3315_sample_completed__ps] 
          phi_stmt_3315_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_3315_update_start__ps] 
          phi_stmt_3315_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_3315_update_completed__ps] 
          phi_stmt_3315_update_completed_ <-& (phi_stmt_3315_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_3315_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_3315_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_3315_update_start_)
          $T[phi_stmt_3315_loopback_trigger] 
          phi_stmt_3315_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_3315_loopback_sample_req] 
          $T[phi_stmt_3315_loopback_sample_req_ps] 
          phi_stmt_3315_loopback_sample_req <-& (phi_stmt_3315_loopback_sample_req_ps)
          phi_stmt_3315_loopback_sample_req &-> ($null)
          $T[phi_stmt_3315_entry_trigger] 
          phi_stmt_3315_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_3315_entry_sample_req] 
          $T[phi_stmt_3315_entry_sample_req_ps] 
          phi_stmt_3315_entry_sample_req <-& (phi_stmt_3315_entry_sample_req_ps)
          phi_stmt_3315_entry_sample_req &-> ($null)
          phi_stmt_3315_update_start_ o<-& (phi_stmt_3315_update_completed_ 0)
          phi_stmt_3315_sample_start_ o<-& (phi_stmt_3315_sample_completed_ 1)
          $T[phi_stmt_3315_merged_reqs] 
          $T[phi_stmt_3315_phi_mux_ack] 
          $T[phi_stmt_3315_phi_mux_ack_ps] 
          phi_stmt_3315_phi_mux_ack_ps <-& (phi_stmt_3315_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_3315_update_completed_)
          $T[type_cast_3318_sample_start__ps] 
          $T[type_cast_3318_sample_completed__ps] 
          $T[type_cast_3318_update_start__ps] 
          $T[type_cast_3318_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) ix_x1 )
          $T[type_cast_3318_sample_start_] 
          $T[type_cast_3318_sample_completed_] 
          $T[type_cast_3318_update_start_] 
          $T[type_cast_3318_update_completed_] 
          // ix_x1
          // start: Forward dependencies from ix_x1 to transition type_cast_3318_sample_start_
          // done: Forward dependencies from ix_x1 to transition type_cast_3318_sample_start_
          ;;[type_cast_3318_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3318_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3318_sample_start_ &-> (type_cast_3318_Sample)
          type_cast_3318_sample_completed_ <-& (type_cast_3318_Sample)
          type_cast_3318_sample_completed_ &-> ($null)
          type_cast_3318_update_start_ &-> (type_cast_3318_Update)
          type_cast_3318_update_completed_ <-& (type_cast_3318_Update)
          // RAW reenables for ix_x1
          // self-release: 
          type_cast_3318_sample_start_ o<-& (type_cast_3318_sample_completed_ 1)
          $null &-> (type_cast_3318_update_start_)
          type_cast_3318_update_start_ o<-& (type_cast_3318_update_completed_ 0)
          // Phi start dependency
          type_cast_3318_sample_start_ <-& (type_cast_3318_sample_start__ps)
          type_cast_3318_update_start_ <-& (type_cast_3318_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) ix_x1 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_3318_sample_completed__ps <-& (type_cast_3318_sample_completed_)
          type_cast_3318_update_completed__ps <-& (type_cast_3318_update_completed_)
          $T[R_ix_x2_at_entry_3319_sample_start__ps] 
          $T[R_ix_x2_at_entry_3319_sample_completed__ps] 
          $T[R_ix_x2_at_entry_3319_update_start__ps] 
          $T[R_ix_x2_at_entry_3319_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_ix_x2_at_entry_3319_sample_start_] 
          $T[R_ix_x2_at_entry_3319_sample_completed_] 
          $T[R_ix_x2_at_entry_3319_update_start_] 
          $T[R_ix_x2_at_entry_3319_update_completed_] 
          ;;[R_ix_x2_at_entry_3319_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_ix_x2_at_entry_3319_sample_start_ &-> (R_ix_x2_at_entry_3319_Sample)
          R_ix_x2_at_entry_3319_sample_completed_ <-& (R_ix_x2_at_entry_3319_Sample)
          ;;[R_ix_x2_at_entry_3319_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_ix_x2_at_entry_3319_update_start_ &-> (R_ix_x2_at_entry_3319_Update)
          R_ix_x2_at_entry_3319_update_completed_ <-& (R_ix_x2_at_entry_3319_Update)
          // RAW reenables for ix_x2_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_ix_x2_at_entry_3319_sample_start_ <-& (R_ix_x2_at_entry_3319_sample_start__ps)
          R_ix_x2_at_entry_3319_update_start_ <-& (R_ix_x2_at_entry_3319_update_start__ps)
          // Phi complete dependency.
          R_ix_x2_at_entry_3319_sample_completed__ps <-& (R_ix_x2_at_entry_3319_sample_completed_)
          R_ix_x2_at_entry_3319_update_completed__ps <-& (R_ix_x2_at_entry_3319_update_completed_)
          $phisequencer [ phi_stmt_3315_phi_seq] : 
          phi_stmt_3315_loopback_trigger type_cast_3318_sample_start__ps type_cast_3318_sample_completed__ps type_cast_3318_update_start__ps type_cast_3318_update_completed__ps phi_stmt_3315_entry_trigger R_ix_x2_at_entry_3319_sample_start__ps R_ix_x2_at_entry_3319_sample_completed__ps R_ix_x2_at_entry_3319_update_start__ps R_ix_x2_at_entry_3319_update_completed__ps :
          phi_stmt_3315_sample_start__ps phi_stmt_3315_sample_completed__ps phi_stmt_3315_update_start__ps phi_stmt_3315_update_completed__ps :
          phi_stmt_3315_loopback_sample_req_ps phi_stmt_3315_entry_sample_req_ps : 
          phi_stmt_3315_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_3315
          // start:  PHI statement phi_stmt_3320
          // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
          // type of target is $uint<16>
          $T[phi_stmt_3320_sample_start_] 
          $T[phi_stmt_3320_sample_completed_] 
          $T[phi_stmt_3320_update_start_] 
          $T[phi_stmt_3320_update_completed_] 
          $T[phi_stmt_3320_sample_start__ps] 
          phi_stmt_3320_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_3320_sample_completed__ps] 
          phi_stmt_3320_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_3320_update_start__ps] 
          phi_stmt_3320_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_3320_update_completed__ps] 
          phi_stmt_3320_update_completed_ <-& (phi_stmt_3320_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_3320_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_3320_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_3320_update_start_)
          $T[phi_stmt_3320_loopback_trigger] 
          phi_stmt_3320_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_3320_loopback_sample_req] 
          $T[phi_stmt_3320_loopback_sample_req_ps] 
          phi_stmt_3320_loopback_sample_req <-& (phi_stmt_3320_loopback_sample_req_ps)
          phi_stmt_3320_loopback_sample_req &-> ($null)
          $T[phi_stmt_3320_entry_trigger] 
          phi_stmt_3320_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_3320_entry_sample_req] 
          $T[phi_stmt_3320_entry_sample_req_ps] 
          phi_stmt_3320_entry_sample_req <-& (phi_stmt_3320_entry_sample_req_ps)
          phi_stmt_3320_entry_sample_req &-> ($null)
          phi_stmt_3320_update_start_ o<-& (phi_stmt_3320_update_completed_ 0)
          phi_stmt_3320_sample_start_ o<-& (phi_stmt_3320_sample_completed_ 1)
          $T[phi_stmt_3320_merged_reqs] 
          $T[phi_stmt_3320_phi_mux_ack] 
          $T[phi_stmt_3320_phi_mux_ack_ps] 
          phi_stmt_3320_phi_mux_ack_ps <-& (phi_stmt_3320_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_3320_update_completed_)
          $T[type_cast_3323_sample_start__ps] 
          $T[type_cast_3323_sample_completed__ps] 
          $T[type_cast_3323_update_start__ps] 
          $T[type_cast_3323_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<16>) jx_x0 )
          $T[type_cast_3323_sample_start_] 
          $T[type_cast_3323_sample_completed_] 
          $T[type_cast_3323_update_start_] 
          $T[type_cast_3323_update_completed_] 
          // jx_x0
          // start: Forward dependencies from jx_x0 to transition type_cast_3323_sample_start_
          // done: Forward dependencies from jx_x0 to transition type_cast_3323_sample_start_
          ;;[type_cast_3323_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3323_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3323_sample_start_ &-> (type_cast_3323_Sample)
          type_cast_3323_sample_completed_ <-& (type_cast_3323_Sample)
          type_cast_3323_sample_completed_ &-> ($null)
          type_cast_3323_update_start_ &-> (type_cast_3323_Update)
          type_cast_3323_update_completed_ <-& (type_cast_3323_Update)
          // RAW reenables for jx_x0
          // self-release: 
          type_cast_3323_sample_start_ o<-& (type_cast_3323_sample_completed_ 1)
          $null &-> (type_cast_3323_update_start_)
          type_cast_3323_update_start_ o<-& (type_cast_3323_update_completed_ 0)
          // Phi start dependency
          type_cast_3323_sample_start_ <-& (type_cast_3323_sample_start__ps)
          type_cast_3323_update_start_ <-& (type_cast_3323_update_start__ps)
          // RAW reenables for ($cast ($uint<16>) jx_x0 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_3323_sample_completed__ps <-& (type_cast_3323_sample_completed_)
          type_cast_3323_update_completed__ps <-& (type_cast_3323_update_completed_)
          $T[R_jx_x1_at_entry_3324_sample_start__ps] 
          $T[R_jx_x1_at_entry_3324_sample_completed__ps] 
          $T[R_jx_x1_at_entry_3324_update_start__ps] 
          $T[R_jx_x1_at_entry_3324_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_jx_x1_at_entry_3324_sample_start_] 
          $T[R_jx_x1_at_entry_3324_sample_completed_] 
          $T[R_jx_x1_at_entry_3324_update_start_] 
          $T[R_jx_x1_at_entry_3324_update_completed_] 
          ;;[R_jx_x1_at_entry_3324_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_jx_x1_at_entry_3324_sample_start_ &-> (R_jx_x1_at_entry_3324_Sample)
          R_jx_x1_at_entry_3324_sample_completed_ <-& (R_jx_x1_at_entry_3324_Sample)
          ;;[R_jx_x1_at_entry_3324_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_jx_x1_at_entry_3324_update_start_ &-> (R_jx_x1_at_entry_3324_Update)
          R_jx_x1_at_entry_3324_update_completed_ <-& (R_jx_x1_at_entry_3324_Update)
          // RAW reenables for jx_x1_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_jx_x1_at_entry_3324_sample_start_ <-& (R_jx_x1_at_entry_3324_sample_start__ps)
          R_jx_x1_at_entry_3324_update_start_ <-& (R_jx_x1_at_entry_3324_update_start__ps)
          // Phi complete dependency.
          R_jx_x1_at_entry_3324_sample_completed__ps <-& (R_jx_x1_at_entry_3324_sample_completed_)
          R_jx_x1_at_entry_3324_update_completed__ps <-& (R_jx_x1_at_entry_3324_update_completed_)
          $phisequencer [ phi_stmt_3320_phi_seq] : 
          phi_stmt_3320_loopback_trigger type_cast_3323_sample_start__ps type_cast_3323_sample_completed__ps type_cast_3323_update_start__ps type_cast_3323_update_completed__ps phi_stmt_3320_entry_trigger R_jx_x1_at_entry_3324_sample_start__ps R_jx_x1_at_entry_3324_sample_completed__ps R_jx_x1_at_entry_3324_update_start__ps R_jx_x1_at_entry_3324_update_completed__ps :
          phi_stmt_3320_sample_start__ps phi_stmt_3320_sample_completed__ps phi_stmt_3320_update_start__ps phi_stmt_3320_update_completed__ps :
          phi_stmt_3320_loopback_sample_req_ps phi_stmt_3320_entry_sample_req_ps : 
          phi_stmt_3320_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_3320
          // start:  			conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 927
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
          $T[type_cast_3329_sample_start_] 
          $T[type_cast_3329_sample_completed_] 
          $T[type_cast_3329_update_start_] 
          $T[type_cast_3329_update_completed_] 
          // ($cast ($int<32>) kx_x1 )
          // kx_x1
          // start: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_3329_sample_start_
          type_cast_3329_sample_start_ <-& (phi_stmt_3310_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) kx_x1 ) to transition type_cast_3329_sample_start_
          ;;[type_cast_3329_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3329_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3329_sample_start_ &-> (type_cast_3329_Sample)
          type_cast_3329_sample_completed_ <-& (type_cast_3329_Sample)
          type_cast_3329_sample_completed_ &-> ($null)
          type_cast_3329_update_start_ &-> (type_cast_3329_Update)
          type_cast_3329_update_completed_ <-& (type_cast_3329_Update)
          // RAW reenables for ($cast ($int<32>) kx_x1 )
          phi_stmt_3310_update_start_ o<-& (type_cast_3329_sample_completed_ 0)
          // self-release: 
          type_cast_3329_sample_start_ o<-& (type_cast_3329_sample_completed_ 1)
          $null &-> (type_cast_3329_update_start_)
          type_cast_3329_update_start_ o<-& (type_cast_3329_update_completed_ 0)
          // Target expression
          // (as target) conv52
          // start: WAR dependencies for conv52
          // done: WAR dependencies for conv52
          // end:  			conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // start:  			$volatile add := (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 928
          // volatile! 
          // Source expression
          // (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
          // conv52
          // Target expression
          // (as target) add
          // start: WAR dependencies for add
          // done: WAR dependencies for add
          // end:  			$volatile add := (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
          // start:  			type_cast_2792_2792_delayed_2_0 := ($bitcast ($int<32>) conv36 ) $buffering 2 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 929
          // Source expression
          // ($bitcast ($int<32>) conv36 )
          $T[type_cast_3339_sample_start_] 
          $T[type_cast_3339_sample_completed_] 
          $T[type_cast_3339_update_start_] 
          $T[type_cast_3339_update_completed_] 
          // conv36
          // start: Forward dependencies from conv36 to transition type_cast_3339_sample_start_
          // done: Forward dependencies from conv36 to transition type_cast_3339_sample_start_
          ;;[type_cast_3339_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3339_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3339_sample_start_ &-> (type_cast_3339_Sample)
          type_cast_3339_sample_completed_ <-& (type_cast_3339_Sample)
          type_cast_3339_sample_completed_ &-> ($null)
          type_cast_3339_update_start_ &-> (type_cast_3339_Update)
          type_cast_3339_update_completed_ <-& (type_cast_3339_Update)
          // RAW reenables for conv36
          // self-release: 
          type_cast_3339_sample_start_ o<-& (type_cast_3339_sample_completed_ 1)
          $null &-> (type_cast_3339_update_start_)
          type_cast_3339_update_start_ o<-& (type_cast_3339_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2792_2792_delayed_2_0
          // start: WAR dependencies for type_cast_2792_2792_delayed_2_0
          // done: WAR dependencies for type_cast_2792_2792_delayed_2_0
          // end:  			type_cast_2792_2792_delayed_2_0 := ($bitcast ($int<32>) conv36 ) $buffering 2 $cut_through // bits of buffering = 64. 
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // start:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0) $buffering 1
          //  file prog.linked.opt.aa, line 930
          // volatile! 
          // Source expression
          // (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0)
          // ($bitcast ($int<32>) add )
          // add
          // type_cast_2792_2792_delayed_2_0
          // Target expression
          // (as target) cmp
          // start: WAR dependencies for cmp
          // done: WAR dependencies for cmp
          // end:  			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0) $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // start:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          //  file prog.linked.opt.aa, line 931
          // volatile! 
          // Source expression
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xthen_taken
          // start: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // done: WAR dependencies for whilex_xbody_ifx_xthen_taken
          // end:  			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // start:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          //  file prog.linked.opt.aa, line 932
          // volatile! 
          // Source expression
          // ( ~ cmp )
          // cmp
          // Target expression
          // (as target) whilex_xbody_ifx_xelse_taken
          // start: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // done: WAR dependencies for whilex_xbody_ifx_xelse_taken
          // end:  			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // start:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          //  file prog.linked.opt.aa, line 933
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xelse_taken
          // Target expression
          // (as target) ifx_xelse_exec_guard
          // start: WAR dependencies for ifx_xelse_exec_guard
          // done: WAR dependencies for ifx_xelse_exec_guard
          // end:  			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
          // start:  			jx_x1_2807_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 934
          $T[assign_stmt_3359_sample_start_] 
          $T[assign_stmt_3359_sample_completed_] 
          $T[assign_stmt_3359_update_start_] 
          $T[assign_stmt_3359_update_completed_] 
          // Source expression
          // jx_x1
          // Target expression
          // (as target) jx_x1_2807_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3359_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3359_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3359_sample_start_ &-> (assign_stmt_3359_Sample)
          assign_stmt_3359_sample_completed_ <-& (assign_stmt_3359_Sample)
          assign_stmt_3359_sample_completed_ &-> ($null)
          assign_stmt_3359_update_start_ &-> (assign_stmt_3359_Update)
          assign_stmt_3359_update_completed_ <-& (assign_stmt_3359_Update)
          // start: Forward dependencies from jx_x1 to transition assign_stmt_3359_sample_start_
          assign_stmt_3359_sample_start_ <-& (phi_stmt_3320_update_completed_)
          // done: Forward dependencies from jx_x1 to transition assign_stmt_3359_sample_start_
          // RAW reenables for jx_x1
          phi_stmt_3320_update_start_ o<-& (assign_stmt_3359_sample_completed_ 0)
          // self-release: 
          assign_stmt_3359_sample_start_ o<-& (assign_stmt_3359_sample_completed_ 1)
          $null &-> (assign_stmt_3359_update_start_)
          assign_stmt_3359_update_start_ o<-& (assign_stmt_3359_update_completed_ 0)
          // start: WAR dependencies for jx_x1_2807_delayed_1_0
          // done: WAR dependencies for jx_x1_2807_delayed_1_0
          // end:  			jx_x1_2807_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // start:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          //  file prog.linked.opt.aa, line 935
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
          // jx_x1_2807_delayed_1_0
          // Target expression
          // (as target) inc
          // start: WAR dependencies for inc
          // done: WAR dependencies for inc
          // end:  			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
          // start:  			$guard (ifx_xelse_exec_guard) conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 936
          // Guard expression 
          // ifx_xelse_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
          $T[type_cast_3371_sample_start_] 
          $T[type_cast_3371_sample_completed_] 
          $T[type_cast_3371_update_start_] 
          $T[type_cast_3371_update_completed_] 
          // Guard dependency for expression type_cast_3371 with guard R_ifx_xelse_exec_guard_3367
          type_cast_3371_sample_start_ <-& (type_cast_3329_update_completed_)
          type_cast_3371_sample_start_ <-& (type_cast_3339_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (type_cast_3371_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (type_cast_3371_sample_completed_ 0)
          // ($cast ($int<32>) inc )
          // inc
          // start: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_3371_sample_start_
          type_cast_3371_sample_start_ <-& (assign_stmt_3359_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc ) to transition type_cast_3371_sample_start_
          ;;[type_cast_3371_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3371_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3371_sample_start_ &-> (type_cast_3371_Sample)
          type_cast_3371_sample_completed_ <-& (type_cast_3371_Sample)
          type_cast_3371_sample_completed_ &-> ($null)
          type_cast_3371_update_start_ &-> (type_cast_3371_Update)
          type_cast_3371_update_completed_ <-& (type_cast_3371_Update)
          // RAW reenables for ($cast ($int<32>) inc )
          assign_stmt_3359_update_start_ o<-& (type_cast_3371_sample_completed_ 0)
          // self-release: 
          type_cast_3371_sample_start_ o<-& (type_cast_3371_sample_completed_ 1)
          $null &-> (type_cast_3371_update_start_)
          type_cast_3371_update_start_ o<-& (type_cast_3371_update_completed_ 0)
          // Target expression
          // (as target) conv62
          // start: WAR dependencies for conv62
          // done: WAR dependencies for conv62
          // end:  			$guard (ifx_xelse_exec_guard) conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_2818_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 937
          $T[assign_stmt_3375_sample_start_] 
          $T[assign_stmt_3375_sample_completed_] 
          $T[assign_stmt_3375_update_start_] 
          $T[assign_stmt_3375_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2818_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3375_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3375_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3375_sample_start_ &-> (assign_stmt_3375_Sample)
          assign_stmt_3375_sample_completed_ <-& (assign_stmt_3375_Sample)
          assign_stmt_3375_sample_completed_ &-> ($null)
          assign_stmt_3375_update_start_ &-> (assign_stmt_3375_Update)
          assign_stmt_3375_update_completed_ <-& (assign_stmt_3375_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3375_sample_start_
          assign_stmt_3375_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3375_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3375_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3375_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3375_sample_completed_ 0)
          // self-release: 
          assign_stmt_3375_sample_start_ o<-& (assign_stmt_3375_sample_completed_ 1)
          $null &-> (assign_stmt_3375_update_start_)
          assign_stmt_3375_update_start_ o<-& (assign_stmt_3375_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2818_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2818_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2818_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp68
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp68
          // start:  			$guard (ifx_xelse_exec_guard_2818_delayed_1_0) $volatile cmp68 := (conv62 == add67) $buffering 1
          //  file prog.linked.opt.aa, line 938
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2818_delayed_1_0
          // Source expression
          // (conv62 == add67)
          // conv62
          // add67
          // Target expression
          // (as target) cmp68
          // start: WAR dependencies for cmp68
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp68
          // end:  			$guard (ifx_xelse_exec_guard_2818_delayed_1_0) $volatile cmp68 := (conv62 == add67) $buffering 1
          // start:  			ifx_xelse_exec_guard_2824_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 939
          $T[assign_stmt_3384_sample_start_] 
          $T[assign_stmt_3384_sample_completed_] 
          $T[assign_stmt_3384_update_start_] 
          $T[assign_stmt_3384_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2824_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3384_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3384_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3384_sample_start_ &-> (assign_stmt_3384_Sample)
          assign_stmt_3384_sample_completed_ <-& (assign_stmt_3384_Sample)
          assign_stmt_3384_sample_completed_ &-> ($null)
          assign_stmt_3384_update_start_ &-> (assign_stmt_3384_Update)
          assign_stmt_3384_update_completed_ <-& (assign_stmt_3384_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3384_sample_start_
          assign_stmt_3384_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3384_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3384_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3384_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3384_sample_completed_ 0)
          // self-release: 
          assign_stmt_3384_sample_start_ o<-& (assign_stmt_3384_sample_completed_ 1)
          $null &-> (assign_stmt_3384_update_start_)
          assign_stmt_3384_update_start_ o<-& (assign_stmt_3384_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2824_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2824_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2824_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse_exec_guard_2824_delayed_1_0) inc73 := ($cast ($uint<16>) cmp68 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 940
          // Guard expression 
          // ifx_xelse_exec_guard_2824_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) cmp68 )
          $T[type_cast_3388_sample_start_] 
          $T[type_cast_3388_sample_completed_] 
          $T[type_cast_3388_update_start_] 
          $T[type_cast_3388_update_completed_] 
          // Guard dependency for expression type_cast_3388 with guard R_ifx_xelse_exec_guard_2824_delayed_1_0_3385
          type_cast_3388_sample_start_ <-& (assign_stmt_3384_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_2824_delayed_1_0
          assign_stmt_3384_update_start_ o<-& (type_cast_3388_sample_completed_ 0)
          // cmp68
          // start: Forward dependencies from cmp68 to transition type_cast_3388_sample_start_
          type_cast_3388_sample_start_ <-& (type_cast_3371_update_completed_)
          // done: Forward dependencies from cmp68 to transition type_cast_3388_sample_start_
          ;;[type_cast_3388_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3388_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3388_sample_start_ &-> (type_cast_3388_Sample)
          type_cast_3388_sample_completed_ <-& (type_cast_3388_Sample)
          type_cast_3388_sample_completed_ &-> ($null)
          type_cast_3388_update_start_ &-> (type_cast_3388_Update)
          type_cast_3388_update_completed_ <-& (type_cast_3388_Update)
          // RAW reenables for cmp68
          type_cast_3371_update_start_ o<-& (type_cast_3388_sample_completed_ 0)
          // self-release: 
          type_cast_3388_sample_start_ o<-& (type_cast_3388_sample_completed_ 1)
          $null &-> (type_cast_3388_update_start_)
          type_cast_3388_update_start_ o<-& (type_cast_3388_update_completed_ 0)
          // Target expression
          // (as target) inc73
          // start: WAR dependencies for inc73
          // done: WAR dependencies for inc73
          // end:  			$guard (ifx_xelse_exec_guard_2824_delayed_1_0) inc73 := ($cast ($uint<16>) cmp68 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xelse_exec_guard_2829_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 941
          $T[assign_stmt_3392_sample_start_] 
          $T[assign_stmt_3392_sample_completed_] 
          $T[assign_stmt_3392_update_start_] 
          $T[assign_stmt_3392_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2829_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3392_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3392_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3392_sample_start_ &-> (assign_stmt_3392_Sample)
          assign_stmt_3392_sample_completed_ <-& (assign_stmt_3392_Sample)
          assign_stmt_3392_sample_completed_ &-> ($null)
          assign_stmt_3392_update_start_ &-> (assign_stmt_3392_Update)
          assign_stmt_3392_update_completed_ <-& (assign_stmt_3392_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3392_sample_start_
          assign_stmt_3392_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3392_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3392_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3392_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3392_sample_completed_ 0)
          // self-release: 
          assign_stmt_3392_sample_start_ o<-& (assign_stmt_3392_sample_completed_ 1)
          $null &-> (assign_stmt_3392_update_start_)
          assign_stmt_3392_update_start_ o<-& (assign_stmt_3392_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2829_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2829_delayed_2_0
          // end:  			ifx_xelse_exec_guard_2829_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			ix_x2_2832_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 942
          $T[assign_stmt_3395_sample_start_] 
          $T[assign_stmt_3395_sample_completed_] 
          $T[assign_stmt_3395_update_start_] 
          $T[assign_stmt_3395_update_completed_] 
          // Source expression
          // ix_x2
          // Target expression
          // (as target) ix_x2_2832_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3395_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3395_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3395_sample_start_ &-> (assign_stmt_3395_Sample)
          assign_stmt_3395_sample_completed_ <-& (assign_stmt_3395_Sample)
          assign_stmt_3395_sample_completed_ &-> ($null)
          assign_stmt_3395_update_start_ &-> (assign_stmt_3395_Update)
          assign_stmt_3395_update_completed_ <-& (assign_stmt_3395_Update)
          // start: Forward dependencies from ix_x2 to transition assign_stmt_3395_sample_start_
          assign_stmt_3395_sample_start_ <-& (phi_stmt_3315_update_completed_)
          // done: Forward dependencies from ix_x2 to transition assign_stmt_3395_sample_start_
          // RAW reenables for ix_x2
          phi_stmt_3315_update_start_ o<-& (assign_stmt_3395_sample_completed_ 0)
          // self-release: 
          assign_stmt_3395_sample_start_ o<-& (assign_stmt_3395_sample_completed_ 1)
          $null &-> (assign_stmt_3395_update_start_)
          assign_stmt_3395_update_start_ o<-& (assign_stmt_3395_update_completed_ 0)
          // start: WAR dependencies for ix_x2_2832_delayed_3_0
          // done: WAR dependencies for ix_x2_2832_delayed_3_0
          // end:  			ix_x2_2832_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for inc73x_xix_x2
          // done: WAR dependencies for inc73x_xix_x2
          // start:  			$guard (ifx_xelse_exec_guard_2829_delayed_2_0) $volatile inc73x_xix_x2 := (inc73 + ix_x2_2832_delayed_3_0) $buffering 1
          //  file prog.linked.opt.aa, line 943
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2829_delayed_2_0
          // Source expression
          // (inc73 + ix_x2_2832_delayed_3_0)
          // inc73
          // ix_x2_2832_delayed_3_0
          // Target expression
          // (as target) inc73x_xix_x2
          // start: WAR dependencies for inc73x_xix_x2
          // done: WAR dependencies for inc73x_xix_x2
          // end:  			$guard (ifx_xelse_exec_guard_2829_delayed_2_0) $volatile inc73x_xix_x2 := (inc73 + ix_x2_2832_delayed_3_0) $buffering 1
          // start:  			ifx_xelse_exec_guard_2835_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 944
          $T[assign_stmt_3404_sample_start_] 
          $T[assign_stmt_3404_sample_completed_] 
          $T[assign_stmt_3404_update_start_] 
          $T[assign_stmt_3404_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2835_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3404_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3404_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3404_sample_start_ &-> (assign_stmt_3404_Sample)
          assign_stmt_3404_sample_completed_ <-& (assign_stmt_3404_Sample)
          assign_stmt_3404_sample_completed_ &-> ($null)
          assign_stmt_3404_update_start_ &-> (assign_stmt_3404_Update)
          assign_stmt_3404_update_completed_ <-& (assign_stmt_3404_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3404_sample_start_
          assign_stmt_3404_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3404_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3404_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3404_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3404_sample_completed_ 0)
          // self-release: 
          assign_stmt_3404_sample_start_ o<-& (assign_stmt_3404_sample_completed_ 1)
          $null &-> (assign_stmt_3404_update_start_)
          assign_stmt_3404_update_start_ o<-& (assign_stmt_3404_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2835_delayed_1_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2835_delayed_1_0
          // end:  			ifx_xelse_exec_guard_2835_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			inc_2839_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 945
          $T[assign_stmt_3407_sample_start_] 
          $T[assign_stmt_3407_sample_completed_] 
          $T[assign_stmt_3407_update_start_] 
          $T[assign_stmt_3407_update_completed_] 
          // Source expression
          // inc
          // Target expression
          // (as target) inc_2839_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3407_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3407_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3407_sample_start_ &-> (assign_stmt_3407_Sample)
          assign_stmt_3407_sample_completed_ <-& (assign_stmt_3407_Sample)
          assign_stmt_3407_sample_completed_ &-> ($null)
          assign_stmt_3407_update_start_ &-> (assign_stmt_3407_Update)
          assign_stmt_3407_update_completed_ <-& (assign_stmt_3407_Update)
          // start: Forward dependencies from inc to transition assign_stmt_3407_sample_start_
          assign_stmt_3407_sample_start_ <-& (assign_stmt_3359_update_completed_)
          // done: Forward dependencies from inc to transition assign_stmt_3407_sample_start_
          // RAW reenables for inc
          assign_stmt_3359_update_start_ o<-& (assign_stmt_3407_sample_completed_ 0)
          // self-release: 
          assign_stmt_3407_sample_start_ o<-& (assign_stmt_3407_sample_completed_ 1)
          $null &-> (assign_stmt_3407_update_start_)
          assign_stmt_3407_update_start_ o<-& (assign_stmt_3407_update_completed_ 0)
          // start: WAR dependencies for inc_2839_delayed_1_0
          // done: WAR dependencies for inc_2839_delayed_1_0
          // end:  			inc_2839_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // start:  			$guard (ifx_xelse_exec_guard_2835_delayed_1_0) $volatile jx_x2 := ( $mux cmp68 div  inc_2839_delayed_1_0 )  $buffering 1
          //  file prog.linked.opt.aa, line 946
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2835_delayed_1_0
          // Source expression
          // ( $mux cmp68 div  inc_2839_delayed_1_0 ) 
          // cmp68
          // div
          // inc_2839_delayed_1_0
          // Target expression
          // (as target) jx_x2
          // start: WAR dependencies for jx_x2
          // ignored out-of-scope w_root 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for jx_x2
          // end:  			$guard (ifx_xelse_exec_guard_2835_delayed_1_0) $volatile jx_x2 := ( $mux cmp68 div  inc_2839_delayed_1_0 )  $buffering 1
          // start:  			ifx_xelse_exec_guard_2842_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 947
          $T[assign_stmt_3417_sample_start_] 
          $T[assign_stmt_3417_sample_completed_] 
          $T[assign_stmt_3417_update_start_] 
          $T[assign_stmt_3417_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2842_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3417_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3417_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3417_sample_start_ &-> (assign_stmt_3417_Sample)
          assign_stmt_3417_sample_completed_ <-& (assign_stmt_3417_Sample)
          assign_stmt_3417_sample_completed_ &-> ($null)
          assign_stmt_3417_update_start_ &-> (assign_stmt_3417_Update)
          assign_stmt_3417_update_completed_ <-& (assign_stmt_3417_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3417_sample_start_
          assign_stmt_3417_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3417_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3417_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3417_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3417_sample_completed_ 0)
          // self-release: 
          assign_stmt_3417_sample_start_ o<-& (assign_stmt_3417_sample_completed_ 1)
          $null &-> (assign_stmt_3417_update_start_)
          assign_stmt_3417_update_start_ o<-& (assign_stmt_3417_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2842_delayed_2_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2842_delayed_2_0
          // end:  			ifx_xelse_exec_guard_2842_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 948
          // Guard expression 
          // ifx_xelse_exec_guard_2842_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) )
          $T[type_cast_3422_sample_start_] 
          $T[type_cast_3422_sample_completed_] 
          $T[type_cast_3422_update_start_] 
          $T[type_cast_3422_update_completed_] 
          // Guard dependency for expression type_cast_3422 with guard R_ifx_xelse_exec_guard_2842_delayed_2_0_3418
          type_cast_3422_sample_start_ <-& (assign_stmt_3417_update_completed_)
          // RAW reenables for ifx_xelse_exec_guard_2842_delayed_2_0
          assign_stmt_3417_update_start_ o<-& (type_cast_3422_sample_completed_ 0)
          // ($cast ($int<32>) inc73x_xix_x2 )
          // inc73x_xix_x2
          // start: Forward dependencies from ($cast ($int<32>) inc73x_xix_x2 ) to transition type_cast_3422_sample_start_
          type_cast_3422_sample_start_ <-& (type_cast_3388_update_completed_)
          type_cast_3422_sample_start_ <-& (assign_stmt_3395_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) inc73x_xix_x2 ) to transition type_cast_3422_sample_start_
          ;;[type_cast_3422_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3422_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3422_sample_start_ &-> (type_cast_3422_Sample)
          type_cast_3422_sample_completed_ <-& (type_cast_3422_Sample)
          type_cast_3422_sample_completed_ &-> ($null)
          type_cast_3422_update_start_ &-> (type_cast_3422_Update)
          type_cast_3422_update_completed_ <-& (type_cast_3422_Update)
          // RAW reenables for ($cast ($int<32>) inc73x_xix_x2 )
          type_cast_3388_update_start_ o<-& (type_cast_3422_sample_completed_ 0)
          assign_stmt_3395_update_start_ o<-& (type_cast_3422_sample_completed_ 0)
          // self-release: 
          type_cast_3422_sample_start_ o<-& (type_cast_3422_sample_completed_ 1)
          $null &-> (type_cast_3422_update_start_)
          type_cast_3422_update_start_ o<-& (type_cast_3422_update_completed_ 0)
          // Target expression
          // (as target) conv75
          // start: WAR dependencies for conv75
          // done: WAR dependencies for conv75
          // end:  			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse_exec_guard_2848_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 949
          $T[assign_stmt_3426_sample_start_] 
          $T[assign_stmt_3426_sample_completed_] 
          $T[assign_stmt_3426_update_start_] 
          $T[assign_stmt_3426_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2848_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3426_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3426_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3426_sample_start_ &-> (assign_stmt_3426_Sample)
          assign_stmt_3426_sample_completed_ <-& (assign_stmt_3426_Sample)
          assign_stmt_3426_sample_completed_ &-> ($null)
          assign_stmt_3426_update_start_ &-> (assign_stmt_3426_Update)
          assign_stmt_3426_update_completed_ <-& (assign_stmt_3426_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3426_sample_start_
          assign_stmt_3426_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3426_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3426_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3426_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3426_sample_completed_ 0)
          // self-release: 
          assign_stmt_3426_sample_start_ o<-& (assign_stmt_3426_sample_completed_ 1)
          $null &-> (assign_stmt_3426_update_start_)
          assign_stmt_3426_update_start_ o<-& (assign_stmt_3426_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2848_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2848_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2848_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for cmp82
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp82
          // start:  			$guard (ifx_xelse_exec_guard_2848_delayed_3_0) $volatile cmp82 := (conv75 == add81) $buffering 1
          //  file prog.linked.opt.aa, line 950
          // volatile! 
          // Guard expression 
          // ifx_xelse_exec_guard_2848_delayed_3_0
          // Source expression
          // (conv75 == add81)
          // conv75
          // add81
          // Target expression
          // (as target) cmp82
          // start: WAR dependencies for cmp82
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for cmp82
          // end:  			$guard (ifx_xelse_exec_guard_2848_delayed_3_0) $volatile cmp82 := (conv75 == add81) $buffering 1
          // start:  			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 951
          $T[assign_stmt_3435_sample_start_] 
          $T[assign_stmt_3435_sample_completed_] 
          $T[assign_stmt_3435_update_start_] 
          $T[assign_stmt_3435_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2855_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3435_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3435_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3435_sample_start_ &-> (assign_stmt_3435_Sample)
          assign_stmt_3435_sample_completed_ <-& (assign_stmt_3435_Sample)
          assign_stmt_3435_sample_completed_ &-> ($null)
          assign_stmt_3435_update_start_ &-> (assign_stmt_3435_Update)
          assign_stmt_3435_update_completed_ <-& (assign_stmt_3435_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3435_sample_start_
          assign_stmt_3435_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3435_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3435_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3435_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3435_sample_completed_ 0)
          // self-release: 
          assign_stmt_3435_sample_start_ o<-& (assign_stmt_3435_sample_completed_ 1)
          $null &-> (assign_stmt_3435_update_start_)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2855_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2855_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xthen84_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen84_taken
          // start:  			$volatile ifx_xelse_ifx_xthen84_taken := (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82) $buffering 1
          //  file prog.linked.opt.aa, line 952
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82)
          // ifx_xelse_exec_guard_2855_delayed_3_0
          // cmp82
          // Target expression
          // (as target) ifx_xelse_ifx_xthen84_taken
          // start: WAR dependencies for ifx_xelse_ifx_xthen84_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xthen84_taken
          // end:  			$volatile ifx_xelse_ifx_xthen84_taken := (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82) $buffering 1
          // start:  			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 953
          $T[assign_stmt_3443_sample_start_] 
          $T[assign_stmt_3443_sample_completed_] 
          $T[assign_stmt_3443_update_start_] 
          $T[assign_stmt_3443_update_completed_] 
          // Source expression
          // ifx_xelse_exec_guard
          // Target expression
          // (as target) ifx_xelse_exec_guard_2860_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3443_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3443_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3443_sample_start_ &-> (assign_stmt_3443_Sample)
          assign_stmt_3443_sample_completed_ <-& (assign_stmt_3443_Sample)
          assign_stmt_3443_sample_completed_ &-> ($null)
          assign_stmt_3443_update_start_ &-> (assign_stmt_3443_Update)
          assign_stmt_3443_update_completed_ <-& (assign_stmt_3443_Update)
          // start: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3443_sample_start_
          assign_stmt_3443_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3443_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xelse_exec_guard to transition assign_stmt_3443_sample_start_
          // RAW reenables for ifx_xelse_exec_guard
          type_cast_3329_update_start_ o<-& (assign_stmt_3443_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3443_sample_completed_ 0)
          // self-release: 
          assign_stmt_3443_sample_start_ o<-& (assign_stmt_3443_sample_completed_ 1)
          $null &-> (assign_stmt_3443_update_start_)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse_exec_guard_2860_delayed_3_0
          // done: WAR dependencies for ifx_xelse_exec_guard_2860_delayed_3_0
          // end:  			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xelse_ifx_xend86_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend86_taken
          // start:  			$volatile ifx_xelse_ifx_xend86_taken := (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 )) $buffering 1
          //  file prog.linked.opt.aa, line 954
          // volatile! 
          // Source expression
          // (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 ))
          // ifx_xelse_exec_guard_2860_delayed_3_0
          // ( ~ cmp82 )
          // cmp82
          // Target expression
          // (as target) ifx_xelse_ifx_xend86_taken
          // start: WAR dependencies for ifx_xelse_ifx_xend86_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xelse_ifx_xend86_taken
          // end:  			$volatile ifx_xelse_ifx_xend86_taken := (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 )) $buffering 1
          // start: WAR dependencies for ifx_xthen84_exec_guard
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen84_exec_guard
          // start:  			$volatile ifx_xthen84_exec_guard := ifx_xelse_ifx_xthen84_taken $buffering 1
          //  file prog.linked.opt.aa, line 955
          // volatile! 
          // Source expression
          // ifx_xelse_ifx_xthen84_taken
          // Target expression
          // (as target) ifx_xthen84_exec_guard
          // start: WAR dependencies for ifx_xthen84_exec_guard
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen84_exec_guard
          // end:  			$volatile ifx_xthen84_exec_guard := ifx_xelse_ifx_xthen84_taken $buffering 1
          // start: WAR dependencies for ifx_xthen84_ifx_xend86_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen84_ifx_xend86_taken
          // start:  			$volatile ifx_xthen84_ifx_xend86_taken := ifx_xthen84_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 956
          // volatile! 
          // Source expression
          // ifx_xthen84_exec_guard
          // Target expression
          // (as target) ifx_xthen84_ifx_xend86_taken
          // start: WAR dependencies for ifx_xthen84_ifx_xend86_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xthen84_ifx_xend86_taken
          // end:  			$volatile ifx_xthen84_ifx_xend86_taken := ifx_xthen84_exec_guard $buffering 1
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // start:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          //  file prog.linked.opt.aa, line 957
          // volatile! 
          // Source expression
          // whilex_xbody_ifx_xthen_taken
          // Target expression
          // (as target) ifx_xthen_exec_guard
          // start: WAR dependencies for ifx_xthen_exec_guard
          // done: WAR dependencies for ifx_xthen_exec_guard
          // end:  			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
          // start:  			kx_x1_2876_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 958
          $T[assign_stmt_3461_sample_start_] 
          $T[assign_stmt_3461_sample_completed_] 
          $T[assign_stmt_3461_update_start_] 
          $T[assign_stmt_3461_update_completed_] 
          // Source expression
          // kx_x1
          // Target expression
          // (as target) kx_x1_2876_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3461_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3461_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3461_sample_start_ &-> (assign_stmt_3461_Sample)
          assign_stmt_3461_sample_completed_ <-& (assign_stmt_3461_Sample)
          assign_stmt_3461_sample_completed_ &-> ($null)
          assign_stmt_3461_update_start_ &-> (assign_stmt_3461_Update)
          assign_stmt_3461_update_completed_ <-& (assign_stmt_3461_Update)
          // start: Forward dependencies from kx_x1 to transition assign_stmt_3461_sample_start_
          assign_stmt_3461_sample_start_ <-& (phi_stmt_3310_update_completed_)
          // done: Forward dependencies from kx_x1 to transition assign_stmt_3461_sample_start_
          // RAW reenables for kx_x1
          phi_stmt_3310_update_start_ o<-& (assign_stmt_3461_sample_completed_ 0)
          // self-release: 
          assign_stmt_3461_sample_start_ o<-& (assign_stmt_3461_sample_completed_ 1)
          $null &-> (assign_stmt_3461_update_start_)
          assign_stmt_3461_update_start_ o<-& (assign_stmt_3461_update_completed_ 0)
          // start: WAR dependencies for kx_x1_2876_delayed_1_0
          // done: WAR dependencies for kx_x1_2876_delayed_1_0
          // end:  			kx_x1_2876_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for add58
          // done: WAR dependencies for add58
          // start:  			$guard (ifx_xthen_exec_guard) $volatile add58 := (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          //  file prog.linked.opt.aa, line 959
          // volatile! 
          // Guard expression 
          // ifx_xthen_exec_guard
          // Source expression
          // (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
          // kx_x1_2876_delayed_1_0
          // Target expression
          // (as target) add58
          // start: WAR dependencies for add58
          // done: WAR dependencies for add58
          // end:  			$guard (ifx_xthen_exec_guard) $volatile add58 := (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken
          // start:  			$volatile ifx_xthen_ifx_xend86_taken := ifx_xthen_exec_guard $buffering 1
          //  file prog.linked.opt.aa, line 960
          // volatile! 
          // Source expression
          // ifx_xthen_exec_guard
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken
          // end:  			$volatile ifx_xthen_ifx_xend86_taken := ifx_xthen_exec_guard $buffering 1
          // start:  			ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 961
          $T[assign_stmt_3474_sample_start_] 
          $T[assign_stmt_3474_sample_completed_] 
          $T[assign_stmt_3474_update_start_] 
          $T[assign_stmt_3474_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3474_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3474_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3474_sample_start_ &-> (assign_stmt_3474_Sample)
          assign_stmt_3474_sample_completed_ <-& (assign_stmt_3474_Sample)
          assign_stmt_3474_sample_completed_ &-> ($null)
          assign_stmt_3474_update_start_ &-> (assign_stmt_3474_Update)
          assign_stmt_3474_update_completed_ <-& (assign_stmt_3474_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3474_sample_start_
          assign_stmt_3474_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3474_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3474_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend86_taken
          type_cast_3329_update_start_ o<-& (assign_stmt_3474_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3474_sample_completed_ 0)
          // self-release: 
          assign_stmt_3474_sample_start_ o<-& (assign_stmt_3474_sample_completed_ 1)
          $null &-> (assign_stmt_3474_update_start_)
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3474_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
          // end:  			ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for ifx_xend86_exec_guard
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend86_exec_guard
          // start:  			$volatile ifx_xend86_exec_guard := (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)) $buffering 1
          //  file prog.linked.opt.aa, line 962
          // volatile! 
          // Source expression
          // (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken))
          // ifx_xelse_ifx_xend86_taken
          // (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)
          // ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
          // ifx_xthen84_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xend86_exec_guard
          // start: WAR dependencies for ifx_xend86_exec_guard
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend86_exec_guard
          // end:  			$volatile ifx_xend86_exec_guard := (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)) $buffering 1
          // start:  			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 963
          $T[assign_stmt_3484_sample_start_] 
          $T[assign_stmt_3484_sample_completed_] 
          $T[assign_stmt_3484_update_start_] 
          $T[assign_stmt_3484_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3484_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3484_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3484_sample_start_ &-> (assign_stmt_3484_Sample)
          assign_stmt_3484_sample_completed_ <-& (assign_stmt_3484_Sample)
          assign_stmt_3484_sample_completed_ &-> ($null)
          assign_stmt_3484_update_start_ &-> (assign_stmt_3484_Update)
          assign_stmt_3484_update_completed_ <-& (assign_stmt_3484_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3484_sample_start_
          assign_stmt_3484_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3484_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3484_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend86_taken
          type_cast_3329_update_start_ o<-& (assign_stmt_3484_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3484_sample_completed_ 0)
          // self-release: 
          assign_stmt_3484_sample_start_ o<-& (assign_stmt_3484_sample_completed_ 1)
          $null &-> (assign_stmt_3484_update_start_)
          assign_stmt_3484_update_start_ o<-& (assign_stmt_3484_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
          // end:  			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
          //  file prog.linked.opt.aa, line 964
          // Source expression
          // ($bitcast ($uint<16>) add58 )
          $T[type_cast_3487_sample_start_] 
          $T[type_cast_3487_sample_completed_] 
          $T[type_cast_3487_update_start_] 
          $T[type_cast_3487_update_completed_] 
          // add58
          // start: Forward dependencies from add58 to transition type_cast_3487_sample_start_
          type_cast_3487_sample_start_ <-& (assign_stmt_3461_update_completed_)
          // done: Forward dependencies from add58 to transition type_cast_3487_sample_start_
          ;;[type_cast_3487_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3487_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3487_sample_start_ &-> (type_cast_3487_Sample)
          type_cast_3487_sample_completed_ <-& (type_cast_3487_Sample)
          type_cast_3487_sample_completed_ &-> ($null)
          type_cast_3487_update_start_ &-> (type_cast_3487_Update)
          type_cast_3487_update_completed_ <-& (type_cast_3487_Update)
          // RAW reenables for add58
          assign_stmt_3461_update_start_ o<-& (type_cast_3487_sample_completed_ 0)
          // self-release: 
          type_cast_3487_sample_start_ o<-& (type_cast_3487_sample_completed_ 1)
          $null &-> (type_cast_3487_update_start_)
          type_cast_3487_update_start_ o<-& (type_cast_3487_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2894_2894_delayed_3_0
          // start: WAR dependencies for type_cast_2894_2894_delayed_3_0
          // done: WAR dependencies for type_cast_2894_2894_delayed_3_0
          // end:  			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3487_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (type_cast_3487_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
          assign_stmt_3484_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3484_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 1// bits of buffering = 32. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for kx_x0
          // start:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 965
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
          // type_cast_2894_2894_delayed_3_0
          // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen84_ifx_xend86_taken
          // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend86_taken
          // Target expression
          // (as target) kx_x0
          // start: WAR dependencies for kx_x0
          // WAR dependency: Read: kx_x0 before Write: 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3487_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (type_cast_3487_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
          assign_stmt_3484_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3484_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3310_sample_completed_)
          phi_stmt_3310_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: kx_x0 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for kx_x0
          // end:  			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 966
          $T[assign_stmt_3508_sample_start_] 
          $T[assign_stmt_3508_sample_completed_] 
          $T[assign_stmt_3508_update_start_] 
          $T[assign_stmt_3508_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3508_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3508_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3508_sample_start_ &-> (assign_stmt_3508_Sample)
          assign_stmt_3508_sample_completed_ <-& (assign_stmt_3508_Sample)
          assign_stmt_3508_sample_completed_ &-> ($null)
          assign_stmt_3508_update_start_ &-> (assign_stmt_3508_Update)
          assign_stmt_3508_update_completed_ <-& (assign_stmt_3508_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3508_sample_start_
          assign_stmt_3508_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3508_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3508_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend86_taken
          type_cast_3329_update_start_ o<-& (assign_stmt_3508_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3508_sample_completed_ 0)
          // self-release: 
          assign_stmt_3508_sample_start_ o<-& (assign_stmt_3508_sample_completed_ 1)
          $null &-> (assign_stmt_3508_update_start_)
          assign_stmt_3508_update_start_ o<-& (assign_stmt_3508_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
          // end:  			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 967
          // Source expression
          // ($bitcast ($uint<16>) ix_x2 )
          $T[type_cast_3511_sample_start_] 
          $T[type_cast_3511_sample_completed_] 
          $T[type_cast_3511_update_start_] 
          $T[type_cast_3511_update_completed_] 
          // ix_x2
          // start: Forward dependencies from ix_x2 to transition type_cast_3511_sample_start_
          type_cast_3511_sample_start_ <-& (phi_stmt_3315_update_completed_)
          // done: Forward dependencies from ix_x2 to transition type_cast_3511_sample_start_
          ;;[type_cast_3511_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3511_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3511_sample_start_ &-> (type_cast_3511_Sample)
          type_cast_3511_sample_completed_ <-& (type_cast_3511_Sample)
          type_cast_3511_sample_completed_ &-> ($null)
          type_cast_3511_update_start_ &-> (type_cast_3511_Update)
          type_cast_3511_update_completed_ <-& (type_cast_3511_Update)
          // RAW reenables for ix_x2
          phi_stmt_3315_update_start_ o<-& (type_cast_3511_sample_completed_ 0)
          // self-release: 
          type_cast_3511_sample_start_ o<-& (type_cast_3511_sample_completed_ 1)
          $null &-> (type_cast_3511_update_start_)
          type_cast_3511_update_start_ o<-& (type_cast_3511_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2912_2912_delayed_4_0
          // start: WAR dependencies for type_cast_2912_2912_delayed_4_0
          // done: WAR dependencies for type_cast_2912_2912_delayed_4_0
          // end:  			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 968
          // Source expression
          // ($bitcast ($uint<16>) inc73x_xix_x2 )
          $T[type_cast_3515_sample_start_] 
          $T[type_cast_3515_sample_completed_] 
          $T[type_cast_3515_update_start_] 
          $T[type_cast_3515_update_completed_] 
          // inc73x_xix_x2
          // start: Forward dependencies from inc73x_xix_x2 to transition type_cast_3515_sample_start_
          type_cast_3515_sample_start_ <-& (type_cast_3388_update_completed_)
          type_cast_3515_sample_start_ <-& (assign_stmt_3395_update_completed_)
          // done: Forward dependencies from inc73x_xix_x2 to transition type_cast_3515_sample_start_
          ;;[type_cast_3515_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3515_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3515_sample_start_ &-> (type_cast_3515_Sample)
          type_cast_3515_sample_completed_ <-& (type_cast_3515_Sample)
          type_cast_3515_sample_completed_ &-> ($null)
          type_cast_3515_update_start_ &-> (type_cast_3515_Update)
          type_cast_3515_update_completed_ <-& (type_cast_3515_Update)
          // RAW reenables for inc73x_xix_x2
          type_cast_3388_update_start_ o<-& (type_cast_3515_sample_completed_ 0)
          assign_stmt_3395_update_start_ o<-& (type_cast_3515_sample_completed_ 0)
          // self-release: 
          type_cast_3515_sample_start_ o<-& (type_cast_3515_sample_completed_ 1)
          $null &-> (type_cast_3515_update_start_)
          type_cast_3515_update_start_ o<-& (type_cast_3515_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2915_2915_delayed_1_0
          // start: WAR dependencies for type_cast_2915_2915_delayed_1_0
          // done: WAR dependencies for type_cast_2915_2915_delayed_1_0
          // end:  			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start:  			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 969
          // Source expression
          // ($bitcast ($uint<16>) inc73x_xix_x2 )
          $T[type_cast_3519_sample_start_] 
          $T[type_cast_3519_sample_completed_] 
          $T[type_cast_3519_update_start_] 
          $T[type_cast_3519_update_completed_] 
          // inc73x_xix_x2
          // start: Forward dependencies from inc73x_xix_x2 to transition type_cast_3519_sample_start_
          type_cast_3519_sample_start_ <-& (type_cast_3388_update_completed_)
          type_cast_3519_sample_start_ <-& (assign_stmt_3395_update_completed_)
          // done: Forward dependencies from inc73x_xix_x2 to transition type_cast_3519_sample_start_
          ;;[type_cast_3519_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3519_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3519_sample_start_ &-> (type_cast_3519_Sample)
          type_cast_3519_sample_completed_ <-& (type_cast_3519_Sample)
          type_cast_3519_sample_completed_ &-> ($null)
          type_cast_3519_update_start_ &-> (type_cast_3519_Update)
          type_cast_3519_update_completed_ <-& (type_cast_3519_Update)
          // RAW reenables for inc73x_xix_x2
          type_cast_3388_update_start_ o<-& (type_cast_3519_sample_completed_ 0)
          assign_stmt_3395_update_start_ o<-& (type_cast_3519_sample_completed_ 0)
          // self-release: 
          type_cast_3519_sample_start_ o<-& (type_cast_3519_sample_completed_ 1)
          $null &-> (type_cast_3519_update_start_)
          type_cast_3519_update_start_ o<-& (type_cast_3519_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2918_2918_delayed_1_0
          // start: WAR dependencies for type_cast_2918_2918_delayed_1_0
          // done: WAR dependencies for type_cast_2918_2918_delayed_1_0
          // end:  			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3519_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3519_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_3515_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3515_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 1 $cut_through // bits of buffering = 16. 
          type_cast_3511_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3511_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          assign_stmt_3508_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3508_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for ix_x1
          // start:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 970
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
          // type_cast_2912_2912_delayed_4_0
          // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen84_ifx_xend86_taken
          // type_cast_2915_2915_delayed_1_0
          // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend86_taken
          // type_cast_2918_2918_delayed_1_0
          // Target expression
          // (as target) ix_x1
          // start: WAR dependencies for ix_x1
          // WAR dependency: Read: ix_x1 before Write: 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3519_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3519_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_3515_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3515_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_3511_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3511_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
          assign_stmt_3508_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3508_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3315_sample_completed_)
          phi_stmt_3315_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: ix_x1 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for ix_x1
          // end:  			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 971
          $T[assign_stmt_3536_sample_start_] 
          $T[assign_stmt_3536_sample_completed_] 
          $T[assign_stmt_3536_update_start_] 
          $T[assign_stmt_3536_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3536_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3536_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3536_sample_start_ &-> (assign_stmt_3536_Sample)
          assign_stmt_3536_sample_completed_ <-& (assign_stmt_3536_Sample)
          assign_stmt_3536_sample_completed_ &-> ($null)
          assign_stmt_3536_update_start_ &-> (assign_stmt_3536_Update)
          assign_stmt_3536_update_completed_ <-& (assign_stmt_3536_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3536_sample_start_
          assign_stmt_3536_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3536_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3536_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend86_taken
          type_cast_3329_update_start_ o<-& (assign_stmt_3536_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3536_sample_completed_ 0)
          // self-release: 
          assign_stmt_3536_sample_start_ o<-& (assign_stmt_3536_sample_completed_ 1)
          $null &-> (assign_stmt_3536_update_start_)
          assign_stmt_3536_update_start_ o<-& (assign_stmt_3536_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
          // end:  			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start:  			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 972
          // Source expression
          // ($bitcast ($uint<16>) jx_x1 )
          $T[type_cast_3539_sample_start_] 
          $T[type_cast_3539_sample_completed_] 
          $T[type_cast_3539_update_start_] 
          $T[type_cast_3539_update_completed_] 
          // jx_x1
          // start: Forward dependencies from jx_x1 to transition type_cast_3539_sample_start_
          type_cast_3539_sample_start_ <-& (phi_stmt_3320_update_completed_)
          // done: Forward dependencies from jx_x1 to transition type_cast_3539_sample_start_
          ;;[type_cast_3539_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3539_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3539_sample_start_ &-> (type_cast_3539_Sample)
          type_cast_3539_sample_completed_ <-& (type_cast_3539_Sample)
          type_cast_3539_sample_completed_ &-> ($null)
          type_cast_3539_update_start_ &-> (type_cast_3539_Update)
          type_cast_3539_update_completed_ <-& (type_cast_3539_Update)
          // RAW reenables for jx_x1
          phi_stmt_3320_update_start_ o<-& (type_cast_3539_sample_completed_ 0)
          // self-release: 
          type_cast_3539_sample_start_ o<-& (type_cast_3539_sample_completed_ 1)
          $null &-> (type_cast_3539_update_start_)
          type_cast_3539_update_start_ o<-& (type_cast_3539_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2928_2928_delayed_4_0
          // start: WAR dependencies for type_cast_2928_2928_delayed_4_0
          // done: WAR dependencies for type_cast_2928_2928_delayed_4_0
          // end:  			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          // start:  			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 973
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_3543_sample_start_] 
          $T[type_cast_3543_sample_completed_] 
          $T[type_cast_3543_update_start_] 
          $T[type_cast_3543_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_3543_sample_start_
          type_cast_3543_sample_start_ <-& (type_cast_3371_update_completed_)
          type_cast_3543_sample_start_ <-& (assign_stmt_3407_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_3543_sample_start_
          ;;[type_cast_3543_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3543_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3543_sample_start_ &-> (type_cast_3543_Sample)
          type_cast_3543_sample_completed_ <-& (type_cast_3543_Sample)
          type_cast_3543_sample_completed_ &-> ($null)
          type_cast_3543_update_start_ &-> (type_cast_3543_Update)
          type_cast_3543_update_completed_ <-& (type_cast_3543_Update)
          // RAW reenables for jx_x2
          type_cast_3371_update_start_ o<-& (type_cast_3543_sample_completed_ 0)
          assign_stmt_3407_update_start_ o<-& (type_cast_3543_sample_completed_ 0)
          // self-release: 
          type_cast_3543_sample_start_ o<-& (type_cast_3543_sample_completed_ 1)
          $null &-> (type_cast_3543_update_start_)
          type_cast_3543_update_start_ o<-& (type_cast_3543_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2931_2931_delayed_2_0
          // start: WAR dependencies for type_cast_2931_2931_delayed_2_0
          // done: WAR dependencies for type_cast_2931_2931_delayed_2_0
          // end:  			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start:  			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 974
          // Source expression
          // ($bitcast ($uint<16>) jx_x2 )
          $T[type_cast_3547_sample_start_] 
          $T[type_cast_3547_sample_completed_] 
          $T[type_cast_3547_update_start_] 
          $T[type_cast_3547_update_completed_] 
          // jx_x2
          // start: Forward dependencies from jx_x2 to transition type_cast_3547_sample_start_
          type_cast_3547_sample_start_ <-& (type_cast_3371_update_completed_)
          type_cast_3547_sample_start_ <-& (assign_stmt_3407_update_completed_)
          // done: Forward dependencies from jx_x2 to transition type_cast_3547_sample_start_
          ;;[type_cast_3547_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3547_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3547_sample_start_ &-> (type_cast_3547_Sample)
          type_cast_3547_sample_completed_ <-& (type_cast_3547_Sample)
          type_cast_3547_sample_completed_ &-> ($null)
          type_cast_3547_update_start_ &-> (type_cast_3547_Update)
          type_cast_3547_update_completed_ <-& (type_cast_3547_Update)
          // RAW reenables for jx_x2
          type_cast_3371_update_start_ o<-& (type_cast_3547_sample_completed_ 0)
          assign_stmt_3407_update_start_ o<-& (type_cast_3547_sample_completed_ 0)
          // self-release: 
          type_cast_3547_sample_start_ o<-& (type_cast_3547_sample_completed_ 1)
          $null &-> (type_cast_3547_update_start_)
          type_cast_3547_update_start_ o<-& (type_cast_3547_update_completed_ 0)
          // Target expression
          // (as target) type_cast_2934_2934_delayed_2_0
          // start: WAR dependencies for type_cast_2934_2934_delayed_2_0
          // done: WAR dependencies for type_cast_2934_2934_delayed_2_0
          // end:  			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3547_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3547_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_3543_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3543_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_3539_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3539_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          assign_stmt_3536_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3536_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for jx_x0
          // start:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 975
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
          // type_cast_2928_2928_delayed_4_0
          // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen84_ifx_xend86_taken
          // type_cast_2931_2931_delayed_2_0
          // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend86_taken
          // type_cast_2934_2934_delayed_2_0
          // Target expression
          // (as target) jx_x0
          // start: WAR dependencies for jx_x0
          // WAR dependency: Read: jx_x0 before Write: 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          type_cast_3547_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3547_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          assign_stmt_3443_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3443_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          type_cast_3543_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3543_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
          type_cast_3539_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3539_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
          assign_stmt_3536_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3536_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          type_cast_3422_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (type_cast_3422_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
          assign_stmt_3435_update_start_ <-& (phi_stmt_3320_sample_completed_)
          phi_stmt_3320_sample_start_ o<-& (assign_stmt_3435_update_completed_ 0)
          // WAR dependency: release  Read: jx_x0 with Write: 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
          // done: WAR dependencies for jx_x0
          // end:  			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          //  file prog.linked.opt.aa, line 976
          $T[assign_stmt_3564_sample_start_] 
          $T[assign_stmt_3564_sample_completed_] 
          $T[assign_stmt_3564_update_start_] 
          $T[assign_stmt_3564_update_completed_] 
          // Source expression
          // ifx_xthen_ifx_xend86_taken
          // Target expression
          // (as target) ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3564_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3564_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3564_sample_start_ &-> (assign_stmt_3564_Sample)
          assign_stmt_3564_sample_completed_ <-& (assign_stmt_3564_Sample)
          assign_stmt_3564_sample_completed_ &-> ($null)
          assign_stmt_3564_update_start_ &-> (assign_stmt_3564_Update)
          assign_stmt_3564_update_completed_ <-& (assign_stmt_3564_Update)
          // start: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3564_sample_start_
          assign_stmt_3564_sample_start_ <-& (type_cast_3329_update_completed_)
          assign_stmt_3564_sample_start_ <-& (type_cast_3339_update_completed_)
          // done: Forward dependencies from ifx_xthen_ifx_xend86_taken to transition assign_stmt_3564_sample_start_
          // RAW reenables for ifx_xthen_ifx_xend86_taken
          type_cast_3329_update_start_ o<-& (assign_stmt_3564_sample_completed_ 0)
          type_cast_3339_update_start_ o<-& (assign_stmt_3564_sample_completed_ 0)
          // self-release: 
          assign_stmt_3564_sample_start_ o<-& (assign_stmt_3564_sample_completed_ 1)
          $null &-> (assign_stmt_3564_update_start_)
          assign_stmt_3564_update_start_ o<-& (assign_stmt_3564_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
          // done: WAR dependencies for ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
          // end:  			ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // start:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          //  file prog.linked.opt.aa, line 977
          // volatile! 
          // Source expression
          // ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
          // ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
          // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
          // ifx_xthen84_ifx_xend86_taken
          // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
          // ifx_xelse_ifx_xend86_taken
          // Target expression
          // (as target) flagx_x0
          // start: WAR dependencies for flagx_x0
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for flagx_x0
          // end:  			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
          // start:  			$guard (ifx_xend86_exec_guard) conv90176 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 978
          // Guard expression 
          // ifx_xend86_exec_guard
          // Source expression
          // ($cast ($uint<32>) kx_x0 )
          $T[type_cast_3587_sample_start_] 
          $T[type_cast_3587_sample_completed_] 
          $T[type_cast_3587_update_start_] 
          $T[type_cast_3587_update_completed_] 
          // Guard dependency for expression type_cast_3587 with guard R_ifx_xend86_exec_guard_3584
          type_cast_3587_sample_start_ <-& (assign_stmt_3474_update_completed_)
          type_cast_3587_sample_start_ <-& (assign_stmt_3443_update_completed_)
          // root assign_stmt_3241 of guard-expression not in visited elements.
          // root assign_stmt_3265 of guard-expression not in visited elements.
          type_cast_3587_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3587_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          // kx_x0
          // start: Forward dependencies from kx_x0 to transition type_cast_3587_sample_start_
          type_cast_3587_sample_start_ <-& (type_cast_3487_update_completed_)
          type_cast_3587_sample_start_ <-& (assign_stmt_3484_update_completed_)
          type_cast_3587_sample_start_ <-& (assign_stmt_3443_update_completed_)
          type_cast_3587_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3587_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from kx_x0 to transition type_cast_3587_sample_start_
          ;;[type_cast_3587_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3587_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3587_sample_start_ &-> (type_cast_3587_Sample)
          type_cast_3587_sample_completed_ <-& (type_cast_3587_Sample)
          type_cast_3587_sample_completed_ &-> ($null)
          type_cast_3587_update_start_ &-> (type_cast_3587_Update)
          type_cast_3587_update_completed_ <-& (type_cast_3587_Update)
          // RAW reenables for kx_x0
          type_cast_3487_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          assign_stmt_3484_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3587_sample_completed_ 0)
          // self-release: 
          type_cast_3587_sample_start_ o<-& (type_cast_3587_sample_completed_ 1)
          $null &-> (type_cast_3587_update_start_)
          type_cast_3587_update_start_ o<-& (type_cast_3587_update_completed_ 0)
          // Target expression
          // (as target) conv90176
          // start: WAR dependencies for conv90176
          // done: WAR dependencies for conv90176
          // end:  			$guard (ifx_xend86_exec_guard) conv90176 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xend86_exec_guard) conv94 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 979
          // Guard expression 
          // ifx_xend86_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
          $T[type_cast_3593_sample_start_] 
          $T[type_cast_3593_sample_completed_] 
          $T[type_cast_3593_update_start_] 
          $T[type_cast_3593_update_completed_] 
          // Guard dependency for expression type_cast_3593 with guard R_ifx_xend86_exec_guard_3589
          type_cast_3593_sample_start_ <-& (assign_stmt_3474_update_completed_)
          type_cast_3593_sample_start_ <-& (assign_stmt_3443_update_completed_)
          // root assign_stmt_3241 of guard-expression not in visited elements.
          // root assign_stmt_3265 of guard-expression not in visited elements.
          type_cast_3593_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3593_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          // ($cast ($int<32>) jx_x0 )
          // jx_x0
          // start: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_3593_sample_start_
          type_cast_3593_sample_start_ <-& (type_cast_3547_update_completed_)
          type_cast_3593_sample_start_ <-& (assign_stmt_3443_update_completed_)
          type_cast_3593_sample_start_ <-& (type_cast_3543_update_completed_)
          type_cast_3593_sample_start_ <-& (type_cast_3539_update_completed_)
          type_cast_3593_sample_start_ <-& (assign_stmt_3536_update_completed_)
          type_cast_3593_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3593_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) jx_x0 ) to transition type_cast_3593_sample_start_
          ;;[type_cast_3593_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3593_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3593_sample_start_ &-> (type_cast_3593_Sample)
          type_cast_3593_sample_completed_ <-& (type_cast_3593_Sample)
          type_cast_3593_sample_completed_ &-> ($null)
          type_cast_3593_update_start_ &-> (type_cast_3593_Update)
          type_cast_3593_update_completed_ <-& (type_cast_3593_Update)
          // RAW reenables for ($cast ($int<32>) jx_x0 )
          type_cast_3547_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          type_cast_3543_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          type_cast_3539_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          assign_stmt_3536_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3593_sample_completed_ 0)
          // self-release: 
          type_cast_3593_sample_start_ o<-& (type_cast_3593_sample_completed_ 1)
          $null &-> (type_cast_3593_update_start_)
          type_cast_3593_update_start_ o<-& (type_cast_3593_update_completed_ 0)
          // Target expression
          // (as target) conv94
          // start: WAR dependencies for conv94
          // done: WAR dependencies for conv94
          // end:  			$guard (ifx_xend86_exec_guard) conv94 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend86_exec_guard_2971_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 980
          $T[assign_stmt_3597_sample_start_] 
          $T[assign_stmt_3597_sample_completed_] 
          $T[assign_stmt_3597_update_start_] 
          $T[assign_stmt_3597_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_2971_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3597_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3597_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3597_sample_start_ &-> (assign_stmt_3597_Sample)
          assign_stmt_3597_sample_completed_ <-& (assign_stmt_3597_Sample)
          assign_stmt_3597_sample_completed_ &-> ($null)
          assign_stmt_3597_update_start_ &-> (assign_stmt_3597_Update)
          assign_stmt_3597_update_completed_ <-& (assign_stmt_3597_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3597_sample_start_
          assign_stmt_3597_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3597_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3597_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3597_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3597_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3597_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3597_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3597_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3597_sample_completed_ 0)
          // self-release: 
          assign_stmt_3597_sample_start_ o<-& (assign_stmt_3597_sample_completed_ 1)
          $null &-> (assign_stmt_3597_update_start_)
          assign_stmt_3597_update_start_ o<-& (assign_stmt_3597_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_2971_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_2971_delayed_1_0
          // end:  			ifx_xend86_exec_guard_2971_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul95
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul95
          // start:  			$guard (ifx_xend86_exec_guard_2971_delayed_1_0) $volatile mul95 := (conv94 * conv42) $buffering 1
          //  file prog.linked.opt.aa, line 981
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_2971_delayed_1_0
          // Source expression
          // (conv94 * conv42)
          // conv94
          // conv42
          // Target expression
          // (as target) mul95
          // start: WAR dependencies for mul95
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul95
          // end:  			$guard (ifx_xend86_exec_guard_2971_delayed_1_0) $volatile mul95 := (conv94 * conv42) $buffering 1
          // start:  			$guard (ifx_xend86_exec_guard) conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 982
          // Guard expression 
          // ifx_xend86_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
          $T[type_cast_3608_sample_start_] 
          $T[type_cast_3608_sample_completed_] 
          $T[type_cast_3608_update_start_] 
          $T[type_cast_3608_update_completed_] 
          // Guard dependency for expression type_cast_3608 with guard R_ifx_xend86_exec_guard_3604
          type_cast_3608_sample_start_ <-& (assign_stmt_3474_update_completed_)
          type_cast_3608_sample_start_ <-& (assign_stmt_3443_update_completed_)
          // root assign_stmt_3241 of guard-expression not in visited elements.
          // root assign_stmt_3265 of guard-expression not in visited elements.
          type_cast_3608_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3608_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          // ($cast ($int<32>) ix_x1 )
          // ix_x1
          // start: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_3608_sample_start_
          type_cast_3608_sample_start_ <-& (type_cast_3519_update_completed_)
          type_cast_3608_sample_start_ <-& (type_cast_3515_update_completed_)
          type_cast_3608_sample_start_ <-& (type_cast_3511_update_completed_)
          type_cast_3608_sample_start_ <-& (assign_stmt_3508_update_completed_)
          type_cast_3608_sample_start_ <-& (assign_stmt_3443_update_completed_)
          type_cast_3608_sample_start_ <-& (type_cast_3422_update_completed_)
          type_cast_3608_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) ix_x1 ) to transition type_cast_3608_sample_start_
          ;;[type_cast_3608_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3608_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3608_sample_start_ &-> (type_cast_3608_Sample)
          type_cast_3608_sample_completed_ <-& (type_cast_3608_Sample)
          type_cast_3608_sample_completed_ &-> ($null)
          type_cast_3608_update_start_ &-> (type_cast_3608_Update)
          type_cast_3608_update_completed_ <-& (type_cast_3608_Update)
          // RAW reenables for ($cast ($int<32>) ix_x1 )
          type_cast_3519_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          type_cast_3515_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          type_cast_3511_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          assign_stmt_3508_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (type_cast_3608_sample_completed_ 0)
          // self-release: 
          type_cast_3608_sample_start_ o<-& (type_cast_3608_sample_completed_ 1)
          $null &-> (type_cast_3608_update_start_)
          type_cast_3608_update_start_ o<-& (type_cast_3608_update_completed_ 0)
          // Target expression
          // (as target) conv100
          // start: WAR dependencies for conv100
          // done: WAR dependencies for conv100
          // end:  			$guard (ifx_xend86_exec_guard) conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xend86_exec_guard_2983_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 983
          $T[assign_stmt_3612_sample_start_] 
          $T[assign_stmt_3612_sample_completed_] 
          $T[assign_stmt_3612_update_start_] 
          $T[assign_stmt_3612_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_2983_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3612_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3612_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3612_sample_start_ &-> (assign_stmt_3612_Sample)
          assign_stmt_3612_sample_completed_ <-& (assign_stmt_3612_Sample)
          assign_stmt_3612_sample_completed_ &-> ($null)
          assign_stmt_3612_update_start_ &-> (assign_stmt_3612_Update)
          assign_stmt_3612_update_completed_ <-& (assign_stmt_3612_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3612_sample_start_
          assign_stmt_3612_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3612_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3612_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3612_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3612_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3612_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3612_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3612_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3612_sample_completed_ 0)
          // self-release: 
          assign_stmt_3612_sample_start_ o<-& (assign_stmt_3612_sample_completed_ 1)
          $null &-> (assign_stmt_3612_update_start_)
          assign_stmt_3612_update_start_ o<-& (assign_stmt_3612_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_2983_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_2983_delayed_1_0
          // end:  			ifx_xend86_exec_guard_2983_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul101
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul101
          // start:  			$guard (ifx_xend86_exec_guard_2983_delayed_1_0) $volatile mul101 := (conv100 * conv98) $buffering 1
          //  file prog.linked.opt.aa, line 984
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_2983_delayed_1_0
          // Source expression
          // (conv100 * conv98)
          // conv100
          // conv98
          // Target expression
          // (as target) mul101
          // start: WAR dependencies for mul101
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul101
          // end:  			$guard (ifx_xend86_exec_guard_2983_delayed_1_0) $volatile mul101 := (conv100 * conv98) $buffering 1
          // start:  			ifx_xend86_exec_guard_2989_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 985
          $T[assign_stmt_3621_sample_start_] 
          $T[assign_stmt_3621_sample_completed_] 
          $T[assign_stmt_3621_update_start_] 
          $T[assign_stmt_3621_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_2989_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3621_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3621_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3621_sample_start_ &-> (assign_stmt_3621_Sample)
          assign_stmt_3621_sample_completed_ <-& (assign_stmt_3621_Sample)
          assign_stmt_3621_sample_completed_ &-> ($null)
          assign_stmt_3621_update_start_ &-> (assign_stmt_3621_Update)
          assign_stmt_3621_update_completed_ <-& (assign_stmt_3621_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3621_sample_start_
          assign_stmt_3621_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3621_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3621_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3621_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3621_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3621_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3621_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3621_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3621_sample_completed_ 0)
          // self-release: 
          assign_stmt_3621_sample_start_ o<-& (assign_stmt_3621_sample_completed_ 1)
          $null &-> (assign_stmt_3621_update_start_)
          assign_stmt_3621_update_start_ o<-& (assign_stmt_3621_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_2989_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_2989_delayed_1_0
          // end:  			ifx_xend86_exec_guard_2989_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add96
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add96
          // start:  			$guard (ifx_xend86_exec_guard_2989_delayed_1_0) $volatile add96 := (mul101 + conv90176) $buffering 1
          //  file prog.linked.opt.aa, line 986
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_2989_delayed_1_0
          // Source expression
          // (mul101 + conv90176)
          // mul101
          // conv90176
          // Target expression
          // (as target) add96
          // start: WAR dependencies for add96
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add96
          // end:  			$guard (ifx_xend86_exec_guard_2989_delayed_1_0) $volatile add96 := (mul101 + conv90176) $buffering 1
          // start:  			ifx_xend86_exec_guard_2995_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 987
          $T[assign_stmt_3630_sample_start_] 
          $T[assign_stmt_3630_sample_completed_] 
          $T[assign_stmt_3630_update_start_] 
          $T[assign_stmt_3630_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_2995_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3630_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3630_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3630_sample_start_ &-> (assign_stmt_3630_Sample)
          assign_stmt_3630_sample_completed_ <-& (assign_stmt_3630_Sample)
          assign_stmt_3630_sample_completed_ &-> ($null)
          assign_stmt_3630_update_start_ &-> (assign_stmt_3630_Update)
          assign_stmt_3630_update_completed_ <-& (assign_stmt_3630_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3630_sample_start_
          assign_stmt_3630_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3630_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3630_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3630_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3630_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3630_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3630_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3630_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3630_sample_completed_ 0)
          // self-release: 
          assign_stmt_3630_sample_start_ o<-& (assign_stmt_3630_sample_completed_ 1)
          $null &-> (assign_stmt_3630_update_start_)
          assign_stmt_3630_update_start_ o<-& (assign_stmt_3630_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_2995_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_2995_delayed_1_0
          // end:  			ifx_xend86_exec_guard_2995_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add102
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add102
          // start:  			$guard (ifx_xend86_exec_guard_2995_delayed_1_0) $volatile add102 := (add96 + mul95) $buffering 1
          //  file prog.linked.opt.aa, line 988
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_2995_delayed_1_0
          // Source expression
          // (add96 + mul95)
          // add96
          // mul95
          // Target expression
          // (as target) add102
          // start: WAR dependencies for add102
          // ignored out-of-scope w_root 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add102
          // end:  			$guard (ifx_xend86_exec_guard_2995_delayed_1_0) $volatile add102 := (add96 + mul95) $buffering 1
          // start:  			ifx_xend86_exec_guard_3001_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 989
          $T[assign_stmt_3639_sample_start_] 
          $T[assign_stmt_3639_sample_completed_] 
          $T[assign_stmt_3639_update_start_] 
          $T[assign_stmt_3639_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3001_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3639_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3639_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3639_sample_start_ &-> (assign_stmt_3639_Sample)
          assign_stmt_3639_sample_completed_ <-& (assign_stmt_3639_Sample)
          assign_stmt_3639_sample_completed_ &-> ($null)
          assign_stmt_3639_update_start_ &-> (assign_stmt_3639_Update)
          assign_stmt_3639_update_completed_ <-& (assign_stmt_3639_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3639_sample_start_
          assign_stmt_3639_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3639_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3639_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3639_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3639_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3639_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3639_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3639_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3639_sample_completed_ 0)
          // self-release: 
          assign_stmt_3639_sample_start_ o<-& (assign_stmt_3639_sample_completed_ 1)
          $null &-> (assign_stmt_3639_update_start_)
          assign_stmt_3639_update_start_ o<-& (assign_stmt_3639_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3001_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3001_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3001_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xend86_exec_guard_3001_delayed_1_0) conv103 := ($cast ($uint<16>) add102 ) $buffering 1// bits of buffering = 16. 
          //  file prog.linked.opt.aa, line 990
          // Guard expression 
          // ifx_xend86_exec_guard_3001_delayed_1_0
          // Source expression
          // ($cast ($uint<16>) add102 )
          $T[type_cast_3643_sample_start_] 
          $T[type_cast_3643_sample_completed_] 
          $T[type_cast_3643_update_start_] 
          $T[type_cast_3643_update_completed_] 
          // Guard dependency for expression type_cast_3643 with guard R_ifx_xend86_exec_guard_3001_delayed_1_0_3640
          type_cast_3643_sample_start_ <-& (assign_stmt_3639_update_completed_)
          // RAW reenables for ifx_xend86_exec_guard_3001_delayed_1_0
          assign_stmt_3639_update_start_ o<-& (type_cast_3643_sample_completed_ 0)
          // add102
          // start: Forward dependencies from add102 to transition type_cast_3643_sample_start_
          type_cast_3643_sample_start_ <-& (type_cast_3593_update_completed_)
          type_cast_3643_sample_start_ <-& (type_cast_3587_update_completed_)
          type_cast_3643_sample_start_ <-& (type_cast_3608_update_completed_)
          // done: Forward dependencies from add102 to transition type_cast_3643_sample_start_
          ;;[type_cast_3643_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3643_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3643_sample_start_ &-> (type_cast_3643_Sample)
          type_cast_3643_sample_completed_ <-& (type_cast_3643_Sample)
          type_cast_3643_sample_completed_ &-> ($null)
          type_cast_3643_update_start_ &-> (type_cast_3643_Update)
          type_cast_3643_update_completed_ <-& (type_cast_3643_Update)
          // RAW reenables for add102
          type_cast_3593_update_start_ o<-& (type_cast_3643_sample_completed_ 0)
          type_cast_3587_update_start_ o<-& (type_cast_3643_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (type_cast_3643_sample_completed_ 0)
          // self-release: 
          type_cast_3643_sample_start_ o<-& (type_cast_3643_sample_completed_ 1)
          $null &-> (type_cast_3643_update_start_)
          type_cast_3643_update_start_ o<-& (type_cast_3643_update_completed_ 0)
          // Target expression
          // (as target) conv103
          // start: WAR dependencies for conv103
          // done: WAR dependencies for conv103
          // end:  			$guard (ifx_xend86_exec_guard_3001_delayed_1_0) conv103 := ($cast ($uint<16>) add102 ) $buffering 1// bits of buffering = 16. 
          // start:  			ifx_xend86_exec_guard_3006_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 991
          $T[assign_stmt_3647_sample_start_] 
          $T[assign_stmt_3647_sample_completed_] 
          $T[assign_stmt_3647_update_start_] 
          $T[assign_stmt_3647_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3006_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3647_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3647_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3647_sample_start_ &-> (assign_stmt_3647_Sample)
          assign_stmt_3647_sample_completed_ <-& (assign_stmt_3647_Sample)
          assign_stmt_3647_sample_completed_ &-> ($null)
          assign_stmt_3647_update_start_ &-> (assign_stmt_3647_Update)
          assign_stmt_3647_update_completed_ <-& (assign_stmt_3647_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3647_sample_start_
          assign_stmt_3647_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3647_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3647_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3647_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3647_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3647_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3647_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3647_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3647_sample_completed_ 0)
          // self-release: 
          assign_stmt_3647_sample_start_ o<-& (assign_stmt_3647_sample_completed_ 1)
          $null &-> (assign_stmt_3647_update_start_)
          assign_stmt_3647_update_start_ o<-& (assign_stmt_3647_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3006_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3006_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3006_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // start:  			$guard (ifx_xend86_exec_guard_3006_delayed_1_0) $volatile sub := (conv94 - conv112) $buffering 1
          //  file prog.linked.opt.aa, line 992
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3006_delayed_1_0
          // Source expression
          // (conv94 - conv112)
          // conv94
          // conv112
          // Target expression
          // (as target) sub
          // start: WAR dependencies for sub
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub
          // end:  			$guard (ifx_xend86_exec_guard_3006_delayed_1_0) $volatile sub := (conv94 - conv112) $buffering 1
          // start:  			ifx_xend86_exec_guard_3012_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 993
          $T[assign_stmt_3656_sample_start_] 
          $T[assign_stmt_3656_sample_completed_] 
          $T[assign_stmt_3656_update_start_] 
          $T[assign_stmt_3656_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3012_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3656_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3656_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3656_sample_start_ &-> (assign_stmt_3656_Sample)
          assign_stmt_3656_sample_completed_ <-& (assign_stmt_3656_Sample)
          assign_stmt_3656_sample_completed_ &-> ($null)
          assign_stmt_3656_update_start_ &-> (assign_stmt_3656_Update)
          assign_stmt_3656_update_completed_ <-& (assign_stmt_3656_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3656_sample_start_
          assign_stmt_3656_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3656_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3656_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3656_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3656_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3656_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3656_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3656_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3656_sample_completed_ 0)
          // self-release: 
          assign_stmt_3656_sample_start_ o<-& (assign_stmt_3656_sample_completed_ 1)
          $null &-> (assign_stmt_3656_update_start_)
          assign_stmt_3656_update_start_ o<-& (assign_stmt_3656_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3012_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3012_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3012_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul113
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul113
          // start:  			$guard (ifx_xend86_exec_guard_3012_delayed_1_0) $volatile mul113 := (sub * conv36) $buffering 1
          //  file prog.linked.opt.aa, line 994
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3012_delayed_1_0
          // Source expression
          // (sub * conv36)
          // sub
          // conv36
          // Target expression
          // (as target) mul113
          // start: WAR dependencies for mul113
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul113
          // end:  			$guard (ifx_xend86_exec_guard_3012_delayed_1_0) $volatile mul113 := (sub * conv36) $buffering 1
          // start:  			ifx_xend86_exec_guard_3018_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 995
          $T[assign_stmt_3665_sample_start_] 
          $T[assign_stmt_3665_sample_completed_] 
          $T[assign_stmt_3665_update_start_] 
          $T[assign_stmt_3665_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3018_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3665_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3665_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3665_sample_start_ &-> (assign_stmt_3665_Sample)
          assign_stmt_3665_sample_completed_ <-& (assign_stmt_3665_Sample)
          assign_stmt_3665_sample_completed_ &-> ($null)
          assign_stmt_3665_update_start_ &-> (assign_stmt_3665_Update)
          assign_stmt_3665_update_completed_ <-& (assign_stmt_3665_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3665_sample_start_
          assign_stmt_3665_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3665_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3665_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3665_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3665_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3665_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3665_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3665_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3665_sample_completed_ 0)
          // self-release: 
          assign_stmt_3665_sample_start_ o<-& (assign_stmt_3665_sample_completed_ 1)
          $null &-> (assign_stmt_3665_update_start_)
          assign_stmt_3665_update_start_ o<-& (assign_stmt_3665_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3018_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3018_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3018_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for sub121
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub121
          // start:  			$guard (ifx_xend86_exec_guard_3018_delayed_1_0) $volatile sub121 := (conv100 - conv112) $buffering 1
          //  file prog.linked.opt.aa, line 996
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3018_delayed_1_0
          // Source expression
          // (conv100 - conv112)
          // conv100
          // conv112
          // Target expression
          // (as target) sub121
          // start: WAR dependencies for sub121
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sub121
          // end:  			$guard (ifx_xend86_exec_guard_3018_delayed_1_0) $volatile sub121 := (conv100 - conv112) $buffering 1
          // start:  			ifx_xend86_exec_guard_3024_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 997
          $T[assign_stmt_3674_sample_start_] 
          $T[assign_stmt_3674_sample_completed_] 
          $T[assign_stmt_3674_update_start_] 
          $T[assign_stmt_3674_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3024_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3674_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3674_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3674_sample_start_ &-> (assign_stmt_3674_Sample)
          assign_stmt_3674_sample_completed_ <-& (assign_stmt_3674_Sample)
          assign_stmt_3674_sample_completed_ &-> ($null)
          assign_stmt_3674_update_start_ &-> (assign_stmt_3674_Update)
          assign_stmt_3674_update_completed_ <-& (assign_stmt_3674_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3674_sample_start_
          assign_stmt_3674_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3674_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3674_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3674_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3674_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3674_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3674_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3674_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3674_sample_completed_ 0)
          // self-release: 
          assign_stmt_3674_sample_start_ o<-& (assign_stmt_3674_sample_completed_ 1)
          $null &-> (assign_stmt_3674_update_start_)
          assign_stmt_3674_update_start_ o<-& (assign_stmt_3674_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3024_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3024_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3024_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for mul122
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul122
          // start:  			$guard (ifx_xend86_exec_guard_3024_delayed_1_0) $volatile mul122 := (sub121 * conv116) $buffering 1
          //  file prog.linked.opt.aa, line 998
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3024_delayed_1_0
          // Source expression
          // (sub121 * conv116)
          // sub121
          // conv116
          // Target expression
          // (as target) mul122
          // start: WAR dependencies for mul122
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for mul122
          // end:  			$guard (ifx_xend86_exec_guard_3024_delayed_1_0) $volatile mul122 := (sub121 * conv116) $buffering 1
          // start:  			ifx_xend86_exec_guard_3030_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 999
          $T[assign_stmt_3683_sample_start_] 
          $T[assign_stmt_3683_sample_completed_] 
          $T[assign_stmt_3683_update_start_] 
          $T[assign_stmt_3683_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3030_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3683_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3683_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3683_sample_start_ &-> (assign_stmt_3683_Sample)
          assign_stmt_3683_sample_completed_ <-& (assign_stmt_3683_Sample)
          assign_stmt_3683_sample_completed_ &-> ($null)
          assign_stmt_3683_update_start_ &-> (assign_stmt_3683_Update)
          assign_stmt_3683_update_completed_ <-& (assign_stmt_3683_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3683_sample_start_
          assign_stmt_3683_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3683_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3683_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3683_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3683_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3683_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3683_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3683_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3683_sample_completed_ 0)
          // self-release: 
          assign_stmt_3683_sample_start_ o<-& (assign_stmt_3683_sample_completed_ 1)
          $null &-> (assign_stmt_3683_update_start_)
          assign_stmt_3683_update_start_ o<-& (assign_stmt_3683_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3030_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3030_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3030_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add114
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add114
          // start:  			$guard (ifx_xend86_exec_guard_3030_delayed_1_0) $volatile add114 := (mul122 + conv90176) $buffering 1
          //  file prog.linked.opt.aa, line 1000
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3030_delayed_1_0
          // Source expression
          // (mul122 + conv90176)
          // mul122
          // conv90176
          // Target expression
          // (as target) add114
          // start: WAR dependencies for add114
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add114
          // end:  			$guard (ifx_xend86_exec_guard_3030_delayed_1_0) $volatile add114 := (mul122 + conv90176) $buffering 1
          // start:  			ifx_xend86_exec_guard_3036_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1001
          $T[assign_stmt_3692_sample_start_] 
          $T[assign_stmt_3692_sample_completed_] 
          $T[assign_stmt_3692_update_start_] 
          $T[assign_stmt_3692_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3036_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3692_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3692_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3692_sample_start_ &-> (assign_stmt_3692_Sample)
          assign_stmt_3692_sample_completed_ <-& (assign_stmt_3692_Sample)
          assign_stmt_3692_sample_completed_ &-> ($null)
          assign_stmt_3692_update_start_ &-> (assign_stmt_3692_Update)
          assign_stmt_3692_update_completed_ <-& (assign_stmt_3692_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3692_sample_start_
          assign_stmt_3692_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3692_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3692_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3692_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3692_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3692_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3692_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3692_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3692_sample_completed_ 0)
          // self-release: 
          assign_stmt_3692_sample_start_ o<-& (assign_stmt_3692_sample_completed_ 1)
          $null &-> (assign_stmt_3692_update_start_)
          assign_stmt_3692_update_start_ o<-& (assign_stmt_3692_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3036_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3036_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3036_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for add123
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add123
          // start:  			$guard (ifx_xend86_exec_guard_3036_delayed_1_0) $volatile add123 := (add114 + mul113) $buffering 1
          //  file prog.linked.opt.aa, line 1002
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3036_delayed_1_0
          // Source expression
          // (add114 + mul113)
          // add114
          // mul113
          // Target expression
          // (as target) add123
          // start: WAR dependencies for add123
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for add123
          // end:  			$guard (ifx_xend86_exec_guard_3036_delayed_1_0) $volatile add123 := (add114 + mul113) $buffering 1
          // start:  			ifx_xend86_exec_guard_3042_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1003
          $T[assign_stmt_3701_sample_start_] 
          $T[assign_stmt_3701_sample_completed_] 
          $T[assign_stmt_3701_update_start_] 
          $T[assign_stmt_3701_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3042_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3701_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3701_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3701_sample_start_ &-> (assign_stmt_3701_Sample)
          assign_stmt_3701_sample_completed_ <-& (assign_stmt_3701_Sample)
          assign_stmt_3701_sample_completed_ &-> ($null)
          assign_stmt_3701_update_start_ &-> (assign_stmt_3701_Update)
          assign_stmt_3701_update_completed_ <-& (assign_stmt_3701_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3701_sample_start_
          assign_stmt_3701_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3701_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3701_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3701_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3701_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3701_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3701_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3701_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3701_sample_completed_ 0)
          // self-release: 
          assign_stmt_3701_sample_start_ o<-& (assign_stmt_3701_sample_completed_ 1)
          $null &-> (assign_stmt_3701_update_start_)
          assign_stmt_3701_update_start_ o<-& (assign_stmt_3701_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3042_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3042_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3042_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_3047_3047_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1004
          // Source expression
          // ($bitcast ($int<32>) conv112 )
          $T[type_cast_3704_sample_start_] 
          $T[type_cast_3704_sample_completed_] 
          $T[type_cast_3704_update_start_] 
          $T[type_cast_3704_update_completed_] 
          // conv112
          // start: Forward dependencies from conv112 to transition type_cast_3704_sample_start_
          // done: Forward dependencies from conv112 to transition type_cast_3704_sample_start_
          ;;[type_cast_3704_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3704_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3704_sample_start_ &-> (type_cast_3704_Sample)
          type_cast_3704_sample_completed_ <-& (type_cast_3704_Sample)
          type_cast_3704_sample_completed_ &-> ($null)
          type_cast_3704_update_start_ &-> (type_cast_3704_Update)
          type_cast_3704_update_completed_ <-& (type_cast_3704_Update)
          // RAW reenables for conv112
          // self-release: 
          type_cast_3704_sample_start_ o<-& (type_cast_3704_sample_completed_ 1)
          $null &-> (type_cast_3704_update_start_)
          type_cast_3704_update_start_ o<-& (type_cast_3704_update_completed_ 0)
          // Target expression
          // (as target) type_cast_3047_3047_delayed_1_0
          // start: WAR dependencies for type_cast_3047_3047_delayed_1_0
          // done: WAR dependencies for type_cast_3047_3047_delayed_1_0
          // end:  			type_cast_3047_3047_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp129
          // done: WAR dependencies for cmp129
          // start:  			$guard (ifx_xend86_exec_guard_3042_delayed_1_0) $volatile cmp129 := (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 1005
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3042_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0)
          // ($bitcast ($int<32>) conv100 )
          // conv100
          // type_cast_3047_3047_delayed_1_0
          // Target expression
          // (as target) cmp129
          // start: WAR dependencies for cmp129
          // done: WAR dependencies for cmp129
          // end:  			$guard (ifx_xend86_exec_guard_3042_delayed_1_0) $volatile cmp129 := (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0) $buffering 1
          // start:  			ifx_xend86_exec_guard_3050_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1006
          $T[assign_stmt_3715_sample_start_] 
          $T[assign_stmt_3715_sample_completed_] 
          $T[assign_stmt_3715_update_start_] 
          $T[assign_stmt_3715_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3050_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3715_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3715_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3715_sample_start_ &-> (assign_stmt_3715_Sample)
          assign_stmt_3715_sample_completed_ <-& (assign_stmt_3715_Sample)
          assign_stmt_3715_sample_completed_ &-> ($null)
          assign_stmt_3715_update_start_ &-> (assign_stmt_3715_Update)
          assign_stmt_3715_update_completed_ <-& (assign_stmt_3715_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3715_sample_start_
          assign_stmt_3715_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3715_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3715_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3715_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3715_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3715_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3715_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3715_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3715_sample_completed_ 0)
          // self-release: 
          assign_stmt_3715_sample_start_ o<-& (assign_stmt_3715_sample_completed_ 1)
          $null &-> (assign_stmt_3715_update_start_)
          assign_stmt_3715_update_start_ o<-& (assign_stmt_3715_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3050_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3050_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3050_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for cmp129x_xnot
          // done: WAR dependencies for cmp129x_xnot
          // start:  			$guard (ifx_xend86_exec_guard_3050_delayed_1_0) $volatile cmp129x_xnot := (cmp129 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 1007
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3050_delayed_1_0
          // Source expression
          // (cmp129 ^ ($bitcast ($uint<1>) _b1  ))
          // cmp129
          // Target expression
          // (as target) cmp129x_xnot
          // start: WAR dependencies for cmp129x_xnot
          // done: WAR dependencies for cmp129x_xnot
          // end:  			$guard (ifx_xend86_exec_guard_3050_delayed_1_0) $volatile cmp129x_xnot := (cmp129 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend86_exec_guard_3057_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1008
          $T[assign_stmt_3725_sample_start_] 
          $T[assign_stmt_3725_sample_completed_] 
          $T[assign_stmt_3725_update_start_] 
          $T[assign_stmt_3725_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3057_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3725_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3725_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3725_sample_start_ &-> (assign_stmt_3725_Sample)
          assign_stmt_3725_sample_completed_ <-& (assign_stmt_3725_Sample)
          assign_stmt_3725_sample_completed_ &-> ($null)
          assign_stmt_3725_update_start_ &-> (assign_stmt_3725_Update)
          assign_stmt_3725_update_completed_ <-& (assign_stmt_3725_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3725_sample_start_
          assign_stmt_3725_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3725_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3725_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3725_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3725_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3725_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3725_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3725_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3725_sample_completed_ 0)
          // self-release: 
          assign_stmt_3725_sample_start_ o<-& (assign_stmt_3725_sample_completed_ 1)
          $null &-> (assign_stmt_3725_update_start_)
          assign_stmt_3725_update_start_ o<-& (assign_stmt_3725_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3057_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3057_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3057_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_3062_3062_delayed_1_0 := ($bitcast ($int<32>) add137 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1009
          // Source expression
          // ($bitcast ($int<32>) add137 )
          $T[type_cast_3728_sample_start_] 
          $T[type_cast_3728_sample_completed_] 
          $T[type_cast_3728_update_start_] 
          $T[type_cast_3728_update_completed_] 
          // add137
          // start: Forward dependencies from add137 to transition type_cast_3728_sample_start_
          // done: Forward dependencies from add137 to transition type_cast_3728_sample_start_
          ;;[type_cast_3728_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3728_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3728_sample_start_ &-> (type_cast_3728_Sample)
          type_cast_3728_sample_completed_ <-& (type_cast_3728_Sample)
          type_cast_3728_sample_completed_ &-> ($null)
          type_cast_3728_update_start_ &-> (type_cast_3728_Update)
          type_cast_3728_update_completed_ <-& (type_cast_3728_Update)
          // RAW reenables for add137
          // self-release: 
          type_cast_3728_sample_start_ o<-& (type_cast_3728_sample_completed_ 1)
          $null &-> (type_cast_3728_update_start_)
          type_cast_3728_update_start_ o<-& (type_cast_3728_update_completed_ 0)
          // Target expression
          // (as target) type_cast_3062_3062_delayed_1_0
          // start: WAR dependencies for type_cast_3062_3062_delayed_1_0
          // done: WAR dependencies for type_cast_3062_3062_delayed_1_0
          // end:  			type_cast_3062_3062_delayed_1_0 := ($bitcast ($int<32>) add137 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp138
          // done: WAR dependencies for cmp138
          // start:  			$guard (ifx_xend86_exec_guard_3057_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 1010
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3057_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0)
          // ($bitcast ($int<32>) conv100 )
          // conv100
          // type_cast_3062_3062_delayed_1_0
          // Target expression
          // (as target) cmp138
          // start: WAR dependencies for cmp138
          // done: WAR dependencies for cmp138
          // end:  			$guard (ifx_xend86_exec_guard_3057_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0) $buffering 1
          // start:  			ifx_xend86_exec_guard_3065_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1011
          $T[assign_stmt_3739_sample_start_] 
          $T[assign_stmt_3739_sample_completed_] 
          $T[assign_stmt_3739_update_start_] 
          $T[assign_stmt_3739_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3065_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3739_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3739_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3739_sample_start_ &-> (assign_stmt_3739_Sample)
          assign_stmt_3739_sample_completed_ <-& (assign_stmt_3739_Sample)
          assign_stmt_3739_sample_completed_ &-> ($null)
          assign_stmt_3739_update_start_ &-> (assign_stmt_3739_Update)
          assign_stmt_3739_update_completed_ <-& (assign_stmt_3739_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3739_sample_start_
          assign_stmt_3739_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3739_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3739_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3739_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3739_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3739_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3739_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3739_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3739_sample_completed_ 0)
          // self-release: 
          assign_stmt_3739_sample_start_ o<-& (assign_stmt_3739_sample_completed_ 1)
          $null &-> (assign_stmt_3739_update_start_)
          assign_stmt_3739_update_start_ o<-& (assign_stmt_3739_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3065_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3065_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3065_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // start:  			$guard (ifx_xend86_exec_guard_3065_delayed_1_0) $volatile orx_xcond := (cmp129x_xnot & cmp138) $buffering 1
          //  file prog.linked.opt.aa, line 1012
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3065_delayed_1_0
          // Source expression
          // (cmp129x_xnot & cmp138)
          // cmp129x_xnot
          // cmp138
          // Target expression
          // (as target) orx_xcond
          // start: WAR dependencies for orx_xcond
          // done: WAR dependencies for orx_xcond
          // end:  			$guard (ifx_xend86_exec_guard_3065_delayed_1_0) $volatile orx_xcond := (cmp129x_xnot & cmp138) $buffering 1
          // start:  			ifx_xend86_exec_guard_3071_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1013
          $T[assign_stmt_3748_sample_start_] 
          $T[assign_stmt_3748_sample_completed_] 
          $T[assign_stmt_3748_update_start_] 
          $T[assign_stmt_3748_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3071_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3748_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3748_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3748_sample_start_ &-> (assign_stmt_3748_Sample)
          assign_stmt_3748_sample_completed_ <-& (assign_stmt_3748_Sample)
          assign_stmt_3748_sample_completed_ &-> ($null)
          assign_stmt_3748_update_start_ &-> (assign_stmt_3748_Update)
          assign_stmt_3748_update_completed_ <-& (assign_stmt_3748_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3748_sample_start_
          assign_stmt_3748_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3748_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3748_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3748_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3748_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3748_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3748_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3748_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3748_sample_completed_ 0)
          // self-release: 
          assign_stmt_3748_sample_start_ o<-& (assign_stmt_3748_sample_completed_ 1)
          $null &-> (assign_stmt_3748_update_start_)
          assign_stmt_3748_update_start_ o<-& (assign_stmt_3748_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3071_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3071_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3071_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // start:  			$guard (ifx_xend86_exec_guard_3071_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 1014
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3071_delayed_1_0
          // Source expression
          // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond
          // Target expression
          // (as target) orx_xcondx_xnot
          // start: WAR dependencies for orx_xcondx_xnot
          // done: WAR dependencies for orx_xcondx_xnot
          // end:  			$guard (ifx_xend86_exec_guard_3071_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend86_exec_guard_3078_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1015
          $T[assign_stmt_3758_sample_start_] 
          $T[assign_stmt_3758_sample_completed_] 
          $T[assign_stmt_3758_update_start_] 
          $T[assign_stmt_3758_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3078_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3758_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3758_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3758_sample_start_ &-> (assign_stmt_3758_Sample)
          assign_stmt_3758_sample_completed_ <-& (assign_stmt_3758_Sample)
          assign_stmt_3758_sample_completed_ &-> ($null)
          assign_stmt_3758_update_start_ &-> (assign_stmt_3758_Update)
          assign_stmt_3758_update_completed_ <-& (assign_stmt_3758_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3758_sample_start_
          assign_stmt_3758_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3758_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3758_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3758_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3758_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3758_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3758_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3758_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3758_sample_completed_ 0)
          // self-release: 
          assign_stmt_3758_sample_start_ o<-& (assign_stmt_3758_sample_completed_ 1)
          $null &-> (assign_stmt_3758_update_start_)
          assign_stmt_3758_update_start_ o<-& (assign_stmt_3758_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3078_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3078_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3078_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_3083_3083_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1016
          // Source expression
          // ($bitcast ($int<32>) conv112 )
          $T[type_cast_3761_sample_start_] 
          $T[type_cast_3761_sample_completed_] 
          $T[type_cast_3761_update_start_] 
          $T[type_cast_3761_update_completed_] 
          // conv112
          // start: Forward dependencies from conv112 to transition type_cast_3761_sample_start_
          // done: Forward dependencies from conv112 to transition type_cast_3761_sample_start_
          ;;[type_cast_3761_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3761_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3761_sample_start_ &-> (type_cast_3761_Sample)
          type_cast_3761_sample_completed_ <-& (type_cast_3761_Sample)
          type_cast_3761_sample_completed_ &-> ($null)
          type_cast_3761_update_start_ &-> (type_cast_3761_Update)
          type_cast_3761_update_completed_ <-& (type_cast_3761_Update)
          // RAW reenables for conv112
          // self-release: 
          type_cast_3761_sample_start_ o<-& (type_cast_3761_sample_completed_ 1)
          $null &-> (type_cast_3761_update_start_)
          type_cast_3761_update_start_ o<-& (type_cast_3761_update_completed_ 0)
          // Target expression
          // (as target) type_cast_3083_3083_delayed_1_0
          // start: WAR dependencies for type_cast_3083_3083_delayed_1_0
          // done: WAR dependencies for type_cast_3083_3083_delayed_1_0
          // end:  			type_cast_3083_3083_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp145
          // done: WAR dependencies for cmp145
          // start:  			$guard (ifx_xend86_exec_guard_3078_delayed_1_0) $volatile cmp145 := (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 1017
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3078_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0)
          // ($bitcast ($int<32>) conv94 )
          // conv94
          // type_cast_3083_3083_delayed_1_0
          // Target expression
          // (as target) cmp145
          // start: WAR dependencies for cmp145
          // done: WAR dependencies for cmp145
          // end:  			$guard (ifx_xend86_exec_guard_3078_delayed_1_0) $volatile cmp145 := (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0) $buffering 1
          // start:  			ifx_xend86_exec_guard_3086_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1018
          $T[assign_stmt_3772_sample_start_] 
          $T[assign_stmt_3772_sample_completed_] 
          $T[assign_stmt_3772_update_start_] 
          $T[assign_stmt_3772_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3086_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3772_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3772_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3772_sample_start_ &-> (assign_stmt_3772_Sample)
          assign_stmt_3772_sample_completed_ <-& (assign_stmt_3772_Sample)
          assign_stmt_3772_sample_completed_ &-> ($null)
          assign_stmt_3772_update_start_ &-> (assign_stmt_3772_Update)
          assign_stmt_3772_update_completed_ <-& (assign_stmt_3772_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3772_sample_start_
          assign_stmt_3772_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3772_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3772_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3772_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3772_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3772_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3772_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3772_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3772_sample_completed_ 0)
          // self-release: 
          assign_stmt_3772_sample_start_ o<-& (assign_stmt_3772_sample_completed_ 1)
          $null &-> (assign_stmt_3772_update_start_)
          assign_stmt_3772_update_start_ o<-& (assign_stmt_3772_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3086_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3086_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3086_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond181
          // done: WAR dependencies for orx_xcond181
          // start:  			$guard (ifx_xend86_exec_guard_3086_delayed_1_0) $volatile orx_xcond181 := (orx_xcondx_xnot | cmp145) $buffering 1
          //  file prog.linked.opt.aa, line 1019
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3086_delayed_1_0
          // Source expression
          // (orx_xcondx_xnot | cmp145)
          // orx_xcondx_xnot
          // cmp145
          // Target expression
          // (as target) orx_xcond181
          // start: WAR dependencies for orx_xcond181
          // done: WAR dependencies for orx_xcond181
          // end:  			$guard (ifx_xend86_exec_guard_3086_delayed_1_0) $volatile orx_xcond181 := (orx_xcondx_xnot | cmp145) $buffering 1
          // start:  			ifx_xend86_exec_guard_3092_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1020
          $T[assign_stmt_3781_sample_start_] 
          $T[assign_stmt_3781_sample_completed_] 
          $T[assign_stmt_3781_update_start_] 
          $T[assign_stmt_3781_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3092_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3781_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3781_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3781_sample_start_ &-> (assign_stmt_3781_Sample)
          assign_stmt_3781_sample_completed_ <-& (assign_stmt_3781_Sample)
          assign_stmt_3781_sample_completed_ &-> ($null)
          assign_stmt_3781_update_start_ &-> (assign_stmt_3781_Update)
          assign_stmt_3781_update_completed_ <-& (assign_stmt_3781_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3781_sample_start_
          assign_stmt_3781_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3781_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3781_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3781_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3781_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3781_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3781_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3781_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3781_sample_completed_ 0)
          // self-release: 
          assign_stmt_3781_sample_start_ o<-& (assign_stmt_3781_sample_completed_ 1)
          $null &-> (assign_stmt_3781_update_start_)
          assign_stmt_3781_update_start_ o<-& (assign_stmt_3781_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3092_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3092_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3092_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond181x_xnot
          // done: WAR dependencies for orx_xcond181x_xnot
          // start:  			$guard (ifx_xend86_exec_guard_3092_delayed_1_0) $volatile orx_xcond181x_xnot := (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file prog.linked.opt.aa, line 1021
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3092_delayed_1_0
          // Source expression
          // (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  ))
          // orx_xcond181
          // Target expression
          // (as target) orx_xcond181x_xnot
          // start: WAR dependencies for orx_xcond181x_xnot
          // done: WAR dependencies for orx_xcond181x_xnot
          // end:  			$guard (ifx_xend86_exec_guard_3092_delayed_1_0) $volatile orx_xcond181x_xnot := (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			ifx_xend86_exec_guard_3099_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1022
          $T[assign_stmt_3791_sample_start_] 
          $T[assign_stmt_3791_sample_completed_] 
          $T[assign_stmt_3791_update_start_] 
          $T[assign_stmt_3791_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3099_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3791_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3791_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3791_sample_start_ &-> (assign_stmt_3791_Sample)
          assign_stmt_3791_sample_completed_ <-& (assign_stmt_3791_Sample)
          assign_stmt_3791_sample_completed_ &-> ($null)
          assign_stmt_3791_update_start_ &-> (assign_stmt_3791_Update)
          assign_stmt_3791_update_completed_ <-& (assign_stmt_3791_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3791_sample_start_
          assign_stmt_3791_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3791_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3791_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3791_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3791_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3791_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3791_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3791_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3791_sample_completed_ 0)
          // self-release: 
          assign_stmt_3791_sample_start_ o<-& (assign_stmt_3791_sample_completed_ 1)
          $null &-> (assign_stmt_3791_update_start_)
          assign_stmt_3791_update_start_ o<-& (assign_stmt_3791_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3099_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3099_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3099_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			type_cast_3104_3104_delayed_1_0 := ($bitcast ($int<32>) add154 ) $buffering 1 $cut_through // bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1023
          // Source expression
          // ($bitcast ($int<32>) add154 )
          $T[type_cast_3794_sample_start_] 
          $T[type_cast_3794_sample_completed_] 
          $T[type_cast_3794_update_start_] 
          $T[type_cast_3794_update_completed_] 
          // add154
          // start: Forward dependencies from add154 to transition type_cast_3794_sample_start_
          // done: Forward dependencies from add154 to transition type_cast_3794_sample_start_
          ;;[type_cast_3794_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3794_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3794_sample_start_ &-> (type_cast_3794_Sample)
          type_cast_3794_sample_completed_ <-& (type_cast_3794_Sample)
          type_cast_3794_sample_completed_ &-> ($null)
          type_cast_3794_update_start_ &-> (type_cast_3794_Update)
          type_cast_3794_update_completed_ <-& (type_cast_3794_Update)
          // RAW reenables for add154
          // self-release: 
          type_cast_3794_sample_start_ o<-& (type_cast_3794_sample_completed_ 1)
          $null &-> (type_cast_3794_update_start_)
          type_cast_3794_update_start_ o<-& (type_cast_3794_update_completed_ 0)
          // Target expression
          // (as target) type_cast_3104_3104_delayed_1_0
          // start: WAR dependencies for type_cast_3104_3104_delayed_1_0
          // done: WAR dependencies for type_cast_3104_3104_delayed_1_0
          // end:  			type_cast_3104_3104_delayed_1_0 := ($bitcast ($int<32>) add154 ) $buffering 1 $cut_through // bits of buffering = 32. 
          // start: WAR dependencies for cmp155
          // done: WAR dependencies for cmp155
          // start:  			$guard (ifx_xend86_exec_guard_3099_delayed_1_0) $volatile cmp155 := (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0) $buffering 1
          //  file prog.linked.opt.aa, line 1024
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3099_delayed_1_0
          // Source expression
          // (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0)
          // ($bitcast ($int<32>) conv94 )
          // conv94
          // type_cast_3104_3104_delayed_1_0
          // Target expression
          // (as target) cmp155
          // start: WAR dependencies for cmp155
          // done: WAR dependencies for cmp155
          // end:  			$guard (ifx_xend86_exec_guard_3099_delayed_1_0) $volatile cmp155 := (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0) $buffering 1
          // start:  			ifx_xend86_exec_guard_3107_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1025
          $T[assign_stmt_3805_sample_start_] 
          $T[assign_stmt_3805_sample_completed_] 
          $T[assign_stmt_3805_update_start_] 
          $T[assign_stmt_3805_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3107_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3805_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3805_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3805_sample_start_ &-> (assign_stmt_3805_Sample)
          assign_stmt_3805_sample_completed_ <-& (assign_stmt_3805_Sample)
          assign_stmt_3805_sample_completed_ &-> ($null)
          assign_stmt_3805_update_start_ &-> (assign_stmt_3805_Update)
          assign_stmt_3805_update_completed_ <-& (assign_stmt_3805_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3805_sample_start_
          assign_stmt_3805_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3805_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3805_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3805_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3805_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3805_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3805_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3805_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3805_sample_completed_ 0)
          // self-release: 
          assign_stmt_3805_sample_start_ o<-& (assign_stmt_3805_sample_completed_ 1)
          $null &-> (assign_stmt_3805_update_start_)
          assign_stmt_3805_update_start_ o<-& (assign_stmt_3805_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3107_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3107_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3107_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for orx_xcond182
          // done: WAR dependencies for orx_xcond182
          // start:  			$guard (ifx_xend86_exec_guard_3107_delayed_1_0) $volatile orx_xcond182 := (orx_xcond181x_xnot & cmp155) $buffering 1
          //  file prog.linked.opt.aa, line 1026
          // volatile! 
          // Guard expression 
          // ifx_xend86_exec_guard_3107_delayed_1_0
          // Source expression
          // (orx_xcond181x_xnot & cmp155)
          // orx_xcond181x_xnot
          // cmp155
          // Target expression
          // (as target) orx_xcond182
          // start: WAR dependencies for orx_xcond182
          // done: WAR dependencies for orx_xcond182
          // end:  			$guard (ifx_xend86_exec_guard_3107_delayed_1_0) $volatile orx_xcond182 := (orx_xcond181x_xnot & cmp155) $buffering 1
          // start:  			ifx_xend86_exec_guard_3114_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1027
          $T[assign_stmt_3814_sample_start_] 
          $T[assign_stmt_3814_sample_completed_] 
          $T[assign_stmt_3814_update_start_] 
          $T[assign_stmt_3814_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3114_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3814_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3814_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3814_sample_start_ &-> (assign_stmt_3814_Sample)
          assign_stmt_3814_sample_completed_ <-& (assign_stmt_3814_Sample)
          assign_stmt_3814_sample_completed_ &-> ($null)
          assign_stmt_3814_update_start_ &-> (assign_stmt_3814_Update)
          assign_stmt_3814_update_completed_ <-& (assign_stmt_3814_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3814_sample_start_
          assign_stmt_3814_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3814_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3814_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3814_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3814_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3814_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3814_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3814_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3814_sample_completed_ 0)
          // self-release: 
          assign_stmt_3814_sample_start_ o<-& (assign_stmt_3814_sample_completed_ 1)
          $null &-> (assign_stmt_3814_update_start_)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3814_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3114_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3114_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3114_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend86_ifx_xelse160_taken
          // done: WAR dependencies for ifx_xend86_ifx_xelse160_taken
          // start:  			$volatile ifx_xend86_ifx_xelse160_taken := (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182) $buffering 1
          //  file prog.linked.opt.aa, line 1028
          // volatile! 
          // Source expression
          // (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182)
          // ifx_xend86_exec_guard_3114_delayed_1_0
          // orx_xcond182
          // Target expression
          // (as target) ifx_xend86_ifx_xelse160_taken
          // start: WAR dependencies for ifx_xend86_ifx_xelse160_taken
          // done: WAR dependencies for ifx_xend86_ifx_xelse160_taken
          // end:  			$volatile ifx_xend86_ifx_xelse160_taken := (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182) $buffering 1
          // start:  			ifx_xend86_exec_guard_3119_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1029
          $T[assign_stmt_3822_sample_start_] 
          $T[assign_stmt_3822_sample_completed_] 
          $T[assign_stmt_3822_update_start_] 
          $T[assign_stmt_3822_update_completed_] 
          // Source expression
          // ifx_xend86_exec_guard
          // Target expression
          // (as target) ifx_xend86_exec_guard_3119_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3822_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3822_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3822_sample_start_ &-> (assign_stmt_3822_Sample)
          assign_stmt_3822_sample_completed_ <-& (assign_stmt_3822_Sample)
          assign_stmt_3822_sample_completed_ &-> ($null)
          assign_stmt_3822_update_start_ &-> (assign_stmt_3822_Update)
          assign_stmt_3822_update_completed_ <-& (assign_stmt_3822_Update)
          // start: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3822_sample_start_
          assign_stmt_3822_sample_start_ <-& (assign_stmt_3474_update_completed_)
          assign_stmt_3822_sample_start_ <-& (assign_stmt_3443_update_completed_)
          assign_stmt_3822_sample_start_ <-& (type_cast_3422_update_completed_)
          assign_stmt_3822_sample_start_ <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from ifx_xend86_exec_guard to transition assign_stmt_3822_sample_start_
          // RAW reenables for ifx_xend86_exec_guard
          assign_stmt_3474_update_start_ o<-& (assign_stmt_3822_sample_completed_ 0)
          assign_stmt_3443_update_start_ o<-& (assign_stmt_3822_sample_completed_ 0)
          type_cast_3422_update_start_ o<-& (assign_stmt_3822_sample_completed_ 0)
          assign_stmt_3435_update_start_ o<-& (assign_stmt_3822_sample_completed_ 0)
          // self-release: 
          assign_stmt_3822_sample_start_ o<-& (assign_stmt_3822_sample_completed_ 1)
          $null &-> (assign_stmt_3822_update_start_)
          assign_stmt_3822_update_start_ o<-& (assign_stmt_3822_update_completed_ 0)
          // start: WAR dependencies for ifx_xend86_exec_guard_3119_delayed_1_0
          // done: WAR dependencies for ifx_xend86_exec_guard_3119_delayed_1_0
          // end:  			ifx_xend86_exec_guard_3119_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start: WAR dependencies for ifx_xend86_ifx_xthen157_taken
          // done: WAR dependencies for ifx_xend86_ifx_xthen157_taken
          // start:  			$volatile ifx_xend86_ifx_xthen157_taken := (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 )) $buffering 1
          //  file prog.linked.opt.aa, line 1030
          // volatile! 
          // Source expression
          // (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 ))
          // ifx_xend86_exec_guard_3119_delayed_1_0
          // ( ~ orx_xcond182 )
          // orx_xcond182
          // Target expression
          // (as target) ifx_xend86_ifx_xthen157_taken
          // start: WAR dependencies for ifx_xend86_ifx_xthen157_taken
          // done: WAR dependencies for ifx_xend86_ifx_xthen157_taken
          // end:  			$volatile ifx_xend86_ifx_xthen157_taken := (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 )) $buffering 1
          // start: WAR dependencies for ifx_xthen157_exec_guard
          // done: WAR dependencies for ifx_xthen157_exec_guard
          // start:  			$volatile ifx_xthen157_exec_guard := ifx_xend86_ifx_xthen157_taken $buffering 1
          //  file prog.linked.opt.aa, line 1031
          // volatile! 
          // Source expression
          // ifx_xend86_ifx_xthen157_taken
          // Target expression
          // (as target) ifx_xthen157_exec_guard
          // start: WAR dependencies for ifx_xthen157_exec_guard
          // done: WAR dependencies for ifx_xthen157_exec_guard
          // end:  			$volatile ifx_xthen157_exec_guard := ifx_xend86_ifx_xthen157_taken $buffering 1
          // start:  			ifx_xthen157_exec_guard_3127_delayed_1_0 := ifx_xthen157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1032
          $T[assign_stmt_3834_sample_start_] 
          $T[assign_stmt_3834_sample_completed_] 
          $T[assign_stmt_3834_update_start_] 
          $T[assign_stmt_3834_update_completed_] 
          // Source expression
          // ifx_xthen157_exec_guard
          // Target expression
          // (as target) ifx_xthen157_exec_guard_3127_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3834_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3834_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3834_sample_start_ &-> (assign_stmt_3834_Sample)
          assign_stmt_3834_sample_completed_ <-& (assign_stmt_3834_Sample)
          assign_stmt_3834_sample_completed_ &-> ($null)
          assign_stmt_3834_update_start_ &-> (assign_stmt_3834_Update)
          assign_stmt_3834_update_completed_ <-& (assign_stmt_3834_Update)
          // start: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3834_sample_start_
          assign_stmt_3834_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3834_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3834_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3834_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3834_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3834_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3834_sample_start_ <-& (assign_stmt_3822_update_completed_)
          // done: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3834_sample_start_
          // RAW reenables for ifx_xthen157_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          assign_stmt_3822_update_start_ o<-& (assign_stmt_3834_sample_completed_ 0)
          // self-release: 
          assign_stmt_3834_sample_start_ o<-& (assign_stmt_3834_sample_completed_ 1)
          $null &-> (assign_stmt_3834_update_start_)
          assign_stmt_3834_update_start_ o<-& (assign_stmt_3834_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen157_exec_guard_3127_delayed_1_0
          // done: WAR dependencies for ifx_xthen157_exec_guard_3127_delayed_1_0
          // end:  			ifx_xthen157_exec_guard_3127_delayed_1_0 := ifx_xthen157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xthen157_exec_guard_3127_delayed_1_0) conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1033
          // Guard expression 
          // ifx_xthen157_exec_guard_3127_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
          $T[type_cast_3839_sample_start_] 
          $T[type_cast_3839_sample_completed_] 
          $T[type_cast_3839_update_start_] 
          $T[type_cast_3839_update_completed_] 
          // Guard dependency for expression type_cast_3839 with guard R_ifx_xthen157_exec_guard_3127_delayed_1_0_3835
          type_cast_3839_sample_start_ <-& (assign_stmt_3834_update_completed_)
          // RAW reenables for ifx_xthen157_exec_guard_3127_delayed_1_0
          assign_stmt_3834_update_start_ o<-& (type_cast_3839_sample_completed_ 0)
          // ($cast ($int<32>) conv103 )
          // conv103
          // start: Forward dependencies from ($cast ($int<32>) conv103 ) to transition type_cast_3839_sample_start_
          type_cast_3839_sample_start_ <-& (type_cast_3643_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv103 ) to transition type_cast_3839_sample_start_
          ;;[type_cast_3839_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3839_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3839_sample_start_ &-> (type_cast_3839_Sample)
          type_cast_3839_sample_completed_ <-& (type_cast_3839_Sample)
          type_cast_3839_sample_completed_ &-> ($null)
          type_cast_3839_update_start_ &-> (type_cast_3839_Update)
          type_cast_3839_update_completed_ <-& (type_cast_3839_Update)
          // RAW reenables for ($cast ($int<32>) conv103 )
          type_cast_3643_update_start_ o<-& (type_cast_3839_sample_completed_ 0)
          // self-release: 
          type_cast_3839_sample_start_ o<-& (type_cast_3839_sample_completed_ 1)
          $null &-> (type_cast_3839_update_start_)
          type_cast_3839_update_start_ o<-& (type_cast_3839_update_completed_ 0)
          // Target expression
          // (as target) conv159
          // start: WAR dependencies for conv159
          // done: WAR dependencies for conv159
          // end:  			$guard (ifx_xthen157_exec_guard_3127_delayed_1_0) conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xthen157_exec_guard_3133_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 1034
          $T[assign_stmt_3843_sample_start_] 
          $T[assign_stmt_3843_sample_completed_] 
          $T[assign_stmt_3843_update_start_] 
          $T[assign_stmt_3843_update_completed_] 
          // Source expression
          // ifx_xthen157_exec_guard
          // Target expression
          // (as target) ifx_xthen157_exec_guard_3133_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3843_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3843_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3843_sample_start_ &-> (assign_stmt_3843_Sample)
          assign_stmt_3843_sample_completed_ <-& (assign_stmt_3843_Sample)
          assign_stmt_3843_sample_completed_ &-> ($null)
          assign_stmt_3843_update_start_ &-> (assign_stmt_3843_Update)
          assign_stmt_3843_update_completed_ <-& (assign_stmt_3843_Update)
          // start: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3843_sample_start_
          assign_stmt_3843_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3843_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3843_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3843_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3843_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3843_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3843_sample_start_ <-& (assign_stmt_3822_update_completed_)
          // done: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3843_sample_start_
          // RAW reenables for ifx_xthen157_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          assign_stmt_3822_update_start_ o<-& (assign_stmt_3843_sample_completed_ 0)
          // self-release: 
          assign_stmt_3843_sample_start_ o<-& (assign_stmt_3843_sample_completed_ 1)
          $null &-> (assign_stmt_3843_update_start_)
          assign_stmt_3843_update_start_ o<-& (assign_stmt_3843_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen157_exec_guard_3133_delayed_2_0
          // done: WAR dependencies for ifx_xthen157_exec_guard_3133_delayed_2_0
          // end:  			ifx_xthen157_exec_guard_3133_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // start:  			$guard (ifx_xthen157_exec_guard_3133_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 1035
          // volatile! 
          // Guard expression 
          // ifx_xthen157_exec_guard_3133_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv159 )
          // conv159
          // Target expression
          // (as target) shr
          // start: WAR dependencies for shr
          // done: WAR dependencies for shr
          // end:  			$guard (ifx_xthen157_exec_guard_3133_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xthen157_exec_guard_3143_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 1036
          $T[assign_stmt_3856_sample_start_] 
          $T[assign_stmt_3856_sample_completed_] 
          $T[assign_stmt_3856_update_start_] 
          $T[assign_stmt_3856_update_completed_] 
          // Source expression
          // ifx_xthen157_exec_guard
          // Target expression
          // (as target) ifx_xthen157_exec_guard_3143_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3856_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3856_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3856_sample_start_ &-> (assign_stmt_3856_Sample)
          assign_stmt_3856_sample_completed_ <-& (assign_stmt_3856_Sample)
          assign_stmt_3856_sample_completed_ &-> ($null)
          assign_stmt_3856_update_start_ &-> (assign_stmt_3856_Update)
          assign_stmt_3856_update_completed_ <-& (assign_stmt_3856_Update)
          // start: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3856_sample_start_
          assign_stmt_3856_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3856_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3856_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3856_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3856_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3856_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3856_sample_start_ <-& (assign_stmt_3822_update_completed_)
          // done: Forward dependencies from ifx_xthen157_exec_guard to transition assign_stmt_3856_sample_start_
          // RAW reenables for ifx_xthen157_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          assign_stmt_3822_update_start_ o<-& (assign_stmt_3856_sample_completed_ 0)
          // self-release: 
          assign_stmt_3856_sample_start_ o<-& (assign_stmt_3856_sample_completed_ 1)
          $null &-> (assign_stmt_3856_update_start_)
          assign_stmt_3856_update_start_ o<-& (assign_stmt_3856_update_completed_ 0)
          // start: WAR dependencies for ifx_xthen157_exec_guard_3143_delayed_2_0
          // done: WAR dependencies for ifx_xthen157_exec_guard_3143_delayed_2_0
          // end:  			ifx_xthen157_exec_guard_3143_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xthen157_exec_guard_3143_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1037
          // Guard expression 
          // ifx_xthen157_exec_guard_3143_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
          $T[type_cast_3861_sample_start_] 
          $T[type_cast_3861_sample_completed_] 
          $T[type_cast_3861_update_start_] 
          $T[type_cast_3861_update_completed_] 
          // Guard dependency for expression type_cast_3861 with guard R_ifx_xthen157_exec_guard_3143_delayed_2_0_3857
          type_cast_3861_sample_start_ <-& (assign_stmt_3856_update_completed_)
          // RAW reenables for ifx_xthen157_exec_guard_3143_delayed_2_0
          assign_stmt_3856_update_start_ o<-& (type_cast_3861_sample_completed_ 0)
          // ($cast ($int<64>) shr )
          // shr
          // start: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_3861_sample_start_
          type_cast_3861_sample_start_ <-& (type_cast_3839_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_3861_sample_start_
          ;;[type_cast_3861_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3861_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3861_sample_start_ &-> (type_cast_3861_Sample)
          type_cast_3861_sample_completed_ <-& (type_cast_3861_Sample)
          type_cast_3861_sample_completed_ &-> ($null)
          type_cast_3861_update_start_ &-> (type_cast_3861_Update)
          type_cast_3861_update_completed_ <-& (type_cast_3861_Update)
          // RAW reenables for ($cast ($int<64>) shr )
          type_cast_3839_update_start_ o<-& (type_cast_3861_sample_completed_ 0)
          // self-release: 
          type_cast_3861_sample_start_ o<-& (type_cast_3861_sample_completed_ 1)
          $null &-> (type_cast_3861_update_start_)
          type_cast_3861_update_start_ o<-& (type_cast_3861_update_completed_ 0)
          // Target expression
          // (as target) idxprom
          // start: WAR dependencies for idxprom
          // done: WAR dependencies for idxprom
          // end:  			$guard (ifx_xthen157_exec_guard_3143_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1038
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
          $T[addr_of_3868_sample_start_] 
          $T[addr_of_3868_sample_completed_] 
          $T[addr_of_3868_update_start_] 
          $T[addr_of_3868_update_completed_] 
          $T[array_obj_ref_3867_root_address_calculated] 
          $T[array_obj_ref_3867_offset_calculated] 
          $T[array_obj_ref_3867_index_resized_1] 
          $T[array_obj_ref_3867_index_scaled_1] 
          $T[array_obj_ref_3867_index_computed_1] 
          // idxprom
          // start: Forward dependencies from idxprom to transition array_obj_ref_3867_index_computed_1
          array_obj_ref_3867_index_computed_1 <-& (type_cast_3861_update_completed_)
          // done: Forward dependencies from idxprom to transition array_obj_ref_3867_index_computed_1
          ;;[array_obj_ref_3867_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3867_index_computed_1 &-> (array_obj_ref_3867_index_resize_1)
          array_obj_ref_3867_index_resized_1 <-& (array_obj_ref_3867_index_resize_1)
          ;;[array_obj_ref_3867_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3867_index_resized_1 &-> (array_obj_ref_3867_index_scale_1)
          array_obj_ref_3867_index_scaled_1 <-& (array_obj_ref_3867_index_scale_1)
          $T[array_obj_ref_3867_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3867_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3867_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3867_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3867_index_scaled_1 &-> (array_obj_ref_3867_final_index_sum_regn_Sample)
          array_obj_ref_3867_final_index_sum_regn_sample_complete <-& (array_obj_ref_3867_final_index_sum_regn_Sample)
          array_obj_ref_3867_final_index_sum_regn_update_start &-> (array_obj_ref_3867_final_index_sum_regn_Update)
          array_obj_ref_3867_offset_calculated <-& (array_obj_ref_3867_final_index_sum_regn_Update)
          type_cast_3861_update_start_ o<-& (array_obj_ref_3867_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3867_final_index_sum_regn_update_start o<-& (array_obj_ref_3867_offset_calculated 0)
          ;;[array_obj_ref_3867_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3867_offset_calculated &-> (array_obj_ref_3867_base_plus_offset)
          array_obj_ref_3867_root_address_calculated <-& (array_obj_ref_3867_base_plus_offset)
          ;;[addr_of_3868_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3868_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3868_sample_start_ <-& (array_obj_ref_3867_root_address_calculated)
          addr_of_3868_sample_start_ &-> (addr_of_3868_request)
          addr_of_3868_sample_completed_ <-& (addr_of_3868_request)
          addr_of_3868_sample_completed_ &-> ($null)
          addr_of_3868_update_start_ &-> (addr_of_3868_complete)
          addr_of_3868_update_completed_ <-& (addr_of_3868_complete)
          // reenables .
          array_obj_ref_3867_final_index_sum_regn_update_start o<-& (addr_of_3868_sample_completed_ 0)
          // self-release 
          addr_of_3868_sample_start_ o<-& (addr_of_3868_sample_completed_ 1)
          addr_of_3868_update_start_ o<-& (addr_of_3868_update_completed_ 0)
          // Target expression
          // (as target) arrayidx
          // start: WAR dependencies for arrayidx
          // done: WAR dependencies for arrayidx
          // end:  			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
          // start:  			$guard (ifx_xthen157_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1039
          // Guard expression 
          // ifx_xthen157_exec_guard
          // Target expression
          // ->(arrayidx)
          $T[ptr_deref_3872_sample_start_] 
          $T[ptr_deref_3872_sample_completed_] 
          $T[ptr_deref_3872_update_start_] 
          $T[ptr_deref_3872_update_completed_] 
          $T[ptr_deref_3872_base_address_calculated] 
          // arrayidx
          $T[ptr_deref_3872_word_address_calculated] 
          $T[ptr_deref_3872_root_address_calculated] 
          $T[ptr_deref_3872_base_address_resized] 
          ;;[ptr_deref_3872_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3872_base_address_calculated &-> (ptr_deref_3872_base_addr_resize)
          ptr_deref_3872_base_address_resized <-& (ptr_deref_3872_base_addr_resize)
          ;;[ptr_deref_3872_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3872_base_address_resized &-> (ptr_deref_3872_base_plus_offset)
          ptr_deref_3872_root_address_calculated <-& (ptr_deref_3872_base_plus_offset)
          ;;[ptr_deref_3872_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3872_root_address_calculated &-> (ptr_deref_3872_word_addrgen)
          ptr_deref_3872_word_address_calculated <-& (ptr_deref_3872_word_addrgen)
          ;;[ptr_deref_3872_Sample] 
          {
            ;;[ptr_deref_3872_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3872_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3872_sample_start_ <-& (ptr_deref_3872_word_address_calculated)
          // reenable-joins
          addr_of_3868_update_start_ o<-& (ptr_deref_3872_sample_completed_ 0)
          ptr_deref_3872_sample_start_ &-> (ptr_deref_3872_Sample)
          ptr_deref_3872_sample_completed_ <-& (ptr_deref_3872_Sample)
          ptr_deref_3872_sample_completed_ &-> ($null)
          ptr_deref_3872_update_start_ &-> (ptr_deref_3872_Update)
          ptr_deref_3872_update_completed_ <-& (ptr_deref_3872_Update)
          // start: Forward dependencies from arrayidx to transition ptr_deref_3872_base_address_calculated
          ptr_deref_3872_base_address_calculated <-& (addr_of_3868_update_completed_)
          // done: Forward dependencies from arrayidx to transition ptr_deref_3872_base_address_calculated
          ptr_deref_3872_sample_start_ <-& (ptr_deref_3872_base_address_calculated)
          // RAW reenables for arrayidx
          addr_of_3868_update_start_ o<-& (ptr_deref_3872_sample_completed_ 0)
          // self-release: 
          ptr_deref_3872_sample_start_ o<-& (ptr_deref_3872_sample_completed_ 1)
          $null &-> (ptr_deref_3872_update_start_)
          ptr_deref_3872_update_start_ o<-& (ptr_deref_3872_update_completed_ 0)
          // end:  			$guard (ifx_xthen157_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for ifx_xelse160_exec_guard
          // done: WAR dependencies for ifx_xelse160_exec_guard
          // start:  			$volatile ifx_xelse160_exec_guard := ifx_xend86_ifx_xelse160_taken $buffering 1
          //  file prog.linked.opt.aa, line 1040
          // volatile! 
          // Source expression
          // ifx_xend86_ifx_xelse160_taken
          // Target expression
          // (as target) ifx_xelse160_exec_guard
          // start: WAR dependencies for ifx_xelse160_exec_guard
          // done: WAR dependencies for ifx_xelse160_exec_guard
          // end:  			$volatile ifx_xelse160_exec_guard := ifx_xend86_ifx_xelse160_taken $buffering 1
          // start: WAR dependencies for sext179
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext179
          // start:  			$guard (ifx_xelse160_exec_guard) $volatile sext179 := (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          //  file prog.linked.opt.aa, line 1041
          // volatile! 
          // Guard expression 
          // ifx_xelse160_exec_guard
          // Source expression
          // (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
          // add123
          // Target expression
          // (as target) sext179
          // start: WAR dependencies for sext179
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for sext179
          // end:  			$guard (ifx_xelse160_exec_guard) $volatile sext179 := (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
          // start: WAR dependencies for shr163
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr163
          // start:  			$guard (ifx_xelse160_exec_guard) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 1042
          // volatile! 
          // Guard expression 
          // ifx_xelse160_exec_guard
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
          // (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
          // ($bitcast ($int<32>) sext179 )
          // sext179
          // Target expression
          // (as target) shr163
          // start: WAR dependencies for shr163
          // ignored out-of-scope w_root 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for shr163
          // end:  			$guard (ifx_xelse160_exec_guard) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
          // start:  			$guard (ifx_xelse160_exec_guard) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1043
          // Guard expression 
          // ifx_xelse160_exec_guard
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
          $T[type_cast_3900_sample_start_] 
          $T[type_cast_3900_sample_completed_] 
          $T[type_cast_3900_update_start_] 
          $T[type_cast_3900_update_completed_] 
          // Guard dependency for expression type_cast_3900 with guard R_ifx_xelse160_exec_guard_3896
          type_cast_3900_sample_start_ <-& (type_cast_3593_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3608_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3704_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3728_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3761_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3794_update_completed_)
          type_cast_3900_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          // ($cast ($int<64>) shr163 )
          // shr163
          // start: Forward dependencies from ($cast ($int<64>) shr163 ) to transition type_cast_3900_sample_start_
          type_cast_3900_sample_start_ <-& (type_cast_3593_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3587_update_completed_)
          type_cast_3900_sample_start_ <-& (type_cast_3608_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr163 ) to transition type_cast_3900_sample_start_
          ;;[type_cast_3900_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3900_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3900_sample_start_ &-> (type_cast_3900_Sample)
          type_cast_3900_sample_completed_ <-& (type_cast_3900_Sample)
          type_cast_3900_sample_completed_ &-> ($null)
          type_cast_3900_update_start_ &-> (type_cast_3900_Update)
          type_cast_3900_update_completed_ <-& (type_cast_3900_Update)
          // RAW reenables for ($cast ($int<64>) shr163 )
          type_cast_3593_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3587_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (type_cast_3900_sample_completed_ 0)
          // self-release: 
          type_cast_3900_sample_start_ o<-& (type_cast_3900_sample_completed_ 1)
          $null &-> (type_cast_3900_update_start_)
          type_cast_3900_update_start_ o<-& (type_cast_3900_update_completed_ 0)
          // Target expression
          // (as target) idxprom164
          // start: WAR dependencies for idxprom164
          // done: WAR dependencies for idxprom164
          // end:  			$guard (ifx_xelse160_exec_guard) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx165 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1044
          // Source expression
          // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
          $T[addr_of_3907_sample_start_] 
          $T[addr_of_3907_sample_completed_] 
          $T[addr_of_3907_update_start_] 
          $T[addr_of_3907_update_completed_] 
          $T[array_obj_ref_3906_root_address_calculated] 
          $T[array_obj_ref_3906_offset_calculated] 
          $T[array_obj_ref_3906_index_resized_1] 
          $T[array_obj_ref_3906_index_scaled_1] 
          $T[array_obj_ref_3906_index_computed_1] 
          // idxprom164
          // start: Forward dependencies from idxprom164 to transition array_obj_ref_3906_index_computed_1
          array_obj_ref_3906_index_computed_1 <-& (type_cast_3900_update_completed_)
          // done: Forward dependencies from idxprom164 to transition array_obj_ref_3906_index_computed_1
          ;;[array_obj_ref_3906_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3906_index_computed_1 &-> (array_obj_ref_3906_index_resize_1)
          array_obj_ref_3906_index_resized_1 <-& (array_obj_ref_3906_index_resize_1)
          ;;[array_obj_ref_3906_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3906_index_resized_1 &-> (array_obj_ref_3906_index_scale_1)
          array_obj_ref_3906_index_scaled_1 <-& (array_obj_ref_3906_index_scale_1)
          $T[array_obj_ref_3906_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3906_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3906_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3906_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3906_index_scaled_1 &-> (array_obj_ref_3906_final_index_sum_regn_Sample)
          array_obj_ref_3906_final_index_sum_regn_sample_complete <-& (array_obj_ref_3906_final_index_sum_regn_Sample)
          array_obj_ref_3906_final_index_sum_regn_update_start &-> (array_obj_ref_3906_final_index_sum_regn_Update)
          array_obj_ref_3906_offset_calculated <-& (array_obj_ref_3906_final_index_sum_regn_Update)
          type_cast_3900_update_start_ o<-& (array_obj_ref_3906_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3906_final_index_sum_regn_update_start o<-& (array_obj_ref_3906_offset_calculated 0)
          ;;[array_obj_ref_3906_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3906_offset_calculated &-> (array_obj_ref_3906_base_plus_offset)
          array_obj_ref_3906_root_address_calculated <-& (array_obj_ref_3906_base_plus_offset)
          ;;[addr_of_3907_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3907_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3907_sample_start_ <-& (array_obj_ref_3906_root_address_calculated)
          addr_of_3907_sample_start_ &-> (addr_of_3907_request)
          addr_of_3907_sample_completed_ <-& (addr_of_3907_request)
          addr_of_3907_sample_completed_ &-> ($null)
          addr_of_3907_update_start_ &-> (addr_of_3907_complete)
          addr_of_3907_update_completed_ <-& (addr_of_3907_complete)
          // reenables .
          array_obj_ref_3906_final_index_sum_regn_update_start o<-& (addr_of_3907_sample_completed_ 0)
          // self-release 
          addr_of_3907_sample_start_ o<-& (addr_of_3907_sample_completed_ 1)
          addr_of_3907_update_start_ o<-& (addr_of_3907_update_completed_ 0)
          // Target expression
          // (as target) arrayidx165
          // start: WAR dependencies for arrayidx165
          // done: WAR dependencies for arrayidx165
          // end:  			arrayidx165 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse160_exec_guard_3195_delayed_8_0 := ifx_xelse160_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          //  file prog.linked.opt.aa, line 1045
          $T[assign_stmt_3911_sample_start_] 
          $T[assign_stmt_3911_sample_completed_] 
          $T[assign_stmt_3911_update_start_] 
          $T[assign_stmt_3911_update_completed_] 
          // Source expression
          // ifx_xelse160_exec_guard
          // Target expression
          // (as target) ifx_xelse160_exec_guard_3195_delayed_8_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3911_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3911_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3911_sample_start_ &-> (assign_stmt_3911_Sample)
          assign_stmt_3911_sample_completed_ <-& (assign_stmt_3911_Sample)
          assign_stmt_3911_sample_completed_ &-> ($null)
          assign_stmt_3911_update_start_ &-> (assign_stmt_3911_Update)
          assign_stmt_3911_update_completed_ <-& (assign_stmt_3911_Update)
          // start: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3911_sample_start_
          assign_stmt_3911_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3911_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3911_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3911_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3911_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3911_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3911_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // done: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3911_sample_start_
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3911_sample_completed_ 0)
          // self-release: 
          assign_stmt_3911_sample_start_ o<-& (assign_stmt_3911_sample_completed_ 1)
          $null &-> (assign_stmt_3911_update_start_)
          assign_stmt_3911_update_start_ o<-& (assign_stmt_3911_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse160_exec_guard_3195_delayed_8_0
          // done: WAR dependencies for ifx_xelse160_exec_guard_3195_delayed_8_0
          // end:  			ifx_xelse160_exec_guard_3195_delayed_8_0 := ifx_xelse160_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
          // start:  			$guard (ifx_xelse160_exec_guard_3195_delayed_8_0) tmp166 := ->(arrayidx165) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1046
          // Guard expression 
          // ifx_xelse160_exec_guard_3195_delayed_8_0
          // Source expression
          // ->(arrayidx165)
          $T[ptr_deref_3915_sample_start_] 
          $T[ptr_deref_3915_sample_completed_] 
          $T[ptr_deref_3915_update_start_] 
          $T[ptr_deref_3915_update_completed_] 
          // Guard dependency for expression ptr_deref_3915 with guard R_ifx_xelse160_exec_guard_3195_delayed_8_0_3912
          ptr_deref_3915_sample_start_ <-& (assign_stmt_3911_update_completed_)
          // RAW reenables for ifx_xelse160_exec_guard_3195_delayed_8_0
          assign_stmt_3911_update_start_ o<-& (ptr_deref_3915_sample_completed_ 0)
          $T[ptr_deref_3915_base_address_calculated] 
          // arrayidx165
          $T[ptr_deref_3915_word_address_calculated] 
          $T[ptr_deref_3915_root_address_calculated] 
          $T[ptr_deref_3915_base_address_resized] 
          ;;[ptr_deref_3915_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3915_base_address_calculated &-> (ptr_deref_3915_base_addr_resize)
          ptr_deref_3915_base_address_resized <-& (ptr_deref_3915_base_addr_resize)
          ;;[ptr_deref_3915_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3915_base_address_resized &-> (ptr_deref_3915_base_plus_offset)
          ptr_deref_3915_root_address_calculated <-& (ptr_deref_3915_base_plus_offset)
          ;;[ptr_deref_3915_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3915_root_address_calculated &-> (ptr_deref_3915_word_addrgen)
          ptr_deref_3915_word_address_calculated <-& (ptr_deref_3915_word_addrgen)
          ;;[ptr_deref_3915_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3915_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[ptr_deref_3915_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          ptr_deref_3915_sample_start_ <-& (ptr_deref_3915_word_address_calculated)
          // reenable-joins
          addr_of_3907_update_start_ o<-& (ptr_deref_3915_sample_completed_ 0)
          ptr_deref_3915_sample_start_ &-> (ptr_deref_3915_Sample)
          ptr_deref_3915_sample_completed_ <-& (ptr_deref_3915_Sample)
          ptr_deref_3915_sample_completed_ &-> ($null)
          ptr_deref_3915_update_start_ &-> (ptr_deref_3915_Update)
          ptr_deref_3915_update_completed_ <-& (ptr_deref_3915_Update)
          // start: Forward dependencies from arrayidx165 to transition ptr_deref_3915_base_address_calculated
          ptr_deref_3915_base_address_calculated <-& (addr_of_3907_update_completed_)
          // done: Forward dependencies from arrayidx165 to transition ptr_deref_3915_base_address_calculated
          ptr_deref_3915_sample_start_ <-& (ptr_deref_3915_base_address_calculated)
          // RAW reenables for arrayidx165
          addr_of_3907_update_start_ o<-& (ptr_deref_3915_sample_completed_ 0)
          // self-release: 
          ptr_deref_3915_sample_start_ o<-& (ptr_deref_3915_sample_completed_ 1)
          $null &-> (ptr_deref_3915_update_start_)
          ptr_deref_3915_update_start_ o<-& (ptr_deref_3915_update_completed_ 0)
          // Target expression
          // (as target) tmp166
          // start: WAR dependencies for tmp166
          // done: WAR dependencies for tmp166
          // end:  			$guard (ifx_xelse160_exec_guard_3195_delayed_8_0) tmp166 := ->(arrayidx165) $buffering 1// bits of buffering = 64. 
          // start:  			ifx_xelse160_exec_guard_3200_delayed_1_0 := ifx_xelse160_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          //  file prog.linked.opt.aa, line 1047
          $T[assign_stmt_3919_sample_start_] 
          $T[assign_stmt_3919_sample_completed_] 
          $T[assign_stmt_3919_update_start_] 
          $T[assign_stmt_3919_update_completed_] 
          // Source expression
          // ifx_xelse160_exec_guard
          // Target expression
          // (as target) ifx_xelse160_exec_guard_3200_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3919_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3919_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3919_sample_start_ &-> (assign_stmt_3919_Sample)
          assign_stmt_3919_sample_completed_ <-& (assign_stmt_3919_Sample)
          assign_stmt_3919_sample_completed_ &-> ($null)
          assign_stmt_3919_update_start_ &-> (assign_stmt_3919_Update)
          assign_stmt_3919_update_completed_ <-& (assign_stmt_3919_Update)
          // start: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3919_sample_start_
          assign_stmt_3919_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3919_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3919_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3919_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3919_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3919_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3919_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // done: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3919_sample_start_
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3919_sample_completed_ 0)
          // self-release: 
          assign_stmt_3919_sample_start_ o<-& (assign_stmt_3919_sample_completed_ 1)
          $null &-> (assign_stmt_3919_update_start_)
          assign_stmt_3919_update_start_ o<-& (assign_stmt_3919_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse160_exec_guard_3200_delayed_1_0
          // done: WAR dependencies for ifx_xelse160_exec_guard_3200_delayed_1_0
          // end:  			ifx_xelse160_exec_guard_3200_delayed_1_0 := ifx_xelse160_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
          // start:  			$guard (ifx_xelse160_exec_guard_3200_delayed_1_0) conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1048
          // Guard expression 
          // ifx_xelse160_exec_guard_3200_delayed_1_0
          // Source expression
          // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
          $T[type_cast_3924_sample_start_] 
          $T[type_cast_3924_sample_completed_] 
          $T[type_cast_3924_update_start_] 
          $T[type_cast_3924_update_completed_] 
          // Guard dependency for expression type_cast_3924 with guard R_ifx_xelse160_exec_guard_3200_delayed_1_0_3920
          type_cast_3924_sample_start_ <-& (assign_stmt_3919_update_completed_)
          // RAW reenables for ifx_xelse160_exec_guard_3200_delayed_1_0
          assign_stmt_3919_update_start_ o<-& (type_cast_3924_sample_completed_ 0)
          // ($cast ($int<32>) conv103 )
          // conv103
          // start: Forward dependencies from ($cast ($int<32>) conv103 ) to transition type_cast_3924_sample_start_
          type_cast_3924_sample_start_ <-& (type_cast_3643_update_completed_)
          // done: Forward dependencies from ($cast ($int<32>) conv103 ) to transition type_cast_3924_sample_start_
          ;;[type_cast_3924_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3924_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3924_sample_start_ &-> (type_cast_3924_Sample)
          type_cast_3924_sample_completed_ <-& (type_cast_3924_Sample)
          type_cast_3924_sample_completed_ &-> ($null)
          type_cast_3924_update_start_ &-> (type_cast_3924_Update)
          type_cast_3924_update_completed_ <-& (type_cast_3924_Update)
          // RAW reenables for ($cast ($int<32>) conv103 )
          type_cast_3643_update_start_ o<-& (type_cast_3924_sample_completed_ 0)
          // self-release: 
          type_cast_3924_sample_start_ o<-& (type_cast_3924_sample_completed_ 1)
          $null &-> (type_cast_3924_update_start_)
          type_cast_3924_update_start_ o<-& (type_cast_3924_update_completed_ 0)
          // Target expression
          // (as target) conv168
          // start: WAR dependencies for conv168
          // done: WAR dependencies for conv168
          // end:  			$guard (ifx_xelse160_exec_guard_3200_delayed_1_0) conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse160_exec_guard_3206_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 1049
          $T[assign_stmt_3928_sample_start_] 
          $T[assign_stmt_3928_sample_completed_] 
          $T[assign_stmt_3928_update_start_] 
          $T[assign_stmt_3928_update_completed_] 
          // Source expression
          // ifx_xelse160_exec_guard
          // Target expression
          // (as target) ifx_xelse160_exec_guard_3206_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3928_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3928_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3928_sample_start_ &-> (assign_stmt_3928_Sample)
          assign_stmt_3928_sample_completed_ <-& (assign_stmt_3928_Sample)
          assign_stmt_3928_sample_completed_ &-> ($null)
          assign_stmt_3928_update_start_ &-> (assign_stmt_3928_Update)
          assign_stmt_3928_update_completed_ <-& (assign_stmt_3928_Update)
          // start: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3928_sample_start_
          assign_stmt_3928_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3928_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3928_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3928_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3928_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3928_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3928_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // done: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3928_sample_start_
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3928_sample_completed_ 0)
          // self-release: 
          assign_stmt_3928_sample_start_ o<-& (assign_stmt_3928_sample_completed_ 1)
          $null &-> (assign_stmt_3928_update_start_)
          assign_stmt_3928_update_start_ o<-& (assign_stmt_3928_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse160_exec_guard_3206_delayed_2_0
          // done: WAR dependencies for ifx_xelse160_exec_guard_3206_delayed_2_0
          // end:  			ifx_xelse160_exec_guard_3206_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start: WAR dependencies for shr169
          // done: WAR dependencies for shr169
          // start:  			$guard (ifx_xelse160_exec_guard_3206_delayed_2_0) $volatile shr169 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          //  file prog.linked.opt.aa, line 1050
          // volatile! 
          // Guard expression 
          // ifx_xelse160_exec_guard_3206_delayed_2_0
          // Source expression
          // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
          // (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
          // ($bitcast ($int<32>) conv168 )
          // conv168
          // Target expression
          // (as target) shr169
          // start: WAR dependencies for shr169
          // done: WAR dependencies for shr169
          // end:  			$guard (ifx_xelse160_exec_guard_3206_delayed_2_0) $volatile shr169 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
          // start:  			ifx_xelse160_exec_guard_3216_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          //  file prog.linked.opt.aa, line 1051
          $T[assign_stmt_3941_sample_start_] 
          $T[assign_stmt_3941_sample_completed_] 
          $T[assign_stmt_3941_update_start_] 
          $T[assign_stmt_3941_update_completed_] 
          // Source expression
          // ifx_xelse160_exec_guard
          // Target expression
          // (as target) ifx_xelse160_exec_guard_3216_delayed_2_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3941_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3941_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3941_sample_start_ &-> (assign_stmt_3941_Sample)
          assign_stmt_3941_sample_completed_ <-& (assign_stmt_3941_Sample)
          assign_stmt_3941_sample_completed_ &-> ($null)
          assign_stmt_3941_update_start_ &-> (assign_stmt_3941_Update)
          assign_stmt_3941_update_completed_ <-& (assign_stmt_3941_Update)
          // start: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3941_sample_start_
          assign_stmt_3941_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3941_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3941_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3941_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3941_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3941_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3941_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // done: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3941_sample_start_
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3941_sample_completed_ 0)
          // self-release: 
          assign_stmt_3941_sample_start_ o<-& (assign_stmt_3941_sample_completed_ 1)
          $null &-> (assign_stmt_3941_update_start_)
          assign_stmt_3941_update_start_ o<-& (assign_stmt_3941_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse160_exec_guard_3216_delayed_2_0
          // done: WAR dependencies for ifx_xelse160_exec_guard_3216_delayed_2_0
          // end:  			ifx_xelse160_exec_guard_3216_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
          // start:  			$guard (ifx_xelse160_exec_guard_3216_delayed_2_0) idxprom170 := ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) ) $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1052
          // Guard expression 
          // ifx_xelse160_exec_guard_3216_delayed_2_0
          // Source expression
          // ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) )
          $T[type_cast_3946_sample_start_] 
          $T[type_cast_3946_sample_completed_] 
          $T[type_cast_3946_update_start_] 
          $T[type_cast_3946_update_completed_] 
          // Guard dependency for expression type_cast_3946 with guard R_ifx_xelse160_exec_guard_3216_delayed_2_0_3942
          type_cast_3946_sample_start_ <-& (assign_stmt_3941_update_completed_)
          // RAW reenables for ifx_xelse160_exec_guard_3216_delayed_2_0
          assign_stmt_3941_update_start_ o<-& (type_cast_3946_sample_completed_ 0)
          // ($cast ($int<64>) shr169 )
          // shr169
          // start: Forward dependencies from ($cast ($int<64>) shr169 ) to transition type_cast_3946_sample_start_
          type_cast_3946_sample_start_ <-& (type_cast_3924_update_completed_)
          // done: Forward dependencies from ($cast ($int<64>) shr169 ) to transition type_cast_3946_sample_start_
          ;;[type_cast_3946_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_3946_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_3946_sample_start_ &-> (type_cast_3946_Sample)
          type_cast_3946_sample_completed_ <-& (type_cast_3946_Sample)
          type_cast_3946_sample_completed_ &-> ($null)
          type_cast_3946_update_start_ &-> (type_cast_3946_Update)
          type_cast_3946_update_completed_ <-& (type_cast_3946_Update)
          // RAW reenables for ($cast ($int<64>) shr169 )
          type_cast_3924_update_start_ o<-& (type_cast_3946_sample_completed_ 0)
          // self-release: 
          type_cast_3946_sample_start_ o<-& (type_cast_3946_sample_completed_ 1)
          $null &-> (type_cast_3946_update_start_)
          type_cast_3946_update_start_ o<-& (type_cast_3946_update_completed_ 0)
          // Target expression
          // (as target) idxprom170
          // start: WAR dependencies for idxprom170
          // done: WAR dependencies for idxprom170
          // end:  			$guard (ifx_xelse160_exec_guard_3216_delayed_2_0) idxprom170 := ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) ) $buffering 1// bits of buffering = 64. 
          // start:  			arrayidx171 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170]) $buffering 1// bits of buffering = 32. 
          //  file prog.linked.opt.aa, line 1053
          // Source expression
          // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170])
          $T[addr_of_3953_sample_start_] 
          $T[addr_of_3953_sample_completed_] 
          $T[addr_of_3953_update_start_] 
          $T[addr_of_3953_update_completed_] 
          $T[array_obj_ref_3952_root_address_calculated] 
          $T[array_obj_ref_3952_offset_calculated] 
          $T[array_obj_ref_3952_index_resized_1] 
          $T[array_obj_ref_3952_index_scaled_1] 
          $T[array_obj_ref_3952_index_computed_1] 
          // idxprom170
          // start: Forward dependencies from idxprom170 to transition array_obj_ref_3952_index_computed_1
          array_obj_ref_3952_index_computed_1 <-& (type_cast_3946_update_completed_)
          // done: Forward dependencies from idxprom170 to transition array_obj_ref_3952_index_computed_1
          ;;[array_obj_ref_3952_index_resize_1] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_3952_index_computed_1 &-> (array_obj_ref_3952_index_resize_1)
          array_obj_ref_3952_index_resized_1 <-& (array_obj_ref_3952_index_resize_1)
          ;;[array_obj_ref_3952_index_scale_1] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_3952_index_resized_1 &-> (array_obj_ref_3952_index_scale_1)
          array_obj_ref_3952_index_scaled_1 <-& (array_obj_ref_3952_index_scale_1)
          $T[array_obj_ref_3952_final_index_sum_regn_sample_complete] 
          $T[array_obj_ref_3952_final_index_sum_regn_update_start] 
          ;;[array_obj_ref_3952_final_index_sum_regn_Sample] 
          {
            $T [req] $T [ack] 
          }
          ;;[array_obj_ref_3952_final_index_sum_regn_Update] 
          {
            $T [req] $T [ack] 
          }
          array_obj_ref_3952_index_scaled_1 &-> (array_obj_ref_3952_final_index_sum_regn_Sample)
          array_obj_ref_3952_final_index_sum_regn_sample_complete <-& (array_obj_ref_3952_final_index_sum_regn_Sample)
          array_obj_ref_3952_final_index_sum_regn_update_start &-> (array_obj_ref_3952_final_index_sum_regn_Update)
          array_obj_ref_3952_offset_calculated <-& (array_obj_ref_3952_final_index_sum_regn_Update)
          type_cast_3946_update_start_ o<-& (array_obj_ref_3952_final_index_sum_regn_sample_complete 1)
          array_obj_ref_3952_final_index_sum_regn_update_start o<-& (array_obj_ref_3952_offset_calculated 0)
          ;;[array_obj_ref_3952_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_3952_offset_calculated &-> (array_obj_ref_3952_base_plus_offset)
          array_obj_ref_3952_root_address_calculated <-& (array_obj_ref_3952_base_plus_offset)
          ;;[addr_of_3953_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_3953_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_3953_sample_start_ <-& (array_obj_ref_3952_root_address_calculated)
          addr_of_3953_sample_start_ &-> (addr_of_3953_request)
          addr_of_3953_sample_completed_ <-& (addr_of_3953_request)
          addr_of_3953_sample_completed_ &-> ($null)
          addr_of_3953_update_start_ &-> (addr_of_3953_complete)
          addr_of_3953_update_completed_ <-& (addr_of_3953_complete)
          // reenables .
          array_obj_ref_3952_final_index_sum_regn_update_start o<-& (addr_of_3953_sample_completed_ 0)
          // self-release 
          addr_of_3953_sample_start_ o<-& (addr_of_3953_sample_completed_ 1)
          addr_of_3953_update_start_ o<-& (addr_of_3953_update_completed_ 0)
          // Target expression
          // (as target) arrayidx171
          // start: WAR dependencies for arrayidx171
          // done: WAR dependencies for arrayidx171
          // end:  			arrayidx171 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170]) $buffering 1// bits of buffering = 32. 
          // start:  			ifx_xelse160_exec_guard_3229_delayed_14_0 := ifx_xelse160_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          //  file prog.linked.opt.aa, line 1054
          $T[assign_stmt_3957_sample_start_] 
          $T[assign_stmt_3957_sample_completed_] 
          $T[assign_stmt_3957_update_start_] 
          $T[assign_stmt_3957_update_completed_] 
          // Source expression
          // ifx_xelse160_exec_guard
          // Target expression
          // (as target) ifx_xelse160_exec_guard_3229_delayed_14_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3957_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3957_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3957_sample_start_ &-> (assign_stmt_3957_Sample)
          assign_stmt_3957_sample_completed_ <-& (assign_stmt_3957_Sample)
          assign_stmt_3957_sample_completed_ &-> ($null)
          assign_stmt_3957_update_start_ &-> (assign_stmt_3957_Update)
          assign_stmt_3957_update_completed_ <-& (assign_stmt_3957_Update)
          // start: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3957_sample_start_
          assign_stmt_3957_sample_start_ <-& (type_cast_3593_update_completed_)
          assign_stmt_3957_sample_start_ <-& (type_cast_3608_update_completed_)
          assign_stmt_3957_sample_start_ <-& (type_cast_3704_update_completed_)
          assign_stmt_3957_sample_start_ <-& (type_cast_3728_update_completed_)
          assign_stmt_3957_sample_start_ <-& (type_cast_3761_update_completed_)
          assign_stmt_3957_sample_start_ <-& (type_cast_3794_update_completed_)
          assign_stmt_3957_sample_start_ <-& (assign_stmt_3814_update_completed_)
          // done: Forward dependencies from ifx_xelse160_exec_guard to transition assign_stmt_3957_sample_start_
          // RAW reenables for ifx_xelse160_exec_guard
          type_cast_3593_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          type_cast_3608_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          type_cast_3704_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          type_cast_3728_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          type_cast_3761_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          type_cast_3794_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          assign_stmt_3814_update_start_ o<-& (assign_stmt_3957_sample_completed_ 0)
          // self-release: 
          assign_stmt_3957_sample_start_ o<-& (assign_stmt_3957_sample_completed_ 1)
          $null &-> (assign_stmt_3957_update_start_)
          assign_stmt_3957_update_start_ o<-& (assign_stmt_3957_update_completed_ 0)
          // start: WAR dependencies for ifx_xelse160_exec_guard_3229_delayed_14_0
          // done: WAR dependencies for ifx_xelse160_exec_guard_3229_delayed_14_0
          // end:  			ifx_xelse160_exec_guard_3229_delayed_14_0 := ifx_xelse160_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
          // start:  			arrayidx171_3230_delayed_4_0 := arrayidx171 $buffering 4 $cut_through // bits of buffering = 128. 
          //  file prog.linked.opt.aa, line 1055
          $T[assign_stmt_3960_sample_start_] 
          $T[assign_stmt_3960_sample_completed_] 
          $T[assign_stmt_3960_update_start_] 
          $T[assign_stmt_3960_update_completed_] 
          // Source expression
          // arrayidx171
          // Target expression
          // (as target) arrayidx171_3230_delayed_4_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_3960_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_3960_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_3960_sample_start_ &-> (assign_stmt_3960_Sample)
          assign_stmt_3960_sample_completed_ <-& (assign_stmt_3960_Sample)
          assign_stmt_3960_sample_completed_ &-> ($null)
          assign_stmt_3960_update_start_ &-> (assign_stmt_3960_Update)
          assign_stmt_3960_update_completed_ <-& (assign_stmt_3960_Update)
          // start: Forward dependencies from arrayidx171 to transition assign_stmt_3960_sample_start_
          assign_stmt_3960_sample_start_ <-& (addr_of_3953_update_completed_)
          // done: Forward dependencies from arrayidx171 to transition assign_stmt_3960_sample_start_
          // RAW reenables for arrayidx171
          addr_of_3953_update_start_ o<-& (assign_stmt_3960_sample_completed_ 0)
          // self-release: 
          assign_stmt_3960_sample_start_ o<-& (assign_stmt_3960_sample_completed_ 1)
          $null &-> (assign_stmt_3960_update_start_)
          assign_stmt_3960_update_start_ o<-& (assign_stmt_3960_update_completed_ 0)
          // start: WAR dependencies for arrayidx171_3230_delayed_4_0
          // done: WAR dependencies for arrayidx171_3230_delayed_4_0
          // end:  			arrayidx171_3230_delayed_4_0 := arrayidx171 $buffering 4 $cut_through // bits of buffering = 128. 
          // start:  			$guard (ifx_xelse160_exec_guard_3229_delayed_14_0) ->(arrayidx171_3230_delayed_4_0) := tmp166 $buffering 1// bits of buffering = 64. 
          //  file prog.linked.opt.aa, line 1056
          // Guard expression 
          // ifx_xelse160_exec_guard_3229_delayed_14_0
          // Source expression
          // tmp166
          // Target expression
          // ->(arrayidx171_3230_delayed_4_0)
          $T[ptr_deref_3963_sample_start_] 
          $T[ptr_deref_3963_sample_completed_] 
          $T[ptr_deref_3963_update_start_] 
          $T[ptr_deref_3963_update_completed_] 
          $T[ptr_deref_3963_base_address_calculated] 
          // arrayidx171_3230_delayed_4_0
          $T[ptr_deref_3963_word_address_calculated] 
          $T[ptr_deref_3963_root_address_calculated] 
          $T[ptr_deref_3963_base_address_resized] 
          ;;[ptr_deref_3963_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_3963_base_address_calculated &-> (ptr_deref_3963_base_addr_resize)
          ptr_deref_3963_base_address_resized <-& (ptr_deref_3963_base_addr_resize)
          ;;[ptr_deref_3963_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_3963_base_address_resized &-> (ptr_deref_3963_base_plus_offset)
          ptr_deref_3963_root_address_calculated <-& (ptr_deref_3963_base_plus_offset)
          ;;[ptr_deref_3963_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_3963_root_address_calculated &-> (ptr_deref_3963_word_addrgen)
          ptr_deref_3963_word_address_calculated <-& (ptr_deref_3963_word_addrgen)
          ;;[ptr_deref_3963_Sample] 
          {
            ;;[ptr_deref_3963_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_3963_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_3963_sample_start_ <-& (ptr_deref_3963_word_address_calculated)
          // reenable-joins
          assign_stmt_3960_update_start_ o<-& (ptr_deref_3963_sample_completed_ 0)
          ptr_deref_3963_sample_start_ &-> (ptr_deref_3963_Sample)
          ptr_deref_3963_sample_completed_ <-& (ptr_deref_3963_Sample)
          ptr_deref_3963_sample_completed_ &-> ($null)
          ptr_deref_3963_update_start_ &-> (ptr_deref_3963_Update)
          ptr_deref_3963_update_completed_ <-& (ptr_deref_3963_Update)
          // start: Forward dependencies from arrayidx171_3230_delayed_4_0 to transition ptr_deref_3963_base_address_calculated
          ptr_deref_3963_base_address_calculated <-& (assign_stmt_3960_update_completed_)
          // done: Forward dependencies from arrayidx171_3230_delayed_4_0 to transition ptr_deref_3963_base_address_calculated
          ptr_deref_3963_sample_start_ <-& (ptr_deref_3963_base_address_calculated)
          // RAW reenables for arrayidx171_3230_delayed_4_0
          assign_stmt_3960_update_start_ o<-& (ptr_deref_3963_sample_completed_ 0)
          // self-release: 
          ptr_deref_3963_sample_start_ o<-& (ptr_deref_3963_sample_completed_ 1)
          $null &-> (ptr_deref_3963_update_start_)
          ptr_deref_3963_update_start_ o<-& (ptr_deref_3963_update_completed_ 0)
          // start: Forward dependencies from tmp166 to transition ptr_deref_3963_sample_start_
          ptr_deref_3963_sample_start_ <-& (ptr_deref_3915_update_completed_)
          // done: Forward dependencies from tmp166 to transition ptr_deref_3963_sample_start_
          // RAW reenables for tmp166
          ptr_deref_3915_update_start_ o<-& (ptr_deref_3963_sample_completed_ 0)
          // end:  			$guard (ifx_xelse160_exec_guard_3229_delayed_14_0) ->(arrayidx171_3230_delayed_4_0) := tmp166 $buffering 1// bits of buffering = 64. 
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // start:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          //  file prog.linked.opt.aa, line 1057
          // volatile! 
          // Source expression
          // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
          // flagx_x0
          // Target expression
          // (as target) tobool
          // start: WAR dependencies for tobool
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for tobool
          // end:  			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
          // start: WAR dependencies for ifx_xend172_whilex_xend_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend172_whilex_xend_taken
          // start:  			$volatile ifx_xend172_whilex_xend_taken := ( ~ tobool ) $buffering 1
          //  file prog.linked.opt.aa, line 1058
          // volatile! 
          // Source expression
          // ( ~ tobool )
          // tobool
          // Target expression
          // (as target) ifx_xend172_whilex_xend_taken
          // start: WAR dependencies for ifx_xend172_whilex_xend_taken
          // ignored out-of-scope w_root 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
          // ignored out-of-scope w_root 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
          // done: WAR dependencies for ifx_xend172_whilex_xend_taken
          // end:  			$volatile ifx_xend172_whilex_xend_taken := ( ~ tobool ) $buffering 1
          // tobool
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated <-& (assign_stmt_3564_update_completed_)
          condition_evaluated <-& (assign_stmt_3443_update_completed_)
          condition_evaluated <-& (type_cast_3422_update_completed_)
          condition_evaluated <-& (assign_stmt_3435_update_completed_)
          // done: Forward dependencies from tobool to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  ptr_deref_3872 store
          //  ptr_deref_3963 store
          $T [ptr_deref_3872_ptr_deref_3963_delay] $delay
          // ptr_deref_3872(store) -> ptr_deref_3963(store)
          ptr_deref_3963_sample_start_ <-& (ptr_deref_3872_ptr_deref_3963_delay)
          ptr_deref_3872_ptr_deref_3963_delay <-& (ptr_deref_3872_sample_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          // ordered memory-subsystem.
          ring_reenable_memory_space_0 <-& (ptr_deref_3963_sample_completed_)
          ptr_deref_3872_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // memory-space  memory_space_1
          //  ptr_deref_3915 load
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_3308__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_3308_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_3308__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_3308_loop_body : condition_evaluated
        $bind do_while_stmt_3308__entry__  => do_while_stmt_3308_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_3308_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_3308__exit__)
      }
      do_while_stmt_3308__entry__ |-> (do_while_stmt_3308)
      do_while_stmt_3308__exit__ <-| (do_while_stmt_3308)
      // if-statement  
      //  file prog.linked.opt.aa, line 118164344
      ;;[if_stmt_3978_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3978__entry__ |-> (if_stmt_3978_dead_link)
      if_stmt_3978__exit__ <-| (if_stmt_3978_dead_link)
      ;;[if_stmt_3978_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3978__entry__ |-> (if_stmt_3978_eval_test)
      $P [R_ifx_xend172_whilex_xend_taken_3979_place]
      R_ifx_xend172_whilex_xend_taken_3979_place <-| (if_stmt_3978_eval_test)
      ;;[if_stmt_3978_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3978_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_ifx_xend172_whilex_xend_taken_3979_place |-> (if_stmt_3978_if_link if_stmt_3978_else_link)
      $P [ifx_xend172_whilex_xend]
      ifx_xend172_whilex_xend <-| (if_stmt_3978_if_link)
      if_stmt_3978__exit__ <-| (if_stmt_3978_else_link)
      ::[assign_stmt_3987] 
      {
        // start:  		Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 1066
        // Target expression
        // (as target) Block3_complete
        $T[WPIPE_Block3_complete_3984_sample_start_] 
        $T[WPIPE_Block3_complete_3984_sample_completed_] 
        $T[WPIPE_Block3_complete_3984_update_start_] 
        $T[WPIPE_Block3_complete_3984_update_completed_] 
        ;;[WPIPE_Block3_complete_3984_Sample] 
        {
          // pipe write sample-start Block3_complete
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block3_complete_3984_Update] 
        {
          // pipe write update (complete) Block3_complete
          $T [req] $T [ack] 
        }
        WPIPE_Block3_complete_3984_sample_start_ &-> (WPIPE_Block3_complete_3984_Sample)
        WPIPE_Block3_complete_3984_sample_completed_ <-& (WPIPE_Block3_complete_3984_Sample)
        WPIPE_Block3_complete_3984_update_start_ <-& (WPIPE_Block3_complete_3984_sample_completed_)
        WPIPE_Block3_complete_3984_update_start_ &-> (WPIPE_Block3_complete_3984_Update)
        WPIPE_Block3_complete_3984_update_completed_ <-& (WPIPE_Block3_complete_3984_Update)
        // end:  		Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block3_complete
        // read-dependencies for pipe Block3_complete
        // write-dependencies for pipe Block3_complete
        // signal write dependencies for Block3_complete
      }
      assign_stmt_3987__entry__ |-> (assign_stmt_3987)
      assign_stmt_3987__exit__ <-| (assign_stmt_3987)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 909
      //---------------------   merge statement  file prog.linked.opt.aa, line 909  --------------------------
      ||[entry_whilex_xbody_PhiReq] 
      {
        // skipped constant phi phi_stmt_3294
        ;;[phi_stmt_3299] 
        {
          ||[phi_stmt_3299_sources] 
          {
            // sources for 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) div11 )
            ;;[type_cast_3302] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3299_req] 
        }
        ;;[phi_stmt_3303] 
        {
          ||[phi_stmt_3303_sources] 
          {
            // sources for 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
            // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) div )
            ;;[type_cast_3306] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3303_req] 
        }
      }
      entry_whilex_xbody |-> (entry_whilex_xbody_PhiReq)
      $P [merge_stmt_3293_PhiReqMerge] 
      merge_stmt_3293_PhiReqMerge <-| ( entry_whilex_xbody_PhiReq )
      ||[merge_stmt_3293_PhiAck] 
      {
        // skipped constant phi phi_stmt_3294
        $T [phi_stmt_3299_ack] 
        $T [phi_stmt_3303_ack] 
      }
      merge_stmt_3293_PhiReqMerge |-> (merge_stmt_3293_PhiAck)
      merge_stmt_3293__exit__  <-| (merge_stmt_3293_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 909  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1063
      ;;[merge_stmt_3982_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3982__entry__ |-> (merge_stmt_3982_dead_link)
      merge_stmt_3982__exit__ <-| (merge_stmt_3982_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1063  --------------------------
      ||[ifx_xend172_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend172_whilex_xend |-> (ifx_xend172_whilex_xend_PhiReq)
      $P [merge_stmt_3982_PhiReqMerge] 
      merge_stmt_3982_PhiReqMerge <-| ( ifx_xend172_whilex_xend_PhiReq )
      ||[merge_stmt_3982_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3982_PhiReqMerge |-> (merge_stmt_3982_PhiAck)
      merge_stmt_3982__exit__  <-| (merge_stmt_3982_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1063  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1068
      //---------------------   merge statement  file prog.linked.opt.aa, line 1068  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_3989_PhiReqMerge] 
      merge_stmt_3989_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_3989_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3989_PhiReqMerge |-> (merge_stmt_3989_PhiAck)
      merge_stmt_3989__exit__  <-| (merge_stmt_3989_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1068  --------------------------
      assign_stmt_3162_to_assign_stmt_3180__entry__ <-| (branch_block_stmt_3159__entry__)
      assign_stmt_3185_to_assign_stmt_3291__entry__ <-| (assign_stmt_3162_to_assign_stmt_3180__exit__)
      entry_whilex_xbody <-| (assign_stmt_3185_to_assign_stmt_3291__exit__)
      do_while_stmt_3308__entry__ <-| (merge_stmt_3293__exit__)
      if_stmt_3978__entry__ <-| (do_while_stmt_3308__exit__)
      merge_stmt_3982__entry__ <-| (if_stmt_3978__exit__)
      assign_stmt_3987__entry__ <-| (merge_stmt_3982__exit__)
      return__ <-| (assign_stmt_3987__exit__)
      merge_stmt_3989__exit__ |-> (branch_block_stmt_3159__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 909
    // constant-object-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 919
    // constant-object-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 1063
    // constant-object-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 1068
    // constant-object-declarations for block %zeropad3D_D%body
    //  file prog.linked.opt.aa, line 877
    // constant-object-declarations for block %zeropad3D_D
    //  file prog.linked.opt.aa, line 872
    // constant-declarations for block %zeropad3D_D%body
    //  file prog.linked.opt.aa, line 877
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_3189_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_3199_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_3221_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_3234_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_3245_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )
    $constant $W[type_cast_3258_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3279_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 909
    // constant-declarations for phi:  			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 910
    $constant $W[kx_x1_at_entry_3294] : $int<16> := _b0000000000000000 // 0
    // constant-declarations for phi:  			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 912
    // constant-declarations for phi:  			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 914
    // do-while statement  
    //  file prog.linked.opt.aa, line 917
    // constant-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 919
    // constant-declarations for phi:  			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 920
    // constant-declarations for phi:  			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 922
    // constant-declarations for phi:  			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 924
    // ($bitcast ($uint<32>) _b00000000000000000000000000000100  )
    $constant $W[type_cast_3334_wire_constant] : $int<32> := _b00000000000000000000000000000100// 4
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_3364_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux cmp68 div  inc_2839_delayed_1_0 ) 
    // ($bitcast ($uint<16>) _b0000000000000100  )
    $constant $W[type_cast_3466_wire_constant] : $int<16> := _b0000000000000100// 4
    // ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_3495_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_3499_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3501_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3529_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3557_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_3569_wire_constant] : $int<16> := _b0000000000000000// 0
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )
    $constant $W[type_cast_3573_wire_constant] : $int<16> := _b0000000000000001// 1
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    // ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_3577_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) 0  )
    $constant $W[type_cast_3579_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3720_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3753_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_3786_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3850_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $constant $W[array_obj_ref_3867_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3867_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3867_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3867_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_3874_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ->(arrayidx)
    $constant $W[ptr_deref_3872_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000010000  )
    $constant $W[type_cast_3883_wire_constant] : $int<32> := _b00000000000000000000000000010000// 16
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )
    $constant $W[type_cast_3892_wire_constant] : $int<32> := _b00000000000000000000000000010010// 18
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
    $constant $W[array_obj_ref_3906_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3906_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3906_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3906_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx165)
    $constant $W[ptr_deref_3915_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_3935_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170])
    $constant $W[array_obj_ref_3952_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3952_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_3952_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_3952_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx171_3230_delayed_4_0)
    $constant $W[ptr_deref_3963_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_3969_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 118164344
    // constant-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 1063
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_3986_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for block %zeropad3D_D%body%
    //  file prog.linked.opt.aa, line 1068
    // block %zeropad3D_D%body
    //  file prog.linked.opt.aa, line 877
    // 		call := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 879
    // call
    $W[call_3162] : $int<8>
    // 		call1 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 880
    // call1
    $W[call1_3165] : $int<8>
    // 		call2 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 881
    // call2
    $W[call2_3168] : $int<8>
    // 		call3 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 882
    // call3
    $W[call3_3171] : $int<8>
    // 		call4 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 883
    // call4
    $W[call4_3174] : $int<8>
    // 		call5 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 884
    // call5
    $W[call5_3177] : $int<8>
    // 		call6 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 885
    // call6
    $W[call6_3180] : $int<8>
    // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 887
    // conv
    $W[conv_3185] : $int<16>
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 888
    // div
    $W[div_3191] : $int<16>
    // 		conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 889
    // conv10
    $W[conv10_3195] : $int<16>
    // 		$volatile div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 890
    // div11
    $W[div11_3201] : $int<16>
    // 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 891
    // conv36
    $W[conv36_3205] : $int<32>
    // 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 892
    // conv38
    $W[conv38_3209] : $int<32>
    // 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 893
    // conv42
    $W[conv42_3213] : $int<32>
    // 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 894
    // conv44
    $W[conv44_3217] : $int<32>
    // 		$volatile mul45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 895
    // mul45
    $W[mul45_3223] : $int<32>
    // 		$volatile sext := (mul45 * conv42) $buffering 1
    //  file prog.linked.opt.aa, line 896
    // sext
    $W[sext_3228] : $int<32>
    // 		$volatile conv98 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 897
    // ($bitcast ($int<32>) sext )
    $intermediate $W[type_cast_3231_wire] : $int<32>
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_3235_wire] : $int<32>
    // conv98
    $W[conv98_3237] : $int<32>
    // 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 898
    // conv112
    $W[conv112_3241] : $int<32>
    // 		$volatile mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 899
    // mul
    $W[mul_3247] : $int<32>
    // 		$volatile sext177 := (mul * conv36) $buffering 1
    //  file prog.linked.opt.aa, line 900
    // sext177
    $W[sext177_3252] : $int<32>
    // 		$volatile conv116 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 901
    // ($bitcast ($int<32>) sext177 )
    $intermediate $W[type_cast_3255_wire] : $int<32>
    // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $intermediate $W[ASHR_i32_i32_3259_wire] : $int<32>
    // conv116
    $W[conv116_3261] : $int<32>
    // 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 902
    // conv134
    $W[conv134_3265] : $int<32>
    // 		$volatile add137 := (conv112 + conv134) $buffering 1
    //  file prog.linked.opt.aa, line 903
    // add137
    $W[add137_3270] : $int<32>
    // 		$volatile add154 := (conv112 + conv38) $buffering 1
    //  file prog.linked.opt.aa, line 904
    // add154
    $W[add154_3275] : $int<32>
    // 		$volatile shl := (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 905
    // shl
    $W[shl_3281] : $int<32>
    // 		$volatile add67 := (shl + conv38) $buffering 1
    //  file prog.linked.opt.aa, line 906
    // add67
    $W[add67_3286] : $int<32>
    // 		$volatile add81 := (shl + conv134) $buffering 1
    //  file prog.linked.opt.aa, line 907
    // add81
    $W[add81_3291] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 909
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 912
    // ($cast ($uint<16>) div11 )
    $intermediate $W[type_cast_3302_wire] : $int<16>
    // ix_x2_at_entry
    $W[ix_x2_at_entry_3299] : $int<16>
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 914
    // ($cast ($uint<16>) div )
    $intermediate $W[type_cast_3306_wire] : $int<16>
    // jx_x1_at_entry
    $W[jx_x1_at_entry_3303] : $int<16>
    // do-while statement  
    //  file prog.linked.opt.aa, line 917
    // merge-statement  
    //  file prog.linked.opt.aa, line 919
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 920
    // ($cast ($uint<16>) kx_x0 )
    $intermediate $W[type_cast_3313_wire] : $int<16>
    // kx_x1
    $W[kx_x1_3310] : $int<16>
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 922
    // ($cast ($uint<16>) ix_x1 )
    $intermediate $W[type_cast_3318_wire] : $int<16>
    $W[ix_x2_at_entry_3299_3319_buffered] : $int<16>
    // ix_x2
    $W[ix_x2_3315] : $int<16>
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 924
    // ($cast ($uint<16>) jx_x0 )
    $intermediate $W[type_cast_3323_wire] : $int<16>
    $W[jx_x1_at_entry_3303_3324_buffered] : $int<16>
    // jx_x1
    $W[jx_x1_3320] : $int<16>
    // 			conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 927
    // ($cast ($int<32>) kx_x1 )
    $intermediate $W[type_cast_3328_wire] : $int<32>
    // conv52
    $W[conv52_3330] : $int<32>
    // 			$volatile add := (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 928
    // add
    $W[add_3336] : $int<32>
    // 			type_cast_2792_2792_delayed_2_0 := ($bitcast ($int<32>) conv36 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 929
    // type_cast_2792_2792_delayed_2_0
    $W[type_cast_2792_2792_delayed_2_0_3340] : $int<32>
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 930
    // ($bitcast ($int<32>) add )
    $intermediate $W[type_cast_3343_wire] : $int<32>
    // cmp
    $W[cmp_3346] : $int<1>
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 931
    // whilex_xbody_ifx_xthen_taken
    $W[whilex_xbody_ifx_xthen_taken_3349] : $int<1>
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 932
    // whilex_xbody_ifx_xelse_taken
    $W[whilex_xbody_ifx_xelse_taken_3353] : $int<1>
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 933
    // ifx_xelse_exec_guard
    $W[ifx_xelse_exec_guard_3356] : $int<1>
    // 			jx_x1_2807_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 934
    // jx_x1_2807_delayed_1_0
    $W[jx_x1_2807_delayed_1_0_3359] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 935
    // inc
    $W[inc_3366] : $int<16>
    // 			$guard (ifx_xelse_exec_guard) conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 936
    // ($cast ($int<32>) inc )
    $intermediate $W[type_cast_3370_wire] : $int<32>
    // conv62
    $W[conv62_3372] : $int<32>
    // 			ifx_xelse_exec_guard_2818_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 937
    // ifx_xelse_exec_guard_2818_delayed_1_0
    $W[ifx_xelse_exec_guard_2818_delayed_1_0_3375] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2818_delayed_1_0) $volatile cmp68 := (conv62 == add67) $buffering 1
    //  file prog.linked.opt.aa, line 938
    // cmp68
    $W[cmp68_3381] : $int<1>
    // 			ifx_xelse_exec_guard_2824_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 939
    // ifx_xelse_exec_guard_2824_delayed_1_0
    $W[ifx_xelse_exec_guard_2824_delayed_1_0_3384] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2824_delayed_1_0) inc73 := ($cast ($uint<16>) cmp68 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 940
    // inc73
    $W[inc73_3389] : $int<16>
    // 			ifx_xelse_exec_guard_2829_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 941
    // ifx_xelse_exec_guard_2829_delayed_2_0
    $W[ifx_xelse_exec_guard_2829_delayed_2_0_3392] : $int<1>
    // 			ix_x2_2832_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 942
    // ix_x2_2832_delayed_3_0
    $W[ix_x2_2832_delayed_3_0_3395] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_2829_delayed_2_0) $volatile inc73x_xix_x2 := (inc73 + ix_x2_2832_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 943
    // inc73x_xix_x2
    $W[inc73x_xix_x2_3401] : $int<16>
    // 			ifx_xelse_exec_guard_2835_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 944
    // ifx_xelse_exec_guard_2835_delayed_1_0
    $W[ifx_xelse_exec_guard_2835_delayed_1_0_3404] : $int<1>
    // 			inc_2839_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 945
    // inc_2839_delayed_1_0
    $W[inc_2839_delayed_1_0_3407] : $int<16>
    // 			$guard (ifx_xelse_exec_guard_2835_delayed_1_0) $volatile jx_x2 := ( $mux cmp68 div  inc_2839_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 946
    // jx_x2
    $W[jx_x2_3414] : $int<16>
    // 			ifx_xelse_exec_guard_2842_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 947
    // ifx_xelse_exec_guard_2842_delayed_2_0
    $W[ifx_xelse_exec_guard_2842_delayed_2_0_3417] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 948
    // ($cast ($int<32>) inc73x_xix_x2 )
    $intermediate $W[type_cast_3421_wire] : $int<32>
    // conv75
    $W[conv75_3423] : $int<32>
    // 			ifx_xelse_exec_guard_2848_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 949
    // ifx_xelse_exec_guard_2848_delayed_3_0
    $W[ifx_xelse_exec_guard_2848_delayed_3_0_3426] : $int<1>
    // 			$guard (ifx_xelse_exec_guard_2848_delayed_3_0) $volatile cmp82 := (conv75 == add81) $buffering 1
    //  file prog.linked.opt.aa, line 950
    // cmp82
    $W[cmp82_3432] : $int<1>
    // 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 951
    // ifx_xelse_exec_guard_2855_delayed_3_0
    $W[ifx_xelse_exec_guard_2855_delayed_3_0_3435] : $int<1>
    // 			$volatile ifx_xelse_ifx_xthen84_taken := (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82) $buffering 1
    //  file prog.linked.opt.aa, line 952
    // ifx_xelse_ifx_xthen84_taken
    $W[ifx_xelse_ifx_xthen84_taken_3440] : $int<1>
    // 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 953
    // ifx_xelse_exec_guard_2860_delayed_3_0
    $W[ifx_xelse_exec_guard_2860_delayed_3_0_3443] : $int<1>
    // 			$volatile ifx_xelse_ifx_xend86_taken := (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 )) $buffering 1
    //  file prog.linked.opt.aa, line 954
    // ( ~ cmp82 )
    $intermediate $W[NOT_u1_u1_3447_wire] : $int<1>
    // ifx_xelse_ifx_xend86_taken
    $W[ifx_xelse_ifx_xend86_taken_3449] : $int<1>
    // 			$volatile ifx_xthen84_exec_guard := ifx_xelse_ifx_xthen84_taken $buffering 1
    //  file prog.linked.opt.aa, line 955
    // ifx_xthen84_exec_guard
    $W[ifx_xthen84_exec_guard_3452] : $int<1>
    // 			$volatile ifx_xthen84_ifx_xend86_taken := ifx_xthen84_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 956
    // ifx_xthen84_ifx_xend86_taken
    $W[ifx_xthen84_ifx_xend86_taken_3455] : $int<1>
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 957
    // ifx_xthen_exec_guard
    $W[ifx_xthen_exec_guard_3458] : $int<1>
    // 			kx_x1_2876_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 958
    // kx_x1_2876_delayed_1_0
    $W[kx_x1_2876_delayed_1_0_3461] : $int<16>
    // 			$guard (ifx_xthen_exec_guard) $volatile add58 := (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 959
    // add58
    $W[add58_3468] : $int<16>
    // 			$volatile ifx_xthen_ifx_xend86_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 960
    // ifx_xthen_ifx_xend86_taken
    $W[ifx_xthen_ifx_xend86_taken_3471] : $int<1>
    // 			ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 961
    // ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
    $W[ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3474] : $int<1>
    // 			$volatile ifx_xend86_exec_guard := (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 962
    // (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)
    $intermediate $W[OR_u1_u1_3479_wire] : $int<1>
    // ifx_xend86_exec_guard
    $W[ifx_xend86_exec_guard_3481] : $int<1>
    // 			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 963
    // ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
    $W[ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3484] : $int<1>
    // 			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 964
    // type_cast_2894_2894_delayed_3_0
    $W[type_cast_2894_2894_delayed_3_0_3488] : $int<16>
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 965
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_3502_wire] : $int<16>
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_3503_wire] : $int<16>
    // kx_x0
    $W[kx_x0_3505] : $int<16>
    // 			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 966
    // ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
    $W[ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3508] : $int<1>
    // 			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 967
    // type_cast_2912_2912_delayed_4_0
    $W[type_cast_2912_2912_delayed_4_0_3512] : $int<16>
    // 			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 968
    // type_cast_2915_2915_delayed_1_0
    $W[type_cast_2915_2915_delayed_1_0_3516] : $int<16>
    // 			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 969
    // type_cast_2918_2918_delayed_1_0
    $W[type_cast_2918_2918_delayed_1_0_3520] : $int<16>
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 970
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_3530_wire] : $int<16>
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_3531_wire] : $int<16>
    // ix_x1
    $W[ix_x1_3533] : $int<16>
    // 			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 971
    // ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
    $W[ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3536] : $int<1>
    // 			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 972
    // type_cast_2928_2928_delayed_4_0
    $W[type_cast_2928_2928_delayed_4_0_3540] : $int<16>
    // 			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 973
    // type_cast_2931_2931_delayed_2_0
    $W[type_cast_2931_2931_delayed_2_0_3544] : $int<16>
    // 			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 974
    // type_cast_2934_2934_delayed_2_0
    $W[type_cast_2934_2934_delayed_2_0_3548] : $int<16>
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 975
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_3558_wire] : $int<16>
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_3559_wire] : $int<16>
    // jx_x0
    $W[jx_x0_3561] : $int<16>
    // 			ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 976
    // ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
    $W[ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3564] : $int<1>
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 977
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    $intermediate $W[MUX_3580_wire] : $int<16>
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    $intermediate $W[MUX_3581_wire] : $int<16>
    // flagx_x0
    $W[flagx_x0_3583] : $int<16>
    // 			$guard (ifx_xend86_exec_guard) conv90176 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 978
    // conv90176
    $W[conv90176_3588] : $int<32>
    // 			$guard (ifx_xend86_exec_guard) conv94 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 979
    // ($cast ($int<32>) jx_x0 )
    $intermediate $W[type_cast_3592_wire] : $int<32>
    // conv94
    $W[conv94_3594] : $int<32>
    // 			ifx_xend86_exec_guard_2971_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 980
    // ifx_xend86_exec_guard_2971_delayed_1_0
    $W[ifx_xend86_exec_guard_2971_delayed_1_0_3597] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_2971_delayed_1_0) $volatile mul95 := (conv94 * conv42) $buffering 1
    //  file prog.linked.opt.aa, line 981
    // mul95
    $W[mul95_3603] : $int<32>
    // 			$guard (ifx_xend86_exec_guard) conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 982
    // ($cast ($int<32>) ix_x1 )
    $intermediate $W[type_cast_3607_wire] : $int<32>
    // conv100
    $W[conv100_3609] : $int<32>
    // 			ifx_xend86_exec_guard_2983_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 983
    // ifx_xend86_exec_guard_2983_delayed_1_0
    $W[ifx_xend86_exec_guard_2983_delayed_1_0_3612] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_2983_delayed_1_0) $volatile mul101 := (conv100 * conv98) $buffering 1
    //  file prog.linked.opt.aa, line 984
    // mul101
    $W[mul101_3618] : $int<32>
    // 			ifx_xend86_exec_guard_2989_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 985
    // ifx_xend86_exec_guard_2989_delayed_1_0
    $W[ifx_xend86_exec_guard_2989_delayed_1_0_3621] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_2989_delayed_1_0) $volatile add96 := (mul101 + conv90176) $buffering 1
    //  file prog.linked.opt.aa, line 986
    // add96
    $W[add96_3627] : $int<32>
    // 			ifx_xend86_exec_guard_2995_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 987
    // ifx_xend86_exec_guard_2995_delayed_1_0
    $W[ifx_xend86_exec_guard_2995_delayed_1_0_3630] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_2995_delayed_1_0) $volatile add102 := (add96 + mul95) $buffering 1
    //  file prog.linked.opt.aa, line 988
    // add102
    $W[add102_3636] : $int<32>
    // 			ifx_xend86_exec_guard_3001_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 989
    // ifx_xend86_exec_guard_3001_delayed_1_0
    $W[ifx_xend86_exec_guard_3001_delayed_1_0_3639] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3001_delayed_1_0) conv103 := ($cast ($uint<16>) add102 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 990
    // conv103
    $W[conv103_3644] : $int<16>
    // 			ifx_xend86_exec_guard_3006_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 991
    // ifx_xend86_exec_guard_3006_delayed_1_0
    $W[ifx_xend86_exec_guard_3006_delayed_1_0_3647] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3006_delayed_1_0) $volatile sub := (conv94 - conv112) $buffering 1
    //  file prog.linked.opt.aa, line 992
    // sub
    $W[sub_3653] : $int<32>
    // 			ifx_xend86_exec_guard_3012_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 993
    // ifx_xend86_exec_guard_3012_delayed_1_0
    $W[ifx_xend86_exec_guard_3012_delayed_1_0_3656] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3012_delayed_1_0) $volatile mul113 := (sub * conv36) $buffering 1
    //  file prog.linked.opt.aa, line 994
    // mul113
    $W[mul113_3662] : $int<32>
    // 			ifx_xend86_exec_guard_3018_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 995
    // ifx_xend86_exec_guard_3018_delayed_1_0
    $W[ifx_xend86_exec_guard_3018_delayed_1_0_3665] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3018_delayed_1_0) $volatile sub121 := (conv100 - conv112) $buffering 1
    //  file prog.linked.opt.aa, line 996
    // sub121
    $W[sub121_3671] : $int<32>
    // 			ifx_xend86_exec_guard_3024_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 997
    // ifx_xend86_exec_guard_3024_delayed_1_0
    $W[ifx_xend86_exec_guard_3024_delayed_1_0_3674] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3024_delayed_1_0) $volatile mul122 := (sub121 * conv116) $buffering 1
    //  file prog.linked.opt.aa, line 998
    // mul122
    $W[mul122_3680] : $int<32>
    // 			ifx_xend86_exec_guard_3030_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 999
    // ifx_xend86_exec_guard_3030_delayed_1_0
    $W[ifx_xend86_exec_guard_3030_delayed_1_0_3683] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3030_delayed_1_0) $volatile add114 := (mul122 + conv90176) $buffering 1
    //  file prog.linked.opt.aa, line 1000
    // add114
    $W[add114_3689] : $int<32>
    // 			ifx_xend86_exec_guard_3036_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1001
    // ifx_xend86_exec_guard_3036_delayed_1_0
    $W[ifx_xend86_exec_guard_3036_delayed_1_0_3692] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3036_delayed_1_0) $volatile add123 := (add114 + mul113) $buffering 1
    //  file prog.linked.opt.aa, line 1002
    // add123
    $W[add123_3698] : $int<32>
    // 			ifx_xend86_exec_guard_3042_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1003
    // ifx_xend86_exec_guard_3042_delayed_1_0
    $W[ifx_xend86_exec_guard_3042_delayed_1_0_3701] : $int<1>
    // 			type_cast_3047_3047_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1004
    // type_cast_3047_3047_delayed_1_0
    $W[type_cast_3047_3047_delayed_1_0_3705] : $int<32>
    // 			$guard (ifx_xend86_exec_guard_3042_delayed_1_0) $volatile cmp129 := (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1005
    // ($bitcast ($int<32>) conv100 )
    $intermediate $W[type_cast_3709_wire] : $int<32>
    // cmp129
    $W[cmp129_3712] : $int<1>
    // 			ifx_xend86_exec_guard_3050_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1006
    // ifx_xend86_exec_guard_3050_delayed_1_0
    $W[ifx_xend86_exec_guard_3050_delayed_1_0_3715] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3050_delayed_1_0) $volatile cmp129x_xnot := (cmp129 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1007
    // cmp129x_xnot
    $W[cmp129x_xnot_3722] : $int<1>
    // 			ifx_xend86_exec_guard_3057_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1008
    // ifx_xend86_exec_guard_3057_delayed_1_0
    $W[ifx_xend86_exec_guard_3057_delayed_1_0_3725] : $int<1>
    // 			type_cast_3062_3062_delayed_1_0 := ($bitcast ($int<32>) add137 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1009
    // type_cast_3062_3062_delayed_1_0
    $W[type_cast_3062_3062_delayed_1_0_3729] : $int<32>
    // 			$guard (ifx_xend86_exec_guard_3057_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1010
    // ($bitcast ($int<32>) conv100 )
    $intermediate $W[type_cast_3733_wire] : $int<32>
    // cmp138
    $W[cmp138_3736] : $int<1>
    // 			ifx_xend86_exec_guard_3065_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1011
    // ifx_xend86_exec_guard_3065_delayed_1_0
    $W[ifx_xend86_exec_guard_3065_delayed_1_0_3739] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3065_delayed_1_0) $volatile orx_xcond := (cmp129x_xnot & cmp138) $buffering 1
    //  file prog.linked.opt.aa, line 1012
    // orx_xcond
    $W[orx_xcond_3745] : $int<1>
    // 			ifx_xend86_exec_guard_3071_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1013
    // ifx_xend86_exec_guard_3071_delayed_1_0
    $W[ifx_xend86_exec_guard_3071_delayed_1_0_3748] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3071_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1014
    // orx_xcondx_xnot
    $W[orx_xcondx_xnot_3755] : $int<1>
    // 			ifx_xend86_exec_guard_3078_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1015
    // ifx_xend86_exec_guard_3078_delayed_1_0
    $W[ifx_xend86_exec_guard_3078_delayed_1_0_3758] : $int<1>
    // 			type_cast_3083_3083_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1016
    // type_cast_3083_3083_delayed_1_0
    $W[type_cast_3083_3083_delayed_1_0_3762] : $int<32>
    // 			$guard (ifx_xend86_exec_guard_3078_delayed_1_0) $volatile cmp145 := (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1017
    // ($bitcast ($int<32>) conv94 )
    $intermediate $W[type_cast_3766_wire] : $int<32>
    // cmp145
    $W[cmp145_3769] : $int<1>
    // 			ifx_xend86_exec_guard_3086_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1018
    // ifx_xend86_exec_guard_3086_delayed_1_0
    $W[ifx_xend86_exec_guard_3086_delayed_1_0_3772] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3086_delayed_1_0) $volatile orx_xcond181 := (orx_xcondx_xnot | cmp145) $buffering 1
    //  file prog.linked.opt.aa, line 1019
    // orx_xcond181
    $W[orx_xcond181_3778] : $int<1>
    // 			ifx_xend86_exec_guard_3092_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1020
    // ifx_xend86_exec_guard_3092_delayed_1_0
    $W[ifx_xend86_exec_guard_3092_delayed_1_0_3781] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3092_delayed_1_0) $volatile orx_xcond181x_xnot := (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1021
    // orx_xcond181x_xnot
    $W[orx_xcond181x_xnot_3788] : $int<1>
    // 			ifx_xend86_exec_guard_3099_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1022
    // ifx_xend86_exec_guard_3099_delayed_1_0
    $W[ifx_xend86_exec_guard_3099_delayed_1_0_3791] : $int<1>
    // 			type_cast_3104_3104_delayed_1_0 := ($bitcast ($int<32>) add154 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1023
    // type_cast_3104_3104_delayed_1_0
    $W[type_cast_3104_3104_delayed_1_0_3795] : $int<32>
    // 			$guard (ifx_xend86_exec_guard_3099_delayed_1_0) $volatile cmp155 := (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1024
    // ($bitcast ($int<32>) conv94 )
    $intermediate $W[type_cast_3799_wire] : $int<32>
    // cmp155
    $W[cmp155_3802] : $int<1>
    // 			ifx_xend86_exec_guard_3107_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1025
    // ifx_xend86_exec_guard_3107_delayed_1_0
    $W[ifx_xend86_exec_guard_3107_delayed_1_0_3805] : $int<1>
    // 			$guard (ifx_xend86_exec_guard_3107_delayed_1_0) $volatile orx_xcond182 := (orx_xcond181x_xnot & cmp155) $buffering 1
    //  file prog.linked.opt.aa, line 1026
    // orx_xcond182
    $W[orx_xcond182_3811] : $int<1>
    // 			ifx_xend86_exec_guard_3114_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1027
    // ifx_xend86_exec_guard_3114_delayed_1_0
    $W[ifx_xend86_exec_guard_3114_delayed_1_0_3814] : $int<1>
    // 			$volatile ifx_xend86_ifx_xelse160_taken := (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182) $buffering 1
    //  file prog.linked.opt.aa, line 1028
    // ifx_xend86_ifx_xelse160_taken
    $W[ifx_xend86_ifx_xelse160_taken_3819] : $int<1>
    // 			ifx_xend86_exec_guard_3119_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1029
    // ifx_xend86_exec_guard_3119_delayed_1_0
    $W[ifx_xend86_exec_guard_3119_delayed_1_0_3822] : $int<1>
    // 			$volatile ifx_xend86_ifx_xthen157_taken := (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 )) $buffering 1
    //  file prog.linked.opt.aa, line 1030
    // ( ~ orx_xcond182 )
    $intermediate $W[NOT_u1_u1_3826_wire] : $int<1>
    // ifx_xend86_ifx_xthen157_taken
    $W[ifx_xend86_ifx_xthen157_taken_3828] : $int<1>
    // 			$volatile ifx_xthen157_exec_guard := ifx_xend86_ifx_xthen157_taken $buffering 1
    //  file prog.linked.opt.aa, line 1031
    // ifx_xthen157_exec_guard
    $W[ifx_xthen157_exec_guard_3831] : $int<1>
    // 			ifx_xthen157_exec_guard_3127_delayed_1_0 := ifx_xthen157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1032
    // ifx_xthen157_exec_guard_3127_delayed_1_0
    $W[ifx_xthen157_exec_guard_3127_delayed_1_0_3834] : $int<1>
    // 			$guard (ifx_xthen157_exec_guard_3127_delayed_1_0) conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1033
    // ($cast ($int<32>) conv103 )
    $intermediate $W[type_cast_3838_wire] : $int<32>
    // conv159
    $W[conv159_3840] : $int<32>
    // 			ifx_xthen157_exec_guard_3133_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1034
    // ifx_xthen157_exec_guard_3133_delayed_2_0
    $W[ifx_xthen157_exec_guard_3133_delayed_2_0_3843] : $int<1>
    // 			$guard (ifx_xthen157_exec_guard_3133_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1035
    // ($bitcast ($int<32>) conv159 )
    $intermediate $W[type_cast_3847_wire] : $int<32>
    // (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_3851_wire] : $int<32>
    // shr
    $W[shr_3853] : $int<32>
    // 			ifx_xthen157_exec_guard_3143_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1036
    // ifx_xthen157_exec_guard_3143_delayed_2_0
    $W[ifx_xthen157_exec_guard_3143_delayed_2_0_3856] : $int<1>
    // 			$guard (ifx_xthen157_exec_guard_3143_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1037
    // ($cast ($int<64>) shr )
    $intermediate $W[type_cast_3860_wire] : $int<64>
    // idxprom
    $W[idxprom_3862] : $int<64>
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1038
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $intermediate $W[R_idxprom_3866_resized] : $int<14>
    $intermediate $W[R_idxprom_3866_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3867_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3867_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_3869] : $int<32>
    // 			$guard (ifx_xthen157_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1039
    // ->(arrayidx)
    $intermediate $W[ptr_deref_3872_wire] : $int<64>
    $intermediate $W[ptr_deref_3872_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3872_root_address] : $int<14>
    $W[ptr_deref_3872_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3872_data_0] : $int<64>
    // 			$volatile ifx_xelse160_exec_guard := ifx_xend86_ifx_xelse160_taken $buffering 1
    //  file prog.linked.opt.aa, line 1040
    // ifx_xelse160_exec_guard
    $W[ifx_xelse160_exec_guard_3878] : $int<1>
    // 			$guard (ifx_xelse160_exec_guard) $volatile sext179 := (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 1041
    // sext179
    $W[sext179_3885] : $int<32>
    // 			$guard (ifx_xelse160_exec_guard) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1042
    // ($bitcast ($int<32>) sext179 )
    $intermediate $W[type_cast_3889_wire] : $int<32>
    // (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $intermediate $W[ASHR_i32_i32_3893_wire] : $int<32>
    // shr163
    $W[shr163_3895] : $int<32>
    // 			$guard (ifx_xelse160_exec_guard) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1043
    // ($cast ($int<64>) shr163 )
    $intermediate $W[type_cast_3899_wire] : $int<64>
    // idxprom164
    $W[idxprom164_3901] : $int<64>
    // 			arrayidx165 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1044
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164])
    $intermediate $W[R_idxprom164_3905_resized] : $int<14>
    $intermediate $W[R_idxprom164_3905_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3906_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3906_root_address] : $int<14>
    // arrayidx165
    $W[arrayidx165_3908] : $int<32>
    // 			ifx_xelse160_exec_guard_3195_delayed_8_0 := ifx_xelse160_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 1045
    // ifx_xelse160_exec_guard_3195_delayed_8_0
    $W[ifx_xelse160_exec_guard_3195_delayed_8_0_3911] : $int<1>
    // 			$guard (ifx_xelse160_exec_guard_3195_delayed_8_0) tmp166 := ->(arrayidx165) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1046
    // ->(arrayidx165)
    $intermediate $W[ptr_deref_3915_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3915_root_address] : $int<14>
    $W[ptr_deref_3915_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_3915_data_0] : $int<64>
    // tmp166
    $W[tmp166_3916] : $int<64>
    // 			ifx_xelse160_exec_guard_3200_delayed_1_0 := ifx_xelse160_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1047
    // ifx_xelse160_exec_guard_3200_delayed_1_0
    $W[ifx_xelse160_exec_guard_3200_delayed_1_0_3919] : $int<1>
    // 			$guard (ifx_xelse160_exec_guard_3200_delayed_1_0) conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1048
    // ($cast ($int<32>) conv103 )
    $intermediate $W[type_cast_3923_wire] : $int<32>
    // conv168
    $W[conv168_3925] : $int<32>
    // 			ifx_xelse160_exec_guard_3206_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1049
    // ifx_xelse160_exec_guard_3206_delayed_2_0
    $W[ifx_xelse160_exec_guard_3206_delayed_2_0_3928] : $int<1>
    // 			$guard (ifx_xelse160_exec_guard_3206_delayed_2_0) $volatile shr169 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1050
    // ($bitcast ($int<32>) conv168 )
    $intermediate $W[type_cast_3932_wire] : $int<32>
    // (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_3936_wire] : $int<32>
    // shr169
    $W[shr169_3938] : $int<32>
    // 			ifx_xelse160_exec_guard_3216_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1051
    // ifx_xelse160_exec_guard_3216_delayed_2_0
    $W[ifx_xelse160_exec_guard_3216_delayed_2_0_3941] : $int<1>
    // 			$guard (ifx_xelse160_exec_guard_3216_delayed_2_0) idxprom170 := ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1052
    // ($cast ($int<64>) shr169 )
    $intermediate $W[type_cast_3945_wire] : $int<64>
    // idxprom170
    $W[idxprom170_3947] : $int<64>
    // 			arrayidx171 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1053
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170])
    $intermediate $W[R_idxprom170_3951_resized] : $int<14>
    $intermediate $W[R_idxprom170_3951_scaled] : $int<14>
    $intermediate $W[array_obj_ref_3952_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_3952_root_address] : $int<14>
    // arrayidx171
    $W[arrayidx171_3954] : $int<32>
    // 			ifx_xelse160_exec_guard_3229_delayed_14_0 := ifx_xelse160_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 1054
    // ifx_xelse160_exec_guard_3229_delayed_14_0
    $W[ifx_xelse160_exec_guard_3229_delayed_14_0_3957] : $int<1>
    // 			arrayidx171_3230_delayed_4_0 := arrayidx171 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 1055
    // arrayidx171_3230_delayed_4_0
    $W[arrayidx171_3230_delayed_4_0_3960] : $int<32>
    // 			$guard (ifx_xelse160_exec_guard_3229_delayed_14_0) ->(arrayidx171_3230_delayed_4_0) := tmp166 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1056
    // ->(arrayidx171_3230_delayed_4_0)
    $intermediate $W[ptr_deref_3963_wire] : $int<64>
    $intermediate $W[ptr_deref_3963_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_3963_root_address] : $int<14>
    $W[ptr_deref_3963_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_3963_data_0] : $int<64>
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 1057
    // tobool
    $W[tobool_3971] : $int<1>
    // 			$volatile ifx_xend172_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 1058
    // ifx_xend172_whilex_xend_taken
    $W[ifx_xend172_whilex_xend_taken_3975] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 118164344
    // 		Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 1066
    // Block3_complete
    // datapath-instances for block %zeropad3D_D%body
    //  file prog.linked.opt.aa, line 877
    // 		call := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 879
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3161_inst] (Block3_starting) (call_3162) 
    $buffering $out RPIPE_Block3_starting_3161_inst call_3162 1
    // 		call1 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 880
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3164_inst] (Block3_starting) (call1_3165) 
    $buffering $out RPIPE_Block3_starting_3164_inst call1_3165 1
    // 		call2 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 881
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3167_inst] (Block3_starting) (call2_3168) 
    $buffering $out RPIPE_Block3_starting_3167_inst call2_3168 1
    // 		call3 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 882
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3170_inst] (Block3_starting) (call3_3171) 
    $buffering $out RPIPE_Block3_starting_3170_inst call3_3171 1
    // 		call4 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 883
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3173_inst] (Block3_starting) (call4_3174) 
    $buffering $out RPIPE_Block3_starting_3173_inst call4_3174 1
    // 		call5 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 884
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3176_inst] (Block3_starting) (call5_3177) 
    $buffering $out RPIPE_Block3_starting_3176_inst call5_3177 1
    // 		call6 := Block3_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 885
    // Block3_starting
    $ioport $in [RPIPE_Block3_starting_3179_inst] (Block3_starting) (call6_3180) 
    $buffering $out RPIPE_Block3_starting_3179_inst call6_3180 1
    // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 887
    // ($cast ($uint<16>) call1 )
    # := [type_cast_3184_inst] (call1_3165) (conv_3185)    
    $buffering  $out type_cast_3184_inst conv_3185 1
    $delay type_cast_3184_inst 1
    // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 888
    // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
    >>[LSHR_u16_u16_3190_inst] (conv_3185 type_cast_3189_wire_constant) (div_3191)   $flowthrough 
    $delay LSHR_u16_u16_3190_inst 0
    // 		conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 889
    // ($cast ($uint<16>) call )
    # := [type_cast_3194_inst] (call_3162) (conv10_3195)    
    $buffering  $out type_cast_3194_inst conv10_3195 1
    $delay type_cast_3194_inst 1
    // 		$volatile div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 890
    // (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  ))
    >>[LSHR_u16_u16_3200_inst] (conv10_3195 type_cast_3199_wire_constant) (div11_3201)   $flowthrough 
    $delay LSHR_u16_u16_3200_inst 0
    // 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 891
    // ($cast ($uint<32>) call2 )
    # := [type_cast_3204_inst] (call2_3168) (conv36_3205)    
    $buffering  $out type_cast_3204_inst conv36_3205 1
    $delay type_cast_3204_inst 1
    // 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 892
    // ($cast ($uint<32>) call1 )
    # := [type_cast_3208_inst] (call1_3165) (conv38_3209)    
    $buffering  $out type_cast_3208_inst conv38_3209 1
    $delay type_cast_3208_inst 1
    // 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 893
    // ($cast ($uint<32>) call5 )
    # := [type_cast_3212_inst] (call5_3177) (conv42_3213)    
    $buffering  $out type_cast_3212_inst conv42_3213 1
    $delay type_cast_3212_inst 1
    // 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 894
    // ($cast ($uint<32>) call4 )
    # := [type_cast_3216_inst] (call4_3174) (conv44_3217)    
    $buffering  $out type_cast_3216_inst conv44_3217 1
    $delay type_cast_3216_inst 1
    // 		$volatile mul45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 895
    // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_3222_inst] (conv44_3217 type_cast_3221_wire_constant) (mul45_3223)   $flowthrough 
    $delay SHL_u32_u32_3222_inst 0
    // 		$volatile sext := (mul45 * conv42) $buffering 1
    //  file prog.linked.opt.aa, line 896
    // (mul45 * conv42)
    *[MUL_u32_u32_3227_inst] (mul45_3223 conv42_3213) (sext_3228)   $flowthrough 
    $delay MUL_u32_u32_3227_inst 0
    // 		$volatile conv98 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 897
    // ($bitcast ($int<32>) sext )
    # := [type_cast_3231_inst] (sext_3228) (type_cast_3231_wire)   $flowthrough
    $delay type_cast_3231_inst 0
    // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_3235_inst] (type_cast_3231_wire type_cast_3234_wire_constant) (ASHR_i32_i32_3235_wire)   $flowthrough 
    $delay ASHR_i32_i32_3235_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_3236_inst] (ASHR_i32_i32_3235_wire) (conv98_3237)   $flowthrough
    $delay type_cast_3236_inst 0
    // 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 898
    // ($cast ($uint<32>) call6 )
    # := [type_cast_3240_inst] (call6_3180) (conv112_3241)    
    $buffering  $out type_cast_3240_inst conv112_3241 1
    $delay type_cast_3240_inst 1
    // 		$volatile mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 899
    // (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_3246_inst] (conv38_3209 type_cast_3245_wire_constant) (mul_3247)   $flowthrough 
    $delay SHL_u32_u32_3246_inst 0
    // 		$volatile sext177 := (mul * conv36) $buffering 1
    //  file prog.linked.opt.aa, line 900
    // (mul * conv36)
    *[MUL_u32_u32_3251_inst] (mul_3247 conv36_3205) (sext177_3252)   $flowthrough 
    $delay MUL_u32_u32_3251_inst 0
    // 		$volatile conv116 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 901
    // ($bitcast ($int<32>) sext177 )
    # := [type_cast_3255_inst] (sext177_3252) (type_cast_3255_wire)   $flowthrough
    $delay type_cast_3255_inst 0
    // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
    $S>>[ASHR_i32_i32_3259_inst] (type_cast_3255_wire type_cast_3258_wire_constant) (ASHR_i32_i32_3259_wire)   $flowthrough 
    $delay ASHR_i32_i32_3259_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) )
    # := [type_cast_3260_inst] (ASHR_i32_i32_3259_wire) (conv116_3261)   $flowthrough
    $delay type_cast_3260_inst 0
    // 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 902
    // ($cast ($uint<32>) call )
    # := [type_cast_3264_inst] (call_3162) (conv134_3265)    
    $buffering  $out type_cast_3264_inst conv134_3265 1
    $delay type_cast_3264_inst 1
    // 		$volatile add137 := (conv112 + conv134) $buffering 1
    //  file prog.linked.opt.aa, line 903
    // (conv112 + conv134)
    +[ADD_u32_u32_3269_inst] (conv112_3241 conv134_3265) (add137_3270)   $flowthrough 
    $delay ADD_u32_u32_3269_inst 0
    // 		$volatile add154 := (conv112 + conv38) $buffering 1
    //  file prog.linked.opt.aa, line 904
    // (conv112 + conv38)
    +[ADD_u32_u32_3274_inst] (conv112_3241 conv38_3209) (add154_3275)   $flowthrough 
    $delay ADD_u32_u32_3274_inst 0
    // 		$volatile shl := (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 905
    // (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3280_inst] (conv112_3241 type_cast_3279_wire_constant) (shl_3281)   $flowthrough 
    $delay SHL_u32_u32_3280_inst 0
    // 		$volatile add67 := (shl + conv38) $buffering 1
    //  file prog.linked.opt.aa, line 906
    // (shl + conv38)
    +[ADD_u32_u32_3285_inst] (shl_3281 conv38_3209) (add67_3286)   $flowthrough 
    $delay ADD_u32_u32_3285_inst 0
    // 		$volatile add81 := (shl + conv134) $buffering 1
    //  file prog.linked.opt.aa, line 907
    // (shl + conv134)
    +[ADD_u32_u32_3290_inst] (shl_3281 conv134_3265) (add81_3291)   $flowthrough 
    $delay ADD_u32_u32_3290_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 909
    // 			$phi kx_x1_at_entry := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 910
    // constant phi data-path element skipped phi_stmt_3294
    // 			$phi ix_x2_at_entry := 			  ($cast ($uint<16>) div11 ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 912
    // ($cast ($uint<16>) div11 )
    # := [type_cast_3302_inst] (div11_3201) (type_cast_3302_wire)    
    $buffering  $out type_cast_3302_inst type_cast_3302_wire 1
    $delay type_cast_3302_inst 1
    $phi [phi_stmt_3299] (type_cast_3302_wire) ( ix_x2_at_entry_3299 ) 
    // 			$phi jx_x1_at_entry := 			  ($cast ($uint<16>) div ) $on   entry_whilex_xbody 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 914
    // ($cast ($uint<16>) div )
    # := [type_cast_3306_inst] (div_3191) (type_cast_3306_wire)    
    $buffering  $out type_cast_3306_inst type_cast_3306_wire 1
    $delay type_cast_3306_inst 1
    $phi [phi_stmt_3303] (type_cast_3306_wire) ( jx_x1_at_entry_3303 ) 
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 917
    ==0? [do_while_stmt_3308_branch] (tobool_3971)
    $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 919
    // 			$phi kx_x1 := 			  ($cast ($uint<16>) kx_x0 ) $on   $loopback 			  kx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 920
    // ($cast ($uint<16>) kx_x0 )
    # := [type_cast_3313_inst] (kx_x0_3505) (type_cast_3313_wire)     $fullrate
    $buffering  $out type_cast_3313_inst type_cast_3313_wire 1
    $delay type_cast_3313_inst 1
    # $phi [phi_stmt_3310] (type_cast_3313_wire kx_x1_at_entry_3294) ( kx_x1_3310 ) $fullrate
    // $buffering  $out phi_stmt_3310 kx_x1_3310 2
    // 			$phi ix_x2 := 			  ($cast ($uint<16>) ix_x1 ) $on   $loopback 			  ix_x2_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 922
    // ($cast ($uint<16>) ix_x1 )
    # := [type_cast_3318_inst] (ix_x1_3533) (type_cast_3318_wire)     $fullrate
    $buffering  $out type_cast_3318_inst type_cast_3318_wire 1
    $delay type_cast_3318_inst 1
    # := [ix_x2_at_entry_3299_3319_buf] (ix_x2_at_entry_3299) (ix_x2_at_entry_3299_3319_buffered)     $fullrate
    $buffering $out ix_x2_at_entry_3299_3319_buf ix_x2_at_entry_3299_3319_buffered  1
    # $phi [phi_stmt_3315] (type_cast_3318_wire ix_x2_at_entry_3299_3319_buffered) ( ix_x2_3315 ) $fullrate
    // $buffering  $out phi_stmt_3315 ix_x2_3315 2
    // 			$phi jx_x1 := 			  ($cast ($uint<16>) jx_x0 ) $on   $loopback 			  jx_x1_at_entry $on   $entry 
    // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 924
    // ($cast ($uint<16>) jx_x0 )
    # := [type_cast_3323_inst] (jx_x0_3561) (type_cast_3323_wire)     $fullrate
    $buffering  $out type_cast_3323_inst type_cast_3323_wire 1
    $delay type_cast_3323_inst 1
    # := [jx_x1_at_entry_3303_3324_buf] (jx_x1_at_entry_3303) (jx_x1_at_entry_3303_3324_buffered)     $fullrate
    $buffering $out jx_x1_at_entry_3303_3324_buf jx_x1_at_entry_3303_3324_buffered  1
    # $phi [phi_stmt_3320] (type_cast_3323_wire jx_x1_at_entry_3303_3324_buffered) ( jx_x1_3320 ) $fullrate
    // $buffering  $out phi_stmt_3320 jx_x1_3320 2
    // 			conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 927
    // ($cast ($int<32>) kx_x1 )
    $S:=$U [type_cast_3328_inst] (kx_x1_3310) (type_cast_3328_wire)   $flowthrough
    $delay type_cast_3328_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
    # := [type_cast_3329_inst] (type_cast_3328_wire) (conv52_3330)     $fullrate
    $buffering  $out type_cast_3329_inst conv52_3330 1
    $delay type_cast_3329_inst 1
    // 			$volatile add := (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 928
    // (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
    +[ADD_u32_u32_3335_inst] (conv52_3330 type_cast_3334_wire_constant) (add_3336)   $flowthrough 
    $delay ADD_u32_u32_3335_inst 0
    // 			type_cast_2792_2792_delayed_2_0 := ($bitcast ($int<32>) conv36 ) $buffering 2 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 929
    // ($bitcast ($int<32>) conv36 )
    # := [type_cast_3339_inst] (conv36_3205) (type_cast_2792_2792_delayed_2_0_3340)     $fullrate
    $buffering  $out type_cast_3339_inst type_cast_2792_2792_delayed_2_0_3340 2
    $delay type_cast_3339_inst 1
    // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0) $buffering 1
    //  file prog.linked.opt.aa, line 930
    // ($bitcast ($int<32>) add )
    # := [type_cast_3343_inst] (add_3336) (type_cast_3343_wire)   $flowthrough
    $delay type_cast_3343_inst 0
    // (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0)
    $S<$S[SLT_i32_u1_3345_inst] (type_cast_3343_wire type_cast_2792_2792_delayed_2_0_3340) (cmp_3346)   $flowthrough 
    $delay SLT_i32_u1_3345_inst 0
    // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
    //  file prog.linked.opt.aa, line 931
    # := [W_whilex_xbody_ifx_xthen_taken_3347_inst] (cmp_3346) (whilex_xbody_ifx_xthen_taken_3349)    $flowthrough 
    // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
    //  file prog.linked.opt.aa, line 932
    // ( ~ cmp )
    ~ [NOT_u1_u1_3352_inst] (cmp_3346) (whilex_xbody_ifx_xelse_taken_3353)   $flowthrough
    $delay NOT_u1_u1_3352_inst 0
    // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
    //  file prog.linked.opt.aa, line 933
    # := [W_ifx_xelse_exec_guard_3354_inst] (whilex_xbody_ifx_xelse_taken_3353) (ifx_xelse_exec_guard_3356)    $flowthrough 
    // 			jx_x1_2807_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 934
    # := [W_jx_x1_2807_delayed_1_0_3357_inst] (jx_x1_3320) (jx_x1_2807_delayed_1_0_3359)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 935
    // (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_3365_inst] (jx_x1_2807_delayed_1_0_3359 type_cast_3364_wire_constant) (inc_3366) $guard ( ifx_xelse_exec_guard_3356 )   $flowthrough 
    $delay ADD_u16_u16_3365_inst 0
    // 			$guard (ifx_xelse_exec_guard) conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 936
    // ($cast ($int<32>) inc )
    $S:=$U [type_cast_3370_inst] (inc_3366) (type_cast_3370_wire)  $guard ( ifx_xelse_exec_guard_3356 )  $flowthrough
    $delay type_cast_3370_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
    # := [type_cast_3371_inst] (type_cast_3370_wire) (conv62_3372)  $guard ( ifx_xelse_exec_guard_3356 )    $fullrate
    $buffering  $out type_cast_3371_inst conv62_3372 1
    $delay type_cast_3371_inst 1
    // 			ifx_xelse_exec_guard_2818_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 937
    # := [W_ifx_xelse_exec_guard_2818_delayed_1_0_3373_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2818_delayed_1_0_3375)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2818_delayed_1_0) $volatile cmp68 := (conv62 == add67) $buffering 1
    //  file prog.linked.opt.aa, line 938
    // (conv62 == add67)
    ==[EQ_u32_u1_3380_inst] (conv62_3372 add67_3286) (cmp68_3381) $guard ( ifx_xelse_exec_guard_2818_delayed_1_0_3375 )   $flowthrough 
    $delay EQ_u32_u1_3380_inst 0
    // 			ifx_xelse_exec_guard_2824_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 939
    # := [W_ifx_xelse_exec_guard_2824_delayed_1_0_3382_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2824_delayed_1_0_3384)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2824_delayed_1_0) inc73 := ($cast ($uint<16>) cmp68 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 940
    // ($cast ($uint<16>) cmp68 )
    # := [type_cast_3388_inst] (cmp68_3381) (inc73_3389)  $guard ( ifx_xelse_exec_guard_2824_delayed_1_0_3384 )    $fullrate
    $buffering  $out type_cast_3388_inst inc73_3389 1
    $delay type_cast_3388_inst 1
    // 			ifx_xelse_exec_guard_2829_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 941
    # := [W_ifx_xelse_exec_guard_2829_delayed_2_0_3390_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2829_delayed_2_0_3392)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2829_delayed_2_0_3390_inst ifx_xelse_exec_guard_2829_delayed_2_0_3392 2
    // 			ix_x2_2832_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 942
    # := [W_ix_x2_2832_delayed_3_0_3393_inst] (ix_x2_3315) (ix_x2_2832_delayed_3_0_3395)  $cut_through    $fullrate
    $buffering  $out W_ix_x2_2832_delayed_3_0_3393_inst ix_x2_2832_delayed_3_0_3395 3
    // 			$guard (ifx_xelse_exec_guard_2829_delayed_2_0) $volatile inc73x_xix_x2 := (inc73 + ix_x2_2832_delayed_3_0) $buffering 1
    //  file prog.linked.opt.aa, line 943
    // (inc73 + ix_x2_2832_delayed_3_0)
    +[ADD_u16_u16_3400_inst] (inc73_3389 ix_x2_2832_delayed_3_0_3395) (inc73x_xix_x2_3401) $guard ( ifx_xelse_exec_guard_2829_delayed_2_0_3392 )   $flowthrough 
    $delay ADD_u16_u16_3400_inst 0
    // 			ifx_xelse_exec_guard_2835_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 944
    # := [W_ifx_xelse_exec_guard_2835_delayed_1_0_3402_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2835_delayed_1_0_3404)  $cut_through    $fullrate
    // 			inc_2839_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 945
    # := [W_inc_2839_delayed_1_0_3405_inst] (inc_3366) (inc_2839_delayed_1_0_3407)  $cut_through    $fullrate
    // 			$guard (ifx_xelse_exec_guard_2835_delayed_1_0) $volatile jx_x2 := ( $mux cmp68 div  inc_2839_delayed_1_0 )  $buffering 1
    //  file prog.linked.opt.aa, line 946
    // ( $mux cmp68 div  inc_2839_delayed_1_0 ) 
    ? [MUX_3413_inst] (cmp68_3381 div_3191 inc_2839_delayed_1_0_3407) (jx_x2_3414) $guard ( ifx_xelse_exec_guard_2835_delayed_1_0_3404 )  $flowthrough
    // 			ifx_xelse_exec_guard_2842_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 947
    # := [W_ifx_xelse_exec_guard_2842_delayed_2_0_3415_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2842_delayed_2_0_3417)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2842_delayed_2_0_3415_inst ifx_xelse_exec_guard_2842_delayed_2_0_3417 2
    // 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 948
    // ($cast ($int<32>) inc73x_xix_x2 )
    $S:=$U [type_cast_3421_inst] (inc73x_xix_x2_3401) (type_cast_3421_wire)  $guard ( ifx_xelse_exec_guard_2842_delayed_2_0_3417 )  $flowthrough
    $delay type_cast_3421_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) )
    # := [type_cast_3422_inst] (type_cast_3421_wire) (conv75_3423)  $guard ( ifx_xelse_exec_guard_2842_delayed_2_0_3417 )    $fullrate
    $buffering  $out type_cast_3422_inst conv75_3423 2
    $delay type_cast_3422_inst 1
    // 			ifx_xelse_exec_guard_2848_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 949
    # := [W_ifx_xelse_exec_guard_2848_delayed_3_0_3424_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2848_delayed_3_0_3426)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2848_delayed_3_0_3424_inst ifx_xelse_exec_guard_2848_delayed_3_0_3426 3
    // 			$guard (ifx_xelse_exec_guard_2848_delayed_3_0) $volatile cmp82 := (conv75 == add81) $buffering 1
    //  file prog.linked.opt.aa, line 950
    // (conv75 == add81)
    ==[EQ_u32_u1_3431_inst] (conv75_3423 add81_3291) (cmp82_3432) $guard ( ifx_xelse_exec_guard_2848_delayed_3_0_3426 )   $flowthrough 
    $delay EQ_u32_u1_3431_inst 0
    // 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 951
    # := [W_ifx_xelse_exec_guard_2855_delayed_3_0_3433_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2855_delayed_3_0_3435)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2855_delayed_3_0_3433_inst ifx_xelse_exec_guard_2855_delayed_3_0_3435 3
    // 			$volatile ifx_xelse_ifx_xthen84_taken := (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82) $buffering 1
    //  file prog.linked.opt.aa, line 952
    // (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82)
    &[AND_u1_u1_3439_inst] (ifx_xelse_exec_guard_2855_delayed_3_0_3435 cmp82_3432) (ifx_xelse_ifx_xthen84_taken_3440)   $flowthrough 
    $delay AND_u1_u1_3439_inst 0
    // 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 953
    # := [W_ifx_xelse_exec_guard_2860_delayed_3_0_3441_inst] (ifx_xelse_exec_guard_3356) (ifx_xelse_exec_guard_2860_delayed_3_0_3443)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse_exec_guard_2860_delayed_3_0_3441_inst ifx_xelse_exec_guard_2860_delayed_3_0_3443 3
    // 			$volatile ifx_xelse_ifx_xend86_taken := (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 )) $buffering 1
    //  file prog.linked.opt.aa, line 954
    // ( ~ cmp82 )
    ~ [NOT_u1_u1_3447_inst] (cmp82_3432) (NOT_u1_u1_3447_wire)   $flowthrough
    $delay NOT_u1_u1_3447_inst 0
    // (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 ))
    &[AND_u1_u1_3448_inst] (ifx_xelse_exec_guard_2860_delayed_3_0_3443 NOT_u1_u1_3447_wire) (ifx_xelse_ifx_xend86_taken_3449)   $flowthrough 
    $delay AND_u1_u1_3448_inst 0
    // 			$volatile ifx_xthen84_exec_guard := ifx_xelse_ifx_xthen84_taken $buffering 1
    //  file prog.linked.opt.aa, line 955
    # := [W_ifx_xthen84_exec_guard_3450_inst] (ifx_xelse_ifx_xthen84_taken_3440) (ifx_xthen84_exec_guard_3452)    $flowthrough 
    // 			$volatile ifx_xthen84_ifx_xend86_taken := ifx_xthen84_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 956
    # := [W_ifx_xthen84_ifx_xend86_taken_3453_inst] (ifx_xthen84_exec_guard_3452) (ifx_xthen84_ifx_xend86_taken_3455)    $flowthrough 
    // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
    //  file prog.linked.opt.aa, line 957
    # := [W_ifx_xthen_exec_guard_3456_inst] (whilex_xbody_ifx_xthen_taken_3349) (ifx_xthen_exec_guard_3458)    $flowthrough 
    // 			kx_x1_2876_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 958
    # := [W_kx_x1_2876_delayed_1_0_3459_inst] (kx_x1_3310) (kx_x1_2876_delayed_1_0_3461)  $cut_through    $fullrate
    // 			$guard (ifx_xthen_exec_guard) $volatile add58 := (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 959
    // (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
    +[ADD_u16_u16_3467_inst] (kx_x1_2876_delayed_1_0_3461 type_cast_3466_wire_constant) (add58_3468) $guard ( ifx_xthen_exec_guard_3458 )   $flowthrough 
    $delay ADD_u16_u16_3467_inst 0
    // 			$volatile ifx_xthen_ifx_xend86_taken := ifx_xthen_exec_guard $buffering 1
    //  file prog.linked.opt.aa, line 960
    # := [W_ifx_xthen_ifx_xend86_taken_3469_inst] (ifx_xthen_exec_guard_3458) (ifx_xthen_ifx_xend86_taken_3471)    $flowthrough 
    // 			ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 961
    # := [W_ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3472_inst] (ifx_xthen_ifx_xend86_taken_3471) (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3474)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3472_inst ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3474 3
    // 			$volatile ifx_xend86_exec_guard := (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)) $buffering 1
    //  file prog.linked.opt.aa, line 962
    // (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)
    |[OR_u1_u1_3479_inst] (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3474 ifx_xthen84_ifx_xend86_taken_3455) (OR_u1_u1_3479_wire)   $flowthrough 
    $delay OR_u1_u1_3479_inst 0
    // (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken))
    |[OR_u1_u1_3480_inst] (ifx_xelse_ifx_xend86_taken_3449 OR_u1_u1_3479_wire) (ifx_xend86_exec_guard_3481)   $flowthrough 
    $delay OR_u1_u1_3480_inst 0
    // 			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 963
    # := [W_ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3482_inst] (ifx_xthen_ifx_xend86_taken_3471) (ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3484)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3482_inst ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3484 3
    // 			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
    //  file prog.linked.opt.aa, line 964
    // ($bitcast ($uint<16>) add58 )
    # := [type_cast_3487_inst] (add58_3468) (type_cast_2894_2894_delayed_3_0_3488)     $fullrate
    $buffering  $out type_cast_3487_inst type_cast_2894_2894_delayed_3_0_3488 3
    $delay type_cast_3487_inst 1
    // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 965
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_3502_inst] (ifx_xelse_ifx_xend86_taken_3449 type_cast_3499_wire_constant type_cast_3501_wire_constant) (MUX_3502_wire)  $flowthrough
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_3503_inst] (ifx_xthen84_ifx_xend86_taken_3455 type_cast_3495_wire_constant MUX_3502_wire) (MUX_3503_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_3504_inst] (ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3484 type_cast_2894_2894_delayed_3_0_3488 MUX_3503_wire) (kx_x0_3505)  $flowthrough
    // 			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 966
    # := [W_ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3506_inst] (ifx_xthen_ifx_xend86_taken_3471) (ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3508)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3506_inst ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3508 3
    // 			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 967
    // ($bitcast ($uint<16>) ix_x2 )
    # := [type_cast_3511_inst] (ix_x2_3315) (type_cast_2912_2912_delayed_4_0_3512)     $fullrate
    $buffering  $out type_cast_3511_inst type_cast_2912_2912_delayed_4_0_3512 4
    $delay type_cast_3511_inst 1
    // 			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 968
    // ($bitcast ($uint<16>) inc73x_xix_x2 )
    # := [type_cast_3515_inst] (inc73x_xix_x2_3401) (type_cast_2915_2915_delayed_1_0_3516)     $fullrate
    $buffering  $out type_cast_3515_inst type_cast_2915_2915_delayed_1_0_3516 2
    $delay type_cast_3515_inst 1
    // 			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 969
    // ($bitcast ($uint<16>) inc73x_xix_x2 )
    # := [type_cast_3519_inst] (inc73x_xix_x2_3401) (type_cast_2918_2918_delayed_1_0_3520)     $fullrate
    $buffering  $out type_cast_3519_inst type_cast_2918_2918_delayed_1_0_3520 2
    $delay type_cast_3519_inst 1
    // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 970
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_3530_inst] (ifx_xelse_ifx_xend86_taken_3449 type_cast_2918_2918_delayed_1_0_3520 type_cast_3529_wire_constant) (MUX_3530_wire)  $flowthrough
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_3531_inst] (ifx_xthen84_ifx_xend86_taken_3455 type_cast_2915_2915_delayed_1_0_3516 MUX_3530_wire) (MUX_3531_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_3532_inst] (ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3508 type_cast_2912_2912_delayed_4_0_3512 MUX_3531_wire) (ix_x1_3533)  $flowthrough
    // 			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 971
    # := [W_ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3534_inst] (ifx_xthen_ifx_xend86_taken_3471) (ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3536)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3534_inst ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3536 3
    // 			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 972
    // ($bitcast ($uint<16>) jx_x1 )
    # := [type_cast_3539_inst] (jx_x1_3320) (type_cast_2928_2928_delayed_4_0_3540)     $fullrate
    $buffering  $out type_cast_3539_inst type_cast_2928_2928_delayed_4_0_3540 4
    $delay type_cast_3539_inst 1
    // 			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 973
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_3543_inst] (jx_x2_3414) (type_cast_2931_2931_delayed_2_0_3544)     $fullrate
    $buffering  $out type_cast_3543_inst type_cast_2931_2931_delayed_2_0_3544 2
    $delay type_cast_3543_inst 1
    // 			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 974
    // ($bitcast ($uint<16>) jx_x2 )
    # := [type_cast_3547_inst] (jx_x2_3414) (type_cast_2934_2934_delayed_2_0_3548)     $fullrate
    $buffering  $out type_cast_3547_inst type_cast_2934_2934_delayed_2_0_3548 2
    $delay type_cast_3547_inst 1
    // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 975
    // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_3558_inst] (ifx_xelse_ifx_xend86_taken_3449 type_cast_2934_2934_delayed_2_0_3548 type_cast_3557_wire_constant) (MUX_3558_wire)  $flowthrough
    // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_3559_inst] (ifx_xthen84_ifx_xend86_taken_3455 type_cast_2931_2931_delayed_2_0_3544 MUX_3558_wire) (MUX_3559_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_3560_inst] (ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3536 type_cast_2928_2928_delayed_4_0_3540 MUX_3559_wire) (jx_x0_3561)  $flowthrough
    // 			ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
    //  file prog.linked.opt.aa, line 976
    # := [W_ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3562_inst] (ifx_xthen_ifx_xend86_taken_3471) (ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3564)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3562_inst ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3564 3
    // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
    //  file prog.linked.opt.aa, line 977
    // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
    ? [MUX_3580_inst] (ifx_xelse_ifx_xend86_taken_3449 type_cast_3577_wire_constant type_cast_3579_wire_constant) (MUX_3580_wire)  $flowthrough
    // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
    ? [MUX_3581_inst] (ifx_xthen84_ifx_xend86_taken_3455 type_cast_3573_wire_constant MUX_3580_wire) (MUX_3581_wire)  $flowthrough
    // ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
    ? [MUX_3582_inst] (ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3564 type_cast_3569_wire_constant MUX_3581_wire) (flagx_x0_3583)  $flowthrough
    // 			$guard (ifx_xend86_exec_guard) conv90176 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 978
    // ($cast ($uint<32>) kx_x0 )
    # := [type_cast_3587_inst] (kx_x0_3505) (conv90176_3588)  $guard ( ifx_xend86_exec_guard_3481 )    $fullrate
    $buffering  $out type_cast_3587_inst conv90176_3588 1
    $delay type_cast_3587_inst 1
    // 			$guard (ifx_xend86_exec_guard) conv94 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 979
    // ($cast ($int<32>) jx_x0 )
    $S:=$U [type_cast_3592_inst] (jx_x0_3561) (type_cast_3592_wire)  $guard ( ifx_xend86_exec_guard_3481 )  $flowthrough
    $delay type_cast_3592_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
    # := [type_cast_3593_inst] (type_cast_3592_wire) (conv94_3594)  $guard ( ifx_xend86_exec_guard_3481 )    $fullrate
    $buffering  $out type_cast_3593_inst conv94_3594 1
    $delay type_cast_3593_inst 1
    // 			ifx_xend86_exec_guard_2971_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 980
    # := [W_ifx_xend86_exec_guard_2971_delayed_1_0_3595_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_2971_delayed_1_0_3597)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_2971_delayed_1_0) $volatile mul95 := (conv94 * conv42) $buffering 1
    //  file prog.linked.opt.aa, line 981
    // (conv94 * conv42)
    *[MUL_u32_u32_3602_inst] (conv94_3594 conv42_3213) (mul95_3603) $guard ( ifx_xend86_exec_guard_2971_delayed_1_0_3597 )   $flowthrough 
    $delay MUL_u32_u32_3602_inst 0
    // 			$guard (ifx_xend86_exec_guard) conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 982
    // ($cast ($int<32>) ix_x1 )
    $S:=$U [type_cast_3607_inst] (ix_x1_3533) (type_cast_3607_wire)  $guard ( ifx_xend86_exec_guard_3481 )  $flowthrough
    $delay type_cast_3607_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
    # := [type_cast_3608_inst] (type_cast_3607_wire) (conv100_3609)  $guard ( ifx_xend86_exec_guard_3481 )    $fullrate
    $buffering  $out type_cast_3608_inst conv100_3609 1
    $delay type_cast_3608_inst 1
    // 			ifx_xend86_exec_guard_2983_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 983
    # := [W_ifx_xend86_exec_guard_2983_delayed_1_0_3610_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_2983_delayed_1_0_3612)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_2983_delayed_1_0) $volatile mul101 := (conv100 * conv98) $buffering 1
    //  file prog.linked.opt.aa, line 984
    // (conv100 * conv98)
    *[MUL_u32_u32_3617_inst] (conv100_3609 conv98_3237) (mul101_3618) $guard ( ifx_xend86_exec_guard_2983_delayed_1_0_3612 )   $flowthrough 
    $delay MUL_u32_u32_3617_inst 0
    // 			ifx_xend86_exec_guard_2989_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 985
    # := [W_ifx_xend86_exec_guard_2989_delayed_1_0_3619_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_2989_delayed_1_0_3621)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_2989_delayed_1_0) $volatile add96 := (mul101 + conv90176) $buffering 1
    //  file prog.linked.opt.aa, line 986
    // (mul101 + conv90176)
    +[ADD_u32_u32_3626_inst] (mul101_3618 conv90176_3588) (add96_3627) $guard ( ifx_xend86_exec_guard_2989_delayed_1_0_3621 )   $flowthrough 
    $delay ADD_u32_u32_3626_inst 0
    // 			ifx_xend86_exec_guard_2995_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 987
    # := [W_ifx_xend86_exec_guard_2995_delayed_1_0_3628_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_2995_delayed_1_0_3630)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_2995_delayed_1_0) $volatile add102 := (add96 + mul95) $buffering 1
    //  file prog.linked.opt.aa, line 988
    // (add96 + mul95)
    +[ADD_u32_u32_3635_inst] (add96_3627 mul95_3603) (add102_3636) $guard ( ifx_xend86_exec_guard_2995_delayed_1_0_3630 )   $flowthrough 
    $delay ADD_u32_u32_3635_inst 0
    // 			ifx_xend86_exec_guard_3001_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 989
    # := [W_ifx_xend86_exec_guard_3001_delayed_1_0_3637_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3001_delayed_1_0_3639)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3001_delayed_1_0) conv103 := ($cast ($uint<16>) add102 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 990
    // ($cast ($uint<16>) add102 )
    # := [type_cast_3643_inst] (add102_3636) (conv103_3644)  $guard ( ifx_xend86_exec_guard_3001_delayed_1_0_3639 )    $fullrate
    $buffering  $out type_cast_3643_inst conv103_3644 1
    $delay type_cast_3643_inst 1
    // 			ifx_xend86_exec_guard_3006_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 991
    # := [W_ifx_xend86_exec_guard_3006_delayed_1_0_3645_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3006_delayed_1_0_3647)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3006_delayed_1_0) $volatile sub := (conv94 - conv112) $buffering 1
    //  file prog.linked.opt.aa, line 992
    // (conv94 - conv112)
    -[SUB_u32_u32_3652_inst] (conv94_3594 conv112_3241) (sub_3653) $guard ( ifx_xend86_exec_guard_3006_delayed_1_0_3647 )   $flowthrough 
    $delay SUB_u32_u32_3652_inst 0
    // 			ifx_xend86_exec_guard_3012_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 993
    # := [W_ifx_xend86_exec_guard_3012_delayed_1_0_3654_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3012_delayed_1_0_3656)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3012_delayed_1_0) $volatile mul113 := (sub * conv36) $buffering 1
    //  file prog.linked.opt.aa, line 994
    // (sub * conv36)
    *[MUL_u32_u32_3661_inst] (sub_3653 conv36_3205) (mul113_3662) $guard ( ifx_xend86_exec_guard_3012_delayed_1_0_3656 )   $flowthrough 
    $delay MUL_u32_u32_3661_inst 0
    // 			ifx_xend86_exec_guard_3018_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 995
    # := [W_ifx_xend86_exec_guard_3018_delayed_1_0_3663_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3018_delayed_1_0_3665)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3018_delayed_1_0) $volatile sub121 := (conv100 - conv112) $buffering 1
    //  file prog.linked.opt.aa, line 996
    // (conv100 - conv112)
    -[SUB_u32_u32_3670_inst] (conv100_3609 conv112_3241) (sub121_3671) $guard ( ifx_xend86_exec_guard_3018_delayed_1_0_3665 )   $flowthrough 
    $delay SUB_u32_u32_3670_inst 0
    // 			ifx_xend86_exec_guard_3024_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 997
    # := [W_ifx_xend86_exec_guard_3024_delayed_1_0_3672_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3024_delayed_1_0_3674)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3024_delayed_1_0) $volatile mul122 := (sub121 * conv116) $buffering 1
    //  file prog.linked.opt.aa, line 998
    // (sub121 * conv116)
    *[MUL_u32_u32_3679_inst] (sub121_3671 conv116_3261) (mul122_3680) $guard ( ifx_xend86_exec_guard_3024_delayed_1_0_3674 )   $flowthrough 
    $delay MUL_u32_u32_3679_inst 0
    // 			ifx_xend86_exec_guard_3030_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 999
    # := [W_ifx_xend86_exec_guard_3030_delayed_1_0_3681_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3030_delayed_1_0_3683)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3030_delayed_1_0) $volatile add114 := (mul122 + conv90176) $buffering 1
    //  file prog.linked.opt.aa, line 1000
    // (mul122 + conv90176)
    +[ADD_u32_u32_3688_inst] (mul122_3680 conv90176_3588) (add114_3689) $guard ( ifx_xend86_exec_guard_3030_delayed_1_0_3683 )   $flowthrough 
    $delay ADD_u32_u32_3688_inst 0
    // 			ifx_xend86_exec_guard_3036_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1001
    # := [W_ifx_xend86_exec_guard_3036_delayed_1_0_3690_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3036_delayed_1_0_3692)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3036_delayed_1_0) $volatile add123 := (add114 + mul113) $buffering 1
    //  file prog.linked.opt.aa, line 1002
    // (add114 + mul113)
    +[ADD_u32_u32_3697_inst] (add114_3689 mul113_3662) (add123_3698) $guard ( ifx_xend86_exec_guard_3036_delayed_1_0_3692 )   $flowthrough 
    $delay ADD_u32_u32_3697_inst 0
    // 			ifx_xend86_exec_guard_3042_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1003
    # := [W_ifx_xend86_exec_guard_3042_delayed_1_0_3699_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3042_delayed_1_0_3701)  $cut_through    $fullrate
    // 			type_cast_3047_3047_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1004
    // ($bitcast ($int<32>) conv112 )
    # := [type_cast_3704_inst] (conv112_3241) (type_cast_3047_3047_delayed_1_0_3705)     $fullrate
    $buffering  $out type_cast_3704_inst type_cast_3047_3047_delayed_1_0_3705 1
    $delay type_cast_3704_inst 1
    // 			$guard (ifx_xend86_exec_guard_3042_delayed_1_0) $volatile cmp129 := (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1005
    // ($bitcast ($int<32>) conv100 )
    # := [type_cast_3709_inst] (conv100_3609) (type_cast_3709_wire)  $guard ( ifx_xend86_exec_guard_3042_delayed_1_0_3701 )  $flowthrough
    $delay type_cast_3709_inst 0
    // (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0)
    $S<$S[SLT_i32_u1_3711_inst] (type_cast_3709_wire type_cast_3047_3047_delayed_1_0_3705) (cmp129_3712) $guard ( ifx_xend86_exec_guard_3042_delayed_1_0_3701 )   $flowthrough 
    $delay SLT_i32_u1_3711_inst 0
    // 			ifx_xend86_exec_guard_3050_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1006
    # := [W_ifx_xend86_exec_guard_3050_delayed_1_0_3713_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3050_delayed_1_0_3715)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3050_delayed_1_0) $volatile cmp129x_xnot := (cmp129 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1007
    // (cmp129 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3721_inst] (cmp129_3712 type_cast_3720_wire_constant) (cmp129x_xnot_3722) $guard ( ifx_xend86_exec_guard_3050_delayed_1_0_3715 )   $flowthrough 
    $delay XOR_u1_u1_3721_inst 0
    // 			ifx_xend86_exec_guard_3057_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1008
    # := [W_ifx_xend86_exec_guard_3057_delayed_1_0_3723_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3057_delayed_1_0_3725)  $cut_through    $fullrate
    // 			type_cast_3062_3062_delayed_1_0 := ($bitcast ($int<32>) add137 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1009
    // ($bitcast ($int<32>) add137 )
    # := [type_cast_3728_inst] (add137_3270) (type_cast_3062_3062_delayed_1_0_3729)     $fullrate
    $buffering  $out type_cast_3728_inst type_cast_3062_3062_delayed_1_0_3729 1
    $delay type_cast_3728_inst 1
    // 			$guard (ifx_xend86_exec_guard_3057_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1010
    // ($bitcast ($int<32>) conv100 )
    # := [type_cast_3733_inst] (conv100_3609) (type_cast_3733_wire)  $guard ( ifx_xend86_exec_guard_3057_delayed_1_0_3725 )  $flowthrough
    $delay type_cast_3733_inst 0
    // (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0)
    $S<$S[SLT_i32_u1_3735_inst] (type_cast_3733_wire type_cast_3062_3062_delayed_1_0_3729) (cmp138_3736) $guard ( ifx_xend86_exec_guard_3057_delayed_1_0_3725 )   $flowthrough 
    $delay SLT_i32_u1_3735_inst 0
    // 			ifx_xend86_exec_guard_3065_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1011
    # := [W_ifx_xend86_exec_guard_3065_delayed_1_0_3737_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3065_delayed_1_0_3739)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3065_delayed_1_0) $volatile orx_xcond := (cmp129x_xnot & cmp138) $buffering 1
    //  file prog.linked.opt.aa, line 1012
    // (cmp129x_xnot & cmp138)
    &[AND_u1_u1_3744_inst] (cmp129x_xnot_3722 cmp138_3736) (orx_xcond_3745) $guard ( ifx_xend86_exec_guard_3065_delayed_1_0_3739 )   $flowthrough 
    $delay AND_u1_u1_3744_inst 0
    // 			ifx_xend86_exec_guard_3071_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1013
    # := [W_ifx_xend86_exec_guard_3071_delayed_1_0_3746_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3071_delayed_1_0_3748)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3071_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1014
    // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3754_inst] (orx_xcond_3745 type_cast_3753_wire_constant) (orx_xcondx_xnot_3755) $guard ( ifx_xend86_exec_guard_3071_delayed_1_0_3748 )   $flowthrough 
    $delay XOR_u1_u1_3754_inst 0
    // 			ifx_xend86_exec_guard_3078_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1015
    # := [W_ifx_xend86_exec_guard_3078_delayed_1_0_3756_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3078_delayed_1_0_3758)  $cut_through    $fullrate
    // 			type_cast_3083_3083_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1016
    // ($bitcast ($int<32>) conv112 )
    # := [type_cast_3761_inst] (conv112_3241) (type_cast_3083_3083_delayed_1_0_3762)     $fullrate
    $buffering  $out type_cast_3761_inst type_cast_3083_3083_delayed_1_0_3762 1
    $delay type_cast_3761_inst 1
    // 			$guard (ifx_xend86_exec_guard_3078_delayed_1_0) $volatile cmp145 := (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1017
    // ($bitcast ($int<32>) conv94 )
    # := [type_cast_3766_inst] (conv94_3594) (type_cast_3766_wire)  $guard ( ifx_xend86_exec_guard_3078_delayed_1_0_3758 )  $flowthrough
    $delay type_cast_3766_inst 0
    // (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0)
    $S<$S[SLT_i32_u1_3768_inst] (type_cast_3766_wire type_cast_3083_3083_delayed_1_0_3762) (cmp145_3769) $guard ( ifx_xend86_exec_guard_3078_delayed_1_0_3758 )   $flowthrough 
    $delay SLT_i32_u1_3768_inst 0
    // 			ifx_xend86_exec_guard_3086_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1018
    # := [W_ifx_xend86_exec_guard_3086_delayed_1_0_3770_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3086_delayed_1_0_3772)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3086_delayed_1_0) $volatile orx_xcond181 := (orx_xcondx_xnot | cmp145) $buffering 1
    //  file prog.linked.opt.aa, line 1019
    // (orx_xcondx_xnot | cmp145)
    |[OR_u1_u1_3777_inst] (orx_xcondx_xnot_3755 cmp145_3769) (orx_xcond181_3778) $guard ( ifx_xend86_exec_guard_3086_delayed_1_0_3772 )   $flowthrough 
    $delay OR_u1_u1_3777_inst 0
    // 			ifx_xend86_exec_guard_3092_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1020
    # := [W_ifx_xend86_exec_guard_3092_delayed_1_0_3779_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3092_delayed_1_0_3781)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3092_delayed_1_0) $volatile orx_xcond181x_xnot := (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file prog.linked.opt.aa, line 1021
    // (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  ))
    ^[XOR_u1_u1_3787_inst] (orx_xcond181_3778 type_cast_3786_wire_constant) (orx_xcond181x_xnot_3788) $guard ( ifx_xend86_exec_guard_3092_delayed_1_0_3781 )   $flowthrough 
    $delay XOR_u1_u1_3787_inst 0
    // 			ifx_xend86_exec_guard_3099_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1022
    # := [W_ifx_xend86_exec_guard_3099_delayed_1_0_3789_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3099_delayed_1_0_3791)  $cut_through    $fullrate
    // 			type_cast_3104_3104_delayed_1_0 := ($bitcast ($int<32>) add154 ) $buffering 1 $cut_through // bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1023
    // ($bitcast ($int<32>) add154 )
    # := [type_cast_3794_inst] (add154_3275) (type_cast_3104_3104_delayed_1_0_3795)     $fullrate
    $buffering  $out type_cast_3794_inst type_cast_3104_3104_delayed_1_0_3795 1
    $delay type_cast_3794_inst 1
    // 			$guard (ifx_xend86_exec_guard_3099_delayed_1_0) $volatile cmp155 := (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0) $buffering 1
    //  file prog.linked.opt.aa, line 1024
    // ($bitcast ($int<32>) conv94 )
    # := [type_cast_3799_inst] (conv94_3594) (type_cast_3799_wire)  $guard ( ifx_xend86_exec_guard_3099_delayed_1_0_3791 )  $flowthrough
    $delay type_cast_3799_inst 0
    // (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0)
    $S<$S[SLT_i32_u1_3801_inst] (type_cast_3799_wire type_cast_3104_3104_delayed_1_0_3795) (cmp155_3802) $guard ( ifx_xend86_exec_guard_3099_delayed_1_0_3791 )   $flowthrough 
    $delay SLT_i32_u1_3801_inst 0
    // 			ifx_xend86_exec_guard_3107_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1025
    # := [W_ifx_xend86_exec_guard_3107_delayed_1_0_3803_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3107_delayed_1_0_3805)  $cut_through    $fullrate
    // 			$guard (ifx_xend86_exec_guard_3107_delayed_1_0) $volatile orx_xcond182 := (orx_xcond181x_xnot & cmp155) $buffering 1
    //  file prog.linked.opt.aa, line 1026
    // (orx_xcond181x_xnot & cmp155)
    &[AND_u1_u1_3810_inst] (orx_xcond181x_xnot_3788 cmp155_3802) (orx_xcond182_3811) $guard ( ifx_xend86_exec_guard_3107_delayed_1_0_3805 )   $flowthrough 
    $delay AND_u1_u1_3810_inst 0
    // 			ifx_xend86_exec_guard_3114_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1027
    # := [W_ifx_xend86_exec_guard_3114_delayed_1_0_3812_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3114_delayed_1_0_3814)  $cut_through    $fullrate
    // 			$volatile ifx_xend86_ifx_xelse160_taken := (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182) $buffering 1
    //  file prog.linked.opt.aa, line 1028
    // (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182)
    &[AND_u1_u1_3818_inst] (ifx_xend86_exec_guard_3114_delayed_1_0_3814 orx_xcond182_3811) (ifx_xend86_ifx_xelse160_taken_3819)   $flowthrough 
    $delay AND_u1_u1_3818_inst 0
    // 			ifx_xend86_exec_guard_3119_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1029
    # := [W_ifx_xend86_exec_guard_3119_delayed_1_0_3820_inst] (ifx_xend86_exec_guard_3481) (ifx_xend86_exec_guard_3119_delayed_1_0_3822)  $cut_through    $fullrate
    // 			$volatile ifx_xend86_ifx_xthen157_taken := (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 )) $buffering 1
    //  file prog.linked.opt.aa, line 1030
    // ( ~ orx_xcond182 )
    ~ [NOT_u1_u1_3826_inst] (orx_xcond182_3811) (NOT_u1_u1_3826_wire)   $flowthrough
    $delay NOT_u1_u1_3826_inst 0
    // (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 ))
    &[AND_u1_u1_3827_inst] (ifx_xend86_exec_guard_3119_delayed_1_0_3822 NOT_u1_u1_3826_wire) (ifx_xend86_ifx_xthen157_taken_3828)   $flowthrough 
    $delay AND_u1_u1_3827_inst 0
    // 			$volatile ifx_xthen157_exec_guard := ifx_xend86_ifx_xthen157_taken $buffering 1
    //  file prog.linked.opt.aa, line 1031
    # := [W_ifx_xthen157_exec_guard_3829_inst] (ifx_xend86_ifx_xthen157_taken_3828) (ifx_xthen157_exec_guard_3831)    $flowthrough 
    // 			ifx_xthen157_exec_guard_3127_delayed_1_0 := ifx_xthen157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1032
    # := [W_ifx_xthen157_exec_guard_3127_delayed_1_0_3832_inst] (ifx_xthen157_exec_guard_3831) (ifx_xthen157_exec_guard_3127_delayed_1_0_3834)  $cut_through    $fullrate
    // 			$guard (ifx_xthen157_exec_guard_3127_delayed_1_0) conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1033
    // ($cast ($int<32>) conv103 )
    $S:=$U [type_cast_3838_inst] (conv103_3644) (type_cast_3838_wire)  $guard ( ifx_xthen157_exec_guard_3127_delayed_1_0_3834 )  $flowthrough
    $delay type_cast_3838_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
    # := [type_cast_3839_inst] (type_cast_3838_wire) (conv159_3840)  $guard ( ifx_xthen157_exec_guard_3127_delayed_1_0_3834 )    $fullrate
    $buffering  $out type_cast_3839_inst conv159_3840 1
    $delay type_cast_3839_inst 1
    // 			ifx_xthen157_exec_guard_3133_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1034
    # := [W_ifx_xthen157_exec_guard_3133_delayed_2_0_3841_inst] (ifx_xthen157_exec_guard_3831) (ifx_xthen157_exec_guard_3133_delayed_2_0_3843)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen157_exec_guard_3133_delayed_2_0_3841_inst ifx_xthen157_exec_guard_3133_delayed_2_0_3843 2
    // 			$guard (ifx_xthen157_exec_guard_3133_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1035
    // ($bitcast ($int<32>) conv159 )
    # := [type_cast_3847_inst] (conv159_3840) (type_cast_3847_wire)  $guard ( ifx_xthen157_exec_guard_3133_delayed_2_0_3843 )  $flowthrough
    $delay type_cast_3847_inst 0
    // (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_3851_inst] (type_cast_3847_wire type_cast_3850_wire_constant) (ASHR_i32_i32_3851_wire) $guard ( ifx_xthen157_exec_guard_3133_delayed_2_0_3843 )   $flowthrough 
    $delay ASHR_i32_i32_3851_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_3852_inst] (ASHR_i32_i32_3851_wire) (shr_3853)  $guard ( ifx_xthen157_exec_guard_3133_delayed_2_0_3843 )  $flowthrough
    $delay type_cast_3852_inst 0
    // 			ifx_xthen157_exec_guard_3143_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1036
    # := [W_ifx_xthen157_exec_guard_3143_delayed_2_0_3854_inst] (ifx_xthen157_exec_guard_3831) (ifx_xthen157_exec_guard_3143_delayed_2_0_3856)  $cut_through    $fullrate
    $buffering  $out W_ifx_xthen157_exec_guard_3143_delayed_2_0_3854_inst ifx_xthen157_exec_guard_3143_delayed_2_0_3856 2
    // 			$guard (ifx_xthen157_exec_guard_3143_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1037
    // ($cast ($int<64>) shr )
    $S:=$U [type_cast_3860_inst] (shr_3853) (type_cast_3860_wire)  $guard ( ifx_xthen157_exec_guard_3143_delayed_2_0_3856 )  $flowthrough
    $delay type_cast_3860_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
    # := [type_cast_3861_inst] (type_cast_3860_wire) (idxprom_3862)  $guard ( ifx_xthen157_exec_guard_3143_delayed_2_0_3856 )    $fullrate
    $buffering  $out type_cast_3861_inst idxprom_3862 1
    $delay type_cast_3861_inst 1
    // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1038
    &/ [array_obj_ref_3867_index_1_resize] (idxprom_3862) (R_idxprom_3866_resized) 
    $flowthrough 
    &/ [array_obj_ref_3867_index_1_rename] (R_idxprom_3866_resized) (R_idxprom_3866_scaled) 
    $flowthrough 
    +[array_obj_ref_3867_index_offset] (R_idxprom_3866_scaled array_obj_ref_3867_constant_part_of_offset) (array_obj_ref_3867_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3867_index_offset R_idxprom_3866_scaled 2
    $buffering  $in array_obj_ref_3867_index_offset array_obj_ref_3867_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3867_index_offset array_obj_ref_3867_final_offset 2
    $delay array_obj_ref_3867_index_offset 2
    &/ [array_obj_ref_3867_root_address_inst] (array_obj_ref_3867_final_offset) (array_obj_ref_3867_root_address) 
    $flowthrough 
    # := [addr_of_3868_final_reg] (array_obj_ref_3867_root_address) (arrayidx_3869)     $fullrate
    $buffering  $out addr_of_3868_final_reg arrayidx_3869 1
    // 			$guard (ifx_xthen157_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1039
    // ->(arrayidx)
    &/ [ptr_deref_3872_base_resize] (arrayidx_3869) (ptr_deref_3872_resized_base_address) $guard ( ifx_xthen157_exec_guard_3831 ) 
    $flowthrough 
    &/ [ptr_deref_3872_root_address_inst] (ptr_deref_3872_resized_base_address) (ptr_deref_3872_root_address) $guard ( ifx_xthen157_exec_guard_3831 ) 
    $flowthrough 
    &/ [ptr_deref_3872_addr_0] (ptr_deref_3872_root_address) (ptr_deref_3872_word_address_0) $guard ( ifx_xthen157_exec_guard_3831 ) 
    $flowthrough 
    $store [ptr_deref_3872_store_0] $to memory_space_0 (ptr_deref_3872_word_address_0 ptr_deref_3872_data_0) $guard ( ifx_xthen157_exec_guard_3831 ) 
    $buffering  $in ptr_deref_3872_store_0 ptr_deref_3872_word_address_0 2
    $buffering  $in ptr_deref_3872_store_0 ptr_deref_3872_data_0 2
    $delay ptr_deref_3872_store_0 6
    &/ [ptr_deref_3872_gather_scatter] (type_cast_3874_wire_constant) (ptr_deref_3872_data_0) $guard ( ifx_xthen157_exec_guard_3831 ) 
    $flowthrough 
    // 			$volatile ifx_xelse160_exec_guard := ifx_xend86_ifx_xelse160_taken $buffering 1
    //  file prog.linked.opt.aa, line 1040
    # := [W_ifx_xelse160_exec_guard_3876_inst] (ifx_xend86_ifx_xelse160_taken_3819) (ifx_xelse160_exec_guard_3878)    $flowthrough 
    // 			$guard (ifx_xelse160_exec_guard) $volatile sext179 := (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 1041
    // (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
    <<[SHL_u32_u32_3884_inst] (add123_3698 type_cast_3883_wire_constant) (sext179_3885) $guard ( ifx_xelse160_exec_guard_3878 )   $flowthrough 
    $delay SHL_u32_u32_3884_inst 0
    // 			$guard (ifx_xelse160_exec_guard) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1042
    // ($bitcast ($int<32>) sext179 )
    # := [type_cast_3889_inst] (sext179_3885) (type_cast_3889_wire)  $guard ( ifx_xelse160_exec_guard_3878 )  $flowthrough
    $delay type_cast_3889_inst 0
    // (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
    $S>>[ASHR_i32_i32_3893_inst] (type_cast_3889_wire type_cast_3892_wire_constant) (ASHR_i32_i32_3893_wire) $guard ( ifx_xelse160_exec_guard_3878 )   $flowthrough 
    $delay ASHR_i32_i32_3893_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) )
    # := [type_cast_3894_inst] (ASHR_i32_i32_3893_wire) (shr163_3895)  $guard ( ifx_xelse160_exec_guard_3878 )  $flowthrough
    $delay type_cast_3894_inst 0
    // 			$guard (ifx_xelse160_exec_guard) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1043
    // ($cast ($int<64>) shr163 )
    $S:=$U [type_cast_3899_inst] (shr163_3895) (type_cast_3899_wire)  $guard ( ifx_xelse160_exec_guard_3878 )  $flowthrough
    $delay type_cast_3899_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
    # := [type_cast_3900_inst] (type_cast_3899_wire) (idxprom164_3901)  $guard ( ifx_xelse160_exec_guard_3878 )    $fullrate
    $buffering  $out type_cast_3900_inst idxprom164_3901 1
    $delay type_cast_3900_inst 1
    // 			arrayidx165 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1044
    &/ [array_obj_ref_3906_index_1_resize] (idxprom164_3901) (R_idxprom164_3905_resized) 
    $flowthrough 
    &/ [array_obj_ref_3906_index_1_rename] (R_idxprom164_3905_resized) (R_idxprom164_3905_scaled) 
    $flowthrough 
    +[array_obj_ref_3906_index_offset] (R_idxprom164_3905_scaled array_obj_ref_3906_constant_part_of_offset) (array_obj_ref_3906_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3906_index_offset R_idxprom164_3905_scaled 2
    $buffering  $in array_obj_ref_3906_index_offset array_obj_ref_3906_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3906_index_offset array_obj_ref_3906_final_offset 2
    $delay array_obj_ref_3906_index_offset 2
    &/ [array_obj_ref_3906_root_address_inst] (array_obj_ref_3906_final_offset) (array_obj_ref_3906_root_address) 
    $flowthrough 
    # := [addr_of_3907_final_reg] (array_obj_ref_3906_root_address) (arrayidx165_3908)     $fullrate
    $buffering  $out addr_of_3907_final_reg arrayidx165_3908 1
    // 			ifx_xelse160_exec_guard_3195_delayed_8_0 := ifx_xelse160_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 1045
    # := [W_ifx_xelse160_exec_guard_3195_delayed_8_0_3909_inst] (ifx_xelse160_exec_guard_3878) (ifx_xelse160_exec_guard_3195_delayed_8_0_3911)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse160_exec_guard_3195_delayed_8_0_3909_inst ifx_xelse160_exec_guard_3195_delayed_8_0_3911 8
    // 			$guard (ifx_xelse160_exec_guard_3195_delayed_8_0) tmp166 := ->(arrayidx165) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1046
    // ->(arrayidx165)
    &/ [ptr_deref_3915_base_resize] (arrayidx165_3908) (ptr_deref_3915_resized_base_address) $guard ( ifx_xelse160_exec_guard_3195_delayed_8_0_3911 ) 
    $flowthrough 
    &/ [ptr_deref_3915_root_address_inst] (ptr_deref_3915_resized_base_address) (ptr_deref_3915_root_address) $guard ( ifx_xelse160_exec_guard_3195_delayed_8_0_3911 ) 
    $flowthrough 
    &/ [ptr_deref_3915_addr_0] (ptr_deref_3915_root_address) (ptr_deref_3915_word_address_0) $guard ( ifx_xelse160_exec_guard_3195_delayed_8_0_3911 ) 
    $flowthrough 
    $load [ptr_deref_3915_load_0] $from memory_space_1 (ptr_deref_3915_word_address_0) (ptr_deref_3915_data_0) $guard ( ifx_xelse160_exec_guard_3195_delayed_8_0_3911 ) 
    $buffering  $in ptr_deref_3915_load_0 ptr_deref_3915_word_address_0 2
    $buffering  $out ptr_deref_3915_load_0 ptr_deref_3915_data_0 2
    $delay ptr_deref_3915_load_0 6
    &/ [ptr_deref_3915_gather_scatter] (ptr_deref_3915_data_0) (tmp166_3916) $guard ( ifx_xelse160_exec_guard_3195_delayed_8_0_3911 ) 
    $flowthrough 
    // 			ifx_xelse160_exec_guard_3200_delayed_1_0 := ifx_xelse160_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
    //  file prog.linked.opt.aa, line 1047
    # := [W_ifx_xelse160_exec_guard_3200_delayed_1_0_3917_inst] (ifx_xelse160_exec_guard_3878) (ifx_xelse160_exec_guard_3200_delayed_1_0_3919)  $cut_through    $fullrate
    // 			$guard (ifx_xelse160_exec_guard_3200_delayed_1_0) conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1048
    // ($cast ($int<32>) conv103 )
    $S:=$U [type_cast_3923_inst] (conv103_3644) (type_cast_3923_wire)  $guard ( ifx_xelse160_exec_guard_3200_delayed_1_0_3919 )  $flowthrough
    $delay type_cast_3923_inst 0
    // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
    # := [type_cast_3924_inst] (type_cast_3923_wire) (conv168_3925)  $guard ( ifx_xelse160_exec_guard_3200_delayed_1_0_3919 )    $fullrate
    $buffering  $out type_cast_3924_inst conv168_3925 1
    $delay type_cast_3924_inst 1
    // 			ifx_xelse160_exec_guard_3206_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1049
    # := [W_ifx_xelse160_exec_guard_3206_delayed_2_0_3926_inst] (ifx_xelse160_exec_guard_3878) (ifx_xelse160_exec_guard_3206_delayed_2_0_3928)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse160_exec_guard_3206_delayed_2_0_3926_inst ifx_xelse160_exec_guard_3206_delayed_2_0_3928 2
    // 			$guard (ifx_xelse160_exec_guard_3206_delayed_2_0) $volatile shr169 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 1050
    // ($bitcast ($int<32>) conv168 )
    # := [type_cast_3932_inst] (conv168_3925) (type_cast_3932_wire)  $guard ( ifx_xelse160_exec_guard_3206_delayed_2_0_3928 )  $flowthrough
    $delay type_cast_3932_inst 0
    // (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_3936_inst] (type_cast_3932_wire type_cast_3935_wire_constant) (ASHR_i32_i32_3936_wire) $guard ( ifx_xelse160_exec_guard_3206_delayed_2_0_3928 )   $flowthrough 
    $delay ASHR_i32_i32_3936_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_3937_inst] (ASHR_i32_i32_3936_wire) (shr169_3938)  $guard ( ifx_xelse160_exec_guard_3206_delayed_2_0_3928 )  $flowthrough
    $delay type_cast_3937_inst 0
    // 			ifx_xelse160_exec_guard_3216_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
    //  file prog.linked.opt.aa, line 1051
    # := [W_ifx_xelse160_exec_guard_3216_delayed_2_0_3939_inst] (ifx_xelse160_exec_guard_3878) (ifx_xelse160_exec_guard_3216_delayed_2_0_3941)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse160_exec_guard_3216_delayed_2_0_3939_inst ifx_xelse160_exec_guard_3216_delayed_2_0_3941 2
    // 			$guard (ifx_xelse160_exec_guard_3216_delayed_2_0) idxprom170 := ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1052
    // ($cast ($int<64>) shr169 )
    $S:=$U [type_cast_3945_inst] (shr169_3938) (type_cast_3945_wire)  $guard ( ifx_xelse160_exec_guard_3216_delayed_2_0_3941 )  $flowthrough
    $delay type_cast_3945_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) )
    # := [type_cast_3946_inst] (type_cast_3945_wire) (idxprom170_3947)  $guard ( ifx_xelse160_exec_guard_3216_delayed_2_0_3941 )    $fullrate
    $buffering  $out type_cast_3946_inst idxprom170_3947 1
    $delay type_cast_3946_inst 1
    // 			arrayidx171 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 1053
    &/ [array_obj_ref_3952_index_1_resize] (idxprom170_3947) (R_idxprom170_3951_resized) 
    $flowthrough 
    &/ [array_obj_ref_3952_index_1_rename] (R_idxprom170_3951_resized) (R_idxprom170_3951_scaled) 
    $flowthrough 
    +[array_obj_ref_3952_index_offset] (R_idxprom170_3951_scaled array_obj_ref_3952_constant_part_of_offset) (array_obj_ref_3952_final_offset)    $fullrate
    $buffering  $in array_obj_ref_3952_index_offset R_idxprom170_3951_scaled 2
    $buffering  $in array_obj_ref_3952_index_offset array_obj_ref_3952_constant_part_of_offset 2
    $buffering  $out array_obj_ref_3952_index_offset array_obj_ref_3952_final_offset 2
    $delay array_obj_ref_3952_index_offset 2
    &/ [array_obj_ref_3952_root_address_inst] (array_obj_ref_3952_final_offset) (array_obj_ref_3952_root_address) 
    $flowthrough 
    # := [addr_of_3953_final_reg] (array_obj_ref_3952_root_address) (arrayidx171_3954)     $fullrate
    $buffering  $out addr_of_3953_final_reg arrayidx171_3954 1
    // 			ifx_xelse160_exec_guard_3229_delayed_14_0 := ifx_xelse160_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
    //  file prog.linked.opt.aa, line 1054
    # := [W_ifx_xelse160_exec_guard_3229_delayed_14_0_3955_inst] (ifx_xelse160_exec_guard_3878) (ifx_xelse160_exec_guard_3229_delayed_14_0_3957)  $cut_through    $fullrate
    $buffering  $out W_ifx_xelse160_exec_guard_3229_delayed_14_0_3955_inst ifx_xelse160_exec_guard_3229_delayed_14_0_3957 14
    // 			arrayidx171_3230_delayed_4_0 := arrayidx171 $buffering 4 $cut_through // bits of buffering = 128. 
    //  file prog.linked.opt.aa, line 1055
    # := [W_arrayidx171_3230_delayed_4_0_3958_inst] (arrayidx171_3954) (arrayidx171_3230_delayed_4_0_3960)  $cut_through    $fullrate
    $buffering  $out W_arrayidx171_3230_delayed_4_0_3958_inst arrayidx171_3230_delayed_4_0_3960 4
    // 			$guard (ifx_xelse160_exec_guard_3229_delayed_14_0) ->(arrayidx171_3230_delayed_4_0) := tmp166 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 1056
    // ->(arrayidx171_3230_delayed_4_0)
    &/ [ptr_deref_3963_base_resize] (arrayidx171_3230_delayed_4_0_3960) (ptr_deref_3963_resized_base_address) $guard ( ifx_xelse160_exec_guard_3229_delayed_14_0_3957 ) 
    $flowthrough 
    &/ [ptr_deref_3963_root_address_inst] (ptr_deref_3963_resized_base_address) (ptr_deref_3963_root_address) $guard ( ifx_xelse160_exec_guard_3229_delayed_14_0_3957 ) 
    $flowthrough 
    &/ [ptr_deref_3963_addr_0] (ptr_deref_3963_root_address) (ptr_deref_3963_word_address_0) $guard ( ifx_xelse160_exec_guard_3229_delayed_14_0_3957 ) 
    $flowthrough 
    $store [ptr_deref_3963_store_0] $to memory_space_0 (ptr_deref_3963_word_address_0 ptr_deref_3963_data_0) $guard ( ifx_xelse160_exec_guard_3229_delayed_14_0_3957 ) 
    $buffering  $in ptr_deref_3963_store_0 ptr_deref_3963_word_address_0 2
    $buffering  $in ptr_deref_3963_store_0 ptr_deref_3963_data_0 2
    $delay ptr_deref_3963_store_0 6
    &/ [ptr_deref_3963_gather_scatter] (tmp166_3916) (ptr_deref_3963_data_0) $guard ( ifx_xelse160_exec_guard_3229_delayed_14_0_3957 ) 
    $flowthrough 
    // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 1057
    // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_3970_inst] (flagx_x0_3583 type_cast_3969_wire_constant) (tobool_3971)   $flowthrough 
    $delay EQ_u16_u1_3970_inst 0
    // 			$volatile ifx_xend172_whilex_xend_taken := ( ~ tobool ) $buffering 1
    //  file prog.linked.opt.aa, line 1058
    // ( ~ tobool )
    ~ [NOT_u1_u1_3974_inst] (tobool_3971) (ifx_xend172_whilex_xend_taken_3975)   $flowthrough
    $delay NOT_u1_u1_3974_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 118164344
    ==0? [if_stmt_3978_branch] (ifx_xend172_whilex_xend_taken_3975)
    // 		Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 1066
    // Block3_complete
    $ioport $out [WPIPE_Block3_complete_3984_inst]  (type_cast_3986_wire_constant) (Block3_complete) 
  }
  // end data-path
  // 		call := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 879
  // Block3_starting
  RPIPE_Block3_starting_3161_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3161_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3161_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3161_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3161_Update/ca)
  // 		call1 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 880
  // Block3_starting
  RPIPE_Block3_starting_3164_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3164_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3164_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3164_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3164_Update/ca)
  // 		call2 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 881
  // Block3_starting
  RPIPE_Block3_starting_3167_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3167_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3167_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3167_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3167_Update/ca)
  // 		call3 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 882
  // Block3_starting
  RPIPE_Block3_starting_3170_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3170_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3170_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3170_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3170_Update/ca)
  // 		call4 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 883
  // Block3_starting
  RPIPE_Block3_starting_3173_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3173_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3173_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3173_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3173_Update/ca)
  // 		call5 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 884
  // Block3_starting
  RPIPE_Block3_starting_3176_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3176_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3176_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3176_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3176_Update/ca)
  // 		call6 := Block3_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 885
  // Block3_starting
  RPIPE_Block3_starting_3179_inst <=> (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3179_Sample/rr branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3179_Update/cr) (branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3179_Sample/ra branch_block_stmt_3159/assign_stmt_3162_to_assign_stmt_3180/RPIPE_Block3_starting_3179_Update/ca)
  // 		conv := ($cast ($uint<16>) call1 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 887
  // call1
  // ($cast ($uint<16>) call1 )
  type_cast_3184_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3184_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3184_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3184_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3184_Update/ca)
  // 		$volatile div := (conv >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 888
  // (conv >> ($bitcast ($uint<16>) _b0000000000000001  ))
  // conv
  // 		conv10 := ($cast ($uint<16>) call ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 889
  // call
  // ($cast ($uint<16>) call )
  type_cast_3194_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3194_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3194_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3194_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3194_Update/ca)
  // 		$volatile div11 := (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 890
  // (conv10 >> ($bitcast ($uint<16>) _b0000000000000001  ))
  // conv10
  // 		conv36 := ($cast ($uint<32>) call2 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 891
  // call2
  // ($cast ($uint<32>) call2 )
  type_cast_3204_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3204_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3204_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3204_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3204_Update/ca)
  // 		conv38 := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 892
  // call1
  // ($cast ($uint<32>) call1 )
  type_cast_3208_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3208_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3208_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3208_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3208_Update/ca)
  // 		conv42 := ($cast ($uint<32>) call5 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 893
  // call5
  // ($cast ($uint<32>) call5 )
  type_cast_3212_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3212_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3212_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3212_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3212_Update/ca)
  // 		conv44 := ($cast ($uint<32>) call4 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 894
  // call4
  // ($cast ($uint<32>) call4 )
  type_cast_3216_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3216_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3216_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3216_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3216_Update/ca)
  // 		$volatile mul45 := (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 895
  // (conv44 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv44
  // 		$volatile sext := (mul45 * conv42) $buffering 1
  //  file prog.linked.opt.aa, line 896
  // (mul45 * conv42)
  // mul45
  // conv42
  // 		$volatile conv98 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 897
  // (($bitcast ($int<32>) sext ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext
  // 		conv112 := ($cast ($uint<32>) call6 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 898
  // call6
  // ($cast ($uint<32>) call6 )
  type_cast_3240_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3240_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3240_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3240_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3240_Update/ca)
  // 		$volatile mul := (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 899
  // (conv38 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // conv38
  // 		$volatile sext177 := (mul * conv36) $buffering 1
  //  file prog.linked.opt.aa, line 900
  // (mul * conv36)
  // mul
  // conv36
  // 		$volatile conv116 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 901
  // (($bitcast ($int<32>) sext177 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010000  ) ))
  // sext177
  // 		conv134 := ($cast ($uint<32>) call ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 902
  // call
  // ($cast ($uint<32>) call )
  type_cast_3264_inst <=> (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3264_Sample/rr branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3264_Update/cr) (branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3264_Sample/ra branch_block_stmt_3159/assign_stmt_3185_to_assign_stmt_3291/type_cast_3264_Update/ca)
  // 		$volatile add137 := (conv112 + conv134) $buffering 1
  //  file prog.linked.opt.aa, line 903
  // (conv112 + conv134)
  // conv112
  // conv134
  // 		$volatile add154 := (conv112 + conv38) $buffering 1
  //  file prog.linked.opt.aa, line 904
  // (conv112 + conv38)
  // conv112
  // conv38
  // 		$volatile shl := (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 905
  // (conv112 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv112
  // 		$volatile add67 := (shl + conv38) $buffering 1
  //  file prog.linked.opt.aa, line 906
  // (shl + conv38)
  // shl
  // conv38
  // 		$volatile add81 := (shl + conv134) $buffering 1
  //  file prog.linked.opt.aa, line 907
  // (shl + conv134)
  // shl
  // conv134
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 909
  // In merge, skipped links for constant phi phi_stmt_3294
  // ($cast ($uint<16>) div11 )
  type_cast_3302_inst <=> (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3299/phi_stmt_3299_sources/type_cast_3302/SplitProtocol/Sample/rr branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3299/phi_stmt_3299_sources/type_cast_3302/SplitProtocol/Update/cr) (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3299/phi_stmt_3299_sources/type_cast_3302/SplitProtocol/Sample/ra branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3299/phi_stmt_3299_sources/type_cast_3302/SplitProtocol/Update/ca)
  phi_stmt_3299 <=> (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3299/phi_stmt_3299_req) (branch_block_stmt_3159/merge_stmt_3293_PhiAck/phi_stmt_3299_ack)
  // ($cast ($uint<16>) div )
  type_cast_3306_inst <=> (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3303/phi_stmt_3303_sources/type_cast_3306/SplitProtocol/Sample/rr branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3303/phi_stmt_3303_sources/type_cast_3306/SplitProtocol/Update/cr) (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3303/phi_stmt_3303_sources/type_cast_3306/SplitProtocol/Sample/ra branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3303/phi_stmt_3303_sources/type_cast_3306/SplitProtocol/Update/ca)
  phi_stmt_3303 <=> (branch_block_stmt_3159/entry_whilex_xbody_PhiReq/phi_stmt_3303/phi_stmt_3303_req) (branch_block_stmt_3159/merge_stmt_3293_PhiAck/phi_stmt_3303_ack)
  // CP-DP links for do-while  do_while_stmt_3308
  //  file prog.linked.opt.aa, line 917
  phi_stmt_3310 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3310_loopback_sample_req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3310_entry_sample_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3310_phi_mux_ack)
  // kx_x0
  // ($cast ($uint<16>) kx_x0 )
  type_cast_3313_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3313_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3313_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3313_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3313_Update/ca)
  phi_stmt_3315 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3315_loopback_sample_req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3315_entry_sample_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3315_phi_mux_ack)
  // ix_x1
  // ($cast ($uint<16>) ix_x1 )
  type_cast_3318_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3318_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3318_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3318_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3318_Update/ca)
  ix_x2_at_entry_3299_3319_buf <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_ix_x2_at_entry_3319_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_ix_x2_at_entry_3319_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_ix_x2_at_entry_3319_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_ix_x2_at_entry_3319_Update/ack)
  phi_stmt_3320 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3320_loopback_sample_req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3320_entry_sample_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/phi_stmt_3320_phi_mux_ack)
  // jx_x0
  // ($cast ($uint<16>) jx_x0 )
  type_cast_3323_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3323_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3323_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3323_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3323_Update/ca)
  jx_x1_at_entry_3303_3324_buf <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_jx_x1_at_entry_3324_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_jx_x1_at_entry_3324_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_jx_x1_at_entry_3324_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/R_jx_x1_at_entry_3324_Update/ack)
  // 			conv52 := ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 927
  // kx_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) kx_x1 ) )
  type_cast_3329_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3329_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3329_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3329_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3329_Update/ca)
  // 			$volatile add := (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 928
  // (conv52 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
  // conv52
  // 			type_cast_2792_2792_delayed_2_0 := ($bitcast ($int<32>) conv36 ) $buffering 2 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 929
  // conv36
  // ($bitcast ($int<32>) conv36 )
  type_cast_3339_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3339_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3339_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3339_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3339_Update/ca)
  // 			$volatile cmp := (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0) $buffering 1
  //  file prog.linked.opt.aa, line 930
  // (($bitcast ($int<32>) add ) < type_cast_2792_2792_delayed_2_0)
  // add
  // type_cast_2792_2792_delayed_2_0
  // 			$volatile whilex_xbody_ifx_xthen_taken := cmp $buffering 1
  //  file prog.linked.opt.aa, line 931
  // cmp
  // 			$volatile whilex_xbody_ifx_xelse_taken := ( ~ cmp ) $buffering 1
  //  file prog.linked.opt.aa, line 932
  // cmp
  // 			$volatile ifx_xelse_exec_guard := whilex_xbody_ifx_xelse_taken $buffering 1
  //  file prog.linked.opt.aa, line 933
  // whilex_xbody_ifx_xelse_taken
  // 			jx_x1_2807_delayed_1_0 := jx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 934
  // jx_x1
  W_jx_x1_2807_delayed_1_0_3357_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3359_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3359_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3359_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3359_Update/ack)
  // 			$guard (ifx_xelse_exec_guard) $volatile inc := (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 935
  // (jx_x1_2807_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // jx_x1_2807_delayed_1_0
  // 			$guard (ifx_xelse_exec_guard) conv62 := ($bitcast ($uint<32>) ($cast ($int<32>) inc ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 936
  // inc
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc ) )
  type_cast_3371_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3371_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3371_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3371_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3371_Update/ca)
  // 			ifx_xelse_exec_guard_2818_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 937
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2818_delayed_1_0_3373_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3375_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3375_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3375_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3375_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2818_delayed_1_0) $volatile cmp68 := (conv62 == add67) $buffering 1
  //  file prog.linked.opt.aa, line 938
  // (conv62 == add67)
  // conv62
  // add67
  // 			ifx_xelse_exec_guard_2824_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 939
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2824_delayed_1_0_3382_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3384_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3384_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3384_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3384_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2824_delayed_1_0) inc73 := ($cast ($uint<16>) cmp68 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 940
  // cmp68
  // ($cast ($uint<16>) cmp68 )
  type_cast_3388_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3388_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3388_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3388_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3388_Update/ca)
  // 			ifx_xelse_exec_guard_2829_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 941
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2829_delayed_2_0_3390_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3392_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3392_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3392_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3392_Update/ack)
  // 			ix_x2_2832_delayed_3_0 := ix_x2 $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 942
  // ix_x2
  W_ix_x2_2832_delayed_3_0_3393_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3395_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3395_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3395_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3395_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2829_delayed_2_0) $volatile inc73x_xix_x2 := (inc73 + ix_x2_2832_delayed_3_0) $buffering 1
  //  file prog.linked.opt.aa, line 943
  // (inc73 + ix_x2_2832_delayed_3_0)
  // inc73
  // ix_x2_2832_delayed_3_0
  // 			ifx_xelse_exec_guard_2835_delayed_1_0 := ifx_xelse_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 944
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2835_delayed_1_0_3402_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3404_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3404_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3404_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3404_Update/ack)
  // 			inc_2839_delayed_1_0 := inc $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 945
  // inc
  W_inc_2839_delayed_1_0_3405_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3407_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3407_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3407_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3407_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2835_delayed_1_0) $volatile jx_x2 := ( $mux cmp68 div  inc_2839_delayed_1_0 )  $buffering 1
  //  file prog.linked.opt.aa, line 946
  // cmp68
  // div
  // inc_2839_delayed_1_0
  // ( $mux cmp68 div  inc_2839_delayed_1_0 ) 
  // 			ifx_xelse_exec_guard_2842_delayed_2_0 := ifx_xelse_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 947
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2842_delayed_2_0_3415_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3417_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3417_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3417_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3417_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2842_delayed_2_0) conv75 := ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) ) $buffering 2// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 948
  // inc73x_xix_x2
  // ($bitcast ($uint<32>) ($cast ($int<32>) inc73x_xix_x2 ) )
  type_cast_3422_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3422_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3422_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3422_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3422_Update/ca)
  // 			ifx_xelse_exec_guard_2848_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 949
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2848_delayed_3_0_3424_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3426_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3426_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3426_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3426_Update/ack)
  // 			$guard (ifx_xelse_exec_guard_2848_delayed_3_0) $volatile cmp82 := (conv75 == add81) $buffering 1
  //  file prog.linked.opt.aa, line 950
  // (conv75 == add81)
  // conv75
  // add81
  // 			ifx_xelse_exec_guard_2855_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 951
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2855_delayed_3_0_3433_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3435_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3435_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3435_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3435_Update/ack)
  // 			$volatile ifx_xelse_ifx_xthen84_taken := (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82) $buffering 1
  //  file prog.linked.opt.aa, line 952
  // (ifx_xelse_exec_guard_2855_delayed_3_0 & cmp82)
  // ifx_xelse_exec_guard_2855_delayed_3_0
  // cmp82
  // 			ifx_xelse_exec_guard_2860_delayed_3_0 := ifx_xelse_exec_guard $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 953
  // ifx_xelse_exec_guard
  W_ifx_xelse_exec_guard_2860_delayed_3_0_3441_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3443_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3443_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3443_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3443_Update/ack)
  // 			$volatile ifx_xelse_ifx_xend86_taken := (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 )) $buffering 1
  //  file prog.linked.opt.aa, line 954
  // (ifx_xelse_exec_guard_2860_delayed_3_0 & ( ~ cmp82 ))
  // ifx_xelse_exec_guard_2860_delayed_3_0
  // cmp82
  // 			$volatile ifx_xthen84_exec_guard := ifx_xelse_ifx_xthen84_taken $buffering 1
  //  file prog.linked.opt.aa, line 955
  // ifx_xelse_ifx_xthen84_taken
  // 			$volatile ifx_xthen84_ifx_xend86_taken := ifx_xthen84_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 956
  // ifx_xthen84_exec_guard
  // 			$volatile ifx_xthen_exec_guard := whilex_xbody_ifx_xthen_taken $buffering 1
  //  file prog.linked.opt.aa, line 957
  // whilex_xbody_ifx_xthen_taken
  // 			kx_x1_2876_delayed_1_0 := kx_x1 $buffering 1 $cut_through // bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 958
  // kx_x1
  W_kx_x1_2876_delayed_1_0_3459_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3461_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3461_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3461_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3461_Update/ack)
  // 			$guard (ifx_xthen_exec_guard) $volatile add58 := (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 959
  // (kx_x1_2876_delayed_1_0 + ($bitcast ($uint<16>) _b0000000000000100  ))
  // kx_x1_2876_delayed_1_0
  // 			$volatile ifx_xthen_ifx_xend86_taken := ifx_xthen_exec_guard $buffering 1
  //  file prog.linked.opt.aa, line 960
  // ifx_xthen_exec_guard
  // 			ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 961
  // ifx_xthen_ifx_xend86_taken
  W_ifx_xthen_ifx_xend86_taken_2886_delayed_3_0_3472_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3474_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3474_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3474_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3474_Update/ack)
  // 			$volatile ifx_xend86_exec_guard := (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)) $buffering 1
  //  file prog.linked.opt.aa, line 962
  // (ifx_xelse_ifx_xend86_taken | (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken))
  // ifx_xelse_ifx_xend86_taken
  // (ifx_xthen_ifx_xend86_taken_2886_delayed_3_0 | ifx_xthen84_ifx_xend86_taken)
  // ifx_xthen_ifx_xend86_taken_2886_delayed_3_0
  // ifx_xthen84_ifx_xend86_taken
  // 			ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 963
  // ifx_xthen_ifx_xend86_taken
  W_ifx_xthen_ifx_xend86_taken_2892_delayed_3_0_3482_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3484_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3484_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3484_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3484_Update/ack)
  // 			type_cast_2894_2894_delayed_3_0 := ($bitcast ($uint<16>) add58 ) $buffering 3 $cut_through // bits of buffering = 48. 
  //  file prog.linked.opt.aa, line 964
  // add58
  // ($bitcast ($uint<16>) add58 )
  type_cast_3487_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3487_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3487_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3487_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3487_Update/ca)
  // 			$volatile kx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 965
  // ifx_xthen_ifx_xend86_taken_2892_delayed_3_0
  // type_cast_2894_2894_delayed_3_0
  // ifx_xthen84_ifx_xend86_taken
  // ifx_xelse_ifx_xend86_taken
  // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend86_taken_2892_delayed_3_0 type_cast_2894_2894_delayed_3_0  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 966
  // ifx_xthen_ifx_xend86_taken
  W_ifx_xthen_ifx_xend86_taken_2910_delayed_3_0_3506_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3508_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3508_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3508_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3508_Update/ack)
  // 			type_cast_2912_2912_delayed_4_0 := ($bitcast ($uint<16>) ix_x2 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 967
  // ix_x2
  // ($bitcast ($uint<16>) ix_x2 )
  type_cast_3511_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3511_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3511_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3511_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3511_Update/ca)
  // 			type_cast_2915_2915_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 968
  // inc73x_xix_x2
  // ($bitcast ($uint<16>) inc73x_xix_x2 )
  type_cast_3515_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3515_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3515_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3515_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3515_Update/ca)
  // 			type_cast_2918_2918_delayed_1_0 := ($bitcast ($uint<16>) inc73x_xix_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 969
  // inc73x_xix_x2
  // ($bitcast ($uint<16>) inc73x_xix_x2 )
  type_cast_3519_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3519_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3519_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3519_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3519_Update/ca)
  // 			$volatile ix_x1 := ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 970
  // ifx_xthen_ifx_xend86_taken_2910_delayed_3_0
  // type_cast_2912_2912_delayed_4_0
  // ifx_xthen84_ifx_xend86_taken
  // type_cast_2915_2915_delayed_1_0
  // ifx_xelse_ifx_xend86_taken
  // type_cast_2918_2918_delayed_1_0
  // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend86_taken_2910_delayed_3_0 type_cast_2912_2912_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2915_2915_delayed_1_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2918_2918_delayed_1_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 971
  // ifx_xthen_ifx_xend86_taken
  W_ifx_xthen_ifx_xend86_taken_2926_delayed_3_0_3534_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3536_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3536_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3536_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3536_Update/ack)
  // 			type_cast_2928_2928_delayed_4_0 := ($bitcast ($uint<16>) jx_x1 ) $buffering 4 $cut_through // bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 972
  // jx_x1
  // ($bitcast ($uint<16>) jx_x1 )
  type_cast_3539_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3539_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3539_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3539_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3539_Update/ca)
  // 			type_cast_2931_2931_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 973
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_3543_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3543_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3543_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3543_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3543_Update/ca)
  // 			type_cast_2934_2934_delayed_2_0 := ($bitcast ($uint<16>) jx_x2 ) $buffering 2 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 974
  // jx_x2
  // ($bitcast ($uint<16>) jx_x2 )
  type_cast_3547_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3547_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3547_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3547_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3547_Update/ca)
  // 			$volatile jx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 975
  // ifx_xthen_ifx_xend86_taken_2926_delayed_3_0
  // type_cast_2928_2928_delayed_4_0
  // ifx_xthen84_ifx_xend86_taken
  // type_cast_2931_2931_delayed_2_0
  // ifx_xelse_ifx_xend86_taken
  // type_cast_2934_2934_delayed_2_0
  // ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend86_taken_2926_delayed_3_0 type_cast_2928_2928_delayed_4_0  ( $mux ifx_xthen84_ifx_xend86_taken type_cast_2931_2931_delayed_2_0  ( $mux ifx_xelse_ifx_xend86_taken type_cast_2934_2934_delayed_2_0  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 := ifx_xthen_ifx_xend86_taken $buffering 3 $cut_through // bits of buffering = 3. 
  //  file prog.linked.opt.aa, line 976
  // ifx_xthen_ifx_xend86_taken
  W_ifx_xthen_ifx_xend86_taken_2942_delayed_3_0_3562_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3564_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3564_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3564_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3564_Update/ack)
  // 			$volatile flagx_x0 := ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  )  $buffering 1
  //  file prog.linked.opt.aa, line 977
  // ifx_xthen_ifx_xend86_taken_2942_delayed_3_0
  // ifx_xthen84_ifx_xend86_taken
  // ifx_xelse_ifx_xend86_taken
  // ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) ) 
  // ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  ) 
  // ( $mux ifx_xthen_ifx_xend86_taken_2942_delayed_3_0 ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ( $mux ifx_xthen84_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )  ( $mux ifx_xelse_ifx_xend86_taken ($bitcast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )  ($bitcast ($uint<16>) 0  ) )  )  ) 
  // 			$guard (ifx_xend86_exec_guard) conv90176 := ($cast ($uint<32>) kx_x0 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 978
  // kx_x0
  // ($cast ($uint<32>) kx_x0 )
  type_cast_3587_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3587_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3587_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3587_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3587_Update/ca)
  // 			$guard (ifx_xend86_exec_guard) conv94 := ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 979
  // jx_x0
  // ($bitcast ($uint<32>) ($cast ($int<32>) jx_x0 ) )
  type_cast_3593_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3593_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3593_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3593_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3593_Update/ca)
  // 			ifx_xend86_exec_guard_2971_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 980
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_2971_delayed_1_0_3595_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3597_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3597_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3597_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3597_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_2971_delayed_1_0) $volatile mul95 := (conv94 * conv42) $buffering 1
  //  file prog.linked.opt.aa, line 981
  // (conv94 * conv42)
  // conv94
  // conv42
  // 			$guard (ifx_xend86_exec_guard) conv100 := ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 982
  // ix_x1
  // ($bitcast ($uint<32>) ($cast ($int<32>) ix_x1 ) )
  type_cast_3608_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3608_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3608_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3608_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3608_Update/ca)
  // 			ifx_xend86_exec_guard_2983_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 983
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_2983_delayed_1_0_3610_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3612_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3612_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3612_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3612_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_2983_delayed_1_0) $volatile mul101 := (conv100 * conv98) $buffering 1
  //  file prog.linked.opt.aa, line 984
  // (conv100 * conv98)
  // conv100
  // conv98
  // 			ifx_xend86_exec_guard_2989_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 985
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_2989_delayed_1_0_3619_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3621_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3621_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3621_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3621_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_2989_delayed_1_0) $volatile add96 := (mul101 + conv90176) $buffering 1
  //  file prog.linked.opt.aa, line 986
  // (mul101 + conv90176)
  // mul101
  // conv90176
  // 			ifx_xend86_exec_guard_2995_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 987
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_2995_delayed_1_0_3628_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3630_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3630_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3630_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3630_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_2995_delayed_1_0) $volatile add102 := (add96 + mul95) $buffering 1
  //  file prog.linked.opt.aa, line 988
  // (add96 + mul95)
  // add96
  // mul95
  // 			ifx_xend86_exec_guard_3001_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 989
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3001_delayed_1_0_3637_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3639_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3639_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3639_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3639_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3001_delayed_1_0) conv103 := ($cast ($uint<16>) add102 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 990
  // add102
  // ($cast ($uint<16>) add102 )
  type_cast_3643_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3643_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3643_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3643_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3643_Update/ca)
  // 			ifx_xend86_exec_guard_3006_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 991
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3006_delayed_1_0_3645_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3647_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3647_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3647_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3647_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3006_delayed_1_0) $volatile sub := (conv94 - conv112) $buffering 1
  //  file prog.linked.opt.aa, line 992
  // (conv94 - conv112)
  // conv94
  // conv112
  // 			ifx_xend86_exec_guard_3012_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 993
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3012_delayed_1_0_3654_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3656_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3656_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3656_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3656_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3012_delayed_1_0) $volatile mul113 := (sub * conv36) $buffering 1
  //  file prog.linked.opt.aa, line 994
  // (sub * conv36)
  // sub
  // conv36
  // 			ifx_xend86_exec_guard_3018_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 995
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3018_delayed_1_0_3663_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3665_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3665_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3665_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3665_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3018_delayed_1_0) $volatile sub121 := (conv100 - conv112) $buffering 1
  //  file prog.linked.opt.aa, line 996
  // (conv100 - conv112)
  // conv100
  // conv112
  // 			ifx_xend86_exec_guard_3024_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 997
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3024_delayed_1_0_3672_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3674_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3674_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3674_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3674_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3024_delayed_1_0) $volatile mul122 := (sub121 * conv116) $buffering 1
  //  file prog.linked.opt.aa, line 998
  // (sub121 * conv116)
  // sub121
  // conv116
  // 			ifx_xend86_exec_guard_3030_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 999
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3030_delayed_1_0_3681_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3683_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3683_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3683_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3683_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3030_delayed_1_0) $volatile add114 := (mul122 + conv90176) $buffering 1
  //  file prog.linked.opt.aa, line 1000
  // (mul122 + conv90176)
  // mul122
  // conv90176
  // 			ifx_xend86_exec_guard_3036_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1001
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3036_delayed_1_0_3690_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3692_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3692_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3692_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3692_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3036_delayed_1_0) $volatile add123 := (add114 + mul113) $buffering 1
  //  file prog.linked.opt.aa, line 1002
  // (add114 + mul113)
  // add114
  // mul113
  // 			ifx_xend86_exec_guard_3042_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1003
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3042_delayed_1_0_3699_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3701_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3701_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3701_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3701_Update/ack)
  // 			type_cast_3047_3047_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1004
  // conv112
  // ($bitcast ($int<32>) conv112 )
  type_cast_3704_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3704_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3704_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3704_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3704_Update/ca)
  // 			$guard (ifx_xend86_exec_guard_3042_delayed_1_0) $volatile cmp129 := (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 1005
  // (($bitcast ($int<32>) conv100 ) < type_cast_3047_3047_delayed_1_0)
  // conv100
  // type_cast_3047_3047_delayed_1_0
  // 			ifx_xend86_exec_guard_3050_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1006
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3050_delayed_1_0_3713_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3715_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3715_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3715_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3715_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3050_delayed_1_0) $volatile cmp129x_xnot := (cmp129 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 1007
  // (cmp129 ^ ($bitcast ($uint<1>) _b1  ))
  // cmp129
  // 			ifx_xend86_exec_guard_3057_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1008
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3057_delayed_1_0_3723_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3725_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3725_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3725_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3725_Update/ack)
  // 			type_cast_3062_3062_delayed_1_0 := ($bitcast ($int<32>) add137 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1009
  // add137
  // ($bitcast ($int<32>) add137 )
  type_cast_3728_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3728_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3728_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3728_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3728_Update/ca)
  // 			$guard (ifx_xend86_exec_guard_3057_delayed_1_0) $volatile cmp138 := (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 1010
  // (($bitcast ($int<32>) conv100 ) < type_cast_3062_3062_delayed_1_0)
  // conv100
  // type_cast_3062_3062_delayed_1_0
  // 			ifx_xend86_exec_guard_3065_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1011
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3065_delayed_1_0_3737_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3739_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3739_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3739_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3739_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3065_delayed_1_0) $volatile orx_xcond := (cmp129x_xnot & cmp138) $buffering 1
  //  file prog.linked.opt.aa, line 1012
  // (cmp129x_xnot & cmp138)
  // cmp129x_xnot
  // cmp138
  // 			ifx_xend86_exec_guard_3071_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1013
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3071_delayed_1_0_3746_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3748_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3748_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3748_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3748_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3071_delayed_1_0) $volatile orx_xcondx_xnot := (orx_xcond ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 1014
  // (orx_xcond ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond
  // 			ifx_xend86_exec_guard_3078_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1015
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3078_delayed_1_0_3756_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3758_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3758_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3758_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3758_Update/ack)
  // 			type_cast_3083_3083_delayed_1_0 := ($bitcast ($int<32>) conv112 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1016
  // conv112
  // ($bitcast ($int<32>) conv112 )
  type_cast_3761_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3761_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3761_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3761_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3761_Update/ca)
  // 			$guard (ifx_xend86_exec_guard_3078_delayed_1_0) $volatile cmp145 := (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 1017
  // (($bitcast ($int<32>) conv94 ) < type_cast_3083_3083_delayed_1_0)
  // conv94
  // type_cast_3083_3083_delayed_1_0
  // 			ifx_xend86_exec_guard_3086_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1018
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3086_delayed_1_0_3770_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3772_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3772_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3772_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3772_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3086_delayed_1_0) $volatile orx_xcond181 := (orx_xcondx_xnot | cmp145) $buffering 1
  //  file prog.linked.opt.aa, line 1019
  // (orx_xcondx_xnot | cmp145)
  // orx_xcondx_xnot
  // cmp145
  // 			ifx_xend86_exec_guard_3092_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1020
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3092_delayed_1_0_3779_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3781_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3781_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3781_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3781_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3092_delayed_1_0) $volatile orx_xcond181x_xnot := (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file prog.linked.opt.aa, line 1021
  // (orx_xcond181 ^ ($bitcast ($uint<1>) _b1  ))
  // orx_xcond181
  // 			ifx_xend86_exec_guard_3099_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1022
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3099_delayed_1_0_3789_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3791_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3791_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3791_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3791_Update/ack)
  // 			type_cast_3104_3104_delayed_1_0 := ($bitcast ($int<32>) add154 ) $buffering 1 $cut_through // bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1023
  // add154
  // ($bitcast ($int<32>) add154 )
  type_cast_3794_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3794_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3794_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3794_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3794_Update/ca)
  // 			$guard (ifx_xend86_exec_guard_3099_delayed_1_0) $volatile cmp155 := (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0) $buffering 1
  //  file prog.linked.opt.aa, line 1024
  // (($bitcast ($int<32>) conv94 ) < type_cast_3104_3104_delayed_1_0)
  // conv94
  // type_cast_3104_3104_delayed_1_0
  // 			ifx_xend86_exec_guard_3107_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1025
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3107_delayed_1_0_3803_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3805_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3805_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3805_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3805_Update/ack)
  // 			$guard (ifx_xend86_exec_guard_3107_delayed_1_0) $volatile orx_xcond182 := (orx_xcond181x_xnot & cmp155) $buffering 1
  //  file prog.linked.opt.aa, line 1026
  // (orx_xcond181x_xnot & cmp155)
  // orx_xcond181x_xnot
  // cmp155
  // 			ifx_xend86_exec_guard_3114_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1027
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3114_delayed_1_0_3812_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3814_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3814_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3814_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3814_Update/ack)
  // 			$volatile ifx_xend86_ifx_xelse160_taken := (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182) $buffering 1
  //  file prog.linked.opt.aa, line 1028
  // (ifx_xend86_exec_guard_3114_delayed_1_0 & orx_xcond182)
  // ifx_xend86_exec_guard_3114_delayed_1_0
  // orx_xcond182
  // 			ifx_xend86_exec_guard_3119_delayed_1_0 := ifx_xend86_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1029
  // ifx_xend86_exec_guard
  W_ifx_xend86_exec_guard_3119_delayed_1_0_3820_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3822_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3822_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3822_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3822_Update/ack)
  // 			$volatile ifx_xend86_ifx_xthen157_taken := (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 )) $buffering 1
  //  file prog.linked.opt.aa, line 1030
  // (ifx_xend86_exec_guard_3119_delayed_1_0 & ( ~ orx_xcond182 ))
  // ifx_xend86_exec_guard_3119_delayed_1_0
  // orx_xcond182
  // 			$volatile ifx_xthen157_exec_guard := ifx_xend86_ifx_xthen157_taken $buffering 1
  //  file prog.linked.opt.aa, line 1031
  // ifx_xend86_ifx_xthen157_taken
  // 			ifx_xthen157_exec_guard_3127_delayed_1_0 := ifx_xthen157_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1032
  // ifx_xthen157_exec_guard
  W_ifx_xthen157_exec_guard_3127_delayed_1_0_3832_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3834_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3834_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3834_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3834_Update/ack)
  // 			$guard (ifx_xthen157_exec_guard_3127_delayed_1_0) conv159 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1033
  // conv103
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
  type_cast_3839_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3839_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3839_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3839_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3839_Update/ca)
  // 			ifx_xthen157_exec_guard_3133_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 1034
  // ifx_xthen157_exec_guard
  W_ifx_xthen157_exec_guard_3133_delayed_2_0_3841_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3843_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3843_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3843_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3843_Update/ack)
  // 			$guard (ifx_xthen157_exec_guard_3133_delayed_2_0) $volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 1035
  // (($bitcast ($int<32>) conv159 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv159
  // 			ifx_xthen157_exec_guard_3143_delayed_2_0 := ifx_xthen157_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 1036
  // ifx_xthen157_exec_guard
  W_ifx_xthen157_exec_guard_3143_delayed_2_0_3854_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3856_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3856_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3856_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3856_Update/ack)
  // 			$guard (ifx_xthen157_exec_guard_3143_delayed_2_0) idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1037
  // shr
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
  type_cast_3861_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3861_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3861_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3861_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3861_Update/ca)
  // 			arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1038
  // idxprom
  array_obj_ref_3867_index_1_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_index_resize_1/index_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_index_resize_1/index_resize_ack)
  array_obj_ref_3867_index_1_rename <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_index_scale_1/scale_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_index_scale_1/scale_rename_ack)
  array_obj_ref_3867_index_offset <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_final_index_sum_regn_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_final_index_sum_regn_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_final_index_sum_regn_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_final_index_sum_regn_Update/ack)
  array_obj_ref_3867_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3867_base_plus_offset/sum_rename_ack)
  addr_of_3868_final_reg <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3868_request/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3868_complete/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3868_request/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3868_complete/ack)
  // 			$guard (ifx_xthen157_exec_guard) ->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1039
  // arrayidx
  ptr_deref_3872_base_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_base_addr_resize/base_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_base_addr_resize/base_resize_ack)
  ptr_deref_3872_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_base_plus_offset/sum_rename_ack)
  ptr_deref_3872_addr_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_word_addrgen/root_register_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_word_addrgen/root_register_ack)
  ptr_deref_3872_gather_scatter <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Sample/ptr_deref_3872_Split/split_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Sample/ptr_deref_3872_Split/split_ack)
  ptr_deref_3872_store_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Sample/word_access_start/word_0/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Update/word_access_complete/word_0/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Sample/word_access_start/word_0/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3872_Update/word_access_complete/word_0/ca)
  // 			$volatile ifx_xelse160_exec_guard := ifx_xend86_ifx_xelse160_taken $buffering 1
  //  file prog.linked.opt.aa, line 1040
  // ifx_xend86_ifx_xelse160_taken
  // 			$guard (ifx_xelse160_exec_guard) $volatile sext179 := (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 1041
  // (add123 << ($bitcast ($uint<32>) _b00000000000000000000000000010000  ))
  // add123
  // 			$guard (ifx_xelse160_exec_guard) $volatile shr163 := ($bitcast ($uint<32>) (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 1042
  // (($bitcast ($int<32>) sext179 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000010010  ) ))
  // sext179
  // 			$guard (ifx_xelse160_exec_guard) idxprom164 := ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1043
  // shr163
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr163 ) )
  type_cast_3900_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3900_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3900_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3900_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3900_Update/ca)
  // 			arrayidx165 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom164]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1044
  // idxprom164
  array_obj_ref_3906_index_1_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_index_resize_1/index_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_index_resize_1/index_resize_ack)
  array_obj_ref_3906_index_1_rename <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_index_scale_1/scale_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_index_scale_1/scale_rename_ack)
  array_obj_ref_3906_index_offset <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_final_index_sum_regn_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_final_index_sum_regn_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_final_index_sum_regn_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_final_index_sum_regn_Update/ack)
  array_obj_ref_3906_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3906_base_plus_offset/sum_rename_ack)
  addr_of_3907_final_reg <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3907_request/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3907_complete/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3907_request/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3907_complete/ack)
  // 			ifx_xelse160_exec_guard_3195_delayed_8_0 := ifx_xelse160_exec_guard $buffering 8 $cut_through // bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 1045
  // ifx_xelse160_exec_guard
  W_ifx_xelse160_exec_guard_3195_delayed_8_0_3909_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3911_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3911_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3911_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3911_Update/ack)
  // 			$guard (ifx_xelse160_exec_guard_3195_delayed_8_0) tmp166 := ->(arrayidx165) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1046
  // arrayidx165
  ptr_deref_3915_base_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_base_addr_resize/base_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_base_addr_resize/base_resize_ack)
  ptr_deref_3915_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_base_plus_offset/sum_rename_ack)
  ptr_deref_3915_addr_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_word_addrgen/root_register_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_word_addrgen/root_register_ack)
  ptr_deref_3915_gather_scatter <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Update/ptr_deref_3915_Merge/merge_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Update/ptr_deref_3915_Merge/merge_ack)
  ptr_deref_3915_load_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Sample/word_access_start/word_0/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Update/word_access_complete/word_0/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Sample/word_access_start/word_0/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3915_Update/word_access_complete/word_0/ca)
  // 			ifx_xelse160_exec_guard_3200_delayed_1_0 := ifx_xelse160_exec_guard $buffering 1 $cut_through // bits of buffering = 1. 
  //  file prog.linked.opt.aa, line 1047
  // ifx_xelse160_exec_guard
  W_ifx_xelse160_exec_guard_3200_delayed_1_0_3917_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3919_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3919_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3919_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3919_Update/ack)
  // 			$guard (ifx_xelse160_exec_guard_3200_delayed_1_0) conv168 := ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1048
  // conv103
  // ($bitcast ($uint<32>) ($cast ($int<32>) conv103 ) )
  type_cast_3924_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3924_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3924_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3924_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3924_Update/ca)
  // 			ifx_xelse160_exec_guard_3206_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 1049
  // ifx_xelse160_exec_guard
  W_ifx_xelse160_exec_guard_3206_delayed_2_0_3926_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3928_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3928_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3928_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3928_Update/ack)
  // 			$guard (ifx_xelse160_exec_guard_3206_delayed_2_0) $volatile shr169 := ($bitcast ($uint<32>) (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 1050
  // (($bitcast ($int<32>) conv168 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // conv168
  // 			ifx_xelse160_exec_guard_3216_delayed_2_0 := ifx_xelse160_exec_guard $buffering 2 $cut_through // bits of buffering = 2. 
  //  file prog.linked.opt.aa, line 1051
  // ifx_xelse160_exec_guard
  W_ifx_xelse160_exec_guard_3216_delayed_2_0_3939_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3941_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3941_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3941_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3941_Update/ack)
  // 			$guard (ifx_xelse160_exec_guard_3216_delayed_2_0) idxprom170 := ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1052
  // shr169
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr169 ) )
  type_cast_3946_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3946_Sample/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3946_Update/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3946_Sample/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/type_cast_3946_Update/ca)
  // 			arrayidx171 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom170]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 1053
  // idxprom170
  array_obj_ref_3952_index_1_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_index_resize_1/index_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_index_resize_1/index_resize_ack)
  array_obj_ref_3952_index_1_rename <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_index_scale_1/scale_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_index_scale_1/scale_rename_ack)
  array_obj_ref_3952_index_offset <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_final_index_sum_regn_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_final_index_sum_regn_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_final_index_sum_regn_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_final_index_sum_regn_Update/ack)
  array_obj_ref_3952_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/array_obj_ref_3952_base_plus_offset/sum_rename_ack)
  addr_of_3953_final_reg <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3953_request/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3953_complete/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3953_request/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/addr_of_3953_complete/ack)
  // 			ifx_xelse160_exec_guard_3229_delayed_14_0 := ifx_xelse160_exec_guard $buffering 14 $cut_through // bits of buffering = 14. 
  //  file prog.linked.opt.aa, line 1054
  // ifx_xelse160_exec_guard
  W_ifx_xelse160_exec_guard_3229_delayed_14_0_3955_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3957_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3957_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3957_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3957_Update/ack)
  // 			arrayidx171_3230_delayed_4_0 := arrayidx171 $buffering 4 $cut_through // bits of buffering = 128. 
  //  file prog.linked.opt.aa, line 1055
  // arrayidx171
  W_arrayidx171_3230_delayed_4_0_3958_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3960_Sample/req branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3960_Update/req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3960_Sample/ack branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/assign_stmt_3960_Update/ack)
  // 			$guard (ifx_xelse160_exec_guard_3229_delayed_14_0) ->(arrayidx171_3230_delayed_4_0) := tmp166 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 1056
  // tmp166
  // arrayidx171_3230_delayed_4_0
  ptr_deref_3963_base_resize <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_base_addr_resize/base_resize_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_base_addr_resize/base_resize_ack)
  ptr_deref_3963_root_address_inst <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_base_plus_offset/sum_rename_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_base_plus_offset/sum_rename_ack)
  ptr_deref_3963_addr_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_word_addrgen/root_register_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_word_addrgen/root_register_ack)
  ptr_deref_3963_gather_scatter <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Sample/ptr_deref_3963_Split/split_req) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Sample/ptr_deref_3963_Split/split_ack)
  ptr_deref_3963_store_0 <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Sample/word_access_start/word_0/rr branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Update/word_access_complete/word_0/cr) (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Sample/word_access_start/word_0/ra branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/ptr_deref_3963_Update/word_access_complete/word_0/ca)
  // 			$volatile tobool := (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 1057
  // (flagx_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // flagx_x0
  // 			$volatile ifx_xend172_whilex_xend_taken := ( ~ tobool ) $buffering 1
  //  file prog.linked.opt.aa, line 1058
  // tobool
  // tobool
  do_while_stmt_3308_branch <=> (branch_block_stmt_3159/do_while_stmt_3308/do_while_stmt_3308_loop_body/condition_evaluated) (branch_block_stmt_3159/do_while_stmt_3308/loop_exit/ack branch_block_stmt_3159/do_while_stmt_3308/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 118164344
  if_stmt_3978_branch <=> (branch_block_stmt_3159/if_stmt_3978_eval_test/branch_req) (branch_block_stmt_3159/if_stmt_3978_else_link/else_choice_transition branch_block_stmt_3159/if_stmt_3978_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1063
  // 		Block3_complete := ($bitcast ($uint<8>) _b00000001  ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 1066
  // Block3_complete
  WPIPE_Block3_complete_3984_inst <=> (branch_block_stmt_3159/assign_stmt_3987/WPIPE_Block3_complete_3984_Sample/req branch_block_stmt_3159/assign_stmt_3987/WPIPE_Block3_complete_3984_Update/req) (branch_block_stmt_3159/assign_stmt_3987/WPIPE_Block3_complete_3984_Sample/ack branch_block_stmt_3159/assign_stmt_3987/WPIPE_Block3_complete_3984_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1068
}
