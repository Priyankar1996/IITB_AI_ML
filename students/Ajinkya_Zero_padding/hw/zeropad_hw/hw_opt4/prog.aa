// Aa code produced by llvm2aa (version 1.0)
$record [structx_x__SizedTensor_16K] < $array [16384] $of $uint<64> > 
$record [structx_x__TensorDescriptor] < $uint<32> > < $uint<8> > < $uint<32> > < $array [64] $of $uint<32> > 
$pipe Block0_complete : $uint<16> $depth 1
$pipe Block0_starting : $uint<16> $depth 1
$pipe Block1_complete : $uint<16> $depth 1
$pipe Block1_starting : $uint<16> $depth 1
$pipe Block2_complete : $uint<16> $depth 1
$pipe Block2_starting : $uint<16> $depth 1
$pipe Block3_complete : $uint<16> $depth 1
$pipe Block3_starting : $uint<16> $depth 1
$pipe elapsed_time_pipe : $uint<64> $depth 1
$pipe zeropad_input_pipe : $uint<16> $depth 2
$pipe zeropad_output_pipe : $uint<16> $depth 2
$storage R:structx_x__SizedTensor_16K
$storage des_inp:structx_x__TensorDescriptor
$storage pad:$uint<16>
$storage des_out:structx_x__TensorDescriptor
$storage T:structx_x__SizedTensor_16K
$module [progx_xoptx_xo_storage_initializer_] $in () $out () $is 
{
  $null
  $attribute initializer
}
$module [getRemainingElements] 
$in (ne : $uint<16> )
$out (ret_val__ : $uint<64>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    // compare instruction
    cmp14 := (ne == ( $bitcast ($uint<16> ) _b0000000000000000 )  )
    $if cmp14 $then  $place [entry_forx_xend] $else $place [entry_forx_xbodyx_xpreheader] $endif 
    //begin: basic-block forx_xbodyx_xpreheader
    $merge entry_forx_xbodyx_xpreheader
    $endmerge
    $place [forx_xbodyx_xpreheader_forx_xbody]
    //begin: basic-block forx_xbody
    $merge forx_xbody_forx_xbody forx_xbodyx_xpreheader_forx_xbody
    $phi nx_x016 :=  ( $cast ($uint<16>) inc) $on forx_xbody_forx_xbody ( $cast ($uint<16>) ( $bitcast ($uint<16> ) _b0000000000000000 ) ) $on forx_xbodyx_xpreheader_forx_xbody 
    $phi elementx_x015 :=  ( $cast ($uint<64>) shl) $on forx_xbody_forx_xbody ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xbodyx_xpreheader_forx_xbody 
    $endmerge
    call := zeropad_input_pipe
    conv5 := ($cast ($uint<64>) call)
    add := (conv5 | elementx_x015)
    shl := (add << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    inc := (nx_x016 + ( $bitcast ($uint<16> ) _b0000000000000001 ) )
    // compare instruction
    exitcond1 := (inc == ne )
    $if exitcond1 $then  $place [forx_xbody_forx_xendx_xloopexit] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $phi shlx_xlcssa :=  ( $cast ($uint<64>) shl) $on forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend
    $phi elementx_x0x_xlcssa :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xend ( $cast ($uint<64>) shlx_xlcssa) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    conv10 := ($cast ($uint<64>) ne)
    sub := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  - conv10)
    mul := (sub << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 ) )
    sh_prom := (mul & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111110000 ) )
    ret_val__ := (elementx_x0x_xlcssa << sh_prom)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sendRemainingElements] 
$in (addr : $uint<32> ne : $uint<16> )
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $storage out_data_alloc : $array [3] $of $uint<16>
    out_data := @(out_data_alloc)
    idxprom :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) addr) )
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom])
    // load 
    tmp1 := ->(arrayidx) 
    shr := (tmp1 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    conv := ($cast ($uint<16>) shr)
    arrayidx6 := out_data[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    ->(arrayidx6) := conv
    shr8 := (tmp1 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000100000 ) )
    conv11 := ($cast ($uint<16>) shr8)
    arrayidx12 := out_data[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    ->(arrayidx12) := conv11
    shr14 := (tmp1 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv17 := ($cast ($uint<16>) shr14)
    arrayidx18 := out_data[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    ->(arrayidx18) := conv17
    // compare instruction
    cmp31 := (ne == ( $bitcast ($uint<16> ) _b0000000000000000 )  )
    $if cmp31 $then  $place [entry_forx_xend] $else $place [entry_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge entry_bbx_xnph
    $endmerge
    tmp := ($cast ($uint<64>) ne)
    // compare instruction
    tmp33 := (ne > ( $bitcast ($uint<16> ) _b0000000000000001 )  )
    tmpx_xop := (tmp + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111111 ) )
    iNsTr_5 := (tmpx_xop & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111111 ) )
    xx_xop := (iNsTr_5 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp36 := ( $mux tmp33 xx_xop ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp2 := (tmp36 + ( $bitcast ($uint<64> ) _b1111111111111111111111111111111111111111111111111111111111111111 ) )
    $place [bbx_xnph_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph_forx_xbody forx_xbodyx_xforx_xbody_crit_edge_forx_xbody
    $phi indvar1 :=  ( $cast ($uint<64>) indvarx_xnext) $on forx_xbodyx_xforx_xbody_crit_edge_forx_xbody ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody 
    $phi tmp27 :=  ( $cast ($uint<16>) conv17) $on bbx_xnph_forx_xbody ( $cast ($uint<16>) tmp27x_xpre) $on forx_xbodyx_xforx_xbody_crit_edge_forx_xbody 
    $endmerge
    tmp4 := (indvar1 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    arrayidx26x_xphix_xtransx_xinsert := out_data[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp4]
    zeropad_output_pipe := tmp27
    // compare instruction
    exitcond3 := (indvar1 == tmp2 )
    $if exitcond3 $then  $place [forx_xbody_forx_xendx_xloopexit] $else $place [forx_xbody_forx_xbodyx_xforx_xbody_crit_edge] $endif 
    //begin: basic-block forx_xbodyx_xforx_xbody_crit_edge
    $merge forx_xbody_forx_xbodyx_xforx_xbody_crit_edge
    $endmerge
    // load 
    tmp27x_xpre := ->(arrayidx26x_xphix_xtransx_xinsert) 
    indvarx_xnext := (indvar1 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbodyx_xforx_xbody_crit_edge_forx_xbody]
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [testConfigure] 
$in ()
$out (ret_val__ : $uint<16>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    iNsTr_0 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ])
    ->(iNsTr_0) := ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 ) 
    call := zeropad_input_pipe
    conv := ($cast ($uint<8>) call)
    iNsTr_3 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ])
    ->(iNsTr_3) := conv
    call1 := zeropad_input_pipe
    conv2 := ($cast ($uint<32>) call1)
    iNsTr_6 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    ->(iNsTr_6) := conv2
    // compare instruction
    cmp71 := (call1 == ( $bitcast ($uint<16> ) _b0000000000000000 )  )
    call572 := zeropad_input_pipe
    $if cmp71 $then  $place [entry_forx_xend] $else $place [entry_forx_xbodyx_xpreheader] $endif 
    //begin: basic-block forx_xbodyx_xpreheader
    $merge entry_forx_xbodyx_xpreheader
    $endmerge
    $place [forx_xbodyx_xpreheader_forx_xbody]
    //begin: basic-block forx_xbody
    $merge forx_xbody_forx_xbody forx_xbodyx_xpreheader_forx_xbody
    $phi indvar90 :=  ( $cast ($uint<64>) tmp92) $on forx_xbody_forx_xbody ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xbodyx_xpreheader_forx_xbody 
    $phi call574 :=  ( $cast ($uint<16>) call5) $on forx_xbody_forx_xbody ( $cast ($uint<16>) call572) $on forx_xbodyx_xpreheader_forx_xbody 
    $endmerge
    tmp := (indvar90 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    inc := ($cast ($uint<32>) tmp)
    arrayidx := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][indvar90])
    conv6 := ($cast ($uint<32>) call574)
    ->(arrayidx) := conv6
    tmp92 := (indvar90 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    iNsTr_28 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ])
    // load 
    tmp3 := ->(iNsTr_28) 
    // compare instruction
    cmp := (inc < tmp3 )
    call5 := zeropad_input_pipe
    $if cmp $then  $place [forx_xbody_forx_xbody] $else $place [forx_xbody_forx_xendx_xloopexit] $endif 
    //begin: basic-block forx_xendx_xloopexit
    $merge forx_xbody_forx_xendx_xloopexit
    $phi call5x_xlcssa1 :=  ( $cast ($uint<16>) call5) $on forx_xbody_forx_xendx_xloopexit 
    $endmerge
    $place [forx_xendx_xloopexit_forx_xend]
    //begin: basic-block forx_xend
    $merge entry_forx_xend forx_xendx_xloopexit_forx_xend
    $phi call5x_xlcssa :=  ( $cast ($uint<16>) call572) $on entry_forx_xend ( $cast ($uint<16>) call5x_xlcssa1) $on forx_xendx_xloopexit_forx_xend 
    $endmerge
    pad := call5x_xlcssa
    call10 := zeropad_input_pipe
    conv11 := ($cast ($uint<32>) call10)
    iNsTr_12 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    ->(iNsTr_12) := conv11
    call12 := zeropad_input_pipe
    conv13 := ($cast ($uint<32>) call12)
    iNsTr_15 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    ->(iNsTr_15) := conv13
    call14 := zeropad_input_pipe
    conv15 := ($cast ($uint<32>) call14)
    iNsTr_18 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    ->(iNsTr_18) := conv15
    iNsTr_20 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp17 := ->(iNsTr_20) 
    iNsTr_21 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp18 := ->(iNsTr_21) 
    iNsTr_22 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp19 := ->(iNsTr_22) 
    mul := (tmp18 * tmp17)
    mul20 := (mul * tmp19)
    conv21 := ($cast ($uint<64>) mul20)
    shr67x_xmask := (conv21 & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111100 ) )
    // compare instruction
    cmp2668 := (shr67x_xmask == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
    $if cmp2668 $then  $place [forx_xend_forx_xend55] $else $place [forx_xend_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge forx_xend_bbx_xnph
    $endmerge
    tmp83 := (conv21 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    // compare instruction
    tmp84 := (tmp83 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
    tmp4 := (tmp18 * tmp17)
    tmp5 := (tmp4 * tmp19)
    tmp6 := ($cast ($uint<64>) tmp5)
    tmp7 := (tmp6 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    // compare instruction
    tmp8 := (tmp7 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
    umax9 := ( $mux tmp8 tmp7 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph_forx_xbody28]
    //begin: basic-block forx_xbody28
    $merge bbx_xnph_forx_xbody28 forx_xbody28_forx_xbody28
    $phi indvar :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbody28 ( $cast ($uint<64>) indvarx_xnext) $on forx_xbody28_forx_xbody28 
    $endmerge
    arrayidx51 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][indvar])
    call30 := zeropad_input_pipe
    conv31 := ($cast ($uint<64>) call30)
    shl := (conv31 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    call33 := zeropad_input_pipe
    conv35 := ($cast ($uint<64>) call33)
    add := (shl | conv35)
    shl37 := (add << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    call38 := zeropad_input_pipe
    conv40 := ($cast ($uint<64>) call38)
    add41 := (shl37 | conv40)
    shl43 := (add41 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    call44 := zeropad_input_pipe
    conv46 := ($cast ($uint<64>) call44)
    add47 := (shl43 | conv46)
    ->(arrayidx51) := add47
    indvarx_xnext := (indvar + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond10 := (indvarx_xnext == umax9 )
    $if exitcond10 $then  $place [forx_xbody28_forx_xcond22x_xforx_xend55_crit_edge] $else $place [forx_xbody28_forx_xbody28] $endif 
    //begin: basic-block forx_xcond22x_xforx_xend55_crit_edge
    $merge forx_xbody28_forx_xcond22x_xforx_xend55_crit_edge
    $endmerge
    umax := ( $mux tmp84 tmp83 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    phitmp94 := (umax & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000111111111111111111111111111111 ) )
    $place [forx_xcond22x_xforx_xend55_crit_edge_forx_xend55]
    //begin: basic-block forx_xend55
    $merge forx_xcond22x_xforx_xend55_crit_edge_forx_xend55 forx_xend_forx_xend55
    $phi ix_x1x_xlcssa :=  ( $cast ($uint<64>) phitmp94) $on forx_xcond22x_xforx_xend55_crit_edge_forx_xend55 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xend_forx_xend55 
    $endmerge
    and := (conv21 & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
    // compare instruction
    tobool := (and == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
    $if tobool $then  $place [forx_xend55_ifx_xend] $else $place [forx_xend55_forx_xbodyx_xix_xpreheader] $endif 
    //begin: basic-block forx_xbodyx_xix_xpreheader
    $merge forx_xend55_forx_xbodyx_xix_xpreheader
    $endmerge
    tmp11 := (tmp18 * tmp17)
    tmp12 := (tmp11 * tmp19)
    tmp13 := ($cast ($uint<2>) tmp12)
    tmp14 := ($cast ($uint<16>) tmp13)
    $place [forx_xbodyx_xix_xpreheader_forx_xbodyx_xi]
    //begin: basic-block forx_xbodyx_xi
    $merge forx_xbodyx_xi_forx_xbodyx_xi forx_xbodyx_xix_xpreheader_forx_xbodyx_xi
    $phi nx_x016x_xi :=  ( $cast ($uint<16>) incx_xi) $on forx_xbodyx_xi_forx_xbodyx_xi ( $cast ($uint<16>) ( $bitcast ($uint<16> ) _b0000000000000000 ) ) $on forx_xbodyx_xix_xpreheader_forx_xbodyx_xi 
    $phi elementx_x015x_xi :=  ( $cast ($uint<64>) shlx_xi) $on forx_xbodyx_xi_forx_xbodyx_xi ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on forx_xbodyx_xix_xpreheader_forx_xbodyx_xi 
    $endmerge
    callx_xi := zeropad_input_pipe
    conv5x_xi := ($cast ($uint<64>) callx_xi)
    addx_xi := (conv5x_xi | elementx_x015x_xi)
    shlx_xi := (addx_xi << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    incx_xi := (nx_x016x_xi + ( $bitcast ($uint<16> ) _b0000000000000001 ) )
    // compare instruction
    exitcond15 := (incx_xi == tmp14 )
    $if exitcond15 $then  $place [forx_xbodyx_xi_getRemainingElementsx_xexit] $else $place [forx_xbodyx_xi_forx_xbodyx_xi] $endif 
    //begin: basic-block getRemainingElementsx_xexit
    $merge forx_xbodyx_xi_getRemainingElementsx_xexit
    $phi shlx_xix_xlcssa :=  ( $cast ($uint<64>) shlx_xi) $on forx_xbodyx_xi_getRemainingElementsx_xexit 
    $endmerge
    Bx_xnot := (conv21 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 ) )
    mulx_xi := (Bx_xnot & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    sh_promx_xi := (mulx_xi ^ ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    shl12x_xi := (shlx_xix_xlcssa << sh_promx_xi)
    arrayidx63 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x1x_xlcssa])
    ->(arrayidx63) := shl12x_xi
    $place [getRemainingElementsx_xexit_ifx_xend]
    //begin: basic-block ifx_xend
    $merge forx_xend55_ifx_xend getRemainingElementsx_xexit_ifx_xend
    $endmerge
    ret_val__ := ($cast ($uint<16>) mul20)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [sendOutput] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $storage out_datax_xi_alloc : $array [3] $of $uint<16>
    out_datax_xi := @(out_datax_xi_alloc)
    iNsTr_0 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp := ->(iNsTr_0) 
    iNsTr_1 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp1 := ->(iNsTr_1) 
    iNsTr_2 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp2 := ->(iNsTr_2) 
    mul := (tmp1 * tmp)
    mul3 := (mul * tmp2)
    conv := ($cast ($uint<64>) mul3)
    shr52x_xmask := (conv & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111100 ) )
    // compare instruction
    cmp53 := (shr52x_xmask == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
    $if cmp53 $then  $place [entry_forx_xend] $else $place [entry_bbx_xnph55] $endif 
    //begin: basic-block bbx_xnph55
    $merge entry_bbx_xnph55
    $endmerge
    tmp61 := (conv >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    // compare instruction
    tmp62 := (tmp61 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
    tmp3 := (tmp1 * tmp)
    tmp4 := (tmp3 * tmp2)
    tmp5 := ($cast ($uint<64>) tmp4)
    tmp6 := (tmp5 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) )
    // compare instruction
    tmp7 := (tmp6 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
    umax8 := ( $mux tmp7 tmp6 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [bbx_xnph55_forx_xbody]
    //begin: basic-block forx_xbody
    $merge bbx_xnph55_forx_xbody forx_xbody_forx_xbody
    $phi indvar66 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph55_forx_xbody ( $cast ($uint<64>) indvarx_xnext67) $on forx_xbody_forx_xbody 
    $endmerge
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][indvar66])
    // load 
    tmp11 := ->(arrayidx) 
    conv14 := ($cast ($uint<16>) tmp11)
    shr17 := (tmp11 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    conv20 := ($cast ($uint<16>) shr17)
    shr23 := (tmp11 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000100000 ) )
    conv26 := ($cast ($uint<16>) shr23)
    shr29 := (tmp11 >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv32 := ($cast ($uint<16>) shr29)
    zeropad_output_pipe := conv32
    zeropad_output_pipe := conv26
    zeropad_output_pipe := conv20
    zeropad_output_pipe := conv14
    indvarx_xnext67 := (indvar66 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    // compare instruction
    exitcond9 := (indvarx_xnext67 == umax8 )
    $if exitcond9 $then  $place [forx_xbody_forx_xcondx_xforx_xend_crit_edge] $else $place [forx_xbody_forx_xbody] $endif 
    //begin: basic-block forx_xcondx_xforx_xend_crit_edge
    $merge forx_xbody_forx_xcondx_xforx_xend_crit_edge
    $endmerge
    umax := ( $mux tmp62 tmp61 ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    phitmp69 := (umax & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000111111111111111111111111111111 ) )
    $place [forx_xcondx_xforx_xend_crit_edge_forx_xend]
    //begin: basic-block forx_xend
    $merge entry_forx_xend forx_xcondx_xforx_xend_crit_edge_forx_xend
    $phi ix_x0x_xlcssa :=  ( $cast ($uint<64>) phitmp69) $on forx_xcondx_xforx_xend_crit_edge_forx_xend ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on entry_forx_xend 
    $endmerge
    and44 := (conv & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
    // compare instruction
    tobool := (and44 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
    $if tobool $then  $place [forx_xend_sendRemainingElementsx_xexit] $else $place [forx_xend_ifx_xthen] $endif 
    //begin: basic-block ifx_xthen
    $merge forx_xend_ifx_xthen
    $endmerge
    conv48 := ($cast ($uint<16>) and44)
    arrayidxx_xi := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][ix_x0x_xlcssa])
    // load 
    tmp1x_xi := ->(arrayidxx_xi) 
    shrx_xi := (tmp1x_xi >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000010000 ) )
    convx_xi := ($cast ($uint<16>) shrx_xi)
    arrayidx6x_xi := out_datax_xi[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ]
    ->(arrayidx6x_xi) := convx_xi
    shr8x_xi := (tmp1x_xi >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000100000 ) )
    conv11x_xi := ($cast ($uint<16>) shr8x_xi)
    arrayidx12x_xi := out_datax_xi[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ]
    ->(arrayidx12x_xi) := conv11x_xi
    shr14x_xi := (tmp1x_xi >> ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000110000 ) )
    conv17x_xi := ($cast ($uint<16>) shr14x_xi)
    arrayidx18x_xi := out_datax_xi[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ]
    ->(arrayidx18x_xi) := conv17x_xi
    // compare instruction
    cmp31x_xi := (conv48 == ( $bitcast ($uint<16> ) _b0000000000000000 )  )
    $if cmp31x_xi $then  $place [ifx_xthen_sendRemainingElementsx_xexit] $else $place [ifx_xthen_bbx_xnphx_xi] $endif 
    //begin: basic-block bbx_xnphx_xi
    $merge ifx_xthen_bbx_xnphx_xi
    $endmerge
    // compare instruction
    tmp33x_xi := (conv48 > ( $bitcast ($uint<16> ) _b0000000000000001 )  )
    tmpx_xopx_xi := (and44 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111111 ) )
    iNsTr_20 := (tmpx_xopx_xi & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000011111111111111111111111111111111 ) )
    xx_xopx_xi := (iNsTr_20 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    tmp36x_xi := ( $mux tmp33x_xi xx_xopx_xi ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    zeropad_output_pipe := conv17x_xi
    // compare instruction
    exitcondx_xi49 := (tmp36x_xi == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
    $if exitcondx_xi49 $then  $place [bbx_xnphx_xi_sendRemainingElementsx_xexit] $else $place [bbx_xnphx_xi_bbx_xnph] $endif 
    //begin: basic-block bbx_xnph
    $merge bbx_xnphx_xi_bbx_xnph
    $endmerge
    tmp12 := (tmp36x_xi + ( $bitcast ($uint<64> ) _b1111111111111111111111111111111111111111111111111111111111111110 ) )
    $place [bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi]
    //begin: basic-block forx_xbodyx_xforx_xbody_crit_edgex_xi
    $merge bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi
    $phi indvar10 :=  ( $cast ($uint<64>) indvarx_xnext) $on forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on bbx_xnph_forx_xbodyx_xforx_xbody_crit_edgex_xi 
    $endmerge
    tmp14 := (indvar10 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    arrayidx26x_xphix_xtransx_xinsertx_xi := out_datax_xi[( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ][tmp14]
    // load 
    tmp27x_xprex_xi := ->(arrayidx26x_xphix_xtransx_xinsertx_xi) 
    zeropad_output_pipe := tmp27x_xprex_xi
    // compare instruction
    exitcond13 := (indvar10 == tmp12 )
    $if exitcond13 $then  $place [forx_xbodyx_xforx_xbody_crit_edgex_xi_sendRemainingElementsx_xexitx_xloopexit] $else $place [forx_xbodyx_xforx_xbody_crit_edgex_xi_forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge] $endif 
    //begin: basic-block forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge
    $merge forx_xbodyx_xforx_xbody_crit_edgex_xi_forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge
    $endmerge
    indvarx_xnext := (indvar10 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
    $place [forx_xbodyx_xforx_xbody_crit_edgex_xix_xforx_xbodyx_xforx_xbody_crit_edgex_xi_crit_edge_forx_xbodyx_xforx_xbody_crit_edgex_xi]
    //begin: basic-block sendRemainingElementsx_xexitx_xloopexit
    $merge forx_xbodyx_xforx_xbody_crit_edgex_xi_sendRemainingElementsx_xexitx_xloopexit
    $endmerge
    $place [sendRemainingElementsx_xexitx_xloopexit_sendRemainingElementsx_xexit]
    //begin: basic-block sendRemainingElementsx_xexit
    $merge bbx_xnphx_xi_sendRemainingElementsx_xexit forx_xend_sendRemainingElementsx_xexit ifx_xthen_sendRemainingElementsx_xexit sendRemainingElementsx_xexitx_xloopexit_sendRemainingElementsx_xexit
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D_A] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := Block0_starting
    $barrier 
    iNsTr_2 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp := ->(iNsTr_2) 
    iNsTr_3 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp2 := ->(iNsTr_3) 
    iNsTr_4 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp6 := ->(iNsTr_4) 
    iNsTr_5 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp8 := ->(iNsTr_5) 
    // load 
    tmp19 := pad
    conv := ($cast ($uint<32>) tmp19)
    iNsTr_6 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp23 := ->(iNsTr_6) 
    div := (tmp23 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add := (div + conv)
    $place [entry_whilex_xcondx_xouter]
    //begin: basic-block whilex_xcondx_xouter
    $merge entry_whilex_xcondx_xouter whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter
    $phi jx_x0x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) jx_x0x_xphx_xbe) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $phi ix_x0x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) inc79x_xix_x0) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $endmerge
    // compare instruction
    cmp := (ix_x0x_xph == add )
    $if cmp $then  $place [whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge] $else $place [whilex_xcondx_xouter_whilex_xcond82x_xouterx_xpreheader] $endif 
    //begin: basic-block whilex_xcond82x_xouterx_xpreheader
    $merge whilex_xcondx_xouter_whilex_xcond82x_xouterx_xpreheader
    $endmerge
    $place [whilex_xcond82x_xouterx_xpreheader_whilex_xcond82x_xouter]
    //begin: basic-block whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $merge whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $endmerge
    tmp220 := (tmp8 * ix_x0x_xph)
    tmp221 := (jx_x0x_xph + tmp220)
    tmp222 := (tmp6 * tmp221)
    tmp223 := (tmp222 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp225 := (tmp222 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp227 := (tmp222 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody]
    //begin: basic-block whilex_xbody
    $merge whilex_xbody_whilex_xbody whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody
    $phi indvar216 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody ( $cast ($uint<32>) indvarx_xnext217) $on whilex_xbody_whilex_xbody 
    $endmerge
    tmp31 := (indvar216 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add63 := (tmp31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add44 := (tmp223 + tmp31)
    add41 := (tmp225 + tmp31)
    add38 := (tmp227 + tmp31)
    add35 := (tmp222 + tmp31)
    shr :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add35) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr) )
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom])
    ->(arrayidx) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr49 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add38) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom50 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr49) )
    arrayidx51 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom50])
    ->(arrayidx51) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr54 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add41) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom55 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr54) )
    arrayidx56 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom55])
    ->(arrayidx56) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr59 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add44) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom60 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr59) )
    arrayidx61 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom60])
    ->(arrayidx61) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    // compare instruction
    cmp66 := ( ($bitcast ( $int<32>) add63) <   ($bitcast ( $int<32>) tmp6 ) )
    indvarx_xnext217 := (indvar216 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp66 $then  $place [whilex_xbody_whilex_xbody] $else $place [whilex_xbody_ifx_xthen] $endif 
    //begin: basic-block ifx_xthen
    $merge whilex_xbody_ifx_xthen
    $endmerge
    inc := (jx_x0x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    div71 := (tmp2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add73 := (div71 + conv)
    // compare instruction
    cmp74 := (inc == add73 )
    inc79 := ($cast ($uint<32>) cmp74)
    inc79x_xix_x0 := (inc79 + ix_x0x_xph)
    $if cmp74 $then  $place [ifx_xthen_ifx_xthen76] $else $place [ifx_xthen_whilex_xcondx_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcondx_xouterx_xbackedge
    $merge ifx_xthen_whilex_xcondx_xouterx_xbackedge ifx_xthen76_whilex_xcondx_xouterx_xbackedge
    $phi jx_x0x_xphx_xbe :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on ifx_xthen76_whilex_xcondx_xouterx_xbackedge ( $cast ($uint<32>) inc) $on ifx_xthen_whilex_xcondx_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter]
    //begin: basic-block ifx_xthen76
    $merge ifx_xthen_ifx_xthen76
    $endmerge
    $place [ifx_xthen76_whilex_xcondx_xouterx_xbackedge]
    //begin: basic-block whilex_xbody88
    $merge whilex_xbody88_whilex_xbody88 whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge_whilex_xbody88
    $phi indvar :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge_whilex_xbody88 ( $cast ($uint<32>) indvarx_xnext) $on whilex_xbody88_whilex_xbody88 
    $endmerge
    tmp1 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add168 := (tmp1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add130 := (tmp12 + tmp1)
    add127 := (tmp14 + tmp1)
    add124 := (tmp16 + tmp1)
    add112 := (tmp11 + tmp1)
    add121 := (tmp24 + tmp1)
    add118 := (tmp26 + tmp1)
    add115 := (tmp28 + tmp1)
    add98 := (tmp22 + tmp1)
    shr132 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add98) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom133 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr132) )
    arrayidx134 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom133])
    // load 
    tmp135 := ->(arrayidx134) 
    shr137 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add112) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom138 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr137) )
    arrayidx139 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom138])
    ->(arrayidx139) := tmp135
    shr141 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add115) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom142 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr141) )
    arrayidx143 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom142])
    // load 
    tmp144 := ->(arrayidx143) 
    shr146 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom147 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr146) )
    arrayidx148 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom147])
    ->(arrayidx148) := tmp144
    shr150 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add118) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom151 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr150) )
    arrayidx152 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom151])
    // load 
    tmp153 := ->(arrayidx152) 
    shr155 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add127) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom156 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr155) )
    arrayidx157 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom156])
    ->(arrayidx157) := tmp153
    shr159 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add121) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom160 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr159) )
    arrayidx161 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom160])
    // load 
    tmp162 := ->(arrayidx161) 
    shr164 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add130) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom165 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr164) )
    arrayidx166 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom165])
    ->(arrayidx166) := tmp162
    // compare instruction
    cmp171 := ( ($bitcast ( $int<32>) add168) <   ($bitcast ( $int<32>) tmp ) )
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp171 $then  $place [whilex_xbody88_whilex_xbody88] $else $place [whilex_xbody88_ifx_xthen173] $endif 
    //begin: basic-block ifx_xthen173
    $merge whilex_xbody88_ifx_xthen173
    $endmerge
    inc175 := (jx_x1x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    div178 := (tmp2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    cmp179 := (inc175 == div178 )
    inc184 := ($cast ($uint<32>) cmp179)
    inc184x_xix_x1 := (inc184 + ix_x1x_xph)
    $if cmp179 $then  $place [ifx_xthen173_ifx_xthen181] $else $place [ifx_xthen173_whilex_xcond82x_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcond82x_xouterx_xbackedge
    $merge ifx_xthen173_whilex_xcond82x_xouterx_xbackedge ifx_xthen181_whilex_xcond82x_xouterx_xbackedge
    $phi jx_x1x_xphx_xbe :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on ifx_xthen181_whilex_xcond82x_xouterx_xbackedge ( $cast ($uint<32>) inc175) $on ifx_xthen173_whilex_xcond82x_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcond82x_xouterx_xbackedge_whilex_xcond82x_xouter]
    //begin: basic-block whilex_xcond82x_xouter
    $merge whilex_xcond82x_xouterx_xbackedge_whilex_xcond82x_xouter whilex_xcond82x_xouterx_xpreheader_whilex_xcond82x_xouter
    $phi jx_x1x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond82x_xouterx_xpreheader_whilex_xcond82x_xouter ( $cast ($uint<32>) jx_x1x_xphx_xbe) $on whilex_xcond82x_xouterx_xbackedge_whilex_xcond82x_xouter 
    $phi ix_x1x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond82x_xouterx_xpreheader_whilex_xcond82x_xouter ( $cast ($uint<32>) inc184x_xix_x1) $on whilex_xcond82x_xouterx_xbackedge_whilex_xcond82x_xouter 
    $endmerge
    // compare instruction
    cmp86 := (ix_x1x_xph < div )
    $if cmp86 $then  $place [whilex_xcond82x_xouter_whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge] $else $place [whilex_xcond82x_xouter_whilex_xend187x_xsplit] $endif 
    //begin: basic-block whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge
    $merge whilex_xcond82x_xouter_whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge
    $endmerge
    tmp4 := ($cast ($uint<32>) tmp19)
    tmp5 := (tmp4 + jx_x1x_xph)
    tmp7 := (tmp4 + ix_x1x_xph)
    tmp9 := (tmp8 * tmp7)
    tmp10 := (tmp5 + tmp9)
    tmp11 := (tmp6 * tmp10)
    tmp12 := (tmp11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp14 := (tmp11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp16 := (tmp11 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp20 := (tmp2 * ix_x1x_xph)
    tmp21 := (jx_x1x_xph + tmp20)
    tmp22 := (tmp * tmp21)
    tmp24 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp28 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcond82x_xouterx_xwhilex_xcond82x_xouterx_xsplit_crit_edge_whilex_xbody88]
    //begin: basic-block ifx_xthen181
    $merge ifx_xthen173_ifx_xthen181
    $endmerge
    $place [ifx_xthen181_whilex_xcond82x_xouterx_xbackedge]
    //begin: basic-block whilex_xend187x_xsplit
    $merge whilex_xcond82x_xouter_whilex_xend187x_xsplit
    $endmerge
    $barrier 
    Block0_complete := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D_B] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := Block1_starting
    $barrier 
    iNsTr_2 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp := ->(iNsTr_2) 
    div := (tmp >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_3 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp4 := ->(iNsTr_3) 
    iNsTr_4 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp10 := ->(iNsTr_4) 
    iNsTr_5 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp12 := ->(iNsTr_5) 
    // load 
    tmp23 := pad
    conv := ($cast ($uint<32>) tmp23)
    iNsTr_6 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp27 := ->(iNsTr_6) 
    div28 := (tmp27 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add := (div28 + conv)
    $place [entry_whilex_xcondx_xouter]
    //begin: basic-block whilex_xcondx_xouter
    $merge entry_whilex_xcondx_xouter whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter
    $phi jx_x0x_xph :=  ( $cast ($uint<32>) div) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) jx_x0x_xphx_xbe) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $phi ix_x0x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) inc83x_xix_x0) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $endmerge
    // compare instruction
    cmp := (ix_x0x_xph == add )
    $if cmp $then  $place [whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge] $else $place [whilex_xcondx_xouter_whilex_xcond86x_xouterx_xpreheader] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xpreheader
    $merge whilex_xcondx_xouter_whilex_xcond86x_xouterx_xpreheader
    $endmerge
    $place [whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter]
    //begin: basic-block whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $merge whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $endmerge
    tmp223 := (tmp12 * ix_x0x_xph)
    tmp224 := (jx_x0x_xph + tmp223)
    tmp225 := (tmp10 * tmp224)
    tmp226 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp228 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp230 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody]
    //begin: basic-block whilex_xbody
    $merge whilex_xbody_whilex_xbody whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody
    $phi indvar219 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody ( $cast ($uint<32>) indvarx_xnext220) $on whilex_xbody_whilex_xbody 
    $endmerge
    tmp31 := (indvar219 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add68 := (tmp31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add49 := (tmp226 + tmp31)
    add46 := (tmp228 + tmp31)
    add43 := (tmp230 + tmp31)
    add40 := (tmp225 + tmp31)
    shr :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add40) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr) )
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom])
    ->(arrayidx) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr54 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add43) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom55 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr54) )
    arrayidx56 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom55])
    ->(arrayidx56) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr59 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add46) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom60 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr59) )
    arrayidx61 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom60])
    ->(arrayidx61) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr64 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add49) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom65 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr64) )
    arrayidx66 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom65])
    ->(arrayidx66) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    // compare instruction
    cmp71 := ( ($bitcast ( $int<32>) add68) <   ($bitcast ( $int<32>) tmp10 ) )
    indvarx_xnext220 := (indvar219 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp71 $then  $place [whilex_xbody_whilex_xbody] $else $place [whilex_xbody_ifx_xthen] $endif 
    //begin: basic-block ifx_xthen
    $merge whilex_xbody_ifx_xthen
    $endmerge
    inc := (jx_x0x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add77 := (tmp + conv)
    // compare instruction
    cmp78 := (inc == add77 )
    inc83 := ($cast ($uint<32>) cmp78)
    inc83x_xix_x0 := (inc83 + ix_x0x_xph)
    $if cmp78 $then  $place [ifx_xthen_ifx_xthen80] $else $place [ifx_xthen_whilex_xcondx_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcondx_xouterx_xbackedge
    $merge ifx_xthen_whilex_xcondx_xouterx_xbackedge ifx_xthen80_whilex_xcondx_xouterx_xbackedge
    $phi jx_x0x_xphx_xbe :=  ( $cast ($uint<32>) div) $on ifx_xthen80_whilex_xcondx_xouterx_xbackedge ( $cast ($uint<32>) inc) $on ifx_xthen_whilex_xcondx_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter]
    //begin: basic-block ifx_xthen80
    $merge ifx_xthen_ifx_xthen80
    $endmerge
    $place [ifx_xthen80_whilex_xcondx_xouterx_xbackedge]
    //begin: basic-block whilex_xbody92
    $merge whilex_xbody92_whilex_xbody92 whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody92
    $phi indvar :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody92 ( $cast ($uint<32>) indvarx_xnext) $on whilex_xbody92_whilex_xbody92 
    $endmerge
    tmp1 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add172 := (tmp1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add134 := (tmp11 + tmp1)
    add131 := (tmp14 + tmp1)
    add128 := (tmp16 + tmp1)
    add116 := (tmp9 + tmp1)
    add125 := (tmp22 + tmp1)
    add122 := (tmp25 + tmp1)
    add119 := (tmp28 + tmp1)
    add102 := (tmp21 + tmp1)
    shr136 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add102) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom137 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr136) )
    arrayidx138 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom137])
    // load 
    tmp139 := ->(arrayidx138) 
    shr141 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add116) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom142 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr141) )
    arrayidx143 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom142])
    ->(arrayidx143) := tmp139
    shr145 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add119) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom146 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr145) )
    arrayidx147 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom146])
    // load 
    tmp148 := ->(arrayidx147) 
    shr150 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add128) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom151 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr150) )
    arrayidx152 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom151])
    ->(arrayidx152) := tmp148
    shr154 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add122) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom155 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr154) )
    arrayidx156 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom155])
    // load 
    tmp157 := ->(arrayidx156) 
    shr159 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add131) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom160 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr159) )
    arrayidx161 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom160])
    ->(arrayidx161) := tmp157
    shr163 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add125) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom164 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr163) )
    arrayidx165 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom164])
    // load 
    tmp166 := ->(arrayidx165) 
    shr168 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add134) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom169 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr168) )
    arrayidx170 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom169])
    ->(arrayidx170) := tmp166
    // compare instruction
    cmp175 := ( ($bitcast ( $int<32>) add172) <   ($bitcast ( $int<32>) tmp4 ) )
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp175 $then  $place [whilex_xbody92_whilex_xbody92] $else $place [whilex_xbody92_ifx_xthen177] $endif 
    //begin: basic-block ifx_xthen177
    $merge whilex_xbody92_ifx_xthen177
    $endmerge
    inc179 := (jx_x1x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    cmp182 := (inc179 == tmp )
    inc187 := ($cast ($uint<32>) cmp182)
    inc187x_xix_x1 := (inc187 + ix_x1x_xph)
    $if cmp182 $then  $place [ifx_xthen177_ifx_xthen184] $else $place [ifx_xthen177_whilex_xcond86x_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xbackedge
    $merge ifx_xthen177_whilex_xcond86x_xouterx_xbackedge ifx_xthen184_whilex_xcond86x_xouterx_xbackedge
    $phi jx_x1x_xphx_xbe :=  ( $cast ($uint<32>) div) $on ifx_xthen184_whilex_xcond86x_xouterx_xbackedge ( $cast ($uint<32>) inc179) $on ifx_xthen177_whilex_xcond86x_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter]
    //begin: basic-block whilex_xcond86x_xouter
    $merge whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter
    $phi jx_x1x_xph :=  ( $cast ($uint<32>) div) $on whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter ( $cast ($uint<32>) jx_x1x_xphx_xbe) $on whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter 
    $phi ix_x1x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter ( $cast ($uint<32>) inc187x_xix_x1) $on whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter 
    $endmerge
    // compare instruction
    cmp90 := (ix_x1x_xph < div28 )
    $if cmp90 $then  $place [whilex_xcond86x_xouter_whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge] $else $place [whilex_xcond86x_xouter_whilex_xend190x_xsplit] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge
    $merge whilex_xcond86x_xouter_whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge
    $endmerge
    tmp3 := ($cast ($uint<32>) tmp23)
    tmp5 := (tmp3 + jx_x1x_xph)
    tmp6 := (tmp3 + ix_x1x_xph)
    tmp7 := (tmp12 * tmp6)
    tmp8 := (tmp5 + tmp7)
    tmp9 := (tmp10 * tmp8)
    tmp11 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp14 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp16 := (tmp9 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp19 := (tmp * ix_x1x_xph)
    tmp20 := (jx_x1x_xph + tmp19)
    tmp21 := (tmp4 * tmp20)
    tmp22 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp25 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp28 := (tmp21 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody92]
    //begin: basic-block ifx_xthen184
    $merge ifx_xthen177_ifx_xthen184
    $endmerge
    $place [ifx_xthen184_whilex_xcond86x_xouterx_xbackedge]
    //begin: basic-block whilex_xend190x_xsplit
    $merge whilex_xcond86x_xouter_whilex_xend190x_xsplit
    $endmerge
    $barrier 
    Block1_complete := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D_C] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := Block2_starting
    $barrier 
    iNsTr_2 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp := ->(iNsTr_2) 
    div := (tmp >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_3 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp2 := ->(iNsTr_3) 
    iNsTr_4 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp4 := ->(iNsTr_4) 
    iNsTr_5 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp8 := ->(iNsTr_5) 
    iNsTr_6 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp10 := ->(iNsTr_6) 
    // load 
    tmp21 := pad
    conv := ($cast ($uint<32>) tmp21)
    add := (tmp + conv)
    $place [entry_whilex_xcondx_xouter]
    //begin: basic-block whilex_xcondx_xouter
    $merge entry_whilex_xcondx_xouter whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter
    $phi jx_x0x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) jx_x0x_xphx_xbe) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $phi ix_x0x_xph :=  ( $cast ($uint<32>) div) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) inc81x_xix_x0) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $endmerge
    // compare instruction
    cmp := (ix_x0x_xph == add )
    $if cmp $then  $place [whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge] $else $place [whilex_xcondx_xouter_whilex_xcond86x_xouterx_xpreheader] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xpreheader
    $merge whilex_xcondx_xouter_whilex_xcond86x_xouterx_xpreheader
    $endmerge
    $place [whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter]
    //begin: basic-block whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $merge whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $endmerge
    tmp223 := (tmp10 * ix_x0x_xph)
    tmp224 := (jx_x0x_xph + tmp223)
    tmp225 := (tmp8 * tmp224)
    tmp226 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp228 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp230 := (tmp225 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody]
    //begin: basic-block whilex_xbody
    $merge whilex_xbody_whilex_xbody whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody
    $phi indvar219 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody ( $cast ($uint<32>) indvarx_xnext220) $on whilex_xbody_whilex_xbody 
    $endmerge
    tmp31 := (indvar219 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add65 := (tmp31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add46 := (tmp226 + tmp31)
    add43 := (tmp228 + tmp31)
    add40 := (tmp230 + tmp31)
    add37 := (tmp225 + tmp31)
    shr :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add37) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr) )
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom])
    ->(arrayidx) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr51 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add40) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom52 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr51) )
    arrayidx53 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom52])
    ->(arrayidx53) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr56 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add43) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom57 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr56) )
    arrayidx58 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom57])
    ->(arrayidx58) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr61 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add46) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom62 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr61) )
    arrayidx63 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom62])
    ->(arrayidx63) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    // compare instruction
    cmp68 := ( ($bitcast ( $int<32>) add65) <   ($bitcast ( $int<32>) tmp8 ) )
    indvarx_xnext220 := (indvar219 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp68 $then  $place [whilex_xbody_whilex_xbody] $else $place [whilex_xbody_ifx_xthen] $endif 
    //begin: basic-block ifx_xthen
    $merge whilex_xbody_ifx_xthen
    $endmerge
    inc := (jx_x0x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    div73 := (tmp4 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add75 := (div73 + conv)
    // compare instruction
    cmp76 := (inc == add75 )
    inc81 := ($cast ($uint<32>) cmp76)
    inc81x_xix_x0 := (inc81 + ix_x0x_xph)
    $if cmp76 $then  $place [ifx_xthen_ifx_xthen78] $else $place [ifx_xthen_whilex_xcondx_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcondx_xouterx_xbackedge
    $merge ifx_xthen_whilex_xcondx_xouterx_xbackedge ifx_xthen78_whilex_xcondx_xouterx_xbackedge
    $phi jx_x0x_xphx_xbe :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on ifx_xthen78_whilex_xcondx_xouterx_xbackedge ( $cast ($uint<32>) inc) $on ifx_xthen_whilex_xcondx_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter]
    //begin: basic-block ifx_xthen78
    $merge ifx_xthen_ifx_xthen78
    $endmerge
    $place [ifx_xthen78_whilex_xcondx_xouterx_xbackedge]
    //begin: basic-block whilex_xcond86x_xouter
    $merge whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter
    $phi jx_x1x_xph :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter ( $cast ($uint<32>) jx_x1x_xphx_xbe) $on whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter 
    $phi ix_x1x_xph :=  ( $cast ($uint<32>) div) $on whilex_xcond86x_xouterx_xpreheader_whilex_xcond86x_xouter ( $cast ($uint<32>) inc187x_xix_x1) $on whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter 
    $endmerge
    // compare instruction
    cmp89 := (ix_x1x_xph < tmp )
    $if cmp89 $then  $place [whilex_xcond86x_xouter_whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge] $else $place [whilex_xcond86x_xouter_whilex_xend190x_xsplit] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge
    $merge whilex_xcond86x_xouter_whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge
    $endmerge
    tmp5 := ($cast ($uint<32>) tmp21)
    tmp6 := (tmp5 + jx_x1x_xph)
    tmp7 := (tmp5 + ix_x1x_xph)
    tmp9 := (tmp10 * tmp7)
    tmp11 := (tmp6 + tmp9)
    tmp12 := (tmp8 * tmp11)
    tmp13 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp15 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp17 := (tmp12 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp20 := (tmp4 * ix_x1x_xph)
    tmp22 := (jx_x1x_xph + tmp20)
    tmp23 := (tmp2 * tmp22)
    tmp24 := (tmp23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26 := (tmp23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp28 := (tmp23 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody91]
    //begin: basic-block whilex_xbody91
    $merge whilex_xbody91_whilex_xbody91 whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody91
    $phi indvar :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond86x_xouterx_xwhilex_xcond86x_xouterx_xsplit_crit_edge_whilex_xbody91 ( $cast ($uint<32>) indvarx_xnext) $on whilex_xbody91_whilex_xbody91 
    $endmerge
    tmp1 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add171 := (tmp1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add133 := (tmp13 + tmp1)
    add130 := (tmp15 + tmp1)
    add127 := (tmp17 + tmp1)
    add115 := (tmp12 + tmp1)
    add124 := (tmp24 + tmp1)
    add121 := (tmp26 + tmp1)
    add118 := (tmp28 + tmp1)
    add101 := (tmp23 + tmp1)
    shr135 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add101) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom136 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr135) )
    arrayidx137 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom136])
    // load 
    tmp138 := ->(arrayidx137) 
    shr140 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add115) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom141 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr140) )
    arrayidx142 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom141])
    ->(arrayidx142) := tmp138
    shr144 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add118) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom145 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr144) )
    arrayidx146 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom145])
    // load 
    tmp147 := ->(arrayidx146) 
    shr149 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add127) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom150 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr149) )
    arrayidx151 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom150])
    ->(arrayidx151) := tmp147
    shr153 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add121) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom154 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr153) )
    arrayidx155 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom154])
    // load 
    tmp156 := ->(arrayidx155) 
    shr158 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add130) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom159 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr158) )
    arrayidx160 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom159])
    ->(arrayidx160) := tmp156
    shr162 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom163 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr162) )
    arrayidx164 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom163])
    // load 
    tmp165 := ->(arrayidx164) 
    shr167 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add133) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom168 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr167) )
    arrayidx169 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom168])
    ->(arrayidx169) := tmp165
    // compare instruction
    cmp174 := ( ($bitcast ( $int<32>) add171) <   ($bitcast ( $int<32>) tmp2 ) )
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp174 $then  $place [whilex_xbody91_whilex_xbody91] $else $place [whilex_xbody91_ifx_xthen176] $endif 
    //begin: basic-block ifx_xthen176
    $merge whilex_xbody91_ifx_xthen176
    $endmerge
    inc178 := (jx_x1x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    div181 := (tmp4 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    cmp182 := (inc178 == div181 )
    inc187 := ($cast ($uint<32>) cmp182)
    inc187x_xix_x1 := (inc187 + ix_x1x_xph)
    $if cmp182 $then  $place [ifx_xthen176_ifx_xthen184] $else $place [ifx_xthen176_whilex_xcond86x_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcond86x_xouterx_xbackedge
    $merge ifx_xthen176_whilex_xcond86x_xouterx_xbackedge ifx_xthen184_whilex_xcond86x_xouterx_xbackedge
    $phi jx_x1x_xphx_xbe :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on ifx_xthen184_whilex_xcond86x_xouterx_xbackedge ( $cast ($uint<32>) inc178) $on ifx_xthen176_whilex_xcond86x_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcond86x_xouterx_xbackedge_whilex_xcond86x_xouter]
    //begin: basic-block ifx_xthen184
    $merge ifx_xthen176_ifx_xthen184
    $endmerge
    $place [ifx_xthen184_whilex_xcond86x_xouterx_xbackedge]
    //begin: basic-block whilex_xend190x_xsplit
    $merge whilex_xcond86x_xouter_whilex_xend190x_xsplit
    $endmerge
    $barrier 
    Block2_complete := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D_D] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    call := Block3_starting
    $barrier 
    iNsTr_2 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp := ->(iNsTr_2) 
    div := (tmp >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_3 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ])
    // load 
    tmp3 := ->(iNsTr_3) 
    div4 := (tmp3 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_4 := @(des_inp[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp6 := ->(iNsTr_4) 
    iNsTr_5 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ])
    // load 
    tmp12 := ->(iNsTr_5) 
    iNsTr_6 := @(des_out[( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) ][( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ])
    // load 
    tmp14 := ->(iNsTr_6) 
    // load 
    tmp25 := pad
    conv := ($cast ($uint<32>) tmp25)
    add := (tmp3 + conv)
    $place [entry_whilex_xcondx_xouter]
    //begin: basic-block whilex_xcondx_xouter
    $merge entry_whilex_xcondx_xouter whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter
    $phi jx_x0x_xph :=  ( $cast ($uint<32>) div) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) jx_x0x_xphx_xbe) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $phi ix_x0x_xph :=  ( $cast ($uint<32>) div4) $on entry_whilex_xcondx_xouter ( $cast ($uint<32>) inc84x_xix_x0) $on whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter 
    $endmerge
    // compare instruction
    cmp := (ix_x0x_xph == add )
    $if cmp $then  $place [whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge] $else $place [whilex_xcondx_xouter_whilex_xcond89x_xouterx_xpreheader] $endif 
    //begin: basic-block whilex_xcond89x_xouterx_xpreheader
    $merge whilex_xcondx_xouter_whilex_xcond89x_xouterx_xpreheader
    $endmerge
    $place [whilex_xcond89x_xouterx_xpreheader_whilex_xcond89x_xouter]
    //begin: basic-block whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $merge whilex_xcondx_xouter_whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge
    $endmerge
    tmp225 := (tmp14 * ix_x0x_xph)
    tmp226 := (jx_x0x_xph + tmp225)
    tmp227 := (tmp12 * tmp226)
    tmp228 := (tmp227 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp230 := (tmp227 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp232 := (tmp227 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody]
    //begin: basic-block whilex_xbody
    $merge whilex_xbody_whilex_xbody whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody
    $phi indvar221 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcondx_xouterx_xwhilex_xcondx_xouterx_xsplit_crit_edge_whilex_xbody ( $cast ($uint<32>) indvarx_xnext222) $on whilex_xbody_whilex_xbody 
    $endmerge
    tmp31 := (indvar221 * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add69 := (tmp31 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add50 := (tmp228 + tmp31)
    add47 := (tmp230 + tmp31)
    add44 := (tmp232 + tmp31)
    add41 := (tmp227 + tmp31)
    shr :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add41) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr) )
    arrayidx := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom])
    ->(arrayidx) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr55 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add44) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom56 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr55) )
    arrayidx57 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom56])
    ->(arrayidx57) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr60 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add47) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom61 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr60) )
    arrayidx62 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom61])
    ->(arrayidx62) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    shr65 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add50) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom66 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr65) )
    arrayidx67 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom66])
    ->(arrayidx67) := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
    // compare instruction
    cmp72 := ( ($bitcast ( $int<32>) add69) <   ($bitcast ( $int<32>) tmp12 ) )
    indvarx_xnext222 := (indvar221 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp72 $then  $place [whilex_xbody_whilex_xbody] $else $place [whilex_xbody_ifx_xthen] $endif 
    //begin: basic-block ifx_xthen
    $merge whilex_xbody_ifx_xthen
    $endmerge
    inc := (jx_x0x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    add78 := (tmp + conv)
    // compare instruction
    cmp79 := (inc == add78 )
    inc84 := ($cast ($uint<32>) cmp79)
    inc84x_xix_x0 := (inc84 + ix_x0x_xph)
    $if cmp79 $then  $place [ifx_xthen_ifx_xthen81] $else $place [ifx_xthen_whilex_xcondx_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcondx_xouterx_xbackedge
    $merge ifx_xthen_whilex_xcondx_xouterx_xbackedge ifx_xthen81_whilex_xcondx_xouterx_xbackedge
    $phi jx_x0x_xphx_xbe :=  ( $cast ($uint<32>) div) $on ifx_xthen81_whilex_xcondx_xouterx_xbackedge ( $cast ($uint<32>) inc) $on ifx_xthen_whilex_xcondx_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcondx_xouterx_xbackedge_whilex_xcondx_xouter]
    //begin: basic-block ifx_xthen81
    $merge ifx_xthen_ifx_xthen81
    $endmerge
    $place [ifx_xthen81_whilex_xcondx_xouterx_xbackedge]
    //begin: basic-block whilex_xcond89x_xouter
    $merge whilex_xcond89x_xouterx_xbackedge_whilex_xcond89x_xouter whilex_xcond89x_xouterx_xpreheader_whilex_xcond89x_xouter
    $phi jx_x1x_xph :=  ( $cast ($uint<32>) div) $on whilex_xcond89x_xouterx_xpreheader_whilex_xcond89x_xouter ( $cast ($uint<32>) jx_x1x_xphx_xbe) $on whilex_xcond89x_xouterx_xbackedge_whilex_xcond89x_xouter 
    $phi ix_x1x_xph :=  ( $cast ($uint<32>) div4) $on whilex_xcond89x_xouterx_xpreheader_whilex_xcond89x_xouter ( $cast ($uint<32>) inc189x_xix_x1) $on whilex_xcond89x_xouterx_xbackedge_whilex_xcond89x_xouter 
    $endmerge
    // compare instruction
    cmp92 := (ix_x1x_xph < tmp3 )
    $if cmp92 $then  $place [whilex_xcond89x_xouter_whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge] $else $place [whilex_xcond89x_xouter_whilex_xend192x_xsplit] $endif 
    //begin: basic-block whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge
    $merge whilex_xcond89x_xouter_whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge
    $endmerge
    tmp4 := ($cast ($uint<32>) tmp25)
    tmp5 := (tmp4 + jx_x1x_xph)
    tmp7 := (tmp4 + ix_x1x_xph)
    tmp8 := (tmp14 * tmp7)
    tmp9 := (tmp5 + tmp8)
    tmp10 := (tmp12 * tmp9)
    tmp11 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp15 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp17 := (tmp10 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    tmp20 := (tmp * ix_x1x_xph)
    tmp21 := (jx_x1x_xph + tmp20)
    tmp22 := (tmp6 * tmp21)
    tmp23 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
    tmp26 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
    tmp28 := (tmp22 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $place [whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge_whilex_xbody94]
    //begin: basic-block whilex_xbody94
    $merge whilex_xbody94_whilex_xbody94 whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge_whilex_xbody94
    $phi indvar :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on whilex_xcond89x_xouterx_xwhilex_xcond89x_xouterx_xsplit_crit_edge_whilex_xbody94 ( $cast ($uint<32>) indvarx_xnext) $on whilex_xbody94_whilex_xbody94 
    $endmerge
    tmp1 := (indvar * ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add174 := (tmp1 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 ) )
    add136 := (tmp11 + tmp1)
    add133 := (tmp15 + tmp1)
    add130 := (tmp17 + tmp1)
    add118 := (tmp10 + tmp1)
    add127 := (tmp23 + tmp1)
    add124 := (tmp26 + tmp1)
    add121 := (tmp28 + tmp1)
    add104 := (tmp22 + tmp1)
    shr138 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add104) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom139 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr138) )
    arrayidx140 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom139])
    // load 
    tmp141 := ->(arrayidx140) 
    shr143 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add118) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom144 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr143) )
    arrayidx145 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom144])
    ->(arrayidx145) := tmp141
    shr147 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add121) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom148 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr147) )
    arrayidx149 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom148])
    // load 
    tmp150 := ->(arrayidx149) 
    shr152 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add130) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom153 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr152) )
    arrayidx154 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom153])
    ->(arrayidx154) := tmp150
    shr156 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add124) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom157 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr156) )
    arrayidx158 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom157])
    // load 
    tmp159 := ->(arrayidx158) 
    shr161 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add133) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom162 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr161) )
    arrayidx163 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom162])
    ->(arrayidx163) := tmp159
    shr165 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add127) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom166 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr165) )
    arrayidx167 := @(T[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom166])
    // load 
    tmp168 := ->(arrayidx167) 
    shr170 :=  ($bitcast ($uint<32>) ( ($bitcast ( $int<32>) add136) >>  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )))
    idxprom171 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) shr170) )
    arrayidx172 := @(R[( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ][idxprom171])
    ->(arrayidx172) := tmp168
    // compare instruction
    cmp177 := ( ($bitcast ( $int<32>) add174) <   ($bitcast ( $int<32>) tmp6 ) )
    indvarx_xnext := (indvar + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if cmp177 $then  $place [whilex_xbody94_whilex_xbody94] $else $place [whilex_xbody94_ifx_xthen179] $endif 
    //begin: basic-block ifx_xthen179
    $merge whilex_xbody94_ifx_xthen179
    $endmerge
    inc181 := (jx_x1x_xph + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    cmp184 := (inc181 == tmp )
    inc189 := ($cast ($uint<32>) cmp184)
    inc189x_xix_x1 := (inc189 + ix_x1x_xph)
    $if cmp184 $then  $place [ifx_xthen179_ifx_xthen186] $else $place [ifx_xthen179_whilex_xcond89x_xouterx_xbackedge] $endif 
    //begin: basic-block whilex_xcond89x_xouterx_xbackedge
    $merge ifx_xthen179_whilex_xcond89x_xouterx_xbackedge ifx_xthen186_whilex_xcond89x_xouterx_xbackedge
    $phi jx_x1x_xphx_xbe :=  ( $cast ($uint<32>) div) $on ifx_xthen186_whilex_xcond89x_xouterx_xbackedge ( $cast ($uint<32>) inc181) $on ifx_xthen179_whilex_xcond89x_xouterx_xbackedge 
    $endmerge
    $place [whilex_xcond89x_xouterx_xbackedge_whilex_xcond89x_xouter]
    //begin: basic-block ifx_xthen186
    $merge ifx_xthen179_ifx_xthen186
    $endmerge
    $place [ifx_xthen186_whilex_xcond89x_xouterx_xbackedge]
    //begin: basic-block whilex_xend192x_xsplit
    $merge whilex_xcond89x_xouter_whilex_xend192x_xsplit
    $endmerge
    $barrier 
    Block3_complete := call
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [zeropad3D] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block entry
    $call testConfigure ()  (call)
    $barrier 
    $call timer ()  (call1)
    conv :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call1) )
    Block0_starting := call
    Block1_starting := call
    Block2_starting := call
    Block3_starting := call
    call6 := Block0_complete
    call8 := Block1_complete
    call10 := Block2_complete
    call12 := Block3_complete
    $barrier 
    $call timer ()  (call14)
    conv15 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) call14) )
    sub := (conv15 - conv)
    elapsed_time_pipe := sub
    $barrier 
    $call sendOutput ()  ()
    $place [return__]
    $merge return__ $endmerge
  }
}
