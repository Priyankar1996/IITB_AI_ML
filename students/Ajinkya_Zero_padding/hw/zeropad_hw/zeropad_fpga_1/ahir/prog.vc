// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  Block0_complete : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block0_complete] 8 $depth 1 
// $pipe  Block0_starting : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [Block0_starting] 8 $depth 1 
// $pipe  zeropad_input_pipe : $uint<8>  $depth 2 
// can point into 
// in scope  top-level
$pipe [zeropad_input_pipe] 8 $depth 2 
// $pipe  zeropad_output_pipe : $uint<8>  $depth 2 
// can point into 
// in scope  top-level
$pipe [zeropad_output_pipe] 8 $depth 2 
// load store constants for object R
$constant $W[R_base_address] : $int<14> := _b00000000000000
// load store constants for object T
$constant $W[T_base_address] : $int<14> := _b00000000000000
// load store constants for object des_inp
$constant $W[des_inp_base_address] : $int<9> := _b000000000
// load store constants for object des_out
$constant $W[des_out_base_address] : $int<7> := _b0000000
// load store constants for object pad
$constant $W[pad_base_address] : $int<1> := _b0
// Declared gated clocks.
$memoryspace [memory_space_0] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  R :  structx_x__SizedTensor_16K  // memory space index = 0  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [R] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_1] 
{
  $capacity 16384
  $datawidth 64
  $addrwidth 14
  $maxaccesswidth 64
  // $storage  T :  structx_x__SizedTensor_16K  // memory space index = 1  base address = 0  word size = 64
  // can point into 
  // in scope  top-level
  $object [T] : $record  < $array[16384] $of $int<64> > 
}
$memoryspace [memory_space_2] 
{
  $capacity 265
  $datawidth 8
  $addrwidth 9
  $maxaccesswidth 32
  // $storage  des_inp :  structx_x__TensorDescriptor  // memory space index = 2  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [des_inp] : $record  < $int<32> >  < $int<8> >  < $int<32> >  < $array[64] $of $int<32> > 
}
$memoryspace [memory_space_3] 
{
  $capacity 66
  $datawidth 32
  $addrwidth 7
  $maxaccesswidth 32
  // $storage  des_out :  structx_x__TensorDescriptor  // memory space index = 3  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [des_out] : $record  < $int<32> >  < $int<8> >  < $int<32> >  < $array[64] $of $int<32> > 
}
$memoryspace [memory_space_4] 
{
  $capacity 1
  $datawidth 8
  $addrwidth 1
  $maxaccesswidth 8
  // $storage  pad : $uint<8> // memory space index = 4  base address = 0  word size = 8
  // can point into 
  // in scope  top-level
  $object [pad] : $int<8>
}
$module [progx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 21
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 21
  }
  // end data-path
  $attribute initializer => ""
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 29
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 34
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_20] 
    {
      ::[call_stmt_21] 
      {
        // start: 		$call progx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 36
        $T[call_stmt_21_sample_start_] 
        $T[call_stmt_21_sample_completed_] 
        $T[call_stmt_21_update_start_] 
        $T[call_stmt_21_update_completed_] 
        ;;[call_stmt_21_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_21_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_21_sample_start_ &-> (call_stmt_21_Sample)
        call_stmt_21_sample_completed_ <-& (call_stmt_21_Sample)
        call_stmt_21_sample_completed_ &-> ($null)
        call_stmt_21_update_start_ &-> (call_stmt_21_Update)
        call_stmt_21_update_completed_ <-& (call_stmt_21_Update)
        // end: 		$call progx_xoptx_xo_storage_initializer_ () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 34
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 29
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 34
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 36
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 34
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 36
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 34
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 36
    $call [call_stmt_21_call] $module progx_xoptx_xo_storage_initializer_() ()  
    $delay call_stmt_21_call 4
  }
  // end data-path
  // 		$call progx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 36
  call_stmt_21_call <=> (parallel_block_stmt_20/call_stmt_21/call_stmt_21_Sample/crr parallel_block_stmt_20/call_stmt_21/call_stmt_21_Update/ccr) (parallel_block_stmt_20/call_stmt_21/call_stmt_21_Sample/cra parallel_block_stmt_20/call_stmt_21/call_stmt_21_Update/cca)
}
$module [sendOutput] 
{
  // pipe-declarations for block %sendOutput
  //  file prog.linked.opt.aa, line 39
  // pipe-declarations for block %sendOutput%body
  //  file prog.linked.opt.aa, line 44
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 62
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 71
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 107
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 110
  // pipe-declarations for block %sendOutput%body%
  //  file prog.linked.opt.aa, line 113
  // memory-space 3 is read from.
  // memory-space 0 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_25] // Branch Block  file prog.linked.opt.aa, line 44
    {
      $P [branch_block_stmt_25__entry__]
      branch_block_stmt_25__entry__ <-| ($entry)
      $P [branch_block_stmt_25__exit__]
      branch_block_stmt_25__exit__ |-> ($exit)
      $P [assign_stmt_33_to_assign_stmt_88__entry__] 
      $P [assign_stmt_33_to_assign_stmt_88__exit__] 
      $P [if_stmt_89__entry__] 
      $P [if_stmt_89__exit__] 
      $P [merge_stmt_95__entry__] 
      $P [merge_stmt_95__exit__] 
      $P [assign_stmt_100_to_assign_stmt_128__entry__] 
      $P [assign_stmt_100_to_assign_stmt_128__exit__] 
      $P [bbx_xnph_forx_xbody]
      $P [merge_stmt_130__exit__] 
      $P [assign_stmt_145_to_assign_stmt_258__entry__] 
      $P [assign_stmt_145_to_assign_stmt_258__exit__] 
      $P [if_stmt_259__entry__] 
      $P [if_stmt_259__exit__] 
      $P [merge_stmt_265__entry__] 
      $P [merge_stmt_265__exit__] 
      $P [forx_xendx_xloopexit_forx_xend]
      $P [merge_stmt_267__exit__] 
      $P [return__]
      $P [merge_stmt_269__exit__] 
      ::[assign_stmt_33_to_assign_stmt_88] 
      {
        // start:  		iNsTr_0 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 46
        // constant! 
        // end:  		iNsTr_0 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 47
        // Source expression
        // ->(iNsTr_0)
        $T[ptr_deref_36_sample_start_] 
        $T[ptr_deref_36_sample_completed_] 
        $T[ptr_deref_36_update_start_] 
        $T[ptr_deref_36_update_completed_] 
        $T[ptr_deref_36_base_address_calculated] 
        // iNsTr_0
        $T[ptr_deref_36_word_address_calculated] 
        $T[ptr_deref_36_root_address_calculated] 
        $T[ptr_deref_36_base_address_resized] 
        ;;[ptr_deref_36_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_36_base_address_calculated &-> (ptr_deref_36_base_addr_resize)
        ptr_deref_36_base_address_resized <-& (ptr_deref_36_base_addr_resize)
        ;;[ptr_deref_36_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_36_base_address_resized &-> (ptr_deref_36_base_plus_offset)
        ptr_deref_36_root_address_calculated <-& (ptr_deref_36_base_plus_offset)
        ;;[ptr_deref_36_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_36_root_address_calculated &-> (ptr_deref_36_word_addrgen)
        ptr_deref_36_word_address_calculated <-& (ptr_deref_36_word_addrgen)
        ;;[ptr_deref_36_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_36_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_36_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_36_sample_start_ <-& (ptr_deref_36_word_address_calculated)
        ptr_deref_36_sample_start_ &-> (ptr_deref_36_Sample)
        ptr_deref_36_sample_completed_ <-& (ptr_deref_36_Sample)
        ptr_deref_36_sample_completed_ &-> ($null)
        ptr_deref_36_update_start_ &-> (ptr_deref_36_Update)
        ptr_deref_36_update_completed_ <-& (ptr_deref_36_Update)
        // start: Forward dependencies from iNsTr_0 to transition ptr_deref_36_base_address_calculated
        // done: Forward dependencies from iNsTr_0 to transition ptr_deref_36_base_address_calculated
        ptr_deref_36_sample_start_ <-& (ptr_deref_36_base_address_calculated)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_1 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 48
        // constant! 
        // end:  		iNsTr_1 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 49
        // Source expression
        // ->(iNsTr_1)
        $T[ptr_deref_48_sample_start_] 
        $T[ptr_deref_48_sample_completed_] 
        $T[ptr_deref_48_update_start_] 
        $T[ptr_deref_48_update_completed_] 
        $T[ptr_deref_48_base_address_calculated] 
        // iNsTr_1
        $T[ptr_deref_48_word_address_calculated] 
        $T[ptr_deref_48_root_address_calculated] 
        $T[ptr_deref_48_base_address_resized] 
        ;;[ptr_deref_48_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_48_base_address_calculated &-> (ptr_deref_48_base_addr_resize)
        ptr_deref_48_base_address_resized <-& (ptr_deref_48_base_addr_resize)
        ;;[ptr_deref_48_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_48_base_address_resized &-> (ptr_deref_48_base_plus_offset)
        ptr_deref_48_root_address_calculated <-& (ptr_deref_48_base_plus_offset)
        ;;[ptr_deref_48_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_48_root_address_calculated &-> (ptr_deref_48_word_addrgen)
        ptr_deref_48_word_address_calculated <-& (ptr_deref_48_word_addrgen)
        ;;[ptr_deref_48_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_48_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_48_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_48_sample_start_ <-& (ptr_deref_48_word_address_calculated)
        ptr_deref_48_sample_start_ &-> (ptr_deref_48_Sample)
        ptr_deref_48_sample_completed_ <-& (ptr_deref_48_Sample)
        ptr_deref_48_sample_completed_ &-> ($null)
        ptr_deref_48_update_start_ &-> (ptr_deref_48_Update)
        ptr_deref_48_update_completed_ <-& (ptr_deref_48_Update)
        // start: Forward dependencies from iNsTr_1 to transition ptr_deref_48_base_address_calculated
        // done: Forward dependencies from iNsTr_1 to transition ptr_deref_48_base_address_calculated
        ptr_deref_48_sample_start_ <-& (ptr_deref_48_base_address_calculated)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_2 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 50
        // constant! 
        // end:  		iNsTr_2 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 51
        // Source expression
        // ->(iNsTr_2)
        $T[ptr_deref_60_sample_start_] 
        $T[ptr_deref_60_sample_completed_] 
        $T[ptr_deref_60_update_start_] 
        $T[ptr_deref_60_update_completed_] 
        $T[ptr_deref_60_base_address_calculated] 
        // iNsTr_2
        $T[ptr_deref_60_word_address_calculated] 
        $T[ptr_deref_60_root_address_calculated] 
        $T[ptr_deref_60_base_address_resized] 
        ;;[ptr_deref_60_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_60_base_address_calculated &-> (ptr_deref_60_base_addr_resize)
        ptr_deref_60_base_address_resized <-& (ptr_deref_60_base_addr_resize)
        ;;[ptr_deref_60_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_60_base_address_resized &-> (ptr_deref_60_base_plus_offset)
        ptr_deref_60_root_address_calculated <-& (ptr_deref_60_base_plus_offset)
        ;;[ptr_deref_60_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_60_root_address_calculated &-> (ptr_deref_60_word_addrgen)
        ptr_deref_60_word_address_calculated <-& (ptr_deref_60_word_addrgen)
        ;;[ptr_deref_60_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_60_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_60_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_60_sample_start_ <-& (ptr_deref_60_word_address_calculated)
        ptr_deref_60_sample_start_ &-> (ptr_deref_60_Sample)
        ptr_deref_60_sample_completed_ <-& (ptr_deref_60_Sample)
        ptr_deref_60_sample_completed_ &-> ($null)
        ptr_deref_60_update_start_ &-> (ptr_deref_60_Update)
        ptr_deref_60_update_completed_ <-& (ptr_deref_60_Update)
        // start: Forward dependencies from iNsTr_2 to transition ptr_deref_60_base_address_calculated
        // done: Forward dependencies from iNsTr_2 to transition ptr_deref_60_base_address_calculated
        ptr_deref_60_sample_start_ <-& (ptr_deref_60_base_address_calculated)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (tmp1 * tmp) $buffering 1
        //  file prog.linked.opt.aa, line 52
        // volatile! 
        // Source expression
        // (tmp1 * tmp)
        // tmp1
        // tmp
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (tmp1 * tmp) $buffering 1
        // start: WAR dependencies for mul3
        // done: WAR dependencies for mul3
        // start:  		$volatile mul3 := (mul * tmp2) $buffering 1
        //  file prog.linked.opt.aa, line 53
        // volatile! 
        // Source expression
        // (mul * tmp2)
        // mul
        // tmp2
        // Target expression
        // (as target) mul3
        // start: WAR dependencies for mul3
        // done: WAR dependencies for mul3
        // end:  		$volatile mul3 := (mul * tmp2) $buffering 1
        // start:  		conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 54
        // Source expression
        // ($cast ($uint<64>) mul3 )
        $T[type_cast_74_sample_start_] 
        $T[type_cast_74_sample_completed_] 
        $T[type_cast_74_update_start_] 
        $T[type_cast_74_update_completed_] 
        // mul3
        // start: Forward dependencies from mul3 to transition type_cast_74_sample_start_
        type_cast_74_sample_start_ <-& (ptr_deref_60_update_completed_)
        type_cast_74_sample_start_ <-& (ptr_deref_36_update_completed_)
        type_cast_74_sample_start_ <-& (ptr_deref_48_update_completed_)
        // done: Forward dependencies from mul3 to transition type_cast_74_sample_start_
        ;;[type_cast_74_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_74_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_74_sample_start_ &-> (type_cast_74_Sample)
        type_cast_74_sample_completed_ <-& (type_cast_74_Sample)
        type_cast_74_sample_completed_ &-> ($null)
        type_cast_74_update_start_ &-> (type_cast_74_Update)
        type_cast_74_update_completed_ <-& (type_cast_74_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shr76x_xmask
        // done: WAR dependencies for shr76x_xmask
        // start:  		$volatile shr76x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
        //  file prog.linked.opt.aa, line 55
        // volatile! 
        // Source expression
        // (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
        // conv
        // Target expression
        // (as target) shr76x_xmask
        // start: WAR dependencies for shr76x_xmask
        // done: WAR dependencies for shr76x_xmask
        // end:  		$volatile shr76x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
        // start: WAR dependencies for cmp77
        // done: WAR dependencies for cmp77
        // start:  		$volatile cmp77 := (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        //  file prog.linked.opt.aa, line 56
        // volatile! 
        // Source expression
        // (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        // shr76x_xmask
        // Target expression
        // (as target) cmp77
        // start: WAR dependencies for cmp77
        // done: WAR dependencies for cmp77
        // end:  		$volatile cmp77 := (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_3
        //  ptr_deref_36 load
        //  ptr_deref_48 load
        //  ptr_deref_60 load
      }
      assign_stmt_33_to_assign_stmt_88__entry__ |-> (assign_stmt_33_to_assign_stmt_88)
      assign_stmt_33_to_assign_stmt_88__exit__ <-| (assign_stmt_33_to_assign_stmt_88)
      // if-statement  
      //  file prog.linked.opt.aa, line 57
      ;;[if_stmt_89_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_89__entry__ |-> (if_stmt_89_dead_link)
      if_stmt_89__exit__ <-| (if_stmt_89_dead_link)
      ;;[if_stmt_89_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_89__entry__ |-> (if_stmt_89_eval_test)
      $P [R_cmp77_90_place]
      R_cmp77_90_place <-| (if_stmt_89_eval_test)
      ;;[if_stmt_89_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_89_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp77_90_place |-> (if_stmt_89_if_link if_stmt_89_else_link)
      $P [entry_forx_xend]
      entry_forx_xend <-| (if_stmt_89_if_link)
      $P [entry_bbx_xnph]
      entry_bbx_xnph <-| (if_stmt_89_else_link)
      ::[assign_stmt_100_to_assign_stmt_128] 
      {
        // start: WAR dependencies for tmp3
        // ignored out-of-scope w_root 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp3
        // start:  		$volatile tmp3 := (tmp1 * tmp) $buffering 1
        //  file prog.linked.opt.aa, line 64
        // volatile! 
        // Source expression
        // (tmp1 * tmp)
        // tmp1
        // tmp
        // Target expression
        // (as target) tmp3
        // start: WAR dependencies for tmp3
        // ignored out-of-scope w_root 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp3
        // end:  		$volatile tmp3 := (tmp1 * tmp) $buffering 1
        // start: WAR dependencies for tmp4
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp4
        // start:  		$volatile tmp4 := (tmp3 * tmp2) $buffering 1
        //  file prog.linked.opt.aa, line 65
        // volatile! 
        // Source expression
        // (tmp3 * tmp2)
        // tmp3
        // tmp2
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp4
        // end:  		$volatile tmp4 := (tmp3 * tmp2) $buffering 1
        // start:  		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 66
        // Source expression
        // ($cast ($uint<64>) tmp4 )
        $T[type_cast_108_sample_start_] 
        $T[type_cast_108_sample_completed_] 
        $T[type_cast_108_update_start_] 
        $T[type_cast_108_update_completed_] 
        // tmp4
        // start: Forward dependencies from tmp4 to transition type_cast_108_sample_start_
        // done: Forward dependencies from tmp4 to transition type_cast_108_sample_start_
        ;;[type_cast_108_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_108_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_108_sample_start_ &-> (type_cast_108_Sample)
        type_cast_108_sample_completed_ <-& (type_cast_108_Sample)
        type_cast_108_sample_completed_ &-> ($null)
        type_cast_108_update_start_ &-> (type_cast_108_Update)
        type_cast_108_update_completed_ <-& (type_cast_108_Update)
        // Target expression
        // (as target) tmp5
        // start: WAR dependencies for tmp5
        // done: WAR dependencies for tmp5
        // end:  		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // start:  		$volatile tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        //  file prog.linked.opt.aa, line 67
        // volatile! 
        // Source expression
        // (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
        // tmp5
        // Target expression
        // (as target) tmp6
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // end:  		$volatile tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // start:  		$volatile tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 68
        // volatile! 
        // Source expression
        // (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // tmp6
        // Target expression
        // (as target) tmp7
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // end:  		$volatile tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for umax8
        // done: WAR dependencies for umax8
        // start:  		$volatile umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 69
        // volatile! 
        // Source expression
        // ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp7
        // tmp6
        // Target expression
        // (as target) umax8
        // start: WAR dependencies for umax8
        // done: WAR dependencies for umax8
        // end:  		$volatile umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_100_to_assign_stmt_128__entry__ |-> (assign_stmt_100_to_assign_stmt_128)
      assign_stmt_100_to_assign_stmt_128__exit__ <-| (assign_stmt_100_to_assign_stmt_128)
      ::[assign_stmt_145_to_assign_stmt_258] 
      {
        // start:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 75
        // Source expression
        // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
        $T[addr_of_144_sample_start_] 
        $T[addr_of_144_sample_completed_] 
        $T[addr_of_144_update_start_] 
        $T[addr_of_144_update_completed_] 
        $T[array_obj_ref_143_root_address_calculated] 
        $T[array_obj_ref_143_offset_calculated] 
        $T[array_obj_ref_143_index_resized_1] 
        $T[array_obj_ref_143_index_scaled_1] 
        $T[array_obj_ref_143_index_computed_1] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_143_index_computed_1
        // done: Forward dependencies from indvar to transition array_obj_ref_143_index_computed_1
        ;;[array_obj_ref_143_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_143_index_computed_1 &-> (array_obj_ref_143_index_resize_1)
        array_obj_ref_143_index_resized_1 <-& (array_obj_ref_143_index_resize_1)
        ;;[array_obj_ref_143_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_143_index_resized_1 &-> (array_obj_ref_143_index_scale_1)
        array_obj_ref_143_index_scaled_1 <-& (array_obj_ref_143_index_scale_1)
        $T[array_obj_ref_143_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_143_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_143_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_143_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_143_index_scaled_1 &-> (array_obj_ref_143_final_index_sum_regn_Sample)
        array_obj_ref_143_final_index_sum_regn_sample_complete <-& (array_obj_ref_143_final_index_sum_regn_Sample)
        array_obj_ref_143_final_index_sum_regn_update_start &-> (array_obj_ref_143_final_index_sum_regn_Update)
        array_obj_ref_143_offset_calculated <-& (array_obj_ref_143_final_index_sum_regn_Update)
        ;;[array_obj_ref_143_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_143_offset_calculated &-> (array_obj_ref_143_base_plus_offset)
        array_obj_ref_143_root_address_calculated <-& (array_obj_ref_143_base_plus_offset)
        ;;[addr_of_144_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_144_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_144_sample_start_ <-& (array_obj_ref_143_root_address_calculated)
        addr_of_144_sample_start_ &-> (addr_of_144_request)
        addr_of_144_sample_completed_ <-& (addr_of_144_request)
        addr_of_144_sample_completed_ &-> ($null)
        addr_of_144_update_start_ &-> (addr_of_144_complete)
        addr_of_144_update_completed_ <-& (addr_of_144_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 76
        // Source expression
        // ->(arrayidx)
        $T[ptr_deref_148_sample_start_] 
        $T[ptr_deref_148_sample_completed_] 
        $T[ptr_deref_148_update_start_] 
        $T[ptr_deref_148_update_completed_] 
        $T[ptr_deref_148_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_148_word_address_calculated] 
        $T[ptr_deref_148_root_address_calculated] 
        $T[ptr_deref_148_base_address_resized] 
        ;;[ptr_deref_148_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_148_base_address_calculated &-> (ptr_deref_148_base_addr_resize)
        ptr_deref_148_base_address_resized <-& (ptr_deref_148_base_addr_resize)
        ;;[ptr_deref_148_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_148_base_address_resized &-> (ptr_deref_148_base_plus_offset)
        ptr_deref_148_root_address_calculated <-& (ptr_deref_148_base_plus_offset)
        ;;[ptr_deref_148_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_148_root_address_calculated &-> (ptr_deref_148_word_addrgen)
        ptr_deref_148_word_address_calculated <-& (ptr_deref_148_word_addrgen)
        ;;[ptr_deref_148_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_148_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_148_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_148_sample_start_ <-& (ptr_deref_148_word_address_calculated)
        ptr_deref_148_sample_start_ &-> (ptr_deref_148_Sample)
        ptr_deref_148_sample_completed_ <-& (ptr_deref_148_Sample)
        ptr_deref_148_sample_completed_ &-> ($null)
        ptr_deref_148_update_start_ &-> (ptr_deref_148_Update)
        ptr_deref_148_update_completed_ <-& (ptr_deref_148_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_148_base_address_calculated
        ptr_deref_148_base_address_calculated <-& (addr_of_144_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_148_base_address_calculated
        ptr_deref_148_sample_start_ <-& (ptr_deref_148_base_address_calculated)
        // Target expression
        // (as target) tmp11
        // start: WAR dependencies for tmp11
        // done: WAR dependencies for tmp11
        // end:  		tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
        // start:  		conv14 := ($cast ($uint<8>) tmp11 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 77
        // Source expression
        // ($cast ($uint<8>) tmp11 )
        $T[type_cast_152_sample_start_] 
        $T[type_cast_152_sample_completed_] 
        $T[type_cast_152_update_start_] 
        $T[type_cast_152_update_completed_] 
        // tmp11
        // start: Forward dependencies from tmp11 to transition type_cast_152_sample_start_
        type_cast_152_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from tmp11 to transition type_cast_152_sample_start_
        ;;[type_cast_152_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_152_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_152_sample_start_ &-> (type_cast_152_Sample)
        type_cast_152_sample_completed_ <-& (type_cast_152_Sample)
        type_cast_152_sample_completed_ &-> ($null)
        type_cast_152_update_start_ &-> (type_cast_152_Update)
        type_cast_152_update_completed_ <-& (type_cast_152_Update)
        // Target expression
        // (as target) conv14
        // start: WAR dependencies for conv14
        // done: WAR dependencies for conv14
        // end:  		conv14 := ($cast ($uint<8>) tmp11 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr17
        // done: WAR dependencies for shr17
        // start:  		$volatile shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 78
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // tmp11
        // Target expression
        // (as target) shr17
        // start: WAR dependencies for shr17
        // done: WAR dependencies for shr17
        // end:  		$volatile shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		conv20 := ($cast ($uint<8>) shr17 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 79
        // Source expression
        // ($cast ($uint<8>) shr17 )
        $T[type_cast_162_sample_start_] 
        $T[type_cast_162_sample_completed_] 
        $T[type_cast_162_update_start_] 
        $T[type_cast_162_update_completed_] 
        // shr17
        // start: Forward dependencies from shr17 to transition type_cast_162_sample_start_
        type_cast_162_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr17 to transition type_cast_162_sample_start_
        ;;[type_cast_162_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_162_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_162_sample_start_ &-> (type_cast_162_Sample)
        type_cast_162_sample_completed_ <-& (type_cast_162_Sample)
        type_cast_162_sample_completed_ &-> ($null)
        type_cast_162_update_start_ &-> (type_cast_162_Update)
        type_cast_162_update_completed_ <-& (type_cast_162_Update)
        // Target expression
        // (as target) conv20
        // start: WAR dependencies for conv20
        // done: WAR dependencies for conv20
        // end:  		conv20 := ($cast ($uint<8>) shr17 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr23
        // done: WAR dependencies for shr23
        // start:  		$volatile shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        //  file prog.linked.opt.aa, line 80
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
        // tmp11
        // Target expression
        // (as target) shr23
        // start: WAR dependencies for shr23
        // done: WAR dependencies for shr23
        // end:  		$volatile shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
        // start:  		conv26 := ($cast ($uint<8>) shr23 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 81
        // Source expression
        // ($cast ($uint<8>) shr23 )
        $T[type_cast_172_sample_start_] 
        $T[type_cast_172_sample_completed_] 
        $T[type_cast_172_update_start_] 
        $T[type_cast_172_update_completed_] 
        // shr23
        // start: Forward dependencies from shr23 to transition type_cast_172_sample_start_
        type_cast_172_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr23 to transition type_cast_172_sample_start_
        ;;[type_cast_172_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_172_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_172_sample_start_ &-> (type_cast_172_Sample)
        type_cast_172_sample_completed_ <-& (type_cast_172_Sample)
        type_cast_172_sample_completed_ &-> ($null)
        type_cast_172_update_start_ &-> (type_cast_172_Update)
        type_cast_172_update_completed_ <-& (type_cast_172_Update)
        // Target expression
        // (as target) conv26
        // start: WAR dependencies for conv26
        // done: WAR dependencies for conv26
        // end:  		conv26 := ($cast ($uint<8>) shr23 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr29
        // done: WAR dependencies for shr29
        // start:  		$volatile shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        //  file prog.linked.opt.aa, line 82
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
        // tmp11
        // Target expression
        // (as target) shr29
        // start: WAR dependencies for shr29
        // done: WAR dependencies for shr29
        // end:  		$volatile shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
        // start:  		conv32 := ($cast ($uint<8>) shr29 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 83
        // Source expression
        // ($cast ($uint<8>) shr29 )
        $T[type_cast_182_sample_start_] 
        $T[type_cast_182_sample_completed_] 
        $T[type_cast_182_update_start_] 
        $T[type_cast_182_update_completed_] 
        // shr29
        // start: Forward dependencies from shr29 to transition type_cast_182_sample_start_
        type_cast_182_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr29 to transition type_cast_182_sample_start_
        ;;[type_cast_182_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_182_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_182_sample_start_ &-> (type_cast_182_Sample)
        type_cast_182_sample_completed_ <-& (type_cast_182_Sample)
        type_cast_182_sample_completed_ &-> ($null)
        type_cast_182_update_start_ &-> (type_cast_182_Update)
        type_cast_182_update_completed_ <-& (type_cast_182_Update)
        // Target expression
        // (as target) conv32
        // start: WAR dependencies for conv32
        // done: WAR dependencies for conv32
        // end:  		conv32 := ($cast ($uint<8>) shr29 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr35
        // done: WAR dependencies for shr35
        // start:  		$volatile shr35 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        //  file prog.linked.opt.aa, line 84
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
        // tmp11
        // Target expression
        // (as target) shr35
        // start: WAR dependencies for shr35
        // done: WAR dependencies for shr35
        // end:  		$volatile shr35 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
        // start:  		conv38 := ($cast ($uint<8>) shr35 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 85
        // Source expression
        // ($cast ($uint<8>) shr35 )
        $T[type_cast_192_sample_start_] 
        $T[type_cast_192_sample_completed_] 
        $T[type_cast_192_update_start_] 
        $T[type_cast_192_update_completed_] 
        // shr35
        // start: Forward dependencies from shr35 to transition type_cast_192_sample_start_
        type_cast_192_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr35 to transition type_cast_192_sample_start_
        ;;[type_cast_192_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_192_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_192_sample_start_ &-> (type_cast_192_Sample)
        type_cast_192_sample_completed_ <-& (type_cast_192_Sample)
        type_cast_192_sample_completed_ &-> ($null)
        type_cast_192_update_start_ &-> (type_cast_192_Update)
        type_cast_192_update_completed_ <-& (type_cast_192_Update)
        // Target expression
        // (as target) conv38
        // start: WAR dependencies for conv38
        // done: WAR dependencies for conv38
        // end:  		conv38 := ($cast ($uint<8>) shr35 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr41
        // done: WAR dependencies for shr41
        // start:  		$volatile shr41 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        //  file prog.linked.opt.aa, line 86
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
        // tmp11
        // Target expression
        // (as target) shr41
        // start: WAR dependencies for shr41
        // done: WAR dependencies for shr41
        // end:  		$volatile shr41 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
        // start:  		conv44 := ($cast ($uint<8>) shr41 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 87
        // Source expression
        // ($cast ($uint<8>) shr41 )
        $T[type_cast_202_sample_start_] 
        $T[type_cast_202_sample_completed_] 
        $T[type_cast_202_update_start_] 
        $T[type_cast_202_update_completed_] 
        // shr41
        // start: Forward dependencies from shr41 to transition type_cast_202_sample_start_
        type_cast_202_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr41 to transition type_cast_202_sample_start_
        ;;[type_cast_202_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_202_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_202_sample_start_ &-> (type_cast_202_Sample)
        type_cast_202_sample_completed_ <-& (type_cast_202_Sample)
        type_cast_202_sample_completed_ &-> ($null)
        type_cast_202_update_start_ &-> (type_cast_202_Update)
        type_cast_202_update_completed_ <-& (type_cast_202_Update)
        // Target expression
        // (as target) conv44
        // start: WAR dependencies for conv44
        // done: WAR dependencies for conv44
        // end:  		conv44 := ($cast ($uint<8>) shr41 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr47
        // done: WAR dependencies for shr47
        // start:  		$volatile shr47 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        //  file prog.linked.opt.aa, line 88
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
        // tmp11
        // Target expression
        // (as target) shr47
        // start: WAR dependencies for shr47
        // done: WAR dependencies for shr47
        // end:  		$volatile shr47 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
        // start:  		conv50 := ($cast ($uint<8>) shr47 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 89
        // Source expression
        // ($cast ($uint<8>) shr47 )
        $T[type_cast_212_sample_start_] 
        $T[type_cast_212_sample_completed_] 
        $T[type_cast_212_update_start_] 
        $T[type_cast_212_update_completed_] 
        // shr47
        // start: Forward dependencies from shr47 to transition type_cast_212_sample_start_
        type_cast_212_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr47 to transition type_cast_212_sample_start_
        ;;[type_cast_212_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_212_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_212_sample_start_ &-> (type_cast_212_Sample)
        type_cast_212_sample_completed_ <-& (type_cast_212_Sample)
        type_cast_212_sample_completed_ &-> ($null)
        type_cast_212_update_start_ &-> (type_cast_212_Update)
        type_cast_212_update_completed_ <-& (type_cast_212_Update)
        // Target expression
        // (as target) conv50
        // start: WAR dependencies for conv50
        // done: WAR dependencies for conv50
        // end:  		conv50 := ($cast ($uint<8>) shr47 ) $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for shr53
        // done: WAR dependencies for shr53
        // start:  		$volatile shr53 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        //  file prog.linked.opt.aa, line 90
        // volatile! 
        // Source expression
        // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
        // tmp11
        // Target expression
        // (as target) shr53
        // start: WAR dependencies for shr53
        // done: WAR dependencies for shr53
        // end:  		$volatile shr53 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
        // start:  		conv56 := ($cast ($uint<8>) shr53 ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 91
        // Source expression
        // ($cast ($uint<8>) shr53 )
        $T[type_cast_222_sample_start_] 
        $T[type_cast_222_sample_completed_] 
        $T[type_cast_222_update_start_] 
        $T[type_cast_222_update_completed_] 
        // shr53
        // start: Forward dependencies from shr53 to transition type_cast_222_sample_start_
        type_cast_222_sample_start_ <-& (ptr_deref_148_update_completed_)
        // done: Forward dependencies from shr53 to transition type_cast_222_sample_start_
        ;;[type_cast_222_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_222_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_222_sample_start_ &-> (type_cast_222_Sample)
        type_cast_222_sample_completed_ <-& (type_cast_222_Sample)
        type_cast_222_sample_completed_ &-> ($null)
        type_cast_222_update_start_ &-> (type_cast_222_Update)
        type_cast_222_update_completed_ <-& (type_cast_222_Update)
        // Target expression
        // (as target) conv56
        // start: WAR dependencies for conv56
        // done: WAR dependencies for conv56
        // end:  		conv56 := ($cast ($uint<8>) shr53 ) $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv56 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 92
        // Source expression
        // conv56
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_224_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_224_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_224_update_start_] 
        $T[WPIPE_zeropad_output_pipe_224_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_224_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_224_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_224_sample_start_ &-> (WPIPE_zeropad_output_pipe_224_Sample)
        WPIPE_zeropad_output_pipe_224_sample_completed_ <-& (WPIPE_zeropad_output_pipe_224_Sample)
        WPIPE_zeropad_output_pipe_224_update_start_ <-& (WPIPE_zeropad_output_pipe_224_sample_completed_)
        WPIPE_zeropad_output_pipe_224_update_start_ &-> (WPIPE_zeropad_output_pipe_224_Update)
        WPIPE_zeropad_output_pipe_224_update_completed_ <-& (WPIPE_zeropad_output_pipe_224_Update)
        // start: Forward dependencies from conv56 to transition WPIPE_zeropad_output_pipe_224_sample_start_
        WPIPE_zeropad_output_pipe_224_sample_start_ <-& (type_cast_222_update_completed_)
        // done: Forward dependencies from conv56 to transition WPIPE_zeropad_output_pipe_224_sample_start_
        // end:  		zeropad_output_pipe := conv56 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv50 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 93
        // Source expression
        // conv50
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_227_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_227_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_227_update_start_] 
        $T[WPIPE_zeropad_output_pipe_227_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_227_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_227_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_227_sample_start_ &-> (WPIPE_zeropad_output_pipe_227_Sample)
        WPIPE_zeropad_output_pipe_227_sample_completed_ <-& (WPIPE_zeropad_output_pipe_227_Sample)
        WPIPE_zeropad_output_pipe_227_update_start_ <-& (WPIPE_zeropad_output_pipe_227_sample_completed_)
        WPIPE_zeropad_output_pipe_227_update_start_ &-> (WPIPE_zeropad_output_pipe_227_Update)
        WPIPE_zeropad_output_pipe_227_update_completed_ <-& (WPIPE_zeropad_output_pipe_227_Update)
        // start: Forward dependencies from conv50 to transition WPIPE_zeropad_output_pipe_227_sample_start_
        WPIPE_zeropad_output_pipe_227_sample_start_ <-& (type_cast_212_update_completed_)
        // done: Forward dependencies from conv50 to transition WPIPE_zeropad_output_pipe_227_sample_start_
        // end:  		zeropad_output_pipe := conv50 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv44 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 94
        // Source expression
        // conv44
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_230_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_230_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_230_update_start_] 
        $T[WPIPE_zeropad_output_pipe_230_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_230_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_230_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_230_sample_start_ &-> (WPIPE_zeropad_output_pipe_230_Sample)
        WPIPE_zeropad_output_pipe_230_sample_completed_ <-& (WPIPE_zeropad_output_pipe_230_Sample)
        WPIPE_zeropad_output_pipe_230_update_start_ <-& (WPIPE_zeropad_output_pipe_230_sample_completed_)
        WPIPE_zeropad_output_pipe_230_update_start_ &-> (WPIPE_zeropad_output_pipe_230_Update)
        WPIPE_zeropad_output_pipe_230_update_completed_ <-& (WPIPE_zeropad_output_pipe_230_Update)
        // start: Forward dependencies from conv44 to transition WPIPE_zeropad_output_pipe_230_sample_start_
        WPIPE_zeropad_output_pipe_230_sample_start_ <-& (type_cast_202_update_completed_)
        // done: Forward dependencies from conv44 to transition WPIPE_zeropad_output_pipe_230_sample_start_
        // end:  		zeropad_output_pipe := conv44 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv38 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 95
        // Source expression
        // conv38
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_233_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_233_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_233_update_start_] 
        $T[WPIPE_zeropad_output_pipe_233_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_233_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_233_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_233_sample_start_ &-> (WPIPE_zeropad_output_pipe_233_Sample)
        WPIPE_zeropad_output_pipe_233_sample_completed_ <-& (WPIPE_zeropad_output_pipe_233_Sample)
        WPIPE_zeropad_output_pipe_233_update_start_ <-& (WPIPE_zeropad_output_pipe_233_sample_completed_)
        WPIPE_zeropad_output_pipe_233_update_start_ &-> (WPIPE_zeropad_output_pipe_233_Update)
        WPIPE_zeropad_output_pipe_233_update_completed_ <-& (WPIPE_zeropad_output_pipe_233_Update)
        // start: Forward dependencies from conv38 to transition WPIPE_zeropad_output_pipe_233_sample_start_
        WPIPE_zeropad_output_pipe_233_sample_start_ <-& (type_cast_192_update_completed_)
        // done: Forward dependencies from conv38 to transition WPIPE_zeropad_output_pipe_233_sample_start_
        // end:  		zeropad_output_pipe := conv38 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv32 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 96
        // Source expression
        // conv32
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_236_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_236_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_236_update_start_] 
        $T[WPIPE_zeropad_output_pipe_236_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_236_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_236_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_236_sample_start_ &-> (WPIPE_zeropad_output_pipe_236_Sample)
        WPIPE_zeropad_output_pipe_236_sample_completed_ <-& (WPIPE_zeropad_output_pipe_236_Sample)
        WPIPE_zeropad_output_pipe_236_update_start_ <-& (WPIPE_zeropad_output_pipe_236_sample_completed_)
        WPIPE_zeropad_output_pipe_236_update_start_ &-> (WPIPE_zeropad_output_pipe_236_Update)
        WPIPE_zeropad_output_pipe_236_update_completed_ <-& (WPIPE_zeropad_output_pipe_236_Update)
        // start: Forward dependencies from conv32 to transition WPIPE_zeropad_output_pipe_236_sample_start_
        WPIPE_zeropad_output_pipe_236_sample_start_ <-& (type_cast_182_update_completed_)
        // done: Forward dependencies from conv32 to transition WPIPE_zeropad_output_pipe_236_sample_start_
        // end:  		zeropad_output_pipe := conv32 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv26 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 97
        // Source expression
        // conv26
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_239_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_239_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_239_update_start_] 
        $T[WPIPE_zeropad_output_pipe_239_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_239_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_239_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_239_sample_start_ &-> (WPIPE_zeropad_output_pipe_239_Sample)
        WPIPE_zeropad_output_pipe_239_sample_completed_ <-& (WPIPE_zeropad_output_pipe_239_Sample)
        WPIPE_zeropad_output_pipe_239_update_start_ <-& (WPIPE_zeropad_output_pipe_239_sample_completed_)
        WPIPE_zeropad_output_pipe_239_update_start_ &-> (WPIPE_zeropad_output_pipe_239_Update)
        WPIPE_zeropad_output_pipe_239_update_completed_ <-& (WPIPE_zeropad_output_pipe_239_Update)
        // start: Forward dependencies from conv26 to transition WPIPE_zeropad_output_pipe_239_sample_start_
        WPIPE_zeropad_output_pipe_239_sample_start_ <-& (type_cast_172_update_completed_)
        // done: Forward dependencies from conv26 to transition WPIPE_zeropad_output_pipe_239_sample_start_
        // end:  		zeropad_output_pipe := conv26 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv20 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 98
        // Source expression
        // conv20
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_242_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_242_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_242_update_start_] 
        $T[WPIPE_zeropad_output_pipe_242_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_242_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_242_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_242_sample_start_ &-> (WPIPE_zeropad_output_pipe_242_Sample)
        WPIPE_zeropad_output_pipe_242_sample_completed_ <-& (WPIPE_zeropad_output_pipe_242_Sample)
        WPIPE_zeropad_output_pipe_242_update_start_ <-& (WPIPE_zeropad_output_pipe_242_sample_completed_)
        WPIPE_zeropad_output_pipe_242_update_start_ &-> (WPIPE_zeropad_output_pipe_242_Update)
        WPIPE_zeropad_output_pipe_242_update_completed_ <-& (WPIPE_zeropad_output_pipe_242_Update)
        // start: Forward dependencies from conv20 to transition WPIPE_zeropad_output_pipe_242_sample_start_
        WPIPE_zeropad_output_pipe_242_sample_start_ <-& (type_cast_162_update_completed_)
        // done: Forward dependencies from conv20 to transition WPIPE_zeropad_output_pipe_242_sample_start_
        // end:  		zeropad_output_pipe := conv20 $buffering 1// bits of buffering = 8. 
        // start:  		zeropad_output_pipe := conv14 $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 99
        // Source expression
        // conv14
        // Target expression
        // (as target) zeropad_output_pipe
        $T[WPIPE_zeropad_output_pipe_245_sample_start_] 
        $T[WPIPE_zeropad_output_pipe_245_sample_completed_] 
        $T[WPIPE_zeropad_output_pipe_245_update_start_] 
        $T[WPIPE_zeropad_output_pipe_245_update_completed_] 
        ;;[WPIPE_zeropad_output_pipe_245_Sample] 
        {
          // pipe write sample-start zeropad_output_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_zeropad_output_pipe_245_Update] 
        {
          // pipe write update (complete) zeropad_output_pipe
          $T [req] $T [ack] 
        }
        WPIPE_zeropad_output_pipe_245_sample_start_ &-> (WPIPE_zeropad_output_pipe_245_Sample)
        WPIPE_zeropad_output_pipe_245_sample_completed_ <-& (WPIPE_zeropad_output_pipe_245_Sample)
        WPIPE_zeropad_output_pipe_245_update_start_ <-& (WPIPE_zeropad_output_pipe_245_sample_completed_)
        WPIPE_zeropad_output_pipe_245_update_start_ &-> (WPIPE_zeropad_output_pipe_245_Update)
        WPIPE_zeropad_output_pipe_245_update_completed_ <-& (WPIPE_zeropad_output_pipe_245_Update)
        // start: Forward dependencies from conv14 to transition WPIPE_zeropad_output_pipe_245_sample_start_
        WPIPE_zeropad_output_pipe_245_sample_start_ <-& (type_cast_152_update_completed_)
        // done: Forward dependencies from conv14 to transition WPIPE_zeropad_output_pipe_245_sample_start_
        // end:  		zeropad_output_pipe := conv14 $buffering 1// bits of buffering = 8. 
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // start:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 100
        // volatile! 
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // end:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond9
        // ignored out-of-scope w_root 		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond9
        // start:  		$volatile exitcond9 := (indvarx_xnext == umax8) $buffering 1
        //  file prog.linked.opt.aa, line 101
        // volatile! 
        // Source expression
        // (indvarx_xnext == umax8)
        // indvarx_xnext
        // umax8
        // Target expression
        // (as target) exitcond9
        // start: WAR dependencies for exitcond9
        // ignored out-of-scope w_root 		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond9
        // end:  		$volatile exitcond9 := (indvarx_xnext == umax8) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_0
        //  ptr_deref_148 load
        // pipe read/write dependencies for pipe zeropad_output_pipe
        // read-dependencies for pipe zeropad_output_pipe
        // write-dependencies for pipe zeropad_output_pipe
        WPIPE_zeropad_output_pipe_227_sample_start_ <-& (WPIPE_zeropad_output_pipe_224_update_completed_)
        WPIPE_zeropad_output_pipe_230_sample_start_ <-& (WPIPE_zeropad_output_pipe_227_update_completed_)
        WPIPE_zeropad_output_pipe_233_sample_start_ <-& (WPIPE_zeropad_output_pipe_230_update_completed_)
        WPIPE_zeropad_output_pipe_236_sample_start_ <-& (WPIPE_zeropad_output_pipe_233_update_completed_)
        WPIPE_zeropad_output_pipe_239_sample_start_ <-& (WPIPE_zeropad_output_pipe_236_update_completed_)
        WPIPE_zeropad_output_pipe_242_sample_start_ <-& (WPIPE_zeropad_output_pipe_239_update_completed_)
        WPIPE_zeropad_output_pipe_245_sample_start_ <-& (WPIPE_zeropad_output_pipe_242_update_completed_)
        // signal write dependencies for zeropad_output_pipe
      }
      assign_stmt_145_to_assign_stmt_258__entry__ |-> (assign_stmt_145_to_assign_stmt_258)
      assign_stmt_145_to_assign_stmt_258__exit__ <-| (assign_stmt_145_to_assign_stmt_258)
      // if-statement  
      //  file prog.linked.opt.aa, line 102
      ;;[if_stmt_259_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_259__entry__ |-> (if_stmt_259_dead_link)
      if_stmt_259__exit__ <-| (if_stmt_259_dead_link)
      ;;[if_stmt_259_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_259__entry__ |-> (if_stmt_259_eval_test)
      $P [R_exitcond9_260_place]
      R_exitcond9_260_place <-| (if_stmt_259_eval_test)
      ;;[if_stmt_259_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_259_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond9_260_place |-> (if_stmt_259_if_link if_stmt_259_else_link)
      $P [forx_xbody_forx_xendx_xloopexit]
      forx_xbody_forx_xendx_xloopexit <-| (if_stmt_259_if_link)
      $P [forx_xbody_forx_xbody]
      forx_xbody_forx_xbody <-| (if_stmt_259_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 62
      ;;[merge_stmt_95_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_95__entry__ |-> (merge_stmt_95_dead_link)
      merge_stmt_95__exit__ <-| (merge_stmt_95_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 62  --------------------------
      ||[entry_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_bbx_xnph |-> (entry_bbx_xnph_PhiReq)
      $P [merge_stmt_95_PhiReqMerge] 
      merge_stmt_95_PhiReqMerge <-| ( entry_bbx_xnph_PhiReq )
      ||[merge_stmt_95_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_95_PhiReqMerge |-> (merge_stmt_95_PhiAck)
      merge_stmt_95__exit__  <-| (merge_stmt_95_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 62  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 71
      //---------------------   merge statement  file prog.linked.opt.aa, line 71  --------------------------
      ||[bbx_xnph_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_131] 
        {
          ||[phi_stmt_131_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_135_konst_delay_trans] $delay
          }
          $T [phi_stmt_131_req] 
        }
      }
      bbx_xnph_forx_xbody |-> (bbx_xnph_forx_xbody_PhiReq)
      ||[forx_xbody_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_131] 
        {
          ||[phi_stmt_131_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_137] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_131_req] 
        }
      }
      forx_xbody_forx_xbody |-> (forx_xbody_forx_xbody_PhiReq)
      $P [merge_stmt_130_PhiReqMerge] 
      merge_stmt_130_PhiReqMerge <-| ( bbx_xnph_forx_xbody_PhiReq  forx_xbody_forx_xbody_PhiReq )
      ||[merge_stmt_130_PhiAck] 
      {
        $T [phi_stmt_131_ack] 
      }
      merge_stmt_130_PhiReqMerge |-> (merge_stmt_130_PhiAck)
      merge_stmt_130__exit__  <-| (merge_stmt_130_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 71  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 107
      ;;[merge_stmt_265_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_265__entry__ |-> (merge_stmt_265_dead_link)
      merge_stmt_265__exit__ <-| (merge_stmt_265_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 107  --------------------------
      ||[forx_xbody_forx_xendx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody_forx_xendx_xloopexit |-> (forx_xbody_forx_xendx_xloopexit_PhiReq)
      $P [merge_stmt_265_PhiReqMerge] 
      merge_stmt_265_PhiReqMerge <-| ( forx_xbody_forx_xendx_xloopexit_PhiReq )
      ||[merge_stmt_265_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_265_PhiReqMerge |-> (merge_stmt_265_PhiAck)
      merge_stmt_265__exit__  <-| (merge_stmt_265_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 107  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 110
      //---------------------   merge statement  file prog.linked.opt.aa, line 110  --------------------------
      ||[entry_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_forx_xend |-> (entry_forx_xend_PhiReq)
      ||[forx_xendx_xloopexit_forx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xendx_xloopexit_forx_xend |-> (forx_xendx_xloopexit_forx_xend_PhiReq)
      $P [merge_stmt_267_PhiReqMerge] 
      merge_stmt_267_PhiReqMerge <-| ( entry_forx_xend_PhiReq  forx_xendx_xloopexit_forx_xend_PhiReq )
      ||[merge_stmt_267_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_267_PhiReqMerge |-> (merge_stmt_267_PhiAck)
      merge_stmt_267__exit__  <-| (merge_stmt_267_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 110  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 113
      //---------------------   merge statement  file prog.linked.opt.aa, line 113  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_269_PhiReqMerge] 
      merge_stmt_269_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_269_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_269_PhiReqMerge |-> (merge_stmt_269_PhiAck)
      merge_stmt_269__exit__  <-| (merge_stmt_269_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 113  --------------------------
      assign_stmt_33_to_assign_stmt_88__entry__ <-| (branch_block_stmt_25__entry__)
      if_stmt_89__entry__ <-| (assign_stmt_33_to_assign_stmt_88__exit__)
      merge_stmt_95__entry__ <-| (if_stmt_89__exit__)
      assign_stmt_100_to_assign_stmt_128__entry__ <-| (merge_stmt_95__exit__)
      bbx_xnph_forx_xbody <-| (assign_stmt_100_to_assign_stmt_128__exit__)
      assign_stmt_145_to_assign_stmt_258__entry__ <-| (merge_stmt_130__exit__)
      if_stmt_259__entry__ <-| (assign_stmt_145_to_assign_stmt_258__exit__)
      merge_stmt_265__entry__ <-| (if_stmt_259__exit__)
      forx_xendx_xloopexit_forx_xend <-| (merge_stmt_265__exit__)
      return__ <-| (merge_stmt_267__exit__)
      merge_stmt_269__exit__ |-> (branch_block_stmt_25__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 62
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 71
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 107
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 110
    // constant-object-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 113
    // constant-object-declarations for block %sendOutput%body
    //  file prog.linked.opt.aa, line 44
    // constant-object-declarations for block %sendOutput
    //  file prog.linked.opt.aa, line 39
    // constant-declarations for block %sendOutput%body
    //  file prog.linked.opt.aa, line 44
    // 		iNsTr_0 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 46
    $constant $W[iNsTr_0_33] : $int<32> := _b00000000000000000000000000000010 // 2
    // ->(iNsTr_0)
    $constant $W[ptr_deref_36_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_1 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 48
    $constant $W[iNsTr_1_45] : $int<32> := _b00000000000000000000000000000011 // 3
    // ->(iNsTr_1)
    $constant $W[ptr_deref_48_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_2 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 50
    $constant $W[iNsTr_2_57] : $int<32> := _b00000000000000000000000000000100 // 4
    // ->(iNsTr_2)
    $constant $W[ptr_deref_60_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )
    $constant $W[type_cast_79_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111100// -4
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_85_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 57
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 62
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )
    $constant $W[type_cast_113_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000010// 2
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_119_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_126_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 71
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 72
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_135_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $constant $W[array_obj_ref_143_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_143_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_143_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_143_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx)
    $constant $W[ptr_deref_148_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_157_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )
    $constant $W[type_cast_167_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )
    $constant $W[type_cast_177_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011000// 24
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )
    $constant $W[type_cast_187_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000100000// 32
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )
    $constant $W[type_cast_197_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000101000// 40
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )
    $constant $W[type_cast_207_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000110000// 48
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )
    $constant $W[type_cast_217_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000111000// 56
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_251_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 102
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 107
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 110
    // constant-declarations for block %sendOutput%body%
    //  file prog.linked.opt.aa, line 113
    // block %sendOutput%body
    //  file prog.linked.opt.aa, line 44
    // 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 47
    // ->(iNsTr_0)
    $intermediate $W[ptr_deref_36_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_36_root_address] : $int<7>
    $W[ptr_deref_36_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_36_data_0] : $int<32>
    // tmp
    $W[tmp_37] : $int<32>
    // 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 49
    // ->(iNsTr_1)
    $intermediate $W[ptr_deref_48_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_48_root_address] : $int<7>
    $W[ptr_deref_48_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_48_data_0] : $int<32>
    // tmp1
    $W[tmp1_49] : $int<32>
    // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 51
    // ->(iNsTr_2)
    $intermediate $W[ptr_deref_60_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_60_root_address] : $int<7>
    $W[ptr_deref_60_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_60_data_0] : $int<32>
    // tmp2
    $W[tmp2_61] : $int<32>
    // 		$volatile mul := (tmp1 * tmp) $buffering 1
    //  file prog.linked.opt.aa, line 52
    // mul
    $W[mul_66] : $int<32>
    // 		$volatile mul3 := (mul * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 53
    // mul3
    $W[mul3_71] : $int<32>
    // 		conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 54
    // conv
    $W[conv_75] : $int<64>
    // 		$volatile shr76x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 55
    // shr76x_xmask
    $W[shr76x_xmask_81] : $int<64>
    // 		$volatile cmp77 := (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 56
    // cmp77
    $W[cmp77_88] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 57
    // 		$volatile tmp3 := (tmp1 * tmp) $buffering 1
    //  file prog.linked.opt.aa, line 64
    // tmp3
    $W[tmp3_100] : $int<32>
    // 		$volatile tmp4 := (tmp3 * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 65
    // tmp4
    $W[tmp4_105] : $int<32>
    // 		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 66
    // tmp5
    $W[tmp5_109] : $int<64>
    // 		$volatile tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 67
    // tmp6
    $W[tmp6_115] : $int<64>
    // 		$volatile tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 68
    // tmp7
    $W[tmp7_121] : $int<1>
    // 		$volatile umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 69
    // umax8
    $W[umax8_128] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 71
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 72
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_137_wire] : $int<64>
    // indvar
    $W[indvar_131] : $int<64>
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 75
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $intermediate $W[R_indvar_142_resized] : $int<14>
    $intermediate $W[R_indvar_142_scaled] : $int<14>
    $intermediate $W[array_obj_ref_143_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_143_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_145] : $int<32>
    // 		tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 76
    // ->(arrayidx)
    $intermediate $W[ptr_deref_148_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_148_root_address] : $int<14>
    $W[ptr_deref_148_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_148_data_0] : $int<64>
    // tmp11
    $W[tmp11_149] : $int<64>
    // 		conv14 := ($cast ($uint<8>) tmp11 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 77
    // conv14
    $W[conv14_153] : $int<8>
    // 		$volatile shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // shr17
    $W[shr17_159] : $int<64>
    // 		conv20 := ($cast ($uint<8>) shr17 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // conv20
    $W[conv20_163] : $int<8>
    // 		$volatile shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 80
    // shr23
    $W[shr23_169] : $int<64>
    // 		conv26 := ($cast ($uint<8>) shr23 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 81
    // conv26
    $W[conv26_173] : $int<8>
    // 		$volatile shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 82
    // shr29
    $W[shr29_179] : $int<64>
    // 		conv32 := ($cast ($uint<8>) shr29 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 83
    // conv32
    $W[conv32_183] : $int<8>
    // 		$volatile shr35 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // shr35
    $W[shr35_189] : $int<64>
    // 		conv38 := ($cast ($uint<8>) shr35 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 85
    // conv38
    $W[conv38_193] : $int<8>
    // 		$volatile shr41 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // shr41
    $W[shr41_199] : $int<64>
    // 		conv44 := ($cast ($uint<8>) shr41 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 87
    // conv44
    $W[conv44_203] : $int<8>
    // 		$volatile shr47 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 88
    // shr47
    $W[shr47_209] : $int<64>
    // 		conv50 := ($cast ($uint<8>) shr47 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 89
    // conv50
    $W[conv50_213] : $int<8>
    // 		$volatile shr53 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 90
    // shr53
    $W[shr53_219] : $int<64>
    // 		conv56 := ($cast ($uint<8>) shr53 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 91
    // conv56
    $W[conv56_223] : $int<8>
    // 		zeropad_output_pipe := conv56 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 92
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv50 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 93
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv44 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 94
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv38 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 95
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv32 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 96
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv26 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 97
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv20 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 98
    // zeropad_output_pipe
    // 		zeropad_output_pipe := conv14 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 99
    // zeropad_output_pipe
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 100
    // indvarx_xnext
    $W[indvarx_xnext_253] : $int<64>
    // 		$volatile exitcond9 := (indvarx_xnext == umax8) $buffering 1
    //  file prog.linked.opt.aa, line 101
    // exitcond9
    $W[exitcond9_258] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 102
    // datapath-instances for block %sendOutput%body
    //  file prog.linked.opt.aa, line 44
    // 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 47
    // ->(iNsTr_0)
    &/ [ptr_deref_36_base_resize] (iNsTr_0_33) (ptr_deref_36_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_36_root_address_inst] (ptr_deref_36_resized_base_address) (ptr_deref_36_root_address) 
    $flowthrough 
    &/ [ptr_deref_36_addr_0] (ptr_deref_36_root_address) (ptr_deref_36_word_address_0) 
    $flowthrough 
    $load [ptr_deref_36_load_0] $from memory_space_3 (ptr_deref_36_word_address_0) (ptr_deref_36_data_0) 
    $delay ptr_deref_36_load_0 6
    &/ [ptr_deref_36_gather_scatter] (ptr_deref_36_data_0) (tmp_37) 
    $flowthrough 
    // 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 49
    // ->(iNsTr_1)
    &/ [ptr_deref_48_base_resize] (iNsTr_1_45) (ptr_deref_48_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_48_root_address_inst] (ptr_deref_48_resized_base_address) (ptr_deref_48_root_address) 
    $flowthrough 
    &/ [ptr_deref_48_addr_0] (ptr_deref_48_root_address) (ptr_deref_48_word_address_0) 
    $flowthrough 
    $load [ptr_deref_48_load_0] $from memory_space_3 (ptr_deref_48_word_address_0) (ptr_deref_48_data_0) 
    $delay ptr_deref_48_load_0 6
    &/ [ptr_deref_48_gather_scatter] (ptr_deref_48_data_0) (tmp1_49) 
    $flowthrough 
    // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 51
    // ->(iNsTr_2)
    &/ [ptr_deref_60_base_resize] (iNsTr_2_57) (ptr_deref_60_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_60_root_address_inst] (ptr_deref_60_resized_base_address) (ptr_deref_60_root_address) 
    $flowthrough 
    &/ [ptr_deref_60_addr_0] (ptr_deref_60_root_address) (ptr_deref_60_word_address_0) 
    $flowthrough 
    $load [ptr_deref_60_load_0] $from memory_space_3 (ptr_deref_60_word_address_0) (ptr_deref_60_data_0) 
    $delay ptr_deref_60_load_0 6
    &/ [ptr_deref_60_gather_scatter] (ptr_deref_60_data_0) (tmp2_61) 
    $flowthrough 
    // 		$volatile mul := (tmp1 * tmp) $buffering 1
    //  file prog.linked.opt.aa, line 52
    // (tmp1 * tmp)
    *[MUL_u32_u32_65_inst] (tmp1_49 tmp_37) (mul_66)   $flowthrough 
    $delay MUL_u32_u32_65_inst 0
    // 		$volatile mul3 := (mul * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 53
    // (mul * tmp2)
    *[MUL_u32_u32_70_inst] (mul_66 tmp2_61) (mul3_71)   $flowthrough 
    $delay MUL_u32_u32_70_inst 0
    // 		conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 54
    // ($cast ($uint<64>) mul3 )
    # := [type_cast_74_inst] (mul3_71) (conv_75)    
    $buffering  $out type_cast_74_inst conv_75 1
    $delay type_cast_74_inst 1
    // 		$volatile shr76x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 55
    // (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
    &[AND_u64_u64_80_inst] (conv_75 type_cast_79_wire_constant) (shr76x_xmask_81)   $flowthrough 
    $delay AND_u64_u64_80_inst 0
    // 		$volatile cmp77 := (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 56
    // (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_86_inst] (shr76x_xmask_81 type_cast_85_wire_constant) (cmp77_88)   $flowthrough 
    $delay EQ_u64_u1_86_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 57
    ==0? [if_stmt_89_branch] (cmp77_88)
    // 		$volatile tmp3 := (tmp1 * tmp) $buffering 1
    //  file prog.linked.opt.aa, line 64
    // (tmp1 * tmp)
    *[MUL_u32_u32_99_inst] (tmp1_49 tmp_37) (tmp3_100)   $flowthrough 
    $delay MUL_u32_u32_99_inst 0
    // 		$volatile tmp4 := (tmp3 * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 65
    // (tmp3 * tmp2)
    *[MUL_u32_u32_104_inst] (tmp3_100 tmp2_61) (tmp4_105)   $flowthrough 
    $delay MUL_u32_u32_104_inst 0
    // 		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 66
    // ($cast ($uint<64>) tmp4 )
    # := [type_cast_108_inst] (tmp4_105) (tmp5_109)    
    $buffering  $out type_cast_108_inst tmp5_109 1
    $delay type_cast_108_inst 1
    // 		$volatile tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 67
    // (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
    >>[LSHR_u64_u64_114_inst] (tmp5_109 type_cast_113_wire_constant) (tmp6_115)   $flowthrough 
    $delay LSHR_u64_u64_114_inst 0
    // 		$volatile tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 68
    // (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >[UGT_u64_u1_120_inst] (tmp6_115 type_cast_119_wire_constant) (tmp7_121)   $flowthrough 
    $delay UGT_u64_u1_120_inst 0
    // 		$volatile umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 69
    // ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_127_inst] (tmp7_121 tmp6_115 type_cast_126_wire_constant) (umax8_128)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 71
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 72
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_137_inst] (indvarx_xnext_253) (type_cast_137_wire)    
    $buffering  $out type_cast_137_inst type_cast_137_wire 1
    $delay type_cast_137_inst 1
    $phi [phi_stmt_131] (type_cast_135_wire_constant type_cast_137_wire) ( indvar_131 ) 
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 75
    &/ [array_obj_ref_143_index_1_resize] (indvar_131) (R_indvar_142_resized) 
    $flowthrough 
    &/ [array_obj_ref_143_index_1_rename] (R_indvar_142_resized) (R_indvar_142_scaled) 
    $flowthrough 
    +[array_obj_ref_143_index_offset] (R_indvar_142_scaled array_obj_ref_143_constant_part_of_offset) (array_obj_ref_143_final_offset)   
    $delay array_obj_ref_143_index_offset 2
    &/ [array_obj_ref_143_root_address_inst] (array_obj_ref_143_final_offset) (array_obj_ref_143_root_address) 
    $flowthrough 
    # := [addr_of_144_final_reg] (array_obj_ref_143_root_address) (arrayidx_145)    
    $buffering  $out addr_of_144_final_reg arrayidx_145 1
    // 		tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 76
    // ->(arrayidx)
    &/ [ptr_deref_148_base_resize] (arrayidx_145) (ptr_deref_148_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_148_root_address_inst] (ptr_deref_148_resized_base_address) (ptr_deref_148_root_address) 
    $flowthrough 
    &/ [ptr_deref_148_addr_0] (ptr_deref_148_root_address) (ptr_deref_148_word_address_0) 
    $flowthrough 
    $load [ptr_deref_148_load_0] $from memory_space_0 (ptr_deref_148_word_address_0) (ptr_deref_148_data_0) 
    $delay ptr_deref_148_load_0 6
    &/ [ptr_deref_148_gather_scatter] (ptr_deref_148_data_0) (tmp11_149) 
    $flowthrough 
    // 		conv14 := ($cast ($uint<8>) tmp11 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 77
    // ($cast ($uint<8>) tmp11 )
    # := [type_cast_152_inst] (tmp11_149) (conv14_153)    
    $buffering  $out type_cast_152_inst conv14_153 1
    $delay type_cast_152_inst 1
    // 		$volatile shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 78
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    >>[LSHR_u64_u64_158_inst] (tmp11_149 type_cast_157_wire_constant) (shr17_159)   $flowthrough 
    $delay LSHR_u64_u64_158_inst 0
    // 		conv20 := ($cast ($uint<8>) shr17 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 79
    // ($cast ($uint<8>) shr17 )
    # := [type_cast_162_inst] (shr17_159) (conv20_163)    
    $buffering  $out type_cast_162_inst conv20_163 1
    $delay type_cast_162_inst 1
    // 		$volatile shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
    //  file prog.linked.opt.aa, line 80
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
    >>[LSHR_u64_u64_168_inst] (tmp11_149 type_cast_167_wire_constant) (shr23_169)   $flowthrough 
    $delay LSHR_u64_u64_168_inst 0
    // 		conv26 := ($cast ($uint<8>) shr23 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 81
    // ($cast ($uint<8>) shr23 )
    # := [type_cast_172_inst] (shr23_169) (conv26_173)    
    $buffering  $out type_cast_172_inst conv26_173 1
    $delay type_cast_172_inst 1
    // 		$volatile shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
    //  file prog.linked.opt.aa, line 82
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
    >>[LSHR_u64_u64_178_inst] (tmp11_149 type_cast_177_wire_constant) (shr29_179)   $flowthrough 
    $delay LSHR_u64_u64_178_inst 0
    // 		conv32 := ($cast ($uint<8>) shr29 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 83
    // ($cast ($uint<8>) shr29 )
    # := [type_cast_182_inst] (shr29_179) (conv32_183)    
    $buffering  $out type_cast_182_inst conv32_183 1
    $delay type_cast_182_inst 1
    // 		$volatile shr35 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
    //  file prog.linked.opt.aa, line 84
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
    >>[LSHR_u64_u64_188_inst] (tmp11_149 type_cast_187_wire_constant) (shr35_189)   $flowthrough 
    $delay LSHR_u64_u64_188_inst 0
    // 		conv38 := ($cast ($uint<8>) shr35 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 85
    // ($cast ($uint<8>) shr35 )
    # := [type_cast_192_inst] (shr35_189) (conv38_193)    
    $buffering  $out type_cast_192_inst conv38_193 1
    $delay type_cast_192_inst 1
    // 		$volatile shr41 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
    //  file prog.linked.opt.aa, line 86
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
    >>[LSHR_u64_u64_198_inst] (tmp11_149 type_cast_197_wire_constant) (shr41_199)   $flowthrough 
    $delay LSHR_u64_u64_198_inst 0
    // 		conv44 := ($cast ($uint<8>) shr41 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 87
    // ($cast ($uint<8>) shr41 )
    # := [type_cast_202_inst] (shr41_199) (conv44_203)    
    $buffering  $out type_cast_202_inst conv44_203 1
    $delay type_cast_202_inst 1
    // 		$volatile shr47 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
    //  file prog.linked.opt.aa, line 88
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
    >>[LSHR_u64_u64_208_inst] (tmp11_149 type_cast_207_wire_constant) (shr47_209)   $flowthrough 
    $delay LSHR_u64_u64_208_inst 0
    // 		conv50 := ($cast ($uint<8>) shr47 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 89
    // ($cast ($uint<8>) shr47 )
    # := [type_cast_212_inst] (shr47_209) (conv50_213)    
    $buffering  $out type_cast_212_inst conv50_213 1
    $delay type_cast_212_inst 1
    // 		$volatile shr53 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
    //  file prog.linked.opt.aa, line 90
    // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
    >>[LSHR_u64_u64_218_inst] (tmp11_149 type_cast_217_wire_constant) (shr53_219)   $flowthrough 
    $delay LSHR_u64_u64_218_inst 0
    // 		conv56 := ($cast ($uint<8>) shr53 ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 91
    // ($cast ($uint<8>) shr53 )
    # := [type_cast_222_inst] (shr53_219) (conv56_223)    
    $buffering  $out type_cast_222_inst conv56_223 1
    $delay type_cast_222_inst 1
    // 		zeropad_output_pipe := conv56 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 92
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_224_inst]  (conv56_223) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv50 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 93
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_227_inst]  (conv50_213) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv44 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 94
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_230_inst]  (conv44_203) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv38 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 95
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_233_inst]  (conv38_193) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv32 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 96
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_236_inst]  (conv32_183) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv26 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 97
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_239_inst]  (conv26_173) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv20 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 98
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_242_inst]  (conv20_163) (zeropad_output_pipe) 
    // 		zeropad_output_pipe := conv14 $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 99
    // zeropad_output_pipe
    $ioport $out [WPIPE_zeropad_output_pipe_245_inst]  (conv14_153) (zeropad_output_pipe) 
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 100
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_252_inst] (indvar_131 type_cast_251_wire_constant) (indvarx_xnext_253)   $flowthrough 
    $delay ADD_u64_u64_252_inst 0
    // 		$volatile exitcond9 := (indvarx_xnext == umax8) $buffering 1
    //  file prog.linked.opt.aa, line 101
    // (indvarx_xnext == umax8)
    ==[EQ_u64_u1_257_inst] (indvarx_xnext_253 umax8_128) (exitcond9_258)   $flowthrough 
    $delay EQ_u64_u1_257_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 102
    ==0? [if_stmt_259_branch] (exitcond9_258)
  }
  // end data-path
  // 		tmp := ->(iNsTr_0) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 47
  // iNsTr_0
  ptr_deref_36_base_resize <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_base_addr_resize/base_resize_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_base_addr_resize/base_resize_ack)
  ptr_deref_36_root_address_inst <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_base_plus_offset/sum_rename_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_base_plus_offset/sum_rename_ack)
  ptr_deref_36_addr_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_word_addrgen/root_register_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_word_addrgen/root_register_ack)
  ptr_deref_36_gather_scatter <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Update/ptr_deref_36_Merge/merge_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Update/ptr_deref_36_Merge/merge_ack)
  ptr_deref_36_load_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Sample/word_access_start/word_0/rr branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Update/word_access_complete/word_0/cr) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Sample/word_access_start/word_0/ra branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_36_Update/word_access_complete/word_0/ca)
  // 		tmp1 := ->(iNsTr_1) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 49
  // iNsTr_1
  ptr_deref_48_base_resize <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_base_addr_resize/base_resize_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_base_addr_resize/base_resize_ack)
  ptr_deref_48_root_address_inst <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_base_plus_offset/sum_rename_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_base_plus_offset/sum_rename_ack)
  ptr_deref_48_addr_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_word_addrgen/root_register_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_word_addrgen/root_register_ack)
  ptr_deref_48_gather_scatter <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Update/ptr_deref_48_Merge/merge_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Update/ptr_deref_48_Merge/merge_ack)
  ptr_deref_48_load_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Sample/word_access_start/word_0/rr branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Update/word_access_complete/word_0/cr) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Sample/word_access_start/word_0/ra branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_48_Update/word_access_complete/word_0/ca)
  // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 51
  // iNsTr_2
  ptr_deref_60_base_resize <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_base_addr_resize/base_resize_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_base_addr_resize/base_resize_ack)
  ptr_deref_60_root_address_inst <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_base_plus_offset/sum_rename_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_base_plus_offset/sum_rename_ack)
  ptr_deref_60_addr_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_word_addrgen/root_register_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_word_addrgen/root_register_ack)
  ptr_deref_60_gather_scatter <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Update/ptr_deref_60_Merge/merge_req) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Update/ptr_deref_60_Merge/merge_ack)
  ptr_deref_60_load_0 <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Sample/word_access_start/word_0/rr branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Update/word_access_complete/word_0/cr) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Sample/word_access_start/word_0/ra branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/ptr_deref_60_Update/word_access_complete/word_0/ca)
  // 		$volatile mul := (tmp1 * tmp) $buffering 1
  //  file prog.linked.opt.aa, line 52
  // (tmp1 * tmp)
  // tmp1
  // tmp
  // 		$volatile mul3 := (mul * tmp2) $buffering 1
  //  file prog.linked.opt.aa, line 53
  // (mul * tmp2)
  // mul
  // tmp2
  // 		conv := ($cast ($uint<64>) mul3 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 54
  // mul3
  // ($cast ($uint<64>) mul3 )
  type_cast_74_inst <=> (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/type_cast_74_Sample/rr branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/type_cast_74_Update/cr) (branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/type_cast_74_Sample/ra branch_block_stmt_25/assign_stmt_33_to_assign_stmt_88/type_cast_74_Update/ca)
  // 		$volatile shr76x_xmask := (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
  //  file prog.linked.opt.aa, line 55
  // (conv & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
  // conv
  // 		$volatile cmp77 := (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 56
  // (shr76x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  // shr76x_xmask
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 57
  if_stmt_89_branch <=> (branch_block_stmt_25/if_stmt_89_eval_test/branch_req) (branch_block_stmt_25/if_stmt_89_else_link/else_choice_transition branch_block_stmt_25/if_stmt_89_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 62
  // 		$volatile tmp3 := (tmp1 * tmp) $buffering 1
  //  file prog.linked.opt.aa, line 64
  // (tmp1 * tmp)
  // tmp1
  // tmp
  // 		$volatile tmp4 := (tmp3 * tmp2) $buffering 1
  //  file prog.linked.opt.aa, line 65
  // (tmp3 * tmp2)
  // tmp3
  // tmp2
  // 		tmp5 := ($cast ($uint<64>) tmp4 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 66
  // tmp4
  // ($cast ($uint<64>) tmp4 )
  type_cast_108_inst <=> (branch_block_stmt_25/assign_stmt_100_to_assign_stmt_128/type_cast_108_Sample/rr branch_block_stmt_25/assign_stmt_100_to_assign_stmt_128/type_cast_108_Update/cr) (branch_block_stmt_25/assign_stmt_100_to_assign_stmt_128/type_cast_108_Sample/ra branch_block_stmt_25/assign_stmt_100_to_assign_stmt_128/type_cast_108_Update/ca)
  // 		$volatile tmp6 := (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
  //  file prog.linked.opt.aa, line 67
  // (tmp5 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
  // tmp5
  // 		$volatile tmp7 := (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 68
  // (tmp6 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // tmp6
  // 		$volatile umax8 := ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 69
  // tmp7
  // tmp6
  // ( $mux tmp7 tmp6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 71
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_137_inst <=> (branch_block_stmt_25/forx_xbody_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_sources/type_cast_137/SplitProtocol/Sample/rr branch_block_stmt_25/forx_xbody_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_sources/type_cast_137/SplitProtocol/Update/cr) (branch_block_stmt_25/forx_xbody_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_sources/type_cast_137/SplitProtocol/Sample/ra branch_block_stmt_25/forx_xbody_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_sources/type_cast_137/SplitProtocol/Update/ca)
  phi_stmt_131 <=> (branch_block_stmt_25/bbx_xnph_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_req branch_block_stmt_25/forx_xbody_forx_xbody_PhiReq/phi_stmt_131/phi_stmt_131_req) (branch_block_stmt_25/merge_stmt_130_PhiAck/phi_stmt_131_ack)
  // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 75
  // indvar
  array_obj_ref_143_index_1_resize <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_index_resize_1/index_resize_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_index_resize_1/index_resize_ack)
  array_obj_ref_143_index_1_rename <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_index_scale_1/scale_rename_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_index_scale_1/scale_rename_ack)
  array_obj_ref_143_index_offset <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_final_index_sum_regn_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_final_index_sum_regn_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_final_index_sum_regn_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_final_index_sum_regn_Update/ack)
  array_obj_ref_143_root_address_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_base_plus_offset/sum_rename_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/array_obj_ref_143_base_plus_offset/sum_rename_ack)
  addr_of_144_final_reg <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/addr_of_144_request/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/addr_of_144_complete/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/addr_of_144_request/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/addr_of_144_complete/ack)
  // 		tmp11 := ->(arrayidx) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 76
  // arrayidx
  ptr_deref_148_base_resize <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_base_addr_resize/base_resize_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_base_addr_resize/base_resize_ack)
  ptr_deref_148_root_address_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_base_plus_offset/sum_rename_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_base_plus_offset/sum_rename_ack)
  ptr_deref_148_addr_0 <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_word_addrgen/root_register_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_word_addrgen/root_register_ack)
  ptr_deref_148_gather_scatter <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Update/ptr_deref_148_Merge/merge_req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Update/ptr_deref_148_Merge/merge_ack)
  ptr_deref_148_load_0 <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Sample/word_access_start/word_0/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Update/word_access_complete/word_0/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Sample/word_access_start/word_0/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/ptr_deref_148_Update/word_access_complete/word_0/ca)
  // 		conv14 := ($cast ($uint<8>) tmp11 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 77
  // tmp11
  // ($cast ($uint<8>) tmp11 )
  type_cast_152_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_152_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_152_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_152_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_152_Update/ca)
  // 		$volatile shr17 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 78
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // tmp11
  // 		conv20 := ($cast ($uint<8>) shr17 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 79
  // shr17
  // ($cast ($uint<8>) shr17 )
  type_cast_162_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_162_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_162_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_162_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_162_Update/ca)
  // 		$volatile shr23 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  )) $buffering 1
  //  file prog.linked.opt.aa, line 80
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000010000  ))
  // tmp11
  // 		conv26 := ($cast ($uint<8>) shr23 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 81
  // shr23
  // ($cast ($uint<8>) shr23 )
  type_cast_172_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_172_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_172_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_172_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_172_Update/ca)
  // 		$volatile shr29 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  )) $buffering 1
  //  file prog.linked.opt.aa, line 82
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000011000  ))
  // tmp11
  // 		conv32 := ($cast ($uint<8>) shr29 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 83
  // shr29
  // ($cast ($uint<8>) shr29 )
  type_cast_182_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_182_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_182_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_182_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_182_Update/ca)
  // 		$volatile shr35 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  )) $buffering 1
  //  file prog.linked.opt.aa, line 84
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000100000  ))
  // tmp11
  // 		conv38 := ($cast ($uint<8>) shr35 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 85
  // shr35
  // ($cast ($uint<8>) shr35 )
  type_cast_192_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_192_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_192_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_192_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_192_Update/ca)
  // 		$volatile shr41 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  )) $buffering 1
  //  file prog.linked.opt.aa, line 86
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000101000  ))
  // tmp11
  // 		conv44 := ($cast ($uint<8>) shr41 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 87
  // shr41
  // ($cast ($uint<8>) shr41 )
  type_cast_202_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_202_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_202_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_202_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_202_Update/ca)
  // 		$volatile shr47 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  )) $buffering 1
  //  file prog.linked.opt.aa, line 88
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000110000  ))
  // tmp11
  // 		conv50 := ($cast ($uint<8>) shr47 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 89
  // shr47
  // ($cast ($uint<8>) shr47 )
  type_cast_212_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_212_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_212_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_212_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_212_Update/ca)
  // 		$volatile shr53 := (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  )) $buffering 1
  //  file prog.linked.opt.aa, line 90
  // (tmp11 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000111000  ))
  // tmp11
  // 		conv56 := ($cast ($uint<8>) shr53 ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 91
  // shr53
  // ($cast ($uint<8>) shr53 )
  type_cast_222_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_222_Sample/rr branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_222_Update/cr) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_222_Sample/ra branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/type_cast_222_Update/ca)
  // 		zeropad_output_pipe := conv56 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 92
  // conv56
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_224_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_224_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_224_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_224_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_224_Update/ack)
  // 		zeropad_output_pipe := conv50 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 93
  // conv50
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_227_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_227_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_227_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_227_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_227_Update/ack)
  // 		zeropad_output_pipe := conv44 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 94
  // conv44
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_230_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_230_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_230_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_230_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_230_Update/ack)
  // 		zeropad_output_pipe := conv38 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 95
  // conv38
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_233_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_233_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_233_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_233_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_233_Update/ack)
  // 		zeropad_output_pipe := conv32 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 96
  // conv32
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_236_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_236_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_236_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_236_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_236_Update/ack)
  // 		zeropad_output_pipe := conv26 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 97
  // conv26
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_239_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_239_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_239_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_239_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_239_Update/ack)
  // 		zeropad_output_pipe := conv20 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 98
  // conv20
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_242_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_242_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_242_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_242_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_242_Update/ack)
  // 		zeropad_output_pipe := conv14 $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 99
  // conv14
  // zeropad_output_pipe
  WPIPE_zeropad_output_pipe_245_inst <=> (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_245_Sample/req branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_245_Update/req) (branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_245_Sample/ack branch_block_stmt_25/assign_stmt_145_to_assign_stmt_258/WPIPE_zeropad_output_pipe_245_Update/ack)
  // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 100
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  // 		$volatile exitcond9 := (indvarx_xnext == umax8) $buffering 1
  //  file prog.linked.opt.aa, line 101
  // (indvarx_xnext == umax8)
  // indvarx_xnext
  // umax8
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 102
  if_stmt_259_branch <=> (branch_block_stmt_25/if_stmt_259_eval_test/branch_req) (branch_block_stmt_25/if_stmt_259_else_link/else_choice_transition branch_block_stmt_25/if_stmt_259_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 107
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 110
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 113
}
$module [testConfigure] 
{
  $out ret_val__:$int<16>
  // can point into 
  // pipe-declarations for block %testConfigure
  //  file prog.linked.opt.aa, line 117
  // pipe-declarations for block %testConfigure%body
  //  file prog.linked.opt.aa, line 122
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 140
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 143
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 164
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 169
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 202
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 211
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 254
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 257
  // pipe-declarations for block %testConfigure%body%
  //  file prog.linked.opt.aa, line 261
  // memory-space 4 is written into.
  // memory-space 3 is written into.
  // memory-space 2 is written into.
  // memory-space 1 is written into.
  // memory-space 3 is read from.
  // memory-space 2 is read from.
  // memory-space 1 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_275] // Branch Block  file prog.linked.opt.aa, line 122
    {
      $P [branch_block_stmt_275__entry__]
      branch_block_stmt_275__entry__ <-| ($entry)
      $P [branch_block_stmt_275__exit__]
      branch_block_stmt_275__exit__ |-> ($exit)
      $P [assign_stmt_281_to_assign_stmt_325__entry__] 
      $P [assign_stmt_281_to_assign_stmt_325__exit__] 
      $P [if_stmt_326__entry__] 
      $P [if_stmt_326__exit__] 
      $P [merge_stmt_332__entry__] 
      $P [merge_stmt_332__exit__] 
      $P [forx_xbodyx_xpreheader_forx_xbody]
      $P [merge_stmt_334__exit__] 
      $P [assign_stmt_354_to_assign_stmt_397__entry__] 
      $P [assign_stmt_354_to_assign_stmt_397__exit__] 
      $P [if_stmt_398__entry__] 
      $P [if_stmt_398__exit__] 
      $P [merge_stmt_404__entry__] 
      $P [merge_stmt_404__exit__] 
      $P [forx_xendx_xloopexit_forx_xend]
      $P [merge_stmt_411__exit__] 
      $P [assign_stmt_421_to_assign_stmt_540__entry__] 
      $P [assign_stmt_421_to_assign_stmt_540__exit__] 
      $P [if_stmt_541__entry__] 
      $P [if_stmt_541__exit__] 
      $P [merge_stmt_547__entry__] 
      $P [merge_stmt_547__exit__] 
      $P [assign_stmt_552_to_assign_stmt_580__entry__] 
      $P [assign_stmt_552_to_assign_stmt_580__exit__] 
      $P [bbx_xnph_forx_xbody27]
      $P [merge_stmt_582__exit__] 
      $P [assign_stmt_597_to_assign_stmt_745__entry__] 
      $P [assign_stmt_597_to_assign_stmt_745__exit__] 
      $P [if_stmt_746__entry__] 
      $P [if_stmt_746__exit__] 
      $P [merge_stmt_752__entry__] 
      $P [merge_stmt_752__exit__] 
      $P [forx_xend78x_xloopexit_forx_xend78]
      $P [merge_stmt_754__exit__] 
      $P [assign_stmt_758__entry__] 
      $P [assign_stmt_758__exit__] 
      $P [return__]
      $P [merge_stmt_760__exit__] 
      ::[assign_stmt_281_to_assign_stmt_325] 
      {
        // start:  		iNsTr_0 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 124
        // constant! 
        // end:  		iNsTr_0 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 125
        // Target expression
        // ->(iNsTr_0)
        $T[ptr_deref_283_sample_start_] 
        $T[ptr_deref_283_sample_completed_] 
        $T[ptr_deref_283_update_start_] 
        $T[ptr_deref_283_update_completed_] 
        $T[ptr_deref_283_base_address_calculated] 
        // iNsTr_0
        $T[ptr_deref_283_word_address_calculated] 
        $T[ptr_deref_283_root_address_calculated] 
        $T[ptr_deref_283_base_address_resized] 
        ;;[ptr_deref_283_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_283_base_address_calculated &-> (ptr_deref_283_base_addr_resize)
        ptr_deref_283_base_address_resized <-& (ptr_deref_283_base_addr_resize)
        ;;[ptr_deref_283_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_283_base_address_resized &-> (ptr_deref_283_base_plus_offset)
        ptr_deref_283_root_address_calculated <-& (ptr_deref_283_base_plus_offset)
        $T[ptr_deref_283_word_addrgen_sample_start] 
        $T[ptr_deref_283_word_addrgen_sample_complete] 
        $T[ptr_deref_283_word_addrgen_update_start] 
        $T[ptr_deref_283_word_addrgen_update_complete] 
        ptr_deref_283_root_address_calculated &-> (ptr_deref_283_word_addrgen_sample_start)
        ptr_deref_283_word_address_calculated <-& (ptr_deref_283_word_addrgen_update_complete)
        ;;[ptr_deref_283_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_283_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_283_word_addrgen_sample_start &-> (ptr_deref_283_word_addrgen_0_Sample)
        ptr_deref_283_word_addrgen_update_start &-> (ptr_deref_283_word_addrgen_0_Update)
        ptr_deref_283_word_addrgen_sample_complete <-& (ptr_deref_283_word_addrgen_0_Sample)
        ptr_deref_283_word_addrgen_update_complete <-& (ptr_deref_283_word_addrgen_0_Update)
        ;;[ptr_deref_283_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_283_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_283_word_addrgen_sample_start &-> (ptr_deref_283_word_addrgen_1_Sample)
        ptr_deref_283_word_addrgen_update_start &-> (ptr_deref_283_word_addrgen_1_Update)
        ptr_deref_283_word_addrgen_sample_complete <-& (ptr_deref_283_word_addrgen_1_Sample)
        ptr_deref_283_word_addrgen_update_complete <-& (ptr_deref_283_word_addrgen_1_Update)
        ;;[ptr_deref_283_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_283_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_283_word_addrgen_sample_start &-> (ptr_deref_283_word_addrgen_2_Sample)
        ptr_deref_283_word_addrgen_update_start &-> (ptr_deref_283_word_addrgen_2_Update)
        ptr_deref_283_word_addrgen_sample_complete <-& (ptr_deref_283_word_addrgen_2_Sample)
        ptr_deref_283_word_addrgen_update_complete <-& (ptr_deref_283_word_addrgen_2_Update)
        ;;[ptr_deref_283_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_283_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_283_word_addrgen_sample_start &-> (ptr_deref_283_word_addrgen_3_Sample)
        ptr_deref_283_word_addrgen_update_start &-> (ptr_deref_283_word_addrgen_3_Update)
        ptr_deref_283_word_addrgen_sample_complete <-& (ptr_deref_283_word_addrgen_3_Sample)
        ptr_deref_283_word_addrgen_update_complete <-& (ptr_deref_283_word_addrgen_3_Update)
        ;;[ptr_deref_283_Sample] 
        {
          ;;[ptr_deref_283_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_283_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_283_sample_start_ <-& (ptr_deref_283_word_address_calculated)
        ptr_deref_283_sample_start_ &-> (ptr_deref_283_Sample)
        ptr_deref_283_sample_completed_ <-& (ptr_deref_283_Sample)
        ptr_deref_283_sample_completed_ &-> ($null)
        ptr_deref_283_update_start_ &-> (ptr_deref_283_Update)
        ptr_deref_283_update_completed_ <-& (ptr_deref_283_Update)
        // start: Forward dependencies from iNsTr_0 to transition ptr_deref_283_base_address_calculated
        // done: Forward dependencies from iNsTr_0 to transition ptr_deref_283_base_address_calculated
        ptr_deref_283_sample_start_ <-& (ptr_deref_283_base_address_calculated)
        // end:  		->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
        // start:  		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 126
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_288_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_288_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_288_update_start_] 
        $T[RPIPE_zeropad_input_pipe_288_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_288_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_288_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_288_sample_start_ &-> (RPIPE_zeropad_input_pipe_288_Sample)
        RPIPE_zeropad_input_pipe_288_sample_completed_ <-& (RPIPE_zeropad_input_pipe_288_Sample)
        RPIPE_zeropad_input_pipe_288_update_start_ <-& (RPIPE_zeropad_input_pipe_288_sample_completed_)
        RPIPE_zeropad_input_pipe_288_update_start_ &-> (RPIPE_zeropad_input_pipe_288_Update)
        RPIPE_zeropad_input_pipe_288_update_completed_ <-& (RPIPE_zeropad_input_pipe_288_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 127
        // constant! 
        // end:  		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_3) := call $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 128
        // Source expression
        // call
        // Target expression
        // ->(iNsTr_3)
        $T[ptr_deref_297_sample_start_] 
        $T[ptr_deref_297_sample_completed_] 
        $T[ptr_deref_297_update_start_] 
        $T[ptr_deref_297_update_completed_] 
        $T[ptr_deref_297_base_address_calculated] 
        // iNsTr_3
        $T[ptr_deref_297_word_address_calculated] 
        $T[ptr_deref_297_root_address_calculated] 
        $T[ptr_deref_297_base_address_resized] 
        ;;[ptr_deref_297_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_297_base_address_calculated &-> (ptr_deref_297_base_addr_resize)
        ptr_deref_297_base_address_resized <-& (ptr_deref_297_base_addr_resize)
        ;;[ptr_deref_297_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_297_base_address_resized &-> (ptr_deref_297_base_plus_offset)
        ptr_deref_297_root_address_calculated <-& (ptr_deref_297_base_plus_offset)
        ;;[ptr_deref_297_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_297_root_address_calculated &-> (ptr_deref_297_word_addrgen)
        ptr_deref_297_word_address_calculated <-& (ptr_deref_297_word_addrgen)
        ;;[ptr_deref_297_Sample] 
        {
          ;;[ptr_deref_297_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_297_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_297_sample_start_ <-& (ptr_deref_297_word_address_calculated)
        ptr_deref_297_sample_start_ &-> (ptr_deref_297_Sample)
        ptr_deref_297_sample_completed_ <-& (ptr_deref_297_Sample)
        ptr_deref_297_sample_completed_ &-> ($null)
        ptr_deref_297_update_start_ &-> (ptr_deref_297_Update)
        ptr_deref_297_update_completed_ <-& (ptr_deref_297_Update)
        // start: Forward dependencies from iNsTr_3 to transition ptr_deref_297_base_address_calculated
        // done: Forward dependencies from iNsTr_3 to transition ptr_deref_297_base_address_calculated
        ptr_deref_297_sample_start_ <-& (ptr_deref_297_base_address_calculated)
        // start: Forward dependencies from call to transition ptr_deref_297_sample_start_
        ptr_deref_297_sample_start_ <-& (RPIPE_zeropad_input_pipe_288_update_completed_)
        // done: Forward dependencies from call to transition ptr_deref_297_sample_start_
        // end:  		->(iNsTr_3) := call $buffering 1// bits of buffering = 8. 
        // start:  		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 129
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_301_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_301_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_301_update_start_] 
        $T[RPIPE_zeropad_input_pipe_301_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_301_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_301_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_301_sample_start_ &-> (RPIPE_zeropad_input_pipe_301_Sample)
        RPIPE_zeropad_input_pipe_301_sample_completed_ <-& (RPIPE_zeropad_input_pipe_301_Sample)
        RPIPE_zeropad_input_pipe_301_update_start_ <-& (RPIPE_zeropad_input_pipe_301_sample_completed_)
        RPIPE_zeropad_input_pipe_301_update_start_ &-> (RPIPE_zeropad_input_pipe_301_Update)
        RPIPE_zeropad_input_pipe_301_update_completed_ <-& (RPIPE_zeropad_input_pipe_301_Update)
        // Target expression
        // (as target) call1
        // start: WAR dependencies for call1
        // done: WAR dependencies for call1
        // end:  		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 130
        // Source expression
        // ($cast ($uint<32>) call1 )
        $T[type_cast_305_sample_start_] 
        $T[type_cast_305_sample_completed_] 
        $T[type_cast_305_update_start_] 
        $T[type_cast_305_update_completed_] 
        // call1
        // start: Forward dependencies from call1 to transition type_cast_305_sample_start_
        type_cast_305_sample_start_ <-& (RPIPE_zeropad_input_pipe_301_update_completed_)
        // done: Forward dependencies from call1 to transition type_cast_305_sample_start_
        ;;[type_cast_305_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_305_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_305_sample_start_ &-> (type_cast_305_Sample)
        type_cast_305_sample_completed_ <-& (type_cast_305_Sample)
        type_cast_305_sample_completed_ &-> ($null)
        type_cast_305_update_start_ &-> (type_cast_305_Update)
        type_cast_305_update_completed_ <-& (type_cast_305_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 131
        // constant! 
        // end:  		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_6) := conv $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 132
        // Source expression
        // conv
        // Target expression
        // ->(iNsTr_6)
        $T[ptr_deref_314_sample_start_] 
        $T[ptr_deref_314_sample_completed_] 
        $T[ptr_deref_314_update_start_] 
        $T[ptr_deref_314_update_completed_] 
        $T[ptr_deref_314_base_address_calculated] 
        // iNsTr_6
        $T[ptr_deref_314_word_address_calculated] 
        $T[ptr_deref_314_root_address_calculated] 
        $T[ptr_deref_314_base_address_resized] 
        ;;[ptr_deref_314_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_314_base_address_calculated &-> (ptr_deref_314_base_addr_resize)
        ptr_deref_314_base_address_resized <-& (ptr_deref_314_base_addr_resize)
        ;;[ptr_deref_314_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_314_base_address_resized &-> (ptr_deref_314_base_plus_offset)
        ptr_deref_314_root_address_calculated <-& (ptr_deref_314_base_plus_offset)
        $T[ptr_deref_314_word_addrgen_sample_start] 
        $T[ptr_deref_314_word_addrgen_sample_complete] 
        $T[ptr_deref_314_word_addrgen_update_start] 
        $T[ptr_deref_314_word_addrgen_update_complete] 
        ptr_deref_314_root_address_calculated &-> (ptr_deref_314_word_addrgen_sample_start)
        ptr_deref_314_word_address_calculated <-& (ptr_deref_314_word_addrgen_update_complete)
        ;;[ptr_deref_314_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_314_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_314_word_addrgen_sample_start &-> (ptr_deref_314_word_addrgen_0_Sample)
        ptr_deref_314_word_addrgen_update_start &-> (ptr_deref_314_word_addrgen_0_Update)
        ptr_deref_314_word_addrgen_sample_complete <-& (ptr_deref_314_word_addrgen_0_Sample)
        ptr_deref_314_word_addrgen_update_complete <-& (ptr_deref_314_word_addrgen_0_Update)
        ;;[ptr_deref_314_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_314_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_314_word_addrgen_sample_start &-> (ptr_deref_314_word_addrgen_1_Sample)
        ptr_deref_314_word_addrgen_update_start &-> (ptr_deref_314_word_addrgen_1_Update)
        ptr_deref_314_word_addrgen_sample_complete <-& (ptr_deref_314_word_addrgen_1_Sample)
        ptr_deref_314_word_addrgen_update_complete <-& (ptr_deref_314_word_addrgen_1_Update)
        ;;[ptr_deref_314_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_314_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_314_word_addrgen_sample_start &-> (ptr_deref_314_word_addrgen_2_Sample)
        ptr_deref_314_word_addrgen_update_start &-> (ptr_deref_314_word_addrgen_2_Update)
        ptr_deref_314_word_addrgen_sample_complete <-& (ptr_deref_314_word_addrgen_2_Sample)
        ptr_deref_314_word_addrgen_update_complete <-& (ptr_deref_314_word_addrgen_2_Update)
        ;;[ptr_deref_314_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_314_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_314_word_addrgen_sample_start &-> (ptr_deref_314_word_addrgen_3_Sample)
        ptr_deref_314_word_addrgen_update_start &-> (ptr_deref_314_word_addrgen_3_Update)
        ptr_deref_314_word_addrgen_sample_complete <-& (ptr_deref_314_word_addrgen_3_Sample)
        ptr_deref_314_word_addrgen_update_complete <-& (ptr_deref_314_word_addrgen_3_Update)
        ;;[ptr_deref_314_Sample] 
        {
          ;;[ptr_deref_314_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_314_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_314_sample_start_ <-& (ptr_deref_314_word_address_calculated)
        ptr_deref_314_sample_start_ &-> (ptr_deref_314_Sample)
        ptr_deref_314_sample_completed_ <-& (ptr_deref_314_Sample)
        ptr_deref_314_sample_completed_ &-> ($null)
        ptr_deref_314_update_start_ &-> (ptr_deref_314_Update)
        ptr_deref_314_update_completed_ <-& (ptr_deref_314_Update)
        // start: Forward dependencies from iNsTr_6 to transition ptr_deref_314_base_address_calculated
        // done: Forward dependencies from iNsTr_6 to transition ptr_deref_314_base_address_calculated
        ptr_deref_314_sample_start_ <-& (ptr_deref_314_base_address_calculated)
        // start: Forward dependencies from conv to transition ptr_deref_314_sample_start_
        ptr_deref_314_sample_start_ <-& (type_cast_305_update_completed_)
        // done: Forward dependencies from conv to transition ptr_deref_314_sample_start_
        // end:  		->(iNsTr_6) := conv $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for cmp86
        // done: WAR dependencies for cmp86
        // start:  		$volatile cmp86 := (call1 == ($bitcast ($uint<8>) _b00000000  )) $buffering 1
        //  file prog.linked.opt.aa, line 133
        // volatile! 
        // Source expression
        // (call1 == ($bitcast ($uint<8>) _b00000000  ))
        // call1
        // Target expression
        // (as target) cmp86
        // start: WAR dependencies for cmp86
        // done: WAR dependencies for cmp86
        // end:  		$volatile cmp86 := (call1 == ($bitcast ($uint<8>) _b00000000  )) $buffering 1
        // start:  		call487 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 134
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_324_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_324_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_324_update_start_] 
        $T[RPIPE_zeropad_input_pipe_324_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_324_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_324_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_324_sample_start_ &-> (RPIPE_zeropad_input_pipe_324_Sample)
        RPIPE_zeropad_input_pipe_324_sample_completed_ <-& (RPIPE_zeropad_input_pipe_324_Sample)
        RPIPE_zeropad_input_pipe_324_update_start_ <-& (RPIPE_zeropad_input_pipe_324_sample_completed_)
        RPIPE_zeropad_input_pipe_324_update_start_ &-> (RPIPE_zeropad_input_pipe_324_Update)
        RPIPE_zeropad_input_pipe_324_update_completed_ <-& (RPIPE_zeropad_input_pipe_324_Update)
        // Target expression
        // (as target) call487
        // start: WAR dependencies for call487
        // done: WAR dependencies for call487
        // end:  		call487 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_283 store
        //  ptr_deref_297 store
        $T [ptr_deref_283_ptr_deref_297_delay] $delay
        // ptr_deref_283(store) -> ptr_deref_297(store)
        ptr_deref_297_sample_start_ <-& (ptr_deref_283_ptr_deref_297_delay)
        ptr_deref_283_ptr_deref_297_delay <-& (ptr_deref_283_sample_completed_)
        //  ptr_deref_314 store
        $T [ptr_deref_297_ptr_deref_314_delay] $delay
        // ptr_deref_297(store) -> ptr_deref_314(store)
        ptr_deref_314_sample_start_ <-& (ptr_deref_297_ptr_deref_314_delay)
        ptr_deref_297_ptr_deref_314_delay <-& (ptr_deref_297_sample_completed_)
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        RPIPE_zeropad_input_pipe_301_sample_start_ <-& (RPIPE_zeropad_input_pipe_288_update_completed_)
        RPIPE_zeropad_input_pipe_324_sample_start_ <-& (RPIPE_zeropad_input_pipe_301_update_completed_)
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_281_to_assign_stmt_325__entry__ |-> (assign_stmt_281_to_assign_stmt_325)
      assign_stmt_281_to_assign_stmt_325__exit__ <-| (assign_stmt_281_to_assign_stmt_325)
      // if-statement  
      //  file prog.linked.opt.aa, line 135
      ;;[if_stmt_326_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_326__entry__ |-> (if_stmt_326_dead_link)
      if_stmt_326__exit__ <-| (if_stmt_326_dead_link)
      ;;[if_stmt_326_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_326__entry__ |-> (if_stmt_326_eval_test)
      $P [R_cmp86_327_place]
      R_cmp86_327_place <-| (if_stmt_326_eval_test)
      ;;[if_stmt_326_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_326_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp86_327_place |-> (if_stmt_326_if_link if_stmt_326_else_link)
      $P [entry_forx_xend]
      entry_forx_xend <-| (if_stmt_326_if_link)
      $P [entry_forx_xbodyx_xpreheader]
      entry_forx_xbodyx_xpreheader <-| (if_stmt_326_else_link)
      ::[assign_stmt_354_to_assign_stmt_397] 
      {
        // start: WAR dependencies for tmp
        // ignored out-of-scope w_root 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for tmp
        // start:  		$volatile tmp := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 149
        // volatile! 
        // Source expression
        // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar96
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // ignored out-of-scope w_root 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for tmp
        // end:  		$volatile tmp := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start:  		inc := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 150
        // Source expression
        // ($cast ($uint<32>) tmp )
        $T[type_cast_357_sample_start_] 
        $T[type_cast_357_sample_completed_] 
        $T[type_cast_357_update_start_] 
        $T[type_cast_357_update_completed_] 
        // tmp
        // start: Forward dependencies from tmp to transition type_cast_357_sample_start_
        // done: Forward dependencies from tmp to transition type_cast_357_sample_start_
        ;;[type_cast_357_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_357_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_357_sample_start_ &-> (type_cast_357_Sample)
        type_cast_357_sample_completed_ <-& (type_cast_357_Sample)
        type_cast_357_sample_completed_ &-> ($null)
        type_cast_357_update_start_ &-> (type_cast_357_Update)
        type_cast_357_update_completed_ <-& (type_cast_357_Update)
        // Target expression
        // (as target) inc
        // start: WAR dependencies for inc
        // done: WAR dependencies for inc
        // end:  		inc := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // start:  		arrayidx := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 151
        // Source expression
        // @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96])
        $T[addr_of_364_sample_start_] 
        $T[addr_of_364_sample_completed_] 
        $T[addr_of_364_update_start_] 
        $T[addr_of_364_update_completed_] 
        $T[array_obj_ref_363_root_address_calculated] 
        $T[array_obj_ref_363_offset_calculated] 
        $T[array_obj_ref_363_index_resized_1] 
        $T[array_obj_ref_363_index_scaled_1] 
        $T[array_obj_ref_363_index_computed_1] 
        // indvar96
        // start: Forward dependencies from indvar96 to transition array_obj_ref_363_index_computed_1
        // done: Forward dependencies from indvar96 to transition array_obj_ref_363_index_computed_1
        ;;[array_obj_ref_363_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_363_index_computed_1 &-> (array_obj_ref_363_index_resize_1)
        array_obj_ref_363_index_resized_1 <-& (array_obj_ref_363_index_resize_1)
        $T[array_obj_ref_363_index_scale_1_sample_start] 
        $T[array_obj_ref_363_index_scale_1_sample_complete] 
        $T[array_obj_ref_363_index_scale_1_update_start] 
        $T[array_obj_ref_363_index_scale_1_update_complete] 
        ;;[array_obj_ref_363_index_scale_1_Sample] 
        {
          $T [rr] $T [ra] 
        }
        ;;[array_obj_ref_363_index_scale_1_Update] 
        {
          $T [cr] $T [ca] 
        }
        array_obj_ref_363_index_resized_1 &-> (array_obj_ref_363_index_scale_1_sample_start)
        array_obj_ref_363_index_scale_1_sample_start &-> (array_obj_ref_363_index_scale_1_Sample)
        array_obj_ref_363_index_scale_1_sample_complete <-& (array_obj_ref_363_index_scale_1_Sample)
        array_obj_ref_363_index_scale_1_update_start &-> (array_obj_ref_363_index_scale_1_Update)
        array_obj_ref_363_index_scale_1_update_complete <-& (array_obj_ref_363_index_scale_1_Update)
        array_obj_ref_363_index_scaled_1 <-& (array_obj_ref_363_index_scale_1_update_complete)
        $T[array_obj_ref_363_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_363_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_363_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_363_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_363_index_scaled_1 &-> (array_obj_ref_363_final_index_sum_regn_Sample)
        array_obj_ref_363_final_index_sum_regn_sample_complete <-& (array_obj_ref_363_final_index_sum_regn_Sample)
        array_obj_ref_363_final_index_sum_regn_update_start &-> (array_obj_ref_363_final_index_sum_regn_Update)
        array_obj_ref_363_offset_calculated <-& (array_obj_ref_363_final_index_sum_regn_Update)
        ;;[array_obj_ref_363_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_363_offset_calculated &-> (array_obj_ref_363_base_plus_offset)
        array_obj_ref_363_root_address_calculated <-& (array_obj_ref_363_base_plus_offset)
        ;;[addr_of_364_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_364_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_364_sample_start_ <-& (array_obj_ref_363_root_address_calculated)
        addr_of_364_sample_start_ &-> (addr_of_364_request)
        addr_of_364_sample_completed_ <-& (addr_of_364_request)
        addr_of_364_sample_completed_ &-> ($null)
        addr_of_364_update_start_ &-> (addr_of_364_complete)
        addr_of_364_update_completed_ <-& (addr_of_364_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96]) $buffering 1// bits of buffering = 32. 
        // start:  		conv5 := ($cast ($uint<32>) call489 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 152
        // Source expression
        // ($cast ($uint<32>) call489 )
        $T[type_cast_368_sample_start_] 
        $T[type_cast_368_sample_completed_] 
        $T[type_cast_368_update_start_] 
        $T[type_cast_368_update_completed_] 
        // call489
        // start: Forward dependencies from call489 to transition type_cast_368_sample_start_
        // done: Forward dependencies from call489 to transition type_cast_368_sample_start_
        ;;[type_cast_368_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_368_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_368_sample_start_ &-> (type_cast_368_Sample)
        type_cast_368_sample_completed_ <-& (type_cast_368_Sample)
        type_cast_368_sample_completed_ &-> ($null)
        type_cast_368_update_start_ &-> (type_cast_368_Update)
        type_cast_368_update_completed_ <-& (type_cast_368_Update)
        // Target expression
        // (as target) conv5
        // start: WAR dependencies for conv5
        // done: WAR dependencies for conv5
        // end:  		conv5 := ($cast ($uint<32>) call489 ) $buffering 1// bits of buffering = 32. 
        // start:  		->(arrayidx) := conv5 $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 153
        // Source expression
        // conv5
        // Target expression
        // ->(arrayidx)
        $T[ptr_deref_371_sample_start_] 
        $T[ptr_deref_371_sample_completed_] 
        $T[ptr_deref_371_update_start_] 
        $T[ptr_deref_371_update_completed_] 
        $T[ptr_deref_371_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_371_word_address_calculated] 
        $T[ptr_deref_371_root_address_calculated] 
        $T[ptr_deref_371_base_address_resized] 
        ;;[ptr_deref_371_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_371_base_address_calculated &-> (ptr_deref_371_base_addr_resize)
        ptr_deref_371_base_address_resized <-& (ptr_deref_371_base_addr_resize)
        ;;[ptr_deref_371_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_371_base_address_resized &-> (ptr_deref_371_base_plus_offset)
        ptr_deref_371_root_address_calculated <-& (ptr_deref_371_base_plus_offset)
        $T[ptr_deref_371_word_addrgen_sample_start] 
        $T[ptr_deref_371_word_addrgen_sample_complete] 
        $T[ptr_deref_371_word_addrgen_update_start] 
        $T[ptr_deref_371_word_addrgen_update_complete] 
        ptr_deref_371_root_address_calculated &-> (ptr_deref_371_word_addrgen_sample_start)
        ptr_deref_371_word_address_calculated <-& (ptr_deref_371_word_addrgen_update_complete)
        ;;[ptr_deref_371_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_371_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_371_word_addrgen_sample_start &-> (ptr_deref_371_word_addrgen_0_Sample)
        ptr_deref_371_word_addrgen_update_start &-> (ptr_deref_371_word_addrgen_0_Update)
        ptr_deref_371_word_addrgen_sample_complete <-& (ptr_deref_371_word_addrgen_0_Sample)
        ptr_deref_371_word_addrgen_update_complete <-& (ptr_deref_371_word_addrgen_0_Update)
        ;;[ptr_deref_371_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_371_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_371_word_addrgen_sample_start &-> (ptr_deref_371_word_addrgen_1_Sample)
        ptr_deref_371_word_addrgen_update_start &-> (ptr_deref_371_word_addrgen_1_Update)
        ptr_deref_371_word_addrgen_sample_complete <-& (ptr_deref_371_word_addrgen_1_Sample)
        ptr_deref_371_word_addrgen_update_complete <-& (ptr_deref_371_word_addrgen_1_Update)
        ;;[ptr_deref_371_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_371_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_371_word_addrgen_sample_start &-> (ptr_deref_371_word_addrgen_2_Sample)
        ptr_deref_371_word_addrgen_update_start &-> (ptr_deref_371_word_addrgen_2_Update)
        ptr_deref_371_word_addrgen_sample_complete <-& (ptr_deref_371_word_addrgen_2_Sample)
        ptr_deref_371_word_addrgen_update_complete <-& (ptr_deref_371_word_addrgen_2_Update)
        ;;[ptr_deref_371_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_371_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_371_word_addrgen_sample_start &-> (ptr_deref_371_word_addrgen_3_Sample)
        ptr_deref_371_word_addrgen_update_start &-> (ptr_deref_371_word_addrgen_3_Update)
        ptr_deref_371_word_addrgen_sample_complete <-& (ptr_deref_371_word_addrgen_3_Sample)
        ptr_deref_371_word_addrgen_update_complete <-& (ptr_deref_371_word_addrgen_3_Update)
        ;;[ptr_deref_371_Sample] 
        {
          ;;[ptr_deref_371_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_371_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_371_sample_start_ <-& (ptr_deref_371_word_address_calculated)
        ptr_deref_371_sample_start_ &-> (ptr_deref_371_Sample)
        ptr_deref_371_sample_completed_ <-& (ptr_deref_371_Sample)
        ptr_deref_371_sample_completed_ &-> ($null)
        ptr_deref_371_update_start_ &-> (ptr_deref_371_Update)
        ptr_deref_371_update_completed_ <-& (ptr_deref_371_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_371_base_address_calculated
        ptr_deref_371_base_address_calculated <-& (addr_of_364_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_371_base_address_calculated
        ptr_deref_371_sample_start_ <-& (ptr_deref_371_base_address_calculated)
        // start: Forward dependencies from conv5 to transition ptr_deref_371_sample_start_
        ptr_deref_371_sample_start_ <-& (type_cast_368_update_completed_)
        // done: Forward dependencies from conv5 to transition ptr_deref_371_sample_start_
        // end:  		->(arrayidx) := conv5 $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for tmp98
        // ignored out-of-scope w_root 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for tmp98
        // start:  		$volatile tmp98 := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 154
        // volatile! 
        // Source expression
        // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar96
        // Target expression
        // (as target) tmp98
        // start: WAR dependencies for tmp98
        // ignored out-of-scope w_root 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
        // type of target is $uint<64>
        // done: WAR dependencies for tmp98
        // end:  		$volatile tmp98 := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start:  		iNsTr_28 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 155
        // constant! 
        // end:  		iNsTr_28 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp2 := ->(iNsTr_28) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 156
        // Source expression
        // ->(iNsTr_28)
        $T[ptr_deref_388_sample_start_] 
        $T[ptr_deref_388_sample_completed_] 
        $T[ptr_deref_388_update_start_] 
        $T[ptr_deref_388_update_completed_] 
        $T[ptr_deref_388_base_address_calculated] 
        // iNsTr_28
        $T[ptr_deref_388_word_address_calculated] 
        $T[ptr_deref_388_root_address_calculated] 
        $T[ptr_deref_388_base_address_resized] 
        ;;[ptr_deref_388_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_388_base_address_calculated &-> (ptr_deref_388_base_addr_resize)
        ptr_deref_388_base_address_resized <-& (ptr_deref_388_base_addr_resize)
        ;;[ptr_deref_388_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_388_base_address_resized &-> (ptr_deref_388_base_plus_offset)
        ptr_deref_388_root_address_calculated <-& (ptr_deref_388_base_plus_offset)
        $T[ptr_deref_388_word_addrgen_sample_start] 
        $T[ptr_deref_388_word_addrgen_sample_complete] 
        $T[ptr_deref_388_word_addrgen_update_start] 
        $T[ptr_deref_388_word_addrgen_update_complete] 
        ptr_deref_388_root_address_calculated &-> (ptr_deref_388_word_addrgen_sample_start)
        ptr_deref_388_word_address_calculated <-& (ptr_deref_388_word_addrgen_update_complete)
        ;;[ptr_deref_388_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_388_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_388_word_addrgen_sample_start &-> (ptr_deref_388_word_addrgen_0_Sample)
        ptr_deref_388_word_addrgen_update_start &-> (ptr_deref_388_word_addrgen_0_Update)
        ptr_deref_388_word_addrgen_sample_complete <-& (ptr_deref_388_word_addrgen_0_Sample)
        ptr_deref_388_word_addrgen_update_complete <-& (ptr_deref_388_word_addrgen_0_Update)
        ;;[ptr_deref_388_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_388_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_388_word_addrgen_sample_start &-> (ptr_deref_388_word_addrgen_1_Sample)
        ptr_deref_388_word_addrgen_update_start &-> (ptr_deref_388_word_addrgen_1_Update)
        ptr_deref_388_word_addrgen_sample_complete <-& (ptr_deref_388_word_addrgen_1_Sample)
        ptr_deref_388_word_addrgen_update_complete <-& (ptr_deref_388_word_addrgen_1_Update)
        ;;[ptr_deref_388_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_388_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_388_word_addrgen_sample_start &-> (ptr_deref_388_word_addrgen_2_Sample)
        ptr_deref_388_word_addrgen_update_start &-> (ptr_deref_388_word_addrgen_2_Update)
        ptr_deref_388_word_addrgen_sample_complete <-& (ptr_deref_388_word_addrgen_2_Sample)
        ptr_deref_388_word_addrgen_update_complete <-& (ptr_deref_388_word_addrgen_2_Update)
        ;;[ptr_deref_388_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_388_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_388_word_addrgen_sample_start &-> (ptr_deref_388_word_addrgen_3_Sample)
        ptr_deref_388_word_addrgen_update_start &-> (ptr_deref_388_word_addrgen_3_Update)
        ptr_deref_388_word_addrgen_sample_complete <-& (ptr_deref_388_word_addrgen_3_Sample)
        ptr_deref_388_word_addrgen_update_complete <-& (ptr_deref_388_word_addrgen_3_Update)
        ;;[ptr_deref_388_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_388_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_388_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_388_sample_start_ <-& (ptr_deref_388_word_address_calculated)
        ptr_deref_388_sample_start_ &-> (ptr_deref_388_Sample)
        ptr_deref_388_sample_completed_ <-& (ptr_deref_388_Sample)
        ptr_deref_388_sample_completed_ &-> ($null)
        ptr_deref_388_update_start_ &-> (ptr_deref_388_Update)
        ptr_deref_388_update_completed_ <-& (ptr_deref_388_Update)
        // start: Forward dependencies from iNsTr_28 to transition ptr_deref_388_base_address_calculated
        // done: Forward dependencies from iNsTr_28 to transition ptr_deref_388_base_address_calculated
        ptr_deref_388_sample_start_ <-& (ptr_deref_388_base_address_calculated)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := ->(iNsTr_28) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for cmp
        // done: WAR dependencies for cmp
        // start:  		$volatile cmp := (inc < tmp2) $buffering 1
        //  file prog.linked.opt.aa, line 157
        // volatile! 
        // Source expression
        // (inc < tmp2)
        // inc
        // tmp2
        // Target expression
        // (as target) cmp
        // start: WAR dependencies for cmp
        // done: WAR dependencies for cmp
        // end:  		$volatile cmp := (inc < tmp2) $buffering 1
        // start:  		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 158
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_396_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_396_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_396_update_start_] 
        $T[RPIPE_zeropad_input_pipe_396_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_396_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_396_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_396_sample_start_ &-> (RPIPE_zeropad_input_pipe_396_Sample)
        RPIPE_zeropad_input_pipe_396_sample_completed_ <-& (RPIPE_zeropad_input_pipe_396_Sample)
        RPIPE_zeropad_input_pipe_396_update_start_ <-& (RPIPE_zeropad_input_pipe_396_sample_completed_)
        RPIPE_zeropad_input_pipe_396_update_start_ &-> (RPIPE_zeropad_input_pipe_396_Update)
        RPIPE_zeropad_input_pipe_396_update_completed_ <-& (RPIPE_zeropad_input_pipe_396_Update)
        // Target expression
        // (as target) call4
        // start: WAR dependencies for call4
        // done: WAR dependencies for call4
        // end:  		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_371 store
        //  ptr_deref_388 load
        $T [ptr_deref_371_ptr_deref_388_delay] $delay
        // ptr_deref_371(store) -> ptr_deref_388(load)
        ptr_deref_388_sample_start_ <-& (ptr_deref_371_ptr_deref_388_delay)
        ptr_deref_371_ptr_deref_388_delay <-& (ptr_deref_371_sample_completed_)
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_354_to_assign_stmt_397__entry__ |-> (assign_stmt_354_to_assign_stmt_397)
      assign_stmt_354_to_assign_stmt_397__exit__ <-| (assign_stmt_354_to_assign_stmt_397)
      // if-statement  
      //  file prog.linked.opt.aa, line 159
      ;;[if_stmt_398_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_398__entry__ |-> (if_stmt_398_dead_link)
      if_stmt_398__exit__ <-| (if_stmt_398_dead_link)
      ;;[if_stmt_398_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_398__entry__ |-> (if_stmt_398_eval_test)
      $P [R_cmp_399_place]
      R_cmp_399_place <-| (if_stmt_398_eval_test)
      ;;[if_stmt_398_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_398_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp_399_place |-> (if_stmt_398_if_link if_stmt_398_else_link)
      $P [forx_xbody_forx_xbody]
      forx_xbody_forx_xbody <-| (if_stmt_398_if_link)
      $P [forx_xbody_forx_xendx_xloopexit]
      forx_xbody_forx_xendx_xloopexit <-| (if_stmt_398_else_link)
      ::[assign_stmt_421_to_assign_stmt_540] 
      {
        // start:  		pad := call4x_xlcssa $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 173
        // Source expression
        // call4x_xlcssa
        // Target expression
        // (as target) pad
        $T[STORE_pad_419_sample_start_] 
        $T[STORE_pad_419_sample_completed_] 
        $T[STORE_pad_419_update_start_] 
        $T[STORE_pad_419_update_completed_] 
        // pad
        $T[STORE_pad_419_word_address_calculated] 
        $T[STORE_pad_419_root_address_calculated] 
        STORE_pad_419_word_address_calculated <-& (STORE_pad_419_root_address_calculated)
        ;;[STORE_pad_419_Sample] 
        {
          ;;[STORE_pad_419_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_pad_419_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_pad_419_sample_start_ <-& (STORE_pad_419_word_address_calculated)
        STORE_pad_419_sample_start_ &-> (STORE_pad_419_Sample)
        STORE_pad_419_sample_completed_ <-& (STORE_pad_419_Sample)
        STORE_pad_419_sample_completed_ &-> ($null)
        STORE_pad_419_update_start_ &-> (STORE_pad_419_Update)
        STORE_pad_419_update_completed_ <-& (STORE_pad_419_Update)
        // start: Forward dependencies from call4x_xlcssa to transition STORE_pad_419_sample_start_
        // done: Forward dependencies from call4x_xlcssa to transition STORE_pad_419_sample_start_
        // end:  		pad := call4x_xlcssa $buffering 1// bits of buffering = 8. 
        // start:  		call9 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 174
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_423_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_423_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_423_update_start_] 
        $T[RPIPE_zeropad_input_pipe_423_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_423_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_423_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_423_sample_start_ &-> (RPIPE_zeropad_input_pipe_423_Sample)
        RPIPE_zeropad_input_pipe_423_sample_completed_ <-& (RPIPE_zeropad_input_pipe_423_Sample)
        RPIPE_zeropad_input_pipe_423_update_start_ <-& (RPIPE_zeropad_input_pipe_423_sample_completed_)
        RPIPE_zeropad_input_pipe_423_update_start_ &-> (RPIPE_zeropad_input_pipe_423_Update)
        RPIPE_zeropad_input_pipe_423_update_completed_ <-& (RPIPE_zeropad_input_pipe_423_Update)
        // Target expression
        // (as target) call9
        // start: WAR dependencies for call9
        // done: WAR dependencies for call9
        // end:  		call9 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv10 := ($cast ($uint<32>) call9 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 175
        // Source expression
        // ($cast ($uint<32>) call9 )
        $T[type_cast_427_sample_start_] 
        $T[type_cast_427_sample_completed_] 
        $T[type_cast_427_update_start_] 
        $T[type_cast_427_update_completed_] 
        // call9
        // start: Forward dependencies from call9 to transition type_cast_427_sample_start_
        type_cast_427_sample_start_ <-& (RPIPE_zeropad_input_pipe_423_update_completed_)
        // done: Forward dependencies from call9 to transition type_cast_427_sample_start_
        ;;[type_cast_427_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_427_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_427_sample_start_ &-> (type_cast_427_Sample)
        type_cast_427_sample_completed_ <-& (type_cast_427_Sample)
        type_cast_427_sample_completed_ &-> ($null)
        type_cast_427_update_start_ &-> (type_cast_427_Update)
        type_cast_427_update_completed_ <-& (type_cast_427_Update)
        // Target expression
        // (as target) conv10
        // start: WAR dependencies for conv10
        // done: WAR dependencies for conv10
        // end:  		conv10 := ($cast ($uint<32>) call9 ) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_12 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 176
        // constant! 
        // end:  		iNsTr_12 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_12) := conv10 $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 177
        // Source expression
        // conv10
        // Target expression
        // ->(iNsTr_12)
        $T[ptr_deref_438_sample_start_] 
        $T[ptr_deref_438_sample_completed_] 
        $T[ptr_deref_438_update_start_] 
        $T[ptr_deref_438_update_completed_] 
        $T[ptr_deref_438_base_address_calculated] 
        // iNsTr_12
        $T[ptr_deref_438_word_address_calculated] 
        $T[ptr_deref_438_root_address_calculated] 
        $T[ptr_deref_438_base_address_resized] 
        ;;[ptr_deref_438_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_438_base_address_calculated &-> (ptr_deref_438_base_addr_resize)
        ptr_deref_438_base_address_resized <-& (ptr_deref_438_base_addr_resize)
        ;;[ptr_deref_438_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_438_base_address_resized &-> (ptr_deref_438_base_plus_offset)
        ptr_deref_438_root_address_calculated <-& (ptr_deref_438_base_plus_offset)
        ;;[ptr_deref_438_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_438_root_address_calculated &-> (ptr_deref_438_word_addrgen)
        ptr_deref_438_word_address_calculated <-& (ptr_deref_438_word_addrgen)
        ;;[ptr_deref_438_Sample] 
        {
          ;;[ptr_deref_438_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_438_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_438_sample_start_ <-& (ptr_deref_438_word_address_calculated)
        ptr_deref_438_sample_start_ &-> (ptr_deref_438_Sample)
        ptr_deref_438_sample_completed_ <-& (ptr_deref_438_Sample)
        ptr_deref_438_sample_completed_ &-> ($null)
        ptr_deref_438_update_start_ &-> (ptr_deref_438_Update)
        ptr_deref_438_update_completed_ <-& (ptr_deref_438_Update)
        // start: Forward dependencies from iNsTr_12 to transition ptr_deref_438_base_address_calculated
        // done: Forward dependencies from iNsTr_12 to transition ptr_deref_438_base_address_calculated
        ptr_deref_438_sample_start_ <-& (ptr_deref_438_base_address_calculated)
        // start: Forward dependencies from conv10 to transition ptr_deref_438_sample_start_
        ptr_deref_438_sample_start_ <-& (type_cast_427_update_completed_)
        // done: Forward dependencies from conv10 to transition ptr_deref_438_sample_start_
        // end:  		->(iNsTr_12) := conv10 $buffering 1// bits of buffering = 32. 
        // start:  		call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 178
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_442_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_442_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_442_update_start_] 
        $T[RPIPE_zeropad_input_pipe_442_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_442_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_442_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_442_sample_start_ &-> (RPIPE_zeropad_input_pipe_442_Sample)
        RPIPE_zeropad_input_pipe_442_sample_completed_ <-& (RPIPE_zeropad_input_pipe_442_Sample)
        RPIPE_zeropad_input_pipe_442_update_start_ <-& (RPIPE_zeropad_input_pipe_442_sample_completed_)
        RPIPE_zeropad_input_pipe_442_update_start_ &-> (RPIPE_zeropad_input_pipe_442_Update)
        RPIPE_zeropad_input_pipe_442_update_completed_ <-& (RPIPE_zeropad_input_pipe_442_Update)
        // Target expression
        // (as target) call11
        // start: WAR dependencies for call11
        // done: WAR dependencies for call11
        // end:  		call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv12 := ($cast ($uint<32>) call11 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 179
        // Source expression
        // ($cast ($uint<32>) call11 )
        $T[type_cast_446_sample_start_] 
        $T[type_cast_446_sample_completed_] 
        $T[type_cast_446_update_start_] 
        $T[type_cast_446_update_completed_] 
        // call11
        // start: Forward dependencies from call11 to transition type_cast_446_sample_start_
        type_cast_446_sample_start_ <-& (RPIPE_zeropad_input_pipe_442_update_completed_)
        // done: Forward dependencies from call11 to transition type_cast_446_sample_start_
        ;;[type_cast_446_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_446_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_446_sample_start_ &-> (type_cast_446_Sample)
        type_cast_446_sample_completed_ <-& (type_cast_446_Sample)
        type_cast_446_sample_completed_ &-> ($null)
        type_cast_446_update_start_ &-> (type_cast_446_Update)
        type_cast_446_update_completed_ <-& (type_cast_446_Update)
        // Target expression
        // (as target) conv12
        // start: WAR dependencies for conv12
        // done: WAR dependencies for conv12
        // end:  		conv12 := ($cast ($uint<32>) call11 ) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_15 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 180
        // constant! 
        // end:  		iNsTr_15 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_15) := conv12 $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 181
        // Source expression
        // conv12
        // Target expression
        // ->(iNsTr_15)
        $T[ptr_deref_457_sample_start_] 
        $T[ptr_deref_457_sample_completed_] 
        $T[ptr_deref_457_update_start_] 
        $T[ptr_deref_457_update_completed_] 
        $T[ptr_deref_457_base_address_calculated] 
        // iNsTr_15
        $T[ptr_deref_457_word_address_calculated] 
        $T[ptr_deref_457_root_address_calculated] 
        $T[ptr_deref_457_base_address_resized] 
        ;;[ptr_deref_457_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_457_base_address_calculated &-> (ptr_deref_457_base_addr_resize)
        ptr_deref_457_base_address_resized <-& (ptr_deref_457_base_addr_resize)
        ;;[ptr_deref_457_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_457_base_address_resized &-> (ptr_deref_457_base_plus_offset)
        ptr_deref_457_root_address_calculated <-& (ptr_deref_457_base_plus_offset)
        ;;[ptr_deref_457_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_457_root_address_calculated &-> (ptr_deref_457_word_addrgen)
        ptr_deref_457_word_address_calculated <-& (ptr_deref_457_word_addrgen)
        ;;[ptr_deref_457_Sample] 
        {
          ;;[ptr_deref_457_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_457_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_457_sample_start_ <-& (ptr_deref_457_word_address_calculated)
        ptr_deref_457_sample_start_ &-> (ptr_deref_457_Sample)
        ptr_deref_457_sample_completed_ <-& (ptr_deref_457_Sample)
        ptr_deref_457_sample_completed_ &-> ($null)
        ptr_deref_457_update_start_ &-> (ptr_deref_457_Update)
        ptr_deref_457_update_completed_ <-& (ptr_deref_457_Update)
        // start: Forward dependencies from iNsTr_15 to transition ptr_deref_457_base_address_calculated
        // done: Forward dependencies from iNsTr_15 to transition ptr_deref_457_base_address_calculated
        ptr_deref_457_sample_start_ <-& (ptr_deref_457_base_address_calculated)
        // start: Forward dependencies from conv12 to transition ptr_deref_457_sample_start_
        ptr_deref_457_sample_start_ <-& (type_cast_446_update_completed_)
        // done: Forward dependencies from conv12 to transition ptr_deref_457_sample_start_
        // end:  		->(iNsTr_15) := conv12 $buffering 1// bits of buffering = 32. 
        // start:  		call13 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 182
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_461_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_461_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_461_update_start_] 
        $T[RPIPE_zeropad_input_pipe_461_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_461_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_461_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_461_sample_start_ &-> (RPIPE_zeropad_input_pipe_461_Sample)
        RPIPE_zeropad_input_pipe_461_sample_completed_ <-& (RPIPE_zeropad_input_pipe_461_Sample)
        RPIPE_zeropad_input_pipe_461_update_start_ <-& (RPIPE_zeropad_input_pipe_461_sample_completed_)
        RPIPE_zeropad_input_pipe_461_update_start_ &-> (RPIPE_zeropad_input_pipe_461_Update)
        RPIPE_zeropad_input_pipe_461_update_completed_ <-& (RPIPE_zeropad_input_pipe_461_Update)
        // Target expression
        // (as target) call13
        // start: WAR dependencies for call13
        // done: WAR dependencies for call13
        // end:  		call13 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv14 := ($cast ($uint<32>) call13 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 183
        // Source expression
        // ($cast ($uint<32>) call13 )
        $T[type_cast_465_sample_start_] 
        $T[type_cast_465_sample_completed_] 
        $T[type_cast_465_update_start_] 
        $T[type_cast_465_update_completed_] 
        // call13
        // start: Forward dependencies from call13 to transition type_cast_465_sample_start_
        type_cast_465_sample_start_ <-& (RPIPE_zeropad_input_pipe_461_update_completed_)
        // done: Forward dependencies from call13 to transition type_cast_465_sample_start_
        ;;[type_cast_465_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_465_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_465_sample_start_ &-> (type_cast_465_Sample)
        type_cast_465_sample_completed_ <-& (type_cast_465_Sample)
        type_cast_465_sample_completed_ &-> ($null)
        type_cast_465_update_start_ &-> (type_cast_465_Update)
        type_cast_465_update_completed_ <-& (type_cast_465_Update)
        // Target expression
        // (as target) conv14
        // start: WAR dependencies for conv14
        // done: WAR dependencies for conv14
        // end:  		conv14 := ($cast ($uint<32>) call13 ) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_18 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 184
        // constant! 
        // end:  		iNsTr_18 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		->(iNsTr_18) := conv14 $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 185
        // Source expression
        // conv14
        // Target expression
        // ->(iNsTr_18)
        $T[ptr_deref_476_sample_start_] 
        $T[ptr_deref_476_sample_completed_] 
        $T[ptr_deref_476_update_start_] 
        $T[ptr_deref_476_update_completed_] 
        $T[ptr_deref_476_base_address_calculated] 
        // iNsTr_18
        $T[ptr_deref_476_word_address_calculated] 
        $T[ptr_deref_476_root_address_calculated] 
        $T[ptr_deref_476_base_address_resized] 
        ;;[ptr_deref_476_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_476_base_address_calculated &-> (ptr_deref_476_base_addr_resize)
        ptr_deref_476_base_address_resized <-& (ptr_deref_476_base_addr_resize)
        ;;[ptr_deref_476_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_476_base_address_resized &-> (ptr_deref_476_base_plus_offset)
        ptr_deref_476_root_address_calculated <-& (ptr_deref_476_base_plus_offset)
        ;;[ptr_deref_476_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_476_root_address_calculated &-> (ptr_deref_476_word_addrgen)
        ptr_deref_476_word_address_calculated <-& (ptr_deref_476_word_addrgen)
        ;;[ptr_deref_476_Sample] 
        {
          ;;[ptr_deref_476_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_476_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_476_sample_start_ <-& (ptr_deref_476_word_address_calculated)
        ptr_deref_476_sample_start_ &-> (ptr_deref_476_Sample)
        ptr_deref_476_sample_completed_ <-& (ptr_deref_476_Sample)
        ptr_deref_476_sample_completed_ &-> ($null)
        ptr_deref_476_update_start_ &-> (ptr_deref_476_Update)
        ptr_deref_476_update_completed_ <-& (ptr_deref_476_Update)
        // start: Forward dependencies from iNsTr_18 to transition ptr_deref_476_base_address_calculated
        // done: Forward dependencies from iNsTr_18 to transition ptr_deref_476_base_address_calculated
        ptr_deref_476_sample_start_ <-& (ptr_deref_476_base_address_calculated)
        // start: Forward dependencies from conv14 to transition ptr_deref_476_sample_start_
        ptr_deref_476_sample_start_ <-& (type_cast_465_update_completed_)
        // done: Forward dependencies from conv14 to transition ptr_deref_476_sample_start_
        // end:  		->(iNsTr_18) := conv14 $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_20 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 186
        // constant! 
        // end:  		iNsTr_20 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 187
        // Source expression
        // ->(iNsTr_20)
        $T[ptr_deref_489_sample_start_] 
        $T[ptr_deref_489_sample_completed_] 
        $T[ptr_deref_489_update_start_] 
        $T[ptr_deref_489_update_completed_] 
        $T[ptr_deref_489_base_address_calculated] 
        // iNsTr_20
        $T[ptr_deref_489_word_address_calculated] 
        $T[ptr_deref_489_root_address_calculated] 
        $T[ptr_deref_489_base_address_resized] 
        ;;[ptr_deref_489_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_489_base_address_calculated &-> (ptr_deref_489_base_addr_resize)
        ptr_deref_489_base_address_resized <-& (ptr_deref_489_base_addr_resize)
        ;;[ptr_deref_489_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_489_base_address_resized &-> (ptr_deref_489_base_plus_offset)
        ptr_deref_489_root_address_calculated <-& (ptr_deref_489_base_plus_offset)
        $T[ptr_deref_489_word_addrgen_sample_start] 
        $T[ptr_deref_489_word_addrgen_sample_complete] 
        $T[ptr_deref_489_word_addrgen_update_start] 
        $T[ptr_deref_489_word_addrgen_update_complete] 
        ptr_deref_489_root_address_calculated &-> (ptr_deref_489_word_addrgen_sample_start)
        ptr_deref_489_word_address_calculated <-& (ptr_deref_489_word_addrgen_update_complete)
        ;;[ptr_deref_489_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_489_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_489_word_addrgen_sample_start &-> (ptr_deref_489_word_addrgen_0_Sample)
        ptr_deref_489_word_addrgen_update_start &-> (ptr_deref_489_word_addrgen_0_Update)
        ptr_deref_489_word_addrgen_sample_complete <-& (ptr_deref_489_word_addrgen_0_Sample)
        ptr_deref_489_word_addrgen_update_complete <-& (ptr_deref_489_word_addrgen_0_Update)
        ;;[ptr_deref_489_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_489_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_489_word_addrgen_sample_start &-> (ptr_deref_489_word_addrgen_1_Sample)
        ptr_deref_489_word_addrgen_update_start &-> (ptr_deref_489_word_addrgen_1_Update)
        ptr_deref_489_word_addrgen_sample_complete <-& (ptr_deref_489_word_addrgen_1_Sample)
        ptr_deref_489_word_addrgen_update_complete <-& (ptr_deref_489_word_addrgen_1_Update)
        ;;[ptr_deref_489_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_489_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_489_word_addrgen_sample_start &-> (ptr_deref_489_word_addrgen_2_Sample)
        ptr_deref_489_word_addrgen_update_start &-> (ptr_deref_489_word_addrgen_2_Update)
        ptr_deref_489_word_addrgen_sample_complete <-& (ptr_deref_489_word_addrgen_2_Sample)
        ptr_deref_489_word_addrgen_update_complete <-& (ptr_deref_489_word_addrgen_2_Update)
        ;;[ptr_deref_489_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_489_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_489_word_addrgen_sample_start &-> (ptr_deref_489_word_addrgen_3_Sample)
        ptr_deref_489_word_addrgen_update_start &-> (ptr_deref_489_word_addrgen_3_Update)
        ptr_deref_489_word_addrgen_sample_complete <-& (ptr_deref_489_word_addrgen_3_Sample)
        ptr_deref_489_word_addrgen_update_complete <-& (ptr_deref_489_word_addrgen_3_Update)
        ;;[ptr_deref_489_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_489_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_489_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_489_sample_start_ <-& (ptr_deref_489_word_address_calculated)
        ptr_deref_489_sample_start_ &-> (ptr_deref_489_Sample)
        ptr_deref_489_sample_completed_ <-& (ptr_deref_489_Sample)
        ptr_deref_489_sample_completed_ &-> ($null)
        ptr_deref_489_update_start_ &-> (ptr_deref_489_Update)
        ptr_deref_489_update_completed_ <-& (ptr_deref_489_Update)
        // start: Forward dependencies from iNsTr_20 to transition ptr_deref_489_base_address_calculated
        // done: Forward dependencies from iNsTr_20 to transition ptr_deref_489_base_address_calculated
        ptr_deref_489_sample_start_ <-& (ptr_deref_489_base_address_calculated)
        // Target expression
        // (as target) tmp16
        // start: WAR dependencies for tmp16
        // done: WAR dependencies for tmp16
        // end:  		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_21 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 188
        // constant! 
        // end:  		iNsTr_21 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 189
        // Source expression
        // ->(iNsTr_21)
        $T[ptr_deref_501_sample_start_] 
        $T[ptr_deref_501_sample_completed_] 
        $T[ptr_deref_501_update_start_] 
        $T[ptr_deref_501_update_completed_] 
        $T[ptr_deref_501_base_address_calculated] 
        // iNsTr_21
        $T[ptr_deref_501_word_address_calculated] 
        $T[ptr_deref_501_root_address_calculated] 
        $T[ptr_deref_501_base_address_resized] 
        ;;[ptr_deref_501_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_501_base_address_calculated &-> (ptr_deref_501_base_addr_resize)
        ptr_deref_501_base_address_resized <-& (ptr_deref_501_base_addr_resize)
        ;;[ptr_deref_501_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_501_base_address_resized &-> (ptr_deref_501_base_plus_offset)
        ptr_deref_501_root_address_calculated <-& (ptr_deref_501_base_plus_offset)
        $T[ptr_deref_501_word_addrgen_sample_start] 
        $T[ptr_deref_501_word_addrgen_sample_complete] 
        $T[ptr_deref_501_word_addrgen_update_start] 
        $T[ptr_deref_501_word_addrgen_update_complete] 
        ptr_deref_501_root_address_calculated &-> (ptr_deref_501_word_addrgen_sample_start)
        ptr_deref_501_word_address_calculated <-& (ptr_deref_501_word_addrgen_update_complete)
        ;;[ptr_deref_501_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_501_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_501_word_addrgen_sample_start &-> (ptr_deref_501_word_addrgen_0_Sample)
        ptr_deref_501_word_addrgen_update_start &-> (ptr_deref_501_word_addrgen_0_Update)
        ptr_deref_501_word_addrgen_sample_complete <-& (ptr_deref_501_word_addrgen_0_Sample)
        ptr_deref_501_word_addrgen_update_complete <-& (ptr_deref_501_word_addrgen_0_Update)
        ;;[ptr_deref_501_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_501_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_501_word_addrgen_sample_start &-> (ptr_deref_501_word_addrgen_1_Sample)
        ptr_deref_501_word_addrgen_update_start &-> (ptr_deref_501_word_addrgen_1_Update)
        ptr_deref_501_word_addrgen_sample_complete <-& (ptr_deref_501_word_addrgen_1_Sample)
        ptr_deref_501_word_addrgen_update_complete <-& (ptr_deref_501_word_addrgen_1_Update)
        ;;[ptr_deref_501_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_501_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_501_word_addrgen_sample_start &-> (ptr_deref_501_word_addrgen_2_Sample)
        ptr_deref_501_word_addrgen_update_start &-> (ptr_deref_501_word_addrgen_2_Update)
        ptr_deref_501_word_addrgen_sample_complete <-& (ptr_deref_501_word_addrgen_2_Sample)
        ptr_deref_501_word_addrgen_update_complete <-& (ptr_deref_501_word_addrgen_2_Update)
        ;;[ptr_deref_501_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_501_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_501_word_addrgen_sample_start &-> (ptr_deref_501_word_addrgen_3_Sample)
        ptr_deref_501_word_addrgen_update_start &-> (ptr_deref_501_word_addrgen_3_Update)
        ptr_deref_501_word_addrgen_sample_complete <-& (ptr_deref_501_word_addrgen_3_Sample)
        ptr_deref_501_word_addrgen_update_complete <-& (ptr_deref_501_word_addrgen_3_Update)
        ;;[ptr_deref_501_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_501_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_501_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_501_sample_start_ <-& (ptr_deref_501_word_address_calculated)
        ptr_deref_501_sample_start_ &-> (ptr_deref_501_Sample)
        ptr_deref_501_sample_completed_ <-& (ptr_deref_501_Sample)
        ptr_deref_501_sample_completed_ &-> ($null)
        ptr_deref_501_update_start_ &-> (ptr_deref_501_Update)
        ptr_deref_501_update_completed_ <-& (ptr_deref_501_Update)
        // start: Forward dependencies from iNsTr_21 to transition ptr_deref_501_base_address_calculated
        // done: Forward dependencies from iNsTr_21 to transition ptr_deref_501_base_address_calculated
        ptr_deref_501_sample_start_ <-& (ptr_deref_501_base_address_calculated)
        // Target expression
        // (as target) tmp17
        // start: WAR dependencies for tmp17
        // done: WAR dependencies for tmp17
        // end:  		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_22 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 190
        // constant! 
        // end:  		iNsTr_22 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 191
        // Source expression
        // ->(iNsTr_22)
        $T[ptr_deref_513_sample_start_] 
        $T[ptr_deref_513_sample_completed_] 
        $T[ptr_deref_513_update_start_] 
        $T[ptr_deref_513_update_completed_] 
        $T[ptr_deref_513_base_address_calculated] 
        // iNsTr_22
        $T[ptr_deref_513_word_address_calculated] 
        $T[ptr_deref_513_root_address_calculated] 
        $T[ptr_deref_513_base_address_resized] 
        ;;[ptr_deref_513_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_513_base_address_calculated &-> (ptr_deref_513_base_addr_resize)
        ptr_deref_513_base_address_resized <-& (ptr_deref_513_base_addr_resize)
        ;;[ptr_deref_513_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_513_base_address_resized &-> (ptr_deref_513_base_plus_offset)
        ptr_deref_513_root_address_calculated <-& (ptr_deref_513_base_plus_offset)
        $T[ptr_deref_513_word_addrgen_sample_start] 
        $T[ptr_deref_513_word_addrgen_sample_complete] 
        $T[ptr_deref_513_word_addrgen_update_start] 
        $T[ptr_deref_513_word_addrgen_update_complete] 
        ptr_deref_513_root_address_calculated &-> (ptr_deref_513_word_addrgen_sample_start)
        ptr_deref_513_word_address_calculated <-& (ptr_deref_513_word_addrgen_update_complete)
        ;;[ptr_deref_513_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_513_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_513_word_addrgen_sample_start &-> (ptr_deref_513_word_addrgen_0_Sample)
        ptr_deref_513_word_addrgen_update_start &-> (ptr_deref_513_word_addrgen_0_Update)
        ptr_deref_513_word_addrgen_sample_complete <-& (ptr_deref_513_word_addrgen_0_Sample)
        ptr_deref_513_word_addrgen_update_complete <-& (ptr_deref_513_word_addrgen_0_Update)
        ;;[ptr_deref_513_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_513_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_513_word_addrgen_sample_start &-> (ptr_deref_513_word_addrgen_1_Sample)
        ptr_deref_513_word_addrgen_update_start &-> (ptr_deref_513_word_addrgen_1_Update)
        ptr_deref_513_word_addrgen_sample_complete <-& (ptr_deref_513_word_addrgen_1_Sample)
        ptr_deref_513_word_addrgen_update_complete <-& (ptr_deref_513_word_addrgen_1_Update)
        ;;[ptr_deref_513_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_513_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_513_word_addrgen_sample_start &-> (ptr_deref_513_word_addrgen_2_Sample)
        ptr_deref_513_word_addrgen_update_start &-> (ptr_deref_513_word_addrgen_2_Update)
        ptr_deref_513_word_addrgen_sample_complete <-& (ptr_deref_513_word_addrgen_2_Sample)
        ptr_deref_513_word_addrgen_update_complete <-& (ptr_deref_513_word_addrgen_2_Update)
        ;;[ptr_deref_513_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_513_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_513_word_addrgen_sample_start &-> (ptr_deref_513_word_addrgen_3_Sample)
        ptr_deref_513_word_addrgen_update_start &-> (ptr_deref_513_word_addrgen_3_Update)
        ptr_deref_513_word_addrgen_sample_complete <-& (ptr_deref_513_word_addrgen_3_Sample)
        ptr_deref_513_word_addrgen_update_complete <-& (ptr_deref_513_word_addrgen_3_Update)
        ;;[ptr_deref_513_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_513_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_513_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_513_sample_start_ <-& (ptr_deref_513_word_address_calculated)
        ptr_deref_513_sample_start_ &-> (ptr_deref_513_Sample)
        ptr_deref_513_sample_completed_ <-& (ptr_deref_513_Sample)
        ptr_deref_513_sample_completed_ &-> ($null)
        ptr_deref_513_update_start_ &-> (ptr_deref_513_Update)
        ptr_deref_513_update_completed_ <-& (ptr_deref_513_Update)
        // start: Forward dependencies from iNsTr_22 to transition ptr_deref_513_base_address_calculated
        // done: Forward dependencies from iNsTr_22 to transition ptr_deref_513_base_address_calculated
        ptr_deref_513_sample_start_ <-& (ptr_deref_513_base_address_calculated)
        // Target expression
        // (as target) tmp18
        // start: WAR dependencies for tmp18
        // done: WAR dependencies for tmp18
        // end:  		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // start:  		$volatile mul := (tmp17 * tmp16) $buffering 1
        //  file prog.linked.opt.aa, line 192
        // volatile! 
        // Source expression
        // (tmp17 * tmp16)
        // tmp17
        // tmp16
        // Target expression
        // (as target) mul
        // start: WAR dependencies for mul
        // done: WAR dependencies for mul
        // end:  		$volatile mul := (tmp17 * tmp16) $buffering 1
        // start: WAR dependencies for mul19
        // done: WAR dependencies for mul19
        // start:  		$volatile mul19 := (mul * tmp18) $buffering 1
        //  file prog.linked.opt.aa, line 193
        // volatile! 
        // Source expression
        // (mul * tmp18)
        // mul
        // tmp18
        // Target expression
        // (as target) mul19
        // start: WAR dependencies for mul19
        // done: WAR dependencies for mul19
        // end:  		$volatile mul19 := (mul * tmp18) $buffering 1
        // start:  		conv20 := ($cast ($uint<64>) mul19 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 194
        // Source expression
        // ($cast ($uint<64>) mul19 )
        $T[type_cast_527_sample_start_] 
        $T[type_cast_527_sample_completed_] 
        $T[type_cast_527_update_start_] 
        $T[type_cast_527_update_completed_] 
        // mul19
        // start: Forward dependencies from mul19 to transition type_cast_527_sample_start_
        type_cast_527_sample_start_ <-& (ptr_deref_489_update_completed_)
        type_cast_527_sample_start_ <-& (ptr_deref_501_update_completed_)
        type_cast_527_sample_start_ <-& (ptr_deref_513_update_completed_)
        // done: Forward dependencies from mul19 to transition type_cast_527_sample_start_
        ;;[type_cast_527_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_527_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_527_sample_start_ &-> (type_cast_527_Sample)
        type_cast_527_sample_completed_ <-& (type_cast_527_Sample)
        type_cast_527_sample_completed_ &-> ($null)
        type_cast_527_update_start_ &-> (type_cast_527_Update)
        type_cast_527_update_completed_ <-& (type_cast_527_Update)
        // Target expression
        // (as target) conv20
        // start: WAR dependencies for conv20
        // done: WAR dependencies for conv20
        // end:  		conv20 := ($cast ($uint<64>) mul19 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shr82x_xmask
        // done: WAR dependencies for shr82x_xmask
        // start:  		$volatile shr82x_xmask := (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
        //  file prog.linked.opt.aa, line 195
        // volatile! 
        // Source expression
        // (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
        // conv20
        // Target expression
        // (as target) shr82x_xmask
        // start: WAR dependencies for shr82x_xmask
        // done: WAR dependencies for shr82x_xmask
        // end:  		$volatile shr82x_xmask := (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
        // start: WAR dependencies for cmp2583
        // done: WAR dependencies for cmp2583
        // start:  		$volatile cmp2583 := (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        //  file prog.linked.opt.aa, line 196
        // volatile! 
        // Source expression
        // (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
        // shr82x_xmask
        // Target expression
        // (as target) cmp2583
        // start: WAR dependencies for cmp2583
        // done: WAR dependencies for cmp2583
        // end:  		$volatile cmp2583 := (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_4
        //  STORE_pad_419 store
        // memory-space  memory_space_3
        //  ptr_deref_438 store
        //  ptr_deref_457 store
        $T [ptr_deref_438_ptr_deref_457_delay] $delay
        // ptr_deref_438(store) -> ptr_deref_457(store)
        ptr_deref_457_sample_start_ <-& (ptr_deref_438_ptr_deref_457_delay)
        ptr_deref_438_ptr_deref_457_delay <-& (ptr_deref_438_sample_completed_)
        //  ptr_deref_476 store
        $T [ptr_deref_457_ptr_deref_476_delay] $delay
        // ptr_deref_457(store) -> ptr_deref_476(store)
        ptr_deref_476_sample_start_ <-& (ptr_deref_457_ptr_deref_476_delay)
        ptr_deref_457_ptr_deref_476_delay <-& (ptr_deref_457_sample_completed_)
        // memory-space  memory_space_2
        //  ptr_deref_489 load
        //  ptr_deref_501 load
        //  ptr_deref_513 load
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        RPIPE_zeropad_input_pipe_442_sample_start_ <-& (RPIPE_zeropad_input_pipe_423_update_completed_)
        RPIPE_zeropad_input_pipe_461_sample_start_ <-& (RPIPE_zeropad_input_pipe_442_update_completed_)
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_421_to_assign_stmt_540__entry__ |-> (assign_stmt_421_to_assign_stmt_540)
      assign_stmt_421_to_assign_stmt_540__exit__ <-| (assign_stmt_421_to_assign_stmt_540)
      // if-statement  
      //  file prog.linked.opt.aa, line 197
      ;;[if_stmt_541_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_541__entry__ |-> (if_stmt_541_dead_link)
      if_stmt_541__exit__ <-| (if_stmt_541_dead_link)
      ;;[if_stmt_541_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_541__entry__ |-> (if_stmt_541_eval_test)
      $P [R_cmp2583_542_place]
      R_cmp2583_542_place <-| (if_stmt_541_eval_test)
      ;;[if_stmt_541_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_541_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp2583_542_place |-> (if_stmt_541_if_link if_stmt_541_else_link)
      $P [forx_xend_forx_xend78]
      forx_xend_forx_xend78 <-| (if_stmt_541_if_link)
      $P [forx_xend_bbx_xnph]
      forx_xend_bbx_xnph <-| (if_stmt_541_else_link)
      ::[assign_stmt_552_to_assign_stmt_580] 
      {
        // start: WAR dependencies for tmp4
        // ignored out-of-scope w_root 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp4
        // start:  		$volatile tmp4 := (tmp17 * tmp16) $buffering 1
        //  file prog.linked.opt.aa, line 204
        // volatile! 
        // Source expression
        // (tmp17 * tmp16)
        // tmp17
        // tmp16
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // ignored out-of-scope w_root 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp4
        // end:  		$volatile tmp4 := (tmp17 * tmp16) $buffering 1
        // start: WAR dependencies for tmp5
        // ignored out-of-scope w_root 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp5
        // start:  		$volatile tmp5 := (tmp4 * tmp18) $buffering 1
        //  file prog.linked.opt.aa, line 205
        // volatile! 
        // Source expression
        // (tmp4 * tmp18)
        // tmp4
        // tmp18
        // Target expression
        // (as target) tmp5
        // start: WAR dependencies for tmp5
        // ignored out-of-scope w_root 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for tmp5
        // end:  		$volatile tmp5 := (tmp4 * tmp18) $buffering 1
        // start:  		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 206
        // Source expression
        // ($cast ($uint<64>) tmp5 )
        $T[type_cast_560_sample_start_] 
        $T[type_cast_560_sample_completed_] 
        $T[type_cast_560_update_start_] 
        $T[type_cast_560_update_completed_] 
        // tmp5
        // start: Forward dependencies from tmp5 to transition type_cast_560_sample_start_
        // done: Forward dependencies from tmp5 to transition type_cast_560_sample_start_
        ;;[type_cast_560_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_560_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_560_sample_start_ &-> (type_cast_560_Sample)
        type_cast_560_sample_completed_ <-& (type_cast_560_Sample)
        type_cast_560_sample_completed_ &-> ($null)
        type_cast_560_update_start_ &-> (type_cast_560_Update)
        type_cast_560_update_completed_ <-& (type_cast_560_Update)
        // Target expression
        // (as target) tmp6
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // end:  		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // start:  		$volatile tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        //  file prog.linked.opt.aa, line 207
        // volatile! 
        // Source expression
        // (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
        // tmp6
        // Target expression
        // (as target) tmp7
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // end:  		$volatile tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
        // start: WAR dependencies for tmp8
        // done: WAR dependencies for tmp8
        // start:  		$volatile tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 208
        // volatile! 
        // Source expression
        // (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // tmp7
        // Target expression
        // (as target) tmp8
        // start: WAR dependencies for tmp8
        // done: WAR dependencies for tmp8
        // end:  		$volatile tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for umax9
        // done: WAR dependencies for umax9
        // start:  		$volatile umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        //  file prog.linked.opt.aa, line 209
        // volatile! 
        // Source expression
        // ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // tmp8
        // tmp7
        // Target expression
        // (as target) umax9
        // start: WAR dependencies for umax9
        // done: WAR dependencies for umax9
        // end:  		$volatile umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
        // load-store dependencies..
      }
      assign_stmt_552_to_assign_stmt_580__entry__ |-> (assign_stmt_552_to_assign_stmt_580)
      assign_stmt_552_to_assign_stmt_580__exit__ <-| (assign_stmt_552_to_assign_stmt_580)
      ::[assign_stmt_597_to_assign_stmt_745] 
      {
        // start:  		arrayidx74 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 215
        // Source expression
        // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
        $T[addr_of_596_sample_start_] 
        $T[addr_of_596_sample_completed_] 
        $T[addr_of_596_update_start_] 
        $T[addr_of_596_update_completed_] 
        $T[array_obj_ref_595_root_address_calculated] 
        $T[array_obj_ref_595_offset_calculated] 
        $T[array_obj_ref_595_index_resized_1] 
        $T[array_obj_ref_595_index_scaled_1] 
        $T[array_obj_ref_595_index_computed_1] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_595_index_computed_1
        // done: Forward dependencies from indvar to transition array_obj_ref_595_index_computed_1
        ;;[array_obj_ref_595_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_595_index_computed_1 &-> (array_obj_ref_595_index_resize_1)
        array_obj_ref_595_index_resized_1 <-& (array_obj_ref_595_index_resize_1)
        ;;[array_obj_ref_595_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_595_index_resized_1 &-> (array_obj_ref_595_index_scale_1)
        array_obj_ref_595_index_scaled_1 <-& (array_obj_ref_595_index_scale_1)
        $T[array_obj_ref_595_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_595_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_595_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_595_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_595_index_scaled_1 &-> (array_obj_ref_595_final_index_sum_regn_Sample)
        array_obj_ref_595_final_index_sum_regn_sample_complete <-& (array_obj_ref_595_final_index_sum_regn_Sample)
        array_obj_ref_595_final_index_sum_regn_update_start &-> (array_obj_ref_595_final_index_sum_regn_Update)
        array_obj_ref_595_offset_calculated <-& (array_obj_ref_595_final_index_sum_regn_Update)
        ;;[array_obj_ref_595_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_595_offset_calculated &-> (array_obj_ref_595_base_plus_offset)
        array_obj_ref_595_root_address_calculated <-& (array_obj_ref_595_base_plus_offset)
        ;;[addr_of_596_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_596_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_596_sample_start_ <-& (array_obj_ref_595_root_address_calculated)
        addr_of_596_sample_start_ &-> (addr_of_596_request)
        addr_of_596_sample_completed_ <-& (addr_of_596_request)
        addr_of_596_sample_completed_ &-> ($null)
        addr_of_596_update_start_ &-> (addr_of_596_complete)
        addr_of_596_update_completed_ <-& (addr_of_596_complete)
        // Target expression
        // (as target) arrayidx74
        // start: WAR dependencies for arrayidx74
        // done: WAR dependencies for arrayidx74
        // end:  		arrayidx74 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
        // start:  		call29 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 216
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_599_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_599_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_599_update_start_] 
        $T[RPIPE_zeropad_input_pipe_599_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_599_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_599_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_599_sample_start_ &-> (RPIPE_zeropad_input_pipe_599_Sample)
        RPIPE_zeropad_input_pipe_599_sample_completed_ <-& (RPIPE_zeropad_input_pipe_599_Sample)
        RPIPE_zeropad_input_pipe_599_update_start_ <-& (RPIPE_zeropad_input_pipe_599_sample_completed_)
        RPIPE_zeropad_input_pipe_599_update_start_ &-> (RPIPE_zeropad_input_pipe_599_Update)
        RPIPE_zeropad_input_pipe_599_update_completed_ <-& (RPIPE_zeropad_input_pipe_599_Update)
        // Target expression
        // (as target) call29
        // start: WAR dependencies for call29
        // done: WAR dependencies for call29
        // end:  		call29 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv30 := ($cast ($uint<64>) call29 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 217
        // Source expression
        // ($cast ($uint<64>) call29 )
        $T[type_cast_603_sample_start_] 
        $T[type_cast_603_sample_completed_] 
        $T[type_cast_603_update_start_] 
        $T[type_cast_603_update_completed_] 
        // call29
        // start: Forward dependencies from call29 to transition type_cast_603_sample_start_
        type_cast_603_sample_start_ <-& (RPIPE_zeropad_input_pipe_599_update_completed_)
        // done: Forward dependencies from call29 to transition type_cast_603_sample_start_
        ;;[type_cast_603_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_603_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_603_sample_start_ &-> (type_cast_603_Sample)
        type_cast_603_sample_completed_ <-& (type_cast_603_Sample)
        type_cast_603_sample_completed_ &-> ($null)
        type_cast_603_update_start_ &-> (type_cast_603_Update)
        type_cast_603_update_completed_ <-& (type_cast_603_Update)
        // Target expression
        // (as target) conv30
        // start: WAR dependencies for conv30
        // done: WAR dependencies for conv30
        // end:  		conv30 := ($cast ($uint<64>) call29 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // start:  		$volatile shl := (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 218
        // volatile! 
        // Source expression
        // (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // conv30
        // Target expression
        // (as target) shl
        // start: WAR dependencies for shl
        // done: WAR dependencies for shl
        // end:  		$volatile shl := (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call32 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 219
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_612_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_612_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_612_update_start_] 
        $T[RPIPE_zeropad_input_pipe_612_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_612_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_612_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_612_sample_start_ &-> (RPIPE_zeropad_input_pipe_612_Sample)
        RPIPE_zeropad_input_pipe_612_sample_completed_ <-& (RPIPE_zeropad_input_pipe_612_Sample)
        RPIPE_zeropad_input_pipe_612_update_start_ <-& (RPIPE_zeropad_input_pipe_612_sample_completed_)
        RPIPE_zeropad_input_pipe_612_update_start_ &-> (RPIPE_zeropad_input_pipe_612_Update)
        RPIPE_zeropad_input_pipe_612_update_completed_ <-& (RPIPE_zeropad_input_pipe_612_Update)
        // Target expression
        // (as target) call32
        // start: WAR dependencies for call32
        // done: WAR dependencies for call32
        // end:  		call32 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv34 := ($cast ($uint<64>) call32 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 220
        // Source expression
        // ($cast ($uint<64>) call32 )
        $T[type_cast_616_sample_start_] 
        $T[type_cast_616_sample_completed_] 
        $T[type_cast_616_update_start_] 
        $T[type_cast_616_update_completed_] 
        // call32
        // start: Forward dependencies from call32 to transition type_cast_616_sample_start_
        type_cast_616_sample_start_ <-& (RPIPE_zeropad_input_pipe_612_update_completed_)
        // done: Forward dependencies from call32 to transition type_cast_616_sample_start_
        ;;[type_cast_616_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_616_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_616_sample_start_ &-> (type_cast_616_Sample)
        type_cast_616_sample_completed_ <-& (type_cast_616_Sample)
        type_cast_616_sample_completed_ &-> ($null)
        type_cast_616_update_start_ &-> (type_cast_616_Update)
        type_cast_616_update_completed_ <-& (type_cast_616_Update)
        // Target expression
        // (as target) conv34
        // start: WAR dependencies for conv34
        // done: WAR dependencies for conv34
        // end:  		conv34 := ($cast ($uint<64>) call32 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // start:  		$volatile add := (shl | conv34) $buffering 1
        //  file prog.linked.opt.aa, line 221
        // volatile! 
        // Source expression
        // (shl | conv34)
        // shl
        // conv34
        // Target expression
        // (as target) add
        // start: WAR dependencies for add
        // done: WAR dependencies for add
        // end:  		$volatile add := (shl | conv34) $buffering 1
        // start: WAR dependencies for shl36
        // done: WAR dependencies for shl36
        // start:  		$volatile shl36 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 222
        // volatile! 
        // Source expression
        // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add
        // Target expression
        // (as target) shl36
        // start: WAR dependencies for shl36
        // done: WAR dependencies for shl36
        // end:  		$volatile shl36 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call37 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 223
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_630_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_630_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_630_update_start_] 
        $T[RPIPE_zeropad_input_pipe_630_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_630_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_630_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_630_sample_start_ &-> (RPIPE_zeropad_input_pipe_630_Sample)
        RPIPE_zeropad_input_pipe_630_sample_completed_ <-& (RPIPE_zeropad_input_pipe_630_Sample)
        RPIPE_zeropad_input_pipe_630_update_start_ <-& (RPIPE_zeropad_input_pipe_630_sample_completed_)
        RPIPE_zeropad_input_pipe_630_update_start_ &-> (RPIPE_zeropad_input_pipe_630_Update)
        RPIPE_zeropad_input_pipe_630_update_completed_ <-& (RPIPE_zeropad_input_pipe_630_Update)
        // Target expression
        // (as target) call37
        // start: WAR dependencies for call37
        // done: WAR dependencies for call37
        // end:  		call37 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv39 := ($cast ($uint<64>) call37 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 224
        // Source expression
        // ($cast ($uint<64>) call37 )
        $T[type_cast_634_sample_start_] 
        $T[type_cast_634_sample_completed_] 
        $T[type_cast_634_update_start_] 
        $T[type_cast_634_update_completed_] 
        // call37
        // start: Forward dependencies from call37 to transition type_cast_634_sample_start_
        type_cast_634_sample_start_ <-& (RPIPE_zeropad_input_pipe_630_update_completed_)
        // done: Forward dependencies from call37 to transition type_cast_634_sample_start_
        ;;[type_cast_634_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_634_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_634_sample_start_ &-> (type_cast_634_Sample)
        type_cast_634_sample_completed_ <-& (type_cast_634_Sample)
        type_cast_634_sample_completed_ &-> ($null)
        type_cast_634_update_start_ &-> (type_cast_634_Update)
        type_cast_634_update_completed_ <-& (type_cast_634_Update)
        // Target expression
        // (as target) conv39
        // start: WAR dependencies for conv39
        // done: WAR dependencies for conv39
        // end:  		conv39 := ($cast ($uint<64>) call37 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add40
        // done: WAR dependencies for add40
        // start:  		$volatile add40 := (shl36 | conv39) $buffering 1
        //  file prog.linked.opt.aa, line 225
        // volatile! 
        // Source expression
        // (shl36 | conv39)
        // shl36
        // conv39
        // Target expression
        // (as target) add40
        // start: WAR dependencies for add40
        // done: WAR dependencies for add40
        // end:  		$volatile add40 := (shl36 | conv39) $buffering 1
        // start: WAR dependencies for shl42
        // done: WAR dependencies for shl42
        // start:  		$volatile shl42 := (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 226
        // volatile! 
        // Source expression
        // (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add40
        // Target expression
        // (as target) shl42
        // start: WAR dependencies for shl42
        // done: WAR dependencies for shl42
        // end:  		$volatile shl42 := (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call43 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 227
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_648_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_648_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_648_update_start_] 
        $T[RPIPE_zeropad_input_pipe_648_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_648_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_648_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_648_sample_start_ &-> (RPIPE_zeropad_input_pipe_648_Sample)
        RPIPE_zeropad_input_pipe_648_sample_completed_ <-& (RPIPE_zeropad_input_pipe_648_Sample)
        RPIPE_zeropad_input_pipe_648_update_start_ <-& (RPIPE_zeropad_input_pipe_648_sample_completed_)
        RPIPE_zeropad_input_pipe_648_update_start_ &-> (RPIPE_zeropad_input_pipe_648_Update)
        RPIPE_zeropad_input_pipe_648_update_completed_ <-& (RPIPE_zeropad_input_pipe_648_Update)
        // Target expression
        // (as target) call43
        // start: WAR dependencies for call43
        // done: WAR dependencies for call43
        // end:  		call43 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv45 := ($cast ($uint<64>) call43 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 228
        // Source expression
        // ($cast ($uint<64>) call43 )
        $T[type_cast_652_sample_start_] 
        $T[type_cast_652_sample_completed_] 
        $T[type_cast_652_update_start_] 
        $T[type_cast_652_update_completed_] 
        // call43
        // start: Forward dependencies from call43 to transition type_cast_652_sample_start_
        type_cast_652_sample_start_ <-& (RPIPE_zeropad_input_pipe_648_update_completed_)
        // done: Forward dependencies from call43 to transition type_cast_652_sample_start_
        ;;[type_cast_652_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_652_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_652_sample_start_ &-> (type_cast_652_Sample)
        type_cast_652_sample_completed_ <-& (type_cast_652_Sample)
        type_cast_652_sample_completed_ &-> ($null)
        type_cast_652_update_start_ &-> (type_cast_652_Update)
        type_cast_652_update_completed_ <-& (type_cast_652_Update)
        // Target expression
        // (as target) conv45
        // start: WAR dependencies for conv45
        // done: WAR dependencies for conv45
        // end:  		conv45 := ($cast ($uint<64>) call43 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add46
        // done: WAR dependencies for add46
        // start:  		$volatile add46 := (shl42 | conv45) $buffering 1
        //  file prog.linked.opt.aa, line 229
        // volatile! 
        // Source expression
        // (shl42 | conv45)
        // shl42
        // conv45
        // Target expression
        // (as target) add46
        // start: WAR dependencies for add46
        // done: WAR dependencies for add46
        // end:  		$volatile add46 := (shl42 | conv45) $buffering 1
        // start: WAR dependencies for shl48
        // done: WAR dependencies for shl48
        // start:  		$volatile shl48 := (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 230
        // volatile! 
        // Source expression
        // (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add46
        // Target expression
        // (as target) shl48
        // start: WAR dependencies for shl48
        // done: WAR dependencies for shl48
        // end:  		$volatile shl48 := (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call49 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 231
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_666_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_666_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_666_update_start_] 
        $T[RPIPE_zeropad_input_pipe_666_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_666_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_666_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_666_sample_start_ &-> (RPIPE_zeropad_input_pipe_666_Sample)
        RPIPE_zeropad_input_pipe_666_sample_completed_ <-& (RPIPE_zeropad_input_pipe_666_Sample)
        RPIPE_zeropad_input_pipe_666_update_start_ <-& (RPIPE_zeropad_input_pipe_666_sample_completed_)
        RPIPE_zeropad_input_pipe_666_update_start_ &-> (RPIPE_zeropad_input_pipe_666_Update)
        RPIPE_zeropad_input_pipe_666_update_completed_ <-& (RPIPE_zeropad_input_pipe_666_Update)
        // Target expression
        // (as target) call49
        // start: WAR dependencies for call49
        // done: WAR dependencies for call49
        // end:  		call49 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv51 := ($cast ($uint<64>) call49 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 232
        // Source expression
        // ($cast ($uint<64>) call49 )
        $T[type_cast_670_sample_start_] 
        $T[type_cast_670_sample_completed_] 
        $T[type_cast_670_update_start_] 
        $T[type_cast_670_update_completed_] 
        // call49
        // start: Forward dependencies from call49 to transition type_cast_670_sample_start_
        type_cast_670_sample_start_ <-& (RPIPE_zeropad_input_pipe_666_update_completed_)
        // done: Forward dependencies from call49 to transition type_cast_670_sample_start_
        ;;[type_cast_670_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_670_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_670_sample_start_ &-> (type_cast_670_Sample)
        type_cast_670_sample_completed_ <-& (type_cast_670_Sample)
        type_cast_670_sample_completed_ &-> ($null)
        type_cast_670_update_start_ &-> (type_cast_670_Update)
        type_cast_670_update_completed_ <-& (type_cast_670_Update)
        // Target expression
        // (as target) conv51
        // start: WAR dependencies for conv51
        // done: WAR dependencies for conv51
        // end:  		conv51 := ($cast ($uint<64>) call49 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add52
        // done: WAR dependencies for add52
        // start:  		$volatile add52 := (shl48 | conv51) $buffering 1
        //  file prog.linked.opt.aa, line 233
        // volatile! 
        // Source expression
        // (shl48 | conv51)
        // shl48
        // conv51
        // Target expression
        // (as target) add52
        // start: WAR dependencies for add52
        // done: WAR dependencies for add52
        // end:  		$volatile add52 := (shl48 | conv51) $buffering 1
        // start: WAR dependencies for shl54
        // done: WAR dependencies for shl54
        // start:  		$volatile shl54 := (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 234
        // volatile! 
        // Source expression
        // (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add52
        // Target expression
        // (as target) shl54
        // start: WAR dependencies for shl54
        // done: WAR dependencies for shl54
        // end:  		$volatile shl54 := (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call55 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 235
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_684_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_684_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_684_update_start_] 
        $T[RPIPE_zeropad_input_pipe_684_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_684_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_684_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_684_sample_start_ &-> (RPIPE_zeropad_input_pipe_684_Sample)
        RPIPE_zeropad_input_pipe_684_sample_completed_ <-& (RPIPE_zeropad_input_pipe_684_Sample)
        RPIPE_zeropad_input_pipe_684_update_start_ <-& (RPIPE_zeropad_input_pipe_684_sample_completed_)
        RPIPE_zeropad_input_pipe_684_update_start_ &-> (RPIPE_zeropad_input_pipe_684_Update)
        RPIPE_zeropad_input_pipe_684_update_completed_ <-& (RPIPE_zeropad_input_pipe_684_Update)
        // Target expression
        // (as target) call55
        // start: WAR dependencies for call55
        // done: WAR dependencies for call55
        // end:  		call55 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv57 := ($cast ($uint<64>) call55 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 236
        // Source expression
        // ($cast ($uint<64>) call55 )
        $T[type_cast_688_sample_start_] 
        $T[type_cast_688_sample_completed_] 
        $T[type_cast_688_update_start_] 
        $T[type_cast_688_update_completed_] 
        // call55
        // start: Forward dependencies from call55 to transition type_cast_688_sample_start_
        type_cast_688_sample_start_ <-& (RPIPE_zeropad_input_pipe_684_update_completed_)
        // done: Forward dependencies from call55 to transition type_cast_688_sample_start_
        ;;[type_cast_688_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_688_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_688_sample_start_ &-> (type_cast_688_Sample)
        type_cast_688_sample_completed_ <-& (type_cast_688_Sample)
        type_cast_688_sample_completed_ &-> ($null)
        type_cast_688_update_start_ &-> (type_cast_688_Update)
        type_cast_688_update_completed_ <-& (type_cast_688_Update)
        // Target expression
        // (as target) conv57
        // start: WAR dependencies for conv57
        // done: WAR dependencies for conv57
        // end:  		conv57 := ($cast ($uint<64>) call55 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add58
        // done: WAR dependencies for add58
        // start:  		$volatile add58 := (shl54 | conv57) $buffering 1
        //  file prog.linked.opt.aa, line 237
        // volatile! 
        // Source expression
        // (shl54 | conv57)
        // shl54
        // conv57
        // Target expression
        // (as target) add58
        // start: WAR dependencies for add58
        // done: WAR dependencies for add58
        // end:  		$volatile add58 := (shl54 | conv57) $buffering 1
        // start: WAR dependencies for shl60
        // done: WAR dependencies for shl60
        // start:  		$volatile shl60 := (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 238
        // volatile! 
        // Source expression
        // (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add58
        // Target expression
        // (as target) shl60
        // start: WAR dependencies for shl60
        // done: WAR dependencies for shl60
        // end:  		$volatile shl60 := (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 239
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_702_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_702_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_702_update_start_] 
        $T[RPIPE_zeropad_input_pipe_702_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_702_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_702_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_702_sample_start_ &-> (RPIPE_zeropad_input_pipe_702_Sample)
        RPIPE_zeropad_input_pipe_702_sample_completed_ <-& (RPIPE_zeropad_input_pipe_702_Sample)
        RPIPE_zeropad_input_pipe_702_update_start_ <-& (RPIPE_zeropad_input_pipe_702_sample_completed_)
        RPIPE_zeropad_input_pipe_702_update_start_ &-> (RPIPE_zeropad_input_pipe_702_Update)
        RPIPE_zeropad_input_pipe_702_update_completed_ <-& (RPIPE_zeropad_input_pipe_702_Update)
        // Target expression
        // (as target) call61
        // start: WAR dependencies for call61
        // done: WAR dependencies for call61
        // end:  		call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv63 := ($cast ($uint<64>) call61 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 240
        // Source expression
        // ($cast ($uint<64>) call61 )
        $T[type_cast_706_sample_start_] 
        $T[type_cast_706_sample_completed_] 
        $T[type_cast_706_update_start_] 
        $T[type_cast_706_update_completed_] 
        // call61
        // start: Forward dependencies from call61 to transition type_cast_706_sample_start_
        type_cast_706_sample_start_ <-& (RPIPE_zeropad_input_pipe_702_update_completed_)
        // done: Forward dependencies from call61 to transition type_cast_706_sample_start_
        ;;[type_cast_706_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_706_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_706_sample_start_ &-> (type_cast_706_Sample)
        type_cast_706_sample_completed_ <-& (type_cast_706_Sample)
        type_cast_706_sample_completed_ &-> ($null)
        type_cast_706_update_start_ &-> (type_cast_706_Update)
        type_cast_706_update_completed_ <-& (type_cast_706_Update)
        // Target expression
        // (as target) conv63
        // start: WAR dependencies for conv63
        // done: WAR dependencies for conv63
        // end:  		conv63 := ($cast ($uint<64>) call61 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add64
        // done: WAR dependencies for add64
        // start:  		$volatile add64 := (shl60 | conv63) $buffering 1
        //  file prog.linked.opt.aa, line 241
        // volatile! 
        // Source expression
        // (shl60 | conv63)
        // shl60
        // conv63
        // Target expression
        // (as target) add64
        // start: WAR dependencies for add64
        // done: WAR dependencies for add64
        // end:  		$volatile add64 := (shl60 | conv63) $buffering 1
        // start: WAR dependencies for shl66
        // done: WAR dependencies for shl66
        // start:  		$volatile shl66 := (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        //  file prog.linked.opt.aa, line 242
        // volatile! 
        // Source expression
        // (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
        // add64
        // Target expression
        // (as target) shl66
        // start: WAR dependencies for shl66
        // done: WAR dependencies for shl66
        // end:  		$volatile shl66 := (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
        // start:  		call67 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 243
        // Source expression
        // zeropad_input_pipe
        $T[RPIPE_zeropad_input_pipe_720_sample_start_] 
        $T[RPIPE_zeropad_input_pipe_720_sample_completed_] 
        $T[RPIPE_zeropad_input_pipe_720_update_start_] 
        $T[RPIPE_zeropad_input_pipe_720_update_completed_] 
        ;;[RPIPE_zeropad_input_pipe_720_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_zeropad_input_pipe_720_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_zeropad_input_pipe_720_sample_start_ &-> (RPIPE_zeropad_input_pipe_720_Sample)
        RPIPE_zeropad_input_pipe_720_sample_completed_ <-& (RPIPE_zeropad_input_pipe_720_Sample)
        RPIPE_zeropad_input_pipe_720_update_start_ <-& (RPIPE_zeropad_input_pipe_720_sample_completed_)
        RPIPE_zeropad_input_pipe_720_update_start_ &-> (RPIPE_zeropad_input_pipe_720_Update)
        RPIPE_zeropad_input_pipe_720_update_completed_ <-& (RPIPE_zeropad_input_pipe_720_Update)
        // Target expression
        // (as target) call67
        // start: WAR dependencies for call67
        // done: WAR dependencies for call67
        // end:  		call67 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
        // start:  		conv69 := ($cast ($uint<64>) call67 ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 244
        // Source expression
        // ($cast ($uint<64>) call67 )
        $T[type_cast_724_sample_start_] 
        $T[type_cast_724_sample_completed_] 
        $T[type_cast_724_update_start_] 
        $T[type_cast_724_update_completed_] 
        // call67
        // start: Forward dependencies from call67 to transition type_cast_724_sample_start_
        type_cast_724_sample_start_ <-& (RPIPE_zeropad_input_pipe_720_update_completed_)
        // done: Forward dependencies from call67 to transition type_cast_724_sample_start_
        ;;[type_cast_724_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_724_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_724_sample_start_ &-> (type_cast_724_Sample)
        type_cast_724_sample_completed_ <-& (type_cast_724_Sample)
        type_cast_724_sample_completed_ &-> ($null)
        type_cast_724_update_start_ &-> (type_cast_724_Update)
        type_cast_724_update_completed_ <-& (type_cast_724_Update)
        // Target expression
        // (as target) conv69
        // start: WAR dependencies for conv69
        // done: WAR dependencies for conv69
        // end:  		conv69 := ($cast ($uint<64>) call67 ) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for add70
        // done: WAR dependencies for add70
        // start:  		$volatile add70 := (shl66 | conv69) $buffering 1
        //  file prog.linked.opt.aa, line 245
        // volatile! 
        // Source expression
        // (shl66 | conv69)
        // shl66
        // conv69
        // Target expression
        // (as target) add70
        // start: WAR dependencies for add70
        // done: WAR dependencies for add70
        // end:  		$volatile add70 := (shl66 | conv69) $buffering 1
        // start:  		->(arrayidx74) := add70 $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 246
        // Source expression
        // add70
        // Target expression
        // ->(arrayidx74)
        $T[ptr_deref_732_sample_start_] 
        $T[ptr_deref_732_sample_completed_] 
        $T[ptr_deref_732_update_start_] 
        $T[ptr_deref_732_update_completed_] 
        $T[ptr_deref_732_base_address_calculated] 
        // arrayidx74
        $T[ptr_deref_732_word_address_calculated] 
        $T[ptr_deref_732_root_address_calculated] 
        $T[ptr_deref_732_base_address_resized] 
        ;;[ptr_deref_732_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_732_base_address_calculated &-> (ptr_deref_732_base_addr_resize)
        ptr_deref_732_base_address_resized <-& (ptr_deref_732_base_addr_resize)
        ;;[ptr_deref_732_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_732_base_address_resized &-> (ptr_deref_732_base_plus_offset)
        ptr_deref_732_root_address_calculated <-& (ptr_deref_732_base_plus_offset)
        ;;[ptr_deref_732_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_732_root_address_calculated &-> (ptr_deref_732_word_addrgen)
        ptr_deref_732_word_address_calculated <-& (ptr_deref_732_word_addrgen)
        ;;[ptr_deref_732_Sample] 
        {
          ;;[ptr_deref_732_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_732_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_732_sample_start_ <-& (ptr_deref_732_word_address_calculated)
        ptr_deref_732_sample_start_ &-> (ptr_deref_732_Sample)
        ptr_deref_732_sample_completed_ <-& (ptr_deref_732_Sample)
        ptr_deref_732_sample_completed_ &-> ($null)
        ptr_deref_732_update_start_ &-> (ptr_deref_732_Update)
        ptr_deref_732_update_completed_ <-& (ptr_deref_732_Update)
        // start: Forward dependencies from arrayidx74 to transition ptr_deref_732_base_address_calculated
        ptr_deref_732_base_address_calculated <-& (addr_of_596_update_completed_)
        // done: Forward dependencies from arrayidx74 to transition ptr_deref_732_base_address_calculated
        ptr_deref_732_sample_start_ <-& (ptr_deref_732_base_address_calculated)
        // start: Forward dependencies from add70 to transition ptr_deref_732_sample_start_
        ptr_deref_732_sample_start_ <-& (type_cast_603_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_616_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_634_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_652_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_670_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_688_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_706_update_completed_)
        ptr_deref_732_sample_start_ <-& (type_cast_724_update_completed_)
        // done: Forward dependencies from add70 to transition ptr_deref_732_sample_start_
        // end:  		->(arrayidx74) := add70 $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // start:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 247
        // volatile! 
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // indvar
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
        // type of target is $uint<64>
        // done: WAR dependencies for indvarx_xnext
        // end:  		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for exitcond10
        // ignored out-of-scope w_root 		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond10
        // start:  		$volatile exitcond10 := (indvarx_xnext == umax9) $buffering 1
        //  file prog.linked.opt.aa, line 248
        // volatile! 
        // Source expression
        // (indvarx_xnext == umax9)
        // indvarx_xnext
        // umax9
        // Target expression
        // (as target) exitcond10
        // start: WAR dependencies for exitcond10
        // ignored out-of-scope w_root 		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
        // ignored out-of-scope w_root 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
        // type of target is $uint<64>
        // done: WAR dependencies for exitcond10
        // end:  		$volatile exitcond10 := (indvarx_xnext == umax9) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_1
        //  ptr_deref_732 store
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        RPIPE_zeropad_input_pipe_612_sample_start_ <-& (RPIPE_zeropad_input_pipe_599_update_completed_)
        RPIPE_zeropad_input_pipe_630_sample_start_ <-& (RPIPE_zeropad_input_pipe_612_update_completed_)
        RPIPE_zeropad_input_pipe_648_sample_start_ <-& (RPIPE_zeropad_input_pipe_630_update_completed_)
        RPIPE_zeropad_input_pipe_666_sample_start_ <-& (RPIPE_zeropad_input_pipe_648_update_completed_)
        RPIPE_zeropad_input_pipe_684_sample_start_ <-& (RPIPE_zeropad_input_pipe_666_update_completed_)
        RPIPE_zeropad_input_pipe_702_sample_start_ <-& (RPIPE_zeropad_input_pipe_684_update_completed_)
        RPIPE_zeropad_input_pipe_720_sample_start_ <-& (RPIPE_zeropad_input_pipe_702_update_completed_)
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      assign_stmt_597_to_assign_stmt_745__entry__ |-> (assign_stmt_597_to_assign_stmt_745)
      assign_stmt_597_to_assign_stmt_745__exit__ <-| (assign_stmt_597_to_assign_stmt_745)
      // if-statement  
      //  file prog.linked.opt.aa, line 249
      ;;[if_stmt_746_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_746__entry__ |-> (if_stmt_746_dead_link)
      if_stmt_746__exit__ <-| (if_stmt_746_dead_link)
      ;;[if_stmt_746_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_746__entry__ |-> (if_stmt_746_eval_test)
      $P [R_exitcond10_747_place]
      R_exitcond10_747_place <-| (if_stmt_746_eval_test)
      ;;[if_stmt_746_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_746_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond10_747_place |-> (if_stmt_746_if_link if_stmt_746_else_link)
      $P [forx_xbody27_forx_xend78x_xloopexit]
      forx_xbody27_forx_xend78x_xloopexit <-| (if_stmt_746_if_link)
      $P [forx_xbody27_forx_xbody27]
      forx_xbody27_forx_xbody27 <-| (if_stmt_746_else_link)
      ::[assign_stmt_758] 
      {
        // start:  		ret_val__ := ($cast ($uint<16>) mul19 ) $buffering 1// bits of buffering = 16. 
        //  file prog.linked.opt.aa, line 259
        // Source expression
        // ($cast ($uint<16>) mul19 )
        $T[type_cast_757_sample_start_] 
        $T[type_cast_757_sample_completed_] 
        $T[type_cast_757_update_start_] 
        $T[type_cast_757_update_completed_] 
        // mul19
        // start: Forward dependencies from mul19 to transition type_cast_757_sample_start_
        // done: Forward dependencies from mul19 to transition type_cast_757_sample_start_
        ;;[type_cast_757_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_757_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_757_sample_start_ &-> (type_cast_757_Sample)
        type_cast_757_sample_completed_ <-& (type_cast_757_Sample)
        type_cast_757_sample_completed_ &-> ($null)
        type_cast_757_update_start_ &-> (type_cast_757_Update)
        type_cast_757_update_completed_ <-& (type_cast_757_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // start: WAR dependencies for ret_val__
        // done: WAR dependencies for ret_val__
        // ret_val__
        // write to interface object
        // end:  		ret_val__ := ($cast ($uint<16>) mul19 ) $buffering 1// bits of buffering = 16. 
        // load-store dependencies..
      }
      assign_stmt_758__entry__ |-> (assign_stmt_758)
      assign_stmt_758__exit__ <-| (assign_stmt_758)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 140
      ;;[merge_stmt_332_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_332__entry__ |-> (merge_stmt_332_dead_link)
      merge_stmt_332__exit__ <-| (merge_stmt_332_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 140  --------------------------
      ||[entry_forx_xbodyx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_forx_xbodyx_xpreheader |-> (entry_forx_xbodyx_xpreheader_PhiReq)
      $P [merge_stmt_332_PhiReqMerge] 
      merge_stmt_332_PhiReqMerge <-| ( entry_forx_xbodyx_xpreheader_PhiReq )
      ||[merge_stmt_332_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_332_PhiReqMerge |-> (merge_stmt_332_PhiAck)
      merge_stmt_332__exit__  <-| (merge_stmt_332_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 140  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 143
      //---------------------   merge statement  file prog.linked.opt.aa, line 143  --------------------------
      ||[forx_xbody_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_335] 
        {
          ||[phi_stmt_335_sources] 
          {
            // sources for 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) tmp98 )
            ;;[type_cast_338] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_335_req] 
        }
        ;;[phi_stmt_342] 
        {
          ||[phi_stmt_342_sources] 
          {
            // sources for 			$phi call489 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<8>) call487 ) $on   forx_xbodyx_xpreheader_forx_xbody 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) call4 )
            ;;[type_cast_345] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_342_req] 
        }
      }
      forx_xbody_forx_xbody |-> (forx_xbody_forx_xbody_PhiReq)
      ||[forx_xbodyx_xpreheader_forx_xbody_PhiReq] 
      {
        ;;[phi_stmt_335] 
        {
          ||[phi_stmt_335_sources] 
          {
            // sources for 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_341_konst_delay_trans] $delay
          }
          $T [phi_stmt_335_req] 
        }
        ;;[phi_stmt_342] 
        {
          ||[phi_stmt_342_sources] 
          {
            // sources for 			$phi call489 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<8>) call487 ) $on   forx_xbodyx_xpreheader_forx_xbody 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) call487 )
            ;;[type_cast_347] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_342_req] 
        }
      }
      forx_xbodyx_xpreheader_forx_xbody |-> (forx_xbodyx_xpreheader_forx_xbody_PhiReq)
      $P [merge_stmt_334_PhiReqMerge] 
      merge_stmt_334_PhiReqMerge <-| ( forx_xbody_forx_xbody_PhiReq  forx_xbodyx_xpreheader_forx_xbody_PhiReq )
      ||[merge_stmt_334_PhiAck] 
      {
        $T [phi_stmt_335_ack] 
        $T [phi_stmt_342_ack] 
      }
      merge_stmt_334_PhiReqMerge |-> (merge_stmt_334_PhiAck)
      merge_stmt_334__exit__  <-| (merge_stmt_334_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 143  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 164
      ;;[merge_stmt_404_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_404__entry__ |-> (merge_stmt_404_dead_link)
      merge_stmt_404__exit__ <-| (merge_stmt_404_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 164  --------------------------
      ||[forx_xbody_forx_xendx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_405] 
        {
          ||[phi_stmt_405_sources] 
          {
            // sources for 			$phi call4x_xlcssa1 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xendx_xloopexit 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) call4 )
            ;;[type_cast_408] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_405_req] 
        }
      }
      forx_xbody_forx_xendx_xloopexit |-> (forx_xbody_forx_xendx_xloopexit_PhiReq)
      $P [merge_stmt_404_PhiReqMerge] 
      merge_stmt_404_PhiReqMerge <-| ( forx_xbody_forx_xendx_xloopexit_PhiReq )
      ||[merge_stmt_404_PhiAck] 
      {
        $T [phi_stmt_405_ack] 
      }
      merge_stmt_404_PhiReqMerge |-> (merge_stmt_404_PhiAck)
      merge_stmt_404__exit__  <-| (merge_stmt_404_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 164  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 169
      //---------------------   merge statement  file prog.linked.opt.aa, line 169  --------------------------
      ||[entry_forx_xend_PhiReq] 
      {
        ;;[phi_stmt_412] 
        {
          ||[phi_stmt_412_sources] 
          {
            // sources for 			$phi call4x_xlcssa := 			  ($cast ($uint<8>) call487 ) $on   entry_forx_xend 			  ($cast ($uint<8>) call4x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) call487 )
            ;;[type_cast_415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_412_req] 
        }
      }
      entry_forx_xend |-> (entry_forx_xend_PhiReq)
      ||[forx_xendx_xloopexit_forx_xend_PhiReq] 
      {
        ;;[phi_stmt_412] 
        {
          ||[phi_stmt_412_sources] 
          {
            // sources for 			$phi call4x_xlcssa := 			  ($cast ($uint<8>) call487 ) $on   entry_forx_xend 			  ($cast ($uint<8>) call4x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) call4x_xlcssa1 )
            ;;[type_cast_417] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_412_req] 
        }
      }
      forx_xendx_xloopexit_forx_xend |-> (forx_xendx_xloopexit_forx_xend_PhiReq)
      $P [merge_stmt_411_PhiReqMerge] 
      merge_stmt_411_PhiReqMerge <-| ( entry_forx_xend_PhiReq  forx_xendx_xloopexit_forx_xend_PhiReq )
      ||[merge_stmt_411_PhiAck] 
      {
        $T [phi_stmt_412_ack] 
      }
      merge_stmt_411_PhiReqMerge |-> (merge_stmt_411_PhiAck)
      merge_stmt_411__exit__  <-| (merge_stmt_411_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 169  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 202
      ;;[merge_stmt_547_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_547__entry__ |-> (merge_stmt_547_dead_link)
      merge_stmt_547__exit__ <-| (merge_stmt_547_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 202  --------------------------
      ||[forx_xend_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xend_bbx_xnph |-> (forx_xend_bbx_xnph_PhiReq)
      $P [merge_stmt_547_PhiReqMerge] 
      merge_stmt_547_PhiReqMerge <-| ( forx_xend_bbx_xnph_PhiReq )
      ||[merge_stmt_547_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_547_PhiReqMerge |-> (merge_stmt_547_PhiAck)
      merge_stmt_547__exit__  <-| (merge_stmt_547_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 202  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 211
      //---------------------   merge statement  file prog.linked.opt.aa, line 211  --------------------------
      ||[bbx_xnph_forx_xbody27_PhiReq] 
      {
        ;;[phi_stmt_583] 
        {
          ||[phi_stmt_583_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
            // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_587_konst_delay_trans] $delay
          }
          $T [phi_stmt_583_req] 
        }
      }
      bbx_xnph_forx_xbody27 |-> (bbx_xnph_forx_xbody27_PhiReq)
      ||[forx_xbody27_forx_xbody27_PhiReq] 
      {
        ;;[phi_stmt_583] 
        {
          ||[phi_stmt_583_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
            // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_589] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_583_req] 
        }
      }
      forx_xbody27_forx_xbody27 |-> (forx_xbody27_forx_xbody27_PhiReq)
      $P [merge_stmt_582_PhiReqMerge] 
      merge_stmt_582_PhiReqMerge <-| ( bbx_xnph_forx_xbody27_PhiReq  forx_xbody27_forx_xbody27_PhiReq )
      ||[merge_stmt_582_PhiAck] 
      {
        $T [phi_stmt_583_ack] 
      }
      merge_stmt_582_PhiReqMerge |-> (merge_stmt_582_PhiAck)
      merge_stmt_582__exit__  <-| (merge_stmt_582_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 211  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 254
      ;;[merge_stmt_752_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_752__entry__ |-> (merge_stmt_752_dead_link)
      merge_stmt_752__exit__ <-| (merge_stmt_752_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 254  --------------------------
      ||[forx_xbody27_forx_xend78x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xbody27_forx_xend78x_xloopexit |-> (forx_xbody27_forx_xend78x_xloopexit_PhiReq)
      $P [merge_stmt_752_PhiReqMerge] 
      merge_stmt_752_PhiReqMerge <-| ( forx_xbody27_forx_xend78x_xloopexit_PhiReq )
      ||[merge_stmt_752_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_752_PhiReqMerge |-> (merge_stmt_752_PhiAck)
      merge_stmt_752__exit__  <-| (merge_stmt_752_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 254  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 257
      //---------------------   merge statement  file prog.linked.opt.aa, line 257  --------------------------
      ||[forx_xend78x_xloopexit_forx_xend78_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xend78x_xloopexit_forx_xend78 |-> (forx_xend78x_xloopexit_forx_xend78_PhiReq)
      ||[forx_xend_forx_xend78_PhiReq] 
      {
        // no phi statements in merge..
      }
      forx_xend_forx_xend78 |-> (forx_xend_forx_xend78_PhiReq)
      $P [merge_stmt_754_PhiReqMerge] 
      merge_stmt_754_PhiReqMerge <-| ( forx_xend78x_xloopexit_forx_xend78_PhiReq  forx_xend_forx_xend78_PhiReq )
      ||[merge_stmt_754_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_754_PhiReqMerge |-> (merge_stmt_754_PhiAck)
      merge_stmt_754__exit__  <-| (merge_stmt_754_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 257  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 261
      //---------------------   merge statement  file prog.linked.opt.aa, line 261  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_760_PhiReqMerge] 
      merge_stmt_760_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_760_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_760_PhiReqMerge |-> (merge_stmt_760_PhiAck)
      merge_stmt_760__exit__  <-| (merge_stmt_760_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 261  --------------------------
      assign_stmt_281_to_assign_stmt_325__entry__ <-| (branch_block_stmt_275__entry__)
      if_stmt_326__entry__ <-| (assign_stmt_281_to_assign_stmt_325__exit__)
      merge_stmt_332__entry__ <-| (if_stmt_326__exit__)
      forx_xbodyx_xpreheader_forx_xbody <-| (merge_stmt_332__exit__)
      assign_stmt_354_to_assign_stmt_397__entry__ <-| (merge_stmt_334__exit__)
      if_stmt_398__entry__ <-| (assign_stmt_354_to_assign_stmt_397__exit__)
      merge_stmt_404__entry__ <-| (if_stmt_398__exit__)
      forx_xendx_xloopexit_forx_xend <-| (merge_stmt_404__exit__)
      assign_stmt_421_to_assign_stmt_540__entry__ <-| (merge_stmt_411__exit__)
      if_stmt_541__entry__ <-| (assign_stmt_421_to_assign_stmt_540__exit__)
      merge_stmt_547__entry__ <-| (if_stmt_541__exit__)
      assign_stmt_552_to_assign_stmt_580__entry__ <-| (merge_stmt_547__exit__)
      bbx_xnph_forx_xbody27 <-| (assign_stmt_552_to_assign_stmt_580__exit__)
      assign_stmt_597_to_assign_stmt_745__entry__ <-| (merge_stmt_582__exit__)
      if_stmt_746__entry__ <-| (assign_stmt_597_to_assign_stmt_745__exit__)
      merge_stmt_752__entry__ <-| (if_stmt_746__exit__)
      forx_xend78x_xloopexit_forx_xend78 <-| (merge_stmt_752__exit__)
      assign_stmt_758__entry__ <-| (merge_stmt_754__exit__)
      return__ <-| (assign_stmt_758__exit__)
      merge_stmt_760__exit__ |-> (branch_block_stmt_275__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 140
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 143
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 164
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 169
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 202
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 211
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 254
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 257
    // constant-object-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 261
    // constant-object-declarations for block %testConfigure%body
    //  file prog.linked.opt.aa, line 122
    // constant-object-declarations for block %testConfigure
    //  file prog.linked.opt.aa, line 117
    // constant-declarations for block %testConfigure%body
    //  file prog.linked.opt.aa, line 122
    // 		iNsTr_0 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 124
    $constant $W[iNsTr_0_281] : $int<32> := _b00000000000000000000000000000000 // 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000101  )
    $constant $W[type_cast_285_wire_constant] : $int<32> := _b00000000000000000000000000000101// 5
    // ->(iNsTr_0)
    $constant $W[ptr_deref_283_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_283_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_283_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_283_word_offset_3] : $int<9> := _b000000011// 3
    // 		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 127
    $constant $W[iNsTr_3_295] : $int<32> := _b00000000000000000000000000000100 // 4
    // ->(iNsTr_3)
    $constant $W[ptr_deref_297_word_offset_0] : $int<9> := _b000000000// 0
    // 		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 131
    $constant $W[iNsTr_6_312] : $int<32> := _b00000000000000000000000000000101 // 5
    // ->(iNsTr_6)
    $constant $W[ptr_deref_314_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_314_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_314_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_314_word_offset_3] : $int<9> := _b000000011// 3
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_320_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 135
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 140
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 143
    // constant-declarations for phi:  			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_341_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi call489 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<8>) call487 ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 146
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_352_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96])
    $constant $W[array_obj_ref_363_constant_part_of_offset] : $int<9> := _b000001001// 9
    $constant $W[array_obj_ref_363_resized_base_address] : $int<9> := _b000000000// 0
    $constant $W[array_obj_ref_363_offset_scale_factor_0] : $int<9> := _b100000000// 256
    $constant $W[array_obj_ref_363_offset_scale_factor_1] : $int<9> := _b000000100// 4
    // ->(arrayidx)
    $constant $W[ptr_deref_371_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_371_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_371_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_371_word_offset_3] : $int<9> := _b000000011// 3
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_377_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // 		iNsTr_28 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 155
    $constant $W[iNsTr_28_385] : $int<32> := _b00000000000000000000000000000101 // 5
    // ->(iNsTr_28)
    $constant $W[ptr_deref_388_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_388_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_388_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_388_word_offset_3] : $int<9> := _b000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 159
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 164
    // constant-declarations for phi:  			$phi call4x_xlcssa1 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 165
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 169
    // constant-declarations for phi:  			$phi call4x_xlcssa := 			  ($cast ($uint<8>) call487 ) $on   entry_forx_xend 			  ($cast ($uint<8>) call4x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 170
    // pad
    $constant $W[STORE_pad_419_word_address_0] : $pointer<memory_space_4> := _b0
    // 		iNsTr_12 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 176
    $constant $W[iNsTr_12_436] : $int<32> := _b00000000000000000000000000000010 // 2
    // ->(iNsTr_12)
    $constant $W[ptr_deref_438_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_15 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 180
    $constant $W[iNsTr_15_455] : $int<32> := _b00000000000000000000000000000011 // 3
    // ->(iNsTr_15)
    $constant $W[ptr_deref_457_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_18 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 184
    $constant $W[iNsTr_18_474] : $int<32> := _b00000000000000000000000000000100 // 4
    // ->(iNsTr_18)
    $constant $W[ptr_deref_476_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_20 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 186
    $constant $W[iNsTr_20_486] : $int<32> := _b00000000000000000000000000001001 // 9
    // ->(iNsTr_20)
    $constant $W[ptr_deref_489_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_489_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_489_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_489_word_offset_3] : $int<9> := _b000000011// 3
    // 		iNsTr_21 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 188
    $constant $W[iNsTr_21_498] : $int<32> := _b00000000000000000000000000001101 // 13
    // ->(iNsTr_21)
    $constant $W[ptr_deref_501_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_501_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_501_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_501_word_offset_3] : $int<9> := _b000000011// 3
    // 		iNsTr_22 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 190
    $constant $W[iNsTr_22_510] : $int<32> := _b00000000000000000000000000010001 // 17
    // ->(iNsTr_22)
    $constant $W[ptr_deref_513_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_513_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_513_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_513_word_offset_3] : $int<9> := _b000000011// 3
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )
    $constant $W[type_cast_532_wire_constant] : $int<64> := _b0000000000000000000000000000000011111111111111111111111111111100// -4
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_538_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 197
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 202
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )
    $constant $W[type_cast_565_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000010// 2
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_571_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_578_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 211
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 212
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_587_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $constant $W[array_obj_ref_595_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_595_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_595_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_595_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_608_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_626_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_644_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_662_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_680_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_698_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )
    $constant $W[type_cast_716_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // ->(arrayidx74)
    $constant $W[ptr_deref_732_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_738_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 249
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 254
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 257
    // constant-declarations for block %testConfigure%body%
    //  file prog.linked.opt.aa, line 261
    // block %testConfigure%body
    //  file prog.linked.opt.aa, line 122
    // 		->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 125
    // ->(iNsTr_0)
    $intermediate $W[ptr_deref_283_wire] : $int<32>
    $intermediate $W[ptr_deref_283_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_283_root_address] : $int<9>
    $W[ptr_deref_283_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_283_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_283_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_283_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_283_data_0] : $int<8>
    $W[ptr_deref_283_data_1] : $int<8>
    $W[ptr_deref_283_data_2] : $int<8>
    $W[ptr_deref_283_data_3] : $int<8>
    // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 126
    // call
    $W[call_289] : $int<8>
    // 		->(iNsTr_3) := call $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 128
    // ->(iNsTr_3)
    $intermediate $W[ptr_deref_297_wire] : $int<8>
    $intermediate $W[ptr_deref_297_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_297_root_address] : $int<9>
    $W[ptr_deref_297_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_297_data_0] : $int<8>
    // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 129
    // call1
    $W[call1_302] : $int<8>
    // 		conv := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 130
    // conv
    $W[conv_306] : $int<32>
    // 		->(iNsTr_6) := conv $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 132
    // ->(iNsTr_6)
    $intermediate $W[ptr_deref_314_wire] : $int<32>
    $intermediate $W[ptr_deref_314_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_314_root_address] : $int<9>
    $W[ptr_deref_314_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_314_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_314_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_314_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_314_data_0] : $int<8>
    $W[ptr_deref_314_data_1] : $int<8>
    $W[ptr_deref_314_data_2] : $int<8>
    $W[ptr_deref_314_data_3] : $int<8>
    // 		$volatile cmp86 := (call1 == ($bitcast ($uint<8>) _b00000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 133
    // cmp86
    $W[cmp86_322] : $int<1>
    // 		call487 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 134
    // call487
    $W[call487_325] : $int<8>
    // if statement  
    //  file prog.linked.opt.aa, line 135
    // merge-statement  
    //  file prog.linked.opt.aa, line 143
    // 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) tmp98 )
    $intermediate $W[type_cast_338_wire] : $int<64>
    // indvar96
    $W[indvar96_335] : $int<64>
    // 			$phi call489 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<8>) call487 ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 146
    // ($cast ($uint<8>) call4 )
    $intermediate $W[type_cast_345_wire] : $int<8>
    // ($cast ($uint<8>) call487 )
    $intermediate $W[type_cast_347_wire] : $int<8>
    // call489
    $W[call489_342] : $int<8>
    // 		$volatile tmp := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 149
    // tmp
    $W[tmp_354] : $int<64>
    // 		inc := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 150
    // inc
    $W[inc_358] : $int<32>
    // 		arrayidx := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 151
    // @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96])
    $intermediate $W[R_indvar96_362_resized] : $int<9>
    $intermediate $W[R_indvar96_362_scaled] : $int<9>
    $intermediate $W[array_obj_ref_363_final_offset] : $int<9>
    $intermediate $W[array_obj_ref_363_root_address] : $int<9>
    // arrayidx
    $W[arrayidx_365] : $int<32>
    // 		conv5 := ($cast ($uint<32>) call489 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 152
    // conv5
    $W[conv5_369] : $int<32>
    // 		->(arrayidx) := conv5 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 153
    // ->(arrayidx)
    $intermediate $W[ptr_deref_371_wire] : $int<32>
    $intermediate $W[ptr_deref_371_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_371_root_address] : $int<9>
    $W[ptr_deref_371_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_371_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_371_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_371_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_371_data_0] : $int<8>
    $W[ptr_deref_371_data_1] : $int<8>
    $W[ptr_deref_371_data_2] : $int<8>
    $W[ptr_deref_371_data_3] : $int<8>
    // 		$volatile tmp98 := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 154
    // tmp98
    $W[tmp98_379] : $int<64>
    // 		tmp2 := ->(iNsTr_28) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 156
    // ->(iNsTr_28)
    $intermediate $W[ptr_deref_388_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_388_root_address] : $int<9>
    $W[ptr_deref_388_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_388_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_388_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_388_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_388_data_0] : $int<8>
    $W[ptr_deref_388_data_1] : $int<8>
    $W[ptr_deref_388_data_2] : $int<8>
    $W[ptr_deref_388_data_3] : $int<8>
    // tmp2
    $W[tmp2_389] : $int<32>
    // 		$volatile cmp := (inc < tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // cmp
    $W[cmp_394] : $int<1>
    // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 158
    // call4
    $W[call4_397] : $int<8>
    // if statement  
    //  file prog.linked.opt.aa, line 159
    // merge-statement  
    //  file prog.linked.opt.aa, line 164
    // 			$phi call4x_xlcssa1 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 165
    // ($cast ($uint<8>) call4 )
    $intermediate $W[type_cast_408_wire] : $int<8>
    // call4x_xlcssa1
    $W[call4x_xlcssa1_405] : $int<8>
    // merge-statement  
    //  file prog.linked.opt.aa, line 169
    // 			$phi call4x_xlcssa := 			  ($cast ($uint<8>) call487 ) $on   entry_forx_xend 			  ($cast ($uint<8>) call4x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 170
    // ($cast ($uint<8>) call487 )
    $intermediate $W[type_cast_415_wire] : $int<8>
    // ($cast ($uint<8>) call4x_xlcssa1 )
    $intermediate $W[type_cast_417_wire] : $int<8>
    // call4x_xlcssa
    $W[call4x_xlcssa_412] : $int<8>
    // 		pad := call4x_xlcssa $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 173
    // pad
    $constant $W[STORE_pad_419_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_pad_419_data_0] : $int<8>
    // 		call9 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 174
    // call9
    $W[call9_424] : $int<8>
    // 		conv10 := ($cast ($uint<32>) call9 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 175
    // conv10
    $W[conv10_428] : $int<32>
    // 		->(iNsTr_12) := conv10 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 177
    // ->(iNsTr_12)
    $intermediate $W[ptr_deref_438_wire] : $int<32>
    $intermediate $W[ptr_deref_438_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_438_root_address] : $int<7>
    $W[ptr_deref_438_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_438_data_0] : $int<32>
    // 		call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 178
    // call11
    $W[call11_443] : $int<8>
    // 		conv12 := ($cast ($uint<32>) call11 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 179
    // conv12
    $W[conv12_447] : $int<32>
    // 		->(iNsTr_15) := conv12 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 181
    // ->(iNsTr_15)
    $intermediate $W[ptr_deref_457_wire] : $int<32>
    $intermediate $W[ptr_deref_457_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_457_root_address] : $int<7>
    $W[ptr_deref_457_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_457_data_0] : $int<32>
    // 		call13 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 182
    // call13
    $W[call13_462] : $int<8>
    // 		conv14 := ($cast ($uint<32>) call13 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 183
    // conv14
    $W[conv14_466] : $int<32>
    // 		->(iNsTr_18) := conv14 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 185
    // ->(iNsTr_18)
    $intermediate $W[ptr_deref_476_wire] : $int<32>
    $intermediate $W[ptr_deref_476_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_476_root_address] : $int<7>
    $W[ptr_deref_476_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_476_data_0] : $int<32>
    // 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 187
    // ->(iNsTr_20)
    $intermediate $W[ptr_deref_489_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_489_root_address] : $int<9>
    $W[ptr_deref_489_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_489_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_489_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_489_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_489_data_0] : $int<8>
    $W[ptr_deref_489_data_1] : $int<8>
    $W[ptr_deref_489_data_2] : $int<8>
    $W[ptr_deref_489_data_3] : $int<8>
    // tmp16
    $W[tmp16_490] : $int<32>
    // 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 189
    // ->(iNsTr_21)
    $intermediate $W[ptr_deref_501_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_501_root_address] : $int<9>
    $W[ptr_deref_501_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_501_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_501_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_501_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_501_data_0] : $int<8>
    $W[ptr_deref_501_data_1] : $int<8>
    $W[ptr_deref_501_data_2] : $int<8>
    $W[ptr_deref_501_data_3] : $int<8>
    // tmp17
    $W[tmp17_502] : $int<32>
    // 		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 191
    // ->(iNsTr_22)
    $intermediate $W[ptr_deref_513_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_513_root_address] : $int<9>
    $W[ptr_deref_513_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_513_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_513_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_513_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_513_data_0] : $int<8>
    $W[ptr_deref_513_data_1] : $int<8>
    $W[ptr_deref_513_data_2] : $int<8>
    $W[ptr_deref_513_data_3] : $int<8>
    // tmp18
    $W[tmp18_514] : $int<32>
    // 		$volatile mul := (tmp17 * tmp16) $buffering 1
    //  file prog.linked.opt.aa, line 192
    // mul
    $W[mul_519] : $int<32>
    // 		$volatile mul19 := (mul * tmp18) $buffering 1
    //  file prog.linked.opt.aa, line 193
    // mul19
    $W[mul19_524] : $int<32>
    // 		conv20 := ($cast ($uint<64>) mul19 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 194
    // conv20
    $W[conv20_528] : $int<64>
    // 		$volatile shr82x_xmask := (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // shr82x_xmask
    $W[shr82x_xmask_534] : $int<64>
    // 		$volatile cmp2583 := (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 196
    // cmp2583
    $W[cmp2583_540] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 197
    // 		$volatile tmp4 := (tmp17 * tmp16) $buffering 1
    //  file prog.linked.opt.aa, line 204
    // tmp4
    $W[tmp4_552] : $int<32>
    // 		$volatile tmp5 := (tmp4 * tmp18) $buffering 1
    //  file prog.linked.opt.aa, line 205
    // tmp5
    $W[tmp5_557] : $int<32>
    // 		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 206
    // tmp6
    $W[tmp6_561] : $int<64>
    // 		$volatile tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // tmp7
    $W[tmp7_567] : $int<64>
    // 		$volatile tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 208
    // tmp8
    $W[tmp8_573] : $int<1>
    // 		$volatile umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 209
    // umax9
    $W[umax9_580] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 211
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 212
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_589_wire] : $int<64>
    // indvar
    $W[indvar_583] : $int<64>
    // 		arrayidx74 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 215
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar])
    $intermediate $W[R_indvar_594_resized] : $int<14>
    $intermediate $W[R_indvar_594_scaled] : $int<14>
    $intermediate $W[array_obj_ref_595_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_595_root_address] : $int<14>
    // arrayidx74
    $W[arrayidx74_597] : $int<32>
    // 		call29 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 216
    // call29
    $W[call29_600] : $int<8>
    // 		conv30 := ($cast ($uint<64>) call29 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 217
    // conv30
    $W[conv30_604] : $int<64>
    // 		$volatile shl := (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 218
    // shl
    $W[shl_610] : $int<64>
    // 		call32 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 219
    // call32
    $W[call32_613] : $int<8>
    // 		conv34 := ($cast ($uint<64>) call32 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 220
    // conv34
    $W[conv34_617] : $int<64>
    // 		$volatile add := (shl | conv34) $buffering 1
    //  file prog.linked.opt.aa, line 221
    // add
    $W[add_622] : $int<64>
    // 		$volatile shl36 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 222
    // shl36
    $W[shl36_628] : $int<64>
    // 		call37 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 223
    // call37
    $W[call37_631] : $int<8>
    // 		conv39 := ($cast ($uint<64>) call37 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 224
    // conv39
    $W[conv39_635] : $int<64>
    // 		$volatile add40 := (shl36 | conv39) $buffering 1
    //  file prog.linked.opt.aa, line 225
    // add40
    $W[add40_640] : $int<64>
    // 		$volatile shl42 := (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 226
    // shl42
    $W[shl42_646] : $int<64>
    // 		call43 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 227
    // call43
    $W[call43_649] : $int<8>
    // 		conv45 := ($cast ($uint<64>) call43 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 228
    // conv45
    $W[conv45_653] : $int<64>
    // 		$volatile add46 := (shl42 | conv45) $buffering 1
    //  file prog.linked.opt.aa, line 229
    // add46
    $W[add46_658] : $int<64>
    // 		$volatile shl48 := (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 230
    // shl48
    $W[shl48_664] : $int<64>
    // 		call49 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 231
    // call49
    $W[call49_667] : $int<8>
    // 		conv51 := ($cast ($uint<64>) call49 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 232
    // conv51
    $W[conv51_671] : $int<64>
    // 		$volatile add52 := (shl48 | conv51) $buffering 1
    //  file prog.linked.opt.aa, line 233
    // add52
    $W[add52_676] : $int<64>
    // 		$volatile shl54 := (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 234
    // shl54
    $W[shl54_682] : $int<64>
    // 		call55 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 235
    // call55
    $W[call55_685] : $int<8>
    // 		conv57 := ($cast ($uint<64>) call55 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 236
    // conv57
    $W[conv57_689] : $int<64>
    // 		$volatile add58 := (shl54 | conv57) $buffering 1
    //  file prog.linked.opt.aa, line 237
    // add58
    $W[add58_694] : $int<64>
    // 		$volatile shl60 := (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 238
    // shl60
    $W[shl60_700] : $int<64>
    // 		call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 239
    // call61
    $W[call61_703] : $int<8>
    // 		conv63 := ($cast ($uint<64>) call61 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 240
    // conv63
    $W[conv63_707] : $int<64>
    // 		$volatile add64 := (shl60 | conv63) $buffering 1
    //  file prog.linked.opt.aa, line 241
    // add64
    $W[add64_712] : $int<64>
    // 		$volatile shl66 := (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 242
    // shl66
    $W[shl66_718] : $int<64>
    // 		call67 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 243
    // call67
    $W[call67_721] : $int<8>
    // 		conv69 := ($cast ($uint<64>) call67 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 244
    // conv69
    $W[conv69_725] : $int<64>
    // 		$volatile add70 := (shl66 | conv69) $buffering 1
    //  file prog.linked.opt.aa, line 245
    // add70
    $W[add70_730] : $int<64>
    // 		->(arrayidx74) := add70 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 246
    // ->(arrayidx74)
    $intermediate $W[ptr_deref_732_wire] : $int<64>
    $intermediate $W[ptr_deref_732_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_732_root_address] : $int<14>
    $W[ptr_deref_732_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_732_data_0] : $int<64>
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 247
    // indvarx_xnext
    $W[indvarx_xnext_740] : $int<64>
    // 		$volatile exitcond10 := (indvarx_xnext == umax9) $buffering 1
    //  file prog.linked.opt.aa, line 248
    // exitcond10
    $W[exitcond10_745] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 249
    // 		ret_val__ := ($cast ($uint<16>) mul19 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 259
    // ret_val__
    // datapath-instances for block %testConfigure%body
    //  file prog.linked.opt.aa, line 122
    // 		->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 125
    // ->(iNsTr_0)
    &/ [ptr_deref_283_base_resize] (iNsTr_0_281) (ptr_deref_283_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_283_root_address_inst] (ptr_deref_283_resized_base_address) (ptr_deref_283_root_address) 
    $flowthrough 
    +[ptr_deref_283_addr_0] (ptr_deref_283_root_address ptr_deref_283_word_offset_0) (ptr_deref_283_word_address_0)   
    $delay ptr_deref_283_addr_0 2
    +[ptr_deref_283_addr_1] (ptr_deref_283_root_address ptr_deref_283_word_offset_1) (ptr_deref_283_word_address_1)   
    $delay ptr_deref_283_addr_1 2
    +[ptr_deref_283_addr_2] (ptr_deref_283_root_address ptr_deref_283_word_offset_2) (ptr_deref_283_word_address_2)   
    $delay ptr_deref_283_addr_2 2
    +[ptr_deref_283_addr_3] (ptr_deref_283_root_address ptr_deref_283_word_offset_3) (ptr_deref_283_word_address_3)   
    $delay ptr_deref_283_addr_3 2
    $store [ptr_deref_283_store_0] $to memory_space_2 (ptr_deref_283_word_address_0 ptr_deref_283_data_0) 
    $delay ptr_deref_283_store_0 6
    $store [ptr_deref_283_store_1] $to memory_space_2 (ptr_deref_283_word_address_1 ptr_deref_283_data_1) 
    $delay ptr_deref_283_store_1 6
    $store [ptr_deref_283_store_2] $to memory_space_2 (ptr_deref_283_word_address_2 ptr_deref_283_data_2) 
    $delay ptr_deref_283_store_2 6
    $store [ptr_deref_283_store_3] $to memory_space_2 (ptr_deref_283_word_address_3 ptr_deref_283_data_3) 
    $delay ptr_deref_283_store_3 6
    &/ [ptr_deref_283_gather_scatter] (type_cast_285_wire_constant) (ptr_deref_283_data_3 ptr_deref_283_data_2 ptr_deref_283_data_1 ptr_deref_283_data_0) 
    $flowthrough 
    // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 126
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_288_inst] (zeropad_input_pipe) (call_289) 
    $buffering $out RPIPE_zeropad_input_pipe_288_inst call_289 1
    // 		->(iNsTr_3) := call $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 128
    // ->(iNsTr_3)
    &/ [ptr_deref_297_base_resize] (iNsTr_3_295) (ptr_deref_297_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_297_root_address_inst] (ptr_deref_297_resized_base_address) (ptr_deref_297_root_address) 
    $flowthrough 
    &/ [ptr_deref_297_addr_0] (ptr_deref_297_root_address) (ptr_deref_297_word_address_0) 
    $flowthrough 
    $store [ptr_deref_297_store_0] $to memory_space_2 (ptr_deref_297_word_address_0 ptr_deref_297_data_0) 
    $delay ptr_deref_297_store_0 6
    &/ [ptr_deref_297_gather_scatter] (call_289) (ptr_deref_297_data_0) 
    $flowthrough 
    // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 129
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_301_inst] (zeropad_input_pipe) (call1_302) 
    $buffering $out RPIPE_zeropad_input_pipe_301_inst call1_302 1
    // 		conv := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 130
    // ($cast ($uint<32>) call1 )
    # := [type_cast_305_inst] (call1_302) (conv_306)    
    $buffering  $out type_cast_305_inst conv_306 1
    $delay type_cast_305_inst 1
    // 		->(iNsTr_6) := conv $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 132
    // ->(iNsTr_6)
    &/ [ptr_deref_314_base_resize] (iNsTr_6_312) (ptr_deref_314_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_314_root_address_inst] (ptr_deref_314_resized_base_address) (ptr_deref_314_root_address) 
    $flowthrough 
    +[ptr_deref_314_addr_0] (ptr_deref_314_root_address ptr_deref_314_word_offset_0) (ptr_deref_314_word_address_0)   
    $delay ptr_deref_314_addr_0 2
    +[ptr_deref_314_addr_1] (ptr_deref_314_root_address ptr_deref_314_word_offset_1) (ptr_deref_314_word_address_1)   
    $delay ptr_deref_314_addr_1 2
    +[ptr_deref_314_addr_2] (ptr_deref_314_root_address ptr_deref_314_word_offset_2) (ptr_deref_314_word_address_2)   
    $delay ptr_deref_314_addr_2 2
    +[ptr_deref_314_addr_3] (ptr_deref_314_root_address ptr_deref_314_word_offset_3) (ptr_deref_314_word_address_3)   
    $delay ptr_deref_314_addr_3 2
    $store [ptr_deref_314_store_0] $to memory_space_2 (ptr_deref_314_word_address_0 ptr_deref_314_data_0) 
    $delay ptr_deref_314_store_0 6
    $store [ptr_deref_314_store_1] $to memory_space_2 (ptr_deref_314_word_address_1 ptr_deref_314_data_1) 
    $delay ptr_deref_314_store_1 6
    $store [ptr_deref_314_store_2] $to memory_space_2 (ptr_deref_314_word_address_2 ptr_deref_314_data_2) 
    $delay ptr_deref_314_store_2 6
    $store [ptr_deref_314_store_3] $to memory_space_2 (ptr_deref_314_word_address_3 ptr_deref_314_data_3) 
    $delay ptr_deref_314_store_3 6
    &/ [ptr_deref_314_gather_scatter] (conv_306) (ptr_deref_314_data_3 ptr_deref_314_data_2 ptr_deref_314_data_1 ptr_deref_314_data_0) 
    $flowthrough 
    // 		$volatile cmp86 := (call1 == ($bitcast ($uint<8>) _b00000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 133
    // (call1 == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_321_inst] (call1_302 type_cast_320_wire_constant) (cmp86_322)   $flowthrough 
    $delay EQ_u8_u1_321_inst 0
    // 		call487 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 134
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_324_inst] (zeropad_input_pipe) (call487_325) 
    $buffering $out RPIPE_zeropad_input_pipe_324_inst call487_325 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 135
    ==0? [if_stmt_326_branch] (cmp86_322)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 143
    // 			$phi indvar96 := 			  ($cast ($uint<64>) tmp98 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 144
    // ($cast ($uint<64>) tmp98 )
    # := [type_cast_338_inst] (tmp98_379) (type_cast_338_wire)    
    $buffering  $out type_cast_338_inst type_cast_338_wire 1
    $delay type_cast_338_inst 1
    $phi [phi_stmt_335] (type_cast_338_wire type_cast_341_wire_constant) ( indvar96_335 ) 
    // 			$phi call489 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xbody 			  ($cast ($uint<8>) call487 ) $on   forx_xbodyx_xpreheader_forx_xbody 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 146
    // ($cast ($uint<8>) call4 )
    # := [type_cast_345_inst] (call4_397) (type_cast_345_wire)    
    $buffering  $out type_cast_345_inst type_cast_345_wire 1
    $delay type_cast_345_inst 1
    // ($cast ($uint<8>) call487 )
    # := [type_cast_347_inst] (call487_325) (type_cast_347_wire)    
    $buffering  $out type_cast_347_inst type_cast_347_wire 1
    $delay type_cast_347_inst 1
    $phi [phi_stmt_342] (type_cast_345_wire type_cast_347_wire) ( call489_342 ) 
    // 		$volatile tmp := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 149
    // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_353_inst] (indvar96_335 type_cast_352_wire_constant) (tmp_354)   $flowthrough 
    $delay ADD_u64_u64_353_inst 0
    // 		inc := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 150
    // ($cast ($uint<32>) tmp )
    # := [type_cast_357_inst] (tmp_354) (inc_358)    
    $buffering  $out type_cast_357_inst inc_358 1
    $delay type_cast_357_inst 1
    // 		arrayidx := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 151
    &/ [array_obj_ref_363_index_1_resize] (indvar96_335) (R_indvar96_362_resized) 
    $flowthrough 
    *[array_obj_ref_363_index_1_scale] (R_indvar96_362_resized array_obj_ref_363_offset_scale_factor_1) (R_indvar96_362_scaled)   
    $delay array_obj_ref_363_index_1_scale 2
    +[array_obj_ref_363_index_offset] (R_indvar96_362_scaled array_obj_ref_363_constant_part_of_offset) (array_obj_ref_363_final_offset)   
    $delay array_obj_ref_363_index_offset 2
    &/ [array_obj_ref_363_root_address_inst] (array_obj_ref_363_final_offset) (array_obj_ref_363_root_address) 
    $flowthrough 
    # := [addr_of_364_final_reg] (array_obj_ref_363_root_address) (arrayidx_365)    
    $buffering  $out addr_of_364_final_reg arrayidx_365 1
    // 		conv5 := ($cast ($uint<32>) call489 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 152
    // ($cast ($uint<32>) call489 )
    # := [type_cast_368_inst] (call489_342) (conv5_369)    
    $buffering  $out type_cast_368_inst conv5_369 1
    $delay type_cast_368_inst 1
    // 		->(arrayidx) := conv5 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 153
    // ->(arrayidx)
    &/ [ptr_deref_371_base_resize] (arrayidx_365) (ptr_deref_371_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_371_root_address_inst] (ptr_deref_371_resized_base_address) (ptr_deref_371_root_address) 
    $flowthrough 
    +[ptr_deref_371_addr_0] (ptr_deref_371_root_address ptr_deref_371_word_offset_0) (ptr_deref_371_word_address_0)   
    $delay ptr_deref_371_addr_0 2
    +[ptr_deref_371_addr_1] (ptr_deref_371_root_address ptr_deref_371_word_offset_1) (ptr_deref_371_word_address_1)   
    $delay ptr_deref_371_addr_1 2
    +[ptr_deref_371_addr_2] (ptr_deref_371_root_address ptr_deref_371_word_offset_2) (ptr_deref_371_word_address_2)   
    $delay ptr_deref_371_addr_2 2
    +[ptr_deref_371_addr_3] (ptr_deref_371_root_address ptr_deref_371_word_offset_3) (ptr_deref_371_word_address_3)   
    $delay ptr_deref_371_addr_3 2
    $store [ptr_deref_371_store_0] $to memory_space_2 (ptr_deref_371_word_address_0 ptr_deref_371_data_0) 
    $delay ptr_deref_371_store_0 6
    $store [ptr_deref_371_store_1] $to memory_space_2 (ptr_deref_371_word_address_1 ptr_deref_371_data_1) 
    $delay ptr_deref_371_store_1 6
    $store [ptr_deref_371_store_2] $to memory_space_2 (ptr_deref_371_word_address_2 ptr_deref_371_data_2) 
    $delay ptr_deref_371_store_2 6
    $store [ptr_deref_371_store_3] $to memory_space_2 (ptr_deref_371_word_address_3 ptr_deref_371_data_3) 
    $delay ptr_deref_371_store_3 6
    &/ [ptr_deref_371_gather_scatter] (conv5_369) (ptr_deref_371_data_3 ptr_deref_371_data_2 ptr_deref_371_data_1 ptr_deref_371_data_0) 
    $flowthrough 
    // 		$volatile tmp98 := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 154
    // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_378_inst] (indvar96_335 type_cast_377_wire_constant) (tmp98_379)   $flowthrough 
    $delay ADD_u64_u64_378_inst 0
    // 		tmp2 := ->(iNsTr_28) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 156
    // ->(iNsTr_28)
    &/ [ptr_deref_388_base_resize] (iNsTr_28_385) (ptr_deref_388_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_388_root_address_inst] (ptr_deref_388_resized_base_address) (ptr_deref_388_root_address) 
    $flowthrough 
    +[ptr_deref_388_addr_0] (ptr_deref_388_root_address ptr_deref_388_word_offset_0) (ptr_deref_388_word_address_0)   
    $delay ptr_deref_388_addr_0 2
    +[ptr_deref_388_addr_1] (ptr_deref_388_root_address ptr_deref_388_word_offset_1) (ptr_deref_388_word_address_1)   
    $delay ptr_deref_388_addr_1 2
    +[ptr_deref_388_addr_2] (ptr_deref_388_root_address ptr_deref_388_word_offset_2) (ptr_deref_388_word_address_2)   
    $delay ptr_deref_388_addr_2 2
    +[ptr_deref_388_addr_3] (ptr_deref_388_root_address ptr_deref_388_word_offset_3) (ptr_deref_388_word_address_3)   
    $delay ptr_deref_388_addr_3 2
    $load [ptr_deref_388_load_0] $from memory_space_2 (ptr_deref_388_word_address_0) (ptr_deref_388_data_0) 
    $delay ptr_deref_388_load_0 6
    $load [ptr_deref_388_load_1] $from memory_space_2 (ptr_deref_388_word_address_1) (ptr_deref_388_data_1) 
    $delay ptr_deref_388_load_1 6
    $load [ptr_deref_388_load_2] $from memory_space_2 (ptr_deref_388_word_address_2) (ptr_deref_388_data_2) 
    $delay ptr_deref_388_load_2 6
    $load [ptr_deref_388_load_3] $from memory_space_2 (ptr_deref_388_word_address_3) (ptr_deref_388_data_3) 
    $delay ptr_deref_388_load_3 6
    &/ [ptr_deref_388_gather_scatter] (ptr_deref_388_data_3 ptr_deref_388_data_2 ptr_deref_388_data_1 ptr_deref_388_data_0) (tmp2_389) 
    $flowthrough 
    // 		$volatile cmp := (inc < tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 157
    // (inc < tmp2)
    <[ULT_u32_u1_393_inst] (inc_358 tmp2_389) (cmp_394)   $flowthrough 
    $delay ULT_u32_u1_393_inst 0
    // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 158
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_396_inst] (zeropad_input_pipe) (call4_397) 
    $buffering $out RPIPE_zeropad_input_pipe_396_inst call4_397 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 159
    ==0? [if_stmt_398_branch] (cmp_394)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 164
    // 			$phi call4x_xlcssa1 := 			  ($cast ($uint<8>) call4 ) $on   forx_xbody_forx_xendx_xloopexit 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 165
    // ($cast ($uint<8>) call4 )
    # := [type_cast_408_inst] (call4_397) (type_cast_408_wire)    
    $buffering  $out type_cast_408_inst type_cast_408_wire 1
    $delay type_cast_408_inst 1
    $phi [phi_stmt_405] (type_cast_408_wire) ( call4x_xlcssa1_405 ) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 169
    // 			$phi call4x_xlcssa := 			  ($cast ($uint<8>) call487 ) $on   entry_forx_xend 			  ($cast ($uint<8>) call4x_xlcssa1 ) $on   forx_xendx_xloopexit_forx_xend 
    // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 170
    // ($cast ($uint<8>) call487 )
    # := [type_cast_415_inst] (call487_325) (type_cast_415_wire)    
    $buffering  $out type_cast_415_inst type_cast_415_wire 1
    $delay type_cast_415_inst 1
    // ($cast ($uint<8>) call4x_xlcssa1 )
    # := [type_cast_417_inst] (call4x_xlcssa1_405) (type_cast_417_wire)    
    $buffering  $out type_cast_417_inst type_cast_417_wire 1
    $delay type_cast_417_inst 1
    $phi [phi_stmt_412] (type_cast_415_wire type_cast_417_wire) ( call4x_xlcssa_412 ) 
    // 		pad := call4x_xlcssa $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 173
    // pad
    $store [STORE_pad_419_store_0] $to memory_space_4 (STORE_pad_419_word_address_0 STORE_pad_419_data_0) 
    $delay STORE_pad_419_store_0 4
    &/ [STORE_pad_419_gather_scatter] (call4x_xlcssa_412) (STORE_pad_419_data_0) 
    $flowthrough 
    // 		call9 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 174
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_423_inst] (zeropad_input_pipe) (call9_424) 
    $buffering $out RPIPE_zeropad_input_pipe_423_inst call9_424 1
    // 		conv10 := ($cast ($uint<32>) call9 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 175
    // ($cast ($uint<32>) call9 )
    # := [type_cast_427_inst] (call9_424) (conv10_428)    
    $buffering  $out type_cast_427_inst conv10_428 1
    $delay type_cast_427_inst 1
    // 		->(iNsTr_12) := conv10 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 177
    // ->(iNsTr_12)
    &/ [ptr_deref_438_base_resize] (iNsTr_12_436) (ptr_deref_438_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_438_root_address_inst] (ptr_deref_438_resized_base_address) (ptr_deref_438_root_address) 
    $flowthrough 
    &/ [ptr_deref_438_addr_0] (ptr_deref_438_root_address) (ptr_deref_438_word_address_0) 
    $flowthrough 
    $store [ptr_deref_438_store_0] $to memory_space_3 (ptr_deref_438_word_address_0 ptr_deref_438_data_0) 
    $delay ptr_deref_438_store_0 6
    &/ [ptr_deref_438_gather_scatter] (conv10_428) (ptr_deref_438_data_0) 
    $flowthrough 
    // 		call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 178
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_442_inst] (zeropad_input_pipe) (call11_443) 
    $buffering $out RPIPE_zeropad_input_pipe_442_inst call11_443 1
    // 		conv12 := ($cast ($uint<32>) call11 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 179
    // ($cast ($uint<32>) call11 )
    # := [type_cast_446_inst] (call11_443) (conv12_447)    
    $buffering  $out type_cast_446_inst conv12_447 1
    $delay type_cast_446_inst 1
    // 		->(iNsTr_15) := conv12 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 181
    // ->(iNsTr_15)
    &/ [ptr_deref_457_base_resize] (iNsTr_15_455) (ptr_deref_457_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_457_root_address_inst] (ptr_deref_457_resized_base_address) (ptr_deref_457_root_address) 
    $flowthrough 
    &/ [ptr_deref_457_addr_0] (ptr_deref_457_root_address) (ptr_deref_457_word_address_0) 
    $flowthrough 
    $store [ptr_deref_457_store_0] $to memory_space_3 (ptr_deref_457_word_address_0 ptr_deref_457_data_0) 
    $delay ptr_deref_457_store_0 6
    &/ [ptr_deref_457_gather_scatter] (conv12_447) (ptr_deref_457_data_0) 
    $flowthrough 
    // 		call13 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 182
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_461_inst] (zeropad_input_pipe) (call13_462) 
    $buffering $out RPIPE_zeropad_input_pipe_461_inst call13_462 1
    // 		conv14 := ($cast ($uint<32>) call13 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 183
    // ($cast ($uint<32>) call13 )
    # := [type_cast_465_inst] (call13_462) (conv14_466)    
    $buffering  $out type_cast_465_inst conv14_466 1
    $delay type_cast_465_inst 1
    // 		->(iNsTr_18) := conv14 $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 185
    // ->(iNsTr_18)
    &/ [ptr_deref_476_base_resize] (iNsTr_18_474) (ptr_deref_476_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_476_root_address_inst] (ptr_deref_476_resized_base_address) (ptr_deref_476_root_address) 
    $flowthrough 
    &/ [ptr_deref_476_addr_0] (ptr_deref_476_root_address) (ptr_deref_476_word_address_0) 
    $flowthrough 
    $store [ptr_deref_476_store_0] $to memory_space_3 (ptr_deref_476_word_address_0 ptr_deref_476_data_0) 
    $delay ptr_deref_476_store_0 6
    &/ [ptr_deref_476_gather_scatter] (conv14_466) (ptr_deref_476_data_0) 
    $flowthrough 
    // 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 187
    // ->(iNsTr_20)
    &/ [ptr_deref_489_base_resize] (iNsTr_20_486) (ptr_deref_489_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_489_root_address_inst] (ptr_deref_489_resized_base_address) (ptr_deref_489_root_address) 
    $flowthrough 
    +[ptr_deref_489_addr_0] (ptr_deref_489_root_address ptr_deref_489_word_offset_0) (ptr_deref_489_word_address_0)   
    $delay ptr_deref_489_addr_0 2
    +[ptr_deref_489_addr_1] (ptr_deref_489_root_address ptr_deref_489_word_offset_1) (ptr_deref_489_word_address_1)   
    $delay ptr_deref_489_addr_1 2
    +[ptr_deref_489_addr_2] (ptr_deref_489_root_address ptr_deref_489_word_offset_2) (ptr_deref_489_word_address_2)   
    $delay ptr_deref_489_addr_2 2
    +[ptr_deref_489_addr_3] (ptr_deref_489_root_address ptr_deref_489_word_offset_3) (ptr_deref_489_word_address_3)   
    $delay ptr_deref_489_addr_3 2
    $load [ptr_deref_489_load_0] $from memory_space_2 (ptr_deref_489_word_address_0) (ptr_deref_489_data_0) 
    $delay ptr_deref_489_load_0 6
    $load [ptr_deref_489_load_1] $from memory_space_2 (ptr_deref_489_word_address_1) (ptr_deref_489_data_1) 
    $delay ptr_deref_489_load_1 6
    $load [ptr_deref_489_load_2] $from memory_space_2 (ptr_deref_489_word_address_2) (ptr_deref_489_data_2) 
    $delay ptr_deref_489_load_2 6
    $load [ptr_deref_489_load_3] $from memory_space_2 (ptr_deref_489_word_address_3) (ptr_deref_489_data_3) 
    $delay ptr_deref_489_load_3 6
    &/ [ptr_deref_489_gather_scatter] (ptr_deref_489_data_3 ptr_deref_489_data_2 ptr_deref_489_data_1 ptr_deref_489_data_0) (tmp16_490) 
    $flowthrough 
    // 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 189
    // ->(iNsTr_21)
    &/ [ptr_deref_501_base_resize] (iNsTr_21_498) (ptr_deref_501_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_501_root_address_inst] (ptr_deref_501_resized_base_address) (ptr_deref_501_root_address) 
    $flowthrough 
    +[ptr_deref_501_addr_0] (ptr_deref_501_root_address ptr_deref_501_word_offset_0) (ptr_deref_501_word_address_0)   
    $delay ptr_deref_501_addr_0 2
    +[ptr_deref_501_addr_1] (ptr_deref_501_root_address ptr_deref_501_word_offset_1) (ptr_deref_501_word_address_1)   
    $delay ptr_deref_501_addr_1 2
    +[ptr_deref_501_addr_2] (ptr_deref_501_root_address ptr_deref_501_word_offset_2) (ptr_deref_501_word_address_2)   
    $delay ptr_deref_501_addr_2 2
    +[ptr_deref_501_addr_3] (ptr_deref_501_root_address ptr_deref_501_word_offset_3) (ptr_deref_501_word_address_3)   
    $delay ptr_deref_501_addr_3 2
    $load [ptr_deref_501_load_0] $from memory_space_2 (ptr_deref_501_word_address_0) (ptr_deref_501_data_0) 
    $delay ptr_deref_501_load_0 6
    $load [ptr_deref_501_load_1] $from memory_space_2 (ptr_deref_501_word_address_1) (ptr_deref_501_data_1) 
    $delay ptr_deref_501_load_1 6
    $load [ptr_deref_501_load_2] $from memory_space_2 (ptr_deref_501_word_address_2) (ptr_deref_501_data_2) 
    $delay ptr_deref_501_load_2 6
    $load [ptr_deref_501_load_3] $from memory_space_2 (ptr_deref_501_word_address_3) (ptr_deref_501_data_3) 
    $delay ptr_deref_501_load_3 6
    &/ [ptr_deref_501_gather_scatter] (ptr_deref_501_data_3 ptr_deref_501_data_2 ptr_deref_501_data_1 ptr_deref_501_data_0) (tmp17_502) 
    $flowthrough 
    // 		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 191
    // ->(iNsTr_22)
    &/ [ptr_deref_513_base_resize] (iNsTr_22_510) (ptr_deref_513_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_513_root_address_inst] (ptr_deref_513_resized_base_address) (ptr_deref_513_root_address) 
    $flowthrough 
    +[ptr_deref_513_addr_0] (ptr_deref_513_root_address ptr_deref_513_word_offset_0) (ptr_deref_513_word_address_0)   
    $delay ptr_deref_513_addr_0 2
    +[ptr_deref_513_addr_1] (ptr_deref_513_root_address ptr_deref_513_word_offset_1) (ptr_deref_513_word_address_1)   
    $delay ptr_deref_513_addr_1 2
    +[ptr_deref_513_addr_2] (ptr_deref_513_root_address ptr_deref_513_word_offset_2) (ptr_deref_513_word_address_2)   
    $delay ptr_deref_513_addr_2 2
    +[ptr_deref_513_addr_3] (ptr_deref_513_root_address ptr_deref_513_word_offset_3) (ptr_deref_513_word_address_3)   
    $delay ptr_deref_513_addr_3 2
    $load [ptr_deref_513_load_0] $from memory_space_2 (ptr_deref_513_word_address_0) (ptr_deref_513_data_0) 
    $delay ptr_deref_513_load_0 6
    $load [ptr_deref_513_load_1] $from memory_space_2 (ptr_deref_513_word_address_1) (ptr_deref_513_data_1) 
    $delay ptr_deref_513_load_1 6
    $load [ptr_deref_513_load_2] $from memory_space_2 (ptr_deref_513_word_address_2) (ptr_deref_513_data_2) 
    $delay ptr_deref_513_load_2 6
    $load [ptr_deref_513_load_3] $from memory_space_2 (ptr_deref_513_word_address_3) (ptr_deref_513_data_3) 
    $delay ptr_deref_513_load_3 6
    &/ [ptr_deref_513_gather_scatter] (ptr_deref_513_data_3 ptr_deref_513_data_2 ptr_deref_513_data_1 ptr_deref_513_data_0) (tmp18_514) 
    $flowthrough 
    // 		$volatile mul := (tmp17 * tmp16) $buffering 1
    //  file prog.linked.opt.aa, line 192
    // (tmp17 * tmp16)
    *[MUL_u32_u32_518_inst] (tmp17_502 tmp16_490) (mul_519)   $flowthrough 
    $delay MUL_u32_u32_518_inst 0
    // 		$volatile mul19 := (mul * tmp18) $buffering 1
    //  file prog.linked.opt.aa, line 193
    // (mul * tmp18)
    *[MUL_u32_u32_523_inst] (mul_519 tmp18_514) (mul19_524)   $flowthrough 
    $delay MUL_u32_u32_523_inst 0
    // 		conv20 := ($cast ($uint<64>) mul19 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 194
    // ($cast ($uint<64>) mul19 )
    # := [type_cast_527_inst] (mul19_524) (conv20_528)    
    $buffering  $out type_cast_527_inst conv20_528 1
    $delay type_cast_527_inst 1
    // 		$volatile shr82x_xmask := (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
    //  file prog.linked.opt.aa, line 195
    // (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
    &[AND_u64_u64_533_inst] (conv20_528 type_cast_532_wire_constant) (shr82x_xmask_534)   $flowthrough 
    $delay AND_u64_u64_533_inst 0
    // 		$volatile cmp2583 := (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
    //  file prog.linked.opt.aa, line 196
    // (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
    ==[EQ_u64_u1_539_inst] (shr82x_xmask_534 type_cast_538_wire_constant) (cmp2583_540)   $flowthrough 
    $delay EQ_u64_u1_539_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 197
    ==0? [if_stmt_541_branch] (cmp2583_540)
    // 		$volatile tmp4 := (tmp17 * tmp16) $buffering 1
    //  file prog.linked.opt.aa, line 204
    // (tmp17 * tmp16)
    *[MUL_u32_u32_551_inst] (tmp17_502 tmp16_490) (tmp4_552)   $flowthrough 
    $delay MUL_u32_u32_551_inst 0
    // 		$volatile tmp5 := (tmp4 * tmp18) $buffering 1
    //  file prog.linked.opt.aa, line 205
    // (tmp4 * tmp18)
    *[MUL_u32_u32_556_inst] (tmp4_552 tmp18_514) (tmp5_557)   $flowthrough 
    $delay MUL_u32_u32_556_inst 0
    // 		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 206
    // ($cast ($uint<64>) tmp5 )
    # := [type_cast_560_inst] (tmp5_557) (tmp6_561)    
    $buffering  $out type_cast_560_inst tmp6_561 1
    $delay type_cast_560_inst 1
    // 		$volatile tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
    //  file prog.linked.opt.aa, line 207
    // (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
    >>[LSHR_u64_u64_566_inst] (tmp6_561 type_cast_565_wire_constant) (tmp7_567)   $flowthrough 
    $delay LSHR_u64_u64_566_inst 0
    // 		$volatile tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 208
    // (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    >[UGT_u64_u1_572_inst] (tmp7_567 type_cast_571_wire_constant) (tmp8_573)   $flowthrough 
    $delay UGT_u64_u1_572_inst 0
    // 		$volatile umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
    //  file prog.linked.opt.aa, line 209
    // ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_579_inst] (tmp8_573 tmp7_567 type_cast_578_wire_constant) (umax9_580)  $flowthrough
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 211
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on   bbx_xnph_forx_xbody27 			  ($cast ($uint<64>) indvarx_xnext ) $on   forx_xbody27_forx_xbody27 
    // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 212
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_589_inst] (indvarx_xnext_740) (type_cast_589_wire)    
    $buffering  $out type_cast_589_inst type_cast_589_wire 1
    $delay type_cast_589_inst 1
    $phi [phi_stmt_583] (type_cast_587_wire_constant type_cast_589_wire) ( indvar_583 ) 
    // 		arrayidx74 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 215
    &/ [array_obj_ref_595_index_1_resize] (indvar_583) (R_indvar_594_resized) 
    $flowthrough 
    &/ [array_obj_ref_595_index_1_rename] (R_indvar_594_resized) (R_indvar_594_scaled) 
    $flowthrough 
    +[array_obj_ref_595_index_offset] (R_indvar_594_scaled array_obj_ref_595_constant_part_of_offset) (array_obj_ref_595_final_offset)   
    $delay array_obj_ref_595_index_offset 2
    &/ [array_obj_ref_595_root_address_inst] (array_obj_ref_595_final_offset) (array_obj_ref_595_root_address) 
    $flowthrough 
    # := [addr_of_596_final_reg] (array_obj_ref_595_root_address) (arrayidx74_597)    
    $buffering  $out addr_of_596_final_reg arrayidx74_597 1
    // 		call29 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 216
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_599_inst] (zeropad_input_pipe) (call29_600) 
    $buffering $out RPIPE_zeropad_input_pipe_599_inst call29_600 1
    // 		conv30 := ($cast ($uint<64>) call29 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 217
    // ($cast ($uint<64>) call29 )
    # := [type_cast_603_inst] (call29_600) (conv30_604)    
    $buffering  $out type_cast_603_inst conv30_604 1
    $delay type_cast_603_inst 1
    // 		$volatile shl := (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 218
    // (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_609_inst] (conv30_604 type_cast_608_wire_constant) (shl_610)   $flowthrough 
    $delay SHL_u64_u64_609_inst 0
    // 		call32 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 219
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_612_inst] (zeropad_input_pipe) (call32_613) 
    $buffering $out RPIPE_zeropad_input_pipe_612_inst call32_613 1
    // 		conv34 := ($cast ($uint<64>) call32 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<64>) call32 )
    # := [type_cast_616_inst] (call32_613) (conv34_617)    
    $buffering  $out type_cast_616_inst conv34_617 1
    $delay type_cast_616_inst 1
    // 		$volatile add := (shl | conv34) $buffering 1
    //  file prog.linked.opt.aa, line 221
    // (shl | conv34)
    |[OR_u64_u64_621_inst] (shl_610 conv34_617) (add_622)   $flowthrough 
    $delay OR_u64_u64_621_inst 0
    // 		$volatile shl36 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 222
    // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_627_inst] (add_622 type_cast_626_wire_constant) (shl36_628)   $flowthrough 
    $delay SHL_u64_u64_627_inst 0
    // 		call37 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 223
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_630_inst] (zeropad_input_pipe) (call37_631) 
    $buffering $out RPIPE_zeropad_input_pipe_630_inst call37_631 1
    // 		conv39 := ($cast ($uint<64>) call37 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 224
    // ($cast ($uint<64>) call37 )
    # := [type_cast_634_inst] (call37_631) (conv39_635)    
    $buffering  $out type_cast_634_inst conv39_635 1
    $delay type_cast_634_inst 1
    // 		$volatile add40 := (shl36 | conv39) $buffering 1
    //  file prog.linked.opt.aa, line 225
    // (shl36 | conv39)
    |[OR_u64_u64_639_inst] (shl36_628 conv39_635) (add40_640)   $flowthrough 
    $delay OR_u64_u64_639_inst 0
    // 		$volatile shl42 := (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 226
    // (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_645_inst] (add40_640 type_cast_644_wire_constant) (shl42_646)   $flowthrough 
    $delay SHL_u64_u64_645_inst 0
    // 		call43 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 227
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_648_inst] (zeropad_input_pipe) (call43_649) 
    $buffering $out RPIPE_zeropad_input_pipe_648_inst call43_649 1
    // 		conv45 := ($cast ($uint<64>) call43 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 228
    // ($cast ($uint<64>) call43 )
    # := [type_cast_652_inst] (call43_649) (conv45_653)    
    $buffering  $out type_cast_652_inst conv45_653 1
    $delay type_cast_652_inst 1
    // 		$volatile add46 := (shl42 | conv45) $buffering 1
    //  file prog.linked.opt.aa, line 229
    // (shl42 | conv45)
    |[OR_u64_u64_657_inst] (shl42_646 conv45_653) (add46_658)   $flowthrough 
    $delay OR_u64_u64_657_inst 0
    // 		$volatile shl48 := (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 230
    // (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_663_inst] (add46_658 type_cast_662_wire_constant) (shl48_664)   $flowthrough 
    $delay SHL_u64_u64_663_inst 0
    // 		call49 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 231
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_666_inst] (zeropad_input_pipe) (call49_667) 
    $buffering $out RPIPE_zeropad_input_pipe_666_inst call49_667 1
    // 		conv51 := ($cast ($uint<64>) call49 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 232
    // ($cast ($uint<64>) call49 )
    # := [type_cast_670_inst] (call49_667) (conv51_671)    
    $buffering  $out type_cast_670_inst conv51_671 1
    $delay type_cast_670_inst 1
    // 		$volatile add52 := (shl48 | conv51) $buffering 1
    //  file prog.linked.opt.aa, line 233
    // (shl48 | conv51)
    |[OR_u64_u64_675_inst] (shl48_664 conv51_671) (add52_676)   $flowthrough 
    $delay OR_u64_u64_675_inst 0
    // 		$volatile shl54 := (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 234
    // (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_681_inst] (add52_676 type_cast_680_wire_constant) (shl54_682)   $flowthrough 
    $delay SHL_u64_u64_681_inst 0
    // 		call55 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 235
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_684_inst] (zeropad_input_pipe) (call55_685) 
    $buffering $out RPIPE_zeropad_input_pipe_684_inst call55_685 1
    // 		conv57 := ($cast ($uint<64>) call55 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 236
    // ($cast ($uint<64>) call55 )
    # := [type_cast_688_inst] (call55_685) (conv57_689)    
    $buffering  $out type_cast_688_inst conv57_689 1
    $delay type_cast_688_inst 1
    // 		$volatile add58 := (shl54 | conv57) $buffering 1
    //  file prog.linked.opt.aa, line 237
    // (shl54 | conv57)
    |[OR_u64_u64_693_inst] (shl54_682 conv57_689) (add58_694)   $flowthrough 
    $delay OR_u64_u64_693_inst 0
    // 		$volatile shl60 := (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 238
    // (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_699_inst] (add58_694 type_cast_698_wire_constant) (shl60_700)   $flowthrough 
    $delay SHL_u64_u64_699_inst 0
    // 		call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 239
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_702_inst] (zeropad_input_pipe) (call61_703) 
    $buffering $out RPIPE_zeropad_input_pipe_702_inst call61_703 1
    // 		conv63 := ($cast ($uint<64>) call61 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 240
    // ($cast ($uint<64>) call61 )
    # := [type_cast_706_inst] (call61_703) (conv63_707)    
    $buffering  $out type_cast_706_inst conv63_707 1
    $delay type_cast_706_inst 1
    // 		$volatile add64 := (shl60 | conv63) $buffering 1
    //  file prog.linked.opt.aa, line 241
    // (shl60 | conv63)
    |[OR_u64_u64_711_inst] (shl60_700 conv63_707) (add64_712)   $flowthrough 
    $delay OR_u64_u64_711_inst 0
    // 		$volatile shl66 := (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
    //  file prog.linked.opt.aa, line 242
    // (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
    <<[SHL_u64_u64_717_inst] (add64_712 type_cast_716_wire_constant) (shl66_718)   $flowthrough 
    $delay SHL_u64_u64_717_inst 0
    // 		call67 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 243
    // zeropad_input_pipe
    $ioport $in [RPIPE_zeropad_input_pipe_720_inst] (zeropad_input_pipe) (call67_721) 
    $buffering $out RPIPE_zeropad_input_pipe_720_inst call67_721 1
    // 		conv69 := ($cast ($uint<64>) call67 ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 244
    // ($cast ($uint<64>) call67 )
    # := [type_cast_724_inst] (call67_721) (conv69_725)    
    $buffering  $out type_cast_724_inst conv69_725 1
    $delay type_cast_724_inst 1
    // 		$volatile add70 := (shl66 | conv69) $buffering 1
    //  file prog.linked.opt.aa, line 245
    // (shl66 | conv69)
    |[OR_u64_u64_729_inst] (shl66_718 conv69_725) (add70_730)   $flowthrough 
    $delay OR_u64_u64_729_inst 0
    // 		->(arrayidx74) := add70 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 246
    // ->(arrayidx74)
    &/ [ptr_deref_732_base_resize] (arrayidx74_597) (ptr_deref_732_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_732_root_address_inst] (ptr_deref_732_resized_base_address) (ptr_deref_732_root_address) 
    $flowthrough 
    &/ [ptr_deref_732_addr_0] (ptr_deref_732_root_address) (ptr_deref_732_word_address_0) 
    $flowthrough 
    $store [ptr_deref_732_store_0] $to memory_space_1 (ptr_deref_732_word_address_0 ptr_deref_732_data_0) 
    $delay ptr_deref_732_store_0 6
    &/ [ptr_deref_732_gather_scatter] (add70_730) (ptr_deref_732_data_0) 
    $flowthrough 
    // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 247
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_739_inst] (indvar_583 type_cast_738_wire_constant) (indvarx_xnext_740)   $flowthrough 
    $delay ADD_u64_u64_739_inst 0
    // 		$volatile exitcond10 := (indvarx_xnext == umax9) $buffering 1
    //  file prog.linked.opt.aa, line 248
    // (indvarx_xnext == umax9)
    ==[EQ_u64_u1_744_inst] (indvarx_xnext_740 umax9_580) (exitcond10_745)   $flowthrough 
    $delay EQ_u64_u1_744_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 249
    ==0? [if_stmt_746_branch] (exitcond10_745)
    // 		ret_val__ := ($cast ($uint<16>) mul19 ) $buffering 1// bits of buffering = 16. 
    //  file prog.linked.opt.aa, line 259
    // ($cast ($uint<16>) mul19 )
    # := [type_cast_757_inst] (mul19_524) (ret_val__)    
    $buffering  $out type_cast_757_inst ret_val__ 1
    $delay type_cast_757_inst 1
  }
  // end data-path
  // 		->(iNsTr_0) := ($bitcast ($uint<32>) _b00000000000000000000000000000101  ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 125
  // iNsTr_0
  ptr_deref_283_base_resize <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_base_addr_resize/base_resize_ack)
  ptr_deref_283_root_address_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_base_plus_offset/sum_rename_ack)
  ptr_deref_283_addr_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_0_Update/ca)
  ptr_deref_283_addr_1 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_1_Update/ca)
  ptr_deref_283_addr_2 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_2_Update/ca)
  ptr_deref_283_addr_3 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_word_addrgen_3_Update/ca)
  ptr_deref_283_gather_scatter <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/ptr_deref_283_Split/split_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/ptr_deref_283_Split/split_ack)
  ptr_deref_283_store_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_0/ca)
  ptr_deref_283_store_1 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_1/ca)
  ptr_deref_283_store_2 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_2/ca)
  ptr_deref_283_store_3 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_283_Update/word_access_complete/word_3/ca)
  // 		call := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 126
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_288_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_288_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_288_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_288_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_288_Update/ca)
  // 		->(iNsTr_3) := call $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 128
  // call
  // iNsTr_3
  ptr_deref_297_base_resize <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_base_addr_resize/base_resize_ack)
  ptr_deref_297_root_address_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_base_plus_offset/sum_rename_ack)
  ptr_deref_297_addr_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_word_addrgen/root_register_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_word_addrgen/root_register_ack)
  ptr_deref_297_gather_scatter <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Sample/ptr_deref_297_Split/split_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Sample/ptr_deref_297_Split/split_ack)
  ptr_deref_297_store_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_297_Update/word_access_complete/word_0/ca)
  // 		call1 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 129
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_301_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_301_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_301_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_301_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_301_Update/ca)
  // 		conv := ($cast ($uint<32>) call1 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 130
  // call1
  // ($cast ($uint<32>) call1 )
  type_cast_305_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/type_cast_305_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/type_cast_305_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/type_cast_305_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/type_cast_305_Update/ca)
  // 		->(iNsTr_6) := conv $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 132
  // conv
  // iNsTr_6
  ptr_deref_314_base_resize <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_base_addr_resize/base_resize_ack)
  ptr_deref_314_root_address_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_base_plus_offset/sum_rename_ack)
  ptr_deref_314_addr_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_0_Update/ca)
  ptr_deref_314_addr_1 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_1_Update/ca)
  ptr_deref_314_addr_2 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_2_Update/ca)
  ptr_deref_314_addr_3 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_word_addrgen_3_Update/ca)
  ptr_deref_314_gather_scatter <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/ptr_deref_314_Split/split_req) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/ptr_deref_314_Split/split_ack)
  ptr_deref_314_store_0 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_0/ca)
  ptr_deref_314_store_1 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_1/ca)
  ptr_deref_314_store_2 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_2/ca)
  ptr_deref_314_store_3 <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/ptr_deref_314_Update/word_access_complete/word_3/ca)
  // 		$volatile cmp86 := (call1 == ($bitcast ($uint<8>) _b00000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 133
  // (call1 == ($bitcast ($uint<8>) _b00000000  ))
  // call1
  // 		call487 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 134
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_324_inst <=> (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_324_Sample/rr branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_324_Update/cr) (branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_324_Sample/ra branch_block_stmt_275/assign_stmt_281_to_assign_stmt_325/RPIPE_zeropad_input_pipe_324_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 135
  if_stmt_326_branch <=> (branch_block_stmt_275/if_stmt_326_eval_test/branch_req) (branch_block_stmt_275/if_stmt_326_else_link/else_choice_transition branch_block_stmt_275/if_stmt_326_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 140
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 143
  // ($cast ($uint<64>) tmp98 )
  type_cast_338_inst <=> (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/SplitProtocol/Update/ca)
  phi_stmt_335 <=> (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_req branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_335/phi_stmt_335_req) (branch_block_stmt_275/merge_stmt_334_PhiAck/phi_stmt_335_ack)
  // ($cast ($uint<8>) call4 )
  type_cast_345_inst <=> (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_345/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_345/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_345/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_345/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) call487 )
  type_cast_347_inst <=> (branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_347/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_347/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_347/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_sources/type_cast_347/SplitProtocol/Update/ca)
  phi_stmt_342 <=> (branch_block_stmt_275/forx_xbody_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_req branch_block_stmt_275/forx_xbodyx_xpreheader_forx_xbody_PhiReq/phi_stmt_342/phi_stmt_342_req) (branch_block_stmt_275/merge_stmt_334_PhiAck/phi_stmt_342_ack)
  // 		$volatile tmp := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 149
  // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar96
  // 		inc := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 150
  // tmp
  // ($cast ($uint<32>) tmp )
  type_cast_357_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_357_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_357_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_357_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_357_Update/ca)
  // 		arrayidx := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][indvar96]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 151
  // indvar96
  array_obj_ref_363_index_1_resize <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_resize_1/index_resize_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_resize_1/index_resize_ack)
  array_obj_ref_363_index_1_scale <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_scale_1_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_scale_1_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_scale_1_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_index_scale_1_Update/ca)
  array_obj_ref_363_index_offset <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_final_index_sum_regn_Sample/req branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_final_index_sum_regn_Update/req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_final_index_sum_regn_Sample/ack branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_final_index_sum_regn_Update/ack)
  array_obj_ref_363_root_address_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/array_obj_ref_363_base_plus_offset/sum_rename_ack)
  addr_of_364_final_reg <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/addr_of_364_request/req branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/addr_of_364_complete/req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/addr_of_364_request/ack branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/addr_of_364_complete/ack)
  // 		conv5 := ($cast ($uint<32>) call489 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 152
  // call489
  // ($cast ($uint<32>) call489 )
  type_cast_368_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_368_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_368_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_368_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/type_cast_368_Update/ca)
  // 		->(arrayidx) := conv5 $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 153
  // conv5
  // arrayidx
  ptr_deref_371_base_resize <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_base_addr_resize/base_resize_ack)
  ptr_deref_371_root_address_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_base_plus_offset/sum_rename_ack)
  ptr_deref_371_addr_0 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_0_Update/ca)
  ptr_deref_371_addr_1 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_1_Update/ca)
  ptr_deref_371_addr_2 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_2_Update/ca)
  ptr_deref_371_addr_3 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_word_addrgen_3_Update/ca)
  ptr_deref_371_gather_scatter <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/ptr_deref_371_Split/split_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/ptr_deref_371_Split/split_ack)
  ptr_deref_371_store_0 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_0/ca)
  ptr_deref_371_store_1 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_1/ca)
  ptr_deref_371_store_2 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_2/ca)
  ptr_deref_371_store_3 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_371_Update/word_access_complete/word_3/ca)
  // 		$volatile tmp98 := (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 154
  // (indvar96 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar96
  // 		tmp2 := ->(iNsTr_28) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 156
  // iNsTr_28
  ptr_deref_388_base_resize <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_base_addr_resize/base_resize_ack)
  ptr_deref_388_root_address_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_base_plus_offset/sum_rename_ack)
  ptr_deref_388_addr_0 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_0_Update/ca)
  ptr_deref_388_addr_1 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_1_Update/ca)
  ptr_deref_388_addr_2 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_2_Update/ca)
  ptr_deref_388_addr_3 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_word_addrgen_3_Update/ca)
  ptr_deref_388_gather_scatter <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/ptr_deref_388_Merge/merge_req) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/ptr_deref_388_Merge/merge_ack)
  ptr_deref_388_load_0 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_0/ca)
  ptr_deref_388_load_1 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_1/ca)
  ptr_deref_388_load_2 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_2/ca)
  ptr_deref_388_load_3 <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/ptr_deref_388_Update/word_access_complete/word_3/ca)
  // 		$volatile cmp := (inc < tmp2) $buffering 1
  //  file prog.linked.opt.aa, line 157
  // (inc < tmp2)
  // inc
  // tmp2
  // 		call4 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 158
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_396_inst <=> (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/RPIPE_zeropad_input_pipe_396_Sample/rr branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/RPIPE_zeropad_input_pipe_396_Update/cr) (branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/RPIPE_zeropad_input_pipe_396_Sample/ra branch_block_stmt_275/assign_stmt_354_to_assign_stmt_397/RPIPE_zeropad_input_pipe_396_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 159
  if_stmt_398_branch <=> (branch_block_stmt_275/if_stmt_398_eval_test/branch_req) (branch_block_stmt_275/if_stmt_398_else_link/else_choice_transition branch_block_stmt_275/if_stmt_398_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 164
  // ($cast ($uint<8>) call4 )
  type_cast_408_inst <=> (branch_block_stmt_275/forx_xbody_forx_xendx_xloopexit_PhiReq/phi_stmt_405/phi_stmt_405_sources/type_cast_408/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xbody_forx_xendx_xloopexit_PhiReq/phi_stmt_405/phi_stmt_405_sources/type_cast_408/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xbody_forx_xendx_xloopexit_PhiReq/phi_stmt_405/phi_stmt_405_sources/type_cast_408/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xbody_forx_xendx_xloopexit_PhiReq/phi_stmt_405/phi_stmt_405_sources/type_cast_408/SplitProtocol/Update/ca)
  phi_stmt_405 <=> (branch_block_stmt_275/forx_xbody_forx_xendx_xloopexit_PhiReq/phi_stmt_405/phi_stmt_405_req) (branch_block_stmt_275/merge_stmt_404_PhiAck/phi_stmt_405_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 169
  // ($cast ($uint<8>) call487 )
  type_cast_415_inst <=> (branch_block_stmt_275/entry_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/SplitProtocol/Sample/rr branch_block_stmt_275/entry_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/SplitProtocol/Update/cr) (branch_block_stmt_275/entry_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/SplitProtocol/Sample/ra branch_block_stmt_275/entry_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) call4x_xlcssa1 )
  type_cast_417_inst <=> (branch_block_stmt_275/forx_xendx_xloopexit_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_417/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xendx_xloopexit_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_417/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xendx_xloopexit_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_417/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xendx_xloopexit_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_417/SplitProtocol/Update/ca)
  phi_stmt_412 <=> (branch_block_stmt_275/entry_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_req branch_block_stmt_275/forx_xendx_xloopexit_forx_xend_PhiReq/phi_stmt_412/phi_stmt_412_req) (branch_block_stmt_275/merge_stmt_411_PhiAck/phi_stmt_412_ack)
  // 		pad := call4x_xlcssa $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 173
  // call4x_xlcssa
  // pad
  STORE_pad_419_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Sample/STORE_pad_419_Split/split_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Sample/STORE_pad_419_Split/split_ack)
  STORE_pad_419_store_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/STORE_pad_419_Update/word_access_complete/word_0/ca)
  // 		call9 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 174
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_423_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_423_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_423_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_423_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_423_Update/ca)
  // 		conv10 := ($cast ($uint<32>) call9 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 175
  // call9
  // ($cast ($uint<32>) call9 )
  type_cast_427_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_427_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_427_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_427_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_427_Update/ca)
  // 		->(iNsTr_12) := conv10 $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 177
  // conv10
  // iNsTr_12
  ptr_deref_438_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_base_addr_resize/base_resize_ack)
  ptr_deref_438_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_base_plus_offset/sum_rename_ack)
  ptr_deref_438_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_word_addrgen/root_register_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_word_addrgen/root_register_ack)
  ptr_deref_438_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Sample/ptr_deref_438_Split/split_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Sample/ptr_deref_438_Split/split_ack)
  ptr_deref_438_store_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_438_Update/word_access_complete/word_0/ca)
  // 		call11 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 178
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_442_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_442_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_442_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_442_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_442_Update/ca)
  // 		conv12 := ($cast ($uint<32>) call11 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 179
  // call11
  // ($cast ($uint<32>) call11 )
  type_cast_446_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_446_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_446_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_446_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_446_Update/ca)
  // 		->(iNsTr_15) := conv12 $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 181
  // conv12
  // iNsTr_15
  ptr_deref_457_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_base_addr_resize/base_resize_ack)
  ptr_deref_457_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_base_plus_offset/sum_rename_ack)
  ptr_deref_457_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_word_addrgen/root_register_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_word_addrgen/root_register_ack)
  ptr_deref_457_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Sample/ptr_deref_457_Split/split_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Sample/ptr_deref_457_Split/split_ack)
  ptr_deref_457_store_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_457_Update/word_access_complete/word_0/ca)
  // 		call13 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 182
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_461_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_461_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_461_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_461_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/RPIPE_zeropad_input_pipe_461_Update/ca)
  // 		conv14 := ($cast ($uint<32>) call13 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 183
  // call13
  // ($cast ($uint<32>) call13 )
  type_cast_465_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_465_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_465_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_465_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_465_Update/ca)
  // 		->(iNsTr_18) := conv14 $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 185
  // conv14
  // iNsTr_18
  ptr_deref_476_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_base_addr_resize/base_resize_ack)
  ptr_deref_476_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_base_plus_offset/sum_rename_ack)
  ptr_deref_476_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_word_addrgen/root_register_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_word_addrgen/root_register_ack)
  ptr_deref_476_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Sample/ptr_deref_476_Split/split_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Sample/ptr_deref_476_Split/split_ack)
  ptr_deref_476_store_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_476_Update/word_access_complete/word_0/ca)
  // 		tmp16 := ->(iNsTr_20) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 187
  // iNsTr_20
  ptr_deref_489_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_base_addr_resize/base_resize_ack)
  ptr_deref_489_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_base_plus_offset/sum_rename_ack)
  ptr_deref_489_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_0_Update/ca)
  ptr_deref_489_addr_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_1_Update/ca)
  ptr_deref_489_addr_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_2_Update/ca)
  ptr_deref_489_addr_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_word_addrgen_3_Update/ca)
  ptr_deref_489_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/ptr_deref_489_Merge/merge_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/ptr_deref_489_Merge/merge_ack)
  ptr_deref_489_load_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_0/ca)
  ptr_deref_489_load_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_1/ca)
  ptr_deref_489_load_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_2/ca)
  ptr_deref_489_load_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_489_Update/word_access_complete/word_3/ca)
  // 		tmp17 := ->(iNsTr_21) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 189
  // iNsTr_21
  ptr_deref_501_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_base_addr_resize/base_resize_ack)
  ptr_deref_501_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_base_plus_offset/sum_rename_ack)
  ptr_deref_501_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_0_Update/ca)
  ptr_deref_501_addr_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_1_Update/ca)
  ptr_deref_501_addr_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_2_Update/ca)
  ptr_deref_501_addr_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_word_addrgen_3_Update/ca)
  ptr_deref_501_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/ptr_deref_501_Merge/merge_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/ptr_deref_501_Merge/merge_ack)
  ptr_deref_501_load_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_0/ca)
  ptr_deref_501_load_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_1/ca)
  ptr_deref_501_load_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_2/ca)
  ptr_deref_501_load_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_501_Update/word_access_complete/word_3/ca)
  // 		tmp18 := ->(iNsTr_22) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 191
  // iNsTr_22
  ptr_deref_513_base_resize <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_base_addr_resize/base_resize_ack)
  ptr_deref_513_root_address_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_base_plus_offset/sum_rename_ack)
  ptr_deref_513_addr_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_0_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_0_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_0_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_0_Update/ca)
  ptr_deref_513_addr_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_1_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_1_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_1_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_1_Update/ca)
  ptr_deref_513_addr_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_2_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_2_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_2_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_2_Update/ca)
  ptr_deref_513_addr_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_3_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_3_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_3_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_word_addrgen_3_Update/ca)
  ptr_deref_513_gather_scatter <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/ptr_deref_513_Merge/merge_req) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/ptr_deref_513_Merge/merge_ack)
  ptr_deref_513_load_0 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_0/ca)
  ptr_deref_513_load_1 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_1/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_1/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_1/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_1/ca)
  ptr_deref_513_load_2 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_2/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_2/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_2/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_2/ca)
  ptr_deref_513_load_3 <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_3/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_3/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Sample/word_access_start/word_3/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/ptr_deref_513_Update/word_access_complete/word_3/ca)
  // 		$volatile mul := (tmp17 * tmp16) $buffering 1
  //  file prog.linked.opt.aa, line 192
  // (tmp17 * tmp16)
  // tmp17
  // tmp16
  // 		$volatile mul19 := (mul * tmp18) $buffering 1
  //  file prog.linked.opt.aa, line 193
  // (mul * tmp18)
  // mul
  // tmp18
  // 		conv20 := ($cast ($uint<64>) mul19 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 194
  // mul19
  // ($cast ($uint<64>) mul19 )
  type_cast_527_inst <=> (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_527_Sample/rr branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_527_Update/cr) (branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_527_Sample/ra branch_block_stmt_275/assign_stmt_421_to_assign_stmt_540/type_cast_527_Update/ca)
  // 		$volatile shr82x_xmask := (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  )) $buffering 1
  //  file prog.linked.opt.aa, line 195
  // (conv20 & ($bitcast ($uint<64>) _b0000000000000000000000000000000011111111111111111111111111111100  ))
  // conv20
  // 		$volatile cmp2583 := (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )) $buffering 1
  //  file prog.linked.opt.aa, line 196
  // (shr82x_xmask == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ))
  // shr82x_xmask
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 197
  if_stmt_541_branch <=> (branch_block_stmt_275/if_stmt_541_eval_test/branch_req) (branch_block_stmt_275/if_stmt_541_else_link/else_choice_transition branch_block_stmt_275/if_stmt_541_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 202
  // 		$volatile tmp4 := (tmp17 * tmp16) $buffering 1
  //  file prog.linked.opt.aa, line 204
  // (tmp17 * tmp16)
  // tmp17
  // tmp16
  // 		$volatile tmp5 := (tmp4 * tmp18) $buffering 1
  //  file prog.linked.opt.aa, line 205
  // (tmp4 * tmp18)
  // tmp4
  // tmp18
  // 		tmp6 := ($cast ($uint<64>) tmp5 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 206
  // tmp5
  // ($cast ($uint<64>) tmp5 )
  type_cast_560_inst <=> (branch_block_stmt_275/assign_stmt_552_to_assign_stmt_580/type_cast_560_Sample/rr branch_block_stmt_275/assign_stmt_552_to_assign_stmt_580/type_cast_560_Update/cr) (branch_block_stmt_275/assign_stmt_552_to_assign_stmt_580/type_cast_560_Sample/ra branch_block_stmt_275/assign_stmt_552_to_assign_stmt_580/type_cast_560_Update/ca)
  // 		$volatile tmp7 := (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )) $buffering 1
  //  file prog.linked.opt.aa, line 207
  // (tmp6 >> ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  ))
  // tmp6
  // 		$volatile tmp8 := (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 208
  // (tmp7 > ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // tmp7
  // 		$volatile umax9 := ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) )  $buffering 1
  //  file prog.linked.opt.aa, line 209
  // tmp8
  // tmp7
  // ( $mux tmp8 tmp7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 211
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_589_inst <=> (branch_block_stmt_275/forx_xbody27_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_sources/type_cast_589/SplitProtocol/Sample/rr branch_block_stmt_275/forx_xbody27_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_sources/type_cast_589/SplitProtocol/Update/cr) (branch_block_stmt_275/forx_xbody27_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_sources/type_cast_589/SplitProtocol/Sample/ra branch_block_stmt_275/forx_xbody27_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_sources/type_cast_589/SplitProtocol/Update/ca)
  phi_stmt_583 <=> (branch_block_stmt_275/bbx_xnph_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_req branch_block_stmt_275/forx_xbody27_forx_xbody27_PhiReq/phi_stmt_583/phi_stmt_583_req) (branch_block_stmt_275/merge_stmt_582_PhiAck/phi_stmt_583_ack)
  // 		arrayidx74 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][indvar]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 215
  // indvar
  array_obj_ref_595_index_1_resize <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_index_resize_1/index_resize_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_index_resize_1/index_resize_ack)
  array_obj_ref_595_index_1_rename <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_index_scale_1/scale_rename_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_index_scale_1/scale_rename_ack)
  array_obj_ref_595_index_offset <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_final_index_sum_regn_Sample/req branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_final_index_sum_regn_Update/req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_final_index_sum_regn_Sample/ack branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_final_index_sum_regn_Update/ack)
  array_obj_ref_595_root_address_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/array_obj_ref_595_base_plus_offset/sum_rename_ack)
  addr_of_596_final_reg <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/addr_of_596_request/req branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/addr_of_596_complete/req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/addr_of_596_request/ack branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/addr_of_596_complete/ack)
  // 		call29 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 216
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_599_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_599_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_599_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_599_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_599_Update/ca)
  // 		conv30 := ($cast ($uint<64>) call29 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 217
  // call29
  // ($cast ($uint<64>) call29 )
  type_cast_603_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_603_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_603_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_603_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_603_Update/ca)
  // 		$volatile shl := (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 218
  // (conv30 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // conv30
  // 		call32 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 219
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_612_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_612_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_612_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_612_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_612_Update/ca)
  // 		conv34 := ($cast ($uint<64>) call32 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 220
  // call32
  // ($cast ($uint<64>) call32 )
  type_cast_616_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_616_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_616_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_616_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_616_Update/ca)
  // 		$volatile add := (shl | conv34) $buffering 1
  //  file prog.linked.opt.aa, line 221
  // (shl | conv34)
  // shl
  // conv34
  // 		$volatile shl36 := (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 222
  // (add << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add
  // 		call37 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 223
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_630_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_630_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_630_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_630_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_630_Update/ca)
  // 		conv39 := ($cast ($uint<64>) call37 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 224
  // call37
  // ($cast ($uint<64>) call37 )
  type_cast_634_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_634_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_634_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_634_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_634_Update/ca)
  // 		$volatile add40 := (shl36 | conv39) $buffering 1
  //  file prog.linked.opt.aa, line 225
  // (shl36 | conv39)
  // shl36
  // conv39
  // 		$volatile shl42 := (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 226
  // (add40 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add40
  // 		call43 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 227
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_648_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_648_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_648_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_648_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_648_Update/ca)
  // 		conv45 := ($cast ($uint<64>) call43 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 228
  // call43
  // ($cast ($uint<64>) call43 )
  type_cast_652_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_652_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_652_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_652_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_652_Update/ca)
  // 		$volatile add46 := (shl42 | conv45) $buffering 1
  //  file prog.linked.opt.aa, line 229
  // (shl42 | conv45)
  // shl42
  // conv45
  // 		$volatile shl48 := (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 230
  // (add46 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add46
  // 		call49 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 231
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_666_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_666_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_666_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_666_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_666_Update/ca)
  // 		conv51 := ($cast ($uint<64>) call49 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 232
  // call49
  // ($cast ($uint<64>) call49 )
  type_cast_670_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_670_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_670_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_670_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_670_Update/ca)
  // 		$volatile add52 := (shl48 | conv51) $buffering 1
  //  file prog.linked.opt.aa, line 233
  // (shl48 | conv51)
  // shl48
  // conv51
  // 		$volatile shl54 := (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 234
  // (add52 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add52
  // 		call55 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 235
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_684_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_684_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_684_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_684_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_684_Update/ca)
  // 		conv57 := ($cast ($uint<64>) call55 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 236
  // call55
  // ($cast ($uint<64>) call55 )
  type_cast_688_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_688_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_688_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_688_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_688_Update/ca)
  // 		$volatile add58 := (shl54 | conv57) $buffering 1
  //  file prog.linked.opt.aa, line 237
  // (shl54 | conv57)
  // shl54
  // conv57
  // 		$volatile shl60 := (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 238
  // (add58 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add58
  // 		call61 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 239
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_702_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_702_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_702_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_702_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_702_Update/ca)
  // 		conv63 := ($cast ($uint<64>) call61 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 240
  // call61
  // ($cast ($uint<64>) call61 )
  type_cast_706_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_706_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_706_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_706_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_706_Update/ca)
  // 		$volatile add64 := (shl60 | conv63) $buffering 1
  //  file prog.linked.opt.aa, line 241
  // (shl60 | conv63)
  // shl60
  // conv63
  // 		$volatile shl66 := (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  )) $buffering 1
  //  file prog.linked.opt.aa, line 242
  // (add64 << ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000001000  ))
  // add64
  // 		call67 := zeropad_input_pipe $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 243
  // zeropad_input_pipe
  RPIPE_zeropad_input_pipe_720_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_720_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_720_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_720_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/RPIPE_zeropad_input_pipe_720_Update/ca)
  // 		conv69 := ($cast ($uint<64>) call67 ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 244
  // call67
  // ($cast ($uint<64>) call67 )
  type_cast_724_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_724_Sample/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_724_Update/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_724_Sample/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/type_cast_724_Update/ca)
  // 		$volatile add70 := (shl66 | conv69) $buffering 1
  //  file prog.linked.opt.aa, line 245
  // (shl66 | conv69)
  // shl66
  // conv69
  // 		->(arrayidx74) := add70 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 246
  // add70
  // arrayidx74
  ptr_deref_732_base_resize <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_base_addr_resize/base_resize_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_base_addr_resize/base_resize_ack)
  ptr_deref_732_root_address_inst <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_base_plus_offset/sum_rename_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_base_plus_offset/sum_rename_ack)
  ptr_deref_732_addr_0 <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_word_addrgen/root_register_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_word_addrgen/root_register_ack)
  ptr_deref_732_gather_scatter <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Sample/ptr_deref_732_Split/split_req) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Sample/ptr_deref_732_Split/split_ack)
  ptr_deref_732_store_0 <=> (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Sample/word_access_start/word_0/rr branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Update/word_access_complete/word_0/cr) (branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Sample/word_access_start/word_0/ra branch_block_stmt_275/assign_stmt_597_to_assign_stmt_745/ptr_deref_732_Update/word_access_complete/word_0/ca)
  // 		$volatile indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 247
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  // 		$volatile exitcond10 := (indvarx_xnext == umax9) $buffering 1
  //  file prog.linked.opt.aa, line 248
  // (indvarx_xnext == umax9)
  // indvarx_xnext
  // umax9
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 249
  if_stmt_746_branch <=> (branch_block_stmt_275/if_stmt_746_eval_test/branch_req) (branch_block_stmt_275/if_stmt_746_else_link/else_choice_transition branch_block_stmt_275/if_stmt_746_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 254
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 257
  // 		ret_val__ := ($cast ($uint<16>) mul19 ) $buffering 1// bits of buffering = 16. 
  //  file prog.linked.opt.aa, line 259
  // mul19
  // ($cast ($uint<16>) mul19 )
  type_cast_757_inst <=> (branch_block_stmt_275/assign_stmt_758/type_cast_757_Sample/rr branch_block_stmt_275/assign_stmt_758/type_cast_757_Update/cr) (branch_block_stmt_275/assign_stmt_758/type_cast_757_Sample/ra branch_block_stmt_275/assign_stmt_758/type_cast_757_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 261
}
$module [zeropad3D] 
{
  // pipe-declarations for block %zeropad3D
  //  file prog.linked.opt.aa, line 265
  // pipe-declarations for block %zeropad3D%body
  //  file prog.linked.opt.aa, line 270
  // pipe-declarations for block %zeropad3D%body%
  //  file prog.linked.opt.aa, line 281
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_764] // Branch Block  file prog.linked.opt.aa, line 270
    {
      $P [branch_block_stmt_764__entry__]
      branch_block_stmt_764__entry__ <-| ($entry)
      $P [branch_block_stmt_764__exit__]
      branch_block_stmt_764__exit__ |-> ($exit)
      $P [call_stmt_766__entry__] 
      $P [call_stmt_766__exit__] 
      $P [assign_stmt_771_to_assign_stmt_777__entry__] 
      $P [assign_stmt_771_to_assign_stmt_777__exit__] 
      $P [call_stmt_780__entry__] 
      $P [call_stmt_780__exit__] 
      $P [return__]
      $P [merge_stmt_782__exit__] 
      ::[call_stmt_766] 
      {
        // start: 		$call testConfigure () (call ) 
        //  file prog.linked.opt.aa, line 272
        $T[call_stmt_766_sample_start_] 
        $T[call_stmt_766_sample_completed_] 
        $T[call_stmt_766_update_start_] 
        $T[call_stmt_766_update_completed_] 
        ;;[call_stmt_766_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_766_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_766_sample_start_ &-> (call_stmt_766_Sample)
        call_stmt_766_sample_completed_ <-& (call_stmt_766_Sample)
        call_stmt_766_sample_completed_ &-> ($null)
        call_stmt_766_update_start_ &-> (call_stmt_766_Update)
        call_stmt_766_update_completed_ <-& (call_stmt_766_Update)
        // Call output argument 0
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end: 		$call testConfigure () (call ) 
        // load-store dependencies..
        // memory-space  memory_space_4
        //  call_stmt_766 store
        // memory-space  memory_space_3
        //  call_stmt_766 store
        // memory-space  memory_space_2
        //  call_stmt_766 store
        // memory-space  memory_space_1
        //  call_stmt_766 store
        // pipe read/write dependencies for pipe zeropad_input_pipe
        // read-dependencies for pipe zeropad_input_pipe
        // write-dependencies for pipe zeropad_input_pipe
        // signal write dependencies for zeropad_input_pipe
      }
      call_stmt_766__entry__ |-> (call_stmt_766)
      call_stmt_766__exit__ <-| (call_stmt_766)
      ::[assign_stmt_771_to_assign_stmt_777] 
      {
        // start:  		conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 274
        // Source expression
        // ($cast ($uint<8>) call )
        $T[type_cast_770_sample_start_] 
        $T[type_cast_770_sample_completed_] 
        $T[type_cast_770_update_start_] 
        $T[type_cast_770_update_completed_] 
        // call
        // start: Forward dependencies from call to transition type_cast_770_sample_start_
        // done: Forward dependencies from call to transition type_cast_770_sample_start_
        ;;[type_cast_770_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_770_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_770_sample_start_ &-> (type_cast_770_Sample)
        type_cast_770_sample_completed_ <-& (type_cast_770_Sample)
        type_cast_770_sample_completed_ &-> ($null)
        type_cast_770_update_start_ &-> (type_cast_770_Update)
        type_cast_770_update_completed_ <-& (type_cast_770_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
        // start:  		Block0_starting := conv $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 275
        // Source expression
        // conv
        // Target expression
        // (as target) Block0_starting
        $T[WPIPE_Block0_starting_772_sample_start_] 
        $T[WPIPE_Block0_starting_772_sample_completed_] 
        $T[WPIPE_Block0_starting_772_update_start_] 
        $T[WPIPE_Block0_starting_772_update_completed_] 
        ;;[WPIPE_Block0_starting_772_Sample] 
        {
          // pipe write sample-start Block0_starting
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_starting_772_Update] 
        {
          // pipe write update (complete) Block0_starting
          $T [req] $T [ack] 
        }
        WPIPE_Block0_starting_772_sample_start_ &-> (WPIPE_Block0_starting_772_Sample)
        WPIPE_Block0_starting_772_sample_completed_ <-& (WPIPE_Block0_starting_772_Sample)
        WPIPE_Block0_starting_772_update_start_ <-& (WPIPE_Block0_starting_772_sample_completed_)
        WPIPE_Block0_starting_772_update_start_ &-> (WPIPE_Block0_starting_772_Update)
        WPIPE_Block0_starting_772_update_completed_ <-& (WPIPE_Block0_starting_772_Update)
        // start: Forward dependencies from conv to transition WPIPE_Block0_starting_772_sample_start_
        WPIPE_Block0_starting_772_sample_start_ <-& (type_cast_770_update_completed_)
        // done: Forward dependencies from conv to transition WPIPE_Block0_starting_772_sample_start_
        // end:  		Block0_starting := conv $buffering 1// bits of buffering = 8. 
        // start:  		call2 := Block0_complete $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 276
        // Source expression
        // Block0_complete
        $T[RPIPE_Block0_complete_776_sample_start_] 
        $T[RPIPE_Block0_complete_776_sample_completed_] 
        $T[RPIPE_Block0_complete_776_update_start_] 
        $T[RPIPE_Block0_complete_776_update_completed_] 
        ;;[RPIPE_Block0_complete_776_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_complete_776_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_complete_776_sample_start_ &-> (RPIPE_Block0_complete_776_Sample)
        RPIPE_Block0_complete_776_sample_completed_ <-& (RPIPE_Block0_complete_776_Sample)
        RPIPE_Block0_complete_776_update_start_ <-& (RPIPE_Block0_complete_776_sample_completed_)
        RPIPE_Block0_complete_776_update_start_ &-> (RPIPE_Block0_complete_776_Update)
        RPIPE_Block0_complete_776_update_completed_ <-& (RPIPE_Block0_complete_776_Update)
        // Target expression
        // (as target) call2
        // start: WAR dependencies for call2
        // done: WAR dependencies for call2
        // end:  		call2 := Block0_complete $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block0_starting
        // read-dependencies for pipe Block0_starting
        // write-dependencies for pipe Block0_starting
        // signal write dependencies for Block0_starting
        // pipe read/write dependencies for pipe Block0_complete
        // read-dependencies for pipe Block0_complete
        // write-dependencies for pipe Block0_complete
        // signal write dependencies for Block0_complete
      }
      assign_stmt_771_to_assign_stmt_777__entry__ |-> (assign_stmt_771_to_assign_stmt_777)
      assign_stmt_771_to_assign_stmt_777__exit__ <-| (assign_stmt_771_to_assign_stmt_777)
      ::[call_stmt_780] 
      {
        // start: 		$call sendOutput () () 
        //  file prog.linked.opt.aa, line 279
        $T[call_stmt_780_sample_start_] 
        $T[call_stmt_780_sample_completed_] 
        $T[call_stmt_780_update_start_] 
        $T[call_stmt_780_update_completed_] 
        ;;[call_stmt_780_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_780_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_780_sample_start_ &-> (call_stmt_780_Sample)
        call_stmt_780_sample_completed_ <-& (call_stmt_780_Sample)
        call_stmt_780_sample_completed_ &-> ($null)
        call_stmt_780_update_start_ &-> (call_stmt_780_Update)
        call_stmt_780_update_completed_ <-& (call_stmt_780_Update)
        // end: 		$call sendOutput () () 
        // load-store dependencies..
        // memory-space  memory_space_3
        //  call_stmt_780 load
        // memory-space  memory_space_0
        //  call_stmt_780 load
        // pipe read/write dependencies for pipe zeropad_output_pipe
        // read-dependencies for pipe zeropad_output_pipe
        // write-dependencies for pipe zeropad_output_pipe
        // signal write dependencies for zeropad_output_pipe
      }
      call_stmt_780__entry__ |-> (call_stmt_780)
      call_stmt_780__exit__ <-| (call_stmt_780)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 281
      //---------------------   merge statement  file prog.linked.opt.aa, line 281  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_782_PhiReqMerge] 
      merge_stmt_782_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_782_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_782_PhiReqMerge |-> (merge_stmt_782_PhiAck)
      merge_stmt_782__exit__  <-| (merge_stmt_782_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 281  --------------------------
      call_stmt_766__entry__ <-| (branch_block_stmt_764__entry__)
      assign_stmt_771_to_assign_stmt_777__entry__ <-| (call_stmt_766__exit__)
      call_stmt_780__entry__ <-| (assign_stmt_771_to_assign_stmt_777__exit__)
      return__ <-| (call_stmt_780__exit__)
      merge_stmt_782__exit__ |-> (branch_block_stmt_764__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 281
    // constant-object-declarations for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 270
    // constant-object-declarations for block %zeropad3D
    //  file prog.linked.opt.aa, line 265
    // constant-declarations for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 270
    // 		$call testConfigure () (call ) 
    //  file prog.linked.opt.aa, line 272
    // 		$call sendOutput () () 
    //  file prog.linked.opt.aa, line 279
    // constant-declarations for block %zeropad3D%body%
    //  file prog.linked.opt.aa, line 281
    // block %zeropad3D%body
    //  file prog.linked.opt.aa, line 270
    // 		$call testConfigure () (call ) 
    //  file prog.linked.opt.aa, line 272
    // call
    $W[call_766] : $int<16>
    // 		conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 274
    // conv
    $W[conv_771] : $int<8>
    // 		Block0_starting := conv $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 275
    // Block0_starting
    // 		call2 := Block0_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 276
    // call2
    $W[call2_777] : $int<8>
    // 		$call sendOutput () () 
    //  file prog.linked.opt.aa, line 279
    // datapath-instances for block %zeropad3D%body
    //  file prog.linked.opt.aa, line 270
    // 		$call testConfigure () (call ) 
    //  file prog.linked.opt.aa, line 272
    $call [call_stmt_766_call] $module testConfigure() (call_766)  
    $delay call_stmt_766_call 4
    $buffering  $out call_stmt_766_call call_766 1
    // 		conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 274
    // ($cast ($uint<8>) call )
    # := [type_cast_770_inst] (call_766) (conv_771)    
    $buffering  $out type_cast_770_inst conv_771 1
    $delay type_cast_770_inst 1
    // 		Block0_starting := conv $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 275
    // Block0_starting
    $ioport $out [WPIPE_Block0_starting_772_inst]  (conv_771) (Block0_starting) 
    // 		call2 := Block0_complete $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 276
    // Block0_complete
    $ioport $in [RPIPE_Block0_complete_776_inst] (Block0_complete) (call2_777) 
    $buffering $out RPIPE_Block0_complete_776_inst call2_777 1
    // 		$call sendOutput () () 
    //  file prog.linked.opt.aa, line 279
    $call [call_stmt_780_call] $module sendOutput() ()  
    $delay call_stmt_780_call 4
  }
  // end data-path
  // 		$call testConfigure () (call ) 
  //  file prog.linked.opt.aa, line 272
  call_stmt_766_call <=> (branch_block_stmt_764/call_stmt_766/call_stmt_766_Sample/crr branch_block_stmt_764/call_stmt_766/call_stmt_766_Update/ccr) (branch_block_stmt_764/call_stmt_766/call_stmt_766_Sample/cra branch_block_stmt_764/call_stmt_766/call_stmt_766_Update/cca)
  // 		conv := ($cast ($uint<8>) call ) $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 274
  // call
  // ($cast ($uint<8>) call )
  type_cast_770_inst <=> (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/type_cast_770_Sample/rr branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/type_cast_770_Update/cr) (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/type_cast_770_Sample/ra branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/type_cast_770_Update/ca)
  // 		Block0_starting := conv $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 275
  // conv
  // Block0_starting
  WPIPE_Block0_starting_772_inst <=> (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/WPIPE_Block0_starting_772_Sample/req branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/WPIPE_Block0_starting_772_Update/req) (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/WPIPE_Block0_starting_772_Sample/ack branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/WPIPE_Block0_starting_772_Update/ack)
  // 		call2 := Block0_complete $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 276
  // Block0_complete
  RPIPE_Block0_complete_776_inst <=> (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/RPIPE_Block0_complete_776_Sample/rr branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/RPIPE_Block0_complete_776_Update/cr) (branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/RPIPE_Block0_complete_776_Sample/ra branch_block_stmt_764/assign_stmt_771_to_assign_stmt_777/RPIPE_Block0_complete_776_Update/ca)
  // 		$call sendOutput () () 
  //  file prog.linked.opt.aa, line 279
  call_stmt_780_call <=> (branch_block_stmt_764/call_stmt_780/call_stmt_780_Sample/crr branch_block_stmt_764/call_stmt_780/call_stmt_780_Update/ccr) (branch_block_stmt_764/call_stmt_780/call_stmt_780_Sample/cra branch_block_stmt_764/call_stmt_780/call_stmt_780_Update/cca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 281
}
$module [zeropad3D_A] 
{
  // pipe-declarations for block %zeropad3D_A
  //  file prog.linked.opt.aa, line 285
  // pipe-declarations for block %zeropad3D_A%body
  //  file prog.linked.opt.aa, line 290
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 315
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 319
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 335
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 346
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 357
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 368
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 389
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 398
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 412
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 415
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 432
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 435
  // pipe-declarations for block %zeropad3D_A%body%
  //  file prog.linked.opt.aa, line 440
  // memory-space 0 is written into.
  // memory-space 4 is read from.
  // memory-space 3 is read from.
  // memory-space 2 is read from.
  // memory-space 1 is read from.
  // memory-space 0 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_786] // Branch Block  file prog.linked.opt.aa, line 290
    {
      $P [branch_block_stmt_786__entry__]
      branch_block_stmt_786__entry__ <-| ($entry)
      $P [branch_block_stmt_786__exit__]
      branch_block_stmt_786__exit__ |-> ($exit)
      $P [assign_stmt_789__entry__] 
      $P [assign_stmt_789__exit__] 
      $P [assign_stmt_793_to_assign_stmt_879__entry__] 
      $P [assign_stmt_793_to_assign_stmt_879__exit__] 
      $P [if_stmt_880__entry__] 
      $P [if_stmt_880__exit__] 
      $P [merge_stmt_886__entry__] 
      $P [merge_stmt_886__exit__] 
      $P [assign_stmt_892__entry__] 
      $P [assign_stmt_892__exit__] 
      $P [bbx_xnph_whilex_xbody]
      $P [merge_stmt_894__exit__] 
      $P [assign_stmt_930__entry__] 
      $P [assign_stmt_930__exit__] 
      $P [if_stmt_931__entry__] 
      $P [if_stmt_931__exit__] 
      $P [merge_stmt_937__entry__] 
      $P [merge_stmt_937__exit__] 
      $P [assign_stmt_942_to_assign_stmt_959__entry__] 
      $P [assign_stmt_942_to_assign_stmt_959__exit__] 
      $P [if_stmt_960__entry__] 
      $P [if_stmt_960__exit__] 
      $P [merge_stmt_966__entry__] 
      $P [merge_stmt_966__exit__] 
      $P [assign_stmt_974_to_assign_stmt_988__entry__] 
      $P [assign_stmt_974_to_assign_stmt_988__exit__] 
      $P [if_stmt_989__entry__] 
      $P [if_stmt_989__exit__] 
      $P [merge_stmt_995__entry__] 
      $P [merge_stmt_995__exit__] 
      $P [assign_stmt_1000_to_assign_stmt_1042__entry__] 
      $P [assign_stmt_1000_to_assign_stmt_1042__exit__] 
      $P [ifx_xthen_ifx_xend]
      $P [merge_stmt_1044__exit__] 
      $P [assign_stmt_1049_to_assign_stmt_1144__entry__] 
      $P [assign_stmt_1049_to_assign_stmt_1144__exit__] 
      $P [ifx_xelse_ifx_xend]
      $P [merge_stmt_1146__exit__] 
      $P [assign_stmt_1152_to_assign_stmt_1159__entry__] 
      $P [assign_stmt_1152_to_assign_stmt_1159__exit__] 
      $P [if_stmt_1160__entry__] 
      $P [if_stmt_1160__exit__] 
      $P [merge_stmt_1166__entry__] 
      $P [merge_stmt_1166__exit__] 
      $P [assign_stmt_1172_to_assign_stmt_1203__entry__] 
      $P [assign_stmt_1172_to_assign_stmt_1203__exit__] 
      $P [if_stmt_1204__entry__] 
      $P [if_stmt_1204__exit__] 
      $P [merge_stmt_1210__entry__] 
      $P [merge_stmt_1210__exit__] 
      $P [ifx_xthen111_ifx_xend116]
      $P [merge_stmt_1212__exit__] 
      $P [assign_stmt_1248_to_assign_stmt_1262__entry__] 
      $P [assign_stmt_1248_to_assign_stmt_1262__exit__] 
      $P [if_stmt_1263__entry__] 
      $P [if_stmt_1263__exit__] 
      $P [merge_stmt_1269__entry__] 
      $P [merge_stmt_1269__exit__] 
      $P [whilex_xendx_xloopexit_whilex_xend]
      $P [merge_stmt_1271__exit__] 
      $P [assign_stmt_1275__entry__] 
      $P [assign_stmt_1275__exit__] 
      $P [return__]
      $P [merge_stmt_1277__exit__] 
      ::[assign_stmt_789] 
      {
        // start:  		call := Block0_starting $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 292
        // Source expression
        // Block0_starting
        $T[RPIPE_Block0_starting_788_sample_start_] 
        $T[RPIPE_Block0_starting_788_sample_completed_] 
        $T[RPIPE_Block0_starting_788_update_start_] 
        $T[RPIPE_Block0_starting_788_update_completed_] 
        ;;[RPIPE_Block0_starting_788_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_Block0_starting_788_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_Block0_starting_788_sample_start_ &-> (RPIPE_Block0_starting_788_Sample)
        RPIPE_Block0_starting_788_sample_completed_ <-& (RPIPE_Block0_starting_788_Sample)
        RPIPE_Block0_starting_788_update_start_ <-& (RPIPE_Block0_starting_788_sample_completed_)
        RPIPE_Block0_starting_788_update_start_ &-> (RPIPE_Block0_starting_788_Update)
        RPIPE_Block0_starting_788_update_completed_ <-& (RPIPE_Block0_starting_788_Update)
        // Target expression
        // (as target) call
        // start: WAR dependencies for call
        // done: WAR dependencies for call
        // end:  		call := Block0_starting $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block0_starting
        // read-dependencies for pipe Block0_starting
        // write-dependencies for pipe Block0_starting
        // signal write dependencies for Block0_starting
      }
      assign_stmt_789__entry__ |-> (assign_stmt_789)
      assign_stmt_789__exit__ <-| (assign_stmt_789)
      ::[assign_stmt_793_to_assign_stmt_879] 
      {
        // start:  		tmp := pad $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 294
        // Source expression
        // pad
        $T[LOAD_pad_792_sample_start_] 
        $T[LOAD_pad_792_sample_completed_] 
        $T[LOAD_pad_792_update_start_] 
        $T[LOAD_pad_792_update_completed_] 
        $T[LOAD_pad_792_word_address_calculated] 
        $T[LOAD_pad_792_root_address_calculated] 
        LOAD_pad_792_word_address_calculated <-& (LOAD_pad_792_root_address_calculated)
        ;;[LOAD_pad_792_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_pad_792_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_pad_792_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_pad_792_sample_start_ <-& (LOAD_pad_792_word_address_calculated)
        LOAD_pad_792_sample_start_ &-> (LOAD_pad_792_Sample)
        LOAD_pad_792_sample_completed_ <-& (LOAD_pad_792_Sample)
        LOAD_pad_792_sample_completed_ &-> ($null)
        LOAD_pad_792_update_start_ &-> (LOAD_pad_792_Update)
        LOAD_pad_792_update_completed_ <-& (LOAD_pad_792_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := pad $buffering 1// bits of buffering = 8. 
        // start:  		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 295
        // Source expression
        // ($cast ($uint<32>) tmp )
        $T[type_cast_796_sample_start_] 
        $T[type_cast_796_sample_completed_] 
        $T[type_cast_796_update_start_] 
        $T[type_cast_796_update_completed_] 
        // tmp
        // start: Forward dependencies from tmp to transition type_cast_796_sample_start_
        type_cast_796_sample_start_ <-& (LOAD_pad_792_update_completed_)
        // done: Forward dependencies from tmp to transition type_cast_796_sample_start_
        ;;[type_cast_796_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_796_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_796_sample_start_ &-> (type_cast_796_Sample)
        type_cast_796_sample_completed_ <-& (type_cast_796_Sample)
        type_cast_796_sample_completed_ &-> ($null)
        type_cast_796_update_start_ &-> (type_cast_796_Update)
        type_cast_796_update_completed_ <-& (type_cast_796_Update)
        // Target expression
        // (as target) conv
        // start: WAR dependencies for conv
        // done: WAR dependencies for conv
        // end:  		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_2 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 296
        // constant! 
        // end:  		iNsTr_2 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 297
        // Source expression
        // ->(iNsTr_2)
        $T[ptr_deref_808_sample_start_] 
        $T[ptr_deref_808_sample_completed_] 
        $T[ptr_deref_808_update_start_] 
        $T[ptr_deref_808_update_completed_] 
        $T[ptr_deref_808_base_address_calculated] 
        // iNsTr_2
        $T[ptr_deref_808_word_address_calculated] 
        $T[ptr_deref_808_root_address_calculated] 
        $T[ptr_deref_808_base_address_resized] 
        ;;[ptr_deref_808_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_808_base_address_calculated &-> (ptr_deref_808_base_addr_resize)
        ptr_deref_808_base_address_resized <-& (ptr_deref_808_base_addr_resize)
        ;;[ptr_deref_808_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_808_base_address_resized &-> (ptr_deref_808_base_plus_offset)
        ptr_deref_808_root_address_calculated <-& (ptr_deref_808_base_plus_offset)
        $T[ptr_deref_808_word_addrgen_sample_start] 
        $T[ptr_deref_808_word_addrgen_sample_complete] 
        $T[ptr_deref_808_word_addrgen_update_start] 
        $T[ptr_deref_808_word_addrgen_update_complete] 
        ptr_deref_808_root_address_calculated &-> (ptr_deref_808_word_addrgen_sample_start)
        ptr_deref_808_word_address_calculated <-& (ptr_deref_808_word_addrgen_update_complete)
        ;;[ptr_deref_808_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_808_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_808_word_addrgen_sample_start &-> (ptr_deref_808_word_addrgen_0_Sample)
        ptr_deref_808_word_addrgen_update_start &-> (ptr_deref_808_word_addrgen_0_Update)
        ptr_deref_808_word_addrgen_sample_complete <-& (ptr_deref_808_word_addrgen_0_Sample)
        ptr_deref_808_word_addrgen_update_complete <-& (ptr_deref_808_word_addrgen_0_Update)
        ;;[ptr_deref_808_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_808_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_808_word_addrgen_sample_start &-> (ptr_deref_808_word_addrgen_1_Sample)
        ptr_deref_808_word_addrgen_update_start &-> (ptr_deref_808_word_addrgen_1_Update)
        ptr_deref_808_word_addrgen_sample_complete <-& (ptr_deref_808_word_addrgen_1_Sample)
        ptr_deref_808_word_addrgen_update_complete <-& (ptr_deref_808_word_addrgen_1_Update)
        ;;[ptr_deref_808_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_808_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_808_word_addrgen_sample_start &-> (ptr_deref_808_word_addrgen_2_Sample)
        ptr_deref_808_word_addrgen_update_start &-> (ptr_deref_808_word_addrgen_2_Update)
        ptr_deref_808_word_addrgen_sample_complete <-& (ptr_deref_808_word_addrgen_2_Sample)
        ptr_deref_808_word_addrgen_update_complete <-& (ptr_deref_808_word_addrgen_2_Update)
        ;;[ptr_deref_808_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_808_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_808_word_addrgen_sample_start &-> (ptr_deref_808_word_addrgen_3_Sample)
        ptr_deref_808_word_addrgen_update_start &-> (ptr_deref_808_word_addrgen_3_Update)
        ptr_deref_808_word_addrgen_sample_complete <-& (ptr_deref_808_word_addrgen_3_Sample)
        ptr_deref_808_word_addrgen_update_complete <-& (ptr_deref_808_word_addrgen_3_Update)
        ;;[ptr_deref_808_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_808_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_808_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_808_sample_start_ <-& (ptr_deref_808_word_address_calculated)
        ptr_deref_808_sample_start_ &-> (ptr_deref_808_Sample)
        ptr_deref_808_sample_completed_ <-& (ptr_deref_808_Sample)
        ptr_deref_808_sample_completed_ &-> ($null)
        ptr_deref_808_update_start_ &-> (ptr_deref_808_Update)
        ptr_deref_808_update_completed_ <-& (ptr_deref_808_Update)
        // start: Forward dependencies from iNsTr_2 to transition ptr_deref_808_base_address_calculated
        // done: Forward dependencies from iNsTr_2 to transition ptr_deref_808_base_address_calculated
        ptr_deref_808_sample_start_ <-& (ptr_deref_808_base_address_calculated)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 298
        // constant! 
        // end:  		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 299
        // Source expression
        // ->(iNsTr_3)
        $T[ptr_deref_820_sample_start_] 
        $T[ptr_deref_820_sample_completed_] 
        $T[ptr_deref_820_update_start_] 
        $T[ptr_deref_820_update_completed_] 
        $T[ptr_deref_820_base_address_calculated] 
        // iNsTr_3
        $T[ptr_deref_820_word_address_calculated] 
        $T[ptr_deref_820_root_address_calculated] 
        $T[ptr_deref_820_base_address_resized] 
        ;;[ptr_deref_820_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_820_base_address_calculated &-> (ptr_deref_820_base_addr_resize)
        ptr_deref_820_base_address_resized <-& (ptr_deref_820_base_addr_resize)
        ;;[ptr_deref_820_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_820_base_address_resized &-> (ptr_deref_820_base_plus_offset)
        ptr_deref_820_root_address_calculated <-& (ptr_deref_820_base_plus_offset)
        $T[ptr_deref_820_word_addrgen_sample_start] 
        $T[ptr_deref_820_word_addrgen_sample_complete] 
        $T[ptr_deref_820_word_addrgen_update_start] 
        $T[ptr_deref_820_word_addrgen_update_complete] 
        ptr_deref_820_root_address_calculated &-> (ptr_deref_820_word_addrgen_sample_start)
        ptr_deref_820_word_address_calculated <-& (ptr_deref_820_word_addrgen_update_complete)
        ;;[ptr_deref_820_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_820_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_820_word_addrgen_sample_start &-> (ptr_deref_820_word_addrgen_0_Sample)
        ptr_deref_820_word_addrgen_update_start &-> (ptr_deref_820_word_addrgen_0_Update)
        ptr_deref_820_word_addrgen_sample_complete <-& (ptr_deref_820_word_addrgen_0_Sample)
        ptr_deref_820_word_addrgen_update_complete <-& (ptr_deref_820_word_addrgen_0_Update)
        ;;[ptr_deref_820_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_820_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_820_word_addrgen_sample_start &-> (ptr_deref_820_word_addrgen_1_Sample)
        ptr_deref_820_word_addrgen_update_start &-> (ptr_deref_820_word_addrgen_1_Update)
        ptr_deref_820_word_addrgen_sample_complete <-& (ptr_deref_820_word_addrgen_1_Sample)
        ptr_deref_820_word_addrgen_update_complete <-& (ptr_deref_820_word_addrgen_1_Update)
        ;;[ptr_deref_820_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_820_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_820_word_addrgen_sample_start &-> (ptr_deref_820_word_addrgen_2_Sample)
        ptr_deref_820_word_addrgen_update_start &-> (ptr_deref_820_word_addrgen_2_Update)
        ptr_deref_820_word_addrgen_sample_complete <-& (ptr_deref_820_word_addrgen_2_Sample)
        ptr_deref_820_word_addrgen_update_complete <-& (ptr_deref_820_word_addrgen_2_Update)
        ;;[ptr_deref_820_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_820_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_820_word_addrgen_sample_start &-> (ptr_deref_820_word_addrgen_3_Sample)
        ptr_deref_820_word_addrgen_update_start &-> (ptr_deref_820_word_addrgen_3_Update)
        ptr_deref_820_word_addrgen_sample_complete <-& (ptr_deref_820_word_addrgen_3_Sample)
        ptr_deref_820_word_addrgen_update_complete <-& (ptr_deref_820_word_addrgen_3_Update)
        ;;[ptr_deref_820_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_820_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_820_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_820_sample_start_ <-& (ptr_deref_820_word_address_calculated)
        ptr_deref_820_sample_start_ &-> (ptr_deref_820_Sample)
        ptr_deref_820_sample_completed_ <-& (ptr_deref_820_Sample)
        ptr_deref_820_sample_completed_ &-> ($null)
        ptr_deref_820_update_start_ &-> (ptr_deref_820_Update)
        ptr_deref_820_update_completed_ <-& (ptr_deref_820_Update)
        // start: Forward dependencies from iNsTr_3 to transition ptr_deref_820_base_address_calculated
        // done: Forward dependencies from iNsTr_3 to transition ptr_deref_820_base_address_calculated
        ptr_deref_820_sample_start_ <-& (ptr_deref_820_base_address_calculated)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_4 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 300
        // constant! 
        // end:  		iNsTr_4 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 301
        // Source expression
        // ->(iNsTr_4)
        $T[ptr_deref_832_sample_start_] 
        $T[ptr_deref_832_sample_completed_] 
        $T[ptr_deref_832_update_start_] 
        $T[ptr_deref_832_update_completed_] 
        $T[ptr_deref_832_base_address_calculated] 
        // iNsTr_4
        $T[ptr_deref_832_word_address_calculated] 
        $T[ptr_deref_832_root_address_calculated] 
        $T[ptr_deref_832_base_address_resized] 
        ;;[ptr_deref_832_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_832_base_address_calculated &-> (ptr_deref_832_base_addr_resize)
        ptr_deref_832_base_address_resized <-& (ptr_deref_832_base_addr_resize)
        ;;[ptr_deref_832_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_832_base_address_resized &-> (ptr_deref_832_base_plus_offset)
        ptr_deref_832_root_address_calculated <-& (ptr_deref_832_base_plus_offset)
        ;;[ptr_deref_832_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_832_root_address_calculated &-> (ptr_deref_832_word_addrgen)
        ptr_deref_832_word_address_calculated <-& (ptr_deref_832_word_addrgen)
        ;;[ptr_deref_832_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_832_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_832_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_832_sample_start_ <-& (ptr_deref_832_word_address_calculated)
        ptr_deref_832_sample_start_ &-> (ptr_deref_832_Sample)
        ptr_deref_832_sample_completed_ <-& (ptr_deref_832_Sample)
        ptr_deref_832_sample_completed_ &-> ($null)
        ptr_deref_832_update_start_ &-> (ptr_deref_832_Update)
        ptr_deref_832_update_completed_ <-& (ptr_deref_832_Update)
        // start: Forward dependencies from iNsTr_4 to transition ptr_deref_832_base_address_calculated
        // done: Forward dependencies from iNsTr_4 to transition ptr_deref_832_base_address_calculated
        ptr_deref_832_sample_start_ <-& (ptr_deref_832_base_address_calculated)
        // Target expression
        // (as target) tmp8
        // start: WAR dependencies for tmp8
        // done: WAR dependencies for tmp8
        // end:  		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // start:  		iNsTr_5 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 302
        // constant! 
        // end:  		iNsTr_5 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 303
        // Source expression
        // ->(iNsTr_5)
        $T[ptr_deref_844_sample_start_] 
        $T[ptr_deref_844_sample_completed_] 
        $T[ptr_deref_844_update_start_] 
        $T[ptr_deref_844_update_completed_] 
        $T[ptr_deref_844_base_address_calculated] 
        // iNsTr_5
        $T[ptr_deref_844_word_address_calculated] 
        $T[ptr_deref_844_root_address_calculated] 
        $T[ptr_deref_844_base_address_resized] 
        ;;[ptr_deref_844_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_844_base_address_calculated &-> (ptr_deref_844_base_addr_resize)
        ptr_deref_844_base_address_resized <-& (ptr_deref_844_base_addr_resize)
        ;;[ptr_deref_844_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_844_base_address_resized &-> (ptr_deref_844_base_plus_offset)
        ptr_deref_844_root_address_calculated <-& (ptr_deref_844_base_plus_offset)
        ;;[ptr_deref_844_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_844_root_address_calculated &-> (ptr_deref_844_word_addrgen)
        ptr_deref_844_word_address_calculated <-& (ptr_deref_844_word_addrgen)
        ;;[ptr_deref_844_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_844_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_844_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_844_sample_start_ <-& (ptr_deref_844_word_address_calculated)
        ptr_deref_844_sample_start_ &-> (ptr_deref_844_Sample)
        ptr_deref_844_sample_completed_ <-& (ptr_deref_844_Sample)
        ptr_deref_844_sample_completed_ &-> ($null)
        ptr_deref_844_update_start_ &-> (ptr_deref_844_Update)
        ptr_deref_844_update_completed_ <-& (ptr_deref_844_Update)
        // start: Forward dependencies from iNsTr_5 to transition ptr_deref_844_base_address_calculated
        // done: Forward dependencies from iNsTr_5 to transition ptr_deref_844_base_address_calculated
        ptr_deref_844_sample_start_ <-& (ptr_deref_844_base_address_calculated)
        // Target expression
        // (as target) tmp10
        // start: WAR dependencies for tmp10
        // done: WAR dependencies for tmp10
        // end:  		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul19
        // done: WAR dependencies for mul19
        // start:  		$volatile mul19 := (tmp10 * tmp8) $buffering 1
        //  file prog.linked.opt.aa, line 304
        // volatile! 
        // Source expression
        // (tmp10 * tmp8)
        // tmp10
        // tmp8
        // Target expression
        // (as target) mul19
        // start: WAR dependencies for mul19
        // done: WAR dependencies for mul19
        // end:  		$volatile mul19 := (tmp10 * tmp8) $buffering 1
        // start:  		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 305
        // constant! 
        // end:  		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp22120 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 306
        // Source expression
        // ->(iNsTr_6)
        $T[ptr_deref_861_sample_start_] 
        $T[ptr_deref_861_sample_completed_] 
        $T[ptr_deref_861_update_start_] 
        $T[ptr_deref_861_update_completed_] 
        $T[ptr_deref_861_base_address_calculated] 
        // iNsTr_6
        $T[ptr_deref_861_word_address_calculated] 
        $T[ptr_deref_861_root_address_calculated] 
        $T[ptr_deref_861_base_address_resized] 
        ;;[ptr_deref_861_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_861_base_address_calculated &-> (ptr_deref_861_base_addr_resize)
        ptr_deref_861_base_address_resized <-& (ptr_deref_861_base_addr_resize)
        ;;[ptr_deref_861_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_861_base_address_resized &-> (ptr_deref_861_base_plus_offset)
        ptr_deref_861_root_address_calculated <-& (ptr_deref_861_base_plus_offset)
        $T[ptr_deref_861_word_addrgen_sample_start] 
        $T[ptr_deref_861_word_addrgen_sample_complete] 
        $T[ptr_deref_861_word_addrgen_update_start] 
        $T[ptr_deref_861_word_addrgen_update_complete] 
        ptr_deref_861_root_address_calculated &-> (ptr_deref_861_word_addrgen_sample_start)
        ptr_deref_861_word_address_calculated <-& (ptr_deref_861_word_addrgen_update_complete)
        ;;[ptr_deref_861_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_861_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_861_word_addrgen_sample_start &-> (ptr_deref_861_word_addrgen_0_Sample)
        ptr_deref_861_word_addrgen_update_start &-> (ptr_deref_861_word_addrgen_0_Update)
        ptr_deref_861_word_addrgen_sample_complete <-& (ptr_deref_861_word_addrgen_0_Sample)
        ptr_deref_861_word_addrgen_update_complete <-& (ptr_deref_861_word_addrgen_0_Update)
        ;;[ptr_deref_861_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_861_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_861_word_addrgen_sample_start &-> (ptr_deref_861_word_addrgen_1_Sample)
        ptr_deref_861_word_addrgen_update_start &-> (ptr_deref_861_word_addrgen_1_Update)
        ptr_deref_861_word_addrgen_sample_complete <-& (ptr_deref_861_word_addrgen_1_Sample)
        ptr_deref_861_word_addrgen_update_complete <-& (ptr_deref_861_word_addrgen_1_Update)
        ;;[ptr_deref_861_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_861_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_861_word_addrgen_sample_start &-> (ptr_deref_861_word_addrgen_2_Sample)
        ptr_deref_861_word_addrgen_update_start &-> (ptr_deref_861_word_addrgen_2_Update)
        ptr_deref_861_word_addrgen_sample_complete <-& (ptr_deref_861_word_addrgen_2_Sample)
        ptr_deref_861_word_addrgen_update_complete <-& (ptr_deref_861_word_addrgen_2_Update)
        ;;[ptr_deref_861_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_861_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_861_word_addrgen_sample_start &-> (ptr_deref_861_word_addrgen_3_Sample)
        ptr_deref_861_word_addrgen_update_start &-> (ptr_deref_861_word_addrgen_3_Update)
        ptr_deref_861_word_addrgen_sample_complete <-& (ptr_deref_861_word_addrgen_3_Sample)
        ptr_deref_861_word_addrgen_update_complete <-& (ptr_deref_861_word_addrgen_3_Update)
        ;;[ptr_deref_861_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_861_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_861_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_861_sample_start_ <-& (ptr_deref_861_word_address_calculated)
        ptr_deref_861_sample_start_ &-> (ptr_deref_861_Sample)
        ptr_deref_861_sample_completed_ <-& (ptr_deref_861_Sample)
        ptr_deref_861_sample_completed_ &-> ($null)
        ptr_deref_861_update_start_ &-> (ptr_deref_861_Update)
        ptr_deref_861_update_completed_ <-& (ptr_deref_861_Update)
        // start: Forward dependencies from iNsTr_6 to transition ptr_deref_861_base_address_calculated
        // done: Forward dependencies from iNsTr_6 to transition ptr_deref_861_base_address_calculated
        ptr_deref_861_sample_start_ <-& (ptr_deref_861_base_address_calculated)
        // Target expression
        // (as target) tmp22120
        // start: WAR dependencies for tmp22120
        // done: WAR dependencies for tmp22120
        // end:  		tmp22120 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for mul24121
        // done: WAR dependencies for mul24121
        // start:  		$volatile mul24121 := (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 307
        // volatile! 
        // Source expression
        // (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // conv
        // Target expression
        // (as target) mul24121
        // start: WAR dependencies for mul24121
        // done: WAR dependencies for mul24121
        // end:  		$volatile mul24121 := (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start: WAR dependencies for add122
        // done: WAR dependencies for add122
        // start:  		$volatile add122 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121) $buffering 1
        //  file prog.linked.opt.aa, line 308
        // volatile! 
        // Source expression
        // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121)
        // mul24121
        // Target expression
        // (as target) add122
        // start: WAR dependencies for add122
        // done: WAR dependencies for add122
        // end:  		$volatile add122 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121) $buffering 1
        // start: WAR dependencies for cmp123
        // done: WAR dependencies for cmp123
        // start:  		$volatile cmp123 := (tmp22120 == add122) $buffering 1
        //  file prog.linked.opt.aa, line 309
        // volatile! 
        // Source expression
        // (tmp22120 == add122)
        // tmp22120
        // add122
        // Target expression
        // (as target) cmp123
        // start: WAR dependencies for cmp123
        // done: WAR dependencies for cmp123
        // end:  		$volatile cmp123 := (tmp22120 == add122) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_4
        //  LOAD_pad_792 load
        // memory-space  memory_space_3
        //  ptr_deref_832 load
        //  ptr_deref_844 load
        // memory-space  memory_space_2
        //  ptr_deref_808 load
        //  ptr_deref_820 load
        //  ptr_deref_861 load
      }
      assign_stmt_793_to_assign_stmt_879__entry__ |-> (assign_stmt_793_to_assign_stmt_879)
      assign_stmt_793_to_assign_stmt_879__exit__ <-| (assign_stmt_793_to_assign_stmt_879)
      // if-statement  
      //  file prog.linked.opt.aa, line 310
      ;;[if_stmt_880_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_880__entry__ |-> (if_stmt_880_dead_link)
      if_stmt_880__exit__ <-| (if_stmt_880_dead_link)
      ;;[if_stmt_880_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_880__entry__ |-> (if_stmt_880_eval_test)
      $P [R_cmp123_881_place]
      R_cmp123_881_place <-| (if_stmt_880_eval_test)
      ;;[if_stmt_880_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_880_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp123_881_place |-> (if_stmt_880_if_link if_stmt_880_else_link)
      $P [entry_whilex_xend]
      entry_whilex_xend <-| (if_stmt_880_if_link)
      $P [entry_bbx_xnph]
      entry_bbx_xnph <-| (if_stmt_880_else_link)
      ::[assign_stmt_892] 
      {
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for sub
        // start:  		$volatile sub := (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        //  file prog.linked.opt.aa, line 317
        // volatile! 
        // Source expression
        // (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // conv
        // Target expression
        // (as target) sub
        // start: WAR dependencies for sub
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for sub
        // end:  		$volatile sub := (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_892__entry__ |-> (assign_stmt_892)
      assign_stmt_892__exit__ <-| (assign_stmt_892)
      ::[assign_stmt_930] 
      {
        // start: WAR dependencies for cmp28
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp28
        // start:  		$volatile cmp28 := (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub )) $buffering 1
        //  file prog.linked.opt.aa, line 329
        // volatile! 
        // Source expression
        // (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub ))
        // ($bitcast ($int<32>) ix_x1126 )
        // ix_x1126
        // ($bitcast ($int<32>) sub )
        // sub
        // Target expression
        // (as target) cmp28
        // start: WAR dependencies for cmp28
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp28
        // end:  		$volatile cmp28 := (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_930__entry__ |-> (assign_stmt_930)
      assign_stmt_930__exit__ <-| (assign_stmt_930)
      // if-statement  
      //  file prog.linked.opt.aa, line 330
      ;;[if_stmt_931_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_931__entry__ |-> (if_stmt_931_dead_link)
      if_stmt_931__exit__ <-| (if_stmt_931_dead_link)
      ;;[if_stmt_931_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_931__entry__ |-> (if_stmt_931_eval_test)
      $P [R_cmp28_932_place]
      R_cmp28_932_place <-| (if_stmt_931_eval_test)
      ;;[if_stmt_931_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_931_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp28_932_place |-> (if_stmt_931_if_link if_stmt_931_else_link)
      $P [whilex_xbody_lorx_xlhsx_xfalse]
      whilex_xbody_lorx_xlhsx_xfalse <-| (if_stmt_931_if_link)
      $P [whilex_xbody_ifx_xthen]
      whilex_xbody_ifx_xthen <-| (if_stmt_931_else_link)
      ::[assign_stmt_942_to_assign_stmt_959] 
      {
        // start: WAR dependencies for sub34
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub34
        // start:  		$volatile sub34 := (sub + tmp31) $buffering 1
        //  file prog.linked.opt.aa, line 337
        // volatile! 
        // Source expression
        // (sub + tmp31)
        // sub
        // tmp31
        // Target expression
        // (as target) sub34
        // start: WAR dependencies for sub34
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub34
        // end:  		$volatile sub34 := (sub + tmp31) $buffering 1
        // start: WAR dependencies for cmp35x_xnot
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp35x_xnot
        // start:  		$volatile cmp35x_xnot := (ix_x1126 <= sub34) $buffering 1
        //  file prog.linked.opt.aa, line 338
        // volatile! 
        // Source expression
        // (ix_x1126 <= sub34)
        // ix_x1126
        // sub34
        // Target expression
        // (as target) cmp35x_xnot
        // start: WAR dependencies for cmp35x_xnot
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp35x_xnot
        // end:  		$volatile cmp35x_xnot := (ix_x1126 <= sub34) $buffering 1
        // start: WAR dependencies for cmp41
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp41
        // start:  		$volatile cmp41 := (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub )) $buffering 1
        //  file prog.linked.opt.aa, line 339
        // volatile! 
        // Source expression
        // (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub ))
        // ($bitcast ($int<32>) jx_x1124 )
        // jx_x1124
        // ($bitcast ($int<32>) sub )
        // sub
        // Target expression
        // (as target) cmp41
        // start: WAR dependencies for cmp41
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp41
        // end:  		$volatile cmp41 := (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub )) $buffering 1
        // start: WAR dependencies for orx_xcond
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for orx_xcond
        // start:  		$volatile orx_xcond := (cmp35x_xnot & cmp41) $buffering 1
        //  file prog.linked.opt.aa, line 340
        // volatile! 
        // Source expression
        // (cmp35x_xnot & cmp41)
        // cmp35x_xnot
        // cmp41
        // Target expression
        // (as target) orx_xcond
        // start: WAR dependencies for orx_xcond
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for orx_xcond
        // end:  		$volatile orx_xcond := (cmp35x_xnot & cmp41) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_942_to_assign_stmt_959__entry__ |-> (assign_stmt_942_to_assign_stmt_959)
      assign_stmt_942_to_assign_stmt_959__exit__ <-| (assign_stmt_942_to_assign_stmt_959)
      // if-statement  
      //  file prog.linked.opt.aa, line 341
      ;;[if_stmt_960_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_960__entry__ |-> (if_stmt_960_dead_link)
      if_stmt_960__exit__ <-| (if_stmt_960_dead_link)
      ;;[if_stmt_960_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_960__entry__ |-> (if_stmt_960_eval_test)
      $P [R_orx_xcond_961_place]
      R_orx_xcond_961_place <-| (if_stmt_960_eval_test)
      ;;[if_stmt_960_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_960_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_961_place |-> (if_stmt_960_if_link if_stmt_960_else_link)
      $P [lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43]
      lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43 <-| (if_stmt_960_if_link)
      $P [lorx_xlhsx_xfalse_ifx_xthen]
      lorx_xlhsx_xfalse_ifx_xthen <-| (if_stmt_960_else_link)
      ::[assign_stmt_974_to_assign_stmt_988] 
      {
        // start:  		iNsTr_17 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 348
        // constant! 
        // end:  		iNsTr_17 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp45 := ->(iNsTr_17) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 349
        // Source expression
        // ->(iNsTr_17)
        $T[ptr_deref_977_sample_start_] 
        $T[ptr_deref_977_sample_completed_] 
        $T[ptr_deref_977_update_start_] 
        $T[ptr_deref_977_update_completed_] 
        $T[ptr_deref_977_base_address_calculated] 
        // iNsTr_17
        $T[ptr_deref_977_word_address_calculated] 
        $T[ptr_deref_977_root_address_calculated] 
        $T[ptr_deref_977_base_address_resized] 
        ;;[ptr_deref_977_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_977_base_address_calculated &-> (ptr_deref_977_base_addr_resize)
        ptr_deref_977_base_address_resized <-& (ptr_deref_977_base_addr_resize)
        ;;[ptr_deref_977_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_977_base_address_resized &-> (ptr_deref_977_base_plus_offset)
        ptr_deref_977_root_address_calculated <-& (ptr_deref_977_base_plus_offset)
        $T[ptr_deref_977_word_addrgen_sample_start] 
        $T[ptr_deref_977_word_addrgen_sample_complete] 
        $T[ptr_deref_977_word_addrgen_update_start] 
        $T[ptr_deref_977_word_addrgen_update_complete] 
        ptr_deref_977_root_address_calculated &-> (ptr_deref_977_word_addrgen_sample_start)
        ptr_deref_977_word_address_calculated <-& (ptr_deref_977_word_addrgen_update_complete)
        ;;[ptr_deref_977_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_977_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_977_word_addrgen_sample_start &-> (ptr_deref_977_word_addrgen_0_Sample)
        ptr_deref_977_word_addrgen_update_start &-> (ptr_deref_977_word_addrgen_0_Update)
        ptr_deref_977_word_addrgen_sample_complete <-& (ptr_deref_977_word_addrgen_0_Sample)
        ptr_deref_977_word_addrgen_update_complete <-& (ptr_deref_977_word_addrgen_0_Update)
        ;;[ptr_deref_977_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_977_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_977_word_addrgen_sample_start &-> (ptr_deref_977_word_addrgen_1_Sample)
        ptr_deref_977_word_addrgen_update_start &-> (ptr_deref_977_word_addrgen_1_Update)
        ptr_deref_977_word_addrgen_sample_complete <-& (ptr_deref_977_word_addrgen_1_Sample)
        ptr_deref_977_word_addrgen_update_complete <-& (ptr_deref_977_word_addrgen_1_Update)
        ;;[ptr_deref_977_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_977_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_977_word_addrgen_sample_start &-> (ptr_deref_977_word_addrgen_2_Sample)
        ptr_deref_977_word_addrgen_update_start &-> (ptr_deref_977_word_addrgen_2_Update)
        ptr_deref_977_word_addrgen_sample_complete <-& (ptr_deref_977_word_addrgen_2_Sample)
        ptr_deref_977_word_addrgen_update_complete <-& (ptr_deref_977_word_addrgen_2_Update)
        ;;[ptr_deref_977_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_977_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_977_word_addrgen_sample_start &-> (ptr_deref_977_word_addrgen_3_Sample)
        ptr_deref_977_word_addrgen_update_start &-> (ptr_deref_977_word_addrgen_3_Update)
        ptr_deref_977_word_addrgen_sample_complete <-& (ptr_deref_977_word_addrgen_3_Sample)
        ptr_deref_977_word_addrgen_update_complete <-& (ptr_deref_977_word_addrgen_3_Update)
        ;;[ptr_deref_977_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_977_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_977_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_977_sample_start_ <-& (ptr_deref_977_word_address_calculated)
        ptr_deref_977_sample_start_ &-> (ptr_deref_977_Sample)
        ptr_deref_977_sample_completed_ <-& (ptr_deref_977_Sample)
        ptr_deref_977_sample_completed_ &-> ($null)
        ptr_deref_977_update_start_ &-> (ptr_deref_977_Update)
        ptr_deref_977_update_completed_ <-& (ptr_deref_977_Update)
        // start: Forward dependencies from iNsTr_17 to transition ptr_deref_977_base_address_calculated
        // done: Forward dependencies from iNsTr_17 to transition ptr_deref_977_base_address_calculated
        ptr_deref_977_sample_start_ <-& (ptr_deref_977_base_address_calculated)
        // Target expression
        // (as target) tmp45
        // start: WAR dependencies for tmp45
        // done: WAR dependencies for tmp45
        // end:  		tmp45 := ->(iNsTr_17) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for sub48
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for sub48
        // start:  		$volatile sub48 := (sub + tmp45) $buffering 1
        //  file prog.linked.opt.aa, line 350
        // volatile! 
        // Source expression
        // (sub + tmp45)
        // sub
        // tmp45
        // Target expression
        // (as target) sub48
        // start: WAR dependencies for sub48
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for sub48
        // end:  		$volatile sub48 := (sub + tmp45) $buffering 1
        // start: WAR dependencies for cmp49
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp49
        // start:  		$volatile cmp49 := (jx_x1124 > sub48) $buffering 1
        //  file prog.linked.opt.aa, line 351
        // volatile! 
        // Source expression
        // (jx_x1124 > sub48)
        // jx_x1124
        // sub48
        // Target expression
        // (as target) cmp49
        // start: WAR dependencies for cmp49
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp49
        // end:  		$volatile cmp49 := (jx_x1124 > sub48) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_977 load
      }
      assign_stmt_974_to_assign_stmt_988__entry__ |-> (assign_stmt_974_to_assign_stmt_988)
      assign_stmt_974_to_assign_stmt_988__exit__ <-| (assign_stmt_974_to_assign_stmt_988)
      // if-statement  
      //  file prog.linked.opt.aa, line 352
      ;;[if_stmt_989_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_989__entry__ |-> (if_stmt_989_dead_link)
      if_stmt_989__exit__ <-| (if_stmt_989_dead_link)
      ;;[if_stmt_989_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_989__entry__ |-> (if_stmt_989_eval_test)
      $P [R_cmp49_990_place]
      R_cmp49_990_place <-| (if_stmt_989_eval_test)
      ;;[if_stmt_989_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_989_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp49_990_place |-> (if_stmt_989_if_link if_stmt_989_else_link)
      $P [lorx_xlhsx_xfalse43_ifx_xthen]
      lorx_xlhsx_xfalse43_ifx_xthen <-| (if_stmt_989_if_link)
      $P [lorx_xlhsx_xfalse43_ifx_xelse]
      lorx_xlhsx_xfalse43_ifx_xelse <-| (if_stmt_989_else_link)
      ::[assign_stmt_1000_to_assign_stmt_1042] 
      {
        // start: WAR dependencies for mul55
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul55
        // start:  		$volatile mul55 := (jx_x1124 * tmp8) $buffering 1
        //  file prog.linked.opt.aa, line 359
        // volatile! 
        // Source expression
        // (jx_x1124 * tmp8)
        // jx_x1124
        // tmp8
        // Target expression
        // (as target) mul55
        // start: WAR dependencies for mul55
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul55
        // end:  		$volatile mul55 := (jx_x1124 * tmp8) $buffering 1
        // start: WAR dependencies for mul59
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul59
        // start:  		$volatile mul59 := (ix_x1126 * mul19) $buffering 1
        //  file prog.linked.opt.aa, line 360
        // volatile! 
        // Source expression
        // (ix_x1126 * mul19)
        // ix_x1126
        // mul19
        // Target expression
        // (as target) mul59
        // start: WAR dependencies for mul59
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul59
        // end:  		$volatile mul59 := (ix_x1126 * mul19) $buffering 1
        // start: WAR dependencies for add56
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add56
        // start:  		$volatile add56 := (kx_x0125 + mul55) $buffering 1
        //  file prog.linked.opt.aa, line 361
        // volatile! 
        // Source expression
        // (kx_x0125 + mul55)
        // kx_x0125
        // mul55
        // Target expression
        // (as target) add56
        // start: WAR dependencies for add56
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add56
        // end:  		$volatile add56 := (kx_x0125 + mul55) $buffering 1
        // start: WAR dependencies for add60
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add60
        // start:  		$volatile add60 := (add56 + mul59) $buffering 1
        //  file prog.linked.opt.aa, line 362
        // volatile! 
        // Source expression
        // (add56 + mul59)
        // add56
        // mul59
        // Target expression
        // (as target) add60
        // start: WAR dependencies for add60
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add60
        // end:  		$volatile add60 := (add56 + mul59) $buffering 1
        // start: WAR dependencies for shr
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr
        // start:  		$volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 363
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
        // (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        // ($bitcast ($int<32>) add60 )
        // add60
        // Target expression
        // (as target) shr
        // start: WAR dependencies for shr
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr
        // end:  		$volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        // start:  		idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 364
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
        $T[type_cast_1029_sample_start_] 
        $T[type_cast_1029_sample_completed_] 
        $T[type_cast_1029_update_start_] 
        $T[type_cast_1029_update_completed_] 
        // ($cast ($int<64>) shr )
        // shr
        // start: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_1029_sample_start_
        // done: Forward dependencies from ($cast ($int<64>) shr ) to transition type_cast_1029_sample_start_
        ;;[type_cast_1029_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1029_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1029_sample_start_ &-> (type_cast_1029_Sample)
        type_cast_1029_sample_completed_ <-& (type_cast_1029_Sample)
        type_cast_1029_sample_completed_ &-> ($null)
        type_cast_1029_update_start_ &-> (type_cast_1029_Update)
        type_cast_1029_update_completed_ <-& (type_cast_1029_Update)
        // Target expression
        // (as target) idxprom
        // start: WAR dependencies for idxprom
        // done: WAR dependencies for idxprom
        // end:  		idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
        // start:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 365
        // Source expression
        // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
        $T[addr_of_1036_sample_start_] 
        $T[addr_of_1036_sample_completed_] 
        $T[addr_of_1036_update_start_] 
        $T[addr_of_1036_update_completed_] 
        $T[array_obj_ref_1035_root_address_calculated] 
        $T[array_obj_ref_1035_offset_calculated] 
        $T[array_obj_ref_1035_index_resized_1] 
        $T[array_obj_ref_1035_index_scaled_1] 
        $T[array_obj_ref_1035_index_computed_1] 
        // idxprom
        // start: Forward dependencies from idxprom to transition array_obj_ref_1035_index_computed_1
        array_obj_ref_1035_index_computed_1 <-& (type_cast_1029_update_completed_)
        // done: Forward dependencies from idxprom to transition array_obj_ref_1035_index_computed_1
        ;;[array_obj_ref_1035_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1035_index_computed_1 &-> (array_obj_ref_1035_index_resize_1)
        array_obj_ref_1035_index_resized_1 <-& (array_obj_ref_1035_index_resize_1)
        ;;[array_obj_ref_1035_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1035_index_resized_1 &-> (array_obj_ref_1035_index_scale_1)
        array_obj_ref_1035_index_scaled_1 <-& (array_obj_ref_1035_index_scale_1)
        $T[array_obj_ref_1035_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_1035_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_1035_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_1035_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_1035_index_scaled_1 &-> (array_obj_ref_1035_final_index_sum_regn_Sample)
        array_obj_ref_1035_final_index_sum_regn_sample_complete <-& (array_obj_ref_1035_final_index_sum_regn_Sample)
        array_obj_ref_1035_final_index_sum_regn_update_start &-> (array_obj_ref_1035_final_index_sum_regn_Update)
        array_obj_ref_1035_offset_calculated <-& (array_obj_ref_1035_final_index_sum_regn_Update)
        ;;[array_obj_ref_1035_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1035_offset_calculated &-> (array_obj_ref_1035_base_plus_offset)
        array_obj_ref_1035_root_address_calculated <-& (array_obj_ref_1035_base_plus_offset)
        ;;[addr_of_1036_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1036_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1036_sample_start_ <-& (array_obj_ref_1035_root_address_calculated)
        addr_of_1036_sample_start_ &-> (addr_of_1036_request)
        addr_of_1036_sample_completed_ <-& (addr_of_1036_request)
        addr_of_1036_sample_completed_ &-> ($null)
        addr_of_1036_update_start_ &-> (addr_of_1036_complete)
        addr_of_1036_update_completed_ <-& (addr_of_1036_complete)
        // Target expression
        // (as target) arrayidx
        // start: WAR dependencies for arrayidx
        // done: WAR dependencies for arrayidx
        // end:  		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
        // start:  		->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 366
        // Target expression
        // ->(arrayidx)
        $T[ptr_deref_1039_sample_start_] 
        $T[ptr_deref_1039_sample_completed_] 
        $T[ptr_deref_1039_update_start_] 
        $T[ptr_deref_1039_update_completed_] 
        $T[ptr_deref_1039_base_address_calculated] 
        // arrayidx
        $T[ptr_deref_1039_word_address_calculated] 
        $T[ptr_deref_1039_root_address_calculated] 
        $T[ptr_deref_1039_base_address_resized] 
        ;;[ptr_deref_1039_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1039_base_address_calculated &-> (ptr_deref_1039_base_addr_resize)
        ptr_deref_1039_base_address_resized <-& (ptr_deref_1039_base_addr_resize)
        ;;[ptr_deref_1039_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1039_base_address_resized &-> (ptr_deref_1039_base_plus_offset)
        ptr_deref_1039_root_address_calculated <-& (ptr_deref_1039_base_plus_offset)
        ;;[ptr_deref_1039_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1039_root_address_calculated &-> (ptr_deref_1039_word_addrgen)
        ptr_deref_1039_word_address_calculated <-& (ptr_deref_1039_word_addrgen)
        ;;[ptr_deref_1039_Sample] 
        {
          ;;[ptr_deref_1039_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1039_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1039_sample_start_ <-& (ptr_deref_1039_word_address_calculated)
        ptr_deref_1039_sample_start_ &-> (ptr_deref_1039_Sample)
        ptr_deref_1039_sample_completed_ <-& (ptr_deref_1039_Sample)
        ptr_deref_1039_sample_completed_ &-> ($null)
        ptr_deref_1039_update_start_ &-> (ptr_deref_1039_Update)
        ptr_deref_1039_update_completed_ <-& (ptr_deref_1039_Update)
        // start: Forward dependencies from arrayidx to transition ptr_deref_1039_base_address_calculated
        ptr_deref_1039_base_address_calculated <-& (addr_of_1036_update_completed_)
        // done: Forward dependencies from arrayidx to transition ptr_deref_1039_base_address_calculated
        ptr_deref_1039_sample_start_ <-& (ptr_deref_1039_base_address_calculated)
        // end:  		->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  ptr_deref_1039 store
      }
      assign_stmt_1000_to_assign_stmt_1042__entry__ |-> (assign_stmt_1000_to_assign_stmt_1042)
      assign_stmt_1000_to_assign_stmt_1042__exit__ <-| (assign_stmt_1000_to_assign_stmt_1042)
      ::[assign_stmt_1049_to_assign_stmt_1144] 
      {
        // start: WAR dependencies for sub67
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub67
        // start:  		$volatile sub67 := (jx_x1124 - conv) $buffering 1
        //  file prog.linked.opt.aa, line 370
        // volatile! 
        // Source expression
        // (jx_x1124 - conv)
        // jx_x1124
        // conv
        // Target expression
        // (as target) sub67
        // start: WAR dependencies for sub67
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub67
        // end:  		$volatile sub67 := (jx_x1124 - conv) $buffering 1
        // start: WAR dependencies for sub73
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub73
        // start:  		$volatile sub73 := (ix_x1126 - conv) $buffering 1
        //  file prog.linked.opt.aa, line 371
        // volatile! 
        // Source expression
        // (ix_x1126 - conv)
        // ix_x1126
        // conv
        // Target expression
        // (as target) sub73
        // start: WAR dependencies for sub73
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for sub73
        // end:  		$volatile sub73 := (ix_x1126 - conv) $buffering 1
        // start: WAR dependencies for mul74
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul74
        // start:  		$volatile mul74 := (tmp4 * sub73) $buffering 1
        //  file prog.linked.opt.aa, line 372
        // volatile! 
        // Source expression
        // (tmp4 * sub73)
        // tmp4
        // sub73
        // Target expression
        // (as target) mul74
        // start: WAR dependencies for mul74
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul74
        // end:  		$volatile mul74 := (tmp4 * sub73) $buffering 1
        // start: WAR dependencies for tmp118
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for tmp118
        // start:  		$volatile tmp118 := (mul74 + sub67) $buffering 1
        //  file prog.linked.opt.aa, line 373
        // volatile! 
        // Source expression
        // (mul74 + sub67)
        // mul74
        // sub67
        // Target expression
        // (as target) tmp118
        // start: WAR dependencies for tmp118
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for tmp118
        // end:  		$volatile tmp118 := (mul74 + sub67) $buffering 1
        // start: WAR dependencies for tmp119
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for tmp119
        // start:  		$volatile tmp119 := (tmp118 * tmp2) $buffering 1
        //  file prog.linked.opt.aa, line 374
        // volatile! 
        // Source expression
        // (tmp118 * tmp2)
        // tmp118
        // tmp2
        // Target expression
        // (as target) tmp119
        // start: WAR dependencies for tmp119
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for tmp119
        // end:  		$volatile tmp119 := (tmp118 * tmp2) $buffering 1
        // start: WAR dependencies for add75
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add75
        // start:  		$volatile add75 := (tmp119 + kx_x0125) $buffering 1
        //  file prog.linked.opt.aa, line 375
        // volatile! 
        // Source expression
        // (tmp119 + kx_x0125)
        // tmp119
        // kx_x0125
        // Target expression
        // (as target) add75
        // start: WAR dependencies for add75
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add75
        // end:  		$volatile add75 := (tmp119 + kx_x0125) $buffering 1
        // start: WAR dependencies for mul81
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul81
        // start:  		$volatile mul81 := (jx_x1124 * tmp8) $buffering 1
        //  file prog.linked.opt.aa, line 376
        // volatile! 
        // Source expression
        // (jx_x1124 * tmp8)
        // jx_x1124
        // tmp8
        // Target expression
        // (as target) mul81
        // start: WAR dependencies for mul81
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul81
        // end:  		$volatile mul81 := (jx_x1124 * tmp8) $buffering 1
        // start: WAR dependencies for mul85
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul85
        // start:  		$volatile mul85 := (ix_x1126 * mul19) $buffering 1
        //  file prog.linked.opt.aa, line 377
        // volatile! 
        // Source expression
        // (ix_x1126 * mul19)
        // ix_x1126
        // mul19
        // Target expression
        // (as target) mul85
        // start: WAR dependencies for mul85
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for mul85
        // end:  		$volatile mul85 := (ix_x1126 * mul19) $buffering 1
        // start: WAR dependencies for add82
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add82
        // start:  		$volatile add82 := (kx_x0125 + mul81) $buffering 1
        //  file prog.linked.opt.aa, line 378
        // volatile! 
        // Source expression
        // (kx_x0125 + mul81)
        // kx_x0125
        // mul81
        // Target expression
        // (as target) add82
        // start: WAR dependencies for add82
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add82
        // end:  		$volatile add82 := (kx_x0125 + mul81) $buffering 1
        // start: WAR dependencies for add86
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add86
        // start:  		$volatile add86 := (add82 + mul85) $buffering 1
        //  file prog.linked.opt.aa, line 379
        // volatile! 
        // Source expression
        // (add82 + mul85)
        // add82
        // mul85
        // Target expression
        // (as target) add86
        // start: WAR dependencies for add86
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add86
        // end:  		$volatile add86 := (add82 + mul85) $buffering 1
        // start: WAR dependencies for shr88
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr88
        // start:  		$volatile shr88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 380
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
        // (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        // ($bitcast ($int<32>) add75 )
        // add75
        // Target expression
        // (as target) shr88
        // start: WAR dependencies for shr88
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr88
        // end:  		$volatile shr88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        // start:  		idxprom89 := ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 381
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) )
        $T[type_cast_1107_sample_start_] 
        $T[type_cast_1107_sample_completed_] 
        $T[type_cast_1107_update_start_] 
        $T[type_cast_1107_update_completed_] 
        // ($cast ($int<64>) shr88 )
        // shr88
        // start: Forward dependencies from ($cast ($int<64>) shr88 ) to transition type_cast_1107_sample_start_
        // done: Forward dependencies from ($cast ($int<64>) shr88 ) to transition type_cast_1107_sample_start_
        ;;[type_cast_1107_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1107_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1107_sample_start_ &-> (type_cast_1107_Sample)
        type_cast_1107_sample_completed_ <-& (type_cast_1107_Sample)
        type_cast_1107_sample_completed_ &-> ($null)
        type_cast_1107_update_start_ &-> (type_cast_1107_Update)
        type_cast_1107_update_completed_ <-& (type_cast_1107_Update)
        // Target expression
        // (as target) idxprom89
        // start: WAR dependencies for idxprom89
        // done: WAR dependencies for idxprom89
        // end:  		idxprom89 := ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) ) $buffering 1// bits of buffering = 64. 
        // start:  		arrayidx90 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 382
        // Source expression
        // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89])
        $T[addr_of_1114_sample_start_] 
        $T[addr_of_1114_sample_completed_] 
        $T[addr_of_1114_update_start_] 
        $T[addr_of_1114_update_completed_] 
        $T[array_obj_ref_1113_root_address_calculated] 
        $T[array_obj_ref_1113_offset_calculated] 
        $T[array_obj_ref_1113_index_resized_1] 
        $T[array_obj_ref_1113_index_scaled_1] 
        $T[array_obj_ref_1113_index_computed_1] 
        // idxprom89
        // start: Forward dependencies from idxprom89 to transition array_obj_ref_1113_index_computed_1
        array_obj_ref_1113_index_computed_1 <-& (type_cast_1107_update_completed_)
        // done: Forward dependencies from idxprom89 to transition array_obj_ref_1113_index_computed_1
        ;;[array_obj_ref_1113_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1113_index_computed_1 &-> (array_obj_ref_1113_index_resize_1)
        array_obj_ref_1113_index_resized_1 <-& (array_obj_ref_1113_index_resize_1)
        ;;[array_obj_ref_1113_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1113_index_resized_1 &-> (array_obj_ref_1113_index_scale_1)
        array_obj_ref_1113_index_scaled_1 <-& (array_obj_ref_1113_index_scale_1)
        $T[array_obj_ref_1113_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_1113_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_1113_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_1113_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_1113_index_scaled_1 &-> (array_obj_ref_1113_final_index_sum_regn_Sample)
        array_obj_ref_1113_final_index_sum_regn_sample_complete <-& (array_obj_ref_1113_final_index_sum_regn_Sample)
        array_obj_ref_1113_final_index_sum_regn_update_start &-> (array_obj_ref_1113_final_index_sum_regn_Update)
        array_obj_ref_1113_offset_calculated <-& (array_obj_ref_1113_final_index_sum_regn_Update)
        ;;[array_obj_ref_1113_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1113_offset_calculated &-> (array_obj_ref_1113_base_plus_offset)
        array_obj_ref_1113_root_address_calculated <-& (array_obj_ref_1113_base_plus_offset)
        ;;[addr_of_1114_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1114_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1114_sample_start_ <-& (array_obj_ref_1113_root_address_calculated)
        addr_of_1114_sample_start_ &-> (addr_of_1114_request)
        addr_of_1114_sample_completed_ <-& (addr_of_1114_request)
        addr_of_1114_sample_completed_ &-> ($null)
        addr_of_1114_update_start_ &-> (addr_of_1114_complete)
        addr_of_1114_update_completed_ <-& (addr_of_1114_complete)
        // Target expression
        // (as target) arrayidx90
        // start: WAR dependencies for arrayidx90
        // done: WAR dependencies for arrayidx90
        // end:  		arrayidx90 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp91 := ->(arrayidx90) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 383
        // Source expression
        // ->(arrayidx90)
        $T[ptr_deref_1118_sample_start_] 
        $T[ptr_deref_1118_sample_completed_] 
        $T[ptr_deref_1118_update_start_] 
        $T[ptr_deref_1118_update_completed_] 
        $T[ptr_deref_1118_base_address_calculated] 
        // arrayidx90
        $T[ptr_deref_1118_word_address_calculated] 
        $T[ptr_deref_1118_root_address_calculated] 
        $T[ptr_deref_1118_base_address_resized] 
        ;;[ptr_deref_1118_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1118_base_address_calculated &-> (ptr_deref_1118_base_addr_resize)
        ptr_deref_1118_base_address_resized <-& (ptr_deref_1118_base_addr_resize)
        ;;[ptr_deref_1118_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1118_base_address_resized &-> (ptr_deref_1118_base_plus_offset)
        ptr_deref_1118_root_address_calculated <-& (ptr_deref_1118_base_plus_offset)
        ;;[ptr_deref_1118_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1118_root_address_calculated &-> (ptr_deref_1118_word_addrgen)
        ptr_deref_1118_word_address_calculated <-& (ptr_deref_1118_word_addrgen)
        ;;[ptr_deref_1118_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1118_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1118_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1118_sample_start_ <-& (ptr_deref_1118_word_address_calculated)
        ptr_deref_1118_sample_start_ &-> (ptr_deref_1118_Sample)
        ptr_deref_1118_sample_completed_ <-& (ptr_deref_1118_Sample)
        ptr_deref_1118_sample_completed_ &-> ($null)
        ptr_deref_1118_update_start_ &-> (ptr_deref_1118_Update)
        ptr_deref_1118_update_completed_ <-& (ptr_deref_1118_Update)
        // start: Forward dependencies from arrayidx90 to transition ptr_deref_1118_base_address_calculated
        ptr_deref_1118_base_address_calculated <-& (addr_of_1114_update_completed_)
        // done: Forward dependencies from arrayidx90 to transition ptr_deref_1118_base_address_calculated
        ptr_deref_1118_sample_start_ <-& (ptr_deref_1118_base_address_calculated)
        // Target expression
        // (as target) tmp91
        // start: WAR dependencies for tmp91
        // done: WAR dependencies for tmp91
        // end:  		tmp91 := ->(arrayidx90) $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for shr93
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr93
        // start:  		$volatile shr93 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        //  file prog.linked.opt.aa, line 384
        // volatile! 
        // Source expression
        // ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
        // (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
        // ($bitcast ($int<32>) add86 )
        // add86
        // Target expression
        // (as target) shr93
        // start: WAR dependencies for shr93
        // ignored out-of-scope w_root 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for shr93
        // end:  		$volatile shr93 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
        // start:  		idxprom94 := ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) ) $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 385
        // Source expression
        // ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) )
        $T[type_cast_1132_sample_start_] 
        $T[type_cast_1132_sample_completed_] 
        $T[type_cast_1132_update_start_] 
        $T[type_cast_1132_update_completed_] 
        // ($cast ($int<64>) shr93 )
        // shr93
        // start: Forward dependencies from ($cast ($int<64>) shr93 ) to transition type_cast_1132_sample_start_
        // done: Forward dependencies from ($cast ($int<64>) shr93 ) to transition type_cast_1132_sample_start_
        ;;[type_cast_1132_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1132_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1132_sample_start_ &-> (type_cast_1132_Sample)
        type_cast_1132_sample_completed_ <-& (type_cast_1132_Sample)
        type_cast_1132_sample_completed_ &-> ($null)
        type_cast_1132_update_start_ &-> (type_cast_1132_Update)
        type_cast_1132_update_completed_ <-& (type_cast_1132_Update)
        // Target expression
        // (as target) idxprom94
        // start: WAR dependencies for idxprom94
        // done: WAR dependencies for idxprom94
        // end:  		idxprom94 := ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) ) $buffering 1// bits of buffering = 64. 
        // start:  		arrayidx95 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 386
        // Source expression
        // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94])
        $T[addr_of_1139_sample_start_] 
        $T[addr_of_1139_sample_completed_] 
        $T[addr_of_1139_update_start_] 
        $T[addr_of_1139_update_completed_] 
        $T[array_obj_ref_1138_root_address_calculated] 
        $T[array_obj_ref_1138_offset_calculated] 
        $T[array_obj_ref_1138_index_resized_1] 
        $T[array_obj_ref_1138_index_scaled_1] 
        $T[array_obj_ref_1138_index_computed_1] 
        // idxprom94
        // start: Forward dependencies from idxprom94 to transition array_obj_ref_1138_index_computed_1
        array_obj_ref_1138_index_computed_1 <-& (type_cast_1132_update_completed_)
        // done: Forward dependencies from idxprom94 to transition array_obj_ref_1138_index_computed_1
        ;;[array_obj_ref_1138_index_resize_1] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1138_index_computed_1 &-> (array_obj_ref_1138_index_resize_1)
        array_obj_ref_1138_index_resized_1 <-& (array_obj_ref_1138_index_resize_1)
        ;;[array_obj_ref_1138_index_scale_1] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1138_index_resized_1 &-> (array_obj_ref_1138_index_scale_1)
        array_obj_ref_1138_index_scaled_1 <-& (array_obj_ref_1138_index_scale_1)
        $T[array_obj_ref_1138_final_index_sum_regn_sample_complete] 
        $T[array_obj_ref_1138_final_index_sum_regn_update_start] 
        ;;[array_obj_ref_1138_final_index_sum_regn_Sample] 
        {
          $T [req] $T [ack] 
        }
        ;;[array_obj_ref_1138_final_index_sum_regn_Update] 
        {
          $T [req] $T [ack] 
        }
        array_obj_ref_1138_index_scaled_1 &-> (array_obj_ref_1138_final_index_sum_regn_Sample)
        array_obj_ref_1138_final_index_sum_regn_sample_complete <-& (array_obj_ref_1138_final_index_sum_regn_Sample)
        array_obj_ref_1138_final_index_sum_regn_update_start &-> (array_obj_ref_1138_final_index_sum_regn_Update)
        array_obj_ref_1138_offset_calculated <-& (array_obj_ref_1138_final_index_sum_regn_Update)
        ;;[array_obj_ref_1138_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1138_offset_calculated &-> (array_obj_ref_1138_base_plus_offset)
        array_obj_ref_1138_root_address_calculated <-& (array_obj_ref_1138_base_plus_offset)
        ;;[addr_of_1139_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1139_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1139_sample_start_ <-& (array_obj_ref_1138_root_address_calculated)
        addr_of_1139_sample_start_ &-> (addr_of_1139_request)
        addr_of_1139_sample_completed_ <-& (addr_of_1139_request)
        addr_of_1139_sample_completed_ &-> ($null)
        addr_of_1139_update_start_ &-> (addr_of_1139_complete)
        addr_of_1139_update_completed_ <-& (addr_of_1139_complete)
        // Target expression
        // (as target) arrayidx95
        // start: WAR dependencies for arrayidx95
        // done: WAR dependencies for arrayidx95
        // end:  		arrayidx95 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94]) $buffering 1// bits of buffering = 32. 
        // start:  		->(arrayidx95) := tmp91 $buffering 1// bits of buffering = 64. 
        //  file prog.linked.opt.aa, line 387
        // Source expression
        // tmp91
        // Target expression
        // ->(arrayidx95)
        $T[ptr_deref_1142_sample_start_] 
        $T[ptr_deref_1142_sample_completed_] 
        $T[ptr_deref_1142_update_start_] 
        $T[ptr_deref_1142_update_completed_] 
        $T[ptr_deref_1142_base_address_calculated] 
        // arrayidx95
        $T[ptr_deref_1142_word_address_calculated] 
        $T[ptr_deref_1142_root_address_calculated] 
        $T[ptr_deref_1142_base_address_resized] 
        ;;[ptr_deref_1142_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1142_base_address_calculated &-> (ptr_deref_1142_base_addr_resize)
        ptr_deref_1142_base_address_resized <-& (ptr_deref_1142_base_addr_resize)
        ;;[ptr_deref_1142_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1142_base_address_resized &-> (ptr_deref_1142_base_plus_offset)
        ptr_deref_1142_root_address_calculated <-& (ptr_deref_1142_base_plus_offset)
        ;;[ptr_deref_1142_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1142_root_address_calculated &-> (ptr_deref_1142_word_addrgen)
        ptr_deref_1142_word_address_calculated <-& (ptr_deref_1142_word_addrgen)
        ;;[ptr_deref_1142_Sample] 
        {
          ;;[ptr_deref_1142_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1142_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1142_sample_start_ <-& (ptr_deref_1142_word_address_calculated)
        ptr_deref_1142_sample_start_ &-> (ptr_deref_1142_Sample)
        ptr_deref_1142_sample_completed_ <-& (ptr_deref_1142_Sample)
        ptr_deref_1142_sample_completed_ &-> ($null)
        ptr_deref_1142_update_start_ &-> (ptr_deref_1142_Update)
        ptr_deref_1142_update_completed_ <-& (ptr_deref_1142_Update)
        // start: Forward dependencies from arrayidx95 to transition ptr_deref_1142_base_address_calculated
        ptr_deref_1142_base_address_calculated <-& (addr_of_1139_update_completed_)
        // done: Forward dependencies from arrayidx95 to transition ptr_deref_1142_base_address_calculated
        ptr_deref_1142_sample_start_ <-& (ptr_deref_1142_base_address_calculated)
        // start: Forward dependencies from tmp91 to transition ptr_deref_1142_sample_start_
        ptr_deref_1142_sample_start_ <-& (ptr_deref_1118_update_completed_)
        // done: Forward dependencies from tmp91 to transition ptr_deref_1142_sample_start_
        // end:  		->(arrayidx95) := tmp91 $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
        // memory-space  memory_space_1
        //  ptr_deref_1118 load
        // memory-space  memory_space_0
        //  ptr_deref_1142 store
      }
      assign_stmt_1049_to_assign_stmt_1144__entry__ |-> (assign_stmt_1049_to_assign_stmt_1144)
      assign_stmt_1049_to_assign_stmt_1144__exit__ <-| (assign_stmt_1049_to_assign_stmt_1144)
      ::[assign_stmt_1152_to_assign_stmt_1159] 
      {
        // start: WAR dependencies for add97
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add97
        // start:  		$volatile add97 := (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
        //  file prog.linked.opt.aa, line 391
        // volatile! 
        // Source expression
        // (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
        // kx_x0125
        // Target expression
        // (as target) add97
        // start: WAR dependencies for add97
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for add97
        // end:  		$volatile add97 := (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
        // start: WAR dependencies for cmp100
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp100
        // start:  		$volatile cmp100 := (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 )) $buffering 1
        //  file prog.linked.opt.aa, line 392
        // volatile! 
        // Source expression
        // (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 ))
        // ($bitcast ($int<32>) add97 )
        // add97
        // ($bitcast ($int<32>) tmp2 )
        // tmp2
        // Target expression
        // (as target) cmp100
        // start: WAR dependencies for cmp100
        // ignored out-of-scope w_root 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp100
        // end:  		$volatile cmp100 := (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1152_to_assign_stmt_1159__entry__ |-> (assign_stmt_1152_to_assign_stmt_1159)
      assign_stmt_1152_to_assign_stmt_1159__exit__ <-| (assign_stmt_1152_to_assign_stmt_1159)
      // if-statement  
      //  file prog.linked.opt.aa, line 393
      ;;[if_stmt_1160_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1160__entry__ |-> (if_stmt_1160_dead_link)
      if_stmt_1160__exit__ <-| (if_stmt_1160_dead_link)
      ;;[if_stmt_1160_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1160__entry__ |-> (if_stmt_1160_eval_test)
      $P [R_cmp100_1161_place]
      R_cmp100_1161_place <-| (if_stmt_1160_eval_test)
      ;;[if_stmt_1160_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1160_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp100_1161_place |-> (if_stmt_1160_if_link if_stmt_1160_else_link)
      $P [ifx_xend_ifx_xend116]
      ifx_xend_ifx_xend116 <-| (if_stmt_1160_if_link)
      $P [ifx_xend_ifx_xthen102]
      ifx_xend_ifx_xthen102 <-| (if_stmt_1160_else_link)
      ::[assign_stmt_1172_to_assign_stmt_1203] 
      {
        // start: WAR dependencies for inc
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for inc
        // start:  		$volatile inc := (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        //  file prog.linked.opt.aa, line 400
        // volatile! 
        // Source expression
        // (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        // jx_x1124
        // Target expression
        // (as target) inc
        // start: WAR dependencies for inc
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for inc
        // end:  		$volatile inc := (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
        // start:  		iNsTr_25 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 401
        // constant! 
        // end:  		iNsTr_25 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp105 := ->(iNsTr_25) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 402
        // Source expression
        // ->(iNsTr_25)
        $T[ptr_deref_1183_sample_start_] 
        $T[ptr_deref_1183_sample_completed_] 
        $T[ptr_deref_1183_update_start_] 
        $T[ptr_deref_1183_update_completed_] 
        $T[ptr_deref_1183_base_address_calculated] 
        // iNsTr_25
        $T[ptr_deref_1183_word_address_calculated] 
        $T[ptr_deref_1183_root_address_calculated] 
        $T[ptr_deref_1183_base_address_resized] 
        ;;[ptr_deref_1183_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1183_base_address_calculated &-> (ptr_deref_1183_base_addr_resize)
        ptr_deref_1183_base_address_resized <-& (ptr_deref_1183_base_addr_resize)
        ;;[ptr_deref_1183_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1183_base_address_resized &-> (ptr_deref_1183_base_plus_offset)
        ptr_deref_1183_root_address_calculated <-& (ptr_deref_1183_base_plus_offset)
        $T[ptr_deref_1183_word_addrgen_sample_start] 
        $T[ptr_deref_1183_word_addrgen_sample_complete] 
        $T[ptr_deref_1183_word_addrgen_update_start] 
        $T[ptr_deref_1183_word_addrgen_update_complete] 
        ptr_deref_1183_root_address_calculated &-> (ptr_deref_1183_word_addrgen_sample_start)
        ptr_deref_1183_word_address_calculated <-& (ptr_deref_1183_word_addrgen_update_complete)
        ;;[ptr_deref_1183_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1183_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1183_word_addrgen_sample_start &-> (ptr_deref_1183_word_addrgen_0_Sample)
        ptr_deref_1183_word_addrgen_update_start &-> (ptr_deref_1183_word_addrgen_0_Update)
        ptr_deref_1183_word_addrgen_sample_complete <-& (ptr_deref_1183_word_addrgen_0_Sample)
        ptr_deref_1183_word_addrgen_update_complete <-& (ptr_deref_1183_word_addrgen_0_Update)
        ;;[ptr_deref_1183_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1183_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1183_word_addrgen_sample_start &-> (ptr_deref_1183_word_addrgen_1_Sample)
        ptr_deref_1183_word_addrgen_update_start &-> (ptr_deref_1183_word_addrgen_1_Update)
        ptr_deref_1183_word_addrgen_sample_complete <-& (ptr_deref_1183_word_addrgen_1_Sample)
        ptr_deref_1183_word_addrgen_update_complete <-& (ptr_deref_1183_word_addrgen_1_Update)
        ;;[ptr_deref_1183_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1183_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1183_word_addrgen_sample_start &-> (ptr_deref_1183_word_addrgen_2_Sample)
        ptr_deref_1183_word_addrgen_update_start &-> (ptr_deref_1183_word_addrgen_2_Update)
        ptr_deref_1183_word_addrgen_sample_complete <-& (ptr_deref_1183_word_addrgen_2_Sample)
        ptr_deref_1183_word_addrgen_update_complete <-& (ptr_deref_1183_word_addrgen_2_Update)
        ;;[ptr_deref_1183_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1183_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1183_word_addrgen_sample_start &-> (ptr_deref_1183_word_addrgen_3_Sample)
        ptr_deref_1183_word_addrgen_update_start &-> (ptr_deref_1183_word_addrgen_3_Update)
        ptr_deref_1183_word_addrgen_sample_complete <-& (ptr_deref_1183_word_addrgen_3_Sample)
        ptr_deref_1183_word_addrgen_update_complete <-& (ptr_deref_1183_word_addrgen_3_Update)
        ;;[ptr_deref_1183_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1183_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1183_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1183_sample_start_ <-& (ptr_deref_1183_word_address_calculated)
        ptr_deref_1183_sample_start_ &-> (ptr_deref_1183_Sample)
        ptr_deref_1183_sample_completed_ <-& (ptr_deref_1183_Sample)
        ptr_deref_1183_sample_completed_ &-> ($null)
        ptr_deref_1183_update_start_ &-> (ptr_deref_1183_Update)
        ptr_deref_1183_update_completed_ <-& (ptr_deref_1183_Update)
        // start: Forward dependencies from iNsTr_25 to transition ptr_deref_1183_base_address_calculated
        // done: Forward dependencies from iNsTr_25 to transition ptr_deref_1183_base_address_calculated
        ptr_deref_1183_sample_start_ <-& (ptr_deref_1183_base_address_calculated)
        // Target expression
        // (as target) tmp105
        // start: WAR dependencies for tmp105
        // done: WAR dependencies for tmp105
        // end:  		tmp105 := ->(iNsTr_25) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add108
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for add108
        // start:  		$volatile add108 := (tmp105 + mul24121) $buffering 1
        //  file prog.linked.opt.aa, line 403
        // volatile! 
        // Source expression
        // (tmp105 + mul24121)
        // tmp105
        // mul24121
        // Target expression
        // (as target) add108
        // start: WAR dependencies for add108
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for add108
        // end:  		$volatile add108 := (tmp105 + mul24121) $buffering 1
        // start: WAR dependencies for cmp109
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp109
        // start:  		$volatile cmp109 := (inc == add108) $buffering 1
        //  file prog.linked.opt.aa, line 404
        // volatile! 
        // Source expression
        // (inc == add108)
        // inc
        // add108
        // Target expression
        // (as target) cmp109
        // start: WAR dependencies for cmp109
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp109
        // end:  		$volatile cmp109 := (inc == add108) $buffering 1
        // start:  		inc114 := ($cast ($uint<32>) cmp109 ) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 405
        // Source expression
        // ($cast ($uint<32>) cmp109 )
        $T[type_cast_1197_sample_start_] 
        $T[type_cast_1197_sample_completed_] 
        $T[type_cast_1197_update_start_] 
        $T[type_cast_1197_update_completed_] 
        // cmp109
        // start: Forward dependencies from cmp109 to transition type_cast_1197_sample_start_
        type_cast_1197_sample_start_ <-& (ptr_deref_1183_update_completed_)
        // done: Forward dependencies from cmp109 to transition type_cast_1197_sample_start_
        ;;[type_cast_1197_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1197_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1197_sample_start_ &-> (type_cast_1197_Sample)
        type_cast_1197_sample_completed_ <-& (type_cast_1197_Sample)
        type_cast_1197_sample_completed_ &-> ($null)
        type_cast_1197_update_start_ &-> (type_cast_1197_Update)
        type_cast_1197_update_completed_ <-& (type_cast_1197_Update)
        // Target expression
        // (as target) inc114
        // start: WAR dependencies for inc114
        // done: WAR dependencies for inc114
        // end:  		inc114 := ($cast ($uint<32>) cmp109 ) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for inc114x_xix_x1
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for inc114x_xix_x1
        // start:  		$volatile inc114x_xix_x1 := (inc114 + ix_x1126) $buffering 1
        //  file prog.linked.opt.aa, line 406
        // volatile! 
        // Source expression
        // (inc114 + ix_x1126)
        // inc114
        // ix_x1126
        // Target expression
        // (as target) inc114x_xix_x1
        // start: WAR dependencies for inc114x_xix_x1
        // ignored out-of-scope w_root 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
        // type of target is $uint<32>
        // done: WAR dependencies for inc114x_xix_x1
        // end:  		$volatile inc114x_xix_x1 := (inc114 + ix_x1126) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_1183 load
      }
      assign_stmt_1172_to_assign_stmt_1203__entry__ |-> (assign_stmt_1172_to_assign_stmt_1203)
      assign_stmt_1172_to_assign_stmt_1203__exit__ <-| (assign_stmt_1172_to_assign_stmt_1203)
      // if-statement  
      //  file prog.linked.opt.aa, line 407
      ;;[if_stmt_1204_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1204__entry__ |-> (if_stmt_1204_dead_link)
      if_stmt_1204__exit__ <-| (if_stmt_1204_dead_link)
      ;;[if_stmt_1204_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1204__entry__ |-> (if_stmt_1204_eval_test)
      $P [R_cmp109_1205_place]
      R_cmp109_1205_place <-| (if_stmt_1204_eval_test)
      ;;[if_stmt_1204_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1204_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp109_1205_place |-> (if_stmt_1204_if_link if_stmt_1204_else_link)
      $P [ifx_xthen102_ifx_xthen111]
      ifx_xthen102_ifx_xthen111 <-| (if_stmt_1204_if_link)
      $P [ifx_xthen102_ifx_xend116]
      ifx_xthen102_ifx_xend116 <-| (if_stmt_1204_else_link)
      ::[assign_stmt_1248_to_assign_stmt_1262] 
      {
        // start:  		iNsTr_23 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 423
        // constant! 
        // end:  		iNsTr_23 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
        // start:  		tmp22 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
        //  file prog.linked.opt.aa, line 424
        // Source expression
        // ->(iNsTr_23)
        $T[ptr_deref_1251_sample_start_] 
        $T[ptr_deref_1251_sample_completed_] 
        $T[ptr_deref_1251_update_start_] 
        $T[ptr_deref_1251_update_completed_] 
        $T[ptr_deref_1251_base_address_calculated] 
        // iNsTr_23
        $T[ptr_deref_1251_word_address_calculated] 
        $T[ptr_deref_1251_root_address_calculated] 
        $T[ptr_deref_1251_base_address_resized] 
        ;;[ptr_deref_1251_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1251_base_address_calculated &-> (ptr_deref_1251_base_addr_resize)
        ptr_deref_1251_base_address_resized <-& (ptr_deref_1251_base_addr_resize)
        ;;[ptr_deref_1251_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1251_base_address_resized &-> (ptr_deref_1251_base_plus_offset)
        ptr_deref_1251_root_address_calculated <-& (ptr_deref_1251_base_plus_offset)
        $T[ptr_deref_1251_word_addrgen_sample_start] 
        $T[ptr_deref_1251_word_addrgen_sample_complete] 
        $T[ptr_deref_1251_word_addrgen_update_start] 
        $T[ptr_deref_1251_word_addrgen_update_complete] 
        ptr_deref_1251_root_address_calculated &-> (ptr_deref_1251_word_addrgen_sample_start)
        ptr_deref_1251_word_address_calculated <-& (ptr_deref_1251_word_addrgen_update_complete)
        ;;[ptr_deref_1251_word_addrgen_0_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1251_word_addrgen_0_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1251_word_addrgen_sample_start &-> (ptr_deref_1251_word_addrgen_0_Sample)
        ptr_deref_1251_word_addrgen_update_start &-> (ptr_deref_1251_word_addrgen_0_Update)
        ptr_deref_1251_word_addrgen_sample_complete <-& (ptr_deref_1251_word_addrgen_0_Sample)
        ptr_deref_1251_word_addrgen_update_complete <-& (ptr_deref_1251_word_addrgen_0_Update)
        ;;[ptr_deref_1251_word_addrgen_1_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1251_word_addrgen_1_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1251_word_addrgen_sample_start &-> (ptr_deref_1251_word_addrgen_1_Sample)
        ptr_deref_1251_word_addrgen_update_start &-> (ptr_deref_1251_word_addrgen_1_Update)
        ptr_deref_1251_word_addrgen_sample_complete <-& (ptr_deref_1251_word_addrgen_1_Sample)
        ptr_deref_1251_word_addrgen_update_complete <-& (ptr_deref_1251_word_addrgen_1_Update)
        ;;[ptr_deref_1251_word_addrgen_2_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1251_word_addrgen_2_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1251_word_addrgen_sample_start &-> (ptr_deref_1251_word_addrgen_2_Sample)
        ptr_deref_1251_word_addrgen_update_start &-> (ptr_deref_1251_word_addrgen_2_Update)
        ptr_deref_1251_word_addrgen_sample_complete <-& (ptr_deref_1251_word_addrgen_2_Sample)
        ptr_deref_1251_word_addrgen_update_complete <-& (ptr_deref_1251_word_addrgen_2_Update)
        ;;[ptr_deref_1251_word_addrgen_3_Sample] 
        {
          $T [rr] $T [ra]
        }
        ;;[ptr_deref_1251_word_addrgen_3_Update] 
        {
          $T [cr] $T [ca]
        }
        ptr_deref_1251_word_addrgen_sample_start &-> (ptr_deref_1251_word_addrgen_3_Sample)
        ptr_deref_1251_word_addrgen_update_start &-> (ptr_deref_1251_word_addrgen_3_Update)
        ptr_deref_1251_word_addrgen_sample_complete <-& (ptr_deref_1251_word_addrgen_3_Sample)
        ptr_deref_1251_word_addrgen_update_complete <-& (ptr_deref_1251_word_addrgen_3_Update)
        ;;[ptr_deref_1251_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_1] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_2] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_3] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1251_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_1] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_2] 
            {
              $T [cr] $T [ca] 
            }
            ;;[word_3] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1251_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1251_sample_start_ <-& (ptr_deref_1251_word_address_calculated)
        ptr_deref_1251_sample_start_ &-> (ptr_deref_1251_Sample)
        ptr_deref_1251_sample_completed_ <-& (ptr_deref_1251_Sample)
        ptr_deref_1251_sample_completed_ &-> ($null)
        ptr_deref_1251_update_start_ &-> (ptr_deref_1251_Update)
        ptr_deref_1251_update_completed_ <-& (ptr_deref_1251_Update)
        // start: Forward dependencies from iNsTr_23 to transition ptr_deref_1251_base_address_calculated
        // done: Forward dependencies from iNsTr_23 to transition ptr_deref_1251_base_address_calculated
        ptr_deref_1251_sample_start_ <-& (ptr_deref_1251_base_address_calculated)
        // Target expression
        // (as target) tmp22
        // start: WAR dependencies for tmp22
        // done: WAR dependencies for tmp22
        // end:  		tmp22 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
        // start: WAR dependencies for add
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for add
        // start:  		$volatile add := (tmp22 + mul24121) $buffering 1
        //  file prog.linked.opt.aa, line 425
        // volatile! 
        // Source expression
        // (tmp22 + mul24121)
        // tmp22
        // mul24121
        // Target expression
        // (as target) add
        // start: WAR dependencies for add
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // done: WAR dependencies for add
        // end:  		$volatile add := (tmp22 + mul24121) $buffering 1
        // start: WAR dependencies for cmp
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp
        // start:  		$volatile cmp := (ix_x0 < add) $buffering 1
        //  file prog.linked.opt.aa, line 426
        // volatile! 
        // Source expression
        // (ix_x0 < add)
        // ix_x0
        // add
        // Target expression
        // (as target) cmp
        // start: WAR dependencies for cmp
        // ignored out-of-scope w_root 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
        // ignored out-of-scope w_root 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
        // type of target is $uint<32>
        // done: WAR dependencies for cmp
        // end:  		$volatile cmp := (ix_x0 < add) $buffering 1
        // load-store dependencies..
        // memory-space  memory_space_2
        //  ptr_deref_1251 load
      }
      assign_stmt_1248_to_assign_stmt_1262__entry__ |-> (assign_stmt_1248_to_assign_stmt_1262)
      assign_stmt_1248_to_assign_stmt_1262__exit__ <-| (assign_stmt_1248_to_assign_stmt_1262)
      // if-statement  
      //  file prog.linked.opt.aa, line 427
      ;;[if_stmt_1263_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1263__entry__ |-> (if_stmt_1263_dead_link)
      if_stmt_1263__exit__ <-| (if_stmt_1263_dead_link)
      ;;[if_stmt_1263_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1263__entry__ |-> (if_stmt_1263_eval_test)
      $P [R_cmp_1264_place]
      R_cmp_1264_place <-| (if_stmt_1263_eval_test)
      ;;[if_stmt_1263_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1263_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_cmp_1264_place |-> (if_stmt_1263_if_link if_stmt_1263_else_link)
      $P [ifx_xend116_whilex_xbody]
      ifx_xend116_whilex_xbody <-| (if_stmt_1263_if_link)
      $P [ifx_xend116_whilex_xendx_xloopexit]
      ifx_xend116_whilex_xendx_xloopexit <-| (if_stmt_1263_else_link)
      ::[assign_stmt_1275] 
      {
        // start:  		Block0_complete := call $buffering 1// bits of buffering = 8. 
        //  file prog.linked.opt.aa, line 438
        // Source expression
        // call
        // Target expression
        // (as target) Block0_complete
        $T[WPIPE_Block0_complete_1273_sample_start_] 
        $T[WPIPE_Block0_complete_1273_sample_completed_] 
        $T[WPIPE_Block0_complete_1273_update_start_] 
        $T[WPIPE_Block0_complete_1273_update_completed_] 
        ;;[WPIPE_Block0_complete_1273_Sample] 
        {
          // pipe write sample-start Block0_complete
          $T [req] $T [ack] 
        }
        ;;[WPIPE_Block0_complete_1273_Update] 
        {
          // pipe write update (complete) Block0_complete
          $T [req] $T [ack] 
        }
        WPIPE_Block0_complete_1273_sample_start_ &-> (WPIPE_Block0_complete_1273_Sample)
        WPIPE_Block0_complete_1273_sample_completed_ <-& (WPIPE_Block0_complete_1273_Sample)
        WPIPE_Block0_complete_1273_update_start_ <-& (WPIPE_Block0_complete_1273_sample_completed_)
        WPIPE_Block0_complete_1273_update_start_ &-> (WPIPE_Block0_complete_1273_Update)
        WPIPE_Block0_complete_1273_update_completed_ <-& (WPIPE_Block0_complete_1273_Update)
        // start: Forward dependencies from call to transition WPIPE_Block0_complete_1273_sample_start_
        // done: Forward dependencies from call to transition WPIPE_Block0_complete_1273_sample_start_
        // end:  		Block0_complete := call $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe Block0_complete
        // read-dependencies for pipe Block0_complete
        // write-dependencies for pipe Block0_complete
        // signal write dependencies for Block0_complete
      }
      assign_stmt_1275__entry__ |-> (assign_stmt_1275)
      assign_stmt_1275__exit__ <-| (assign_stmt_1275)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 315
      ;;[merge_stmt_886_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_886__entry__ |-> (merge_stmt_886_dead_link)
      merge_stmt_886__exit__ <-| (merge_stmt_886_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 315  --------------------------
      ||[entry_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_bbx_xnph |-> (entry_bbx_xnph_PhiReq)
      $P [merge_stmt_886_PhiReqMerge] 
      merge_stmt_886_PhiReqMerge <-| ( entry_bbx_xnph_PhiReq )
      ||[merge_stmt_886_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_886_PhiReqMerge |-> (merge_stmt_886_PhiAck)
      merge_stmt_886__exit__  <-| (merge_stmt_886_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 315  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 319
      //---------------------   merge statement  file prog.linked.opt.aa, line 319  --------------------------
      ||[bbx_xnph_whilex_xbody_PhiReq] 
      {
        ;;[phi_stmt_895] 
        {
          ||[phi_stmt_895_sources] 
          {
            // sources for 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) tmp22120 )
            ;;[type_cast_898] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_895_req] 
        }
        ;;[phi_stmt_901] 
        {
          ||[phi_stmt_901_sources] 
          {
            // sources for 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_905_konst_delay_trans] $delay
          }
          $T [phi_stmt_901_req] 
        }
        ;;[phi_stmt_908] 
        {
          ||[phi_stmt_908_sources] 
          {
            // sources for 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_912_konst_delay_trans] $delay
          }
          $T [phi_stmt_908_req] 
        }
        ;;[phi_stmt_915] 
        {
          ||[phi_stmt_915_sources] 
          {
            // sources for 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_919_konst_delay_trans] $delay
          }
          $T [phi_stmt_915_req] 
        }
      }
      bbx_xnph_whilex_xbody |-> (bbx_xnph_whilex_xbody_PhiReq)
      ||[ifx_xend116_whilex_xbody_PhiReq] 
      {
        ;;[phi_stmt_895] 
        {
          ||[phi_stmt_895_sources] 
          {
            // sources for 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) tmp22 )
            ;;[type_cast_900] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_895_req] 
        }
        ;;[phi_stmt_901] 
        {
          ||[phi_stmt_901_sources] 
          {
            // sources for 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) ix_x0 )
            ;;[type_cast_907] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_901_req] 
        }
        ;;[phi_stmt_908] 
        {
          ||[phi_stmt_908_sources] 
          {
            // sources for 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) kx_x1 )
            ;;[type_cast_914] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_908_req] 
        }
        ;;[phi_stmt_915] 
        {
          ||[phi_stmt_915_sources] 
          {
            // sources for 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) jx_x0 )
            ;;[type_cast_921] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_915_req] 
        }
      }
      ifx_xend116_whilex_xbody |-> (ifx_xend116_whilex_xbody_PhiReq)
      $P [merge_stmt_894_PhiReqMerge] 
      merge_stmt_894_PhiReqMerge <-| ( bbx_xnph_whilex_xbody_PhiReq  ifx_xend116_whilex_xbody_PhiReq )
      ||[merge_stmt_894_PhiAck] 
      {
        $T [phi_stmt_895_ack] 
        $T [phi_stmt_901_ack] 
        $T [phi_stmt_908_ack] 
        $T [phi_stmt_915_ack] 
      }
      merge_stmt_894_PhiReqMerge |-> (merge_stmt_894_PhiAck)
      merge_stmt_894__exit__  <-| (merge_stmt_894_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 319  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 335
      ;;[merge_stmt_937_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_937__entry__ |-> (merge_stmt_937_dead_link)
      merge_stmt_937__exit__ <-| (merge_stmt_937_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 335  --------------------------
      ||[whilex_xbody_lorx_xlhsx_xfalse_PhiReq] 
      {
        // no phi statements in merge..
      }
      whilex_xbody_lorx_xlhsx_xfalse |-> (whilex_xbody_lorx_xlhsx_xfalse_PhiReq)
      $P [merge_stmt_937_PhiReqMerge] 
      merge_stmt_937_PhiReqMerge <-| ( whilex_xbody_lorx_xlhsx_xfalse_PhiReq )
      ||[merge_stmt_937_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_937_PhiReqMerge |-> (merge_stmt_937_PhiAck)
      merge_stmt_937__exit__  <-| (merge_stmt_937_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 335  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 346
      ;;[merge_stmt_966_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_966__entry__ |-> (merge_stmt_966_dead_link)
      merge_stmt_966__exit__ <-| (merge_stmt_966_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 346  --------------------------
      ||[lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43_PhiReq] 
      {
        // no phi statements in merge..
      }
      lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43 |-> (lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43_PhiReq)
      $P [merge_stmt_966_PhiReqMerge] 
      merge_stmt_966_PhiReqMerge <-| ( lorx_xlhsx_xfalse_lorx_xlhsx_xfalse43_PhiReq )
      ||[merge_stmt_966_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_966_PhiReqMerge |-> (merge_stmt_966_PhiAck)
      merge_stmt_966__exit__  <-| (merge_stmt_966_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 346  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 357
      ;;[merge_stmt_995_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_995__entry__ |-> (merge_stmt_995_dead_link)
      merge_stmt_995__exit__ <-| (merge_stmt_995_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 357  --------------------------
      ||[lorx_xlhsx_xfalse43_ifx_xthen_PhiReq] 
      {
        // no phi statements in merge..
      }
      lorx_xlhsx_xfalse43_ifx_xthen |-> (lorx_xlhsx_xfalse43_ifx_xthen_PhiReq)
      ||[lorx_xlhsx_xfalse_ifx_xthen_PhiReq] 
      {
        // no phi statements in merge..
      }
      lorx_xlhsx_xfalse_ifx_xthen |-> (lorx_xlhsx_xfalse_ifx_xthen_PhiReq)
      ||[whilex_xbody_ifx_xthen_PhiReq] 
      {
        // no phi statements in merge..
      }
      whilex_xbody_ifx_xthen |-> (whilex_xbody_ifx_xthen_PhiReq)
      $P [merge_stmt_995_PhiReqMerge] 
      merge_stmt_995_PhiReqMerge <-| ( lorx_xlhsx_xfalse43_ifx_xthen_PhiReq  lorx_xlhsx_xfalse_ifx_xthen_PhiReq  whilex_xbody_ifx_xthen_PhiReq )
      ||[merge_stmt_995_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_995_PhiReqMerge |-> (merge_stmt_995_PhiAck)
      merge_stmt_995__exit__  <-| (merge_stmt_995_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 357  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 368
      //---------------------   merge statement  file prog.linked.opt.aa, line 368  --------------------------
      ||[lorx_xlhsx_xfalse43_ifx_xelse_PhiReq] 
      {
        // no phi statements in merge..
      }
      lorx_xlhsx_xfalse43_ifx_xelse |-> (lorx_xlhsx_xfalse43_ifx_xelse_PhiReq)
      $P [merge_stmt_1044_PhiReqMerge] 
      merge_stmt_1044_PhiReqMerge <-| ( lorx_xlhsx_xfalse43_ifx_xelse_PhiReq )
      ||[merge_stmt_1044_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1044_PhiReqMerge |-> (merge_stmt_1044_PhiAck)
      merge_stmt_1044__exit__  <-| (merge_stmt_1044_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 368  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 389
      //---------------------   merge statement  file prog.linked.opt.aa, line 389  --------------------------
      ||[ifx_xelse_ifx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xelse_ifx_xend |-> (ifx_xelse_ifx_xend_PhiReq)
      ||[ifx_xthen_ifx_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xthen_ifx_xend |-> (ifx_xthen_ifx_xend_PhiReq)
      $P [merge_stmt_1146_PhiReqMerge] 
      merge_stmt_1146_PhiReqMerge <-| ( ifx_xelse_ifx_xend_PhiReq  ifx_xthen_ifx_xend_PhiReq )
      ||[merge_stmt_1146_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1146_PhiReqMerge |-> (merge_stmt_1146_PhiAck)
      merge_stmt_1146__exit__  <-| (merge_stmt_1146_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 389  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 398
      ;;[merge_stmt_1166_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1166__entry__ |-> (merge_stmt_1166_dead_link)
      merge_stmt_1166__exit__ <-| (merge_stmt_1166_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 398  --------------------------
      ||[ifx_xend_ifx_xthen102_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend_ifx_xthen102 |-> (ifx_xend_ifx_xthen102_PhiReq)
      $P [merge_stmt_1166_PhiReqMerge] 
      merge_stmt_1166_PhiReqMerge <-| ( ifx_xend_ifx_xthen102_PhiReq )
      ||[merge_stmt_1166_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1166_PhiReqMerge |-> (merge_stmt_1166_PhiAck)
      merge_stmt_1166__exit__  <-| (merge_stmt_1166_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 398  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 412
      ;;[merge_stmt_1210_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1210__entry__ |-> (merge_stmt_1210_dead_link)
      merge_stmt_1210__exit__ <-| (merge_stmt_1210_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 412  --------------------------
      ||[ifx_xthen102_ifx_xthen111_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xthen102_ifx_xthen111 |-> (ifx_xthen102_ifx_xthen111_PhiReq)
      $P [merge_stmt_1210_PhiReqMerge] 
      merge_stmt_1210_PhiReqMerge <-| ( ifx_xthen102_ifx_xthen111_PhiReq )
      ||[merge_stmt_1210_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1210_PhiReqMerge |-> (merge_stmt_1210_PhiAck)
      merge_stmt_1210__exit__  <-| (merge_stmt_1210_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 412  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 415
      //---------------------   merge statement  file prog.linked.opt.aa, line 415  --------------------------
      ||[ifx_xend_ifx_xend116_PhiReq] 
      {
        ;;[phi_stmt_1213] 
        {
          ||[phi_stmt_1213_sources] 
          {
            // sources for 			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) jx_x1124 )
            ;;[type_cast_1221] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1213_req] 
        }
        ;;[phi_stmt_1222] 
        {
          ||[phi_stmt_1222_sources] 
          {
            // sources for 			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) add97 )
            ;;[type_cast_1231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1222_req] 
        }
        ;;[phi_stmt_1232] 
        {
          ||[phi_stmt_1232_sources] 
          {
            // sources for 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) ix_x1126 )
            ;;[type_cast_1239] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1232_req] 
        }
      }
      ifx_xend_ifx_xend116 |-> (ifx_xend_ifx_xend116_PhiReq)
      ||[ifx_xthen102_ifx_xend116_PhiReq] 
      {
        ;;[phi_stmt_1213] 
        {
          ||[phi_stmt_1213_sources] 
          {
            // sources for 			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) inc )
            ;;[type_cast_1219] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1213_req] 
        }
        ;;[phi_stmt_1222] 
        {
          ||[phi_stmt_1222_sources] 
          {
            // sources for 			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_1229_konst_delay_trans] $delay
          }
          $T [phi_stmt_1222_req] 
        }
        ;;[phi_stmt_1232] 
        {
          ||[phi_stmt_1232_sources] 
          {
            // sources for 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) inc114x_xix_x1 )
            ;;[type_cast_1237] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1232_req] 
        }
      }
      ifx_xthen102_ifx_xend116 |-> (ifx_xthen102_ifx_xend116_PhiReq)
      ||[ifx_xthen111_ifx_xend116_PhiReq] 
      {
        ;;[phi_stmt_1213] 
        {
          ||[phi_stmt_1213_sources] 
          {
            // sources for 			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_1217_konst_delay_trans] $delay
          }
          $T [phi_stmt_1213_req] 
        }
        ;;[phi_stmt_1222] 
        {
          ||[phi_stmt_1222_sources] 
          {
            // sources for 			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // constant source .... delay transition 
            $T [type_cast_1226_konst_delay_trans] $delay
          }
          $T [phi_stmt_1222_req] 
        }
        ;;[phi_stmt_1232] 
        {
          ||[phi_stmt_1232_sources] 
          {
            // sources for 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
            // type of target is $uint<32>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<32>) inc114x_xix_x1 )
            ;;[type_cast_1235] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1232_req] 
        }
      }
      ifx_xthen111_ifx_xend116 |-> (ifx_xthen111_ifx_xend116_PhiReq)
      $P [merge_stmt_1212_PhiReqMerge] 
      merge_stmt_1212_PhiReqMerge <-| ( ifx_xend_ifx_xend116_PhiReq  ifx_xthen102_ifx_xend116_PhiReq  ifx_xthen111_ifx_xend116_PhiReq )
      ||[merge_stmt_1212_PhiAck] 
      {
        $T [phi_stmt_1213_ack] 
        $T [phi_stmt_1222_ack] 
        $T [phi_stmt_1232_ack] 
      }
      merge_stmt_1212_PhiReqMerge |-> (merge_stmt_1212_PhiAck)
      merge_stmt_1212__exit__  <-| (merge_stmt_1212_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 415  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 432
      ;;[merge_stmt_1269_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1269__entry__ |-> (merge_stmt_1269_dead_link)
      merge_stmt_1269__exit__ <-| (merge_stmt_1269_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 432  --------------------------
      ||[ifx_xend116_whilex_xendx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      ifx_xend116_whilex_xendx_xloopexit |-> (ifx_xend116_whilex_xendx_xloopexit_PhiReq)
      $P [merge_stmt_1269_PhiReqMerge] 
      merge_stmt_1269_PhiReqMerge <-| ( ifx_xend116_whilex_xendx_xloopexit_PhiReq )
      ||[merge_stmt_1269_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1269_PhiReqMerge |-> (merge_stmt_1269_PhiAck)
      merge_stmt_1269__exit__  <-| (merge_stmt_1269_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 432  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 435
      //---------------------   merge statement  file prog.linked.opt.aa, line 435  --------------------------
      ||[entry_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      entry_whilex_xend |-> (entry_whilex_xend_PhiReq)
      ||[whilex_xendx_xloopexit_whilex_xend_PhiReq] 
      {
        // no phi statements in merge..
      }
      whilex_xendx_xloopexit_whilex_xend |-> (whilex_xendx_xloopexit_whilex_xend_PhiReq)
      $P [merge_stmt_1271_PhiReqMerge] 
      merge_stmt_1271_PhiReqMerge <-| ( entry_whilex_xend_PhiReq  whilex_xendx_xloopexit_whilex_xend_PhiReq )
      ||[merge_stmt_1271_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1271_PhiReqMerge |-> (merge_stmt_1271_PhiAck)
      merge_stmt_1271__exit__  <-| (merge_stmt_1271_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 435  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 440
      //---------------------   merge statement  file prog.linked.opt.aa, line 440  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1277_PhiReqMerge] 
      merge_stmt_1277_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1277_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1277_PhiReqMerge |-> (merge_stmt_1277_PhiAck)
      merge_stmt_1277__exit__  <-| (merge_stmt_1277_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 440  --------------------------
      assign_stmt_789__entry__ <-| (branch_block_stmt_786__entry__)
      assign_stmt_793_to_assign_stmt_879__entry__ <-| (assign_stmt_789__exit__)
      if_stmt_880__entry__ <-| (assign_stmt_793_to_assign_stmt_879__exit__)
      merge_stmt_886__entry__ <-| (if_stmt_880__exit__)
      assign_stmt_892__entry__ <-| (merge_stmt_886__exit__)
      bbx_xnph_whilex_xbody <-| (assign_stmt_892__exit__)
      assign_stmt_930__entry__ <-| (merge_stmt_894__exit__)
      if_stmt_931__entry__ <-| (assign_stmt_930__exit__)
      merge_stmt_937__entry__ <-| (if_stmt_931__exit__)
      assign_stmt_942_to_assign_stmt_959__entry__ <-| (merge_stmt_937__exit__)
      if_stmt_960__entry__ <-| (assign_stmt_942_to_assign_stmt_959__exit__)
      merge_stmt_966__entry__ <-| (if_stmt_960__exit__)
      assign_stmt_974_to_assign_stmt_988__entry__ <-| (merge_stmt_966__exit__)
      if_stmt_989__entry__ <-| (assign_stmt_974_to_assign_stmt_988__exit__)
      merge_stmt_995__entry__ <-| (if_stmt_989__exit__)
      assign_stmt_1000_to_assign_stmt_1042__entry__ <-| (merge_stmt_995__exit__)
      ifx_xthen_ifx_xend <-| (assign_stmt_1000_to_assign_stmt_1042__exit__)
      assign_stmt_1049_to_assign_stmt_1144__entry__ <-| (merge_stmt_1044__exit__)
      ifx_xelse_ifx_xend <-| (assign_stmt_1049_to_assign_stmt_1144__exit__)
      assign_stmt_1152_to_assign_stmt_1159__entry__ <-| (merge_stmt_1146__exit__)
      if_stmt_1160__entry__ <-| (assign_stmt_1152_to_assign_stmt_1159__exit__)
      merge_stmt_1166__entry__ <-| (if_stmt_1160__exit__)
      assign_stmt_1172_to_assign_stmt_1203__entry__ <-| (merge_stmt_1166__exit__)
      if_stmt_1204__entry__ <-| (assign_stmt_1172_to_assign_stmt_1203__exit__)
      merge_stmt_1210__entry__ <-| (if_stmt_1204__exit__)
      ifx_xthen111_ifx_xend116 <-| (merge_stmt_1210__exit__)
      assign_stmt_1248_to_assign_stmt_1262__entry__ <-| (merge_stmt_1212__exit__)
      if_stmt_1263__entry__ <-| (assign_stmt_1248_to_assign_stmt_1262__exit__)
      merge_stmt_1269__entry__ <-| (if_stmt_1263__exit__)
      whilex_xendx_xloopexit_whilex_xend <-| (merge_stmt_1269__exit__)
      assign_stmt_1275__entry__ <-| (merge_stmt_1271__exit__)
      return__ <-| (assign_stmt_1275__exit__)
      merge_stmt_1277__exit__ |-> (branch_block_stmt_786__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 315
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 319
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 335
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 346
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 357
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 368
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 389
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 398
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 412
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 415
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 432
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 435
    // constant-object-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 440
    // constant-object-declarations for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 290
    // constant-object-declarations for block %zeropad3D_A
    //  file prog.linked.opt.aa, line 285
    // constant-declarations for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 290
    // pad
    $constant $W[LOAD_pad_792_word_address_0] : $pointer<memory_space_4> := _b0
    // 		iNsTr_2 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 296
    $constant $W[iNsTr_2_805] : $int<32> := _b00000000000000000000000000010001 // 17
    // ->(iNsTr_2)
    $constant $W[ptr_deref_808_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_808_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_808_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_808_word_offset_3] : $int<9> := _b000000011// 3
    // 		iNsTr_3 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 298
    $constant $W[iNsTr_3_817] : $int<32> := _b00000000000000000000000000001101 // 13
    // ->(iNsTr_3)
    $constant $W[ptr_deref_820_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_820_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_820_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_820_word_offset_3] : $int<9> := _b000000011// 3
    // 		iNsTr_4 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 300
    $constant $W[iNsTr_4_829] : $int<32> := _b00000000000000000000000000000100 // 4
    // ->(iNsTr_4)
    $constant $W[ptr_deref_832_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_5 := @(des_out[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 302
    $constant $W[iNsTr_5_841] : $int<32> := _b00000000000000000000000000000011 // 3
    // ->(iNsTr_5)
    $constant $W[ptr_deref_844_word_offset_0] : $int<7> := _b0000000// 0
    // 		iNsTr_6 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 305
    $constant $W[iNsTr_6_858] : $int<32> := _b00000000000000000000000000001001 // 9
    // ->(iNsTr_6)
    $constant $W[ptr_deref_861_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_861_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_861_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_861_word_offset_3] : $int<9> := _b000000011// 3
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_866_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_871_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 310
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 315
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_890_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 319
    // constant-declarations for phi:  			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 320
    // constant-declarations for phi:  			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 322
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_905_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 324
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_912_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_919_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 330
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 335
    // if-statement  
    //  file prog.linked.opt.aa, line 341
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 346
    // 		iNsTr_17 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 348
    $constant $W[iNsTr_17_974] : $int<32> := _b00000000000000000000000000001101 // 13
    // ->(iNsTr_17)
    $constant $W[ptr_deref_977_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_977_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_977_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_977_word_offset_3] : $int<9> := _b000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 352
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 357
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_1021_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $constant $W[array_obj_ref_1035_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1035_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1035_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1035_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )
    $constant $W[type_cast_1041_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ->(arrayidx)
    $constant $W[ptr_deref_1039_word_offset_0] : $int<14> := _b00000000000000// 0
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 368
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_1100_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89])
    $constant $W[array_obj_ref_1113_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1113_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1113_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1113_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx90)
    $constant $W[ptr_deref_1118_word_offset_0] : $int<14> := _b00000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )
    $constant $W[type_cast_1125_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94])
    $constant $W[array_obj_ref_1138_constant_part_of_offset] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1138_resized_base_address] : $int<14> := _b00000000000000// 0
    $constant $W[array_obj_ref_1138_offset_scale_factor_0] : $int<14> := _b00000000000000// 16384
    $constant $W[array_obj_ref_1138_offset_scale_factor_1] : $int<14> := _b00000000000001// 1
    // ->(arrayidx95)
    $constant $W[ptr_deref_1142_word_offset_0] : $int<14> := _b00000000000000// 0
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 389
    // ($bitcast ($uint<32>) _b00000000000000000000000000000100  )
    $constant $W[type_cast_1150_wire_constant] : $int<32> := _b00000000000000000000000000000100// 4
    // if-statement  
    //  file prog.linked.opt.aa, line 393
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 398
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1170_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 		iNsTr_25 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 401
    $constant $W[iNsTr_25_1180] : $int<32> := _b00000000000000000000000000001101 // 13
    // ->(iNsTr_25)
    $constant $W[ptr_deref_1183_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_1183_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_1183_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_1183_word_offset_3] : $int<9> := _b000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 407
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 412
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 415
    // constant-declarations for phi:  			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 416
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1217_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 418
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1226_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1229_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 420
    // 		iNsTr_23 := @(des_inp[($bitcast ($uint<32>) _b00000000000000000000000000000011  )][($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 423
    $constant $W[iNsTr_23_1248] : $int<32> := _b00000000000000000000000000001001 // 9
    // ->(iNsTr_23)
    $constant $W[ptr_deref_1251_word_offset_0] : $int<9> := _b000000000// 0
    $constant $W[ptr_deref_1251_word_offset_1] : $int<9> := _b000000001// 1
    $constant $W[ptr_deref_1251_word_offset_2] : $int<9> := _b000000010// 2
    $constant $W[ptr_deref_1251_word_offset_3] : $int<9> := _b000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 427
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 432
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 435
    // constant-declarations for block %zeropad3D_A%body%
    //  file prog.linked.opt.aa, line 440
    // block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 290
    // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 292
    // call
    $W[call_789] : $int<8>
    // 		tmp := pad $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 294
    // pad
    $W[LOAD_pad_792_data_0] : $int<8>
    // tmp
    $W[tmp_793] : $int<8>
    // 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 295
    // conv
    $W[conv_797] : $int<32>
    // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 297
    // ->(iNsTr_2)
    $intermediate $W[ptr_deref_808_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_808_root_address] : $int<9>
    $W[ptr_deref_808_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_808_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_808_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_808_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_808_data_0] : $int<8>
    $W[ptr_deref_808_data_1] : $int<8>
    $W[ptr_deref_808_data_2] : $int<8>
    $W[ptr_deref_808_data_3] : $int<8>
    // tmp2
    $W[tmp2_809] : $int<32>
    // 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 299
    // ->(iNsTr_3)
    $intermediate $W[ptr_deref_820_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_820_root_address] : $int<9>
    $W[ptr_deref_820_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_820_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_820_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_820_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_820_data_0] : $int<8>
    $W[ptr_deref_820_data_1] : $int<8>
    $W[ptr_deref_820_data_2] : $int<8>
    $W[ptr_deref_820_data_3] : $int<8>
    // tmp4
    $W[tmp4_821] : $int<32>
    // 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 301
    // ->(iNsTr_4)
    $intermediate $W[ptr_deref_832_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_832_root_address] : $int<7>
    $W[ptr_deref_832_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_832_data_0] : $int<32>
    // tmp8
    $W[tmp8_833] : $int<32>
    // 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 303
    // ->(iNsTr_5)
    $intermediate $W[ptr_deref_844_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_844_root_address] : $int<7>
    $W[ptr_deref_844_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_844_data_0] : $int<32>
    // tmp10
    $W[tmp10_845] : $int<32>
    // 		$volatile mul19 := (tmp10 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 304
    // mul19
    $W[mul19_850] : $int<32>
    // 		tmp22120 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 306
    // ->(iNsTr_6)
    $intermediate $W[ptr_deref_861_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_861_root_address] : $int<9>
    $W[ptr_deref_861_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_861_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_861_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_861_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_861_data_0] : $int<8>
    $W[ptr_deref_861_data_1] : $int<8>
    $W[ptr_deref_861_data_2] : $int<8>
    $W[ptr_deref_861_data_3] : $int<8>
    // tmp22120
    $W[tmp22120_862] : $int<32>
    // 		$volatile mul24121 := (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 307
    // mul24121
    $W[mul24121_868] : $int<32>
    // 		$volatile add122 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 308
    // add122
    $W[add122_874] : $int<32>
    // 		$volatile cmp123 := (tmp22120 == add122) $buffering 1
    //  file prog.linked.opt.aa, line 309
    // cmp123
    $W[cmp123_879] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 310
    // 		$volatile sub := (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 317
    // sub
    $W[sub_892] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 319
    // 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 320
    // ($cast ($uint<32>) tmp22120 )
    $intermediate $W[type_cast_898_wire] : $int<32>
    // ($cast ($uint<32>) tmp22 )
    $intermediate $W[type_cast_900_wire] : $int<32>
    // tmp31
    $W[tmp31_895] : $int<32>
    // 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 322
    // ($cast ($uint<32>) ix_x0 )
    $intermediate $W[type_cast_907_wire] : $int<32>
    // ix_x1126
    $W[ix_x1126_901] : $int<32>
    // 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 324
    // ($cast ($uint<32>) kx_x1 )
    $intermediate $W[type_cast_914_wire] : $int<32>
    // kx_x0125
    $W[kx_x0125_908] : $int<32>
    // 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<32>) jx_x0 )
    $intermediate $W[type_cast_921_wire] : $int<32>
    // jx_x1124
    $W[jx_x1124_915] : $int<32>
    // 		$volatile cmp28 := (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub )) $buffering 1
    //  file prog.linked.opt.aa, line 329
    // ($bitcast ($int<32>) ix_x1126 )
    $intermediate $W[type_cast_926_wire] : $int<32>
    // ($bitcast ($int<32>) sub )
    $intermediate $W[type_cast_928_wire] : $int<32>
    // cmp28
    $W[cmp28_930] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 330
    // 		$volatile sub34 := (sub + tmp31) $buffering 1
    //  file prog.linked.opt.aa, line 337
    // sub34
    $W[sub34_942] : $int<32>
    // 		$volatile cmp35x_xnot := (ix_x1126 <= sub34) $buffering 1
    //  file prog.linked.opt.aa, line 338
    // cmp35x_xnot
    $W[cmp35x_xnot_947] : $int<1>
    // 		$volatile cmp41 := (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub )) $buffering 1
    //  file prog.linked.opt.aa, line 339
    // ($bitcast ($int<32>) jx_x1124 )
    $intermediate $W[type_cast_950_wire] : $int<32>
    // ($bitcast ($int<32>) sub )
    $intermediate $W[type_cast_952_wire] : $int<32>
    // cmp41
    $W[cmp41_954] : $int<1>
    // 		$volatile orx_xcond := (cmp35x_xnot & cmp41) $buffering 1
    //  file prog.linked.opt.aa, line 340
    // orx_xcond
    $W[orx_xcond_959] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 341
    // 		tmp45 := ->(iNsTr_17) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 349
    // ->(iNsTr_17)
    $intermediate $W[ptr_deref_977_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_977_root_address] : $int<9>
    $W[ptr_deref_977_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_977_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_977_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_977_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_977_data_0] : $int<8>
    $W[ptr_deref_977_data_1] : $int<8>
    $W[ptr_deref_977_data_2] : $int<8>
    $W[ptr_deref_977_data_3] : $int<8>
    // tmp45
    $W[tmp45_978] : $int<32>
    // 		$volatile sub48 := (sub + tmp45) $buffering 1
    //  file prog.linked.opt.aa, line 350
    // sub48
    $W[sub48_983] : $int<32>
    // 		$volatile cmp49 := (jx_x1124 > sub48) $buffering 1
    //  file prog.linked.opt.aa, line 351
    // cmp49
    $W[cmp49_988] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 352
    // 		$volatile mul55 := (jx_x1124 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 359
    // mul55
    $W[mul55_1000] : $int<32>
    // 		$volatile mul59 := (ix_x1126 * mul19) $buffering 1
    //  file prog.linked.opt.aa, line 360
    // mul59
    $W[mul59_1005] : $int<32>
    // 		$volatile add56 := (kx_x0125 + mul55) $buffering 1
    //  file prog.linked.opt.aa, line 361
    // add56
    $W[add56_1010] : $int<32>
    // 		$volatile add60 := (add56 + mul59) $buffering 1
    //  file prog.linked.opt.aa, line 362
    // add60
    $W[add60_1015] : $int<32>
    // 		$volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 363
    // ($bitcast ($int<32>) add60 )
    $intermediate $W[type_cast_1018_wire] : $int<32>
    // (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_1022_wire] : $int<32>
    // shr
    $W[shr_1024] : $int<32>
    // 		idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 364
    // ($cast ($int<64>) shr )
    $intermediate $W[type_cast_1028_wire] : $int<64>
    // idxprom
    $W[idxprom_1030] : $int<64>
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 365
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom])
    $intermediate $W[R_idxprom_1034_resized] : $int<14>
    $intermediate $W[R_idxprom_1034_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1035_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1035_root_address] : $int<14>
    // arrayidx
    $W[arrayidx_1037] : $int<32>
    // 		->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 366
    // ->(arrayidx)
    $intermediate $W[ptr_deref_1039_wire] : $int<64>
    $intermediate $W[ptr_deref_1039_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1039_root_address] : $int<14>
    $W[ptr_deref_1039_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1039_data_0] : $int<64>
    // 		$volatile sub67 := (jx_x1124 - conv) $buffering 1
    //  file prog.linked.opt.aa, line 370
    // sub67
    $W[sub67_1049] : $int<32>
    // 		$volatile sub73 := (ix_x1126 - conv) $buffering 1
    //  file prog.linked.opt.aa, line 371
    // sub73
    $W[sub73_1054] : $int<32>
    // 		$volatile mul74 := (tmp4 * sub73) $buffering 1
    //  file prog.linked.opt.aa, line 372
    // mul74
    $W[mul74_1059] : $int<32>
    // 		$volatile tmp118 := (mul74 + sub67) $buffering 1
    //  file prog.linked.opt.aa, line 373
    // tmp118
    $W[tmp118_1064] : $int<32>
    // 		$volatile tmp119 := (tmp118 * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 374
    // tmp119
    $W[tmp119_1069] : $int<32>
    // 		$volatile add75 := (tmp119 + kx_x0125) $buffering 1
    //  file prog.linked.opt.aa, line 375
    // add75
    $W[add75_1074] : $int<32>
    // 		$volatile mul81 := (jx_x1124 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 376
    // mul81
    $W[mul81_1079] : $int<32>
    // 		$volatile mul85 := (ix_x1126 * mul19) $buffering 1
    //  file prog.linked.opt.aa, line 377
    // mul85
    $W[mul85_1084] : $int<32>
    // 		$volatile add82 := (kx_x0125 + mul81) $buffering 1
    //  file prog.linked.opt.aa, line 378
    // add82
    $W[add82_1089] : $int<32>
    // 		$volatile add86 := (add82 + mul85) $buffering 1
    //  file prog.linked.opt.aa, line 379
    // add86
    $W[add86_1094] : $int<32>
    // 		$volatile shr88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 380
    // ($bitcast ($int<32>) add75 )
    $intermediate $W[type_cast_1097_wire] : $int<32>
    // (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_1101_wire] : $int<32>
    // shr88
    $W[shr88_1103] : $int<32>
    // 		idxprom89 := ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 381
    // ($cast ($int<64>) shr88 )
    $intermediate $W[type_cast_1106_wire] : $int<64>
    // idxprom89
    $W[idxprom89_1108] : $int<64>
    // 		arrayidx90 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 382
    // @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89])
    $intermediate $W[R_idxprom89_1112_resized] : $int<14>
    $intermediate $W[R_idxprom89_1112_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1113_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1113_root_address] : $int<14>
    // arrayidx90
    $W[arrayidx90_1115] : $int<32>
    // 		tmp91 := ->(arrayidx90) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 383
    // ->(arrayidx90)
    $intermediate $W[ptr_deref_1118_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1118_root_address] : $int<14>
    $W[ptr_deref_1118_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_1118_data_0] : $int<64>
    // tmp91
    $W[tmp91_1119] : $int<64>
    // 		$volatile shr93 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 384
    // ($bitcast ($int<32>) add86 )
    $intermediate $W[type_cast_1122_wire] : $int<32>
    // (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $intermediate $W[ASHR_i32_i32_1126_wire] : $int<32>
    // shr93
    $W[shr93_1128] : $int<32>
    // 		idxprom94 := ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 385
    // ($cast ($int<64>) shr93 )
    $intermediate $W[type_cast_1131_wire] : $int<64>
    // idxprom94
    $W[idxprom94_1133] : $int<64>
    // 		arrayidx95 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 386
    // @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94])
    $intermediate $W[R_idxprom94_1137_resized] : $int<14>
    $intermediate $W[R_idxprom94_1137_scaled] : $int<14>
    $intermediate $W[array_obj_ref_1138_final_offset] : $int<14>
    $intermediate $W[array_obj_ref_1138_root_address] : $int<14>
    // arrayidx95
    $W[arrayidx95_1140] : $int<32>
    // 		->(arrayidx95) := tmp91 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 387
    // ->(arrayidx95)
    $intermediate $W[ptr_deref_1142_wire] : $int<64>
    $intermediate $W[ptr_deref_1142_resized_base_address] : $int<14>
    $intermediate $W[ptr_deref_1142_root_address] : $int<14>
    $W[ptr_deref_1142_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_1142_data_0] : $int<64>
    // 		$volatile add97 := (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 391
    // add97
    $W[add97_1152] : $int<32>
    // 		$volatile cmp100 := (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 )) $buffering 1
    //  file prog.linked.opt.aa, line 392
    // ($bitcast ($int<32>) add97 )
    $intermediate $W[type_cast_1155_wire] : $int<32>
    // ($bitcast ($int<32>) tmp2 )
    $intermediate $W[type_cast_1157_wire] : $int<32>
    // cmp100
    $W[cmp100_1159] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 393
    // 		$volatile inc := (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 400
    // inc
    $W[inc_1172] : $int<32>
    // 		tmp105 := ->(iNsTr_25) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 402
    // ->(iNsTr_25)
    $intermediate $W[ptr_deref_1183_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_1183_root_address] : $int<9>
    $W[ptr_deref_1183_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1183_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_1183_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_1183_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_1183_data_0] : $int<8>
    $W[ptr_deref_1183_data_1] : $int<8>
    $W[ptr_deref_1183_data_2] : $int<8>
    $W[ptr_deref_1183_data_3] : $int<8>
    // tmp105
    $W[tmp105_1184] : $int<32>
    // 		$volatile add108 := (tmp105 + mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 403
    // add108
    $W[add108_1189] : $int<32>
    // 		$volatile cmp109 := (inc == add108) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // cmp109
    $W[cmp109_1194] : $int<1>
    // 		inc114 := ($cast ($uint<32>) cmp109 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 405
    // inc114
    $W[inc114_1198] : $int<32>
    // 		$volatile inc114x_xix_x1 := (inc114 + ix_x1126) $buffering 1
    //  file prog.linked.opt.aa, line 406
    // inc114x_xix_x1
    $W[inc114x_xix_x1_1203] : $int<32>
    // if statement  
    //  file prog.linked.opt.aa, line 407
    // merge-statement  
    //  file prog.linked.opt.aa, line 415
    // 			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 416
    // ($cast ($uint<32>) inc )
    $intermediate $W[type_cast_1219_wire] : $int<32>
    // ($cast ($uint<32>) jx_x1124 )
    $intermediate $W[type_cast_1221_wire] : $int<32>
    // jx_x0
    $W[jx_x0_1213] : $int<32>
    // 			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 418
    // ($cast ($uint<32>) add97 )
    $intermediate $W[type_cast_1231_wire] : $int<32>
    // kx_x1
    $W[kx_x1_1222] : $int<32>
    // 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 420
    // ($cast ($uint<32>) inc114x_xix_x1 )
    $intermediate $W[type_cast_1235_wire] : $int<32>
    // ($cast ($uint<32>) inc114x_xix_x1 )
    $intermediate $W[type_cast_1237_wire] : $int<32>
    // ($cast ($uint<32>) ix_x1126 )
    $intermediate $W[type_cast_1239_wire] : $int<32>
    // ix_x0
    $W[ix_x0_1232] : $int<32>
    // 		tmp22 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 424
    // ->(iNsTr_23)
    $intermediate $W[ptr_deref_1251_resized_base_address] : $int<9>
    $intermediate $W[ptr_deref_1251_root_address] : $int<9>
    $W[ptr_deref_1251_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1251_word_address_1] : $pointer<memory_space_2>
    $W[ptr_deref_1251_word_address_2] : $pointer<memory_space_2>
    $W[ptr_deref_1251_word_address_3] : $pointer<memory_space_2>
    $W[ptr_deref_1251_data_0] : $int<8>
    $W[ptr_deref_1251_data_1] : $int<8>
    $W[ptr_deref_1251_data_2] : $int<8>
    $W[ptr_deref_1251_data_3] : $int<8>
    // tmp22
    $W[tmp22_1252] : $int<32>
    // 		$volatile add := (tmp22 + mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 425
    // add
    $W[add_1257] : $int<32>
    // 		$volatile cmp := (ix_x0 < add) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // cmp
    $W[cmp_1262] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 427
    // 		Block0_complete := call $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 438
    // Block0_complete
    // datapath-instances for block %zeropad3D_A%body
    //  file prog.linked.opt.aa, line 290
    // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 292
    // Block0_starting
    $ioport $in [RPIPE_Block0_starting_788_inst] (Block0_starting) (call_789) 
    $buffering $out RPIPE_Block0_starting_788_inst call_789 1
    // 		tmp := pad $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 294
    // pad
    $load [LOAD_pad_792_load_0] $from memory_space_4 (LOAD_pad_792_word_address_0) (LOAD_pad_792_data_0) 
    $delay LOAD_pad_792_load_0 4
    &/ [LOAD_pad_792_gather_scatter] (LOAD_pad_792_data_0) (tmp_793) 
    $flowthrough 
    // 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 295
    // ($cast ($uint<32>) tmp )
    # := [type_cast_796_inst] (tmp_793) (conv_797)    
    $buffering  $out type_cast_796_inst conv_797 1
    $delay type_cast_796_inst 1
    // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 297
    // ->(iNsTr_2)
    &/ [ptr_deref_808_base_resize] (iNsTr_2_805) (ptr_deref_808_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_808_root_address_inst] (ptr_deref_808_resized_base_address) (ptr_deref_808_root_address) 
    $flowthrough 
    +[ptr_deref_808_addr_0] (ptr_deref_808_root_address ptr_deref_808_word_offset_0) (ptr_deref_808_word_address_0)   
    $delay ptr_deref_808_addr_0 2
    +[ptr_deref_808_addr_1] (ptr_deref_808_root_address ptr_deref_808_word_offset_1) (ptr_deref_808_word_address_1)   
    $delay ptr_deref_808_addr_1 2
    +[ptr_deref_808_addr_2] (ptr_deref_808_root_address ptr_deref_808_word_offset_2) (ptr_deref_808_word_address_2)   
    $delay ptr_deref_808_addr_2 2
    +[ptr_deref_808_addr_3] (ptr_deref_808_root_address ptr_deref_808_word_offset_3) (ptr_deref_808_word_address_3)   
    $delay ptr_deref_808_addr_3 2
    $load [ptr_deref_808_load_0] $from memory_space_2 (ptr_deref_808_word_address_0) (ptr_deref_808_data_0) 
    $delay ptr_deref_808_load_0 6
    $load [ptr_deref_808_load_1] $from memory_space_2 (ptr_deref_808_word_address_1) (ptr_deref_808_data_1) 
    $delay ptr_deref_808_load_1 6
    $load [ptr_deref_808_load_2] $from memory_space_2 (ptr_deref_808_word_address_2) (ptr_deref_808_data_2) 
    $delay ptr_deref_808_load_2 6
    $load [ptr_deref_808_load_3] $from memory_space_2 (ptr_deref_808_word_address_3) (ptr_deref_808_data_3) 
    $delay ptr_deref_808_load_3 6
    &/ [ptr_deref_808_gather_scatter] (ptr_deref_808_data_3 ptr_deref_808_data_2 ptr_deref_808_data_1 ptr_deref_808_data_0) (tmp2_809) 
    $flowthrough 
    // 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 299
    // ->(iNsTr_3)
    &/ [ptr_deref_820_base_resize] (iNsTr_3_817) (ptr_deref_820_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_820_root_address_inst] (ptr_deref_820_resized_base_address) (ptr_deref_820_root_address) 
    $flowthrough 
    +[ptr_deref_820_addr_0] (ptr_deref_820_root_address ptr_deref_820_word_offset_0) (ptr_deref_820_word_address_0)   
    $delay ptr_deref_820_addr_0 2
    +[ptr_deref_820_addr_1] (ptr_deref_820_root_address ptr_deref_820_word_offset_1) (ptr_deref_820_word_address_1)   
    $delay ptr_deref_820_addr_1 2
    +[ptr_deref_820_addr_2] (ptr_deref_820_root_address ptr_deref_820_word_offset_2) (ptr_deref_820_word_address_2)   
    $delay ptr_deref_820_addr_2 2
    +[ptr_deref_820_addr_3] (ptr_deref_820_root_address ptr_deref_820_word_offset_3) (ptr_deref_820_word_address_3)   
    $delay ptr_deref_820_addr_3 2
    $load [ptr_deref_820_load_0] $from memory_space_2 (ptr_deref_820_word_address_0) (ptr_deref_820_data_0) 
    $delay ptr_deref_820_load_0 6
    $load [ptr_deref_820_load_1] $from memory_space_2 (ptr_deref_820_word_address_1) (ptr_deref_820_data_1) 
    $delay ptr_deref_820_load_1 6
    $load [ptr_deref_820_load_2] $from memory_space_2 (ptr_deref_820_word_address_2) (ptr_deref_820_data_2) 
    $delay ptr_deref_820_load_2 6
    $load [ptr_deref_820_load_3] $from memory_space_2 (ptr_deref_820_word_address_3) (ptr_deref_820_data_3) 
    $delay ptr_deref_820_load_3 6
    &/ [ptr_deref_820_gather_scatter] (ptr_deref_820_data_3 ptr_deref_820_data_2 ptr_deref_820_data_1 ptr_deref_820_data_0) (tmp4_821) 
    $flowthrough 
    // 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 301
    // ->(iNsTr_4)
    &/ [ptr_deref_832_base_resize] (iNsTr_4_829) (ptr_deref_832_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_832_root_address_inst] (ptr_deref_832_resized_base_address) (ptr_deref_832_root_address) 
    $flowthrough 
    &/ [ptr_deref_832_addr_0] (ptr_deref_832_root_address) (ptr_deref_832_word_address_0) 
    $flowthrough 
    $load [ptr_deref_832_load_0] $from memory_space_3 (ptr_deref_832_word_address_0) (ptr_deref_832_data_0) 
    $delay ptr_deref_832_load_0 6
    &/ [ptr_deref_832_gather_scatter] (ptr_deref_832_data_0) (tmp8_833) 
    $flowthrough 
    // 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 303
    // ->(iNsTr_5)
    &/ [ptr_deref_844_base_resize] (iNsTr_5_841) (ptr_deref_844_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_844_root_address_inst] (ptr_deref_844_resized_base_address) (ptr_deref_844_root_address) 
    $flowthrough 
    &/ [ptr_deref_844_addr_0] (ptr_deref_844_root_address) (ptr_deref_844_word_address_0) 
    $flowthrough 
    $load [ptr_deref_844_load_0] $from memory_space_3 (ptr_deref_844_word_address_0) (ptr_deref_844_data_0) 
    $delay ptr_deref_844_load_0 6
    &/ [ptr_deref_844_gather_scatter] (ptr_deref_844_data_0) (tmp10_845) 
    $flowthrough 
    // 		$volatile mul19 := (tmp10 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 304
    // (tmp10 * tmp8)
    *[MUL_u32_u32_849_inst] (tmp10_845 tmp8_833) (mul19_850)   $flowthrough 
    $delay MUL_u32_u32_849_inst 0
    // 		tmp22120 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 306
    // ->(iNsTr_6)
    &/ [ptr_deref_861_base_resize] (iNsTr_6_858) (ptr_deref_861_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_861_root_address_inst] (ptr_deref_861_resized_base_address) (ptr_deref_861_root_address) 
    $flowthrough 
    +[ptr_deref_861_addr_0] (ptr_deref_861_root_address ptr_deref_861_word_offset_0) (ptr_deref_861_word_address_0)   
    $delay ptr_deref_861_addr_0 2
    +[ptr_deref_861_addr_1] (ptr_deref_861_root_address ptr_deref_861_word_offset_1) (ptr_deref_861_word_address_1)   
    $delay ptr_deref_861_addr_1 2
    +[ptr_deref_861_addr_2] (ptr_deref_861_root_address ptr_deref_861_word_offset_2) (ptr_deref_861_word_address_2)   
    $delay ptr_deref_861_addr_2 2
    +[ptr_deref_861_addr_3] (ptr_deref_861_root_address ptr_deref_861_word_offset_3) (ptr_deref_861_word_address_3)   
    $delay ptr_deref_861_addr_3 2
    $load [ptr_deref_861_load_0] $from memory_space_2 (ptr_deref_861_word_address_0) (ptr_deref_861_data_0) 
    $delay ptr_deref_861_load_0 6
    $load [ptr_deref_861_load_1] $from memory_space_2 (ptr_deref_861_word_address_1) (ptr_deref_861_data_1) 
    $delay ptr_deref_861_load_1 6
    $load [ptr_deref_861_load_2] $from memory_space_2 (ptr_deref_861_word_address_2) (ptr_deref_861_data_2) 
    $delay ptr_deref_861_load_2 6
    $load [ptr_deref_861_load_3] $from memory_space_2 (ptr_deref_861_word_address_3) (ptr_deref_861_data_3) 
    $delay ptr_deref_861_load_3 6
    &/ [ptr_deref_861_gather_scatter] (ptr_deref_861_data_3 ptr_deref_861_data_2 ptr_deref_861_data_1 ptr_deref_861_data_0) (tmp22120_862) 
    $flowthrough 
    // 		$volatile mul24121 := (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 307
    // (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_867_inst] (conv_797 type_cast_866_wire_constant) (mul24121_868)   $flowthrough 
    $delay SHL_u32_u32_867_inst 0
    // 		$volatile add122 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 308
    // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121)
    -[SUB_u32_u32_873_inst] (type_cast_871_wire_constant mul24121_868) (add122_874)   $flowthrough 
    $delay SUB_u32_u32_873_inst 0
    // 		$volatile cmp123 := (tmp22120 == add122) $buffering 1
    //  file prog.linked.opt.aa, line 309
    // (tmp22120 == add122)
    ==[EQ_u32_u1_878_inst] (tmp22120_862 add122_874) (cmp123_879)   $flowthrough 
    $delay EQ_u32_u1_878_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 310
    ==0? [if_stmt_880_branch] (cmp123_879)
    // 		$volatile sub := (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
    //  file prog.linked.opt.aa, line 317
    // (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_891_inst] (conv_797 type_cast_890_wire_constant) (sub_892)   $flowthrough 
    $delay ADD_u32_u32_891_inst 0
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 319
    // 			$phi tmp31 := 			  ($cast ($uint<32>) tmp22120 ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) tmp22 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 320
    // ($cast ($uint<32>) tmp22120 )
    # := [type_cast_898_inst] (tmp22120_862) (type_cast_898_wire)    
    $buffering  $out type_cast_898_inst type_cast_898_wire 1
    $delay type_cast_898_inst 1
    // ($cast ($uint<32>) tmp22 )
    # := [type_cast_900_inst] (tmp22_1252) (type_cast_900_wire)    
    $buffering  $out type_cast_900_inst type_cast_900_wire 1
    $delay type_cast_900_inst 1
    $phi [phi_stmt_895] (type_cast_898_wire type_cast_900_wire) ( tmp31_895 ) 
    // 			$phi ix_x1126 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) ix_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 322
    // ($cast ($uint<32>) ix_x0 )
    # := [type_cast_907_inst] (ix_x0_1232) (type_cast_907_wire)    
    $buffering  $out type_cast_907_inst type_cast_907_wire 1
    $delay type_cast_907_inst 1
    $phi [phi_stmt_901] (type_cast_905_wire_constant type_cast_907_wire) ( ix_x1126_901 ) 
    // 			$phi kx_x0125 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) kx_x1 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 324
    // ($cast ($uint<32>) kx_x1 )
    # := [type_cast_914_inst] (kx_x1_1222) (type_cast_914_wire)    
    $buffering  $out type_cast_914_inst type_cast_914_wire 1
    $delay type_cast_914_inst 1
    $phi [phi_stmt_908] (type_cast_912_wire_constant type_cast_914_wire) ( kx_x0125_908 ) 
    // 			$phi jx_x1124 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   bbx_xnph_whilex_xbody 			  ($cast ($uint<32>) jx_x0 ) $on   ifx_xend116_whilex_xbody 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 326
    // ($cast ($uint<32>) jx_x0 )
    # := [type_cast_921_inst] (jx_x0_1213) (type_cast_921_wire)    
    $buffering  $out type_cast_921_inst type_cast_921_wire 1
    $delay type_cast_921_inst 1
    $phi [phi_stmt_915] (type_cast_919_wire_constant type_cast_921_wire) ( jx_x1124_915 ) 
    // 		$volatile cmp28 := (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub )) $buffering 1
    //  file prog.linked.opt.aa, line 329
    // ($bitcast ($int<32>) ix_x1126 )
    # := [type_cast_926_inst] (ix_x1126_901) (type_cast_926_wire)   $flowthrough
    $delay type_cast_926_inst 0
    // ($bitcast ($int<32>) sub )
    # := [type_cast_928_inst] (sub_892) (type_cast_928_wire)   $flowthrough
    $delay type_cast_928_inst 0
    // (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub ))
    $S>$S[SGT_i32_u1_929_inst] (type_cast_926_wire type_cast_928_wire) (cmp28_930)   $flowthrough 
    $delay SGT_i32_u1_929_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 330
    ==0? [if_stmt_931_branch] (cmp28_930)
    // 		$volatile sub34 := (sub + tmp31) $buffering 1
    //  file prog.linked.opt.aa, line 337
    // (sub + tmp31)
    +[ADD_u32_u32_941_inst] (sub_892 tmp31_895) (sub34_942)   $flowthrough 
    $delay ADD_u32_u32_941_inst 0
    // 		$volatile cmp35x_xnot := (ix_x1126 <= sub34) $buffering 1
    //  file prog.linked.opt.aa, line 338
    // (ix_x1126 <= sub34)
    <=[ULE_u32_u1_946_inst] (ix_x1126_901 sub34_942) (cmp35x_xnot_947)   $flowthrough 
    $delay ULE_u32_u1_946_inst 0
    // 		$volatile cmp41 := (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub )) $buffering 1
    //  file prog.linked.opt.aa, line 339
    // ($bitcast ($int<32>) jx_x1124 )
    # := [type_cast_950_inst] (jx_x1124_915) (type_cast_950_wire)   $flowthrough
    $delay type_cast_950_inst 0
    // ($bitcast ($int<32>) sub )
    # := [type_cast_952_inst] (sub_892) (type_cast_952_wire)   $flowthrough
    $delay type_cast_952_inst 0
    // (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub ))
    $S>$S[SGT_i32_u1_953_inst] (type_cast_950_wire type_cast_952_wire) (cmp41_954)   $flowthrough 
    $delay SGT_i32_u1_953_inst 0
    // 		$volatile orx_xcond := (cmp35x_xnot & cmp41) $buffering 1
    //  file prog.linked.opt.aa, line 340
    // (cmp35x_xnot & cmp41)
    &[AND_u1_u1_958_inst] (cmp35x_xnot_947 cmp41_954) (orx_xcond_959)   $flowthrough 
    $delay AND_u1_u1_958_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 341
    ==0? [if_stmt_960_branch] (orx_xcond_959)
    // 		tmp45 := ->(iNsTr_17) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 349
    // ->(iNsTr_17)
    &/ [ptr_deref_977_base_resize] (iNsTr_17_974) (ptr_deref_977_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_977_root_address_inst] (ptr_deref_977_resized_base_address) (ptr_deref_977_root_address) 
    $flowthrough 
    +[ptr_deref_977_addr_0] (ptr_deref_977_root_address ptr_deref_977_word_offset_0) (ptr_deref_977_word_address_0)   
    $delay ptr_deref_977_addr_0 2
    +[ptr_deref_977_addr_1] (ptr_deref_977_root_address ptr_deref_977_word_offset_1) (ptr_deref_977_word_address_1)   
    $delay ptr_deref_977_addr_1 2
    +[ptr_deref_977_addr_2] (ptr_deref_977_root_address ptr_deref_977_word_offset_2) (ptr_deref_977_word_address_2)   
    $delay ptr_deref_977_addr_2 2
    +[ptr_deref_977_addr_3] (ptr_deref_977_root_address ptr_deref_977_word_offset_3) (ptr_deref_977_word_address_3)   
    $delay ptr_deref_977_addr_3 2
    $load [ptr_deref_977_load_0] $from memory_space_2 (ptr_deref_977_word_address_0) (ptr_deref_977_data_0) 
    $delay ptr_deref_977_load_0 6
    $load [ptr_deref_977_load_1] $from memory_space_2 (ptr_deref_977_word_address_1) (ptr_deref_977_data_1) 
    $delay ptr_deref_977_load_1 6
    $load [ptr_deref_977_load_2] $from memory_space_2 (ptr_deref_977_word_address_2) (ptr_deref_977_data_2) 
    $delay ptr_deref_977_load_2 6
    $load [ptr_deref_977_load_3] $from memory_space_2 (ptr_deref_977_word_address_3) (ptr_deref_977_data_3) 
    $delay ptr_deref_977_load_3 6
    &/ [ptr_deref_977_gather_scatter] (ptr_deref_977_data_3 ptr_deref_977_data_2 ptr_deref_977_data_1 ptr_deref_977_data_0) (tmp45_978) 
    $flowthrough 
    // 		$volatile sub48 := (sub + tmp45) $buffering 1
    //  file prog.linked.opt.aa, line 350
    // (sub + tmp45)
    +[ADD_u32_u32_982_inst] (sub_892 tmp45_978) (sub48_983)   $flowthrough 
    $delay ADD_u32_u32_982_inst 0
    // 		$volatile cmp49 := (jx_x1124 > sub48) $buffering 1
    //  file prog.linked.opt.aa, line 351
    // (jx_x1124 > sub48)
    >[UGT_u32_u1_987_inst] (jx_x1124_915 sub48_983) (cmp49_988)   $flowthrough 
    $delay UGT_u32_u1_987_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 352
    ==0? [if_stmt_989_branch] (cmp49_988)
    // 		$volatile mul55 := (jx_x1124 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 359
    // (jx_x1124 * tmp8)
    *[MUL_u32_u32_999_inst] (jx_x1124_915 tmp8_833) (mul55_1000)   $flowthrough 
    $delay MUL_u32_u32_999_inst 0
    // 		$volatile mul59 := (ix_x1126 * mul19) $buffering 1
    //  file prog.linked.opt.aa, line 360
    // (ix_x1126 * mul19)
    *[MUL_u32_u32_1004_inst] (ix_x1126_901 mul19_850) (mul59_1005)   $flowthrough 
    $delay MUL_u32_u32_1004_inst 0
    // 		$volatile add56 := (kx_x0125 + mul55) $buffering 1
    //  file prog.linked.opt.aa, line 361
    // (kx_x0125 + mul55)
    +[ADD_u32_u32_1009_inst] (kx_x0125_908 mul55_1000) (add56_1010)   $flowthrough 
    $delay ADD_u32_u32_1009_inst 0
    // 		$volatile add60 := (add56 + mul59) $buffering 1
    //  file prog.linked.opt.aa, line 362
    // (add56 + mul59)
    +[ADD_u32_u32_1014_inst] (add56_1010 mul59_1005) (add60_1015)   $flowthrough 
    $delay ADD_u32_u32_1014_inst 0
    // 		$volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 363
    // ($bitcast ($int<32>) add60 )
    # := [type_cast_1018_inst] (add60_1015) (type_cast_1018_wire)   $flowthrough
    $delay type_cast_1018_inst 0
    // (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_1022_inst] (type_cast_1018_wire type_cast_1021_wire_constant) (ASHR_i32_i32_1022_wire)   $flowthrough 
    $delay ASHR_i32_i32_1022_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_1023_inst] (ASHR_i32_i32_1022_wire) (shr_1024)   $flowthrough
    $delay type_cast_1023_inst 0
    // 		idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 364
    // ($cast ($int<64>) shr )
    $S:=$U [type_cast_1028_inst] (shr_1024) (type_cast_1028_wire)   $flowthrough
    $delay type_cast_1028_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
    # := [type_cast_1029_inst] (type_cast_1028_wire) (idxprom_1030)    
    $buffering  $out type_cast_1029_inst idxprom_1030 1
    $delay type_cast_1029_inst 1
    // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 365
    &/ [array_obj_ref_1035_index_1_resize] (idxprom_1030) (R_idxprom_1034_resized) 
    $flowthrough 
    &/ [array_obj_ref_1035_index_1_rename] (R_idxprom_1034_resized) (R_idxprom_1034_scaled) 
    $flowthrough 
    +[array_obj_ref_1035_index_offset] (R_idxprom_1034_scaled array_obj_ref_1035_constant_part_of_offset) (array_obj_ref_1035_final_offset)   
    $delay array_obj_ref_1035_index_offset 2
    &/ [array_obj_ref_1035_root_address_inst] (array_obj_ref_1035_final_offset) (array_obj_ref_1035_root_address) 
    $flowthrough 
    # := [addr_of_1036_final_reg] (array_obj_ref_1035_root_address) (arrayidx_1037)    
    $buffering  $out addr_of_1036_final_reg arrayidx_1037 1
    // 		->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 366
    // ->(arrayidx)
    &/ [ptr_deref_1039_base_resize] (arrayidx_1037) (ptr_deref_1039_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1039_root_address_inst] (ptr_deref_1039_resized_base_address) (ptr_deref_1039_root_address) 
    $flowthrough 
    &/ [ptr_deref_1039_addr_0] (ptr_deref_1039_root_address) (ptr_deref_1039_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1039_store_0] $to memory_space_0 (ptr_deref_1039_word_address_0 ptr_deref_1039_data_0) 
    $delay ptr_deref_1039_store_0 6
    &/ [ptr_deref_1039_gather_scatter] (type_cast_1041_wire_constant) (ptr_deref_1039_data_0) 
    $flowthrough 
    // 		$volatile sub67 := (jx_x1124 - conv) $buffering 1
    //  file prog.linked.opt.aa, line 370
    // (jx_x1124 - conv)
    -[SUB_u32_u32_1048_inst] (jx_x1124_915 conv_797) (sub67_1049)   $flowthrough 
    $delay SUB_u32_u32_1048_inst 0
    // 		$volatile sub73 := (ix_x1126 - conv) $buffering 1
    //  file prog.linked.opt.aa, line 371
    // (ix_x1126 - conv)
    -[SUB_u32_u32_1053_inst] (ix_x1126_901 conv_797) (sub73_1054)   $flowthrough 
    $delay SUB_u32_u32_1053_inst 0
    // 		$volatile mul74 := (tmp4 * sub73) $buffering 1
    //  file prog.linked.opt.aa, line 372
    // (tmp4 * sub73)
    *[MUL_u32_u32_1058_inst] (tmp4_821 sub73_1054) (mul74_1059)   $flowthrough 
    $delay MUL_u32_u32_1058_inst 0
    // 		$volatile tmp118 := (mul74 + sub67) $buffering 1
    //  file prog.linked.opt.aa, line 373
    // (mul74 + sub67)
    +[ADD_u32_u32_1063_inst] (mul74_1059 sub67_1049) (tmp118_1064)   $flowthrough 
    $delay ADD_u32_u32_1063_inst 0
    // 		$volatile tmp119 := (tmp118 * tmp2) $buffering 1
    //  file prog.linked.opt.aa, line 374
    // (tmp118 * tmp2)
    *[MUL_u32_u32_1068_inst] (tmp118_1064 tmp2_809) (tmp119_1069)   $flowthrough 
    $delay MUL_u32_u32_1068_inst 0
    // 		$volatile add75 := (tmp119 + kx_x0125) $buffering 1
    //  file prog.linked.opt.aa, line 375
    // (tmp119 + kx_x0125)
    +[ADD_u32_u32_1073_inst] (tmp119_1069 kx_x0125_908) (add75_1074)   $flowthrough 
    $delay ADD_u32_u32_1073_inst 0
    // 		$volatile mul81 := (jx_x1124 * tmp8) $buffering 1
    //  file prog.linked.opt.aa, line 376
    // (jx_x1124 * tmp8)
    *[MUL_u32_u32_1078_inst] (jx_x1124_915 tmp8_833) (mul81_1079)   $flowthrough 
    $delay MUL_u32_u32_1078_inst 0
    // 		$volatile mul85 := (ix_x1126 * mul19) $buffering 1
    //  file prog.linked.opt.aa, line 377
    // (ix_x1126 * mul19)
    *[MUL_u32_u32_1083_inst] (ix_x1126_901 mul19_850) (mul85_1084)   $flowthrough 
    $delay MUL_u32_u32_1083_inst 0
    // 		$volatile add82 := (kx_x0125 + mul81) $buffering 1
    //  file prog.linked.opt.aa, line 378
    // (kx_x0125 + mul81)
    +[ADD_u32_u32_1088_inst] (kx_x0125_908 mul81_1079) (add82_1089)   $flowthrough 
    $delay ADD_u32_u32_1088_inst 0
    // 		$volatile add86 := (add82 + mul85) $buffering 1
    //  file prog.linked.opt.aa, line 379
    // (add82 + mul85)
    +[ADD_u32_u32_1093_inst] (add82_1089 mul85_1084) (add86_1094)   $flowthrough 
    $delay ADD_u32_u32_1093_inst 0
    // 		$volatile shr88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 380
    // ($bitcast ($int<32>) add75 )
    # := [type_cast_1097_inst] (add75_1074) (type_cast_1097_wire)   $flowthrough
    $delay type_cast_1097_inst 0
    // (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_1101_inst] (type_cast_1097_wire type_cast_1100_wire_constant) (ASHR_i32_i32_1101_wire)   $flowthrough 
    $delay ASHR_i32_i32_1101_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_1102_inst] (ASHR_i32_i32_1101_wire) (shr88_1103)   $flowthrough
    $delay type_cast_1102_inst 0
    // 		idxprom89 := ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 381
    // ($cast ($int<64>) shr88 )
    $S:=$U [type_cast_1106_inst] (shr88_1103) (type_cast_1106_wire)   $flowthrough
    $delay type_cast_1106_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) )
    # := [type_cast_1107_inst] (type_cast_1106_wire) (idxprom89_1108)    
    $buffering  $out type_cast_1107_inst idxprom89_1108 1
    $delay type_cast_1107_inst 1
    // 		arrayidx90 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 382
    &/ [array_obj_ref_1113_index_1_resize] (idxprom89_1108) (R_idxprom89_1112_resized) 
    $flowthrough 
    &/ [array_obj_ref_1113_index_1_rename] (R_idxprom89_1112_resized) (R_idxprom89_1112_scaled) 
    $flowthrough 
    +[array_obj_ref_1113_index_offset] (R_idxprom89_1112_scaled array_obj_ref_1113_constant_part_of_offset) (array_obj_ref_1113_final_offset)   
    $delay array_obj_ref_1113_index_offset 2
    &/ [array_obj_ref_1113_root_address_inst] (array_obj_ref_1113_final_offset) (array_obj_ref_1113_root_address) 
    $flowthrough 
    # := [addr_of_1114_final_reg] (array_obj_ref_1113_root_address) (arrayidx90_1115)    
    $buffering  $out addr_of_1114_final_reg arrayidx90_1115 1
    // 		tmp91 := ->(arrayidx90) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 383
    // ->(arrayidx90)
    &/ [ptr_deref_1118_base_resize] (arrayidx90_1115) (ptr_deref_1118_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1118_root_address_inst] (ptr_deref_1118_resized_base_address) (ptr_deref_1118_root_address) 
    $flowthrough 
    &/ [ptr_deref_1118_addr_0] (ptr_deref_1118_root_address) (ptr_deref_1118_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1118_load_0] $from memory_space_1 (ptr_deref_1118_word_address_0) (ptr_deref_1118_data_0) 
    $delay ptr_deref_1118_load_0 6
    &/ [ptr_deref_1118_gather_scatter] (ptr_deref_1118_data_0) (tmp91_1119) 
    $flowthrough 
    // 		$volatile shr93 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
    //  file prog.linked.opt.aa, line 384
    // ($bitcast ($int<32>) add86 )
    # := [type_cast_1122_inst] (add86_1094) (type_cast_1122_wire)   $flowthrough
    $delay type_cast_1122_inst 0
    // (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
    $S>>[ASHR_i32_i32_1126_inst] (type_cast_1122_wire type_cast_1125_wire_constant) (ASHR_i32_i32_1126_wire)   $flowthrough 
    $delay ASHR_i32_i32_1126_inst 0
    // ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) )
    # := [type_cast_1127_inst] (ASHR_i32_i32_1126_wire) (shr93_1128)   $flowthrough
    $delay type_cast_1127_inst 0
    // 		idxprom94 := ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) ) $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 385
    // ($cast ($int<64>) shr93 )
    $S:=$U [type_cast_1131_inst] (shr93_1128) (type_cast_1131_wire)   $flowthrough
    $delay type_cast_1131_inst 0
    // ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) )
    # := [type_cast_1132_inst] (type_cast_1131_wire) (idxprom94_1133)    
    $buffering  $out type_cast_1132_inst idxprom94_1133 1
    $delay type_cast_1132_inst 1
    // 		arrayidx95 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94]) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 386
    &/ [array_obj_ref_1138_index_1_resize] (idxprom94_1133) (R_idxprom94_1137_resized) 
    $flowthrough 
    &/ [array_obj_ref_1138_index_1_rename] (R_idxprom94_1137_resized) (R_idxprom94_1137_scaled) 
    $flowthrough 
    +[array_obj_ref_1138_index_offset] (R_idxprom94_1137_scaled array_obj_ref_1138_constant_part_of_offset) (array_obj_ref_1138_final_offset)   
    $delay array_obj_ref_1138_index_offset 2
    &/ [array_obj_ref_1138_root_address_inst] (array_obj_ref_1138_final_offset) (array_obj_ref_1138_root_address) 
    $flowthrough 
    # := [addr_of_1139_final_reg] (array_obj_ref_1138_root_address) (arrayidx95_1140)    
    $buffering  $out addr_of_1139_final_reg arrayidx95_1140 1
    // 		->(arrayidx95) := tmp91 $buffering 1// bits of buffering = 64. 
    //  file prog.linked.opt.aa, line 387
    // ->(arrayidx95)
    &/ [ptr_deref_1142_base_resize] (arrayidx95_1140) (ptr_deref_1142_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1142_root_address_inst] (ptr_deref_1142_resized_base_address) (ptr_deref_1142_root_address) 
    $flowthrough 
    &/ [ptr_deref_1142_addr_0] (ptr_deref_1142_root_address) (ptr_deref_1142_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1142_store_0] $to memory_space_0 (ptr_deref_1142_word_address_0 ptr_deref_1142_data_0) 
    $delay ptr_deref_1142_store_0 6
    &/ [ptr_deref_1142_gather_scatter] (tmp91_1119) (ptr_deref_1142_data_0) 
    $flowthrough 
    // 		$volatile add97 := (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
    //  file prog.linked.opt.aa, line 391
    // (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
    +[ADD_u32_u32_1151_inst] (kx_x0125_908 type_cast_1150_wire_constant) (add97_1152)   $flowthrough 
    $delay ADD_u32_u32_1151_inst 0
    // 		$volatile cmp100 := (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 )) $buffering 1
    //  file prog.linked.opt.aa, line 392
    // ($bitcast ($int<32>) add97 )
    # := [type_cast_1155_inst] (add97_1152) (type_cast_1155_wire)   $flowthrough
    $delay type_cast_1155_inst 0
    // ($bitcast ($int<32>) tmp2 )
    # := [type_cast_1157_inst] (tmp2_809) (type_cast_1157_wire)   $flowthrough
    $delay type_cast_1157_inst 0
    // (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 ))
    $S<$S[SLT_i32_u1_1158_inst] (type_cast_1155_wire type_cast_1157_wire) (cmp100_1159)   $flowthrough 
    $delay SLT_i32_u1_1158_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 393
    ==0? [if_stmt_1160_branch] (cmp100_1159)
    // 		$volatile inc := (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
    //  file prog.linked.opt.aa, line 400
    // (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1171_inst] (jx_x1124_915 type_cast_1170_wire_constant) (inc_1172)   $flowthrough 
    $delay ADD_u32_u32_1171_inst 0
    // 		tmp105 := ->(iNsTr_25) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 402
    // ->(iNsTr_25)
    &/ [ptr_deref_1183_base_resize] (iNsTr_25_1180) (ptr_deref_1183_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1183_root_address_inst] (ptr_deref_1183_resized_base_address) (ptr_deref_1183_root_address) 
    $flowthrough 
    +[ptr_deref_1183_addr_0] (ptr_deref_1183_root_address ptr_deref_1183_word_offset_0) (ptr_deref_1183_word_address_0)   
    $delay ptr_deref_1183_addr_0 2
    +[ptr_deref_1183_addr_1] (ptr_deref_1183_root_address ptr_deref_1183_word_offset_1) (ptr_deref_1183_word_address_1)   
    $delay ptr_deref_1183_addr_1 2
    +[ptr_deref_1183_addr_2] (ptr_deref_1183_root_address ptr_deref_1183_word_offset_2) (ptr_deref_1183_word_address_2)   
    $delay ptr_deref_1183_addr_2 2
    +[ptr_deref_1183_addr_3] (ptr_deref_1183_root_address ptr_deref_1183_word_offset_3) (ptr_deref_1183_word_address_3)   
    $delay ptr_deref_1183_addr_3 2
    $load [ptr_deref_1183_load_0] $from memory_space_2 (ptr_deref_1183_word_address_0) (ptr_deref_1183_data_0) 
    $delay ptr_deref_1183_load_0 6
    $load [ptr_deref_1183_load_1] $from memory_space_2 (ptr_deref_1183_word_address_1) (ptr_deref_1183_data_1) 
    $delay ptr_deref_1183_load_1 6
    $load [ptr_deref_1183_load_2] $from memory_space_2 (ptr_deref_1183_word_address_2) (ptr_deref_1183_data_2) 
    $delay ptr_deref_1183_load_2 6
    $load [ptr_deref_1183_load_3] $from memory_space_2 (ptr_deref_1183_word_address_3) (ptr_deref_1183_data_3) 
    $delay ptr_deref_1183_load_3 6
    &/ [ptr_deref_1183_gather_scatter] (ptr_deref_1183_data_3 ptr_deref_1183_data_2 ptr_deref_1183_data_1 ptr_deref_1183_data_0) (tmp105_1184) 
    $flowthrough 
    // 		$volatile add108 := (tmp105 + mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 403
    // (tmp105 + mul24121)
    +[ADD_u32_u32_1188_inst] (tmp105_1184 mul24121_868) (add108_1189)   $flowthrough 
    $delay ADD_u32_u32_1188_inst 0
    // 		$volatile cmp109 := (inc == add108) $buffering 1
    //  file prog.linked.opt.aa, line 404
    // (inc == add108)
    ==[EQ_u32_u1_1193_inst] (inc_1172 add108_1189) (cmp109_1194)   $flowthrough 
    $delay EQ_u32_u1_1193_inst 0
    // 		inc114 := ($cast ($uint<32>) cmp109 ) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 405
    // ($cast ($uint<32>) cmp109 )
    # := [type_cast_1197_inst] (cmp109_1194) (inc114_1198)    
    $buffering  $out type_cast_1197_inst inc114_1198 1
    $delay type_cast_1197_inst 1
    // 		$volatile inc114x_xix_x1 := (inc114 + ix_x1126) $buffering 1
    //  file prog.linked.opt.aa, line 406
    // (inc114 + ix_x1126)
    +[ADD_u32_u32_1202_inst] (inc114_1198 ix_x1126_901) (inc114x_xix_x1_1203)   $flowthrough 
    $delay ADD_u32_u32_1202_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 407
    ==0? [if_stmt_1204_branch] (cmp109_1194)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 415
    // 			$phi jx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) jx_x1124 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 416
    // ($cast ($uint<32>) inc )
    # := [type_cast_1219_inst] (inc_1172) (type_cast_1219_wire)    
    $buffering  $out type_cast_1219_inst type_cast_1219_wire 1
    $delay type_cast_1219_inst 1
    // ($cast ($uint<32>) jx_x1124 )
    # := [type_cast_1221_inst] (jx_x1124_915) (type_cast_1221_wire)    
    $buffering  $out type_cast_1221_inst type_cast_1221_wire 1
    $delay type_cast_1221_inst 1
    $phi [phi_stmt_1213] (type_cast_1217_wire_constant type_cast_1219_wire type_cast_1221_wire) ( jx_x0_1213 ) 
    // 			$phi kx_x1 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) add97 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 418
    // ($cast ($uint<32>) add97 )
    # := [type_cast_1231_inst] (add97_1152) (type_cast_1231_wire)    
    $buffering  $out type_cast_1231_inst type_cast_1231_wire 1
    $delay type_cast_1231_inst 1
    $phi [phi_stmt_1222] (type_cast_1226_wire_constant type_cast_1229_wire_constant type_cast_1231_wire) ( kx_x1_1222 ) 
    // 			$phi ix_x0 := 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen111_ifx_xend116 			  ($cast ($uint<32>) inc114x_xix_x1 ) $on   ifx_xthen102_ifx_xend116 			  ($cast ($uint<32>) ix_x1126 ) $on   ifx_xend_ifx_xend116 
    // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 420
    // ($cast ($uint<32>) inc114x_xix_x1 )
    # := [type_cast_1235_inst] (inc114x_xix_x1_1203) (type_cast_1235_wire)    
    $buffering  $out type_cast_1235_inst type_cast_1235_wire 1
    $delay type_cast_1235_inst 1
    // ($cast ($uint<32>) inc114x_xix_x1 )
    # := [type_cast_1237_inst] (inc114x_xix_x1_1203) (type_cast_1237_wire)    
    $buffering  $out type_cast_1237_inst type_cast_1237_wire 1
    $delay type_cast_1237_inst 1
    // ($cast ($uint<32>) ix_x1126 )
    # := [type_cast_1239_inst] (ix_x1126_901) (type_cast_1239_wire)    
    $buffering  $out type_cast_1239_inst type_cast_1239_wire 1
    $delay type_cast_1239_inst 1
    $phi [phi_stmt_1232] (type_cast_1235_wire type_cast_1237_wire type_cast_1239_wire) ( ix_x0_1232 ) 
    // 		tmp22 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
    //  file prog.linked.opt.aa, line 424
    // ->(iNsTr_23)
    &/ [ptr_deref_1251_base_resize] (iNsTr_23_1248) (ptr_deref_1251_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1251_root_address_inst] (ptr_deref_1251_resized_base_address) (ptr_deref_1251_root_address) 
    $flowthrough 
    +[ptr_deref_1251_addr_0] (ptr_deref_1251_root_address ptr_deref_1251_word_offset_0) (ptr_deref_1251_word_address_0)   
    $delay ptr_deref_1251_addr_0 2
    +[ptr_deref_1251_addr_1] (ptr_deref_1251_root_address ptr_deref_1251_word_offset_1) (ptr_deref_1251_word_address_1)   
    $delay ptr_deref_1251_addr_1 2
    +[ptr_deref_1251_addr_2] (ptr_deref_1251_root_address ptr_deref_1251_word_offset_2) (ptr_deref_1251_word_address_2)   
    $delay ptr_deref_1251_addr_2 2
    +[ptr_deref_1251_addr_3] (ptr_deref_1251_root_address ptr_deref_1251_word_offset_3) (ptr_deref_1251_word_address_3)   
    $delay ptr_deref_1251_addr_3 2
    $load [ptr_deref_1251_load_0] $from memory_space_2 (ptr_deref_1251_word_address_0) (ptr_deref_1251_data_0) 
    $delay ptr_deref_1251_load_0 6
    $load [ptr_deref_1251_load_1] $from memory_space_2 (ptr_deref_1251_word_address_1) (ptr_deref_1251_data_1) 
    $delay ptr_deref_1251_load_1 6
    $load [ptr_deref_1251_load_2] $from memory_space_2 (ptr_deref_1251_word_address_2) (ptr_deref_1251_data_2) 
    $delay ptr_deref_1251_load_2 6
    $load [ptr_deref_1251_load_3] $from memory_space_2 (ptr_deref_1251_word_address_3) (ptr_deref_1251_data_3) 
    $delay ptr_deref_1251_load_3 6
    &/ [ptr_deref_1251_gather_scatter] (ptr_deref_1251_data_3 ptr_deref_1251_data_2 ptr_deref_1251_data_1 ptr_deref_1251_data_0) (tmp22_1252) 
    $flowthrough 
    // 		$volatile add := (tmp22 + mul24121) $buffering 1
    //  file prog.linked.opt.aa, line 425
    // (tmp22 + mul24121)
    +[ADD_u32_u32_1256_inst] (tmp22_1252 mul24121_868) (add_1257)   $flowthrough 
    $delay ADD_u32_u32_1256_inst 0
    // 		$volatile cmp := (ix_x0 < add) $buffering 1
    //  file prog.linked.opt.aa, line 426
    // (ix_x0 < add)
    <[ULT_u32_u1_1261_inst] (ix_x0_1232 add_1257) (cmp_1262)   $flowthrough 
    $delay ULT_u32_u1_1261_inst 0
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 427
    ==0? [if_stmt_1263_branch] (cmp_1262)
    // 		Block0_complete := call $buffering 1// bits of buffering = 8. 
    //  file prog.linked.opt.aa, line 438
    // Block0_complete
    $ioport $out [WPIPE_Block0_complete_1273_inst]  (call_789) (Block0_complete) 
  }
  // end data-path
  // 		call := Block0_starting $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 292
  // Block0_starting
  RPIPE_Block0_starting_788_inst <=> (branch_block_stmt_786/assign_stmt_789/RPIPE_Block0_starting_788_Sample/rr branch_block_stmt_786/assign_stmt_789/RPIPE_Block0_starting_788_Update/cr) (branch_block_stmt_786/assign_stmt_789/RPIPE_Block0_starting_788_Sample/ra branch_block_stmt_786/assign_stmt_789/RPIPE_Block0_starting_788_Update/ca)
  // 		tmp := pad $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 294
  // pad
  LOAD_pad_792_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Update/LOAD_pad_792_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Update/LOAD_pad_792_Merge/merge_ack)
  LOAD_pad_792_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/LOAD_pad_792_Update/word_access_complete/word_0/ca)
  // 		conv := ($cast ($uint<32>) tmp ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 295
  // tmp
  // ($cast ($uint<32>) tmp )
  type_cast_796_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/type_cast_796_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/type_cast_796_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/type_cast_796_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/type_cast_796_Update/ca)
  // 		tmp2 := ->(iNsTr_2) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 297
  // iNsTr_2
  ptr_deref_808_base_resize <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_base_addr_resize/base_resize_ack)
  ptr_deref_808_root_address_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_base_plus_offset/sum_rename_ack)
  ptr_deref_808_addr_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_0_Update/ca)
  ptr_deref_808_addr_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_1_Update/ca)
  ptr_deref_808_addr_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_2_Update/ca)
  ptr_deref_808_addr_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_word_addrgen_3_Update/ca)
  ptr_deref_808_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/ptr_deref_808_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/ptr_deref_808_Merge/merge_ack)
  ptr_deref_808_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_0/ca)
  ptr_deref_808_load_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_1/ca)
  ptr_deref_808_load_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_2/ca)
  ptr_deref_808_load_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_808_Update/word_access_complete/word_3/ca)
  // 		tmp4 := ->(iNsTr_3) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 299
  // iNsTr_3
  ptr_deref_820_base_resize <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_base_addr_resize/base_resize_ack)
  ptr_deref_820_root_address_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_base_plus_offset/sum_rename_ack)
  ptr_deref_820_addr_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_0_Update/ca)
  ptr_deref_820_addr_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_1_Update/ca)
  ptr_deref_820_addr_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_2_Update/ca)
  ptr_deref_820_addr_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_word_addrgen_3_Update/ca)
  ptr_deref_820_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/ptr_deref_820_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/ptr_deref_820_Merge/merge_ack)
  ptr_deref_820_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_0/ca)
  ptr_deref_820_load_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_1/ca)
  ptr_deref_820_load_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_2/ca)
  ptr_deref_820_load_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_820_Update/word_access_complete/word_3/ca)
  // 		tmp8 := ->(iNsTr_4) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 301
  // iNsTr_4
  ptr_deref_832_base_resize <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_base_addr_resize/base_resize_ack)
  ptr_deref_832_root_address_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_base_plus_offset/sum_rename_ack)
  ptr_deref_832_addr_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_word_addrgen/root_register_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_word_addrgen/root_register_ack)
  ptr_deref_832_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Update/ptr_deref_832_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Update/ptr_deref_832_Merge/merge_ack)
  ptr_deref_832_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_832_Update/word_access_complete/word_0/ca)
  // 		tmp10 := ->(iNsTr_5) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 303
  // iNsTr_5
  ptr_deref_844_base_resize <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_base_addr_resize/base_resize_ack)
  ptr_deref_844_root_address_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_base_plus_offset/sum_rename_ack)
  ptr_deref_844_addr_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_word_addrgen/root_register_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_word_addrgen/root_register_ack)
  ptr_deref_844_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Update/ptr_deref_844_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Update/ptr_deref_844_Merge/merge_ack)
  ptr_deref_844_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_844_Update/word_access_complete/word_0/ca)
  // 		$volatile mul19 := (tmp10 * tmp8) $buffering 1
  //  file prog.linked.opt.aa, line 304
  // (tmp10 * tmp8)
  // tmp10
  // tmp8
  // 		tmp22120 := ->(iNsTr_6) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 306
  // iNsTr_6
  ptr_deref_861_base_resize <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_base_addr_resize/base_resize_ack)
  ptr_deref_861_root_address_inst <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_base_plus_offset/sum_rename_ack)
  ptr_deref_861_addr_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_0_Update/ca)
  ptr_deref_861_addr_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_1_Update/ca)
  ptr_deref_861_addr_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_2_Update/ca)
  ptr_deref_861_addr_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_word_addrgen_3_Update/ca)
  ptr_deref_861_gather_scatter <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/ptr_deref_861_Merge/merge_req) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/ptr_deref_861_Merge/merge_ack)
  ptr_deref_861_load_0 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_0/ca)
  ptr_deref_861_load_1 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_1/ca)
  ptr_deref_861_load_2 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_2/ca)
  ptr_deref_861_load_3 <=> (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_793_to_assign_stmt_879/ptr_deref_861_Update/word_access_complete/word_3/ca)
  // 		$volatile mul24121 := (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 307
  // (conv << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // conv
  // 		$volatile add122 := (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121) $buffering 1
  //  file prog.linked.opt.aa, line 308
  // (($bitcast ($uint<32>) _b00000000000000000000000000000000  ) - mul24121)
  // mul24121
  // 		$volatile cmp123 := (tmp22120 == add122) $buffering 1
  //  file prog.linked.opt.aa, line 309
  // (tmp22120 == add122)
  // tmp22120
  // add122
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 310
  if_stmt_880_branch <=> (branch_block_stmt_786/if_stmt_880_eval_test/branch_req) (branch_block_stmt_786/if_stmt_880_else_link/else_choice_transition branch_block_stmt_786/if_stmt_880_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 315
  // 		$volatile sub := (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  )) $buffering 1
  //  file prog.linked.opt.aa, line 317
  // (conv + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // conv
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 319
  // ($cast ($uint<32>) tmp22120 )
  type_cast_898_inst <=> (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_898/SplitProtocol/Sample/rr branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_898/SplitProtocol/Update/cr) (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_898/SplitProtocol/Sample/ra branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_898/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tmp22 )
  type_cast_900_inst <=> (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_900/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_900/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_900/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_sources/type_cast_900/SplitProtocol/Update/ca)
  phi_stmt_895 <=> (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_req branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_895/phi_stmt_895_req) (branch_block_stmt_786/merge_stmt_894_PhiAck/phi_stmt_895_ack)
  // ($cast ($uint<32>) ix_x0 )
  type_cast_907_inst <=> (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_sources/type_cast_907/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_sources/type_cast_907/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_sources/type_cast_907/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_sources/type_cast_907/SplitProtocol/Update/ca)
  phi_stmt_901 <=> (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_req branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_901/phi_stmt_901_req) (branch_block_stmt_786/merge_stmt_894_PhiAck/phi_stmt_901_ack)
  // ($cast ($uint<32>) kx_x1 )
  type_cast_914_inst <=> (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_sources/type_cast_914/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_sources/type_cast_914/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_sources/type_cast_914/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_sources/type_cast_914/SplitProtocol/Update/ca)
  phi_stmt_908 <=> (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_req branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_908/phi_stmt_908_req) (branch_block_stmt_786/merge_stmt_894_PhiAck/phi_stmt_908_ack)
  // ($cast ($uint<32>) jx_x0 )
  type_cast_921_inst <=> (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_sources/type_cast_921/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_sources/type_cast_921/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_sources/type_cast_921/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_sources/type_cast_921/SplitProtocol/Update/ca)
  phi_stmt_915 <=> (branch_block_stmt_786/bbx_xnph_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_req branch_block_stmt_786/ifx_xend116_whilex_xbody_PhiReq/phi_stmt_915/phi_stmt_915_req) (branch_block_stmt_786/merge_stmt_894_PhiAck/phi_stmt_915_ack)
  // 		$volatile cmp28 := (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub )) $buffering 1
  //  file prog.linked.opt.aa, line 329
  // (($bitcast ($int<32>) ix_x1126 ) > ($bitcast ($int<32>) sub ))
  // ix_x1126
  // sub
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 330
  if_stmt_931_branch <=> (branch_block_stmt_786/if_stmt_931_eval_test/branch_req) (branch_block_stmt_786/if_stmt_931_else_link/else_choice_transition branch_block_stmt_786/if_stmt_931_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 335
  // 		$volatile sub34 := (sub + tmp31) $buffering 1
  //  file prog.linked.opt.aa, line 337
  // (sub + tmp31)
  // sub
  // tmp31
  // 		$volatile cmp35x_xnot := (ix_x1126 <= sub34) $buffering 1
  //  file prog.linked.opt.aa, line 338
  // (ix_x1126 <= sub34)
  // ix_x1126
  // sub34
  // 		$volatile cmp41 := (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub )) $buffering 1
  //  file prog.linked.opt.aa, line 339
  // (($bitcast ($int<32>) jx_x1124 ) > ($bitcast ($int<32>) sub ))
  // jx_x1124
  // sub
  // 		$volatile orx_xcond := (cmp35x_xnot & cmp41) $buffering 1
  //  file prog.linked.opt.aa, line 340
  // (cmp35x_xnot & cmp41)
  // cmp35x_xnot
  // cmp41
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 341
  if_stmt_960_branch <=> (branch_block_stmt_786/if_stmt_960_eval_test/branch_req) (branch_block_stmt_786/if_stmt_960_else_link/else_choice_transition branch_block_stmt_786/if_stmt_960_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 346
  // 		tmp45 := ->(iNsTr_17) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 349
  // iNsTr_17
  ptr_deref_977_base_resize <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_base_addr_resize/base_resize_ack)
  ptr_deref_977_root_address_inst <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_base_plus_offset/sum_rename_ack)
  ptr_deref_977_addr_0 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_0_Update/ca)
  ptr_deref_977_addr_1 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_1_Update/ca)
  ptr_deref_977_addr_2 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_2_Update/ca)
  ptr_deref_977_addr_3 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_word_addrgen_3_Update/ca)
  ptr_deref_977_gather_scatter <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/ptr_deref_977_Merge/merge_req) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/ptr_deref_977_Merge/merge_ack)
  ptr_deref_977_load_0 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_0/ca)
  ptr_deref_977_load_1 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_1/ca)
  ptr_deref_977_load_2 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_2/ca)
  ptr_deref_977_load_3 <=> (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_974_to_assign_stmt_988/ptr_deref_977_Update/word_access_complete/word_3/ca)
  // 		$volatile sub48 := (sub + tmp45) $buffering 1
  //  file prog.linked.opt.aa, line 350
  // (sub + tmp45)
  // sub
  // tmp45
  // 		$volatile cmp49 := (jx_x1124 > sub48) $buffering 1
  //  file prog.linked.opt.aa, line 351
  // (jx_x1124 > sub48)
  // jx_x1124
  // sub48
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 352
  if_stmt_989_branch <=> (branch_block_stmt_786/if_stmt_989_eval_test/branch_req) (branch_block_stmt_786/if_stmt_989_else_link/else_choice_transition branch_block_stmt_786/if_stmt_989_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 357
  // 		$volatile mul55 := (jx_x1124 * tmp8) $buffering 1
  //  file prog.linked.opt.aa, line 359
  // (jx_x1124 * tmp8)
  // jx_x1124
  // tmp8
  // 		$volatile mul59 := (ix_x1126 * mul19) $buffering 1
  //  file prog.linked.opt.aa, line 360
  // (ix_x1126 * mul19)
  // ix_x1126
  // mul19
  // 		$volatile add56 := (kx_x0125 + mul55) $buffering 1
  //  file prog.linked.opt.aa, line 361
  // (kx_x0125 + mul55)
  // kx_x0125
  // mul55
  // 		$volatile add60 := (add56 + mul59) $buffering 1
  //  file prog.linked.opt.aa, line 362
  // (add56 + mul59)
  // add56
  // mul59
  // 		$volatile shr := ($bitcast ($uint<32>) (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 363
  // (($bitcast ($int<32>) add60 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // add60
  // 		idxprom := ($bitcast ($uint<64>) ($cast ($int<64>) shr ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 364
  // shr
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr ) )
  type_cast_1029_inst <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/type_cast_1029_Sample/rr branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/type_cast_1029_Update/cr) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/type_cast_1029_Sample/ra branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/type_cast_1029_Update/ca)
  // 		arrayidx := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 365
  // idxprom
  array_obj_ref_1035_index_1_resize <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_index_resize_1/index_resize_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_index_resize_1/index_resize_ack)
  array_obj_ref_1035_index_1_rename <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_index_scale_1/scale_rename_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_index_scale_1/scale_rename_ack)
  array_obj_ref_1035_index_offset <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_final_index_sum_regn_Sample/req branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_final_index_sum_regn_Update/req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_final_index_sum_regn_Sample/ack branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_final_index_sum_regn_Update/ack)
  array_obj_ref_1035_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/array_obj_ref_1035_base_plus_offset/sum_rename_ack)
  addr_of_1036_final_reg <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/addr_of_1036_request/req branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/addr_of_1036_complete/req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/addr_of_1036_request/ack branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/addr_of_1036_complete/ack)
  // 		->(arrayidx) := ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 366
  // arrayidx
  ptr_deref_1039_base_resize <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_base_addr_resize/base_resize_ack)
  ptr_deref_1039_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_base_plus_offset/sum_rename_ack)
  ptr_deref_1039_addr_0 <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_word_addrgen/root_register_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_word_addrgen/root_register_ack)
  ptr_deref_1039_gather_scatter <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Sample/ptr_deref_1039_Split/split_req) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Sample/ptr_deref_1039_Split/split_ack)
  ptr_deref_1039_store_0 <=> (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_1000_to_assign_stmt_1042/ptr_deref_1039_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 368
  // 		$volatile sub67 := (jx_x1124 - conv) $buffering 1
  //  file prog.linked.opt.aa, line 370
  // (jx_x1124 - conv)
  // jx_x1124
  // conv
  // 		$volatile sub73 := (ix_x1126 - conv) $buffering 1
  //  file prog.linked.opt.aa, line 371
  // (ix_x1126 - conv)
  // ix_x1126
  // conv
  // 		$volatile mul74 := (tmp4 * sub73) $buffering 1
  //  file prog.linked.opt.aa, line 372
  // (tmp4 * sub73)
  // tmp4
  // sub73
  // 		$volatile tmp118 := (mul74 + sub67) $buffering 1
  //  file prog.linked.opt.aa, line 373
  // (mul74 + sub67)
  // mul74
  // sub67
  // 		$volatile tmp119 := (tmp118 * tmp2) $buffering 1
  //  file prog.linked.opt.aa, line 374
  // (tmp118 * tmp2)
  // tmp118
  // tmp2
  // 		$volatile add75 := (tmp119 + kx_x0125) $buffering 1
  //  file prog.linked.opt.aa, line 375
  // (tmp119 + kx_x0125)
  // tmp119
  // kx_x0125
  // 		$volatile mul81 := (jx_x1124 * tmp8) $buffering 1
  //  file prog.linked.opt.aa, line 376
  // (jx_x1124 * tmp8)
  // jx_x1124
  // tmp8
  // 		$volatile mul85 := (ix_x1126 * mul19) $buffering 1
  //  file prog.linked.opt.aa, line 377
  // (ix_x1126 * mul19)
  // ix_x1126
  // mul19
  // 		$volatile add82 := (kx_x0125 + mul81) $buffering 1
  //  file prog.linked.opt.aa, line 378
  // (kx_x0125 + mul81)
  // kx_x0125
  // mul81
  // 		$volatile add86 := (add82 + mul85) $buffering 1
  //  file prog.linked.opt.aa, line 379
  // (add82 + mul85)
  // add82
  // mul85
  // 		$volatile shr88 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 380
  // (($bitcast ($int<32>) add75 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // add75
  // 		idxprom89 := ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 381
  // shr88
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr88 ) )
  type_cast_1107_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1107_Sample/rr branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1107_Update/cr) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1107_Sample/ra branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1107_Update/ca)
  // 		arrayidx90 := @(T[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom89]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 382
  // idxprom89
  array_obj_ref_1113_index_1_resize <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_index_resize_1/index_resize_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_index_resize_1/index_resize_ack)
  array_obj_ref_1113_index_1_rename <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_index_scale_1/scale_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_index_scale_1/scale_rename_ack)
  array_obj_ref_1113_index_offset <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_final_index_sum_regn_Sample/req branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_final_index_sum_regn_Update/req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_final_index_sum_regn_Sample/ack branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_final_index_sum_regn_Update/ack)
  array_obj_ref_1113_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1113_base_plus_offset/sum_rename_ack)
  addr_of_1114_final_reg <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1114_request/req branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1114_complete/req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1114_request/ack branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1114_complete/ack)
  // 		tmp91 := ->(arrayidx90) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 383
  // arrayidx90
  ptr_deref_1118_base_resize <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_base_addr_resize/base_resize_ack)
  ptr_deref_1118_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_base_plus_offset/sum_rename_ack)
  ptr_deref_1118_addr_0 <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_word_addrgen/root_register_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_word_addrgen/root_register_ack)
  ptr_deref_1118_gather_scatter <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Update/ptr_deref_1118_Merge/merge_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Update/ptr_deref_1118_Merge/merge_ack)
  ptr_deref_1118_load_0 <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1118_Update/word_access_complete/word_0/ca)
  // 		$volatile shr93 := ($bitcast ($uint<32>) (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) )) ) $buffering 1
  //  file prog.linked.opt.aa, line 384
  // (($bitcast ($int<32>) add86 ) >> ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000010  ) ))
  // add86
  // 		idxprom94 := ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) ) $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 385
  // shr93
  // ($bitcast ($uint<64>) ($cast ($int<64>) shr93 ) )
  type_cast_1132_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1132_Sample/rr branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1132_Update/cr) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1132_Sample/ra branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/type_cast_1132_Update/ca)
  // 		arrayidx95 := @(R[($bitcast ($uint<32>) _b00000000000000000000000000000000  )][idxprom94]) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 386
  // idxprom94
  array_obj_ref_1138_index_1_resize <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_index_resize_1/index_resize_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_index_resize_1/index_resize_ack)
  array_obj_ref_1138_index_1_rename <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_index_scale_1/scale_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_index_scale_1/scale_rename_ack)
  array_obj_ref_1138_index_offset <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_final_index_sum_regn_Sample/req branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_final_index_sum_regn_Update/req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_final_index_sum_regn_Sample/ack branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_final_index_sum_regn_Update/ack)
  array_obj_ref_1138_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/array_obj_ref_1138_base_plus_offset/sum_rename_ack)
  addr_of_1139_final_reg <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1139_request/req branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1139_complete/req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1139_request/ack branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/addr_of_1139_complete/ack)
  // 		->(arrayidx95) := tmp91 $buffering 1// bits of buffering = 64. 
  //  file prog.linked.opt.aa, line 387
  // tmp91
  // arrayidx95
  ptr_deref_1142_base_resize <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_base_addr_resize/base_resize_ack)
  ptr_deref_1142_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_base_plus_offset/sum_rename_ack)
  ptr_deref_1142_addr_0 <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_word_addrgen/root_register_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_word_addrgen/root_register_ack)
  ptr_deref_1142_gather_scatter <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Sample/ptr_deref_1142_Split/split_req) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Sample/ptr_deref_1142_Split/split_ack)
  ptr_deref_1142_store_0 <=> (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_1049_to_assign_stmt_1144/ptr_deref_1142_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 389
  // 		$volatile add97 := (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  )) $buffering 1
  //  file prog.linked.opt.aa, line 391
  // (kx_x0125 + ($bitcast ($uint<32>) _b00000000000000000000000000000100  ))
  // kx_x0125
  // 		$volatile cmp100 := (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 )) $buffering 1
  //  file prog.linked.opt.aa, line 392
  // (($bitcast ($int<32>) add97 ) < ($bitcast ($int<32>) tmp2 ))
  // add97
  // tmp2
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 393
  if_stmt_1160_branch <=> (branch_block_stmt_786/if_stmt_1160_eval_test/branch_req) (branch_block_stmt_786/if_stmt_1160_else_link/else_choice_transition branch_block_stmt_786/if_stmt_1160_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 398
  // 		$volatile inc := (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  )) $buffering 1
  //  file prog.linked.opt.aa, line 400
  // (jx_x1124 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  // jx_x1124
  // 		tmp105 := ->(iNsTr_25) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 402
  // iNsTr_25
  ptr_deref_1183_base_resize <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_base_addr_resize/base_resize_ack)
  ptr_deref_1183_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_base_plus_offset/sum_rename_ack)
  ptr_deref_1183_addr_0 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_0_Update/ca)
  ptr_deref_1183_addr_1 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_1_Update/ca)
  ptr_deref_1183_addr_2 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_2_Update/ca)
  ptr_deref_1183_addr_3 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_word_addrgen_3_Update/ca)
  ptr_deref_1183_gather_scatter <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/ptr_deref_1183_Merge/merge_req) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/ptr_deref_1183_Merge/merge_ack)
  ptr_deref_1183_load_0 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_0/ca)
  ptr_deref_1183_load_1 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_1/ca)
  ptr_deref_1183_load_2 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_2/ca)
  ptr_deref_1183_load_3 <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/ptr_deref_1183_Update/word_access_complete/word_3/ca)
  // 		$volatile add108 := (tmp105 + mul24121) $buffering 1
  //  file prog.linked.opt.aa, line 403
  // (tmp105 + mul24121)
  // tmp105
  // mul24121
  // 		$volatile cmp109 := (inc == add108) $buffering 1
  //  file prog.linked.opt.aa, line 404
  // (inc == add108)
  // inc
  // add108
  // 		inc114 := ($cast ($uint<32>) cmp109 ) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 405
  // cmp109
  // ($cast ($uint<32>) cmp109 )
  type_cast_1197_inst <=> (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/type_cast_1197_Sample/rr branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/type_cast_1197_Update/cr) (branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/type_cast_1197_Sample/ra branch_block_stmt_786/assign_stmt_1172_to_assign_stmt_1203/type_cast_1197_Update/ca)
  // 		$volatile inc114x_xix_x1 := (inc114 + ix_x1126) $buffering 1
  //  file prog.linked.opt.aa, line 406
  // (inc114 + ix_x1126)
  // inc114
  // ix_x1126
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 407
  if_stmt_1204_branch <=> (branch_block_stmt_786/if_stmt_1204_eval_test/branch_req) (branch_block_stmt_786/if_stmt_1204_else_link/else_choice_transition branch_block_stmt_786/if_stmt_1204_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 412
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 415
  // ($cast ($uint<32>) inc )
  type_cast_1219_inst <=> (branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1219/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1219/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1219/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1219/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) jx_x1124 )
  type_cast_1221_inst <=> (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1221/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1221/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1221/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_sources/type_cast_1221/SplitProtocol/Update/ca)
  phi_stmt_1213 <=> (branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_req branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_req branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1213/phi_stmt_1213_req) (branch_block_stmt_786/merge_stmt_1212_PhiAck/phi_stmt_1213_ack)
  // ($cast ($uint<32>) add97 )
  type_cast_1231_inst <=> (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_sources/type_cast_1231/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_sources/type_cast_1231/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_sources/type_cast_1231/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_sources/type_cast_1231/SplitProtocol/Update/ca)
  phi_stmt_1222 <=> (branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_req branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_req branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1222/phi_stmt_1222_req) (branch_block_stmt_786/merge_stmt_1212_PhiAck/phi_stmt_1222_ack)
  // ($cast ($uint<32>) inc114x_xix_x1 )
  type_cast_1235_inst <=> (branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1235/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1235/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1235/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1235/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) inc114x_xix_x1 )
  type_cast_1237_inst <=> (branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1237/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1237/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1237/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1237/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) ix_x1126 )
  type_cast_1239_inst <=> (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1239/SplitProtocol/Sample/rr branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1239/SplitProtocol/Update/cr) (branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1239/SplitProtocol/Sample/ra branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_sources/type_cast_1239/SplitProtocol/Update/ca)
  phi_stmt_1232 <=> (branch_block_stmt_786/ifx_xthen111_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_req branch_block_stmt_786/ifx_xthen102_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_req branch_block_stmt_786/ifx_xend_ifx_xend116_PhiReq/phi_stmt_1232/phi_stmt_1232_req) (branch_block_stmt_786/merge_stmt_1212_PhiAck/phi_stmt_1232_ack)
  // 		tmp22 := ->(iNsTr_23) $buffering 1// bits of buffering = 32. 
  //  file prog.linked.opt.aa, line 424
  // iNsTr_23
  ptr_deref_1251_base_resize <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_base_addr_resize/base_resize_req) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_base_addr_resize/base_resize_ack)
  ptr_deref_1251_root_address_inst <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_base_plus_offset/sum_rename_req) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_base_plus_offset/sum_rename_ack)
  ptr_deref_1251_addr_0 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_0_Sample/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_0_Update/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_0_Sample/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_0_Update/ca)
  ptr_deref_1251_addr_1 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_1_Sample/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_1_Update/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_1_Sample/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_1_Update/ca)
  ptr_deref_1251_addr_2 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_2_Sample/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_2_Update/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_2_Sample/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_2_Update/ca)
  ptr_deref_1251_addr_3 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_3_Sample/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_3_Update/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_3_Sample/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_word_addrgen_3_Update/ca)
  ptr_deref_1251_gather_scatter <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/ptr_deref_1251_Merge/merge_req) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/ptr_deref_1251_Merge/merge_ack)
  ptr_deref_1251_load_0 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_0/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_0/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_0/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_0/ca)
  ptr_deref_1251_load_1 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_1/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_1/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_1/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_1/ca)
  ptr_deref_1251_load_2 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_2/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_2/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_2/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_2/ca)
  ptr_deref_1251_load_3 <=> (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_3/rr branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_3/cr) (branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Sample/word_access_start/word_3/ra branch_block_stmt_786/assign_stmt_1248_to_assign_stmt_1262/ptr_deref_1251_Update/word_access_complete/word_3/ca)
  // 		$volatile add := (tmp22 + mul24121) $buffering 1
  //  file prog.linked.opt.aa, line 425
  // (tmp22 + mul24121)
  // tmp22
  // mul24121
  // 		$volatile cmp := (ix_x0 < add) $buffering 1
  //  file prog.linked.opt.aa, line 426
  // (ix_x0 < add)
  // ix_x0
  // add
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 427
  if_stmt_1263_branch <=> (branch_block_stmt_786/if_stmt_1263_eval_test/branch_req) (branch_block_stmt_786/if_stmt_1263_else_link/else_choice_transition branch_block_stmt_786/if_stmt_1263_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 432
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 435
  // 		Block0_complete := call $buffering 1// bits of buffering = 8. 
  //  file prog.linked.opt.aa, line 438
  // call
  // Block0_complete
  WPIPE_Block0_complete_1273_inst <=> (branch_block_stmt_786/assign_stmt_1275/WPIPE_Block0_complete_1273_Sample/req branch_block_stmt_786/assign_stmt_1275/WPIPE_Block0_complete_1273_Update/req) (branch_block_stmt_786/assign_stmt_1275/WPIPE_Block0_complete_1273_Sample/ack branch_block_stmt_786/assign_stmt_1275/WPIPE_Block0_complete_1273_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 440
}
